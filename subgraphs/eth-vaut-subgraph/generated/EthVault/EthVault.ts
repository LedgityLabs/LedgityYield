// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class EpochOpened extends ethereum.Event {
  get params(): EpochOpened__Params {
    return new EpochOpened__Params(this);
  }
}

export class EpochOpened__Params {
  _event: EpochOpened;

  constructor(event: EpochOpened) {
    this._event = event;
  }

  get epochNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class EpochRunning extends ethereum.Event {
  get params(): EpochRunning__Params {
    return new EpochRunning__Params(this);
  }
}

export class EpochRunning__Params {
  _event: EpochRunning;

  constructor(event: EpochRunning) {
    this._event = event;
  }

  get epochNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get totalValueLocked(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EpochTerminated extends ethereum.Event {
  get params(): EpochTerminated__Params {
    return new EpochTerminated__Params(this);
  }
}

export class EpochTerminated__Params {
  _event: EpochTerminated;

  constructor(event: EpochTerminated) {
    this._event = event;
  }

  get epochNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get timestamp(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FundWalletChanged extends ethereum.Event {
  get params(): FundWalletChanged__Params {
    return new FundWalletChanged__Params(this);
  }
}

export class FundWalletChanged__Params {
  _event: FundWalletChanged;

  constructor(event: FundWalletChanged) {
    this._event = event;
  }

  get oldFundWallet(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFundWallet(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FundsTransferredToFundWallet extends ethereum.Event {
  get params(): FundsTransferredToFundWallet__Params {
    return new FundsTransferredToFundWallet__Params(this);
  }
}

export class FundsTransferredToFundWallet__Params {
  _event: FundsTransferredToFundWallet;

  constructor(event: FundsTransferredToFundWallet) {
    this._event = event;
  }

  get amount(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get epochId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class LockingContract extends ethereum.Event {
  get params(): LockingContract__Params {
    return new LockingContract__Params(this);
  }
}

export class LockingContract__Params {
  _event: LockingContract;

  constructor(event: LockingContract) {
    this._event = event;
  }

  get locked(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class MinimumStakeChanged extends ethereum.Event {
  get params(): MinimumStakeChanged__Params {
    return new MinimumStakeChanged__Params(this);
  }
}

export class MinimumStakeChanged__Params {
  _event: MinimumStakeChanged;

  constructor(event: MinimumStakeChanged) {
    this._event = event;
  }

  get oldMinimumStake(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMinimumStake(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RewardsAllocated extends ethereum.Event {
  get params(): RewardsAllocated__Params {
    return new RewardsAllocated__Params(this);
  }
}

export class RewardsAllocated__Params {
  _event: RewardsAllocated;

  constructor(event: RewardsAllocated) {
    this._event = event;
  }

  get epochNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get rewardAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RewardsClaimabilityChanged extends ethereum.Event {
  get params(): RewardsClaimabilityChanged__Params {
    return new RewardsClaimabilityChanged__Params(this);
  }
}

export class RewardsClaimabilityChanged__Params {
  _event: RewardsClaimabilityChanged;

  constructor(event: RewardsClaimabilityChanged) {
    this._event = event;
  }

  get claimable(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class UserDeposit extends ethereum.Event {
  get params(): UserDeposit__Params {
    return new UserDeposit__Params(this);
  }
}

export class UserDeposit__Params {
  _event: UserDeposit;

  constructor(event: UserDeposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get epochNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserRewardClaim extends ethereum.Event {
  get params(): UserRewardClaim__Params {
    return new UserRewardClaim__Params(this);
  }
}

export class UserRewardClaim__Params {
  _event: UserRewardClaim;

  constructor(event: UserRewardClaim) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get epochNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UserWithdraw extends ethereum.Event {
  get params(): UserWithdraw__Params {
    return new UserWithdraw__Params(this);
  }
}

export class UserWithdraw__Params {
  _event: UserWithdraw;

  constructor(event: UserWithdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get epochNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class EthVault__epochsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getTotalValueLocked(): BigInt {
    return this.value0;
  }

  getTotalEpochRewards(): BigInt {
    return this.value1;
  }
}

export class EthVault__getAllEpochsResultValue0Struct extends ethereum.Tuple {
  get totalValueLocked(): BigInt {
    return this[0].toBigInt();
  }

  get totalEpochRewards(): BigInt {
    return this[1].toBigInt();
  }
}

export class EthVault__getCurrentEpochResultValue0Struct extends ethereum.Tuple {
  get totalValueLocked(): BigInt {
    return this[0].toBigInt();
  }

  get totalEpochRewards(): BigInt {
    return this[1].toBigInt();
  }
}

export class EthVault__userStakesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }

  getAmount(): BigInt {
    return this.value0;
  }

  getLastEpochClaimedAt(): BigInt {
    return this.value1;
  }
}

export class EthVault extends ethereum.SmartContract {
  static bind(address: Address): EthVault {
    return new EthVault("EthVault", address);
  }

  calculateRewards(_user: Address): BigInt {
    let result = super.call(
      "calculateRewards",
      "calculateRewards(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigInt();
  }

  try_calculateRewards(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculateRewards",
      "calculateRewards(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  claimableRewards(): boolean {
    let result = super.call(
      "claimableRewards",
      "claimableRewards():(bool)",
      [],
    );

    return result[0].toBoolean();
  }

  try_claimableRewards(): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "claimableRewards",
      "claimableRewards():(bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  currentEpochId(): BigInt {
    let result = super.call("currentEpochId", "currentEpochId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_currentEpochId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentEpochId",
      "currentEpochId():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentEpochStatus(): i32 {
    let result = super.call(
      "currentEpochStatus",
      "currentEpochStatus():(uint8)",
      [],
    );

    return result[0].toI32();
  }

  try_currentEpochStatus(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "currentEpochStatus",
      "currentEpochStatus():(uint8)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  epochs(param0: BigInt): EthVault__epochsResult {
    let result = super.call("epochs", "epochs(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new EthVault__epochsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_epochs(param0: BigInt): ethereum.CallResult<EthVault__epochsResult> {
    let result = super.tryCall("epochs", "epochs(uint256):(uint256,uint256)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EthVault__epochsResult(value[0].toBigInt(), value[1].toBigInt()),
    );
  }

  fundWallet(): Address {
    let result = super.call("fundWallet", "fundWallet():(address)", []);

    return result[0].toAddress();
  }

  try_fundWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("fundWallet", "fundWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllEpochs(): Array<EthVault__getAllEpochsResultValue0Struct> {
    let result = super.call(
      "getAllEpochs",
      "getAllEpochs():((uint256,uint256)[])",
      [],
    );

    return result[0].toTupleArray<EthVault__getAllEpochsResultValue0Struct>();
  }

  try_getAllEpochs(): ethereum.CallResult<
    Array<EthVault__getAllEpochsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllEpochs",
      "getAllEpochs():((uint256,uint256)[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<EthVault__getAllEpochsResultValue0Struct>(),
    );
  }

  getCurrentEpoch(): EthVault__getCurrentEpochResultValue0Struct {
    let result = super.call(
      "getCurrentEpoch",
      "getCurrentEpoch():((uint256,uint256))",
      [],
    );

    return changetype<EthVault__getCurrentEpochResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getCurrentEpoch(): ethereum.CallResult<EthVault__getCurrentEpochResultValue0Struct> {
    let result = super.tryCall(
      "getCurrentEpoch",
      "getCurrentEpoch():((uint256,uint256))",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<EthVault__getCurrentEpochResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getEpochLengthToClaim(_user: Address): BigInt {
    let result = super.call(
      "getEpochLengthToClaim",
      "getEpochLengthToClaim(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBigInt();
  }

  try_getEpochLengthToClaim(_user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getEpochLengthToClaim",
      "getEpochLengthToClaim(address):(uint256)",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasClaimableRewards(_user: Address): boolean {
    let result = super.call(
      "hasClaimableRewards",
      "hasClaimableRewards(address):(bool)",
      [ethereum.Value.fromAddress(_user)],
    );

    return result[0].toBoolean();
  }

  try_hasClaimableRewards(_user: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "hasClaimableRewards",
      "hasClaimableRewards(address):(bool)",
      [ethereum.Value.fromAddress(_user)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  locked(): boolean {
    let result = super.call("locked", "locked():(bool)", []);

    return result[0].toBoolean();
  }

  try_locked(): ethereum.CallResult<boolean> {
    let result = super.tryCall("locked", "locked():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  mininmumStake(): BigInt {
    let result = super.call("mininmumStake", "mininmumStake():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mininmumStake(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "mininmumStake",
      "mininmumStake():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  userStakes(param0: Address): EthVault__userStakesResult {
    let result = super.call(
      "userStakes",
      "userStakes(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new EthVault__userStakesResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
    );
  }

  try_userStakes(
    param0: Address,
  ): ethereum.CallResult<EthVault__userStakesResult> {
    let result = super.tryCall(
      "userStakes",
      "userStakes(address):(uint256,uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new EthVault__userStakesResult(value[0].toBigInt(), value[1].toBigInt()),
    );
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AllocateRewardsCall extends ethereum.Call {
  get inputs(): AllocateRewardsCall__Inputs {
    return new AllocateRewardsCall__Inputs(this);
  }

  get outputs(): AllocateRewardsCall__Outputs {
    return new AllocateRewardsCall__Outputs(this);
  }
}

export class AllocateRewardsCall__Inputs {
  _call: AllocateRewardsCall;

  constructor(call: AllocateRewardsCall) {
    this._call = call;
  }
}

export class AllocateRewardsCall__Outputs {
  _call: AllocateRewardsCall;

  constructor(call: AllocateRewardsCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall extends ethereum.Call {
  get inputs(): ClaimRewardsCall__Inputs {
    return new ClaimRewardsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsCall__Outputs {
    return new ClaimRewardsCall__Outputs(this);
  }
}

export class ClaimRewardsCall__Inputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClaimRewardsCall__Outputs {
  _call: ClaimRewardsCall;

  constructor(call: ClaimRewardsCall) {
    this._call = call;
  }
}

export class ClaimRewardsForEpochsCall extends ethereum.Call {
  get inputs(): ClaimRewardsForEpochsCall__Inputs {
    return new ClaimRewardsForEpochsCall__Inputs(this);
  }

  get outputs(): ClaimRewardsForEpochsCall__Outputs {
    return new ClaimRewardsForEpochsCall__Outputs(this);
  }
}

export class ClaimRewardsForEpochsCall__Inputs {
  _call: ClaimRewardsForEpochsCall;

  constructor(call: ClaimRewardsForEpochsCall) {
    this._call = call;
  }

  get _numberOfEpochs(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimRewardsForEpochsCall__Outputs {
  _call: ClaimRewardsForEpochsCall;

  constructor(call: ClaimRewardsForEpochsCall) {
    this._call = call;
  }
}

export class EnterCall extends ethereum.Call {
  get inputs(): EnterCall__Inputs {
    return new EnterCall__Inputs(this);
  }

  get outputs(): EnterCall__Outputs {
    return new EnterCall__Outputs(this);
  }
}

export class EnterCall__Inputs {
  _call: EnterCall;

  constructor(call: EnterCall) {
    this._call = call;
  }
}

export class EnterCall__Outputs {
  _call: EnterCall;

  constructor(call: EnterCall) {
    this._call = call;
  }
}

export class ExitCall extends ethereum.Call {
  get inputs(): ExitCall__Inputs {
    return new ExitCall__Inputs(this);
  }

  get outputs(): ExitCall__Outputs {
    return new ExitCall__Outputs(this);
  }
}

export class ExitCall__Inputs {
  _call: ExitCall;

  constructor(call: ExitCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ExitCall__Outputs {
  _call: ExitCall;

  constructor(call: ExitCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _fundWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class LockFundsAndRunCurrentEpochCall extends ethereum.Call {
  get inputs(): LockFundsAndRunCurrentEpochCall__Inputs {
    return new LockFundsAndRunCurrentEpochCall__Inputs(this);
  }

  get outputs(): LockFundsAndRunCurrentEpochCall__Outputs {
    return new LockFundsAndRunCurrentEpochCall__Outputs(this);
  }
}

export class LockFundsAndRunCurrentEpochCall__Inputs {
  _call: LockFundsAndRunCurrentEpochCall;

  constructor(call: LockFundsAndRunCurrentEpochCall) {
    this._call = call;
  }
}

export class LockFundsAndRunCurrentEpochCall__Outputs {
  _call: LockFundsAndRunCurrentEpochCall;

  constructor(call: LockFundsAndRunCurrentEpochCall) {
    this._call = call;
  }
}

export class LockOrUnlockContractCall extends ethereum.Call {
  get inputs(): LockOrUnlockContractCall__Inputs {
    return new LockOrUnlockContractCall__Inputs(this);
  }

  get outputs(): LockOrUnlockContractCall__Outputs {
    return new LockOrUnlockContractCall__Outputs(this);
  }
}

export class LockOrUnlockContractCall__Inputs {
  _call: LockOrUnlockContractCall;

  constructor(call: LockOrUnlockContractCall) {
    this._call = call;
  }

  get _locked(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class LockOrUnlockContractCall__Outputs {
  _call: LockOrUnlockContractCall;

  constructor(call: LockOrUnlockContractCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFundWalletCall extends ethereum.Call {
  get inputs(): SetFundWalletCall__Inputs {
    return new SetFundWalletCall__Inputs(this);
  }

  get outputs(): SetFundWalletCall__Outputs {
    return new SetFundWalletCall__Outputs(this);
  }
}

export class SetFundWalletCall__Inputs {
  _call: SetFundWalletCall;

  constructor(call: SetFundWalletCall) {
    this._call = call;
  }

  get _fundWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFundWalletCall__Outputs {
  _call: SetFundWalletCall;

  constructor(call: SetFundWalletCall) {
    this._call = call;
  }
}

export class SetMinimumStakeCall extends ethereum.Call {
  get inputs(): SetMinimumStakeCall__Inputs {
    return new SetMinimumStakeCall__Inputs(this);
  }

  get outputs(): SetMinimumStakeCall__Outputs {
    return new SetMinimumStakeCall__Outputs(this);
  }
}

export class SetMinimumStakeCall__Inputs {
  _call: SetMinimumStakeCall;

  constructor(call: SetMinimumStakeCall) {
    this._call = call;
  }

  get _mininmumStake(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMinimumStakeCall__Outputs {
  _call: SetMinimumStakeCall;

  constructor(call: SetMinimumStakeCall) {
    this._call = call;
  }
}

export class TerminateCurrentAndOpenNextEpochCall extends ethereum.Call {
  get inputs(): TerminateCurrentAndOpenNextEpochCall__Inputs {
    return new TerminateCurrentAndOpenNextEpochCall__Inputs(this);
  }

  get outputs(): TerminateCurrentAndOpenNextEpochCall__Outputs {
    return new TerminateCurrentAndOpenNextEpochCall__Outputs(this);
  }
}

export class TerminateCurrentAndOpenNextEpochCall__Inputs {
  _call: TerminateCurrentAndOpenNextEpochCall;

  constructor(call: TerminateCurrentAndOpenNextEpochCall) {
    this._call = call;
  }
}

export class TerminateCurrentAndOpenNextEpochCall__Outputs {
  _call: TerminateCurrentAndOpenNextEpochCall;

  constructor(call: TerminateCurrentAndOpenNextEpochCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}
