import type { MaybePromise } from '@graphql-tools/utils';
export declare function isDisposable(obj: any): obj is Disposable | AsyncDisposable;
export declare function dispose<T extends AsyncDisposable>(disposable: T): MaybePromise<void>;
export declare function dispose<T extends Disposable>(disposable: T): void;
export declare function dispose<T extends AsyncDisposable | Disposable>(disposable: T): MaybePromise<void>;
export declare function createDisposable(disposeFn: () => void): Disposable;
export declare function createAsyncDisposable(disposeFn: () => Promise<void>): AsyncDisposable;
export declare function makeDisposable<T>(obj: T, disposeFn: () => void): T & Disposable;
export declare function makeAsyncDisposable<T>(obj: T, disposeFn: () => Promise<void>): T & AsyncDisposable;
