import type { MeshInstance } from '@graphql-mesh/runtime';
import type { YamlConfig } from '@graphql-mesh/types';
export type MeshHTTPHandler = ReturnType<typeof createMeshHTTPHandler>;
export declare function createMeshHTTPHandler<TServerContext>({ baseDir, getBuiltMesh, rawServeConfig, playgroundTitle, }: {
    baseDir: string;
    getBuiltMesh: () => Promise<MeshInstance>;
    rawServeConfig?: YamlConfig.Config['serve'];
    playgroundTitle?: string;
}): import("@whatwg-node/server").ServerAdapter<TServerContext, import("@whatwg-node/server").ServerAdapterBaseObject<TServerContext, import("@whatwg-node/server").ServerAdapterRequestHandler<TServerContext>>>;
