{"version":3,"file":"renderHelpers.js","sourceRoot":"","sources":["../../../src/testing/internal/renderHelpers.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAC;AAGhD,OAAO,EAAE,cAAc,EAAE,MAAM,sBAAsB,CAAC;AAEtD,OAAO,EAAE,cAAc,EAAE,MAAM,4BAA4B,CAAC;AAU5D,MAAM,UAAU,gBAAgB,CAK9B,EAAgB,EAChB,EAIqD;IAHnD,IAAA,MAAM,YAAA,EACN,eAAiC,EAAxB,OAAO,mBAAG,KAAK,CAAC,QAAQ,KAAA,EAC9B,aAAa,cAHlB,qBAIC,CADiB;IAGlB,OAAO,MAAM,CAAC,EAAE,wBACX,aAAa,KAChB,OAAO,EAAE,UAAC,EAAY;gBAAV,QAAQ,cAAA;YAClB,OAAO,CACL,oBAAC,cAAc,IAAC,MAAM,EAAE,MAAM;gBAC5B,oBAAC,OAAO,QAAE,QAAQ,CAAW,CACd,CAClB,CAAC;QACJ,CAAC,IACD,CAAC;AACL,CAAC;AASD,MAAM,UAAU,eAAe,CAK7B,EAAgB,EAChB,EAGoD;IAFlD,IAAA,eAAiC,EAAxB,OAAO,mBAAG,KAAK,CAAC,QAAQ,KAAA,EAC9B,aAAa,cAFlB,WAGC,CADiB;IAGlB,OAAO,MAAM,CAAC,EAAE,wBACX,aAAa,KAChB,OAAO,EAAE,UAAC,EAAY;gBAAV,QAAQ,cAAA;YAClB,OAAO,CACL,oBAAC,cAAc,eAAK,aAAa;gBAC/B,oBAAC,OAAO,QAAE,QAAQ,CAAW,CACd,CAClB,CAAC;QACJ,CAAC,IACD,CAAC;AACL,CAAC","sourcesContent":["import * as React from \"react\";\nimport type { ReactElement } from \"react\";\nimport { render } from \"@testing-library/react\";\nimport type { Queries, RenderOptions, queries } from \"@testing-library/react\";\nimport type { ApolloClient } from \"../../core/index.js\";\nimport { ApolloProvider } from \"../../react/index.js\";\nimport type { MockedProviderProps } from \"../react/MockedProvider.js\";\nimport { MockedProvider } from \"../react/MockedProvider.js\";\n\nexport interface RenderWithClientOptions<\n  Q extends Queries = typeof queries,\n  Container extends Element | DocumentFragment = HTMLElement,\n  BaseElement extends Element | DocumentFragment = Container,\n> extends RenderOptions<Q, Container, BaseElement> {\n  client: ApolloClient<any>;\n}\n\nexport function renderWithClient<\n  Q extends Queries = typeof queries,\n  Container extends Element | DocumentFragment = HTMLElement,\n  BaseElement extends Element | DocumentFragment = Container,\n>(\n  ui: ReactElement,\n  {\n    client,\n    wrapper: Wrapper = React.Fragment,\n    ...renderOptions\n  }: RenderWithClientOptions<Q, Container, BaseElement>\n) {\n  return render(ui, {\n    ...renderOptions,\n    wrapper: ({ children }) => {\n      return (\n        <ApolloProvider client={client}>\n          <Wrapper>{children}</Wrapper>\n        </ApolloProvider>\n      );\n    },\n  });\n}\n\nexport interface RenderWithMocksOptions<\n  Q extends Queries = typeof queries,\n  Container extends Element | DocumentFragment = HTMLElement,\n  BaseElement extends Element | DocumentFragment = Container,\n> extends RenderOptions<Q, Container, BaseElement>,\n    MockedProviderProps<any> {}\n\nexport function renderWithMocks<\n  Q extends Queries = typeof queries,\n  Container extends Element | DocumentFragment = HTMLElement,\n  BaseElement extends Element | DocumentFragment = Container,\n>(\n  ui: ReactElement,\n  {\n    wrapper: Wrapper = React.Fragment,\n    ...renderOptions\n  }: RenderWithMocksOptions<Q, Container, BaseElement>\n) {\n  return render(ui, {\n    ...renderOptions,\n    wrapper: ({ children }) => {\n      return (\n        <MockedProvider {...renderOptions}>\n          <Wrapper>{children}</Wrapper>\n        </MockedProvider>\n      );\n    },\n  });\n}\n"]}