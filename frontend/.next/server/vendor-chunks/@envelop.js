"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@envelop";
exports.ids = ["vendor-chunks/@envelop"];
exports.modules = {

/***/ "(ssr)/../node_modules/@envelop/core/esm/create.js":
/*!***************************************************!*\
  !*** ../node_modules/@envelop/core/esm/create.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   envelop: () => (/* binding */ envelop)\n/* harmony export */ });\n/* harmony import */ var _orchestrator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./orchestrator.js */ \"(ssr)/../node_modules/@envelop/core/esm/orchestrator.js\");\n\nfunction notEmpty(value) {\n    return value != null;\n}\nfunction envelop(options) {\n    const plugins = options.plugins.filter(notEmpty);\n    const orchestrator = (0,_orchestrator_js__WEBPACK_IMPORTED_MODULE_0__.createEnvelopOrchestrator)({\n        plugins,\n    });\n    const getEnveloped = (initialContext = {}) => {\n        const typedOrchestrator = orchestrator;\n        typedOrchestrator.init(initialContext);\n        return {\n            parse: typedOrchestrator.parse(initialContext),\n            validate: typedOrchestrator.validate(initialContext),\n            contextFactory: typedOrchestrator.contextFactory(initialContext),\n            execute: typedOrchestrator.execute,\n            subscribe: typedOrchestrator.subscribe,\n            schema: typedOrchestrator.getCurrentSchema(),\n        };\n    };\n    getEnveloped._plugins = plugins;\n    return getEnveloped;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL2NyZWF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EseUJBQXlCLDJFQUF5QjtBQUNsRDtBQUNBLEtBQUs7QUFDTCw2Q0FBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL2NyZWF0ZS5qcz8zMDIzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUVudmVsb3BPcmNoZXN0cmF0b3IgfSBmcm9tICcuL29yY2hlc3RyYXRvci5qcyc7XG5mdW5jdGlvbiBub3RFbXB0eSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVudmVsb3Aob3B0aW9ucykge1xuICAgIGNvbnN0IHBsdWdpbnMgPSBvcHRpb25zLnBsdWdpbnMuZmlsdGVyKG5vdEVtcHR5KTtcbiAgICBjb25zdCBvcmNoZXN0cmF0b3IgPSBjcmVhdGVFbnZlbG9wT3JjaGVzdHJhdG9yKHtcbiAgICAgICAgcGx1Z2lucyxcbiAgICB9KTtcbiAgICBjb25zdCBnZXRFbnZlbG9wZWQgPSAoaW5pdGlhbENvbnRleHQgPSB7fSkgPT4ge1xuICAgICAgICBjb25zdCB0eXBlZE9yY2hlc3RyYXRvciA9IG9yY2hlc3RyYXRvcjtcbiAgICAgICAgdHlwZWRPcmNoZXN0cmF0b3IuaW5pdChpbml0aWFsQ29udGV4dCk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBwYXJzZTogdHlwZWRPcmNoZXN0cmF0b3IucGFyc2UoaW5pdGlhbENvbnRleHQpLFxuICAgICAgICAgICAgdmFsaWRhdGU6IHR5cGVkT3JjaGVzdHJhdG9yLnZhbGlkYXRlKGluaXRpYWxDb250ZXh0KSxcbiAgICAgICAgICAgIGNvbnRleHRGYWN0b3J5OiB0eXBlZE9yY2hlc3RyYXRvci5jb250ZXh0RmFjdG9yeShpbml0aWFsQ29udGV4dCksXG4gICAgICAgICAgICBleGVjdXRlOiB0eXBlZE9yY2hlc3RyYXRvci5leGVjdXRlLFxuICAgICAgICAgICAgc3Vic2NyaWJlOiB0eXBlZE9yY2hlc3RyYXRvci5zdWJzY3JpYmUsXG4gICAgICAgICAgICBzY2hlbWE6IHR5cGVkT3JjaGVzdHJhdG9yLmdldEN1cnJlbnRTY2hlbWEoKSxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIGdldEVudmVsb3BlZC5fcGx1Z2lucyA9IHBsdWdpbnM7XG4gICAgcmV0dXJuIGdldEVudmVsb3BlZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/create.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/document-string-map.js":
/*!****************************************************************!*\
  !*** ../node_modules/@envelop/core/esm/document-string-map.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   documentStringMap: () => (/* binding */ documentStringMap),\n/* harmony export */   getDocumentString: () => (/* binding */ getDocumentString)\n/* harmony export */ });\nconst documentStringMap = new WeakMap();\nfunction getDocumentString(document, print) {\n    let documentSource = documentStringMap.get(document);\n    if (!documentSource && print) {\n        documentSource = print(document);\n        documentStringMap.set(document, documentSource);\n    }\n    return documentSource;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL2RvY3VtZW50LXN0cmluZy1tYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDNkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZW52ZWxvcC9jb3JlL2VzbS9kb2N1bWVudC1zdHJpbmctbWFwLmpzPzVlNTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRvY3VtZW50U3RyaW5nTWFwID0gbmV3IFdlYWtNYXAoKTtcbmZ1bmN0aW9uIGdldERvY3VtZW50U3RyaW5nKGRvY3VtZW50LCBwcmludCkge1xuICAgIGxldCBkb2N1bWVudFNvdXJjZSA9IGRvY3VtZW50U3RyaW5nTWFwLmdldChkb2N1bWVudCk7XG4gICAgaWYgKCFkb2N1bWVudFNvdXJjZSAmJiBwcmludCkge1xuICAgICAgICBkb2N1bWVudFNvdXJjZSA9IHByaW50KGRvY3VtZW50KTtcbiAgICAgICAgZG9jdW1lbnRTdHJpbmdNYXAuc2V0KGRvY3VtZW50LCBkb2N1bWVudFNvdXJjZSk7XG4gICAgfVxuICAgIHJldHVybiBkb2N1bWVudFNvdXJjZTtcbn1cbmV4cG9ydCB7IGdldERvY3VtZW50U3RyaW5nIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/document-string-map.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/orchestrator.js":
/*!*********************************************************!*\
  !*** ../node_modules/@envelop/core/esm/orchestrator.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createEnvelopOrchestrator: () => (/* binding */ createEnvelopOrchestrator)\n/* harmony export */ });\n/* harmony import */ var _document_string_map_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./document-string-map.js */ \"(ssr)/../node_modules/@envelop/core/esm/document-string-map.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@envelop/core/esm/utils.js\");\n\n\nfunction throwEngineFunctionError(name) {\n    throw Error(`No \\`${name}\\` function found! Register it using \"useEngine\" plugin.`);\n}\nfunction createEnvelopOrchestrator({ plugins, }) {\n    let schema = null;\n    let initDone = false;\n    const parse = () => throwEngineFunctionError('parse');\n    const validate = () => throwEngineFunctionError('validate');\n    const execute = () => throwEngineFunctionError('execute');\n    const subscribe = () => throwEngineFunctionError('subscribe');\n    // Define the initial method for replacing the GraphQL schema, this is needed in order\n    // to allow setting the schema from the onPluginInit callback. We also need to make sure\n    // here not to call the same plugin that initiated the schema switch.\n    const replaceSchema = (newSchema, ignorePluginIndex = -1) => {\n        schema = newSchema;\n        if (initDone) {\n            for (const [i, plugin] of plugins.entries()) {\n                if (i !== ignorePluginIndex) {\n                    plugin.onSchemaChange &&\n                        plugin.onSchemaChange({\n                            schema,\n                            replaceSchema: schemaToSet => {\n                                replaceSchema(schemaToSet, i);\n                            },\n                        });\n                }\n            }\n        }\n    };\n    const contextErrorHandlers = [];\n    // Iterate all plugins and trigger onPluginInit\n    for (let i = 0; i < plugins.length; i++) {\n        const plugin = plugins[i];\n        const pluginsToAdd = [];\n        plugin.onPluginInit &&\n            plugin.onPluginInit({\n                plugins,\n                addPlugin: newPlugin => {\n                    pluginsToAdd.push(newPlugin);\n                },\n                setSchema: modifiedSchema => replaceSchema(modifiedSchema, i),\n                registerContextErrorHandler: handler => contextErrorHandlers.push(handler),\n            });\n        pluginsToAdd.length && plugins.splice(i + 1, 0, ...pluginsToAdd);\n    }\n    // A set of before callbacks defined here in order to allow it to be used later\n    const beforeCallbacks = {\n        init: [],\n        parse: [],\n        validate: [],\n        subscribe: [],\n        execute: [],\n        context: [],\n    };\n    for (const { onContextBuilding, onExecute, onParse, onSubscribe, onValidate, onEnveloped, } of plugins) {\n        onEnveloped && beforeCallbacks.init.push(onEnveloped);\n        onContextBuilding && beforeCallbacks.context.push(onContextBuilding);\n        onExecute && beforeCallbacks.execute.push(onExecute);\n        onParse && beforeCallbacks.parse.push(onParse);\n        onSubscribe && beforeCallbacks.subscribe.push(onSubscribe);\n        onValidate && beforeCallbacks.validate.push(onValidate);\n    }\n    const init = initialContext => {\n        for (const [i, onEnveloped] of beforeCallbacks.init.entries()) {\n            onEnveloped({\n                context: initialContext,\n                extendContext: extension => {\n                    if (!initialContext) {\n                        return;\n                    }\n                    Object.assign(initialContext, extension);\n                },\n                setSchema: modifiedSchema => replaceSchema(modifiedSchema, i),\n            });\n        }\n    };\n    const customParse = beforeCallbacks.parse.length\n        ? initialContext => (source, parseOptions) => {\n            let result = null;\n            let parseFn = parse;\n            const context = initialContext;\n            const afterCalls = [];\n            for (const onParse of beforeCallbacks.parse) {\n                const afterFn = onParse({\n                    context,\n                    extendContext: extension => {\n                        Object.assign(context, extension);\n                    },\n                    params: { source, options: parseOptions },\n                    parseFn,\n                    setParseFn: newFn => {\n                        parseFn = newFn;\n                    },\n                    setParsedDocument: newDoc => {\n                        result = newDoc;\n                    },\n                });\n                afterFn && afterCalls.push(afterFn);\n            }\n            if (result === null) {\n                try {\n                    result = parseFn(source, parseOptions);\n                }\n                catch (e) {\n                    result = e;\n                }\n            }\n            for (const afterCb of afterCalls) {\n                afterCb({\n                    context,\n                    extendContext: extension => {\n                        Object.assign(context, extension);\n                    },\n                    replaceParseResult: newResult => {\n                        result = newResult;\n                    },\n                    result,\n                });\n            }\n            if (result === null) {\n                throw new Error(`Failed to parse document.`);\n            }\n            if (result instanceof Error) {\n                throw result;\n            }\n            _document_string_map_js__WEBPACK_IMPORTED_MODULE_0__.documentStringMap.set(result, source.toString());\n            return result;\n        }\n        : () => parse;\n    const customValidate = beforeCallbacks.validate\n        .length\n        ? initialContext => (schema, documentAST, rules, typeInfo, validationOptions) => {\n            let actualRules = rules ? [...rules] : undefined;\n            let validateFn = validate;\n            let result = null;\n            const context = initialContext;\n            const afterCalls = [];\n            for (const onValidate of beforeCallbacks.validate) {\n                const afterFn = onValidate({\n                    context,\n                    extendContext: extension => {\n                        Object.assign(context, extension);\n                    },\n                    params: {\n                        schema,\n                        documentAST,\n                        rules: actualRules,\n                        typeInfo,\n                        options: validationOptions,\n                    },\n                    validateFn,\n                    addValidationRule: rule => {\n                        if (!actualRules) {\n                            actualRules = [];\n                        }\n                        actualRules.push(rule);\n                    },\n                    setValidationFn: newFn => {\n                        validateFn = newFn;\n                    },\n                    setResult: newResults => {\n                        result = newResults;\n                    },\n                });\n                afterFn && afterCalls.push(afterFn);\n            }\n            if (!result) {\n                result = validateFn(schema, documentAST, actualRules, typeInfo, validationOptions);\n            }\n            if (!result) {\n                return;\n            }\n            const valid = result.length === 0;\n            for (const afterCb of afterCalls) {\n                afterCb({\n                    valid,\n                    result,\n                    context,\n                    extendContext: extension => {\n                        Object.assign(context, extension);\n                    },\n                    setResult: newResult => {\n                        result = newResult;\n                    },\n                });\n            }\n            return result;\n        }\n        : () => validate;\n    const customContextFactory = beforeCallbacks.context.length\n        ? initialContext => async (orchestratorCtx) => {\n            const afterCalls = [];\n            // In order to have access to the \"last working\" context object we keep this outside of the try block:\n            const context = initialContext;\n            if (orchestratorCtx) {\n                Object.assign(context, orchestratorCtx);\n            }\n            try {\n                let isBreakingContextBuilding = false;\n                for (const onContext of beforeCallbacks.context) {\n                    const afterHookResult = await onContext({\n                        context,\n                        extendContext: extension => {\n                            Object.assign(context, extension);\n                        },\n                        breakContextBuilding: () => {\n                            isBreakingContextBuilding = true;\n                        },\n                    });\n                    if (typeof afterHookResult === 'function') {\n                        afterCalls.push(afterHookResult);\n                    }\n                    if (isBreakingContextBuilding === true) {\n                        break;\n                    }\n                }\n                for (const afterCb of afterCalls) {\n                    afterCb({\n                        context,\n                        extendContext: extension => {\n                            Object.assign(context, extension);\n                        },\n                    });\n                }\n                return context;\n            }\n            catch (err) {\n                let error = err;\n                for (const errorCb of contextErrorHandlers) {\n                    errorCb({\n                        context,\n                        error,\n                        setError: err => {\n                            error = err;\n                        },\n                    });\n                }\n                throw error;\n            }\n        }\n        : initialContext => orchestratorCtx => {\n            if (orchestratorCtx) {\n                Object.assign(initialContext, orchestratorCtx);\n            }\n            return initialContext;\n        };\n    const useCustomSubscribe = beforeCallbacks.subscribe.length;\n    const customSubscribe = useCustomSubscribe\n        ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.makeSubscribe)(async (args) => {\n            let subscribeFn = subscribe;\n            const afterCalls = [];\n            const subscribeErrorHandlers = [];\n            const context = args.contextValue || {};\n            let result;\n            for (const onSubscribe of beforeCallbacks.subscribe) {\n                const after = await onSubscribe({\n                    subscribeFn,\n                    setSubscribeFn: newSubscribeFn => {\n                        subscribeFn = newSubscribeFn;\n                    },\n                    extendContext: extension => {\n                        Object.assign(context, extension);\n                    },\n                    args: args,\n                    setResultAndStopExecution: stopResult => {\n                        result = stopResult;\n                    },\n                });\n                if (after) {\n                    if (after.onSubscribeResult) {\n                        afterCalls.push(after.onSubscribeResult);\n                    }\n                    if (after.onSubscribeError) {\n                        subscribeErrorHandlers.push(after.onSubscribeError);\n                    }\n                }\n                if (result !== undefined) {\n                    break;\n                }\n            }\n            if (result === undefined) {\n                result = await subscribeFn({\n                    ...args,\n                    contextValue: context,\n                    // Casted for GraphQL.js 15 compatibility\n                    // Can be removed once we drop support for GraphQL.js 15\n                });\n            }\n            if (!result) {\n                return;\n            }\n            const onNextHandler = [];\n            const onEndHandler = [];\n            for (const afterCb of afterCalls) {\n                const hookResult = afterCb({\n                    args: args,\n                    result,\n                    setResult: newResult => {\n                        result = newResult;\n                    },\n                });\n                if (hookResult) {\n                    if (hookResult.onNext) {\n                        onNextHandler.push(hookResult.onNext);\n                    }\n                    if (hookResult.onEnd) {\n                        onEndHandler.push(hookResult.onEnd);\n                    }\n                }\n            }\n            if (onNextHandler.length && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncIterable)(result)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.mapAsyncIterator)(result, async (result) => {\n                    for (const onNext of onNextHandler) {\n                        await onNext({\n                            args: args,\n                            result,\n                            setResult: newResult => (result = newResult),\n                        });\n                    }\n                    return result;\n                });\n            }\n            if (onEndHandler.length && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncIterable)(result)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.finalAsyncIterator)(result, () => {\n                    for (const onEnd of onEndHandler) {\n                        onEnd();\n                    }\n                });\n            }\n            if (subscribeErrorHandlers.length && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncIterable)(result)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.errorAsyncIterator)(result, err => {\n                    let error = err;\n                    for (const handler of subscribeErrorHandlers) {\n                        handler({\n                            error,\n                            setError: err => {\n                                error = err;\n                            },\n                        });\n                    }\n                    throw error;\n                });\n            }\n            return result;\n        })\n        : (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.makeSubscribe)(subscribe);\n    const useCustomExecute = beforeCallbacks.execute.length;\n    const customExecute = useCustomExecute\n        ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.makeExecute)(async (args) => {\n            let executeFn = execute;\n            let result;\n            const afterCalls = [];\n            const context = args.contextValue || {};\n            for (const onExecute of beforeCallbacks.execute) {\n                const after = await onExecute({\n                    executeFn,\n                    setExecuteFn: newExecuteFn => {\n                        executeFn = newExecuteFn;\n                    },\n                    setResultAndStopExecution: stopResult => {\n                        result = stopResult;\n                    },\n                    extendContext: extension => {\n                        if (typeof extension === 'object') {\n                            Object.assign(context, extension);\n                        }\n                        else {\n                            throw new Error(`Invalid context extension provided! Expected \"object\", got: \"${JSON.stringify(extension)}\" (${typeof extension})`);\n                        }\n                    },\n                    args: args,\n                });\n                if (after?.onExecuteDone) {\n                    afterCalls.push(after.onExecuteDone);\n                }\n                if (result !== undefined) {\n                    break;\n                }\n            }\n            if (result === undefined) {\n                result = (await executeFn({\n                    ...args,\n                    contextValue: context,\n                }));\n            }\n            const onNextHandler = [];\n            const onEndHandler = [];\n            for (const afterCb of afterCalls) {\n                const hookResult = await afterCb({\n                    args: args,\n                    result,\n                    setResult: newResult => {\n                        result = newResult;\n                    },\n                });\n                if (hookResult) {\n                    if (hookResult.onNext) {\n                        onNextHandler.push(hookResult.onNext);\n                    }\n                    if (hookResult.onEnd) {\n                        onEndHandler.push(hookResult.onEnd);\n                    }\n                }\n            }\n            if (onNextHandler.length && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncIterable)(result)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.mapAsyncIterator)(result, async (result) => {\n                    for (const onNext of onNextHandler) {\n                        await onNext({\n                            args: args,\n                            result,\n                            setResult: newResult => {\n                                result = newResult;\n                            },\n                        });\n                    }\n                    return result;\n                });\n            }\n            if (onEndHandler.length && (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isAsyncIterable)(result)) {\n                result = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.finalAsyncIterator)(result, () => {\n                    for (const onEnd of onEndHandler) {\n                        onEnd();\n                    }\n                });\n            }\n            return result;\n        })\n        : (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.makeExecute)(execute);\n    initDone = true;\n    // This is done in order to trigger the first schema available, to allow plugins that needs the schema\n    // eagerly to have it.\n    if (schema) {\n        for (const [i, plugin] of plugins.entries()) {\n            plugin.onSchemaChange &&\n                plugin.onSchemaChange({\n                    schema,\n                    replaceSchema: modifiedSchema => replaceSchema(modifiedSchema, i),\n                });\n        }\n    }\n    return {\n        getCurrentSchema() {\n            return schema;\n        },\n        init,\n        parse: customParse,\n        validate: customValidate,\n        execute: customExecute,\n        subscribe: customSubscribe,\n        contextFactory: customContextFactory,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/orchestrator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/plugins/use-engine.js":
/*!***************************************************************!*\
  !*** ../node_modules/@envelop/core/esm/plugins/use-engine.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEngine: () => (/* binding */ useEngine)\n/* harmony export */ });\nconst useEngine = (engine) => {\n    return {\n        onExecute: ({ setExecuteFn }) => {\n            if (engine.execute) {\n                setExecuteFn(engine.execute);\n            }\n        },\n        onParse: ({ setParseFn }) => {\n            if (engine.parse) {\n                setParseFn(engine.parse);\n            }\n        },\n        onValidate: ({ setValidationFn, addValidationRule }) => {\n            if (engine.validate) {\n                setValidationFn(engine.validate);\n            }\n            engine.specifiedRules?.map(addValidationRule);\n        },\n        onSubscribe: ({ setSubscribeFn }) => {\n            if (engine.subscribe) {\n                setSubscribeFn(engine.subscribe);\n            }\n        },\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLWVuZ2luZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBLHNCQUFzQixjQUFjO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxvQkFBb0IsWUFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsdUJBQXVCLG9DQUFvQztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCx3QkFBd0IsZ0JBQWdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGVudmVsb3AvY29yZS9lc20vcGx1Z2lucy91c2UtZW5naW5lLmpzPzljNWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHVzZUVuZ2luZSA9IChlbmdpbmUpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvbkV4ZWN1dGU6ICh7IHNldEV4ZWN1dGVGbiB9KSA9PiB7XG4gICAgICAgICAgICBpZiAoZW5naW5lLmV4ZWN1dGUpIHtcbiAgICAgICAgICAgICAgICBzZXRFeGVjdXRlRm4oZW5naW5lLmV4ZWN1dGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBvblBhcnNlOiAoeyBzZXRQYXJzZUZuIH0pID0+IHtcbiAgICAgICAgICAgIGlmIChlbmdpbmUucGFyc2UpIHtcbiAgICAgICAgICAgICAgICBzZXRQYXJzZUZuKGVuZ2luZS5wYXJzZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uVmFsaWRhdGU6ICh7IHNldFZhbGlkYXRpb25GbiwgYWRkVmFsaWRhdGlvblJ1bGUgfSkgPT4ge1xuICAgICAgICAgICAgaWYgKGVuZ2luZS52YWxpZGF0ZSkge1xuICAgICAgICAgICAgICAgIHNldFZhbGlkYXRpb25GbihlbmdpbmUudmFsaWRhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZW5naW5lLnNwZWNpZmllZFJ1bGVzPy5tYXAoYWRkVmFsaWRhdGlvblJ1bGUpO1xuICAgICAgICB9LFxuICAgICAgICBvblN1YnNjcmliZTogKHsgc2V0U3Vic2NyaWJlRm4gfSkgPT4ge1xuICAgICAgICAgICAgaWYgKGVuZ2luZS5zdWJzY3JpYmUpIHtcbiAgICAgICAgICAgICAgICBzZXRTdWJzY3JpYmVGbihlbmdpbmUuc3Vic2NyaWJlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/plugins/use-engine.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/plugins/use-extend-context.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@envelop/core/esm/plugins/use-extend-context.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useExtendContext: () => (/* binding */ useExtendContext)\n/* harmony export */ });\nconst useExtendContext = (contextFactory) => ({\n    async onContextBuilding({ context, extendContext }) {\n        extendContext((await contextFactory(context)));\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLWV4dGVuZC1jb250ZXh0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQLDhCQUE4Qix3QkFBd0I7QUFDdEQ7QUFDQSxLQUFLO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLWV4dGVuZC1jb250ZXh0LmpzP2MwMGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHVzZUV4dGVuZENvbnRleHQgPSAoY29udGV4dEZhY3RvcnkpID0+ICh7XG4gICAgYXN5bmMgb25Db250ZXh0QnVpbGRpbmcoeyBjb250ZXh0LCBleHRlbmRDb250ZXh0IH0pIHtcbiAgICAgICAgZXh0ZW5kQ29udGV4dCgoYXdhaXQgY29udGV4dEZhY3RvcnkoY29udGV4dCkpKTtcbiAgICB9LFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/plugins/use-extend-context.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/plugins/use-logger.js":
/*!***************************************************************!*\
  !*** ../node_modules/@envelop/core/esm/plugins/use-logger.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useLogger: () => (/* binding */ useLogger)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/../node_modules/@envelop/core/esm/utils.js\");\n\nconst DEFAULT_OPTIONS = {\n    logFn: console.log,\n};\nconst useLogger = (rawOptions = DEFAULT_OPTIONS) => {\n    const options = {\n        DEFAULT_OPTIONS,\n        ...rawOptions,\n    };\n    return {\n        onParse({ extendContext, params }) {\n            if (options.skipIntrospection && (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isIntrospectionOperationString)(params.source)) {\n                extendContext({\n                    [_utils_js__WEBPACK_IMPORTED_MODULE_0__.envelopIsIntrospectionSymbol]: true,\n                });\n            }\n        },\n        onExecute({ args }) {\n            if (args.contextValue[_utils_js__WEBPACK_IMPORTED_MODULE_0__.envelopIsIntrospectionSymbol]) {\n                return;\n            }\n            options.logFn('execute-start', { args });\n            return {\n                onExecuteDone: ({ result }) => {\n                    options.logFn('execute-end', { args, result });\n                },\n            };\n        },\n        onSubscribe({ args }) {\n            if (args.contextValue[_utils_js__WEBPACK_IMPORTED_MODULE_0__.envelopIsIntrospectionSymbol]) {\n                return;\n            }\n            options.logFn('subscribe-start', { args });\n            return {\n                onSubscribeResult: ({ result }) => {\n                    options.logFn('subscribe-end', { args, result });\n                },\n            };\n        },\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLWxvZ2dlci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRjtBQUMzRjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdUJBQXVCO0FBQ3pDLDZDQUE2Qyx5RUFBOEI7QUFDM0U7QUFDQSxxQkFBcUIsbUVBQTRCO0FBQ2pELGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVCxvQkFBb0IsTUFBTTtBQUMxQixrQ0FBa0MsbUVBQTRCO0FBQzlEO0FBQ0E7QUFDQSw2Q0FBNkMsTUFBTTtBQUNuRDtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDLG1EQUFtRCxjQUFjO0FBQ2pFLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVCxzQkFBc0IsTUFBTTtBQUM1QixrQ0FBa0MsbUVBQTRCO0FBQzlEO0FBQ0E7QUFDQSwrQ0FBK0MsTUFBTTtBQUNyRDtBQUNBLHNDQUFzQyxRQUFRO0FBQzlDLHFEQUFxRCxjQUFjO0FBQ25FLGlCQUFpQjtBQUNqQjtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGVudmVsb3AvY29yZS9lc20vcGx1Z2lucy91c2UtbG9nZ2VyLmpzPzI4ODYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW52ZWxvcElzSW50cm9zcGVjdGlvblN5bWJvbCwgaXNJbnRyb3NwZWN0aW9uT3BlcmF0aW9uU3RyaW5nIH0gZnJvbSAnLi4vdXRpbHMuanMnO1xuY29uc3QgREVGQVVMVF9PUFRJT05TID0ge1xuICAgIGxvZ0ZuOiBjb25zb2xlLmxvZyxcbn07XG5leHBvcnQgY29uc3QgdXNlTG9nZ2VyID0gKHJhd09wdGlvbnMgPSBERUZBVUxUX09QVElPTlMpID0+IHtcbiAgICBjb25zdCBvcHRpb25zID0ge1xuICAgICAgICBERUZBVUxUX09QVElPTlMsXG4gICAgICAgIC4uLnJhd09wdGlvbnMsXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBvblBhcnNlKHsgZXh0ZW5kQ29udGV4dCwgcGFyYW1zIH0pIHtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLnNraXBJbnRyb3NwZWN0aW9uICYmIGlzSW50cm9zcGVjdGlvbk9wZXJhdGlvblN0cmluZyhwYXJhbXMuc291cmNlKSkge1xuICAgICAgICAgICAgICAgIGV4dGVuZENvbnRleHQoe1xuICAgICAgICAgICAgICAgICAgICBbZW52ZWxvcElzSW50cm9zcGVjdGlvblN5bWJvbF06IHRydWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIG9uRXhlY3V0ZSh7IGFyZ3MgfSkge1xuICAgICAgICAgICAgaWYgKGFyZ3MuY29udGV4dFZhbHVlW2VudmVsb3BJc0ludHJvc3BlY3Rpb25TeW1ib2xdKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgb3B0aW9ucy5sb2dGbignZXhlY3V0ZS1zdGFydCcsIHsgYXJncyB9KTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgb25FeGVjdXRlRG9uZTogKHsgcmVzdWx0IH0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgb3B0aW9ucy5sb2dGbignZXhlY3V0ZS1lbmQnLCB7IGFyZ3MsIHJlc3VsdCB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgb25TdWJzY3JpYmUoeyBhcmdzIH0pIHtcbiAgICAgICAgICAgIGlmIChhcmdzLmNvbnRleHRWYWx1ZVtlbnZlbG9wSXNJbnRyb3NwZWN0aW9uU3ltYm9sXSkge1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9wdGlvbnMubG9nRm4oJ3N1YnNjcmliZS1zdGFydCcsIHsgYXJncyB9KTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgb25TdWJzY3JpYmVSZXN1bHQ6ICh7IHJlc3VsdCB9KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIG9wdGlvbnMubG9nRm4oJ3N1YnNjcmliZS1lbmQnLCB7IGFyZ3MsIHJlc3VsdCB9KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/plugins/use-logger.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/plugins/use-masked-errors.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@envelop/core/esm/plugins/use-masked-errors.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_ERROR_MESSAGE: () => (/* binding */ DEFAULT_ERROR_MESSAGE),\n/* harmony export */   createDefaultMaskError: () => (/* binding */ createDefaultMaskError),\n/* harmony export */   defaultMaskError: () => (/* binding */ defaultMaskError),\n/* harmony export */   isGraphQLError: () => (/* binding */ isGraphQLError),\n/* harmony export */   isOriginalGraphQLError: () => (/* binding */ isOriginalGraphQLError),\n/* harmony export */   useMaskedErrors: () => (/* binding */ useMaskedErrors)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils.js */ \"(ssr)/../node_modules/@envelop/core/esm/utils.js\");\n\nconst DEFAULT_ERROR_MESSAGE = 'Unexpected error.';\nfunction isGraphQLError(error) {\n    return error instanceof Error && error.name === 'GraphQLError';\n}\nfunction isOriginalGraphQLError(error) {\n    if (isGraphQLError(error)) {\n        if (error.originalError != null) {\n            return isOriginalGraphQLError(error.originalError);\n        }\n        return true;\n    }\n    return false;\n}\nfunction createSerializableGraphQLError(message, originalError, isDev) {\n    const error = new Error(message);\n    error.name = 'GraphQLError';\n    if (isDev) {\n        const extensions = originalError instanceof Error\n            ? { message: originalError.message, stack: originalError.stack }\n            : { message: String(originalError) };\n        Object.defineProperty(error, 'extensions', {\n            get() {\n                return extensions;\n            },\n        });\n    }\n    Object.defineProperty(error, 'toJSON', {\n        value() {\n            return {\n                message: error.message,\n                extensions: error.extensions,\n            };\n        },\n    });\n    return error;\n}\nconst createDefaultMaskError = (isDev) => (error, message) => {\n    if (isOriginalGraphQLError(error)) {\n        return error;\n    }\n    return createSerializableGraphQLError(message, error, isDev);\n};\nconst isDev = globalThis.process?.env?.NODE_ENV === 'development';\nconst defaultMaskError = createDefaultMaskError(isDev);\nconst makeHandleResult = (maskError, message) => ({ result, setResult, }) => {\n    if (result.errors != null) {\n        setResult({ ...result, errors: result.errors.map(error => maskError(error, message)) });\n    }\n};\nfunction useMaskedErrors(opts) {\n    const maskError = opts?.maskError ?? defaultMaskError;\n    const message = opts?.errorMessage || DEFAULT_ERROR_MESSAGE;\n    const handleResult = makeHandleResult(maskError, message);\n    return {\n        onPluginInit(context) {\n            context.registerContextErrorHandler(({ error, setError }) => {\n                setError(maskError(error, message));\n            });\n        },\n        onExecute() {\n            return {\n                onExecuteDone(payload) {\n                    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.handleStreamOrSingleExecutionResult)(payload, handleResult);\n                },\n            };\n        },\n        onSubscribe() {\n            return {\n                onSubscribeResult(payload) {\n                    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.handleStreamOrSingleExecutionResult)(payload, handleResult);\n                },\n                onSubscribeError({ error, setError }) {\n                    setError(maskError(error, message));\n                },\n            };\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLW1hc2tlZC1lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrRTtBQUMzRDtBQUNBO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0I7QUFDaEIsZ0JBQWdCO0FBQ2hCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asb0RBQW9ELG9CQUFvQjtBQUN4RTtBQUNBLG9CQUFvQiwwRUFBMEU7QUFDOUY7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxpQkFBaUI7QUFDcEU7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw4RUFBbUM7QUFDOUQsaUJBQWlCO0FBQ2pCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw4RUFBbUM7QUFDOUQsaUJBQWlCO0FBQ2pCLG1DQUFtQyxpQkFBaUI7QUFDcEQ7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLW1hc2tlZC1lcnJvcnMuanM/NTQ0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoYW5kbGVTdHJlYW1PclNpbmdsZUV4ZWN1dGlvblJlc3VsdCB9IGZyb20gJy4uL3V0aWxzLmpzJztcbmV4cG9ydCBjb25zdCBERUZBVUxUX0VSUk9SX01FU1NBR0UgPSAnVW5leHBlY3RlZCBlcnJvci4nO1xuZXhwb3J0IGZ1bmN0aW9uIGlzR3JhcGhRTEVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuIGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgZXJyb3IubmFtZSA9PT0gJ0dyYXBoUUxFcnJvcic7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPcmlnaW5hbEdyYXBoUUxFcnJvcihlcnJvcikge1xuICAgIGlmIChpc0dyYXBoUUxFcnJvcihlcnJvcikpIHtcbiAgICAgICAgaWYgKGVycm9yLm9yaWdpbmFsRXJyb3IgIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIGlzT3JpZ2luYWxHcmFwaFFMRXJyb3IoZXJyb3Iub3JpZ2luYWxFcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVNlcmlhbGl6YWJsZUdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcmlnaW5hbEVycm9yLCBpc0Rldikge1xuICAgIGNvbnN0IGVycm9yID0gbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIGVycm9yLm5hbWUgPSAnR3JhcGhRTEVycm9yJztcbiAgICBpZiAoaXNEZXYpIHtcbiAgICAgICAgY29uc3QgZXh0ZW5zaW9ucyA9IG9yaWdpbmFsRXJyb3IgaW5zdGFuY2VvZiBFcnJvclxuICAgICAgICAgICAgPyB7IG1lc3NhZ2U6IG9yaWdpbmFsRXJyb3IubWVzc2FnZSwgc3RhY2s6IG9yaWdpbmFsRXJyb3Iuc3RhY2sgfVxuICAgICAgICAgICAgOiB7IG1lc3NhZ2U6IFN0cmluZyhvcmlnaW5hbEVycm9yKSB9O1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoZXJyb3IsICdleHRlbnNpb25zJywge1xuICAgICAgICAgICAgZ2V0KCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBleHRlbnNpb25zO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnJvciwgJ3RvSlNPTicsIHtcbiAgICAgICAgdmFsdWUoKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG1lc3NhZ2U6IGVycm9yLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogZXJyb3IuZXh0ZW5zaW9ucyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIGVycm9yO1xufVxuZXhwb3J0IGNvbnN0IGNyZWF0ZURlZmF1bHRNYXNrRXJyb3IgPSAoaXNEZXYpID0+IChlcnJvciwgbWVzc2FnZSkgPT4ge1xuICAgIGlmIChpc09yaWdpbmFsR3JhcGhRTEVycm9yKGVycm9yKSkge1xuICAgICAgICByZXR1cm4gZXJyb3I7XG4gICAgfVxuICAgIHJldHVybiBjcmVhdGVTZXJpYWxpemFibGVHcmFwaFFMRXJyb3IobWVzc2FnZSwgZXJyb3IsIGlzRGV2KTtcbn07XG5jb25zdCBpc0RldiA9IGdsb2JhbFRoaXMucHJvY2Vzcz8uZW52Py5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JztcbmV4cG9ydCBjb25zdCBkZWZhdWx0TWFza0Vycm9yID0gY3JlYXRlRGVmYXVsdE1hc2tFcnJvcihpc0Rldik7XG5jb25zdCBtYWtlSGFuZGxlUmVzdWx0ID0gKG1hc2tFcnJvciwgbWVzc2FnZSkgPT4gKHsgcmVzdWx0LCBzZXRSZXN1bHQsIH0pID0+IHtcbiAgICBpZiAocmVzdWx0LmVycm9ycyAhPSBudWxsKSB7XG4gICAgICAgIHNldFJlc3VsdCh7IC4uLnJlc3VsdCwgZXJyb3JzOiByZXN1bHQuZXJyb3JzLm1hcChlcnJvciA9PiBtYXNrRXJyb3IoZXJyb3IsIG1lc3NhZ2UpKSB9KTtcbiAgICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHVzZU1hc2tlZEVycm9ycyhvcHRzKSB7XG4gICAgY29uc3QgbWFza0Vycm9yID0gb3B0cz8ubWFza0Vycm9yID8/IGRlZmF1bHRNYXNrRXJyb3I7XG4gICAgY29uc3QgbWVzc2FnZSA9IG9wdHM/LmVycm9yTWVzc2FnZSB8fCBERUZBVUxUX0VSUk9SX01FU1NBR0U7XG4gICAgY29uc3QgaGFuZGxlUmVzdWx0ID0gbWFrZUhhbmRsZVJlc3VsdChtYXNrRXJyb3IsIG1lc3NhZ2UpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG9uUGx1Z2luSW5pdChjb250ZXh0KSB7XG4gICAgICAgICAgICBjb250ZXh0LnJlZ2lzdGVyQ29udGV4dEVycm9ySGFuZGxlcigoeyBlcnJvciwgc2V0RXJyb3IgfSkgPT4ge1xuICAgICAgICAgICAgICAgIHNldEVycm9yKG1hc2tFcnJvcihlcnJvciwgbWVzc2FnZSkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uRXhlY3V0ZSgpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgb25FeGVjdXRlRG9uZShwYXlsb2FkKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVTdHJlYW1PclNpbmdsZUV4ZWN1dGlvblJlc3VsdChwYXlsb2FkLCBoYW5kbGVSZXN1bHQpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBvblN1YnNjcmliZSgpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgb25TdWJzY3JpYmVSZXN1bHQocGF5bG9hZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlU3RyZWFtT3JTaW5nbGVFeGVjdXRpb25SZXN1bHQocGF5bG9hZCwgaGFuZGxlUmVzdWx0KTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIG9uU3Vic2NyaWJlRXJyb3IoeyBlcnJvciwgc2V0RXJyb3IgfSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRFcnJvcihtYXNrRXJyb3IoZXJyb3IsIG1lc3NhZ2UpKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/plugins/use-masked-errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/plugins/use-schema.js":
/*!***************************************************************!*\
  !*** ../node_modules/@envelop/core/esm/plugins/use-schema.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSchema: () => (/* binding */ useSchema),\n/* harmony export */   useSchemaByContext: () => (/* binding */ useSchemaByContext)\n/* harmony export */ });\nconst useSchema = (schema) => {\n    return {\n        onPluginInit({ setSchema }) {\n            setSchema(schema);\n        },\n    };\n};\nconst useSchemaByContext = (schemaLoader) => {\n    return {\n        onEnveloped({ setSchema, context }) {\n            setSchema(schemaLoader(context));\n        },\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLXNjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQSx1QkFBdUIsV0FBVztBQUNsQztBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ087QUFDUDtBQUNBLHNCQUFzQixvQkFBb0I7QUFDMUM7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2NvcmUvZXNtL3BsdWdpbnMvdXNlLXNjaGVtYS5qcz84NmZmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCB1c2VTY2hlbWEgPSAoc2NoZW1hKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25QbHVnaW5Jbml0KHsgc2V0U2NoZW1hIH0pIHtcbiAgICAgICAgICAgIHNldFNjaGVtYShzY2hlbWEpO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuZXhwb3J0IGNvbnN0IHVzZVNjaGVtYUJ5Q29udGV4dCA9IChzY2hlbWFMb2FkZXIpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBvbkVudmVsb3BlZCh7IHNldFNjaGVtYSwgY29udGV4dCB9KSB7XG4gICAgICAgICAgICBzZXRTY2hlbWEoc2NoZW1hTG9hZGVyKGNvbnRleHQpKTtcbiAgICAgICAgfSxcbiAgICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/plugins/use-schema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/core/esm/utils.js":
/*!**************************************************!*\
  !*** ../node_modules/@envelop/core/esm/utils.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   envelopIsIntrospectionSymbol: () => (/* binding */ envelopIsIntrospectionSymbol),\n/* harmony export */   errorAsyncIterator: () => (/* binding */ errorAsyncIterator),\n/* harmony export */   finalAsyncIterator: () => (/* binding */ finalAsyncIterator),\n/* harmony export */   handleStreamOrSingleExecutionResult: () => (/* binding */ handleStreamOrSingleExecutionResult),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   isIntrospectionOperationString: () => (/* binding */ isIntrospectionOperationString),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   makeExecute: () => (/* binding */ makeExecute),\n/* harmony export */   makeSubscribe: () => (/* binding */ makeSubscribe),\n/* harmony export */   mapAsyncIterator: () => (/* binding */ mapAsyncIterator),\n/* harmony export */   mapMaybePromise: () => (/* binding */ mapMaybePromise)\n/* harmony export */ });\nconst envelopIsIntrospectionSymbol = Symbol('ENVELOP_IS_INTROSPECTION');\nfunction isIntrospectionOperationString(operation) {\n    return (typeof operation === 'string' ? operation : operation.body).indexOf('__schema') !== -1;\n}\nfunction getSubscribeArgs(args) {\n    return args.length === 1\n        ? args[0]\n        : {\n            schema: args[0],\n            document: args[1],\n            rootValue: args[2],\n            contextValue: args[3],\n            variableValues: args[4],\n            operationName: args[5],\n            fieldResolver: args[6],\n            subscribeFieldResolver: args[7],\n        };\n}\n/**\n * Utility function for making a subscribe function that handles polymorphic arguments.\n */\nconst makeSubscribe = (subscribeFn) => ((...polyArgs) => subscribeFn(getSubscribeArgs(polyArgs)));\nfunction mapAsyncIterator(source, mapper) {\n    const iterator = source[Symbol.asyncIterator]();\n    async function mapResult(result) {\n        if (result.done) {\n            return result;\n        }\n        try {\n            return { value: await mapper(result.value), done: false };\n        }\n        catch (error) {\n            try {\n                await iterator.return?.();\n            }\n            catch (_error) {\n                /* ignore error */\n            }\n            throw error;\n        }\n    }\n    const stream = {\n        [Symbol.asyncIterator]() {\n            return stream;\n        },\n        async next() {\n            return await mapResult(await iterator.next());\n        },\n        async return() {\n            const promise = iterator.return?.();\n            return promise ? await mapResult(await promise) : { value: undefined, done: true };\n        },\n        async throw(error) {\n            const promise = iterator.throw?.();\n            if (promise) {\n                return await mapResult(await promise);\n            }\n            // if the source has no throw method we just re-throw error\n            // usually throw is not called anyways\n            throw error;\n        },\n    };\n    return stream;\n}\nfunction getExecuteArgs(args) {\n    return args.length === 1\n        ? args[0]\n        : {\n            schema: args[0],\n            document: args[1],\n            rootValue: args[2],\n            contextValue: args[3],\n            variableValues: args[4],\n            operationName: args[5],\n            fieldResolver: args[6],\n            typeResolver: args[7],\n        };\n}\n/**\n * Utility function for making a execute function that handles polymorphic arguments.\n */\nconst makeExecute = (executeFn) => ((...polyArgs) => executeFn(getExecuteArgs(polyArgs)));\n/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * implementing a `Symbol.asyncIterator` method.\n *\n * Source: https://github.com/graphql/graphql-js/blob/main/src/jsutils/isAsyncIterable.ts\n */\nfunction isAsyncIterable(maybeAsyncIterable) {\n    return (typeof maybeAsyncIterable === 'object' &&\n        maybeAsyncIterable != null &&\n        typeof maybeAsyncIterable[Symbol.asyncIterator] === 'function');\n}\n/**\n * A utility function for handling `onExecuteDone` hook result, for simplifying the handling of AsyncIterable returned from `execute`.\n *\n * @param payload The payload send to `onExecuteDone` hook function\n * @param fn The handler to be executed on each result\n * @returns a subscription for streamed results, or undefined in case of an non-async\n */\nfunction handleStreamOrSingleExecutionResult(payload, fn) {\n    if (isAsyncIterable(payload.result)) {\n        return { onNext: fn };\n    }\n    fn({\n        args: payload.args,\n        result: payload.result,\n        setResult: payload.setResult,\n    });\n    return undefined;\n}\nfunction finalAsyncIterator(source, onFinal) {\n    const iterator = source[Symbol.asyncIterator]();\n    let isDone = false;\n    const stream = {\n        [Symbol.asyncIterator]() {\n            return stream;\n        },\n        async next() {\n            const result = await iterator.next();\n            if (result.done && isDone === false) {\n                isDone = true;\n                onFinal();\n            }\n            return result;\n        },\n        async return() {\n            const promise = iterator.return?.();\n            if (isDone === false) {\n                isDone = true;\n                onFinal();\n            }\n            return promise ? await promise : { done: true, value: undefined };\n        },\n        async throw(error) {\n            const promise = iterator.throw?.();\n            if (promise) {\n                return await promise;\n            }\n            // if the source has no throw method we just re-throw error\n            // usually throw is not called anyways\n            throw error;\n        },\n    };\n    return stream;\n}\nfunction errorAsyncIterator(source, onError) {\n    const iterator = source[Symbol.asyncIterator]();\n    const stream = {\n        [Symbol.asyncIterator]() {\n            return stream;\n        },\n        async next() {\n            try {\n                return await iterator.next();\n            }\n            catch (error) {\n                onError(error);\n                return { done: true, value: undefined };\n            }\n        },\n        async return() {\n            const promise = iterator.return?.();\n            return promise ? await promise : { done: true, value: undefined };\n        },\n        async throw(error) {\n            const promise = iterator.throw?.();\n            if (promise) {\n                return await promise;\n            }\n            // if the source has no throw method we just re-throw error\n            // usually throw is not called anyways\n            throw error;\n        },\n    };\n    return stream;\n}\nfunction isPromise(value) {\n    return value?.then !== undefined;\n}\nfunction mapMaybePromise(value, mapper, errorMapper) {\n    if (isPromise(value)) {\n        if (errorMapper) {\n            try {\n                return value.then(mapper, errorMapper);\n            }\n            catch (e) {\n                return errorMapper(e);\n            }\n        }\n        return value.then(mapper);\n    }\n    if (errorMapper) {\n        try {\n            return mapper(value);\n        }\n        catch (e) {\n            return errorMapper(e);\n        }\n    }\n    return mapper(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/core/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@envelop/graphql-jit/esm/index.js":
/*!*********************************************************!*\
  !*** ../node_modules/@envelop/graphql-jit/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useGraphQlJit: () => (/* binding */ useGraphQlJit)\n/* harmony export */ });\n/* harmony import */ var graphql_jit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql-jit */ \"(ssr)/../node_modules/graphql-jit/dist/esm/index.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/document-string-map.js\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/utils.js\");\n\n\n\nconst useGraphQlJit = (compilerOptions = {}, pluginOptions = {}) => {\n    const jitCacheByDocumentString = pluginOptions.cache;\n    const jitCacheByDocument = new WeakMap();\n    function getCacheEntry(args) {\n        let cacheEntry;\n        cacheEntry = jitCacheByDocument.get(args.document);\n        if (!cacheEntry && jitCacheByDocumentString) {\n            const documentSource = (0,_envelop_core__WEBPACK_IMPORTED_MODULE_2__.getDocumentString)(args.document);\n            if (documentSource) {\n                cacheEntry = jitCacheByDocumentString.get(documentSource);\n            }\n        }\n        if (!cacheEntry) {\n            const compilationResult = (0,graphql_jit__WEBPACK_IMPORTED_MODULE_0__.compileQuery)(args.schema, args.document, args.operationName ?? undefined, compilerOptions);\n            if (!(0,graphql_jit__WEBPACK_IMPORTED_MODULE_0__.isCompiledQuery)(compilationResult)) {\n                if (pluginOptions?.onError) {\n                    pluginOptions.onError(compilationResult);\n                }\n                else {\n                    console.error(compilationResult);\n                }\n                cacheEntry = {\n                    query: () => compilationResult,\n                    stringify: r => JSON.stringify(r),\n                };\n            }\n            else {\n                cacheEntry = compilationResult;\n            }\n            jitCacheByDocument.set(args.document, cacheEntry);\n            if (jitCacheByDocumentString) {\n                const documentSource = (0,_envelop_core__WEBPACK_IMPORTED_MODULE_2__.getDocumentString)(args.document);\n                if (documentSource) {\n                    jitCacheByDocumentString.set(documentSource, cacheEntry);\n                }\n            }\n        }\n        return cacheEntry;\n    }\n    function jitExecutor(args) {\n        const cacheEntry = getCacheEntry(args);\n        const executeFn = cacheEntry.subscribe ? cacheEntry.subscribe : cacheEntry.query;\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => executeFn(args.rootValue, args.contextValue, args.variableValues))\n            .then(result => {\n            result.stringify = cacheEntry.stringify;\n            return result;\n        })\n            .resolve();\n    }\n    const executeFn = (0,_envelop_core__WEBPACK_IMPORTED_MODULE_3__.makeExecute)(jitExecutor);\n    const subscribeFn = (0,_envelop_core__WEBPACK_IMPORTED_MODULE_3__.makeSubscribe)(jitExecutor);\n    const enableIfFn = pluginOptions.enableIf;\n    return {\n        onExecute({ args, setExecuteFn }) {\n            if (enableIfFn) {\n                return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => enableIfFn(args))\n                    .then(enableIfRes => {\n                    if (enableIfRes) {\n                        setExecuteFn(executeFn);\n                    }\n                })\n                    .resolve();\n            }\n            setExecuteFn(executeFn);\n        },\n        onSubscribe({ args, setSubscribeFn }) {\n            if (enableIfFn) {\n                return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => enableIfFn(args))\n                    .then(enableIfRes => {\n                    if (enableIfRes) {\n                        setSubscribeFn(subscribeFn);\n                    }\n                })\n                    .resolve();\n            }\n            setSubscribeFn(subscribeFn);\n        },\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BlbnZlbG9wL2dyYXBocWwtaml0L2VzbS9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RDtBQUNWO0FBQzRCO0FBQ3ZFLDJDQUEyQyxvQkFBb0I7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGdFQUFpQjtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHlEQUFZO0FBQ2xELGlCQUFpQiw0REFBZTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxnRUFBaUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQWM7QUFDakM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxzQkFBc0IsMERBQVc7QUFDakMsd0JBQXdCLDREQUFhO0FBQ3JDO0FBQ0E7QUFDQSxvQkFBb0Isb0JBQW9CO0FBQ3hDO0FBQ0EsMkJBQTJCLDREQUFjO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxzQkFBc0Isc0JBQXNCO0FBQzVDO0FBQ0EsMkJBQTJCLDREQUFjO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGVudmVsb3AvZ3JhcGhxbC1qaXQvZXNtL2luZGV4LmpzP2ZhMjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcGlsZVF1ZXJ5LCBpc0NvbXBpbGVkUXVlcnkgfSBmcm9tICdncmFwaHFsLWppdCc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuaW1wb3J0IHsgZ2V0RG9jdW1lbnRTdHJpbmcsIG1ha2VFeGVjdXRlLCBtYWtlU3Vic2NyaWJlIH0gZnJvbSAnQGVudmVsb3AvY29yZSc7XG5leHBvcnQgY29uc3QgdXNlR3JhcGhRbEppdCA9IChjb21waWxlck9wdGlvbnMgPSB7fSwgcGx1Z2luT3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgY29uc3Qgaml0Q2FjaGVCeURvY3VtZW50U3RyaW5nID0gcGx1Z2luT3B0aW9ucy5jYWNoZTtcbiAgICBjb25zdCBqaXRDYWNoZUJ5RG9jdW1lbnQgPSBuZXcgV2Vha01hcCgpO1xuICAgIGZ1bmN0aW9uIGdldENhY2hlRW50cnkoYXJncykge1xuICAgICAgICBsZXQgY2FjaGVFbnRyeTtcbiAgICAgICAgY2FjaGVFbnRyeSA9IGppdENhY2hlQnlEb2N1bWVudC5nZXQoYXJncy5kb2N1bWVudCk7XG4gICAgICAgIGlmICghY2FjaGVFbnRyeSAmJiBqaXRDYWNoZUJ5RG9jdW1lbnRTdHJpbmcpIHtcbiAgICAgICAgICAgIGNvbnN0IGRvY3VtZW50U291cmNlID0gZ2V0RG9jdW1lbnRTdHJpbmcoYXJncy5kb2N1bWVudCk7XG4gICAgICAgICAgICBpZiAoZG9jdW1lbnRTb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBjYWNoZUVudHJ5ID0gaml0Q2FjaGVCeURvY3VtZW50U3RyaW5nLmdldChkb2N1bWVudFNvdXJjZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFjYWNoZUVudHJ5KSB7XG4gICAgICAgICAgICBjb25zdCBjb21waWxhdGlvblJlc3VsdCA9IGNvbXBpbGVRdWVyeShhcmdzLnNjaGVtYSwgYXJncy5kb2N1bWVudCwgYXJncy5vcGVyYXRpb25OYW1lID8/IHVuZGVmaW5lZCwgY29tcGlsZXJPcHRpb25zKTtcbiAgICAgICAgICAgIGlmICghaXNDb21waWxlZFF1ZXJ5KGNvbXBpbGF0aW9uUmVzdWx0KSkge1xuICAgICAgICAgICAgICAgIGlmIChwbHVnaW5PcHRpb25zPy5vbkVycm9yKSB7XG4gICAgICAgICAgICAgICAgICAgIHBsdWdpbk9wdGlvbnMub25FcnJvcihjb21waWxhdGlvblJlc3VsdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKGNvbXBpbGF0aW9uUmVzdWx0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY2FjaGVFbnRyeSA9IHtcbiAgICAgICAgICAgICAgICAgICAgcXVlcnk6ICgpID0+IGNvbXBpbGF0aW9uUmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBzdHJpbmdpZnk6IHIgPT4gSlNPTi5zdHJpbmdpZnkociksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNhY2hlRW50cnkgPSBjb21waWxhdGlvblJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGppdENhY2hlQnlEb2N1bWVudC5zZXQoYXJncy5kb2N1bWVudCwgY2FjaGVFbnRyeSk7XG4gICAgICAgICAgICBpZiAoaml0Q2FjaGVCeURvY3VtZW50U3RyaW5nKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZG9jdW1lbnRTb3VyY2UgPSBnZXREb2N1bWVudFN0cmluZyhhcmdzLmRvY3VtZW50KTtcbiAgICAgICAgICAgICAgICBpZiAoZG9jdW1lbnRTb3VyY2UpIHtcbiAgICAgICAgICAgICAgICAgICAgaml0Q2FjaGVCeURvY3VtZW50U3RyaW5nLnNldChkb2N1bWVudFNvdXJjZSwgY2FjaGVFbnRyeSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjYWNoZUVudHJ5O1xuICAgIH1cbiAgICBmdW5jdGlvbiBqaXRFeGVjdXRvcihhcmdzKSB7XG4gICAgICAgIGNvbnN0IGNhY2hlRW50cnkgPSBnZXRDYWNoZUVudHJ5KGFyZ3MpO1xuICAgICAgICBjb25zdCBleGVjdXRlRm4gPSBjYWNoZUVudHJ5LnN1YnNjcmliZSA/IGNhY2hlRW50cnkuc3Vic2NyaWJlIDogY2FjaGVFbnRyeS5xdWVyeTtcbiAgICAgICAgcmV0dXJuIG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiBleGVjdXRlRm4oYXJncy5yb290VmFsdWUsIGFyZ3MuY29udGV4dFZhbHVlLCBhcmdzLnZhcmlhYmxlVmFsdWVzKSlcbiAgICAgICAgICAgIC50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICByZXN1bHQuc3RyaW5naWZ5ID0gY2FjaGVFbnRyeS5zdHJpbmdpZnk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9KVxuICAgICAgICAgICAgLnJlc29sdmUoKTtcbiAgICB9XG4gICAgY29uc3QgZXhlY3V0ZUZuID0gbWFrZUV4ZWN1dGUoaml0RXhlY3V0b3IpO1xuICAgIGNvbnN0IHN1YnNjcmliZUZuID0gbWFrZVN1YnNjcmliZShqaXRFeGVjdXRvcik7XG4gICAgY29uc3QgZW5hYmxlSWZGbiA9IHBsdWdpbk9wdGlvbnMuZW5hYmxlSWY7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb25FeGVjdXRlKHsgYXJncywgc2V0RXhlY3V0ZUZuIH0pIHtcbiAgICAgICAgICAgIGlmIChlbmFibGVJZkZuKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiBlbmFibGVJZkZuKGFyZ3MpKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihlbmFibGVJZlJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChlbmFibGVJZlJlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc2V0RXhlY3V0ZUZuKGV4ZWN1dGVGbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAucmVzb2x2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0RXhlY3V0ZUZuKGV4ZWN1dGVGbik7XG4gICAgICAgIH0sXG4gICAgICAgIG9uU3Vic2NyaWJlKHsgYXJncywgc2V0U3Vic2NyaWJlRm4gfSkge1xuICAgICAgICAgICAgaWYgKGVuYWJsZUlmRm4pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IFZhbHVlT3JQcm9taXNlKCgpID0+IGVuYWJsZUlmRm4oYXJncykpXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKGVuYWJsZUlmUmVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVuYWJsZUlmUmVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZXRTdWJzY3JpYmVGbihzdWJzY3JpYmVGbik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAucmVzb2x2ZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgc2V0U3Vic2NyaWJlRm4oc3Vic2NyaWJlRm4pO1xuICAgICAgICB9LFxuICAgIH07XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@envelop/graphql-jit/esm/index.js\n");

/***/ })

};
;