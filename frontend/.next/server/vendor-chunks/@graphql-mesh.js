/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@graphql-mesh";
exports.ids = ["vendor-chunks/@graphql-mesh"];
exports.modules = {

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \**********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  const newNodeFetch = __webpack_require__(/*! @whatwg-node/node-fetch */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsb0lBQXNCOztBQUV6RCxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQyxtSEFBcUI7QUFDMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixtQkFBTyxDQUFDLDhIQUF5Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUN6QztBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L2NyZWF0ZS1ub2RlLXBvbnlmaWxsLmpzPzgyYjgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2hvdWxkU2tpcFBvbnlmaWxsID0gcmVxdWlyZSgnLi9zaG91bGRTa2lwUG9ueWZpbGwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVOb2RlUG9ueWZpbGwob3B0cyA9IHt9KSB7XG4gIGNvbnN0IHBvbnlmaWxscyA9IHt9O1xuICBcbiAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSBnbG9iYWxUaGlzLlVSTFBhdHRlcm47XG5cbiAgLy8gV2UgY2FsbCB0aGlzIHByZXZpb3VzbHkgdG8gcGF0Y2ggYEJ1bmBcbiAgaWYgKCFwb255ZmlsbHMuVVJMUGF0dGVybikge1xuICAgIGNvbnN0IHVybFBhdHRlcm5Nb2R1bGUgPSByZXF1aXJlKCd1cmxwYXR0ZXJuLXBvbHlmaWxsJyk7XG4gICAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSB1cmxQYXR0ZXJuTW9kdWxlLlVSTFBhdHRlcm47XG4gIH1cblxuICBpZiAob3B0cy5za2lwUG9ueWZpbGwgfHwgc2hvdWxkU2tpcFBvbnlmaWxsKCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZmV0Y2g6IGdsb2JhbFRoaXMuZmV0Y2gsXG4gICAgICBIZWFkZXJzOiBnbG9iYWxUaGlzLkhlYWRlcnMsXG4gICAgICBSZXF1ZXN0OiBnbG9iYWxUaGlzLlJlcXVlc3QsXG4gICAgICBSZXNwb25zZTogZ2xvYmFsVGhpcy5SZXNwb25zZSxcbiAgICAgIEZvcm1EYXRhOiBnbG9iYWxUaGlzLkZvcm1EYXRhLFxuICAgICAgUmVhZGFibGVTdHJlYW06IGdsb2JhbFRoaXMuUmVhZGFibGVTdHJlYW0sXG4gICAgICBXcml0YWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5Xcml0YWJsZVN0cmVhbSxcbiAgICAgIFRyYW5zZm9ybVN0cmVhbTogZ2xvYmFsVGhpcy5UcmFuc2Zvcm1TdHJlYW0sXG4gICAgICBDb21wcmVzc2lvblN0cmVhbTogZ2xvYmFsVGhpcy5Db21wcmVzc2lvblN0cmVhbSxcbiAgICAgIERlY29tcHJlc3Npb25TdHJlYW06IGdsb2JhbFRoaXMuRGVjb21wcmVzc2lvblN0cmVhbSxcbiAgICAgIEJsb2I6IGdsb2JhbFRoaXMuQmxvYixcbiAgICAgIEZpbGU6IGdsb2JhbFRoaXMuRmlsZSxcbiAgICAgIGNyeXB0bzogZ2xvYmFsVGhpcy5jcnlwdG8sXG4gICAgICBidG9hOiBnbG9iYWxUaGlzLmJ0b2EsXG4gICAgICBUZXh0RW5jb2RlcjogZ2xvYmFsVGhpcy5UZXh0RW5jb2RlcixcbiAgICAgIFRleHREZWNvZGVyOiBnbG9iYWxUaGlzLlRleHREZWNvZGVyLFxuICAgICAgVVJMUGF0dGVybjogcG9ueWZpbGxzLlVSTFBhdHRlcm4sXG4gICAgICBVUkw6IGdsb2JhbFRoaXMuVVJMLFxuICAgICAgVVJMU2VhcmNoUGFyYW1zOiBnbG9iYWxUaGlzLlVSTFNlYXJjaFBhcmFtc1xuICAgIH07XG4gIH1cblxuICBjb25zdCBuZXdOb2RlRmV0Y2ggPSByZXF1aXJlKCdAd2hhdHdnLW5vZGUvbm9kZS1mZXRjaCcpO1xuXG4gIHBvbnlmaWxscy5mZXRjaCA9IG5ld05vZGVGZXRjaC5mZXRjaDtcbiAgcG9ueWZpbGxzLlJlcXVlc3QgPSBuZXdOb2RlRmV0Y2guUmVxdWVzdDtcbiAgcG9ueWZpbGxzLlJlc3BvbnNlID0gbmV3Tm9kZUZldGNoLlJlc3BvbnNlO1xuICBwb255ZmlsbHMuSGVhZGVycyA9IG5ld05vZGVGZXRjaC5IZWFkZXJzO1xuICBwb255ZmlsbHMuRm9ybURhdGEgPSBuZXdOb2RlRmV0Y2guRm9ybURhdGE7XG4gIHBvbnlmaWxscy5SZWFkYWJsZVN0cmVhbSA9IG5ld05vZGVGZXRjaC5SZWFkYWJsZVN0cmVhbTtcblxuICBwb255ZmlsbHMuVVJMID0gbmV3Tm9kZUZldGNoLlVSTDtcbiAgcG9ueWZpbGxzLlVSTFNlYXJjaFBhcmFtcyA9IG5ld05vZGVGZXRjaC5VUkxTZWFyY2hQYXJhbXM7XG5cbiAgcG9ueWZpbGxzLldyaXRhYmxlU3RyZWFtID0gbmV3Tm9kZUZldGNoLldyaXRhYmxlU3RyZWFtO1xuICBwb255ZmlsbHMuVHJhbnNmb3JtU3RyZWFtID0gbmV3Tm9kZUZldGNoLlRyYW5zZm9ybVN0cmVhbTtcbiAgcG9ueWZpbGxzLkNvbXByZXNzaW9uU3RyZWFtID0gbmV3Tm9kZUZldGNoLkNvbXByZXNzaW9uU3RyZWFtO1xuICBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IG5ld05vZGVGZXRjaC5EZWNvbXByZXNzaW9uU3RyZWFtO1xuXG4gIHBvbnlmaWxscy5CbG9iID0gbmV3Tm9kZUZldGNoLkJsb2I7XG4gIHBvbnlmaWxscy5GaWxlID0gbmV3Tm9kZUZldGNoLkZpbGU7XG4gIHBvbnlmaWxscy5jcnlwdG8gPSBnbG9iYWxUaGlzLmNyeXB0bztcbiAgcG9ueWZpbGxzLmJ0b2EgPSBuZXdOb2RlRmV0Y2guYnRvYTtcbiAgcG9ueWZpbGxzLlRleHRFbmNvZGVyID0gbmV3Tm9kZUZldGNoLlRleHRFbmNvZGVyO1xuICBwb255ZmlsbHMuVGV4dERlY29kZXIgPSBuZXdOb2RlRmV0Y2guVGV4dERlY29kZXI7XG5cbiAgaWYgKG9wdHMuZm9ybURhdGFMaW1pdHMpIHtcbiAgICBwb255ZmlsbHMuQm9keSA9IGNsYXNzIEJvZHkgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guQm9keSB7XG4gICAgICBjb25zdHJ1Y3Rvcihib2R5LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihib2R5LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBwb255ZmlsbHMuUmVxdWVzdCA9IGNsYXNzIFJlcXVlc3QgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guUmVxdWVzdCB7XG4gICAgICBjb25zdHJ1Y3RvcihpbnB1dCwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoaW5wdXQsIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHBvbnlmaWxscy5SZXNwb25zZSA9IGNsYXNzIFJlc3BvbnNlIGV4dGVuZHMgbmV3Tm9kZUZldGNoLlJlc3BvbnNlIHtcbiAgICAgIGNvbnN0cnVjdG9yKGJvZHksIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGJvZHksIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKCFwb255ZmlsbHMuY3J5cHRvKSB7XG4gICAgY29uc3QgY3J5cHRvTW9kdWxlID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbiAgICBwb255ZmlsbHMuY3J5cHRvID0gY3J5cHRvTW9kdWxlLndlYmNyeXB0bztcbiAgfVxuXG4gIHJldHVybiBwb255ZmlsbHM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \***************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsd0lBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLG9JQUFzQjtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsdUhBQVEsZUFBZSxDQUFDO0FBQ3ZFLElBQUk7QUFDSjs7QUFFQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQiw4QkFBOEI7O0FBRTlCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcz9lNTIyIl0sInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgY3JlYXRlTm9kZVBvbnlmaWxsID0gcmVxdWlyZSgnLi9jcmVhdGUtbm9kZS1wb255ZmlsbCcpO1xuY29uc3Qgc2hvdWxkU2tpcFBvbnlmaWxsID0gcmVxdWlyZSgnLi9zaG91bGRTa2lwUG9ueWZpbGwnKTtcbmNvbnN0IHBvbnlmaWxscyA9IGNyZWF0ZU5vZGVQb255ZmlsbCgpO1xuXG5pZiAoIXNob3VsZFNraXBQb255ZmlsbCgpKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgbm9kZWxpYmN1cmxOYW1lID0gJ25vZGUtbGliY3VybCdcbiAgICBnbG9iYWxUaGlzLmxpYmN1cmwgPSBnbG9iYWxUaGlzLmxpYmN1cmwgfHwgcmVxdWlyZShub2RlbGliY3VybE5hbWUpO1xuICB9IGNhdGNoIChlKSB7IH1cbn1cblxubW9kdWxlLmV4cG9ydHMuZmV0Y2ggPSBwb255ZmlsbHMuZmV0Y2g7XG5tb2R1bGUuZXhwb3J0cy5IZWFkZXJzID0gcG9ueWZpbGxzLkhlYWRlcnM7XG5tb2R1bGUuZXhwb3J0cy5SZXF1ZXN0ID0gcG9ueWZpbGxzLlJlcXVlc3Q7XG5tb2R1bGUuZXhwb3J0cy5SZXNwb25zZSA9IHBvbnlmaWxscy5SZXNwb25zZTtcbm1vZHVsZS5leHBvcnRzLkZvcm1EYXRhID0gcG9ueWZpbGxzLkZvcm1EYXRhO1xubW9kdWxlLmV4cG9ydHMuUmVhZGFibGVTdHJlYW0gPSBwb255ZmlsbHMuUmVhZGFibGVTdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Xcml0YWJsZVN0cmVhbSA9IHBvbnlmaWxscy5Xcml0YWJsZVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLlRyYW5zZm9ybVN0cmVhbSA9IHBvbnlmaWxscy5UcmFuc2Zvcm1TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Db21wcmVzc2lvblN0cmVhbSA9IHBvbnlmaWxscy5Db21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkRlY29tcHJlc3Npb25TdHJlYW0gPSBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkJsb2IgPSBwb255ZmlsbHMuQmxvYjtcbm1vZHVsZS5leHBvcnRzLkZpbGUgPSBwb255ZmlsbHMuRmlsZTtcbm1vZHVsZS5leHBvcnRzLmNyeXB0byA9IHBvbnlmaWxscy5jcnlwdG87XG5tb2R1bGUuZXhwb3J0cy5idG9hID0gcG9ueWZpbGxzLmJ0b2E7XG5tb2R1bGUuZXhwb3J0cy5UZXh0RW5jb2RlciA9IHBvbnlmaWxscy5UZXh0RW5jb2Rlcjtcbm1vZHVsZS5leHBvcnRzLlRleHREZWNvZGVyID0gcG9ueWZpbGxzLlRleHREZWNvZGVyO1xubW9kdWxlLmV4cG9ydHMuVVJMUGF0dGVybiA9IHBvbnlmaWxscy5VUkxQYXR0ZXJuO1xubW9kdWxlLmV4cG9ydHMuVVJMID0gcG9ueWZpbGxzLlVSTDtcbm1vZHVsZS5leHBvcnRzLlVSTFNlYXJjaFBhcmFtcyA9IHBvbnlmaWxscy5VUkxTZWFyY2hQYXJhbXM7XG5cbmV4cG9ydHMuY3JlYXRlRmV0Y2ggPSBjcmVhdGVOb2RlUG9ueWZpbGw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \********************************************************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  // Bun and Deno already have a Fetch API\n  if (globalThis.Deno) {\n    return true\n  }\n  if (process.versions.bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L3Nob3VsZFNraXBQb255ZmlsbC5qcz9jZjI3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuZnVuY3Rpb24gaXNOZXh0SnMoKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhnbG9iYWxUaGlzKS5zb21lKGtleSA9PiBrZXkuc3RhcnRzV2l0aCgnX19ORVhUJykpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hvdWxkU2tpcFBvbnlmaWxsKCkge1xuICAvLyBCdW4gYW5kIERlbm8gYWxyZWFkeSBoYXZlIGEgRmV0Y2ggQVBJXG4gIGlmIChnbG9iYWxUaGlzLkRlbm8pIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmIChwcm9jZXNzLnZlcnNpb25zLmJ1bikge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgaWYgKGlzTmV4dEpzKCkpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiBmYWxzZVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \*******************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  const newNodeFetch = __webpack_require__(/*! @whatwg-node/node-fetch */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsaUlBQXNCOztBQUV6RCxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQyxnSEFBcUI7QUFDMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixtQkFBTyxDQUFDLDJIQUF5Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUN6QztBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L2NyZWF0ZS1ub2RlLXBvbnlmaWxsLmpzP2ExZjkiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2hvdWxkU2tpcFBvbnlmaWxsID0gcmVxdWlyZSgnLi9zaG91bGRTa2lwUG9ueWZpbGwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVOb2RlUG9ueWZpbGwob3B0cyA9IHt9KSB7XG4gIGNvbnN0IHBvbnlmaWxscyA9IHt9O1xuICBcbiAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSBnbG9iYWxUaGlzLlVSTFBhdHRlcm47XG5cbiAgLy8gV2UgY2FsbCB0aGlzIHByZXZpb3VzbHkgdG8gcGF0Y2ggYEJ1bmBcbiAgaWYgKCFwb255ZmlsbHMuVVJMUGF0dGVybikge1xuICAgIGNvbnN0IHVybFBhdHRlcm5Nb2R1bGUgPSByZXF1aXJlKCd1cmxwYXR0ZXJuLXBvbHlmaWxsJyk7XG4gICAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSB1cmxQYXR0ZXJuTW9kdWxlLlVSTFBhdHRlcm47XG4gIH1cblxuICBpZiAob3B0cy5za2lwUG9ueWZpbGwgfHwgc2hvdWxkU2tpcFBvbnlmaWxsKCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZmV0Y2g6IGdsb2JhbFRoaXMuZmV0Y2gsXG4gICAgICBIZWFkZXJzOiBnbG9iYWxUaGlzLkhlYWRlcnMsXG4gICAgICBSZXF1ZXN0OiBnbG9iYWxUaGlzLlJlcXVlc3QsXG4gICAgICBSZXNwb25zZTogZ2xvYmFsVGhpcy5SZXNwb25zZSxcbiAgICAgIEZvcm1EYXRhOiBnbG9iYWxUaGlzLkZvcm1EYXRhLFxuICAgICAgUmVhZGFibGVTdHJlYW06IGdsb2JhbFRoaXMuUmVhZGFibGVTdHJlYW0sXG4gICAgICBXcml0YWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5Xcml0YWJsZVN0cmVhbSxcbiAgICAgIFRyYW5zZm9ybVN0cmVhbTogZ2xvYmFsVGhpcy5UcmFuc2Zvcm1TdHJlYW0sXG4gICAgICBDb21wcmVzc2lvblN0cmVhbTogZ2xvYmFsVGhpcy5Db21wcmVzc2lvblN0cmVhbSxcbiAgICAgIERlY29tcHJlc3Npb25TdHJlYW06IGdsb2JhbFRoaXMuRGVjb21wcmVzc2lvblN0cmVhbSxcbiAgICAgIEJsb2I6IGdsb2JhbFRoaXMuQmxvYixcbiAgICAgIEZpbGU6IGdsb2JhbFRoaXMuRmlsZSxcbiAgICAgIGNyeXB0bzogZ2xvYmFsVGhpcy5jcnlwdG8sXG4gICAgICBidG9hOiBnbG9iYWxUaGlzLmJ0b2EsXG4gICAgICBUZXh0RW5jb2RlcjogZ2xvYmFsVGhpcy5UZXh0RW5jb2RlcixcbiAgICAgIFRleHREZWNvZGVyOiBnbG9iYWxUaGlzLlRleHREZWNvZGVyLFxuICAgICAgVVJMUGF0dGVybjogcG9ueWZpbGxzLlVSTFBhdHRlcm4sXG4gICAgICBVUkw6IGdsb2JhbFRoaXMuVVJMLFxuICAgICAgVVJMU2VhcmNoUGFyYW1zOiBnbG9iYWxUaGlzLlVSTFNlYXJjaFBhcmFtc1xuICAgIH07XG4gIH1cblxuICBjb25zdCBuZXdOb2RlRmV0Y2ggPSByZXF1aXJlKCdAd2hhdHdnLW5vZGUvbm9kZS1mZXRjaCcpO1xuXG4gIHBvbnlmaWxscy5mZXRjaCA9IG5ld05vZGVGZXRjaC5mZXRjaDtcbiAgcG9ueWZpbGxzLlJlcXVlc3QgPSBuZXdOb2RlRmV0Y2guUmVxdWVzdDtcbiAgcG9ueWZpbGxzLlJlc3BvbnNlID0gbmV3Tm9kZUZldGNoLlJlc3BvbnNlO1xuICBwb255ZmlsbHMuSGVhZGVycyA9IG5ld05vZGVGZXRjaC5IZWFkZXJzO1xuICBwb255ZmlsbHMuRm9ybURhdGEgPSBuZXdOb2RlRmV0Y2guRm9ybURhdGE7XG4gIHBvbnlmaWxscy5SZWFkYWJsZVN0cmVhbSA9IG5ld05vZGVGZXRjaC5SZWFkYWJsZVN0cmVhbTtcblxuICBwb255ZmlsbHMuVVJMID0gbmV3Tm9kZUZldGNoLlVSTDtcbiAgcG9ueWZpbGxzLlVSTFNlYXJjaFBhcmFtcyA9IG5ld05vZGVGZXRjaC5VUkxTZWFyY2hQYXJhbXM7XG5cbiAgcG9ueWZpbGxzLldyaXRhYmxlU3RyZWFtID0gbmV3Tm9kZUZldGNoLldyaXRhYmxlU3RyZWFtO1xuICBwb255ZmlsbHMuVHJhbnNmb3JtU3RyZWFtID0gbmV3Tm9kZUZldGNoLlRyYW5zZm9ybVN0cmVhbTtcbiAgcG9ueWZpbGxzLkNvbXByZXNzaW9uU3RyZWFtID0gbmV3Tm9kZUZldGNoLkNvbXByZXNzaW9uU3RyZWFtO1xuICBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IG5ld05vZGVGZXRjaC5EZWNvbXByZXNzaW9uU3RyZWFtO1xuXG4gIHBvbnlmaWxscy5CbG9iID0gbmV3Tm9kZUZldGNoLkJsb2I7XG4gIHBvbnlmaWxscy5GaWxlID0gbmV3Tm9kZUZldGNoLkZpbGU7XG4gIHBvbnlmaWxscy5jcnlwdG8gPSBnbG9iYWxUaGlzLmNyeXB0bztcbiAgcG9ueWZpbGxzLmJ0b2EgPSBuZXdOb2RlRmV0Y2guYnRvYTtcbiAgcG9ueWZpbGxzLlRleHRFbmNvZGVyID0gbmV3Tm9kZUZldGNoLlRleHRFbmNvZGVyO1xuICBwb255ZmlsbHMuVGV4dERlY29kZXIgPSBuZXdOb2RlRmV0Y2guVGV4dERlY29kZXI7XG5cbiAgaWYgKG9wdHMuZm9ybURhdGFMaW1pdHMpIHtcbiAgICBwb255ZmlsbHMuQm9keSA9IGNsYXNzIEJvZHkgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guQm9keSB7XG4gICAgICBjb25zdHJ1Y3Rvcihib2R5LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihib2R5LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBwb255ZmlsbHMuUmVxdWVzdCA9IGNsYXNzIFJlcXVlc3QgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guUmVxdWVzdCB7XG4gICAgICBjb25zdHJ1Y3RvcihpbnB1dCwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoaW5wdXQsIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHBvbnlmaWxscy5SZXNwb25zZSA9IGNsYXNzIFJlc3BvbnNlIGV4dGVuZHMgbmV3Tm9kZUZldGNoLlJlc3BvbnNlIHtcbiAgICAgIGNvbnN0cnVjdG9yKGJvZHksIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGJvZHksIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKCFwb255ZmlsbHMuY3J5cHRvKSB7XG4gICAgY29uc3QgY3J5cHRvTW9kdWxlID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbiAgICBwb255ZmlsbHMuY3J5cHRvID0gY3J5cHRvTW9kdWxlLndlYmNyeXB0bztcbiAgfVxuXG4gIHJldHVybiBwb255ZmlsbHM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMscUlBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLGlJQUFzQjtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0Msb0hBQVEsZUFBZSxDQUFDO0FBQ3ZFLElBQUk7QUFDSjs7QUFFQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQiw4QkFBOEI7O0FBRTlCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcz8wYzY3Il0sInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgY3JlYXRlTm9kZVBvbnlmaWxsID0gcmVxdWlyZSgnLi9jcmVhdGUtbm9kZS1wb255ZmlsbCcpO1xuY29uc3Qgc2hvdWxkU2tpcFBvbnlmaWxsID0gcmVxdWlyZSgnLi9zaG91bGRTa2lwUG9ueWZpbGwnKTtcbmNvbnN0IHBvbnlmaWxscyA9IGNyZWF0ZU5vZGVQb255ZmlsbCgpO1xuXG5pZiAoIXNob3VsZFNraXBQb255ZmlsbCgpKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgbm9kZWxpYmN1cmxOYW1lID0gJ25vZGUtbGliY3VybCdcbiAgICBnbG9iYWxUaGlzLmxpYmN1cmwgPSBnbG9iYWxUaGlzLmxpYmN1cmwgfHwgcmVxdWlyZShub2RlbGliY3VybE5hbWUpO1xuICB9IGNhdGNoIChlKSB7IH1cbn1cblxubW9kdWxlLmV4cG9ydHMuZmV0Y2ggPSBwb255ZmlsbHMuZmV0Y2g7XG5tb2R1bGUuZXhwb3J0cy5IZWFkZXJzID0gcG9ueWZpbGxzLkhlYWRlcnM7XG5tb2R1bGUuZXhwb3J0cy5SZXF1ZXN0ID0gcG9ueWZpbGxzLlJlcXVlc3Q7XG5tb2R1bGUuZXhwb3J0cy5SZXNwb25zZSA9IHBvbnlmaWxscy5SZXNwb25zZTtcbm1vZHVsZS5leHBvcnRzLkZvcm1EYXRhID0gcG9ueWZpbGxzLkZvcm1EYXRhO1xubW9kdWxlLmV4cG9ydHMuUmVhZGFibGVTdHJlYW0gPSBwb255ZmlsbHMuUmVhZGFibGVTdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Xcml0YWJsZVN0cmVhbSA9IHBvbnlmaWxscy5Xcml0YWJsZVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLlRyYW5zZm9ybVN0cmVhbSA9IHBvbnlmaWxscy5UcmFuc2Zvcm1TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Db21wcmVzc2lvblN0cmVhbSA9IHBvbnlmaWxscy5Db21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkRlY29tcHJlc3Npb25TdHJlYW0gPSBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkJsb2IgPSBwb255ZmlsbHMuQmxvYjtcbm1vZHVsZS5leHBvcnRzLkZpbGUgPSBwb255ZmlsbHMuRmlsZTtcbm1vZHVsZS5leHBvcnRzLmNyeXB0byA9IHBvbnlmaWxscy5jcnlwdG87XG5tb2R1bGUuZXhwb3J0cy5idG9hID0gcG9ueWZpbGxzLmJ0b2E7XG5tb2R1bGUuZXhwb3J0cy5UZXh0RW5jb2RlciA9IHBvbnlmaWxscy5UZXh0RW5jb2Rlcjtcbm1vZHVsZS5leHBvcnRzLlRleHREZWNvZGVyID0gcG9ueWZpbGxzLlRleHREZWNvZGVyO1xubW9kdWxlLmV4cG9ydHMuVVJMUGF0dGVybiA9IHBvbnlmaWxscy5VUkxQYXR0ZXJuO1xubW9kdWxlLmV4cG9ydHMuVVJMID0gcG9ueWZpbGxzLlVSTDtcbm1vZHVsZS5leHBvcnRzLlVSTFNlYXJjaFBhcmFtcyA9IHBvbnlmaWxscy5VUkxTZWFyY2hQYXJhbXM7XG5cbmV4cG9ydHMuY3JlYXRlRmV0Y2ggPSBjcmVhdGVOb2RlUG9ueWZpbGw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \*****************************************************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  // Bun and Deno already have a Fetch API\n  if (globalThis.Deno) {\n    return true\n  }\n  if (process.versions.bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L3Nob3VsZFNraXBQb255ZmlsbC5qcz9lODJiIl0sInNvdXJjZXNDb250ZW50IjpbIlxuZnVuY3Rpb24gaXNOZXh0SnMoKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhnbG9iYWxUaGlzKS5zb21lKGtleSA9PiBrZXkuc3RhcnRzV2l0aCgnX19ORVhUJykpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hvdWxkU2tpcFBvbnlmaWxsKCkge1xuICAvLyBCdW4gYW5kIERlbm8gYWxyZWFkeSBoYXZlIGEgRmV0Y2ggQVBJXG4gIGlmIChnbG9iYWxUaGlzLkRlbm8pIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmIChwcm9jZXNzLnZlcnNpb25zLmJ1bikge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgaWYgKGlzTmV4dEpzKCkpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiBmYWxzZVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \**********************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  const newNodeFetch = __webpack_require__(/*! @whatwg-node/node-fetch */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCLG1CQUFPLENBQUMsb0lBQXNCOztBQUV6RCxzREFBc0Q7QUFDdEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSw2QkFBNkIsbUJBQU8sQ0FBQyxtSEFBcUI7QUFDMUQ7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHVCQUF1QixtQkFBTyxDQUFDLDhIQUF5Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx5QkFBeUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUN6QztBQUNBOztBQUVBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L2NyZWF0ZS1ub2RlLXBvbnlmaWxsLmpzPzI0NjgiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2hvdWxkU2tpcFBvbnlmaWxsID0gcmVxdWlyZSgnLi9zaG91bGRTa2lwUG9ueWZpbGwnKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjcmVhdGVOb2RlUG9ueWZpbGwob3B0cyA9IHt9KSB7XG4gIGNvbnN0IHBvbnlmaWxscyA9IHt9O1xuICBcbiAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSBnbG9iYWxUaGlzLlVSTFBhdHRlcm47XG5cbiAgLy8gV2UgY2FsbCB0aGlzIHByZXZpb3VzbHkgdG8gcGF0Y2ggYEJ1bmBcbiAgaWYgKCFwb255ZmlsbHMuVVJMUGF0dGVybikge1xuICAgIGNvbnN0IHVybFBhdHRlcm5Nb2R1bGUgPSByZXF1aXJlKCd1cmxwYXR0ZXJuLXBvbHlmaWxsJyk7XG4gICAgcG9ueWZpbGxzLlVSTFBhdHRlcm4gPSB1cmxQYXR0ZXJuTW9kdWxlLlVSTFBhdHRlcm47XG4gIH1cblxuICBpZiAob3B0cy5za2lwUG9ueWZpbGwgfHwgc2hvdWxkU2tpcFBvbnlmaWxsKCkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZmV0Y2g6IGdsb2JhbFRoaXMuZmV0Y2gsXG4gICAgICBIZWFkZXJzOiBnbG9iYWxUaGlzLkhlYWRlcnMsXG4gICAgICBSZXF1ZXN0OiBnbG9iYWxUaGlzLlJlcXVlc3QsXG4gICAgICBSZXNwb25zZTogZ2xvYmFsVGhpcy5SZXNwb25zZSxcbiAgICAgIEZvcm1EYXRhOiBnbG9iYWxUaGlzLkZvcm1EYXRhLFxuICAgICAgUmVhZGFibGVTdHJlYW06IGdsb2JhbFRoaXMuUmVhZGFibGVTdHJlYW0sXG4gICAgICBXcml0YWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5Xcml0YWJsZVN0cmVhbSxcbiAgICAgIFRyYW5zZm9ybVN0cmVhbTogZ2xvYmFsVGhpcy5UcmFuc2Zvcm1TdHJlYW0sXG4gICAgICBDb21wcmVzc2lvblN0cmVhbTogZ2xvYmFsVGhpcy5Db21wcmVzc2lvblN0cmVhbSxcbiAgICAgIERlY29tcHJlc3Npb25TdHJlYW06IGdsb2JhbFRoaXMuRGVjb21wcmVzc2lvblN0cmVhbSxcbiAgICAgIEJsb2I6IGdsb2JhbFRoaXMuQmxvYixcbiAgICAgIEZpbGU6IGdsb2JhbFRoaXMuRmlsZSxcbiAgICAgIGNyeXB0bzogZ2xvYmFsVGhpcy5jcnlwdG8sXG4gICAgICBidG9hOiBnbG9iYWxUaGlzLmJ0b2EsXG4gICAgICBUZXh0RW5jb2RlcjogZ2xvYmFsVGhpcy5UZXh0RW5jb2RlcixcbiAgICAgIFRleHREZWNvZGVyOiBnbG9iYWxUaGlzLlRleHREZWNvZGVyLFxuICAgICAgVVJMUGF0dGVybjogcG9ueWZpbGxzLlVSTFBhdHRlcm4sXG4gICAgICBVUkw6IGdsb2JhbFRoaXMuVVJMLFxuICAgICAgVVJMU2VhcmNoUGFyYW1zOiBnbG9iYWxUaGlzLlVSTFNlYXJjaFBhcmFtc1xuICAgIH07XG4gIH1cblxuICBjb25zdCBuZXdOb2RlRmV0Y2ggPSByZXF1aXJlKCdAd2hhdHdnLW5vZGUvbm9kZS1mZXRjaCcpO1xuXG4gIHBvbnlmaWxscy5mZXRjaCA9IG5ld05vZGVGZXRjaC5mZXRjaDtcbiAgcG9ueWZpbGxzLlJlcXVlc3QgPSBuZXdOb2RlRmV0Y2guUmVxdWVzdDtcbiAgcG9ueWZpbGxzLlJlc3BvbnNlID0gbmV3Tm9kZUZldGNoLlJlc3BvbnNlO1xuICBwb255ZmlsbHMuSGVhZGVycyA9IG5ld05vZGVGZXRjaC5IZWFkZXJzO1xuICBwb255ZmlsbHMuRm9ybURhdGEgPSBuZXdOb2RlRmV0Y2guRm9ybURhdGE7XG4gIHBvbnlmaWxscy5SZWFkYWJsZVN0cmVhbSA9IG5ld05vZGVGZXRjaC5SZWFkYWJsZVN0cmVhbTtcblxuICBwb255ZmlsbHMuVVJMID0gbmV3Tm9kZUZldGNoLlVSTDtcbiAgcG9ueWZpbGxzLlVSTFNlYXJjaFBhcmFtcyA9IG5ld05vZGVGZXRjaC5VUkxTZWFyY2hQYXJhbXM7XG5cbiAgcG9ueWZpbGxzLldyaXRhYmxlU3RyZWFtID0gbmV3Tm9kZUZldGNoLldyaXRhYmxlU3RyZWFtO1xuICBwb255ZmlsbHMuVHJhbnNmb3JtU3RyZWFtID0gbmV3Tm9kZUZldGNoLlRyYW5zZm9ybVN0cmVhbTtcbiAgcG9ueWZpbGxzLkNvbXByZXNzaW9uU3RyZWFtID0gbmV3Tm9kZUZldGNoLkNvbXByZXNzaW9uU3RyZWFtO1xuICBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IG5ld05vZGVGZXRjaC5EZWNvbXByZXNzaW9uU3RyZWFtO1xuXG4gIHBvbnlmaWxscy5CbG9iID0gbmV3Tm9kZUZldGNoLkJsb2I7XG4gIHBvbnlmaWxscy5GaWxlID0gbmV3Tm9kZUZldGNoLkZpbGU7XG4gIHBvbnlmaWxscy5jcnlwdG8gPSBnbG9iYWxUaGlzLmNyeXB0bztcbiAgcG9ueWZpbGxzLmJ0b2EgPSBuZXdOb2RlRmV0Y2guYnRvYTtcbiAgcG9ueWZpbGxzLlRleHRFbmNvZGVyID0gbmV3Tm9kZUZldGNoLlRleHRFbmNvZGVyO1xuICBwb255ZmlsbHMuVGV4dERlY29kZXIgPSBuZXdOb2RlRmV0Y2guVGV4dERlY29kZXI7XG5cbiAgaWYgKG9wdHMuZm9ybURhdGFMaW1pdHMpIHtcbiAgICBwb255ZmlsbHMuQm9keSA9IGNsYXNzIEJvZHkgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guQm9keSB7XG4gICAgICBjb25zdHJ1Y3Rvcihib2R5LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihib2R5LCB7XG4gICAgICAgICAgZm9ybURhdGFMaW1pdHM6IG9wdHMuZm9ybURhdGFMaW1pdHMsXG4gICAgICAgICAgLi4udXNlck9wdHMsXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH1cbiAgICBwb255ZmlsbHMuUmVxdWVzdCA9IGNsYXNzIFJlcXVlc3QgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guUmVxdWVzdCB7XG4gICAgICBjb25zdHJ1Y3RvcihpbnB1dCwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoaW5wdXQsIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHBvbnlmaWxscy5SZXNwb25zZSA9IGNsYXNzIFJlc3BvbnNlIGV4dGVuZHMgbmV3Tm9kZUZldGNoLlJlc3BvbnNlIHtcbiAgICAgIGNvbnN0cnVjdG9yKGJvZHksIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGJvZHksIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgaWYgKCFwb255ZmlsbHMuY3J5cHRvKSB7XG4gICAgY29uc3QgY3J5cHRvTW9kdWxlID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbiAgICBwb255ZmlsbHMuY3J5cHRvID0gY3J5cHRvTW9kdWxlLndlYmNyeXB0bztcbiAgfVxuXG4gIHJldHVybiBwb255ZmlsbHM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \***************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0EsMkJBQTJCLG1CQUFPLENBQUMsd0lBQXdCO0FBQzNELDJCQUEyQixtQkFBTyxDQUFDLG9JQUFzQjtBQUN6RDs7QUFFQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsdUhBQVEsZUFBZSxDQUFDO0FBQ3ZFLElBQUk7QUFDSjs7QUFFQSxvQkFBb0I7QUFDcEIsc0JBQXNCO0FBQ3RCLHNCQUFzQjtBQUN0Qix1QkFBdUI7QUFDdkIsdUJBQXVCO0FBQ3ZCLDZCQUE2QjtBQUM3Qiw2QkFBNkI7QUFDN0IsOEJBQThCO0FBQzlCLGdDQUFnQztBQUNoQyxrQ0FBa0M7QUFDbEMsbUJBQW1CO0FBQ25CLG1CQUFtQjtBQUNuQixxQkFBcUI7QUFDckIsbUJBQW1CO0FBQ25CLDBCQUEwQjtBQUMxQiwwQkFBMEI7QUFDMUIseUJBQXlCO0FBQ3pCLGtCQUFrQjtBQUNsQiw4QkFBOEI7O0FBRTlCLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvbm9kZS1wb255ZmlsbC5qcz81OWI1Il0sInNvdXJjZXNDb250ZW50IjpbIlxuY29uc3QgY3JlYXRlTm9kZVBvbnlmaWxsID0gcmVxdWlyZSgnLi9jcmVhdGUtbm9kZS1wb255ZmlsbCcpO1xuY29uc3Qgc2hvdWxkU2tpcFBvbnlmaWxsID0gcmVxdWlyZSgnLi9zaG91bGRTa2lwUG9ueWZpbGwnKTtcbmNvbnN0IHBvbnlmaWxscyA9IGNyZWF0ZU5vZGVQb255ZmlsbCgpO1xuXG5pZiAoIXNob3VsZFNraXBQb255ZmlsbCgpKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgbm9kZWxpYmN1cmxOYW1lID0gJ25vZGUtbGliY3VybCdcbiAgICBnbG9iYWxUaGlzLmxpYmN1cmwgPSBnbG9iYWxUaGlzLmxpYmN1cmwgfHwgcmVxdWlyZShub2RlbGliY3VybE5hbWUpO1xuICB9IGNhdGNoIChlKSB7IH1cbn1cblxubW9kdWxlLmV4cG9ydHMuZmV0Y2ggPSBwb255ZmlsbHMuZmV0Y2g7XG5tb2R1bGUuZXhwb3J0cy5IZWFkZXJzID0gcG9ueWZpbGxzLkhlYWRlcnM7XG5tb2R1bGUuZXhwb3J0cy5SZXF1ZXN0ID0gcG9ueWZpbGxzLlJlcXVlc3Q7XG5tb2R1bGUuZXhwb3J0cy5SZXNwb25zZSA9IHBvbnlmaWxscy5SZXNwb25zZTtcbm1vZHVsZS5leHBvcnRzLkZvcm1EYXRhID0gcG9ueWZpbGxzLkZvcm1EYXRhO1xubW9kdWxlLmV4cG9ydHMuUmVhZGFibGVTdHJlYW0gPSBwb255ZmlsbHMuUmVhZGFibGVTdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Xcml0YWJsZVN0cmVhbSA9IHBvbnlmaWxscy5Xcml0YWJsZVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLlRyYW5zZm9ybVN0cmVhbSA9IHBvbnlmaWxscy5UcmFuc2Zvcm1TdHJlYW07XG5tb2R1bGUuZXhwb3J0cy5Db21wcmVzc2lvblN0cmVhbSA9IHBvbnlmaWxscy5Db21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkRlY29tcHJlc3Npb25TdHJlYW0gPSBwb255ZmlsbHMuRGVjb21wcmVzc2lvblN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkJsb2IgPSBwb255ZmlsbHMuQmxvYjtcbm1vZHVsZS5leHBvcnRzLkZpbGUgPSBwb255ZmlsbHMuRmlsZTtcbm1vZHVsZS5leHBvcnRzLmNyeXB0byA9IHBvbnlmaWxscy5jcnlwdG87XG5tb2R1bGUuZXhwb3J0cy5idG9hID0gcG9ueWZpbGxzLmJ0b2E7XG5tb2R1bGUuZXhwb3J0cy5UZXh0RW5jb2RlciA9IHBvbnlmaWxscy5UZXh0RW5jb2Rlcjtcbm1vZHVsZS5leHBvcnRzLlRleHREZWNvZGVyID0gcG9ueWZpbGxzLlRleHREZWNvZGVyO1xubW9kdWxlLmV4cG9ydHMuVVJMUGF0dGVybiA9IHBvbnlmaWxscy5VUkxQYXR0ZXJuO1xubW9kdWxlLmV4cG9ydHMuVVJMID0gcG9ueWZpbGxzLlVSTDtcbm1vZHVsZS5leHBvcnRzLlVSTFNlYXJjaFBhcmFtcyA9IHBvbnlmaWxscy5VUkxTZWFyY2hQYXJhbXM7XG5cbmV4cG9ydHMuY3JlYXRlRmV0Y2ggPSBjcmVhdGVOb2RlUG9ueWZpbGw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \********************************************************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  // Bun and Deno already have a Fetch API\n  if (globalThis.Deno) {\n    return true\n  }\n  if (process.versions.bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L3Nob3VsZFNraXBQb255ZmlsbC5qcz8xODk0Il0sInNvdXJjZXNDb250ZW50IjpbIlxuZnVuY3Rpb24gaXNOZXh0SnMoKSB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhnbG9iYWxUaGlzKS5zb21lKGtleSA9PiBrZXkuc3RhcnRzV2l0aCgnX19ORVhUJykpXG59XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gc2hvdWxkU2tpcFBvbnlmaWxsKCkge1xuICAvLyBCdW4gYW5kIERlbm8gYWxyZWFkeSBoYXZlIGEgRmV0Y2ggQVBJXG4gIGlmIChnbG9iYWxUaGlzLkRlbm8pIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIGlmIChwcm9jZXNzLnZlcnNpb25zLmJ1bikge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgaWYgKGlzTmV4dEpzKCkpIHtcbiAgICByZXR1cm4gdHJ1ZVxuICB9XG4gIHJldHVybiBmYWxzZVxufSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return Buffer.from(blobPart);\n    }\n    else if (Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst busboy_1 = tslib_1.__importDefault(__webpack_require__(/*! busboy */ \"(ssr)/../node_modules/busboy/lib/index.js\"));\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            return (0, utils_js_1.fakePromise)([]);\n        }\n        this._chunks = [];\n        _body.readable.on('data', chunk => {\n            this._chunks.push(chunk);\n        });\n        return new Promise((resolve, reject) => {\n            _body.readable.once('end', () => {\n                resolve(this._chunks);\n            });\n            _body.readable.once('error', e => {\n                reject(e);\n            });\n        });\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        });\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const bb = (0, busboy_1.default)({\n                headers: {\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defParamCharset: 'utf-8',\n            });\n            bb.on('field', (name, value, { nameTruncated, valueTruncated }) => {\n                if (nameTruncated) {\n                    reject(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    reject(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('fieldsLimit', () => {\n                reject(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('file', (name, fileStream, { filename, mimeType }) => {\n                const chunks = [];\n                fileStream.on('limit', () => {\n                    reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('filesLimit', () => {\n                reject(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                reject(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('close', () => {\n                resolve(this._formData);\n            });\n            bb.on('error', (err = 'An error occurred while parsing the form data') => {\n                const errMessage = err.message || err.toString();\n                reject(new TypeError(errMessage, err.cause));\n            });\n            _body?.readable.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = Buffer.concat(chunks);\n            return this._buffer;\n        });\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const buffer = Buffer.from(bodyInit);\n        const contentLength = buffer.byteLength;\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (Buffer.isBuffer(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => bodyInit,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return bodyInit.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null;\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!***********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyxxSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Db21wcmVzc2lvblN0cmVhbS5qcz9lNjlhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV96bGliXzEgPSByZXF1aXJlKFwibm9kZTp6bGliXCIpO1xuY29uc3QgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbENvbXByZXNzaW9uU3RyZWFtIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtX2pzXzEuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHN0YXRpYyBzdXBwb3J0ZWRGb3JtYXRzID0gZ2xvYmFsVGhpcy5wcm9jZXNzPy52ZXJzaW9uPy5zdGFydHNXaXRoKCd2MicpXG4gICAgICAgID8gWydnemlwJywgJ2RlZmxhdGUnLCAnYnInXVxuICAgICAgICA6IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2RlZmxhdGUtcmF3JywgJ2JyJ107XG4gICAgY29uc3RydWN0b3IoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgc3dpdGNoIChjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICAgICAgY2FzZSAneC1nemlwJzpcbiAgICAgICAgICAgIGNhc2UgJ2d6aXAnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVHemlwKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3gtZGVmbGF0ZSc6XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlRGVmbGF0ZSkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlLXJhdyc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZURlZmxhdGVSYXcpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYnInOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVCcm90bGlDb21wcmVzcykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgY29tcHJlc3Npb24gZm9ybWF0OiAke2NvbXByZXNzaW9uRm9ybWF0fWApO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtID0gUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLDZCQUE2QixtQkFBTyxDQUFDLHFJQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanM/MmRhZSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV96bGliXzEgPSByZXF1aXJlKFwibm9kZTp6bGliXCIpO1xuY29uc3QgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgc3RhdGljIHN1cHBvcnRlZEZvcm1hdHMgPSBnbG9iYWxUaGlzLnByb2Nlc3M/LnZlcnNpb24/LnN0YXJ0c1dpdGgoJ3YyJylcbiAgICAgICAgPyBbJ2d6aXAnLCAnZGVmbGF0ZScsICdiciddXG4gICAgICAgIDogWydnemlwJywgJ2RlZmxhdGUnLCAnZGVmbGF0ZS1yYXcnLCAnYnInXTtcbiAgICBjb25zdHJ1Y3Rvcihjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICBzd2l0Y2ggKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlICd4LWd6aXAnOlxuICAgICAgICAgICAgY2FzZSAnZ3ppcCc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUd1bnppcCkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd4LWRlZmxhdGUnOlxuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZSc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUluZmxhdGUpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZS1yYXcnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVJbmZsYXRlUmF3KSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2JyJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlQnJvdGxpRGVjb21wcmVzcykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFVuc3VwcG9ydGVkIGNvbXByZXNzaW9uIGZvcm1hdDogJyR7Y29tcHJlc3Npb25Gb3JtYXR9J2ApO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gPSBQb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGtCQUFrQixtQkFBTyxDQUFDLCtHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRmlsZS5qcz84OTA3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEZpbGUgPSB2b2lkIDA7XG5jb25zdCBCbG9iX2pzXzEgPSByZXF1aXJlKFwiLi9CbG9iLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxGaWxlIGV4dGVuZHMgQmxvYl9qc18xLlBvbnlmaWxsQmxvYiB7XG4gICAgbmFtZTtcbiAgICBsYXN0TW9kaWZpZWQ7XG4gICAgY29uc3RydWN0b3IoZmlsZUJpdHMsIG5hbWUsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoZmlsZUJpdHMsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmxhc3RNb2RpZmllZCA9IG9wdGlvbnM/Lmxhc3RNb2RpZmllZCB8fCBEYXRlLm5vdygpO1xuICAgIH1cbiAgICB3ZWJraXRSZWxhdGl2ZVBhdGggPSAnJztcbn1cbmV4cG9ydHMuUG9ueWZpbGxGaWxlID0gUG9ueWZpbGxGaWxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    *[Symbol.iterator]() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return this[Symbol.iterator]();\n    }\n    keys() {\n        return this.map.keys();\n    }\n    *values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    const entries = [];\n    let sentInitialHeader = false;\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: controller => {\n            formData.forEach((value, key) => {\n                if (!sentInitialHeader) {\n                    controller.enqueue(Buffer.from(`--${boundary}\\r\\n`));\n                    sentInitialHeader = true;\n                }\n                entries.push([key, value]);\n            });\n            if (!sentInitialHeader) {\n                controller.enqueue(Buffer.from(`--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n        pull: async (controller) => {\n            const entry = entries.shift();\n            if (entry) {\n                const [key, value] = entry;\n                if (typeof value === 'string') {\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                    controller.enqueue(Buffer.from(value));\n                }\n                else {\n                    let filenamePart = '';\n                    if (value.name) {\n                        filenamePart = `; filename=\"${value.name}\"`;\n                    }\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                    controller.enqueue(Buffer.from(`Content-Type: ${value.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                    const entryStream = value.stream();\n                    for await (const chunk of entryStream) {\n                        controller.enqueue(chunk);\n                    }\n                }\n                if (entries.length === 0) {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                    controller.close();\n                }\n                else {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n                }\n            }\n            else {\n                controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0Zvcm1EYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4Qiw2QkFBNkI7QUFDN0IsNEJBQTRCLG1CQUFPLENBQUMsbUlBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esb0RBQW9ELFNBQVM7QUFDN0Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLFFBQVEsSUFBSTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFlBQVksV0FBVztBQUNqRTtBQUNBLG9GQUFvRixRQUFRLElBQUksR0FBRyxhQUFhO0FBQ2hILG9FQUFvRSx5Q0FBeUM7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Gb3JtRGF0YS5qcz80YzcxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEZvcm1EYXRhID0gdm9pZCAwO1xuZXhwb3J0cy5nZXRTdHJlYW1Gcm9tRm9ybURhdGEgPSBnZXRTdHJlYW1Gcm9tRm9ybURhdGE7XG5jb25zdCBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbEZvcm1EYXRhIHtcbiAgICBtYXAgPSBuZXcgTWFwKCk7XG4gICAgYXBwZW5kKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSkge1xuICAgICAgICBsZXQgdmFsdWVzID0gdGhpcy5tYXAuZ2V0KG5hbWUpO1xuICAgICAgICBpZiAoIXZhbHVlcykge1xuICAgICAgICAgICAgdmFsdWVzID0gW107XG4gICAgICAgICAgICB0aGlzLm1hcC5zZXQobmFtZSwgdmFsdWVzKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbnRyeSA9IGlzQmxvYih2YWx1ZSlcbiAgICAgICAgICAgID8gZ2V0Tm9ybWFsaXplZEZpbGUobmFtZSwgdmFsdWUsIGZpbGVOYW1lKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICAgICAgdmFsdWVzLnB1c2goZW50cnkpO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICB0aGlzLm1hcC5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMubWFwLmdldChuYW1lKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlcyA/IHZhbHVlc1swXSA6IG51bGw7XG4gICAgfVxuICAgIGdldEFsbChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5nZXQobmFtZSkgfHwgW107XG4gICAgfVxuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5oYXMobmFtZSk7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSwgZmlsZU5hbWUpIHtcbiAgICAgICAgY29uc3QgZW50cnkgPSBpc0Jsb2IodmFsdWUpXG4gICAgICAgICAgICA/IGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgICAgIHRoaXMubWFwLnNldChuYW1lLCBbZW50cnldKTtcbiAgICB9XG4gICAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlc10gb2YgdGhpcy5tYXApIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgW2tleSwgdmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVudHJpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICB9XG4gICAga2V5cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmtleXMoKTtcbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZXMgb2YgdGhpcy5tYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yRWFjaChjYWxsYmFjaykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0aGlzKSB7XG4gICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxGb3JtRGF0YSA9IFBvbnlmaWxsRm9ybURhdGE7XG5mdW5jdGlvbiBnZXRTdHJlYW1Gcm9tRm9ybURhdGEoZm9ybURhdGEsIGJvdW5kYXJ5ID0gJy0tLScpIHtcbiAgICBjb25zdCBlbnRyaWVzID0gW107XG4gICAgbGV0IHNlbnRJbml0aWFsSGVhZGVyID0gZmFsc2U7XG4gICAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICBzdGFydDogY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBmb3JtRGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFzZW50SW5pdGlhbEhlYWRlcikge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYC0tJHtib3VuZGFyeX1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIHNlbnRJbml0aWFsSGVhZGVyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZW50cmllcy5wdXNoKFtrZXksIHZhbHVlXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghc2VudEluaXRpYWxIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYC0tJHtib3VuZGFyeX0tLVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHB1bGw6IGFzeW5jIChjb250cm9sbGVyKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbnRyeSA9IGVudHJpZXMuc2hpZnQoKTtcbiAgICAgICAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IGVudHJ5O1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtrZXl9XCJcXHJcXG5cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZpbGVuYW1lUGFydCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWVQYXJ0ID0gYDsgZmlsZW5hbWU9XCIke3ZhbHVlLm5hbWV9XCJgO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtrZXl9XCIke2ZpbGVuYW1lUGFydH1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1UeXBlOiAke3ZhbHVlLnR5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSd9XFxyXFxuXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnRyeVN0cmVhbSA9IHZhbHVlLnN0cmVhbSgpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIGVudHJ5U3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoY2h1bmspO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlbnRyaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYFxcclxcbi0tJHtib3VuZGFyeX0tLVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBcXHJcXG4tLSR7Ym91bmRhcnl9XFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgXFxyXFxuLS0ke2JvdW5kYXJ5fS0tXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIGJsb2IsIGZpbGVOYW1lKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGJsb2IsICduYW1lJywge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBmaWxlTmFtZSB8fCBibG9iLm5hbWUgfHwgbmFtZSxcbiAgICB9KTtcbiAgICByZXR1cm4gYmxvYjtcbn1cbmZ1bmN0aW9uIGlzQmxvYih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uYXJyYXlCdWZmZXIgIT0gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies = [];\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie') {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            return this.headersInit.find(header => header[0].toLowerCase() === normalized)?.[1] || null;\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach(([key, value]) => {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(normalizedKey, value);\n                    });\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    has(name) {\n        if (name === 'set-cookie') {\n            return this._setCookies.length > 0;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *keys() {\n        if (this._setCookies.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    *values() {\n        yield* this._setCookies;\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    *entries() {\n        yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    getSetCookie() {\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies;\n            }\n            else {\n                record[key] = value.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            this.readable = new stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return Promise.resolve().then(async () => {\n                        if (!started) {\n                            const controller = createController(desiredSize, this);\n                            started = true;\n                            await underlyingSource?.start?.(controller);\n                            controller._flush();\n                            if (controller._closed) {\n                                return;\n                            }\n                        }\n                        const controller = createController(desiredSize, this);\n                        await underlyingSource?.pull?.(controller);\n                        controller._flush();\n                        ongoing = false;\n                    });\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        return new Promise(resolve => this.readable.once('end', resolve));\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)(undefined);\n            },\n            closed: new Promise((resolve, reject) => {\n                this.readable.once('end', resolve);\n                this.readable.once('error', reject);\n            }),\n        };\n    }\n    [Symbol.asyncIterator]() {\n        return this.readable[Symbol.asyncIterator]();\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return new Promise((resolve, reject) => {\n                this.readable.pipe(destination.writable);\n                destination.writable.once('finish', resolve);\n                destination.writable.once('error', reject);\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return Promise.resolve().then(async () => {\n                try {\n                    for await (const chunk of this) {\n                        await writer.write(chunk);\n                    }\n                    await writer.close();\n                }\n                catch (err) {\n                    await writer.abort(err);\n                }\n            });\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable);\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let url;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            url = input;\n        }\n        else if (isURL(input)) {\n            url = input.toString();\n        }\n        else if (isRequest(input)) {\n            url = input.url;\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, options);\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this._signal = requestInit?.signal;\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.url = url || '';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (this.url.startsWith('http:/') && requestInit.agent instanceof http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (this.url.startsWith('https:/') && requestInit.agent instanceof https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    url;\n    duplex;\n    agent;\n    _signal;\n    get signal() {\n        // Create a new signal only if needed\n        // Because the creation of signal is expensive\n        if (!this._signal) {\n            this._signal = new AbortController().signal;\n        }\n        return this._signal;\n    }\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQywrR0FBVztBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanM/MTU5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxSZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcImh0dHBcIik7XG5jb25zdCBodHRwc18xID0gcmVxdWlyZShcImh0dHBzXCIpO1xuY29uc3QgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbmNvbnN0IEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5mdW5jdGlvbiBpc1JlcXVlc3QoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXRbU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ1JlcXVlc3QnO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uaHJlZiAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxSZXF1ZXN0IGV4dGVuZHMgQm9keV9qc18xLlBvbnlmaWxsQm9keSB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IHVybDtcbiAgICAgICAgbGV0IGJvZHlJbml0ID0gbnVsbDtcbiAgICAgICAgbGV0IHJlcXVlc3RJbml0O1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdXJsID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNVUkwoaW5wdXQpKSB7XG4gICAgICAgICAgICB1cmwgPSBpbnB1dC50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzUmVxdWVzdChpbnB1dCkpIHtcbiAgICAgICAgICAgIHVybCA9IGlucHV0LnVybDtcbiAgICAgICAgICAgIGJvZHlJbml0ID0gaW5wdXQuYm9keTtcbiAgICAgICAgICAgIHJlcXVlc3RJbml0ID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgIT0gbnVsbCkge1xuICAgICAgICAgICAgYm9keUluaXQgPSBvcHRpb25zLmJvZHkgfHwgbnVsbDtcbiAgICAgICAgICAgIHJlcXVlc3RJbml0ID0gb3B0aW9ucztcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihib2R5SW5pdCwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY2FjaGUgPSByZXF1ZXN0SW5pdD8uY2FjaGUgfHwgJ2RlZmF1bHQnO1xuICAgICAgICB0aGlzLmNyZWRlbnRpYWxzID0gcmVxdWVzdEluaXQ/LmNyZWRlbnRpYWxzIHx8ICdzYW1lLW9yaWdpbic7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9XG4gICAgICAgICAgICByZXF1ZXN0SW5pdD8uaGVhZGVycyAmJiAoMCwgSGVhZGVyc19qc18xLmlzSGVhZGVyc0xpa2UpKHJlcXVlc3RJbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyByZXF1ZXN0SW5pdC5oZWFkZXJzXG4gICAgICAgICAgICAgICAgOiBuZXcgSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVycyhyZXF1ZXN0SW5pdD8uaGVhZGVycyk7XG4gICAgICAgIHRoaXMuaW50ZWdyaXR5ID0gcmVxdWVzdEluaXQ/LmludGVncml0eSB8fCAnJztcbiAgICAgICAgdGhpcy5rZWVwYWxpdmUgPSByZXF1ZXN0SW5pdD8ua2VlcGFsaXZlICE9IG51bGwgPyByZXF1ZXN0SW5pdD8ua2VlcGFsaXZlIDogZmFsc2U7XG4gICAgICAgIHRoaXMubWV0aG9kID0gcmVxdWVzdEluaXQ/Lm1ldGhvZD8udG9VcHBlckNhc2UoKSB8fCAnR0VUJztcbiAgICAgICAgdGhpcy5tb2RlID0gcmVxdWVzdEluaXQ/Lm1vZGUgfHwgJ2NvcnMnO1xuICAgICAgICB0aGlzLnJlZGlyZWN0ID0gcmVxdWVzdEluaXQ/LnJlZGlyZWN0IHx8ICdmb2xsb3cnO1xuICAgICAgICB0aGlzLnJlZmVycmVyID0gcmVxdWVzdEluaXQ/LnJlZmVycmVyIHx8ICdhYm91dDpjbGllbnQnO1xuICAgICAgICB0aGlzLnJlZmVycmVyUG9saWN5ID0gcmVxdWVzdEluaXQ/LnJlZmVycmVyUG9saWN5IHx8ICduby1yZWZlcnJlcic7XG4gICAgICAgIHRoaXMuX3NpZ25hbCA9IHJlcXVlc3RJbml0Py5zaWduYWw7XG4gICAgICAgIHRoaXMuaGVhZGVyc1NlcmlhbGl6ZXIgPSByZXF1ZXN0SW5pdD8uaGVhZGVyc1NlcmlhbGl6ZXI7XG4gICAgICAgIHRoaXMuZHVwbGV4ID0gcmVxdWVzdEluaXQ/LmR1cGxleCB8fCAnaGFsZic7XG4gICAgICAgIHRoaXMudXJsID0gdXJsIHx8ICcnO1xuICAgICAgICB0aGlzLmRlc3RpbmF0aW9uID0gJ2RvY3VtZW50JztcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9ICdhdXRvJztcbiAgICAgICAgaWYgKHRoaXMubWV0aG9kICE9PSAnR0VUJyAmJiB0aGlzLm1ldGhvZCAhPT0gJ0hFQUQnKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUNvbnRlbnRMZW5ndGhIZWFkZXIodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcXVlc3RJbml0Py5hZ2VudCAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAocmVxdWVzdEluaXQuYWdlbnQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy51cmwuc3RhcnRzV2l0aCgnaHR0cDovJykgJiYgcmVxdWVzdEluaXQuYWdlbnQgaW5zdGFuY2VvZiBodHRwXzEuQWdlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gcmVxdWVzdEluaXQuYWdlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnVybC5zdGFydHNXaXRoKCdodHRwczovJykgJiYgcmVxdWVzdEluaXQuYWdlbnQgaW5zdGFuY2VvZiBodHRwc18xLkFnZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IHJlcXVlc3RJbml0LmFnZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGhlYWRlcnNTZXJpYWxpemVyO1xuICAgIGNhY2hlO1xuICAgIGNyZWRlbnRpYWxzO1xuICAgIGRlc3RpbmF0aW9uO1xuICAgIGhlYWRlcnM7XG4gICAgaW50ZWdyaXR5O1xuICAgIGtlZXBhbGl2ZTtcbiAgICBtZXRob2Q7XG4gICAgbW9kZTtcbiAgICBwcmlvcml0eTtcbiAgICByZWRpcmVjdDtcbiAgICByZWZlcnJlcjtcbiAgICByZWZlcnJlclBvbGljeTtcbiAgICB1cmw7XG4gICAgZHVwbGV4O1xuICAgIGFnZW50O1xuICAgIF9zaWduYWw7XG4gICAgZ2V0IHNpZ25hbCgpIHtcbiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IHNpZ25hbCBvbmx5IGlmIG5lZWRlZFxuICAgICAgICAvLyBCZWNhdXNlIHRoZSBjcmVhdGlvbiBvZiBzaWduYWwgaXMgZXhwZW5zaXZlXG4gICAgICAgIGlmICghdGhpcy5fc2lnbmFsKSB7XG4gICAgICAgICAgICB0aGlzLl9zaWduYWwgPSBuZXcgQWJvcnRDb250cm9sbGVyKCkuc2lnbmFsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9zaWduYWw7XG4gICAgfVxuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnUmVxdWVzdCc7XG59XG5leHBvcnRzLlBvbnlmaWxsUmVxdWVzdCA9IFBvbnlmaWxsUmVxdWVzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init = {}) {\n        init.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        if (!init.headers.has('content-type')) {\n            init.headers.set('content-type', JSON_CONTENT_TYPE);\n        }\n        return new PonyfillResponse(JSON.stringify(data), init);\n    }\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsK0dBQVc7QUFDckMscUJBQXFCLG1CQUFPLENBQUMscUhBQWM7QUFDM0MsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvUmVzcG9uc2UuanM/ZmVkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxSZXNwb25zZSA9IHZvaWQgMDtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCJodHRwXCIpO1xuY29uc3QgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbmNvbnN0IEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5jb25zdCBKU09OX0NPTlRFTlRfVFlQRSA9ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JztcbmNsYXNzIFBvbnlmaWxsUmVzcG9uc2UgZXh0ZW5kcyBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5IHtcbiAgICBoZWFkZXJzO1xuICAgIGNvbnN0cnVjdG9yKGJvZHksIGluaXQpIHtcbiAgICAgICAgc3VwZXIoYm9keSB8fCBudWxsLCBpbml0KTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIGluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyBpbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IGluaXQ/LnN0YXR1cyB8fCAyMDA7XG4gICAgICAgIHRoaXMuc3RhdHVzVGV4dCA9IGluaXQ/LnN0YXR1c1RleHQgfHwgaHR0cF8xLlNUQVRVU19DT0RFU1t0aGlzLnN0YXR1c10gfHwgJ09LJztcbiAgICAgICAgdGhpcy51cmwgPSBpbml0Py51cmwgfHwgJyc7XG4gICAgICAgIHRoaXMucmVkaXJlY3RlZCA9IGluaXQ/LnJlZGlyZWN0ZWQgfHwgZmFsc2U7XG4gICAgICAgIHRoaXMudHlwZSA9IGluaXQ/LnR5cGUgfHwgJ2RlZmF1bHQnO1xuICAgICAgICB0aGlzLmhhbmRsZUNvbnRlbnRMZW5ndGhIZWFkZXIoKTtcbiAgICB9XG4gICAgZ2V0IG9rKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0dXMgPj0gMjAwICYmIHRoaXMuc3RhdHVzIDwgMzAwO1xuICAgIH1cbiAgICBzdGF0dXM7XG4gICAgc3RhdHVzVGV4dDtcbiAgICB1cmw7XG4gICAgcmVkaXJlY3RlZDtcbiAgICB0eXBlO1xuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc3RhdGljIGVycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyByZWRpcmVjdCh1cmwsIHN0YXR1cyA9IDMwMikge1xuICAgICAgICBpZiAoc3RhdHVzIDwgMzAwIHx8IHN0YXR1cyA+IDM5OSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ludmFsaWQgc3RhdHVzIGNvZGUnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiB1cmwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGpzb24oZGF0YSwgaW5pdCA9IHt9KSB7XG4gICAgICAgIGluaXQuaGVhZGVycyA9XG4gICAgICAgICAgICBpbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkoaW5pdC5oZWFkZXJzKVxuICAgICAgICAgICAgICAgID8gaW5pdC5oZWFkZXJzXG4gICAgICAgICAgICAgICAgOiBuZXcgSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVycyhpbml0Py5oZWFkZXJzKTtcbiAgICAgICAgaWYgKCFpbml0LmhlYWRlcnMuaGFzKCdjb250ZW50LXR5cGUnKSkge1xuICAgICAgICAgICAgaW5pdC5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgSlNPTl9DT05URU5UX1RZUEUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShKU09OLnN0cmluZ2lmeShkYXRhKSwgaW5pdCk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFJlc3BvbnNlID0gUG9ueWZpbGxSZXNwb25zZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQkFBMkI7QUFDekQsb0JBQW9CO0FBQ3BCLG1CQUFtQixtQkFBTyxDQUFDLGlIQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcz8xNTI2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyID0gZXhwb3J0cy5Qb255ZmlsbFRleHRFbmNvZGVyID0gdm9pZCAwO1xuZXhwb3J0cy5Qb255ZmlsbEJ0b2EgPSBQb255ZmlsbEJ0b2E7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jbGFzcyBQb255ZmlsbFRleHRFbmNvZGVyIHtcbiAgICBlbmNvZGluZztcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZyA9ICd1dGYtOCcpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICAgIH1cbiAgICBlbmNvZGUoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LCB0aGlzLmVuY29kaW5nKTtcbiAgICB9XG4gICAgZW5jb2RlSW50byhzb3VyY2UsIGRlc3RpbmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IHRoaXMuZW5jb2RlKHNvdXJjZSk7XG4gICAgICAgIGNvbnN0IGNvcGllZCA9IGJ1ZmZlci5jb3B5KGRlc3RpbmF0aW9uKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlYWQ6IGNvcGllZCxcbiAgICAgICAgICAgIHdyaXR0ZW46IGNvcGllZCxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXIgPSBQb255ZmlsbFRleHRFbmNvZGVyO1xuY2xhc3MgUG9ueWZpbGxUZXh0RGVjb2RlciB7XG4gICAgZW5jb2Rpbmc7XG4gICAgZmF0YWwgPSBmYWxzZTtcbiAgICBpZ25vcmVCT00gPSBmYWxzZTtcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZyA9ICd1dGYtOCcsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICAgICAgICBpZiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5mYXRhbCA9IG9wdGlvbnMuZmF0YWwgfHwgZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmlnbm9yZUJPTSA9IG9wdGlvbnMuaWdub3JlQk9NIHx8IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlY29kZShpbnB1dCkge1xuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGlucHV0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0LnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc0FycmF5QnVmZmVyVmlldykoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQuYnVmZmVyLCBpbnB1dC5ieXRlT2Zmc2V0LCBpbnB1dC5ieXRlTGVuZ3RoKS50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUZXh0RGVjb2RlciA9IFBvbnlmaWxsVGV4dERlY29kZXI7XG5mdW5jdGlvbiBQb255ZmlsbEJ0b2EoaW5wdXQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQsICdiaW5hcnknKS50b1N0cmluZygnYmFzZTY0Jyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    transform.end();\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsbUlBQXFCO0FBQ3pELDRCQUE0QixtQkFBTyxDQUFDLG1JQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVHJhbnNmb3JtU3RyZWFtLmpzPzNlMzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV9zdHJlYW1fMSA9IHJlcXVpcmUoXCJub2RlOnN0cmVhbVwiKTtcbmNvbnN0IFJlYWRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9SZWFkYWJsZVN0cmVhbS5qc1wiKTtcbmNvbnN0IFdyaXRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9Xcml0YWJsZVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICB0cmFuc2Zvcm07XG4gICAgd3JpdGFibGU7XG4gICAgcmVhZGFibGU7XG4gICAgY29uc3RydWN0b3IodHJhbnNmb3JtZXIpIHtcbiAgICAgICAgaWYgKHRyYW5zZm9ybWVyIGluc3RhbmNlb2Ygbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0pIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHJhbnNmb3JtZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRyb2xsZXIgPSB7XG4gICAgICAgICAgICAgICAgZW5xdWV1ZShjaHVuaykge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0ucHVzaChjaHVuayk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvcihyZWFzb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLmRlc3Ryb3kocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRlcm1pbmF0ZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLmVuZCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGRlc2lyZWRTaXplKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLndyaXRhYmxlTGVuZ3RoO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gbmV3IG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKHtcbiAgICAgICAgICAgICAgICByZWFkKCkgeyB9LFxuICAgICAgICAgICAgICAgIHdyaXRlKGNodW5rLCBfZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0cmFuc2Zvcm1lci50cmFuc2Zvcm0/LihjaHVuaywgY29udHJvbGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmaW5hbChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdHJhbnNmb3JtZXIuZmx1c2g/Lihjb250cm9sbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gbmV3IG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy53cml0YWJsZSA9IG5ldyBXcml0YWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsV3JpdGFibGVTdHJlYW0odGhpcy50cmFuc2Zvcm0pO1xuICAgICAgICB0aGlzLnJlYWRhYmxlID0gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSA9IFBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nconst fast_url_parser_1 = tslib_1.__importDefault(__webpack_require__(/*! @kamilkisiela/fast-url-parser */ \"(ssr)/../node_modules/@kamilkisiela/fast-url-parser/src/urlparser.js\"));\nconst URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nfast_url_parser_1.default.queryString = fast_querystring_1.default;\nclass PonyfillURL extends fast_url_parser_1.default {\n    constructor(url, base) {\n        super();\n        if (url.startsWith('data:')) {\n            this.protocol = 'data:';\n            this.pathname = url.slice('data:'.length);\n            return;\n        }\n        this.parse(url, false);\n        if (base) {\n            const baseParsed = typeof base === 'string' ? new PonyfillURL(base) : base;\n            this.protocol = this.protocol || baseParsed.protocol;\n            this.host = this.host || baseParsed.host;\n            this.pathname = this.pathname || baseParsed.pathname;\n        }\n    }\n    get origin() {\n        return `${this.protocol}//${this.host}`;\n    }\n    _searchParams;\n    get searchParams() {\n        if (!this._searchParams) {\n            this._searchParams = new URLSearchParams_js_1.PonyfillURLSearchParams(this.query);\n        }\n        return this._searchParams;\n    }\n    get username() {\n        return this.auth?.split(':')[0] || '';\n    }\n    set username(value) {\n        this.auth = `${value}:${this.password}`;\n    }\n    get password() {\n        return this.auth?.split(':')[1] || '';\n    }\n    set password(value) {\n        this.auth = `${this.username}:${value}`;\n    }\n    toString() {\n        return this.format();\n    }\n    toJSON() {\n        return this.toString();\n    }\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static resolveObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            URL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || (0, buffer_1.resolveObjectURL)(url));\n    }\n}\nexports.PonyfillURL = PonyfillURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsbURBQW1ELG1CQUFPLENBQUMsNkVBQWtCO0FBQzdFLGtEQUFrRCxtQkFBTyxDQUFDLDJHQUErQjtBQUN6Riw2QkFBNkIsbUJBQU8sQ0FBQyxxSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWMsSUFBSSxVQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixNQUFNLEdBQUcsY0FBYztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGNBQWMsR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywyQkFBMkI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVVJMLmpzP2RmYzgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVVJMID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IGZhc3RfcXVlcnlzdHJpbmdfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJmYXN0LXF1ZXJ5c3RyaW5nXCIpKTtcbmNvbnN0IGZhc3RfdXJsX3BhcnNlcl8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIkBrYW1pbGtpc2llbGEvZmFzdC11cmwtcGFyc2VyXCIpKTtcbmNvbnN0IFVSTFNlYXJjaFBhcmFtc19qc18xID0gcmVxdWlyZShcIi4vVVJMU2VhcmNoUGFyYW1zLmpzXCIpO1xuZmFzdF91cmxfcGFyc2VyXzEuZGVmYXVsdC5xdWVyeVN0cmluZyA9IGZhc3RfcXVlcnlzdHJpbmdfMS5kZWZhdWx0O1xuY2xhc3MgUG9ueWZpbGxVUkwgZXh0ZW5kcyBmYXN0X3VybF9wYXJzZXJfMS5kZWZhdWx0IHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIGJhc2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHVybC5zdGFydHNXaXRoKCdkYXRhOicpKSB7XG4gICAgICAgICAgICB0aGlzLnByb3RvY29sID0gJ2RhdGE6JztcbiAgICAgICAgICAgIHRoaXMucGF0aG5hbWUgPSB1cmwuc2xpY2UoJ2RhdGE6Jy5sZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFyc2UodXJsLCBmYWxzZSk7XG4gICAgICAgIGlmIChiYXNlKSB7XG4gICAgICAgICAgICBjb25zdCBiYXNlUGFyc2VkID0gdHlwZW9mIGJhc2UgPT09ICdzdHJpbmcnID8gbmV3IFBvbnlmaWxsVVJMKGJhc2UpIDogYmFzZTtcbiAgICAgICAgICAgIHRoaXMucHJvdG9jb2wgPSB0aGlzLnByb3RvY29sIHx8IGJhc2VQYXJzZWQucHJvdG9jb2w7XG4gICAgICAgICAgICB0aGlzLmhvc3QgPSB0aGlzLmhvc3QgfHwgYmFzZVBhcnNlZC5ob3N0O1xuICAgICAgICAgICAgdGhpcy5wYXRobmFtZSA9IHRoaXMucGF0aG5hbWUgfHwgYmFzZVBhcnNlZC5wYXRobmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgb3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5wcm90b2NvbH0vLyR7dGhpcy5ob3N0fWA7XG4gICAgfVxuICAgIF9zZWFyY2hQYXJhbXM7XG4gICAgZ2V0IHNlYXJjaFBhcmFtcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9zZWFyY2hQYXJhbXMpIHtcbiAgICAgICAgICAgIHRoaXMuX3NlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXNfanNfMS5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyh0aGlzLnF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fc2VhcmNoUGFyYW1zO1xuICAgIH1cbiAgICBnZXQgdXNlcm5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF1dGg/LnNwbGl0KCc6JylbMF0gfHwgJyc7XG4gICAgfVxuICAgIHNldCB1c2VybmFtZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLmF1dGggPSBgJHt2YWx1ZX06JHt0aGlzLnBhc3N3b3JkfWA7XG4gICAgfVxuICAgIGdldCBwYXNzd29yZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aD8uc3BsaXQoJzonKVsxXSB8fCAnJztcbiAgICB9XG4gICAgc2V0IHBhc3N3b3JkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYXV0aCA9IGAke3RoaXMudXNlcm5hbWV9OiR7dmFsdWV9YDtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdCgpO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHN0YXRpYyBibG9iUmVnaXN0cnkgPSBuZXcgTWFwKCk7XG4gICAgc3RhdGljIGNyZWF0ZU9iamVjdFVSTChibG9iKSB7XG4gICAgICAgIGNvbnN0IGJsb2JVcmwgPSBgYmxvYjp3aGF0d2dub2RlOiR7KDAsIGNyeXB0b18xLnJhbmRvbVVVSUQpKCl9YDtcbiAgICAgICAgdGhpcy5ibG9iUmVnaXN0cnkuc2V0KGJsb2JVcmwsIGJsb2IpO1xuICAgICAgICByZXR1cm4gYmxvYlVybDtcbiAgICB9XG4gICAgc3RhdGljIHJlc29sdmVPYmplY3RVUkwodXJsKSB7XG4gICAgICAgIGlmICghdGhpcy5ibG9iUmVnaXN0cnkuaGFzKHVybCkpIHtcbiAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYmxvYlJlZ2lzdHJ5LmRlbGV0ZSh1cmwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBnZXRCbG9iRnJvbVVSTCh1cmwpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmJsb2JSZWdpc3RyeS5nZXQodXJsKSB8fCAoMCwgYnVmZmVyXzEucmVzb2x2ZU9iamVjdFVSTCkodXJsKSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFVSTCA9IFBvbnlmaWxsVVJMO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nfunction isURLSearchParams(value) {\n    return value?.entries != null;\n}\nclass PonyfillURLSearchParams {\n    params;\n    constructor(init) {\n        if (init) {\n            if (typeof init === 'string') {\n                this.params = fast_querystring_1.default.parse(init);\n            }\n            else if (Array.isArray(init)) {\n                this.params = {};\n                for (const [key, value] of init) {\n                    this.params[key] = value;\n                }\n            }\n            else if (isURLSearchParams(init)) {\n                this.params = {};\n                for (const [key, value] of init.entries()) {\n                    this.params[key] = value;\n                }\n            }\n            else {\n                this.params = init;\n            }\n        }\n        else {\n            this.params = {};\n        }\n    }\n    append(name, value) {\n        const existingValue = this.params[name];\n        const finalValue = existingValue ? `${existingValue},${value}` : value;\n        this.params[name] = finalValue;\n    }\n    delete(name) {\n        delete this.params[name];\n    }\n    get(name) {\n        const value = this.params[name];\n        if (Array.isArray(value)) {\n            return value[0] || null;\n        }\n        return value || null;\n    }\n    getAll(name) {\n        const value = this.params[name];\n        if (!Array.isArray(value)) {\n            return value ? [value] : [];\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.params;\n    }\n    set(name, value) {\n        this.params[name] = value;\n    }\n    sort() {\n        const sortedKeys = Object.keys(this.params).sort();\n        const sortedParams = {};\n        for (const key of sortedKeys) {\n            sortedParams[key] = this.params[key];\n        }\n        this.params = sortedParams;\n    }\n    toString() {\n        return fast_querystring_1.default.stringify(this.params);\n    }\n    *keys() {\n        for (const key in this.params) {\n            yield key;\n        }\n    }\n    *entries() {\n        for (const key of this.keys()) {\n            const value = this.params[key];\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    yield [key, item];\n                }\n            }\n            else {\n                yield [key, value];\n            }\n        }\n    }\n    *values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n    get size() {\n        return Object.keys(this.params).length;\n    }\n}\nexports.PonyfillURLSearchParams = PonyfillURLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQU87QUFDL0IsbURBQW1ELG1CQUFPLENBQUMsNkVBQWtCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYyxHQUFHLE1BQU07QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcz81YzNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBmYXN0X3F1ZXJ5c3RyaW5nXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZmFzdC1xdWVyeXN0cmluZ1wiKSk7XG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uZW50cmllcyAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMge1xuICAgIHBhcmFtcztcbiAgICBjb25zdHJ1Y3Rvcihpbml0KSB7XG4gICAgICAgIGlmIChpbml0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGluaXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5wYXJzZShpbml0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaW5pdCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGluaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzVVJMU2VhcmNoUGFyYW1zKGluaXQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBpbml0LmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhcmFtc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBpbml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdWYWx1ZSA9IHRoaXMucGFyYW1zW25hbWVdO1xuICAgICAgICBjb25zdCBmaW5hbFZhbHVlID0gZXhpc3RpbmdWYWx1ZSA/IGAke2V4aXN0aW5nVmFsdWV9LCR7dmFsdWV9YCA6IHZhbHVlO1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IGZpbmFsVmFsdWU7XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICB9XG4gICAgZ2V0KG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVbMF0gfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbiAgICB9XG4gICAgZ2V0QWxsKG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID8gW3ZhbHVlXSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUgaW4gdGhpcy5wYXJhbXM7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBzb3J0KCkge1xuICAgICAgICBjb25zdCBzb3J0ZWRLZXlzID0gT2JqZWN0LmtleXModGhpcy5wYXJhbXMpLnNvcnQoKTtcbiAgICAgICAgY29uc3Qgc29ydGVkUGFyYW1zID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHNvcnRlZEtleXMpIHtcbiAgICAgICAgICAgIHNvcnRlZFBhcmFtc1trZXldID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcmFtcyA9IHNvcnRlZFBhcmFtcztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5zdHJpbmdpZnkodGhpcy5wYXJhbXMpO1xuICAgIH1cbiAgICAqa2V5cygpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5wYXJhbXMpIHtcbiAgICAgICAgICAgIHlpZWxkIGtleTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAqZW50cmllcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgdGhpcy5rZXlzKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBba2V5LCBpdGVtXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBba2V5LCB2YWx1ZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBbLCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKTtcbiAgICB9XG4gICAgZm9yRWFjaChjYWxsYmFjaykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0aGlzKSB7XG4gICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMucGFyYW1zKS5sZW5ndGg7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IFBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            let onabort;\n            let reason;\n            const controller = {\n                signal: {\n                    any(signals) {\n                        return AbortSignal.any([...signals]);\n                    },\n                    get reason() {\n                        return reason;\n                    },\n                    get aborted() {\n                        return writable.destroyed;\n                    },\n                    addEventListener: (_event, eventListener) => {\n                        writable.once('error', eventListener);\n                        writable.once('close', eventListener);\n                    },\n                    removeEventListener: (_event, eventListener) => {\n                        writable.off('error', eventListener);\n                        writable.off('close', eventListener);\n                    },\n                    dispatchEvent: (_event) => {\n                        return false;\n                    },\n                    get onabort() {\n                        return onabort;\n                    },\n                    set onabort(value) {\n                        if (onabort) {\n                            this.removeEventListener('abort', onabort);\n                        }\n                        onabort = value;\n                        if (onabort) {\n                            this.addEventListener('abort', onabort);\n                        }\n                    },\n                    throwIfAborted() {\n                        if (writable.destroyed) {\n                            throw reason;\n                        }\n                    },\n                },\n                error: e => {\n                    this.writable.destroy(e);\n                },\n            };\n            this.writable.once('error', err => {\n                reason = err;\n            });\n        }\n        else {\n            this.writable = new stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            closed: new Promise(resolve => {\n                writable.once('close', () => {\n                    resolve(undefined);\n                });\n            }),\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            ready: new Promise(resolve => {\n                writable.once('drain', () => {\n                    resolve(undefined);\n                });\n            }),\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                if (chunk == null) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    writable.write(chunk, (err) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    if (writable.errored) {\n                        reject(writable.errored);\n                    }\n                    else {\n                        writable.end((err) => {\n                            if (err) {\n                                reject(err);\n                            }\n                            else {\n                                resolve();\n                            }\n                        });\n                    }\n                });\n            },\n            abort(reason) {\n                return new Promise(resolve => {\n                    writable.destroy(reason);\n                    writable.once('close', resolve);\n                });\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)(undefined);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.writable.errored) {\n                reject(this.writable.errored);\n            }\n            else {\n                this.writable.end((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            }\n        });\n    }\n    abort(reason) {\n        return new Promise(resolve => {\n            this.writable.destroy(reason);\n            this.writable.once('close', resolve);\n        });\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nfunction getResponseForFile(url) {\n    const path = (0, url_1.fileURLToPath)(url);\n    const readable = (0, fs_1.createReadStream)(path);\n    return new Response_js_1.PonyfillResponse(readable);\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixhQUFhLG1CQUFPLENBQUMsY0FBSTtBQUN6QixjQUFjLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMseUhBQWdCO0FBQy9DLDJCQUEyQixtQkFBTyxDQUFDLGlJQUFvQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBYztBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyx1SEFBZTtBQUM3QyxpQkFBaUIsbUJBQU8sQ0FBQyw2R0FBVTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyxpSEFBWTtBQUN2Qyx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvZmV0Y2guanM/OWZjYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmV0Y2hQb255ZmlsbCA9IGZldGNoUG9ueWZpbGw7XG5jb25zdCBmc18xID0gcmVxdWlyZShcImZzXCIpO1xuY29uc3QgdXJsXzEgPSByZXF1aXJlKFwidXJsXCIpO1xuY29uc3QgZmV0Y2hDdXJsX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaEN1cmwuanNcIik7XG5jb25zdCBmZXRjaE5vZGVIdHRwX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaE5vZGVIdHRwLmpzXCIpO1xuY29uc3QgUmVxdWVzdF9qc18xID0gcmVxdWlyZShcIi4vUmVxdWVzdC5qc1wiKTtcbmNvbnN0IFJlc3BvbnNlX2pzXzEgPSByZXF1aXJlKFwiLi9SZXNwb25zZS5qc1wiKTtcbmNvbnN0IFVSTF9qc18xID0gcmVxdWlyZShcIi4vVVJMLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY29uc3QgQkFTRTY0X1NVRkZJWCA9ICc7YmFzZTY0JztcbmZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yRmlsZSh1cmwpIHtcbiAgICBjb25zdCBwYXRoID0gKDAsIHVybF8xLmZpbGVVUkxUb1BhdGgpKHVybCk7XG4gICAgY29uc3QgcmVhZGFibGUgPSAoMCwgZnNfMS5jcmVhdGVSZWFkU3RyZWFtKShwYXRoKTtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShyZWFkYWJsZSk7XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckRhdGFVcmkodXJsKSB7XG4gICAgY29uc3QgW21pbWVUeXBlID0gJ3RleHQvcGxhaW4nLCAuLi5kYXRhc10gPSB1cmwuc3Vic3RyaW5nKDUpLnNwbGl0KCcsJyk7XG4gICAgY29uc3QgZGF0YSA9IGRlY29kZVVSSUNvbXBvbmVudChkYXRhcy5qb2luKCcsJykpO1xuICAgIGlmIChtaW1lVHlwZS5lbmRzV2l0aChCQVNFNjRfU1VGRklYKSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShkYXRhLCAnYmFzZTY0dXJsJyk7XG4gICAgICAgIGNvbnN0IHJlYWxNaW1lVHlwZSA9IG1pbWVUeXBlLnNsaWNlKDAsIC1CQVNFNjRfU1VGRklYLmxlbmd0aCk7XG4gICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKGJ1ZmZlciwge1xuICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiByZWFsTWltZVR5cGUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoZGF0YSwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgc3RhdHVzVGV4dDogJ09LJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IG1pbWVUeXBlLFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0UmVzcG9uc2VGb3JCbG9iKHVybCkge1xuICAgIGNvbnN0IGJsb2IgPSBVUkxfanNfMS5Qb255ZmlsbFVSTC5nZXRCbG9iRnJvbVVSTCh1cmwpO1xuICAgIGlmICghYmxvYikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIEJsb2IgVVJMJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKGJsb2IsIHtcbiAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBibG9iLnR5cGUsXG4gICAgICAgICAgICAnY29udGVudC1sZW5ndGgnOiBibG9iLnNpemUudG9TdHJpbmcoKSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzVVJMKG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmouaHJlZiAhPSBudWxsO1xufVxuZnVuY3Rpb24gZmV0Y2hQb255ZmlsbChpbmZvLCBpbml0KSB7XG4gICAgaWYgKHR5cGVvZiBpbmZvID09PSAnc3RyaW5nJyB8fCBpc1VSTChpbmZvKSkge1xuICAgICAgICBjb25zdCBwb255ZmlsbFJlcXVlc3QgPSBuZXcgUmVxdWVzdF9qc18xLlBvbnlmaWxsUmVxdWVzdChpbmZvLCBpbml0KTtcbiAgICAgICAgcmV0dXJuIGZldGNoUG9ueWZpbGwocG9ueWZpbGxSZXF1ZXN0KTtcbiAgICB9XG4gICAgY29uc3QgZmV0Y2hSZXF1ZXN0ID0gaW5mbztcbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdkYXRhOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JEYXRhVXJpKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgaWYgKGZldGNoUmVxdWVzdC51cmwuc3RhcnRzV2l0aCgnZmlsZTonKSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGdldFJlc3BvbnNlRm9yRmlsZShmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKShyZXNwb25zZSk7XG4gICAgfVxuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2Jsb2I6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckJsb2IoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZ2xvYmFsVGhpcy5saWJjdXJsICYmICFmZXRjaFJlcXVlc3QuYWdlbnQpIHtcbiAgICAgICAgcmV0dXJuICgwLCBmZXRjaEN1cmxfanNfMS5mZXRjaEN1cmwpKGZldGNoUmVxdWVzdCk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgZmV0Y2hOb2RlSHR0cF9qc18xLmZldGNoTm9kZUh0dHApKGZldGNoUmVxdWVzdCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tls_1 = __webpack_require__(/*! tls */ \"tls\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    curlHandle.setStreamProgressCallback(function () {\n        return fetchRequest['_signal']?.aborted\n            ? process.env.DEBUG\n                ? CurlProgressFunc.Continue\n                : 1\n            : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, utils_js_1.createDeferredPromise)();\n    let streamResolved;\n    if (fetchRequest['_signal']) {\n        fetchRequest['_signal'].onabort = () => {\n            if (curlHandle.isOpen) {\n                try {\n                    curlHandle.pause(CurlPause.Recv);\n                }\n                catch (e) {\n                    deferredPromise.reject(e);\n                }\n            }\n        };\n    }\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = new stream_1.PassThrough();\n        stream_1.promises\n            .pipeline(stream, outputStream, {\n            end: true,\n            signal: fetchRequest['_signal'] ?? undefined,\n        })\n            .then(() => {\n            if (!stream.destroyed) {\n                stream.resume();\n            }\n        })\n            .catch(deferredPromise.reject);\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    (headerFilter.includes('location') || headerFilter.includes('Location'))) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    let count = 0;\n    try {\n        count = Curl.getCount();\n    }\n    catch { }\n    if (count > 0) {\n        setImmediate(() => {\n            curlHandle.perform();\n        });\n    }\n    else {\n        curlHandle.perform();\n    }\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.url);\n            const nodeReadable = (fetchRequest.body != null\n                ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                    ? fetchRequest.body\n                    : stream_1.Readable.from(fetchRequest.body)\n                : null);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            if (nodeHeaders['accept-encoding'] == null) {\n                nodeHeaders['accept-encoding'] = 'gzip, deflate, br';\n            }\n            const nodeRequest = requestFn(fetchRequest.url, {\n                method: fetchRequest.method,\n                headers: nodeHeaders,\n                signal: fetchRequest['_signal'] ?? undefined,\n                agent: fetchRequest.agent,\n            });\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, zlib_1.createBrotliDecompress)();\n                        break;\n                    default:\n                        outputStream = new stream_1.PassThrough();\n                }\n                if (nodeResponse.headers.location) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                stream_1.promises\n                    .pipeline(nodeResponse, outputStream, {\n                    signal: fetchRequest['_signal'] ?? undefined,\n                    end: true,\n                })\n                    .then(() => {\n                    if (!nodeResponse.destroyed) {\n                        nodeResponse.resume();\n                    }\n                })\n                    .catch(reject);\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n                    status: nodeResponse.statusCode,\n                    statusText: nodeResponse.statusMessage,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                });\n                resolve(ponyfillResponse);\n            });\n            nodeRequest.once('error', reject);\n            if (nodeReadable) {\n                nodeReadable.pipe(nodeRequest);\n            }\n            else {\n                nodeRequest.end();\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLHVCQUF1QixHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsWUFBWSxHQUFHLGdCQUFnQixHQUFHLFlBQVksR0FBRyxzQkFBc0IsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsWUFBWSxHQUFHLGVBQWUsR0FBRyxhQUFhO0FBQzdXLGlCQUFpQixtQkFBTyxDQUFDLGlIQUFZO0FBQ3JDLHlDQUF3QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUNwSCxtQkFBbUIsbUJBQU8sQ0FBQyxxSEFBYztBQUN6QywyQ0FBMEMsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDMUgsZ0JBQWdCLG1CQUFPLENBQUMsK0dBQVc7QUFDbkMsd0NBQXVDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ2pILG1CQUFtQixtQkFBTyxDQUFDLHFIQUFjO0FBQ3pDLDJDQUEwQyxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUMxSCxvQkFBb0IsbUJBQU8sQ0FBQyx1SEFBZTtBQUMzQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMsbUlBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUMvSSxnQkFBZ0IsbUJBQU8sQ0FBQywrR0FBVztBQUNuQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDakgsb0JBQW9CLG1CQUFPLENBQUMsdUhBQWU7QUFDM0MsNENBQTJDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQzdILGdCQUFnQixtQkFBTyxDQUFDLCtHQUFXO0FBQ25DLHdDQUF1QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUNqSCw4QkFBOEIsbUJBQU8sQ0FBQywySUFBeUI7QUFDL0QsK0NBQThDLEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQzdJLCtDQUE4QyxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUM3SSx3Q0FBdUMsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDL0gsZUFBZSxtQkFBTyxDQUFDLDZHQUFVO0FBQ2pDLHVDQUFzQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUM5RywyQkFBMkIsbUJBQU8sQ0FBQyxxSUFBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLHdEQUF3RCxFQUFDO0FBQ2xKLDBCQUEwQixtQkFBTyxDQUFDLG1JQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDL0ksMkJBQTJCLG1CQUFPLENBQUMscUlBQXNCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSiw2QkFBNkIsbUJBQU8sQ0FBQyx5SUFBd0I7QUFDN0QscURBQW9ELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQ3hKLCtCQUErQixtQkFBTyxDQUFDLDZJQUEwQjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9pbmRleC5qcz9lOTg5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWNvbXByZXNzaW9uU3RyZWFtID0gZXhwb3J0cy5Db21wcmVzc2lvblN0cmVhbSA9IGV4cG9ydHMuVHJhbnNmb3JtU3RyZWFtID0gZXhwb3J0cy5Xcml0YWJsZVN0cmVhbSA9IGV4cG9ydHMuVVJMU2VhcmNoUGFyYW1zID0gZXhwb3J0cy5VUkwgPSBleHBvcnRzLmJ0b2EgPSBleHBvcnRzLlRleHREZWNvZGVyID0gZXhwb3J0cy5UZXh0RW5jb2RlciA9IGV4cG9ydHMuQmxvYiA9IGV4cG9ydHMuRm9ybURhdGEgPSBleHBvcnRzLkZpbGUgPSBleHBvcnRzLlJlYWRhYmxlU3RyZWFtID0gZXhwb3J0cy5SZXNwb25zZSA9IGV4cG9ydHMuUmVxdWVzdCA9IGV4cG9ydHMuQm9keSA9IGV4cG9ydHMuSGVhZGVycyA9IGV4cG9ydHMuZmV0Y2ggPSB2b2lkIDA7XG52YXIgZmV0Y2hfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZmV0Y2hcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZldGNoX2pzXzEuZmV0Y2hQb255ZmlsbDsgfSB9KTtcbnZhciBIZWFkZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSGVhZGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVyczsgfSB9KTtcbnZhciBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQm9keVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQm9keV9qc18xLlBvbnlmaWxsQm9keTsgfSB9KTtcbnZhciBSZXF1ZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9SZXF1ZXN0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVxdWVzdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVxdWVzdF9qc18xLlBvbnlmaWxsUmVxdWVzdDsgfSB9KTtcbnZhciBSZXNwb25zZV9qc18xID0gcmVxdWlyZShcIi4vUmVzcG9uc2UuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlOyB9IH0pO1xudmFyIFJlYWRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9SZWFkYWJsZVN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlYWRhYmxlU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW07IH0gfSk7XG52YXIgRmlsZV9qc18xID0gcmVxdWlyZShcIi4vRmlsZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZpbGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZpbGVfanNfMS5Qb255ZmlsbEZpbGU7IH0gfSk7XG52YXIgRm9ybURhdGFfanNfMSA9IHJlcXVpcmUoXCIuL0Zvcm1EYXRhLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRm9ybURhdGFcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZvcm1EYXRhX2pzXzEuUG9ueWZpbGxGb3JtRGF0YTsgfSB9KTtcbnZhciBCbG9iX2pzXzEgPSByZXF1aXJlKFwiLi9CbG9iLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQmxvYlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmxvYl9qc18xLlBvbnlmaWxsQmxvYjsgfSB9KTtcbnZhciBUZXh0RW5jb2RlckRlY29kZXJfanNfMSA9IHJlcXVpcmUoXCIuL1RleHRFbmNvZGVyRGVjb2Rlci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRleHRFbmNvZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbFRleHRFbmNvZGVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGV4dERlY29kZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dERlY29kZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJidG9hXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbEJ0b2E7IH0gfSk7XG52YXIgVVJMX2pzXzEgPSByZXF1aXJlKFwiLi9VUkwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVUkxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFVSTF9qc18xLlBvbnlmaWxsVVJMOyB9IH0pO1xudmFyIFVSTFNlYXJjaFBhcmFtc19qc18xID0gcmVxdWlyZShcIi4vVVJMU2VhcmNoUGFyYW1zLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVVJMU2VhcmNoUGFyYW1zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBVUkxTZWFyY2hQYXJhbXNfanNfMS5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtczsgfSB9KTtcbnZhciBXcml0YWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vV3JpdGFibGVTdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJXcml0YWJsZVN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gV3JpdGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFdyaXRhYmxlU3RyZWFtOyB9IH0pO1xudmFyIFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNmb3JtU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbTsgfSB9KTtcbnZhciBDb21wcmVzc2lvblN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vQ29tcHJlc3Npb25TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb21wcmVzc2lvblN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29tcHJlc3Npb25TdHJlYW1fanNfMS5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtOyB9IH0pO1xudmFyIERlY29tcHJlc3Npb25TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL0RlY29tcHJlc3Npb25TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEZWNvbXByZXNzaW9uU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBEZWNvbXByZXNzaW9uU3RyZWFtX2pzXzEuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.fakePromise = fakePromise;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.createDeferredPromise = createDeferredPromise;\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    const obj = {};\n    headers.forEach((value, key) => {\n        obj[key] = value;\n    });\n    return obj;\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction fakePromise(value) {\n    if (isPromise(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if (isPromise(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if (isPromise(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixnQ0FBZ0M7QUFDaEMsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSSxJQUFJLE1BQU07QUFDMUMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvdXRpbHMuanM/ZWRhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SGVhZGVyc09iaiA9IGdldEhlYWRlcnNPYmo7XG5leHBvcnRzLmRlZmF1bHRIZWFkZXJzU2VyaWFsaXplciA9IGRlZmF1bHRIZWFkZXJzU2VyaWFsaXplcjtcbmV4cG9ydHMuZmFrZVByb21pc2UgPSBmYWtlUHJvbWlzZTtcbmV4cG9ydHMuaXNBcnJheUJ1ZmZlclZpZXcgPSBpc0FycmF5QnVmZmVyVmlldztcbmV4cG9ydHMuaXNOb2RlUmVhZGFibGUgPSBpc05vZGVSZWFkYWJsZTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWRQcm9taXNlID0gY3JlYXRlRGVmZXJyZWRQcm9taXNlO1xuZnVuY3Rpb24gaXNIZWFkZXJzSW5zdGFuY2Uob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uZm9yRWFjaCAhPSBudWxsO1xufVxuZnVuY3Rpb24gZ2V0SGVhZGVyc09iaihoZWFkZXJzKSB7XG4gICAgaWYgKGhlYWRlcnMgPT0gbnVsbCB8fCAhaXNIZWFkZXJzSW5zdGFuY2UoaGVhZGVycykpIHtcbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfVxuICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgIGhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBvYmo7XG59XG5mdW5jdGlvbiBkZWZhdWx0SGVhZGVyc1NlcmlhbGl6ZXIoaGVhZGVycywgb25Db250ZW50TGVuZ3RoKSB7XG4gICAgY29uc3QgaGVhZGVyQXJyYXkgPSBbXTtcbiAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKG9uQ29udGVudExlbmd0aCAmJiBrZXkgPT09ICdjb250ZW50LWxlbmd0aCcpIHtcbiAgICAgICAgICAgIG9uQ29udGVudExlbmd0aCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaGVhZGVyQXJyYXkucHVzaChgJHtrZXl9OiAke3ZhbHVlfWApO1xuICAgIH0pO1xuICAgIHJldHVybiBoZWFkZXJBcnJheTtcbn1cbmZ1bmN0aW9uIGlzUHJvbWlzZSh2YWwpIHtcbiAgICByZXR1cm4gdmFsPy50aGVuICE9IG51bGw7XG59XG5mdW5jdGlvbiBmYWtlUHJvbWlzZSh2YWx1ZSkge1xuICAgIGlmIChpc1Byb21pc2UodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgLy8gV3JpdGUgYSBmYWtlIHByb21pc2UgdG8gYXZvaWQgdGhlIHByb21pc2UgY29uc3RydWN0b3JcbiAgICAvLyBiZWluZyBjYWxsZWQgd2l0aCBgbmV3IFByb21pc2VgIGluIHRoZSBicm93c2VyLlxuICAgIHJldHVybiB7XG4gICAgICAgIHRoZW4ocmVzb2x2ZSkge1xuICAgICAgICAgICAgaWYgKHJlc29sdmUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFja1Jlc3VsdCA9IHJlc29sdmUodmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmIChpc1Byb21pc2UoY2FsbGJhY2tSZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFja1Jlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZha2VQcm9taXNlKGNhbGxiYWNrUmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBjYXRjaCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBmaW5hbGx5KGNiKSB7XG4gICAgICAgICAgICBpZiAoY2IpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFja1Jlc3VsdCA9IGNiKCk7XG4gICAgICAgICAgICAgICAgaWYgKGlzUHJvbWlzZShjYWxsYmFja1Jlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrUmVzdWx0LnRoZW4oKCkgPT4gdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFrZVByb21pc2UodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIFtTeW1ib2wudG9TdHJpbmdUYWddOiAnUHJvbWlzZScsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmouYnVmZmVyICE9IG51bGwgJiYgb2JqLmJ5dGVMZW5ndGggIT0gbnVsbCAmJiBvYmouYnl0ZU9mZnNldCAhPSBudWxsO1xufVxuZnVuY3Rpb24gaXNOb2RlUmVhZGFibGUob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5waXBlICE9IG51bGw7XG59XG5mdW5jdGlvbiBjcmVhdGVEZWZlcnJlZFByb21pc2UoKSB7XG4gICAgbGV0IHJlc29sdmVGbjtcbiAgICBsZXQgcmVqZWN0Rm47XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIGRlZmVycmVkUHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICByZXNvbHZlRm4gPSByZXNvbHZlO1xuICAgICAgICByZWplY3RGbiA9IHJlamVjdDtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9taXNlLFxuICAgICAgICBnZXQgcmVzb2x2ZSgpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlRm47XG4gICAgICAgIH0sXG4gICAgICAgIGdldCByZWplY3QoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0Rm47XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/dist/urlpattern.cjs":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/dist/urlpattern.cjs ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("var M=Object.defineProperty;var Pe=Object.getOwnPropertyDescriptor;var Re=Object.getOwnPropertyNames;var Ee=Object.prototype.hasOwnProperty;var Oe=(e,t)=>{for(var r in t)M(e,r,{get:t[r],enumerable:!0})},ke=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of Re(t))!Ee.call(e,a)&&a!==r&&M(e,a,{get:()=>t[a],enumerable:!(n=Pe(t,a))||n.enumerable});return e};var Te=e=>ke(M({},\"__esModule\",{value:!0}),e);var Ne={};Oe(Ne,{URLPattern:()=>Y});module.exports=Te(Ne);var R=class{type=3;name=\"\";prefix=\"\";value=\"\";suffix=\"\";modifier=3;constructor(t,r,n,a,c,l){this.type=t,this.name=r,this.prefix=n,this.value=a,this.suffix=c,this.modifier=l}hasCustomName(){return this.name!==\"\"&&typeof this.name!=\"number\"}},Ae=/[$_\\p{ID_Start}]/u,ye=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,v=\".*\";function we(e,t){return(t?/^[\\x00-\\xFF]*$/:/^[\\x00-\\x7F]*$/).test(e)}function D(e,t=!1){let r=[],n=0;for(;n<e.length;){let a=e[n],c=function(l){if(!t)throw new TypeError(l);r.push({type:\"INVALID_CHAR\",index:n,value:e[n++]})};if(a===\"*\"){r.push({type:\"ASTERISK\",index:n,value:e[n++]});continue}if(a===\"+\"||a===\"?\"){r.push({type:\"OTHER_MODIFIER\",index:n,value:e[n++]});continue}if(a===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(a===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(a===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(a===\":\"){let l=\"\",s=n+1;for(;s<e.length;){let i=e.substr(s,1);if(s===n+1&&Ae.test(i)||s!==n+1&&ye.test(i)){l+=e[s++];continue}break}if(!l){c(`Missing parameter name at ${n}`);continue}r.push({type:\"NAME\",index:n,value:l}),n=s;continue}if(a===\"(\"){let l=1,s=\"\",i=n+1,o=!1;if(e[i]===\"?\"){c(`Pattern cannot start with \"?\" at ${i}`);continue}for(;i<e.length;){if(!we(e[i],!1)){c(`Invalid character '${e[i]}' at ${i}.`),o=!0;break}if(e[i]===\"\\\\\"){s+=e[i++]+e[i++];continue}if(e[i]===\")\"){if(l--,l===0){i++;break}}else if(e[i]===\"(\"&&(l++,e[i+1]!==\"?\")){c(`Capturing groups are not allowed at ${i}`),o=!0;break}s+=e[i++]}if(o)continue;if(l){c(`Unbalanced pattern at ${n}`);continue}if(!s){c(`Missing pattern at ${n}`);continue}r.push({type:\"REGEX\",index:n,value:s}),n=i;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}return r.push({type:\"END\",index:n,value:\"\"}),r}function F(e,t={}){let r=D(e);t.delimiter??=\"/#?\",t.prefixes??=\"./\";let n=`[^${S(t.delimiter)}]+?`,a=[],c=0,l=0,s=\"\",i=new Set,o=h=>{if(l<r.length&&r[l].type===h)return r[l++].value},f=()=>o(\"OTHER_MODIFIER\")??o(\"ASTERISK\"),d=h=>{let u=o(h);if(u!==void 0)return u;let{type:p,index:A}=r[l];throw new TypeError(`Unexpected ${p} at ${A}, expected ${h}`)},T=()=>{let h=\"\",u;for(;u=o(\"CHAR\")??o(\"ESCAPED_CHAR\");)h+=u;return h},xe=h=>h,L=t.encodePart||xe,I=\"\",U=h=>{I+=h},$=()=>{I.length&&(a.push(new R(3,\"\",\"\",L(I),\"\",3)),I=\"\")},X=(h,u,p,A,Z)=>{let g=3;switch(Z){case\"?\":g=1;break;case\"*\":g=0;break;case\"+\":g=2;break}if(!u&&!p&&g===3){U(h);return}if($(),!u&&!p){if(!h)return;a.push(new R(3,\"\",\"\",L(h),\"\",g));return}let m;p?p===\"*\"?m=v:m=p:m=n;let O=2;m===n?(O=1,m=\"\"):m===v&&(O=0,m=\"\");let P;if(u?P=u:p&&(P=c++),i.has(P))throw new TypeError(`Duplicate name '${P}'.`);i.add(P),a.push(new R(O,P,L(h),m,L(A),g))};for(;l<r.length;){let h=o(\"CHAR\"),u=o(\"NAME\"),p=o(\"REGEX\");if(!u&&!p&&(p=o(\"ASTERISK\")),u||p){let g=h??\"\";t.prefixes.indexOf(g)===-1&&(U(g),g=\"\"),$();let m=f();X(g,u,p,\"\",m);continue}let A=h??o(\"ESCAPED_CHAR\");if(A){U(A);continue}if(o(\"OPEN\")){let g=T(),m=o(\"NAME\"),O=o(\"REGEX\");!m&&!O&&(O=o(\"ASTERISK\"));let P=T();d(\"CLOSE\");let be=f();X(g,m,O,P,be);continue}$(),d(\"END\")}return a}function S(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function B(e){return e&&e.ignoreCase?\"ui\":\"u\"}function q(e,t,r){return W(F(e,r),t,r)}function k(e){switch(e){case 0:return\"*\";case 1:return\"?\";case 2:return\"+\";case 3:return\"\"}}function W(e,t,r={}){r.delimiter??=\"/#?\",r.prefixes??=\"./\",r.sensitive??=!1,r.strict??=!1,r.end??=!0,r.start??=!0,r.endsWith=\"\";let n=r.start?\"^\":\"\";for(let s of e){if(s.type===3){s.modifier===3?n+=S(s.value):n+=`(?:${S(s.value)})${k(s.modifier)}`;continue}t&&t.push(s.name);let i=`[^${S(r.delimiter)}]+?`,o=s.value;if(s.type===1?o=i:s.type===0&&(o=v),!s.prefix.length&&!s.suffix.length){s.modifier===3||s.modifier===1?n+=`(${o})${k(s.modifier)}`:n+=`((?:${o})${k(s.modifier)})`;continue}if(s.modifier===3||s.modifier===1){n+=`(?:${S(s.prefix)}(${o})${S(s.suffix)})`,n+=k(s.modifier);continue}n+=`(?:${S(s.prefix)}`,n+=`((?:${o})(?:`,n+=S(s.suffix),n+=S(s.prefix),n+=`(?:${o}))*)${S(s.suffix)})`,s.modifier===0&&(n+=\"?\")}let a=`[${S(r.endsWith)}]|$`,c=`[${S(r.delimiter)}]`;if(r.end)return r.strict||(n+=`${c}?`),r.endsWith.length?n+=`(?=${a})`:n+=\"$\",new RegExp(n,B(r));r.strict||(n+=`(?:${c}(?=${a}))?`);let l=!1;if(e.length){let s=e[e.length-1];s.type===3&&s.modifier===3&&(l=r.delimiter.indexOf(s)>-1)}return l||(n+=`(?=${c}|${a})`),new RegExp(n,B(r))}var x={delimiter:\"\",prefixes:\"\",sensitive:!0,strict:!0},J={delimiter:\".\",prefixes:\"\",sensitive:!0,strict:!0},Q={delimiter:\"/\",prefixes:\"/\",sensitive:!0,strict:!0};function ee(e,t){return e.length?e[0]===\"/\"?!0:!t||e.length<2?!1:(e[0]==\"\\\\\"||e[0]==\"{\")&&e[1]==\"/\":!1}function te(e,t){return e.startsWith(t)?e.substring(t.length,e.length):e}function Ce(e,t){return e.endsWith(t)?e.substr(0,e.length-t.length):e}function _(e){return!e||e.length<2?!1:e[0]===\"[\"||(e[0]===\"\\\\\"||e[0]===\"{\")&&e[1]===\"[\"}var re=[\"ftp\",\"file\",\"http\",\"https\",\"ws\",\"wss\"];function N(e){if(!e)return!0;for(let t of re)if(e.test(t))return!0;return!1}function ne(e,t){if(e=te(e,\"#\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.hash=e,r.hash?r.hash.substring(1,r.hash.length):\"\"}function se(e,t){if(e=te(e,\"?\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.search=e,r.search?r.search.substring(1,r.search.length):\"\"}function ie(e,t){return t||e===\"\"?e:_(e)?K(e):j(e)}function ae(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.password=e,r.password}function oe(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.username=e,r.username}function ce(e,t,r){if(r||e===\"\")return e;if(t&&!re.includes(t))return new URL(`${t}:${e}`).pathname;let n=e[0]==\"/\";return e=new URL(n?e:\"/-\"+e,\"https://example.com\").pathname,n||(e=e.substring(2,e.length)),e}function le(e,t,r){return z(t)===e&&(e=\"\"),r||e===\"\"?e:G(e)}function fe(e,t){return e=Ce(e,\":\"),t||e===\"\"?e:y(e)}function z(e){switch(e){case\"ws\":case\"http\":return\"80\";case\"wws\":case\"https\":return\"443\";case\"ftp\":return\"21\";default:return\"\"}}function y(e){if(e===\"\")return e;if(/^[-+.A-Za-z0-9]*$/.test(e))return e.toLowerCase();throw new TypeError(`Invalid protocol '${e}'.`)}function he(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.username=e,t.username}function ue(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.password=e,t.password}function j(e){if(e===\"\")return e;if(/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(e))throw new TypeError(`Invalid hostname '${e}'`);let t=new URL(\"https://example.com\");return t.hostname=e,t.hostname}function K(e){if(e===\"\")return e;if(/[^0-9a-fA-F[\\]:]/g.test(e))throw new TypeError(`Invalid IPv6 hostname '${e}'`);return e.toLowerCase()}function G(e){if(e===\"\"||/^[0-9]*$/.test(e)&&parseInt(e)<=65535)return e;throw new TypeError(`Invalid port '${e}'.`)}function de(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.pathname=e[0]!==\"/\"?\"/-\"+e:e,e[0]!==\"/\"?t.pathname.substring(2,t.pathname.length):t.pathname}function pe(e){return e===\"\"?e:new URL(`data:${e}`).pathname}function ge(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.search=e,t.search.substring(1,t.search.length)}function me(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.hash=e,t.hash.substring(1,t.hash.length)}var H=class{#i;#n=[];#t={};#e=0;#s=1;#l=0;#o=0;#d=0;#p=0;#g=!1;constructor(t){this.#i=t}get result(){return this.#t}parse(){for(this.#n=D(this.#i,!0);this.#e<this.#n.length;this.#e+=this.#s){if(this.#s=1,this.#n[this.#e].type===\"END\"){if(this.#o===0){this.#b(),this.#f()?this.#r(9,1):this.#h()?this.#r(8,1):this.#r(7,0);continue}else if(this.#o===2){this.#u(5);continue}this.#r(10,0);break}if(this.#d>0)if(this.#A())this.#d-=1;else continue;if(this.#T()){this.#d+=1;continue}switch(this.#o){case 0:this.#P()&&this.#u(1);break;case 1:if(this.#P()){this.#C();let t=7,r=1;this.#E()?(t=2,r=3):this.#g&&(t=2),this.#r(t,r)}break;case 2:this.#S()?this.#u(3):(this.#x()||this.#h()||this.#f())&&this.#u(5);break;case 3:this.#O()?this.#r(4,1):this.#S()&&this.#r(5,1);break;case 4:this.#S()&&this.#r(5,1);break;case 5:this.#y()?this.#p+=1:this.#w()&&(this.#p-=1),this.#k()&&!this.#p?this.#r(6,1):this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 6:this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 7:this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 8:this.#f()&&this.#r(9,1);break;case 9:break;case 10:break}}this.#t.hostname!==void 0&&this.#t.port===void 0&&(this.#t.port=\"\")}#r(t,r){switch(this.#o){case 0:break;case 1:this.#t.protocol=this.#c();break;case 2:break;case 3:this.#t.username=this.#c();break;case 4:this.#t.password=this.#c();break;case 5:this.#t.hostname=this.#c();break;case 6:this.#t.port=this.#c();break;case 7:this.#t.pathname=this.#c();break;case 8:this.#t.search=this.#c();break;case 9:this.#t.hash=this.#c();break;case 10:break}this.#o!==0&&t!==10&&([1,2,3,4].includes(this.#o)&&[6,7,8,9].includes(t)&&(this.#t.hostname??=\"\"),[1,2,3,4,5,6].includes(this.#o)&&[8,9].includes(t)&&(this.#t.pathname??=this.#g?\"/\":\"\"),[1,2,3,4,5,6,7].includes(this.#o)&&t===9&&(this.#t.search??=\"\")),this.#R(t,r)}#R(t,r){this.#o=t,this.#l=this.#e+r,this.#e+=r,this.#s=0}#b(){this.#e=this.#l,this.#s=0}#u(t){this.#b(),this.#o=t}#m(t){return t<0&&(t=this.#n.length-t),t<this.#n.length?this.#n[t]:this.#n[this.#n.length-1]}#a(t,r){let n=this.#m(t);return n.value===r&&(n.type===\"CHAR\"||n.type===\"ESCAPED_CHAR\"||n.type===\"INVALID_CHAR\")}#P(){return this.#a(this.#e,\":\")}#E(){return this.#a(this.#e+1,\"/\")&&this.#a(this.#e+2,\"/\")}#S(){return this.#a(this.#e,\"@\")}#O(){return this.#a(this.#e,\":\")}#k(){return this.#a(this.#e,\":\")}#x(){return this.#a(this.#e,\"/\")}#h(){if(this.#a(this.#e,\"?\"))return!0;if(this.#n[this.#e].value!==\"?\")return!1;let t=this.#m(this.#e-1);return t.type!==\"NAME\"&&t.type!==\"REGEX\"&&t.type!==\"CLOSE\"&&t.type!==\"ASTERISK\"}#f(){return this.#a(this.#e,\"#\")}#T(){return this.#n[this.#e].type==\"OPEN\"}#A(){return this.#n[this.#e].type==\"CLOSE\"}#y(){return this.#a(this.#e,\"[\")}#w(){return this.#a(this.#e,\"]\")}#c(){let t=this.#n[this.#e],r=this.#m(this.#l).index;return this.#i.substring(r,t.index)}#C(){let t={};Object.assign(t,x),t.encodePart=y;let r=q(this.#c(),void 0,t);this.#g=N(r)}};var V=[\"protocol\",\"username\",\"password\",\"hostname\",\"port\",\"pathname\",\"search\",\"hash\"],E=\"*\";function Se(e,t){if(typeof e!=\"string\")throw new TypeError(\"parameter 1 is not of type 'string'.\");let r=new URL(e,t);return{protocol:r.protocol.substring(0,r.protocol.length-1),username:r.username,password:r.password,hostname:r.hostname,port:r.port,pathname:r.pathname,search:r.search!==\"\"?r.search.substring(1,r.search.length):void 0,hash:r.hash!==\"\"?r.hash.substring(1,r.hash.length):void 0}}function b(e,t){return t?C(e):e}function w(e,t,r){let n;if(typeof t.baseURL==\"string\")try{n=new URL(t.baseURL),t.protocol===void 0&&(e.protocol=b(n.protocol.substring(0,n.protocol.length-1),r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&(e.username=b(n.username,r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&t.password===void 0&&(e.password=b(n.password,r)),t.protocol===void 0&&t.hostname===void 0&&(e.hostname=b(n.hostname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&(e.port=b(n.port,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&(e.pathname=b(n.pathname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&(e.search=b(n.search.substring(1,n.search.length),r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&t.hash===void 0&&(e.hash=b(n.hash.substring(1,n.hash.length),r))}catch{throw new TypeError(`invalid baseURL '${t.baseURL}'.`)}if(typeof t.protocol==\"string\"&&(e.protocol=fe(t.protocol,r)),typeof t.username==\"string\"&&(e.username=oe(t.username,r)),typeof t.password==\"string\"&&(e.password=ae(t.password,r)),typeof t.hostname==\"string\"&&(e.hostname=ie(t.hostname,r)),typeof t.port==\"string\"&&(e.port=le(t.port,e.protocol,r)),typeof t.pathname==\"string\"){if(e.pathname=t.pathname,n&&!ee(e.pathname,r)){let a=n.pathname.lastIndexOf(\"/\");a>=0&&(e.pathname=b(n.pathname.substring(0,a+1),r)+e.pathname)}e.pathname=ce(e.pathname,e.protocol,r)}return typeof t.search==\"string\"&&(e.search=se(t.search,r)),typeof t.hash==\"string\"&&(e.hash=ne(t.hash,r)),e}function C(e){return e.replace(/([+*?:{}()\\\\])/g,\"\\\\$1\")}function Le(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function Ie(e,t){t.delimiter??=\"/#?\",t.prefixes??=\"./\",t.sensitive??=!1,t.strict??=!1,t.end??=!0,t.start??=!0,t.endsWith=\"\";let r=\".*\",n=`[^${Le(t.delimiter)}]+?`,a=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,c=\"\";for(let l=0;l<e.length;++l){let s=e[l];if(s.type===3){if(s.modifier===3){c+=C(s.value);continue}c+=`{${C(s.value)}}${k(s.modifier)}`;continue}let i=s.hasCustomName(),o=!!s.suffix.length||!!s.prefix.length&&(s.prefix.length!==1||!t.prefixes.includes(s.prefix)),f=l>0?e[l-1]:null,d=l<e.length-1?e[l+1]:null;if(!o&&i&&s.type===1&&s.modifier===3&&d&&!d.prefix.length&&!d.suffix.length)if(d.type===3){let T=d.value.length>0?d.value[0]:\"\";o=a.test(T)}else o=!d.hasCustomName();if(!o&&!s.prefix.length&&f&&f.type===3){let T=f.value[f.value.length-1];o=t.prefixes.includes(T)}o&&(c+=\"{\"),c+=C(s.prefix),i&&(c+=`:${s.name}`),s.type===2?c+=`(${s.value})`:s.type===1?i||(c+=`(${n})`):s.type===0&&(!i&&(!f||f.type===3||f.modifier!==3||o||s.prefix!==\"\")?c+=\"*\":c+=`(${r})`),s.type===1&&i&&s.suffix.length&&a.test(s.suffix[0])&&(c+=\"\\\\\"),c+=C(s.suffix),o&&(c+=\"}\"),s.modifier!==3&&(c+=k(s.modifier))}return c}var Y=class{#i;#n={};#t={};#e={};#s={};#l=!1;constructor(t={},r,n){try{let a;if(typeof r==\"string\"?a=r:n=r,typeof t==\"string\"){let i=new H(t);if(i.parse(),t=i.result,a===void 0&&typeof t.protocol!=\"string\")throw new TypeError(\"A base URL must be provided for a relative constructor string.\");t.baseURL=a}else{if(!t||typeof t!=\"object\")throw new TypeError(\"parameter 1 is not of type 'string' and cannot convert to dictionary.\");if(a)throw new TypeError(\"parameter 1 is not of type 'string'.\")}typeof n>\"u\"&&(n={ignoreCase:!1});let c={ignoreCase:n.ignoreCase===!0},l={pathname:E,protocol:E,username:E,password:E,hostname:E,port:E,search:E,hash:E};this.#i=w(l,t,!0),z(this.#i.protocol)===this.#i.port&&(this.#i.port=\"\");let s;for(s of V){if(!(s in this.#i))continue;let i={},o=this.#i[s];switch(this.#t[s]=[],s){case\"protocol\":Object.assign(i,x),i.encodePart=y;break;case\"username\":Object.assign(i,x),i.encodePart=he;break;case\"password\":Object.assign(i,x),i.encodePart=ue;break;case\"hostname\":Object.assign(i,J),_(o)?i.encodePart=K:i.encodePart=j;break;case\"port\":Object.assign(i,x),i.encodePart=G;break;case\"pathname\":N(this.#n.protocol)?(Object.assign(i,Q,c),i.encodePart=de):(Object.assign(i,x,c),i.encodePart=pe);break;case\"search\":Object.assign(i,x,c),i.encodePart=ge;break;case\"hash\":Object.assign(i,x,c),i.encodePart=me;break}try{this.#s[s]=F(o,i),this.#n[s]=W(this.#s[s],this.#t[s],i),this.#e[s]=Ie(this.#s[s],i),this.#l=this.#l||this.#s[s].some(f=>f.type===2)}catch{throw new TypeError(`invalid ${s} pattern '${this.#i[s]}'.`)}}}catch(a){throw new TypeError(`Failed to construct 'URLPattern': ${a.message}`)}}test(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return!1;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return!1}let a;for(a of V)if(!this.#n[a].exec(n[a]))return!1;return!0}exec(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return null}let a={};r?a.inputs=[t,r]:a.inputs=[t];let c;for(c of V){let l=this.#n[c].exec(n[c]);if(!l)return null;let s={};for(let[i,o]of this.#t[c].entries())if(typeof o==\"string\"||typeof o==\"number\"){let f=l[i+1];s[o]=f}a[c]={input:n[c]??\"\",groups:s}}return a}static compareComponent(t,r,n){let a=(i,o)=>{for(let f of[\"type\",\"modifier\",\"prefix\",\"value\",\"suffix\"]){if(i[f]<o[f])return-1;if(i[f]===o[f])continue;return 1}return 0},c=new R(3,\"\",\"\",\"\",\"\",3),l=new R(0,\"\",\"\",\"\",\"\",3),s=(i,o)=>{let f=0;for(;f<Math.min(i.length,o.length);++f){let d=a(i[f],o[f]);if(d)return d}return i.length===o.length?0:a(i[f]??c,o[f]??c)};return!r.#e[t]&&!n.#e[t]?0:r.#e[t]&&!n.#e[t]?s(r.#s[t],[l]):!r.#e[t]&&n.#e[t]?s([l],n.#s[t]):s(r.#s[t],n.#s[t])}get protocol(){return this.#e.protocol}get username(){return this.#e.username}get password(){return this.#e.password}get hostname(){return this.#e.hostname}get port(){return this.#e.port}get pathname(){return this.#e.pathname}get search(){return this.#e.search}get hash(){return this.#e.hash}get hasRegExpGroups(){return this.#l}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/index.cjs":
/*!****************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/index.cjs ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { URLPattern } = __webpack_require__(/*! ./dist/urlpattern.cjs */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\");\n\nmodule.exports = { URLPattern };\n\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = URLPattern;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvdXJscGF0dGVybi1wb2x5ZmlsbC9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxhQUFhLEVBQUUsbUJBQU8sQ0FBQywrSEFBdUI7O0FBRXRELG1CQUFtQjs7QUFFbkI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy91cmxwYXR0ZXJuLXBvbHlmaWxsL2luZGV4LmNqcz9lY2U4Il0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVVJMUGF0dGVybiB9ID0gcmVxdWlyZShcIi4vZGlzdC91cmxwYXR0ZXJuLmNqc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7IFVSTFBhdHRlcm4gfTtcblxuaWYgKCFnbG9iYWxUaGlzLlVSTFBhdHRlcm4pIHtcbiAgZ2xvYmFsVGhpcy5VUkxQYXR0ZXJuID0gVVJMUGF0dGVybjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/urlpattern-polyfill/index.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return Buffer.from(blobPart);\n    }\n    else if (Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst busboy_1 = tslib_1.__importDefault(__webpack_require__(/*! busboy */ \"(ssr)/../node_modules/busboy/lib/index.js\"));\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            return (0, utils_js_1.fakePromise)([]);\n        }\n        this._chunks = [];\n        _body.readable.on('data', chunk => {\n            this._chunks.push(chunk);\n        });\n        return new Promise((resolve, reject) => {\n            _body.readable.once('end', () => {\n                resolve(this._chunks);\n            });\n            _body.readable.once('error', e => {\n                reject(e);\n            });\n        });\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        });\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const bb = (0, busboy_1.default)({\n                headers: {\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defParamCharset: 'utf-8',\n            });\n            bb.on('field', (name, value, { nameTruncated, valueTruncated }) => {\n                if (nameTruncated) {\n                    reject(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    reject(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('fieldsLimit', () => {\n                reject(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('file', (name, fileStream, { filename, mimeType }) => {\n                const chunks = [];\n                fileStream.on('limit', () => {\n                    reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('filesLimit', () => {\n                reject(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                reject(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('close', () => {\n                resolve(this._formData);\n            });\n            bb.on('error', (err = 'An error occurred while parsing the form data') => {\n                const errMessage = err.message || err.toString();\n                reject(new TypeError(errMessage, err.cause));\n            });\n            _body?.readable.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = Buffer.concat(chunks);\n            return this._buffer;\n        });\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const buffer = Buffer.from(bodyInit);\n        const contentLength = buffer.byteLength;\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (Buffer.isBuffer(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => bodyInit,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return bodyInit.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null;\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyxrSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Db21wcmVzc2lvblN0cmVhbS5qcz9hODk3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV96bGliXzEgPSByZXF1aXJlKFwibm9kZTp6bGliXCIpO1xuY29uc3QgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbENvbXByZXNzaW9uU3RyZWFtIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtX2pzXzEuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHN0YXRpYyBzdXBwb3J0ZWRGb3JtYXRzID0gZ2xvYmFsVGhpcy5wcm9jZXNzPy52ZXJzaW9uPy5zdGFydHNXaXRoKCd2MicpXG4gICAgICAgID8gWydnemlwJywgJ2RlZmxhdGUnLCAnYnInXVxuICAgICAgICA6IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2RlZmxhdGUtcmF3JywgJ2JyJ107XG4gICAgY29uc3RydWN0b3IoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgc3dpdGNoIChjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICAgICAgY2FzZSAneC1nemlwJzpcbiAgICAgICAgICAgIGNhc2UgJ2d6aXAnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVHemlwKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3gtZGVmbGF0ZSc6XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlRGVmbGF0ZSkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlLXJhdyc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZURlZmxhdGVSYXcpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYnInOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVCcm90bGlDb21wcmVzcykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgY29tcHJlc3Npb24gZm9ybWF0OiAke2NvbXByZXNzaW9uRm9ybWF0fWApO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtID0gUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLDZCQUE2QixtQkFBTyxDQUFDLGtJQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanM/ZjQyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV96bGliXzEgPSByZXF1aXJlKFwibm9kZTp6bGliXCIpO1xuY29uc3QgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgc3RhdGljIHN1cHBvcnRlZEZvcm1hdHMgPSBnbG9iYWxUaGlzLnByb2Nlc3M/LnZlcnNpb24/LnN0YXJ0c1dpdGgoJ3YyJylcbiAgICAgICAgPyBbJ2d6aXAnLCAnZGVmbGF0ZScsICdiciddXG4gICAgICAgIDogWydnemlwJywgJ2RlZmxhdGUnLCAnZGVmbGF0ZS1yYXcnLCAnYnInXTtcbiAgICBjb25zdHJ1Y3Rvcihjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICBzd2l0Y2ggKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlICd4LWd6aXAnOlxuICAgICAgICAgICAgY2FzZSAnZ3ppcCc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUd1bnppcCkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd4LWRlZmxhdGUnOlxuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZSc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUluZmxhdGUpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZS1yYXcnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVJbmZsYXRlUmF3KSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2JyJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlQnJvdGxpRGVjb21wcmVzcykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFVuc3VwcG9ydGVkIGNvbXByZXNzaW9uIGZvcm1hdDogJyR7Y29tcHJlc3Npb25Gb3JtYXR9J2ApO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gPSBQb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGtCQUFrQixtQkFBTyxDQUFDLDRHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRmlsZS5qcz8yYjljIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEZpbGUgPSB2b2lkIDA7XG5jb25zdCBCbG9iX2pzXzEgPSByZXF1aXJlKFwiLi9CbG9iLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxGaWxlIGV4dGVuZHMgQmxvYl9qc18xLlBvbnlmaWxsQmxvYiB7XG4gICAgbmFtZTtcbiAgICBsYXN0TW9kaWZpZWQ7XG4gICAgY29uc3RydWN0b3IoZmlsZUJpdHMsIG5hbWUsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoZmlsZUJpdHMsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmxhc3RNb2RpZmllZCA9IG9wdGlvbnM/Lmxhc3RNb2RpZmllZCB8fCBEYXRlLm5vdygpO1xuICAgIH1cbiAgICB3ZWJraXRSZWxhdGl2ZVBhdGggPSAnJztcbn1cbmV4cG9ydHMuUG9ueWZpbGxGaWxlID0gUG9ueWZpbGxGaWxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    *[Symbol.iterator]() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return this[Symbol.iterator]();\n    }\n    keys() {\n        return this.map.keys();\n    }\n    *values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    const entries = [];\n    let sentInitialHeader = false;\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: controller => {\n            formData.forEach((value, key) => {\n                if (!sentInitialHeader) {\n                    controller.enqueue(Buffer.from(`--${boundary}\\r\\n`));\n                    sentInitialHeader = true;\n                }\n                entries.push([key, value]);\n            });\n            if (!sentInitialHeader) {\n                controller.enqueue(Buffer.from(`--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n        pull: async (controller) => {\n            const entry = entries.shift();\n            if (entry) {\n                const [key, value] = entry;\n                if (typeof value === 'string') {\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                    controller.enqueue(Buffer.from(value));\n                }\n                else {\n                    let filenamePart = '';\n                    if (value.name) {\n                        filenamePart = `; filename=\"${value.name}\"`;\n                    }\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                    controller.enqueue(Buffer.from(`Content-Type: ${value.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                    const entryStream = value.stream();\n                    for await (const chunk of entryStream) {\n                        controller.enqueue(chunk);\n                    }\n                }\n                if (entries.length === 0) {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                    controller.close();\n                }\n                else {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n                }\n            }\n            else {\n                controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0Zvcm1EYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4Qiw2QkFBNkI7QUFDN0IsNEJBQTRCLG1CQUFPLENBQUMsZ0lBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esb0RBQW9ELFNBQVM7QUFDN0Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLFFBQVEsSUFBSTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFlBQVksV0FBVztBQUNqRTtBQUNBLG9GQUFvRixRQUFRLElBQUksR0FBRyxhQUFhO0FBQ2hILG9FQUFvRSx5Q0FBeUM7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Gb3JtRGF0YS5qcz9hN2U3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEZvcm1EYXRhID0gdm9pZCAwO1xuZXhwb3J0cy5nZXRTdHJlYW1Gcm9tRm9ybURhdGEgPSBnZXRTdHJlYW1Gcm9tRm9ybURhdGE7XG5jb25zdCBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbEZvcm1EYXRhIHtcbiAgICBtYXAgPSBuZXcgTWFwKCk7XG4gICAgYXBwZW5kKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSkge1xuICAgICAgICBsZXQgdmFsdWVzID0gdGhpcy5tYXAuZ2V0KG5hbWUpO1xuICAgICAgICBpZiAoIXZhbHVlcykge1xuICAgICAgICAgICAgdmFsdWVzID0gW107XG4gICAgICAgICAgICB0aGlzLm1hcC5zZXQobmFtZSwgdmFsdWVzKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbnRyeSA9IGlzQmxvYih2YWx1ZSlcbiAgICAgICAgICAgID8gZ2V0Tm9ybWFsaXplZEZpbGUobmFtZSwgdmFsdWUsIGZpbGVOYW1lKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICAgICAgdmFsdWVzLnB1c2goZW50cnkpO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICB0aGlzLm1hcC5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMubWFwLmdldChuYW1lKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlcyA/IHZhbHVlc1swXSA6IG51bGw7XG4gICAgfVxuICAgIGdldEFsbChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5nZXQobmFtZSkgfHwgW107XG4gICAgfVxuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5oYXMobmFtZSk7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSwgZmlsZU5hbWUpIHtcbiAgICAgICAgY29uc3QgZW50cnkgPSBpc0Jsb2IodmFsdWUpXG4gICAgICAgICAgICA/IGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgICAgIHRoaXMubWFwLnNldChuYW1lLCBbZW50cnldKTtcbiAgICB9XG4gICAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlc10gb2YgdGhpcy5tYXApIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgW2tleSwgdmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVudHJpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICB9XG4gICAga2V5cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmtleXMoKTtcbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZXMgb2YgdGhpcy5tYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yRWFjaChjYWxsYmFjaykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0aGlzKSB7XG4gICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxGb3JtRGF0YSA9IFBvbnlmaWxsRm9ybURhdGE7XG5mdW5jdGlvbiBnZXRTdHJlYW1Gcm9tRm9ybURhdGEoZm9ybURhdGEsIGJvdW5kYXJ5ID0gJy0tLScpIHtcbiAgICBjb25zdCBlbnRyaWVzID0gW107XG4gICAgbGV0IHNlbnRJbml0aWFsSGVhZGVyID0gZmFsc2U7XG4gICAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICBzdGFydDogY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBmb3JtRGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFzZW50SW5pdGlhbEhlYWRlcikge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYC0tJHtib3VuZGFyeX1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIHNlbnRJbml0aWFsSGVhZGVyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZW50cmllcy5wdXNoKFtrZXksIHZhbHVlXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghc2VudEluaXRpYWxIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYC0tJHtib3VuZGFyeX0tLVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHB1bGw6IGFzeW5jIChjb250cm9sbGVyKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbnRyeSA9IGVudHJpZXMuc2hpZnQoKTtcbiAgICAgICAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IGVudHJ5O1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtrZXl9XCJcXHJcXG5cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZpbGVuYW1lUGFydCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWVQYXJ0ID0gYDsgZmlsZW5hbWU9XCIke3ZhbHVlLm5hbWV9XCJgO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtrZXl9XCIke2ZpbGVuYW1lUGFydH1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1UeXBlOiAke3ZhbHVlLnR5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSd9XFxyXFxuXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnRyeVN0cmVhbSA9IHZhbHVlLnN0cmVhbSgpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIGVudHJ5U3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoY2h1bmspO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlbnRyaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYFxcclxcbi0tJHtib3VuZGFyeX0tLVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBcXHJcXG4tLSR7Ym91bmRhcnl9XFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgXFxyXFxuLS0ke2JvdW5kYXJ5fS0tXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIGJsb2IsIGZpbGVOYW1lKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGJsb2IsICduYW1lJywge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBmaWxlTmFtZSB8fCBibG9iLm5hbWUgfHwgbmFtZSxcbiAgICB9KTtcbiAgICByZXR1cm4gYmxvYjtcbn1cbmZ1bmN0aW9uIGlzQmxvYih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uYXJyYXlCdWZmZXIgIT0gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies = [];\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie') {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            return this.headersInit.find(header => header[0].toLowerCase() === normalized)?.[1] || null;\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach(([key, value]) => {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(normalizedKey, value);\n                    });\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    has(name) {\n        if (name === 'set-cookie') {\n            return this._setCookies.length > 0;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *keys() {\n        if (this._setCookies.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    *values() {\n        yield* this._setCookies;\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    *entries() {\n        yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    getSetCookie() {\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies;\n            }\n            else {\n                record[key] = value.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0hlYWRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLHFCQUFxQjtBQUNyQixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWMsSUFBSSxNQUFNO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwwQkFBMEIsNEJBQTRCO0FBQ3REO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9IZWFkZXJzLmpzPzcyMDQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsSGVhZGVycyA9IHZvaWQgMDtcbmV4cG9ydHMuaXNIZWFkZXJzTGlrZSA9IGlzSGVhZGVyc0xpa2U7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwidXRpbFwiKTtcbmZ1bmN0aW9uIGlzSGVhZGVyc0xpa2UoaGVhZGVycykge1xuICAgIHJldHVybiBoZWFkZXJzPy5nZXQgJiYgaGVhZGVycz8uZm9yRWFjaDtcbn1cbmNsYXNzIFBvbnlmaWxsSGVhZGVycyB7XG4gICAgaGVhZGVyc0luaXQ7XG4gICAgX21hcDtcbiAgICBvYmplY3ROb3JtYWxpemVkS2V5c09mSGVhZGVyc0luaXQgPSBbXTtcbiAgICBvYmplY3RPcmlnaW5hbEtleXNPZkhlYWRlcnNJbml0ID0gW107XG4gICAgX3NldENvb2tpZXMgPSBbXTtcbiAgICBjb25zdHJ1Y3RvcihoZWFkZXJzSW5pdCkge1xuICAgICAgICB0aGlzLmhlYWRlcnNJbml0ID0gaGVhZGVyc0luaXQ7XG4gICAgfVxuICAgIC8vIHBlcmY6IHdlIGRvbid0IG5lZWQgdG8gYnVpbGQgYHRoaXMubWFwYCBmb3IgUmVxdWVzdHMsIGFzIHdlIGNhbiBhY2Nlc3MgdGhlIGhlYWRlcnMgZGlyZWN0bHlcbiAgICBfZ2V0KGtleSkge1xuICAgICAgICBjb25zdCBub3JtYWxpemVkID0ga2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChub3JtYWxpemVkID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zZXRDb29raWVzLmpvaW4oJywgJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlIG1hcCBpcyBidWlsdCwgcmV1c2UgaXRcbiAgICAgICAgaWYgKHRoaXMuX21hcCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21hcC5nZXQobm9ybWFsaXplZCkgfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGUgbWFwIGlzIG5vdCBidWlsdCwgdHJ5IHRvIGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgdGhpcy5oZWFkZXJzSW5pdFxuICAgICAgICBpZiAodGhpcy5oZWFkZXJzSW5pdCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc0luaXQuZmluZChoZWFkZXIgPT4gaGVhZGVyWzBdLnRvTG93ZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWQpPy5bMV0gfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc0hlYWRlcnNMaWtlKHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzSW5pdC5nZXQobm9ybWFsaXplZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBpbml0VmFsdWUgPSB0aGlzLmhlYWRlcnNJbml0W2tleV0gfHwgdGhpcy5oZWFkZXJzSW5pdFtub3JtYWxpemVkXTtcbiAgICAgICAgICAgIGlmIChpbml0VmFsdWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpbml0VmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRoaXMub2JqZWN0Tm9ybWFsaXplZEtleXNPZkhlYWRlcnNJbml0Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVyc0luaXQpLmZvckVhY2goayA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub2JqZWN0T3JpZ2luYWxLZXlzT2ZIZWFkZXJzSW5pdC5wdXNoKGspO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9iamVjdE5vcm1hbGl6ZWRLZXlzT2ZIZWFkZXJzSW5pdC5wdXNoKGsudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMub2JqZWN0Tm9ybWFsaXplZEtleXNPZkhlYWRlcnNJbml0LmluZGV4T2Yobm9ybWFsaXplZCk7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbEtleSA9IHRoaXMub2JqZWN0T3JpZ2luYWxLZXlzT2ZIZWFkZXJzSW5pdFtpbmRleF07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzSW5pdFtvcmlnaW5hbEtleV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gcGVyZjogQnVpbGQgdGhlIG1hcCBvZiBoZWFkZXJzIGxhemlseSwgb25seSB3aGVuIHdlIG5lZWQgdG8gYWNjZXNzIGFsbCBoZWFkZXJzIG9yIHdyaXRlIHRvIGl0LlxuICAgIC8vIEkgY291bGQgZG8gYSBnZXR0ZXIgaGVyZSwgYnV0IEknbSB0b28gbGF6eSB0byB0eXBlIGBnZXR0ZXJgLlxuICAgIGdldE1hcCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9tYXApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmhlYWRlcnNJbml0ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVhZGVyc0luaXQuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBub3JtYWxpemVkS2V5ID0ga2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9ybWFsaXplZEtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fc2V0Q29va2llcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAuc2V0KG5vcm1hbGl6ZWRLZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlzSGVhZGVyc0xpa2UodGhpcy5oZWFkZXJzSW5pdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFwID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhlYWRlcnNJbml0LmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3NldENvb2tpZXMucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFwLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaW5pdEtleSBpbiB0aGlzLmhlYWRlcnNJbml0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpbml0VmFsdWUgPSB0aGlzLmhlYWRlcnNJbml0W2luaXRLZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluaXRWYWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm9ybWFsaXplZEtleSA9IGluaXRLZXkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9ybWFsaXplZEtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3NldENvb2tpZXMucHVzaChpbml0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFwLnNldChub3JtYWxpemVkS2V5LCBpbml0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWFwID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9tYXA7XG4gICAgfVxuICAgIGFwcGVuZChuYW1lLCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBrZXkgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICAgICAgdGhpcy5fc2V0Q29va2llcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBleGlzdGluZ1ZhbHVlID0gdGhpcy5nZXRNYXAoKS5nZXQoa2V5KTtcbiAgICAgICAgY29uc3QgZmluYWxWYWx1ZSA9IGV4aXN0aW5nVmFsdWUgPyBgJHtleGlzdGluZ1ZhbHVlfSwgJHt2YWx1ZX1gIDogdmFsdWU7XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuc2V0KGtleSwgZmluYWxWYWx1ZSk7XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5fZ2V0KG5hbWUpO1xuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBoYXMobmFtZSkge1xuICAgICAgICBpZiAobmFtZSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2V0Q29va2llcy5sZW5ndGggPiAwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAhIXRoaXMuX2dldChuYW1lKTsgLy8gd2UgbWlnaHQgbmVlZCB0byBjaGVjayBpZiBoZWFkZXIgZXhpc3RzIGFuZCBub3QganVzdCBjaGVjayBpZiBpdCdzIG5vdCBudWxsYWJsZVxuICAgIH1cbiAgICBzZXQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldENvb2tpZXMgPSBbdmFsdWVdO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuc2V0KGtleSwgdmFsdWUpO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICBjb25zdCBrZXkgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICAgICAgdGhpcy5fc2V0Q29va2llcyA9IFtdO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuZGVsZXRlKGtleSk7XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fc2V0Q29va2llcy5mb3JFYWNoKHNldENvb2tpZSA9PiB7XG4gICAgICAgICAgICBjYWxsYmFjayhzZXRDb29raWUsICdzZXQtY29va2llJywgdGhpcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXRoaXMuX21hcCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaGVhZGVyc0luaXQpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhlYWRlcnNJbml0LmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpc0hlYWRlcnNMaWtlKHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVhZGVyc0luaXQuZm9yRWFjaChjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgT2JqZWN0LmVudHJpZXModGhpcy5oZWFkZXJzSW5pdCkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAqa2V5cygpIHtcbiAgICAgICAgaWYgKHRoaXMuX3NldENvb2tpZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB5aWVsZCAnc2V0LWNvb2tpZSc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLl9tYXApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmhlYWRlcnNJbml0KSB7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGhpcy5oZWFkZXJzSW5pdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQqIHRoaXMuaGVhZGVyc0luaXQubWFwKChba2V5XSkgPT4ga2V5KVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGlzSGVhZGVyc0xpa2UodGhpcy5oZWFkZXJzSW5pdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQqIHRoaXMuaGVhZGVyc0luaXQua2V5cygpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHlpZWxkKiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnNJbml0KVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHlpZWxkKiB0aGlzLmdldE1hcCgpLmtleXMoKTtcbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgeWllbGQqIHRoaXMuX3NldENvb2tpZXM7XG4gICAgICAgIGlmICghdGhpcy5fbWFwKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5oZWFkZXJzSW5pdCkge1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkKiB0aGlzLmhlYWRlcnNJbml0Lm1hcCgoWywgdmFsdWVdKSA9PiB2YWx1ZSlbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpc0hlYWRlcnNMaWtlKHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkKiB0aGlzLmhlYWRlcnNJbml0LnZhbHVlcygpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHlpZWxkKiBPYmplY3QudmFsdWVzKHRoaXMuaGVhZGVyc0luaXQpW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgeWllbGQqIHRoaXMuZ2V0TWFwKCkudmFsdWVzKCk7XG4gICAgfVxuICAgICplbnRyaWVzKCkge1xuICAgICAgICB5aWVsZCogdGhpcy5fc2V0Q29va2llcy5tYXAoY29va2llID0+IFsnc2V0LWNvb2tpZScsIGNvb2tpZV0pO1xuICAgICAgICBpZiAoIXRoaXMuX21hcCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaGVhZGVyc0luaXQpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCogdGhpcy5oZWFkZXJzSW5pdDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaXNIZWFkZXJzTGlrZSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCogdGhpcy5oZWFkZXJzSW5pdC5lbnRyaWVzKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgeWllbGQqIE9iamVjdC5lbnRyaWVzKHRoaXMuaGVhZGVyc0luaXQpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB5aWVsZCogdGhpcy5nZXRNYXAoKS5lbnRyaWVzKCk7XG4gICAgfVxuICAgIGdldFNldENvb2tpZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NldENvb2tpZXM7XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbnRyaWVzKCk7XG4gICAgfVxuICAgIFtTeW1ib2wuZm9yKCdub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbScpXSgpIHtcbiAgICAgICAgY29uc3QgcmVjb3JkID0ge307XG4gICAgICAgIHRoaXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICAgICAgcmVjb3JkWydzZXQtY29va2llJ10gPSB0aGlzLl9zZXRDb29raWVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVjb3JkW2tleV0gPSB2YWx1ZS5pbmNsdWRlcygnLCcpID8gdmFsdWUuc3BsaXQoJywnKS5tYXAoZWwgPT4gZWwudHJpbSgpKSA6IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGBIZWFkZXJzICR7KDAsIHV0aWxfMS5pbnNwZWN0KShyZWNvcmQpfWA7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbEhlYWRlcnMgPSBQb255ZmlsbEhlYWRlcnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            this.readable = new stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return Promise.resolve().then(async () => {\n                        if (!started) {\n                            const controller = createController(desiredSize, this);\n                            started = true;\n                            await underlyingSource?.start?.(controller);\n                            controller._flush();\n                            if (controller._closed) {\n                                return;\n                            }\n                        }\n                        const controller = createController(desiredSize, this);\n                        await underlyingSource?.pull?.(controller);\n                        controller._flush();\n                        ongoing = false;\n                    });\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        return new Promise(resolve => this.readable.once('end', resolve));\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)(undefined);\n            },\n            closed: new Promise((resolve, reject) => {\n                this.readable.once('end', resolve);\n                this.readable.once('error', reject);\n            }),\n        };\n    }\n    [Symbol.asyncIterator]() {\n        return this.readable[Symbol.asyncIterator]();\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return new Promise((resolve, reject) => {\n                this.readable.pipe(destination.writable);\n                destination.writable.once('finish', resolve);\n                destination.writable.once('error', reject);\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return Promise.resolve().then(async () => {\n                try {\n                    for await (const chunk of this) {\n                        await writer.write(chunk);\n                    }\n                    await writer.close();\n                }\n                catch (err) {\n                    await writer.abort(err);\n                }\n            });\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable);\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let url;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            url = input;\n        }\n        else if (isURL(input)) {\n            url = input.toString();\n        }\n        else if (isRequest(input)) {\n            url = input.url;\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, options);\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this._signal = requestInit?.signal;\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.url = url || '';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (this.url.startsWith('http:/') && requestInit.agent instanceof http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (this.url.startsWith('https:/') && requestInit.agent instanceof https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    url;\n    duplex;\n    agent;\n    _signal;\n    get signal() {\n        // Create a new signal only if needed\n        // Because the creation of signal is expensive\n        if (!this._signal) {\n            this._signal = new AbortController().signal;\n        }\n        return this._signal;\n    }\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQyw0R0FBVztBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyxrSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanM/ZTliOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxSZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcImh0dHBcIik7XG5jb25zdCBodHRwc18xID0gcmVxdWlyZShcImh0dHBzXCIpO1xuY29uc3QgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbmNvbnN0IEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5mdW5jdGlvbiBpc1JlcXVlc3QoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXRbU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ1JlcXVlc3QnO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uaHJlZiAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxSZXF1ZXN0IGV4dGVuZHMgQm9keV9qc18xLlBvbnlmaWxsQm9keSB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IHVybDtcbiAgICAgICAgbGV0IGJvZHlJbml0ID0gbnVsbDtcbiAgICAgICAgbGV0IHJlcXVlc3RJbml0O1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdXJsID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNVUkwoaW5wdXQpKSB7XG4gICAgICAgICAgICB1cmwgPSBpbnB1dC50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzUmVxdWVzdChpbnB1dCkpIHtcbiAgICAgICAgICAgIHVybCA9IGlucHV0LnVybDtcbiAgICAgICAgICAgIGJvZHlJbml0ID0gaW5wdXQuYm9keTtcbiAgICAgICAgICAgIHJlcXVlc3RJbml0ID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgIT0gbnVsbCkge1xuICAgICAgICAgICAgYm9keUluaXQgPSBvcHRpb25zLmJvZHkgfHwgbnVsbDtcbiAgICAgICAgICAgIHJlcXVlc3RJbml0ID0gb3B0aW9ucztcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihib2R5SW5pdCwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY2FjaGUgPSByZXF1ZXN0SW5pdD8uY2FjaGUgfHwgJ2RlZmF1bHQnO1xuICAgICAgICB0aGlzLmNyZWRlbnRpYWxzID0gcmVxdWVzdEluaXQ/LmNyZWRlbnRpYWxzIHx8ICdzYW1lLW9yaWdpbic7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9XG4gICAgICAgICAgICByZXF1ZXN0SW5pdD8uaGVhZGVycyAmJiAoMCwgSGVhZGVyc19qc18xLmlzSGVhZGVyc0xpa2UpKHJlcXVlc3RJbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyByZXF1ZXN0SW5pdC5oZWFkZXJzXG4gICAgICAgICAgICAgICAgOiBuZXcgSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVycyhyZXF1ZXN0SW5pdD8uaGVhZGVycyk7XG4gICAgICAgIHRoaXMuaW50ZWdyaXR5ID0gcmVxdWVzdEluaXQ/LmludGVncml0eSB8fCAnJztcbiAgICAgICAgdGhpcy5rZWVwYWxpdmUgPSByZXF1ZXN0SW5pdD8ua2VlcGFsaXZlICE9IG51bGwgPyByZXF1ZXN0SW5pdD8ua2VlcGFsaXZlIDogZmFsc2U7XG4gICAgICAgIHRoaXMubWV0aG9kID0gcmVxdWVzdEluaXQ/Lm1ldGhvZD8udG9VcHBlckNhc2UoKSB8fCAnR0VUJztcbiAgICAgICAgdGhpcy5tb2RlID0gcmVxdWVzdEluaXQ/Lm1vZGUgfHwgJ2NvcnMnO1xuICAgICAgICB0aGlzLnJlZGlyZWN0ID0gcmVxdWVzdEluaXQ/LnJlZGlyZWN0IHx8ICdmb2xsb3cnO1xuICAgICAgICB0aGlzLnJlZmVycmVyID0gcmVxdWVzdEluaXQ/LnJlZmVycmVyIHx8ICdhYm91dDpjbGllbnQnO1xuICAgICAgICB0aGlzLnJlZmVycmVyUG9saWN5ID0gcmVxdWVzdEluaXQ/LnJlZmVycmVyUG9saWN5IHx8ICduby1yZWZlcnJlcic7XG4gICAgICAgIHRoaXMuX3NpZ25hbCA9IHJlcXVlc3RJbml0Py5zaWduYWw7XG4gICAgICAgIHRoaXMuaGVhZGVyc1NlcmlhbGl6ZXIgPSByZXF1ZXN0SW5pdD8uaGVhZGVyc1NlcmlhbGl6ZXI7XG4gICAgICAgIHRoaXMuZHVwbGV4ID0gcmVxdWVzdEluaXQ/LmR1cGxleCB8fCAnaGFsZic7XG4gICAgICAgIHRoaXMudXJsID0gdXJsIHx8ICcnO1xuICAgICAgICB0aGlzLmRlc3RpbmF0aW9uID0gJ2RvY3VtZW50JztcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9ICdhdXRvJztcbiAgICAgICAgaWYgKHRoaXMubWV0aG9kICE9PSAnR0VUJyAmJiB0aGlzLm1ldGhvZCAhPT0gJ0hFQUQnKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUNvbnRlbnRMZW5ndGhIZWFkZXIodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcXVlc3RJbml0Py5hZ2VudCAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAocmVxdWVzdEluaXQuYWdlbnQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy51cmwuc3RhcnRzV2l0aCgnaHR0cDovJykgJiYgcmVxdWVzdEluaXQuYWdlbnQgaW5zdGFuY2VvZiBodHRwXzEuQWdlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gcmVxdWVzdEluaXQuYWdlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnVybC5zdGFydHNXaXRoKCdodHRwczovJykgJiYgcmVxdWVzdEluaXQuYWdlbnQgaW5zdGFuY2VvZiBodHRwc18xLkFnZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IHJlcXVlc3RJbml0LmFnZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGhlYWRlcnNTZXJpYWxpemVyO1xuICAgIGNhY2hlO1xuICAgIGNyZWRlbnRpYWxzO1xuICAgIGRlc3RpbmF0aW9uO1xuICAgIGhlYWRlcnM7XG4gICAgaW50ZWdyaXR5O1xuICAgIGtlZXBhbGl2ZTtcbiAgICBtZXRob2Q7XG4gICAgbW9kZTtcbiAgICBwcmlvcml0eTtcbiAgICByZWRpcmVjdDtcbiAgICByZWZlcnJlcjtcbiAgICByZWZlcnJlclBvbGljeTtcbiAgICB1cmw7XG4gICAgZHVwbGV4O1xuICAgIGFnZW50O1xuICAgIF9zaWduYWw7XG4gICAgZ2V0IHNpZ25hbCgpIHtcbiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IHNpZ25hbCBvbmx5IGlmIG5lZWRlZFxuICAgICAgICAvLyBCZWNhdXNlIHRoZSBjcmVhdGlvbiBvZiBzaWduYWwgaXMgZXhwZW5zaXZlXG4gICAgICAgIGlmICghdGhpcy5fc2lnbmFsKSB7XG4gICAgICAgICAgICB0aGlzLl9zaWduYWwgPSBuZXcgQWJvcnRDb250cm9sbGVyKCkuc2lnbmFsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9zaWduYWw7XG4gICAgfVxuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnUmVxdWVzdCc7XG59XG5leHBvcnRzLlBvbnlmaWxsUmVxdWVzdCA9IFBvbnlmaWxsUmVxdWVzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init = {}) {\n        init.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        if (!init.headers.has('content-type')) {\n            init.headers.set('content-type', JSON_CONTENT_TYPE);\n        }\n        return new PonyfillResponse(JSON.stringify(data), init);\n    }\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsNEdBQVc7QUFDckMscUJBQXFCLG1CQUFPLENBQUMsa0hBQWM7QUFDM0MsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvUmVzcG9uc2UuanM/YzhhMiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxSZXNwb25zZSA9IHZvaWQgMDtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCJodHRwXCIpO1xuY29uc3QgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbmNvbnN0IEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5jb25zdCBKU09OX0NPTlRFTlRfVFlQRSA9ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JztcbmNsYXNzIFBvbnlmaWxsUmVzcG9uc2UgZXh0ZW5kcyBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5IHtcbiAgICBoZWFkZXJzO1xuICAgIGNvbnN0cnVjdG9yKGJvZHksIGluaXQpIHtcbiAgICAgICAgc3VwZXIoYm9keSB8fCBudWxsLCBpbml0KTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIGluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyBpbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IGluaXQ/LnN0YXR1cyB8fCAyMDA7XG4gICAgICAgIHRoaXMuc3RhdHVzVGV4dCA9IGluaXQ/LnN0YXR1c1RleHQgfHwgaHR0cF8xLlNUQVRVU19DT0RFU1t0aGlzLnN0YXR1c10gfHwgJ09LJztcbiAgICAgICAgdGhpcy51cmwgPSBpbml0Py51cmwgfHwgJyc7XG4gICAgICAgIHRoaXMucmVkaXJlY3RlZCA9IGluaXQ/LnJlZGlyZWN0ZWQgfHwgZmFsc2U7XG4gICAgICAgIHRoaXMudHlwZSA9IGluaXQ/LnR5cGUgfHwgJ2RlZmF1bHQnO1xuICAgICAgICB0aGlzLmhhbmRsZUNvbnRlbnRMZW5ndGhIZWFkZXIoKTtcbiAgICB9XG4gICAgZ2V0IG9rKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0dXMgPj0gMjAwICYmIHRoaXMuc3RhdHVzIDwgMzAwO1xuICAgIH1cbiAgICBzdGF0dXM7XG4gICAgc3RhdHVzVGV4dDtcbiAgICB1cmw7XG4gICAgcmVkaXJlY3RlZDtcbiAgICB0eXBlO1xuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc3RhdGljIGVycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyByZWRpcmVjdCh1cmwsIHN0YXR1cyA9IDMwMikge1xuICAgICAgICBpZiAoc3RhdHVzIDwgMzAwIHx8IHN0YXR1cyA+IDM5OSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ludmFsaWQgc3RhdHVzIGNvZGUnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiB1cmwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGpzb24oZGF0YSwgaW5pdCA9IHt9KSB7XG4gICAgICAgIGluaXQuaGVhZGVycyA9XG4gICAgICAgICAgICBpbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkoaW5pdC5oZWFkZXJzKVxuICAgICAgICAgICAgICAgID8gaW5pdC5oZWFkZXJzXG4gICAgICAgICAgICAgICAgOiBuZXcgSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVycyhpbml0Py5oZWFkZXJzKTtcbiAgICAgICAgaWYgKCFpbml0LmhlYWRlcnMuaGFzKCdjb250ZW50LXR5cGUnKSkge1xuICAgICAgICAgICAgaW5pdC5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgSlNPTl9DT05URU5UX1RZUEUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShKU09OLnN0cmluZ2lmeShkYXRhKSwgaW5pdCk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFJlc3BvbnNlID0gUG9ueWZpbGxSZXNwb25zZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQkFBMkI7QUFDekQsb0JBQW9CO0FBQ3BCLG1CQUFtQixtQkFBTyxDQUFDLDhHQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcz9lMjg2Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyID0gZXhwb3J0cy5Qb255ZmlsbFRleHRFbmNvZGVyID0gdm9pZCAwO1xuZXhwb3J0cy5Qb255ZmlsbEJ0b2EgPSBQb255ZmlsbEJ0b2E7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jbGFzcyBQb255ZmlsbFRleHRFbmNvZGVyIHtcbiAgICBlbmNvZGluZztcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZyA9ICd1dGYtOCcpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICAgIH1cbiAgICBlbmNvZGUoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LCB0aGlzLmVuY29kaW5nKTtcbiAgICB9XG4gICAgZW5jb2RlSW50byhzb3VyY2UsIGRlc3RpbmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IHRoaXMuZW5jb2RlKHNvdXJjZSk7XG4gICAgICAgIGNvbnN0IGNvcGllZCA9IGJ1ZmZlci5jb3B5KGRlc3RpbmF0aW9uKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlYWQ6IGNvcGllZCxcbiAgICAgICAgICAgIHdyaXR0ZW46IGNvcGllZCxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXIgPSBQb255ZmlsbFRleHRFbmNvZGVyO1xuY2xhc3MgUG9ueWZpbGxUZXh0RGVjb2RlciB7XG4gICAgZW5jb2Rpbmc7XG4gICAgZmF0YWwgPSBmYWxzZTtcbiAgICBpZ25vcmVCT00gPSBmYWxzZTtcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZyA9ICd1dGYtOCcsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICAgICAgICBpZiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5mYXRhbCA9IG9wdGlvbnMuZmF0YWwgfHwgZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmlnbm9yZUJPTSA9IG9wdGlvbnMuaWdub3JlQk9NIHx8IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlY29kZShpbnB1dCkge1xuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGlucHV0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0LnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc0FycmF5QnVmZmVyVmlldykoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQuYnVmZmVyLCBpbnB1dC5ieXRlT2Zmc2V0LCBpbnB1dC5ieXRlTGVuZ3RoKS50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUZXh0RGVjb2RlciA9IFBvbnlmaWxsVGV4dERlY29kZXI7XG5mdW5jdGlvbiBQb255ZmlsbEJ0b2EoaW5wdXQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQsICdiaW5hcnknKS50b1N0cmluZygnYmFzZTY0Jyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    transform.end();\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsZ0lBQXFCO0FBQ3pELDRCQUE0QixtQkFBTyxDQUFDLGdJQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVHJhbnNmb3JtU3RyZWFtLmpzPzQ2ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV9zdHJlYW1fMSA9IHJlcXVpcmUoXCJub2RlOnN0cmVhbVwiKTtcbmNvbnN0IFJlYWRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9SZWFkYWJsZVN0cmVhbS5qc1wiKTtcbmNvbnN0IFdyaXRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9Xcml0YWJsZVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICB0cmFuc2Zvcm07XG4gICAgd3JpdGFibGU7XG4gICAgcmVhZGFibGU7XG4gICAgY29uc3RydWN0b3IodHJhbnNmb3JtZXIpIHtcbiAgICAgICAgaWYgKHRyYW5zZm9ybWVyIGluc3RhbmNlb2Ygbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0pIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHJhbnNmb3JtZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRyb2xsZXIgPSB7XG4gICAgICAgICAgICAgICAgZW5xdWV1ZShjaHVuaykge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0ucHVzaChjaHVuayk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvcihyZWFzb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLmRlc3Ryb3kocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRlcm1pbmF0ZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLmVuZCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGRlc2lyZWRTaXplKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLndyaXRhYmxlTGVuZ3RoO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gbmV3IG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKHtcbiAgICAgICAgICAgICAgICByZWFkKCkgeyB9LFxuICAgICAgICAgICAgICAgIHdyaXRlKGNodW5rLCBfZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0cmFuc2Zvcm1lci50cmFuc2Zvcm0/LihjaHVuaywgY29udHJvbGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmaW5hbChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdHJhbnNmb3JtZXIuZmx1c2g/Lihjb250cm9sbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gbmV3IG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy53cml0YWJsZSA9IG5ldyBXcml0YWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsV3JpdGFibGVTdHJlYW0odGhpcy50cmFuc2Zvcm0pO1xuICAgICAgICB0aGlzLnJlYWRhYmxlID0gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSA9IFBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nconst fast_url_parser_1 = tslib_1.__importDefault(__webpack_require__(/*! @kamilkisiela/fast-url-parser */ \"(ssr)/../node_modules/@kamilkisiela/fast-url-parser/src/urlparser.js\"));\nconst URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nfast_url_parser_1.default.queryString = fast_querystring_1.default;\nclass PonyfillURL extends fast_url_parser_1.default {\n    constructor(url, base) {\n        super();\n        if (url.startsWith('data:')) {\n            this.protocol = 'data:';\n            this.pathname = url.slice('data:'.length);\n            return;\n        }\n        this.parse(url, false);\n        if (base) {\n            const baseParsed = typeof base === 'string' ? new PonyfillURL(base) : base;\n            this.protocol = this.protocol || baseParsed.protocol;\n            this.host = this.host || baseParsed.host;\n            this.pathname = this.pathname || baseParsed.pathname;\n        }\n    }\n    get origin() {\n        return `${this.protocol}//${this.host}`;\n    }\n    _searchParams;\n    get searchParams() {\n        if (!this._searchParams) {\n            this._searchParams = new URLSearchParams_js_1.PonyfillURLSearchParams(this.query);\n        }\n        return this._searchParams;\n    }\n    get username() {\n        return this.auth?.split(':')[0] || '';\n    }\n    set username(value) {\n        this.auth = `${value}:${this.password}`;\n    }\n    get password() {\n        return this.auth?.split(':')[1] || '';\n    }\n    set password(value) {\n        this.auth = `${this.username}:${value}`;\n    }\n    toString() {\n        return this.format();\n    }\n    toJSON() {\n        return this.toString();\n    }\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static resolveObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            URL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || (0, buffer_1.resolveObjectURL)(url));\n    }\n}\nexports.PonyfillURL = PonyfillURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsbURBQW1ELG1CQUFPLENBQUMsNkVBQWtCO0FBQzdFLGtEQUFrRCxtQkFBTyxDQUFDLDJHQUErQjtBQUN6Riw2QkFBNkIsbUJBQU8sQ0FBQyxrSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWMsSUFBSSxVQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixNQUFNLEdBQUcsY0FBYztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGNBQWMsR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywyQkFBMkI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVVJMLmpzP2ZkNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVVJMID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IGZhc3RfcXVlcnlzdHJpbmdfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJmYXN0LXF1ZXJ5c3RyaW5nXCIpKTtcbmNvbnN0IGZhc3RfdXJsX3BhcnNlcl8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIkBrYW1pbGtpc2llbGEvZmFzdC11cmwtcGFyc2VyXCIpKTtcbmNvbnN0IFVSTFNlYXJjaFBhcmFtc19qc18xID0gcmVxdWlyZShcIi4vVVJMU2VhcmNoUGFyYW1zLmpzXCIpO1xuZmFzdF91cmxfcGFyc2VyXzEuZGVmYXVsdC5xdWVyeVN0cmluZyA9IGZhc3RfcXVlcnlzdHJpbmdfMS5kZWZhdWx0O1xuY2xhc3MgUG9ueWZpbGxVUkwgZXh0ZW5kcyBmYXN0X3VybF9wYXJzZXJfMS5kZWZhdWx0IHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIGJhc2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHVybC5zdGFydHNXaXRoKCdkYXRhOicpKSB7XG4gICAgICAgICAgICB0aGlzLnByb3RvY29sID0gJ2RhdGE6JztcbiAgICAgICAgICAgIHRoaXMucGF0aG5hbWUgPSB1cmwuc2xpY2UoJ2RhdGE6Jy5sZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFyc2UodXJsLCBmYWxzZSk7XG4gICAgICAgIGlmIChiYXNlKSB7XG4gICAgICAgICAgICBjb25zdCBiYXNlUGFyc2VkID0gdHlwZW9mIGJhc2UgPT09ICdzdHJpbmcnID8gbmV3IFBvbnlmaWxsVVJMKGJhc2UpIDogYmFzZTtcbiAgICAgICAgICAgIHRoaXMucHJvdG9jb2wgPSB0aGlzLnByb3RvY29sIHx8IGJhc2VQYXJzZWQucHJvdG9jb2w7XG4gICAgICAgICAgICB0aGlzLmhvc3QgPSB0aGlzLmhvc3QgfHwgYmFzZVBhcnNlZC5ob3N0O1xuICAgICAgICAgICAgdGhpcy5wYXRobmFtZSA9IHRoaXMucGF0aG5hbWUgfHwgYmFzZVBhcnNlZC5wYXRobmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgb3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5wcm90b2NvbH0vLyR7dGhpcy5ob3N0fWA7XG4gICAgfVxuICAgIF9zZWFyY2hQYXJhbXM7XG4gICAgZ2V0IHNlYXJjaFBhcmFtcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9zZWFyY2hQYXJhbXMpIHtcbiAgICAgICAgICAgIHRoaXMuX3NlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXNfanNfMS5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyh0aGlzLnF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fc2VhcmNoUGFyYW1zO1xuICAgIH1cbiAgICBnZXQgdXNlcm5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF1dGg/LnNwbGl0KCc6JylbMF0gfHwgJyc7XG4gICAgfVxuICAgIHNldCB1c2VybmFtZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLmF1dGggPSBgJHt2YWx1ZX06JHt0aGlzLnBhc3N3b3JkfWA7XG4gICAgfVxuICAgIGdldCBwYXNzd29yZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aD8uc3BsaXQoJzonKVsxXSB8fCAnJztcbiAgICB9XG4gICAgc2V0IHBhc3N3b3JkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYXV0aCA9IGAke3RoaXMudXNlcm5hbWV9OiR7dmFsdWV9YDtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdCgpO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHN0YXRpYyBibG9iUmVnaXN0cnkgPSBuZXcgTWFwKCk7XG4gICAgc3RhdGljIGNyZWF0ZU9iamVjdFVSTChibG9iKSB7XG4gICAgICAgIGNvbnN0IGJsb2JVcmwgPSBgYmxvYjp3aGF0d2dub2RlOiR7KDAsIGNyeXB0b18xLnJhbmRvbVVVSUQpKCl9YDtcbiAgICAgICAgdGhpcy5ibG9iUmVnaXN0cnkuc2V0KGJsb2JVcmwsIGJsb2IpO1xuICAgICAgICByZXR1cm4gYmxvYlVybDtcbiAgICB9XG4gICAgc3RhdGljIHJlc29sdmVPYmplY3RVUkwodXJsKSB7XG4gICAgICAgIGlmICghdGhpcy5ibG9iUmVnaXN0cnkuaGFzKHVybCkpIHtcbiAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYmxvYlJlZ2lzdHJ5LmRlbGV0ZSh1cmwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBnZXRCbG9iRnJvbVVSTCh1cmwpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmJsb2JSZWdpc3RyeS5nZXQodXJsKSB8fCAoMCwgYnVmZmVyXzEucmVzb2x2ZU9iamVjdFVSTCkodXJsKSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFVSTCA9IFBvbnlmaWxsVVJMO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nfunction isURLSearchParams(value) {\n    return value?.entries != null;\n}\nclass PonyfillURLSearchParams {\n    params;\n    constructor(init) {\n        if (init) {\n            if (typeof init === 'string') {\n                this.params = fast_querystring_1.default.parse(init);\n            }\n            else if (Array.isArray(init)) {\n                this.params = {};\n                for (const [key, value] of init) {\n                    this.params[key] = value;\n                }\n            }\n            else if (isURLSearchParams(init)) {\n                this.params = {};\n                for (const [key, value] of init.entries()) {\n                    this.params[key] = value;\n                }\n            }\n            else {\n                this.params = init;\n            }\n        }\n        else {\n            this.params = {};\n        }\n    }\n    append(name, value) {\n        const existingValue = this.params[name];\n        const finalValue = existingValue ? `${existingValue},${value}` : value;\n        this.params[name] = finalValue;\n    }\n    delete(name) {\n        delete this.params[name];\n    }\n    get(name) {\n        const value = this.params[name];\n        if (Array.isArray(value)) {\n            return value[0] || null;\n        }\n        return value || null;\n    }\n    getAll(name) {\n        const value = this.params[name];\n        if (!Array.isArray(value)) {\n            return value ? [value] : [];\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.params;\n    }\n    set(name, value) {\n        this.params[name] = value;\n    }\n    sort() {\n        const sortedKeys = Object.keys(this.params).sort();\n        const sortedParams = {};\n        for (const key of sortedKeys) {\n            sortedParams[key] = this.params[key];\n        }\n        this.params = sortedParams;\n    }\n    toString() {\n        return fast_querystring_1.default.stringify(this.params);\n    }\n    *keys() {\n        for (const key in this.params) {\n            yield key;\n        }\n    }\n    *entries() {\n        for (const key of this.keys()) {\n            const value = this.params[key];\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    yield [key, item];\n                }\n            }\n            else {\n                yield [key, value];\n            }\n        }\n    }\n    *values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n    get size() {\n        return Object.keys(this.params).length;\n    }\n}\nexports.PonyfillURLSearchParams = PonyfillURLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQU87QUFDL0IsbURBQW1ELG1CQUFPLENBQUMsNkVBQWtCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYyxHQUFHLE1BQU07QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcz9jZDRmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBmYXN0X3F1ZXJ5c3RyaW5nXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZmFzdC1xdWVyeXN0cmluZ1wiKSk7XG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uZW50cmllcyAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMge1xuICAgIHBhcmFtcztcbiAgICBjb25zdHJ1Y3Rvcihpbml0KSB7XG4gICAgICAgIGlmIChpbml0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGluaXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5wYXJzZShpbml0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaW5pdCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGluaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzVVJMU2VhcmNoUGFyYW1zKGluaXQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBpbml0LmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhcmFtc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBpbml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdWYWx1ZSA9IHRoaXMucGFyYW1zW25hbWVdO1xuICAgICAgICBjb25zdCBmaW5hbFZhbHVlID0gZXhpc3RpbmdWYWx1ZSA/IGAke2V4aXN0aW5nVmFsdWV9LCR7dmFsdWV9YCA6IHZhbHVlO1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IGZpbmFsVmFsdWU7XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICB9XG4gICAgZ2V0KG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVbMF0gfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbiAgICB9XG4gICAgZ2V0QWxsKG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID8gW3ZhbHVlXSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUgaW4gdGhpcy5wYXJhbXM7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBzb3J0KCkge1xuICAgICAgICBjb25zdCBzb3J0ZWRLZXlzID0gT2JqZWN0LmtleXModGhpcy5wYXJhbXMpLnNvcnQoKTtcbiAgICAgICAgY29uc3Qgc29ydGVkUGFyYW1zID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHNvcnRlZEtleXMpIHtcbiAgICAgICAgICAgIHNvcnRlZFBhcmFtc1trZXldID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcmFtcyA9IHNvcnRlZFBhcmFtcztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5zdHJpbmdpZnkodGhpcy5wYXJhbXMpO1xuICAgIH1cbiAgICAqa2V5cygpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5wYXJhbXMpIHtcbiAgICAgICAgICAgIHlpZWxkIGtleTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAqZW50cmllcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgdGhpcy5rZXlzKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBba2V5LCBpdGVtXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBba2V5LCB2YWx1ZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBbLCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKTtcbiAgICB9XG4gICAgZm9yRWFjaChjYWxsYmFjaykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0aGlzKSB7XG4gICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMucGFyYW1zKS5sZW5ndGg7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IFBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            let onabort;\n            let reason;\n            const controller = {\n                signal: {\n                    any(signals) {\n                        return AbortSignal.any([...signals]);\n                    },\n                    get reason() {\n                        return reason;\n                    },\n                    get aborted() {\n                        return writable.destroyed;\n                    },\n                    addEventListener: (_event, eventListener) => {\n                        writable.once('error', eventListener);\n                        writable.once('close', eventListener);\n                    },\n                    removeEventListener: (_event, eventListener) => {\n                        writable.off('error', eventListener);\n                        writable.off('close', eventListener);\n                    },\n                    dispatchEvent: (_event) => {\n                        return false;\n                    },\n                    get onabort() {\n                        return onabort;\n                    },\n                    set onabort(value) {\n                        if (onabort) {\n                            this.removeEventListener('abort', onabort);\n                        }\n                        onabort = value;\n                        if (onabort) {\n                            this.addEventListener('abort', onabort);\n                        }\n                    },\n                    throwIfAborted() {\n                        if (writable.destroyed) {\n                            throw reason;\n                        }\n                    },\n                },\n                error: e => {\n                    this.writable.destroy(e);\n                },\n            };\n            this.writable.once('error', err => {\n                reason = err;\n            });\n        }\n        else {\n            this.writable = new stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            closed: new Promise(resolve => {\n                writable.once('close', () => {\n                    resolve(undefined);\n                });\n            }),\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            ready: new Promise(resolve => {\n                writable.once('drain', () => {\n                    resolve(undefined);\n                });\n            }),\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                if (chunk == null) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    writable.write(chunk, (err) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    if (writable.errored) {\n                        reject(writable.errored);\n                    }\n                    else {\n                        writable.end((err) => {\n                            if (err) {\n                                reject(err);\n                            }\n                            else {\n                                resolve();\n                            }\n                        });\n                    }\n                });\n            },\n            abort(reason) {\n                return new Promise(resolve => {\n                    writable.destroy(reason);\n                    writable.once('close', resolve);\n                });\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)(undefined);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.writable.errored) {\n                reject(this.writable.errored);\n            }\n            else {\n                this.writable.end((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            }\n        });\n    }\n    abort(reason) {\n        return new Promise(resolve => {\n            this.writable.destroy(reason);\n            this.writable.once('close', resolve);\n        });\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nfunction getResponseForFile(url) {\n    const path = (0, url_1.fileURLToPath)(url);\n    const readable = (0, fs_1.createReadStream)(path);\n    return new Response_js_1.PonyfillResponse(readable);\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixhQUFhLG1CQUFPLENBQUMsY0FBSTtBQUN6QixjQUFjLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMsc0hBQWdCO0FBQy9DLDJCQUEyQixtQkFBTyxDQUFDLDhIQUFvQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyxrSEFBYztBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyxvSEFBZTtBQUM3QyxpQkFBaUIsbUJBQU8sQ0FBQywwR0FBVTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyw4R0FBWTtBQUN2Qyx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvZmV0Y2guanM/MDQxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmV0Y2hQb255ZmlsbCA9IGZldGNoUG9ueWZpbGw7XG5jb25zdCBmc18xID0gcmVxdWlyZShcImZzXCIpO1xuY29uc3QgdXJsXzEgPSByZXF1aXJlKFwidXJsXCIpO1xuY29uc3QgZmV0Y2hDdXJsX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaEN1cmwuanNcIik7XG5jb25zdCBmZXRjaE5vZGVIdHRwX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaE5vZGVIdHRwLmpzXCIpO1xuY29uc3QgUmVxdWVzdF9qc18xID0gcmVxdWlyZShcIi4vUmVxdWVzdC5qc1wiKTtcbmNvbnN0IFJlc3BvbnNlX2pzXzEgPSByZXF1aXJlKFwiLi9SZXNwb25zZS5qc1wiKTtcbmNvbnN0IFVSTF9qc18xID0gcmVxdWlyZShcIi4vVVJMLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY29uc3QgQkFTRTY0X1NVRkZJWCA9ICc7YmFzZTY0JztcbmZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yRmlsZSh1cmwpIHtcbiAgICBjb25zdCBwYXRoID0gKDAsIHVybF8xLmZpbGVVUkxUb1BhdGgpKHVybCk7XG4gICAgY29uc3QgcmVhZGFibGUgPSAoMCwgZnNfMS5jcmVhdGVSZWFkU3RyZWFtKShwYXRoKTtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShyZWFkYWJsZSk7XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckRhdGFVcmkodXJsKSB7XG4gICAgY29uc3QgW21pbWVUeXBlID0gJ3RleHQvcGxhaW4nLCAuLi5kYXRhc10gPSB1cmwuc3Vic3RyaW5nKDUpLnNwbGl0KCcsJyk7XG4gICAgY29uc3QgZGF0YSA9IGRlY29kZVVSSUNvbXBvbmVudChkYXRhcy5qb2luKCcsJykpO1xuICAgIGlmIChtaW1lVHlwZS5lbmRzV2l0aChCQVNFNjRfU1VGRklYKSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShkYXRhLCAnYmFzZTY0dXJsJyk7XG4gICAgICAgIGNvbnN0IHJlYWxNaW1lVHlwZSA9IG1pbWVUeXBlLnNsaWNlKDAsIC1CQVNFNjRfU1VGRklYLmxlbmd0aCk7XG4gICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKGJ1ZmZlciwge1xuICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiByZWFsTWltZVR5cGUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoZGF0YSwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgc3RhdHVzVGV4dDogJ09LJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IG1pbWVUeXBlLFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0UmVzcG9uc2VGb3JCbG9iKHVybCkge1xuICAgIGNvbnN0IGJsb2IgPSBVUkxfanNfMS5Qb255ZmlsbFVSTC5nZXRCbG9iRnJvbVVSTCh1cmwpO1xuICAgIGlmICghYmxvYikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIEJsb2IgVVJMJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKGJsb2IsIHtcbiAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBibG9iLnR5cGUsXG4gICAgICAgICAgICAnY29udGVudC1sZW5ndGgnOiBibG9iLnNpemUudG9TdHJpbmcoKSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzVVJMKG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmouaHJlZiAhPSBudWxsO1xufVxuZnVuY3Rpb24gZmV0Y2hQb255ZmlsbChpbmZvLCBpbml0KSB7XG4gICAgaWYgKHR5cGVvZiBpbmZvID09PSAnc3RyaW5nJyB8fCBpc1VSTChpbmZvKSkge1xuICAgICAgICBjb25zdCBwb255ZmlsbFJlcXVlc3QgPSBuZXcgUmVxdWVzdF9qc18xLlBvbnlmaWxsUmVxdWVzdChpbmZvLCBpbml0KTtcbiAgICAgICAgcmV0dXJuIGZldGNoUG9ueWZpbGwocG9ueWZpbGxSZXF1ZXN0KTtcbiAgICB9XG4gICAgY29uc3QgZmV0Y2hSZXF1ZXN0ID0gaW5mbztcbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdkYXRhOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JEYXRhVXJpKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgaWYgKGZldGNoUmVxdWVzdC51cmwuc3RhcnRzV2l0aCgnZmlsZTonKSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGdldFJlc3BvbnNlRm9yRmlsZShmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKShyZXNwb25zZSk7XG4gICAgfVxuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2Jsb2I6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckJsb2IoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZ2xvYmFsVGhpcy5saWJjdXJsICYmICFmZXRjaFJlcXVlc3QuYWdlbnQpIHtcbiAgICAgICAgcmV0dXJuICgwLCBmZXRjaEN1cmxfanNfMS5mZXRjaEN1cmwpKGZldGNoUmVxdWVzdCk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgZmV0Y2hOb2RlSHR0cF9qc18xLmZldGNoTm9kZUh0dHApKGZldGNoUmVxdWVzdCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tls_1 = __webpack_require__(/*! tls */ \"tls\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    curlHandle.setStreamProgressCallback(function () {\n        return fetchRequest['_signal']?.aborted\n            ? process.env.DEBUG\n                ? CurlProgressFunc.Continue\n                : 1\n            : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, utils_js_1.createDeferredPromise)();\n    let streamResolved;\n    if (fetchRequest['_signal']) {\n        fetchRequest['_signal'].onabort = () => {\n            if (curlHandle.isOpen) {\n                try {\n                    curlHandle.pause(CurlPause.Recv);\n                }\n                catch (e) {\n                    deferredPromise.reject(e);\n                }\n            }\n        };\n    }\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = new stream_1.PassThrough();\n        stream_1.promises\n            .pipeline(stream, outputStream, {\n            end: true,\n            signal: fetchRequest['_signal'] ?? undefined,\n        })\n            .then(() => {\n            if (!stream.destroyed) {\n                stream.resume();\n            }\n        })\n            .catch(deferredPromise.reject);\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    (headerFilter.includes('location') || headerFilter.includes('Location'))) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    let count = 0;\n    try {\n        count = Curl.getCount();\n    }\n    catch { }\n    if (count > 0) {\n        setImmediate(() => {\n            curlHandle.perform();\n        });\n    }\n    else {\n        curlHandle.perform();\n    }\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.url);\n            const nodeReadable = (fetchRequest.body != null\n                ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                    ? fetchRequest.body\n                    : stream_1.Readable.from(fetchRequest.body)\n                : null);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            if (nodeHeaders['accept-encoding'] == null) {\n                nodeHeaders['accept-encoding'] = 'gzip, deflate, br';\n            }\n            const nodeRequest = requestFn(fetchRequest.url, {\n                method: fetchRequest.method,\n                headers: nodeHeaders,\n                signal: fetchRequest['_signal'] ?? undefined,\n                agent: fetchRequest.agent,\n            });\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, zlib_1.createBrotliDecompress)();\n                        break;\n                    default:\n                        outputStream = new stream_1.PassThrough();\n                }\n                if (nodeResponse.headers.location) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                stream_1.promises\n                    .pipeline(nodeResponse, outputStream, {\n                    signal: fetchRequest['_signal'] ?? undefined,\n                    end: true,\n                })\n                    .then(() => {\n                    if (!nodeResponse.destroyed) {\n                        nodeResponse.resume();\n                    }\n                })\n                    .catch(reject);\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n                    status: nodeResponse.statusCode,\n                    statusText: nodeResponse.statusMessage,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                });\n                resolve(ponyfillResponse);\n            });\n            nodeRequest.once('error', reject);\n            if (nodeReadable) {\n                nodeReadable.pipe(nodeRequest);\n            }\n            else {\n                nodeRequest.end();\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLHVCQUF1QixHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsWUFBWSxHQUFHLGdCQUFnQixHQUFHLFlBQVksR0FBRyxzQkFBc0IsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsWUFBWSxHQUFHLGVBQWUsR0FBRyxhQUFhO0FBQzdXLGlCQUFpQixtQkFBTyxDQUFDLDhHQUFZO0FBQ3JDLHlDQUF3QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUNwSCxtQkFBbUIsbUJBQU8sQ0FBQyxrSEFBYztBQUN6QywyQ0FBMEMsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDMUgsZ0JBQWdCLG1CQUFPLENBQUMsNEdBQVc7QUFDbkMsd0NBQXVDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ2pILG1CQUFtQixtQkFBTyxDQUFDLGtIQUFjO0FBQ3pDLDJDQUEwQyxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUMxSCxvQkFBb0IsbUJBQU8sQ0FBQyxvSEFBZTtBQUMzQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMsZ0lBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUMvSSxnQkFBZ0IsbUJBQU8sQ0FBQyw0R0FBVztBQUNuQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDakgsb0JBQW9CLG1CQUFPLENBQUMsb0hBQWU7QUFDM0MsNENBQTJDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQzdILGdCQUFnQixtQkFBTyxDQUFDLDRHQUFXO0FBQ25DLHdDQUF1QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUNqSCw4QkFBOEIsbUJBQU8sQ0FBQyx3SUFBeUI7QUFDL0QsK0NBQThDLEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQzdJLCtDQUE4QyxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUM3SSx3Q0FBdUMsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDL0gsZUFBZSxtQkFBTyxDQUFDLDBHQUFVO0FBQ2pDLHVDQUFzQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUM5RywyQkFBMkIsbUJBQU8sQ0FBQyxrSUFBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLHdEQUF3RCxFQUFDO0FBQ2xKLDBCQUEwQixtQkFBTyxDQUFDLGdJQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDL0ksMkJBQTJCLG1CQUFPLENBQUMsa0lBQXNCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSiw2QkFBNkIsbUJBQU8sQ0FBQyxzSUFBd0I7QUFDN0QscURBQW9ELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQ3hKLCtCQUErQixtQkFBTyxDQUFDLDBJQUEwQjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9pbmRleC5qcz9lMWJhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWNvbXByZXNzaW9uU3RyZWFtID0gZXhwb3J0cy5Db21wcmVzc2lvblN0cmVhbSA9IGV4cG9ydHMuVHJhbnNmb3JtU3RyZWFtID0gZXhwb3J0cy5Xcml0YWJsZVN0cmVhbSA9IGV4cG9ydHMuVVJMU2VhcmNoUGFyYW1zID0gZXhwb3J0cy5VUkwgPSBleHBvcnRzLmJ0b2EgPSBleHBvcnRzLlRleHREZWNvZGVyID0gZXhwb3J0cy5UZXh0RW5jb2RlciA9IGV4cG9ydHMuQmxvYiA9IGV4cG9ydHMuRm9ybURhdGEgPSBleHBvcnRzLkZpbGUgPSBleHBvcnRzLlJlYWRhYmxlU3RyZWFtID0gZXhwb3J0cy5SZXNwb25zZSA9IGV4cG9ydHMuUmVxdWVzdCA9IGV4cG9ydHMuQm9keSA9IGV4cG9ydHMuSGVhZGVycyA9IGV4cG9ydHMuZmV0Y2ggPSB2b2lkIDA7XG52YXIgZmV0Y2hfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZmV0Y2hcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZldGNoX2pzXzEuZmV0Y2hQb255ZmlsbDsgfSB9KTtcbnZhciBIZWFkZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSGVhZGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVyczsgfSB9KTtcbnZhciBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQm9keVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQm9keV9qc18xLlBvbnlmaWxsQm9keTsgfSB9KTtcbnZhciBSZXF1ZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9SZXF1ZXN0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVxdWVzdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVxdWVzdF9qc18xLlBvbnlmaWxsUmVxdWVzdDsgfSB9KTtcbnZhciBSZXNwb25zZV9qc18xID0gcmVxdWlyZShcIi4vUmVzcG9uc2UuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlOyB9IH0pO1xudmFyIFJlYWRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9SZWFkYWJsZVN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlYWRhYmxlU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW07IH0gfSk7XG52YXIgRmlsZV9qc18xID0gcmVxdWlyZShcIi4vRmlsZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZpbGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZpbGVfanNfMS5Qb255ZmlsbEZpbGU7IH0gfSk7XG52YXIgRm9ybURhdGFfanNfMSA9IHJlcXVpcmUoXCIuL0Zvcm1EYXRhLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRm9ybURhdGFcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZvcm1EYXRhX2pzXzEuUG9ueWZpbGxGb3JtRGF0YTsgfSB9KTtcbnZhciBCbG9iX2pzXzEgPSByZXF1aXJlKFwiLi9CbG9iLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQmxvYlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmxvYl9qc18xLlBvbnlmaWxsQmxvYjsgfSB9KTtcbnZhciBUZXh0RW5jb2RlckRlY29kZXJfanNfMSA9IHJlcXVpcmUoXCIuL1RleHRFbmNvZGVyRGVjb2Rlci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRleHRFbmNvZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbFRleHRFbmNvZGVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGV4dERlY29kZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dERlY29kZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJidG9hXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbEJ0b2E7IH0gfSk7XG52YXIgVVJMX2pzXzEgPSByZXF1aXJlKFwiLi9VUkwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVUkxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFVSTF9qc18xLlBvbnlmaWxsVVJMOyB9IH0pO1xudmFyIFVSTFNlYXJjaFBhcmFtc19qc18xID0gcmVxdWlyZShcIi4vVVJMU2VhcmNoUGFyYW1zLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVVJMU2VhcmNoUGFyYW1zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBVUkxTZWFyY2hQYXJhbXNfanNfMS5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtczsgfSB9KTtcbnZhciBXcml0YWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vV3JpdGFibGVTdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJXcml0YWJsZVN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gV3JpdGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFdyaXRhYmxlU3RyZWFtOyB9IH0pO1xudmFyIFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNmb3JtU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbTsgfSB9KTtcbnZhciBDb21wcmVzc2lvblN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vQ29tcHJlc3Npb25TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb21wcmVzc2lvblN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29tcHJlc3Npb25TdHJlYW1fanNfMS5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtOyB9IH0pO1xudmFyIERlY29tcHJlc3Npb25TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL0RlY29tcHJlc3Npb25TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEZWNvbXByZXNzaW9uU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBEZWNvbXByZXNzaW9uU3RyZWFtX2pzXzEuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.fakePromise = fakePromise;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.createDeferredPromise = createDeferredPromise;\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    const obj = {};\n    headers.forEach((value, key) => {\n        obj[key] = value;\n    });\n    return obj;\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction fakePromise(value) {\n    if (isPromise(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if (isPromise(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if (isPromise(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixnQ0FBZ0M7QUFDaEMsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSSxJQUFJLE1BQU07QUFDMUMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvdXRpbHMuanM/ZjViNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SGVhZGVyc09iaiA9IGdldEhlYWRlcnNPYmo7XG5leHBvcnRzLmRlZmF1bHRIZWFkZXJzU2VyaWFsaXplciA9IGRlZmF1bHRIZWFkZXJzU2VyaWFsaXplcjtcbmV4cG9ydHMuZmFrZVByb21pc2UgPSBmYWtlUHJvbWlzZTtcbmV4cG9ydHMuaXNBcnJheUJ1ZmZlclZpZXcgPSBpc0FycmF5QnVmZmVyVmlldztcbmV4cG9ydHMuaXNOb2RlUmVhZGFibGUgPSBpc05vZGVSZWFkYWJsZTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWRQcm9taXNlID0gY3JlYXRlRGVmZXJyZWRQcm9taXNlO1xuZnVuY3Rpb24gaXNIZWFkZXJzSW5zdGFuY2Uob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uZm9yRWFjaCAhPSBudWxsO1xufVxuZnVuY3Rpb24gZ2V0SGVhZGVyc09iaihoZWFkZXJzKSB7XG4gICAgaWYgKGhlYWRlcnMgPT0gbnVsbCB8fCAhaXNIZWFkZXJzSW5zdGFuY2UoaGVhZGVycykpIHtcbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfVxuICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgIGhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBvYmo7XG59XG5mdW5jdGlvbiBkZWZhdWx0SGVhZGVyc1NlcmlhbGl6ZXIoaGVhZGVycywgb25Db250ZW50TGVuZ3RoKSB7XG4gICAgY29uc3QgaGVhZGVyQXJyYXkgPSBbXTtcbiAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKG9uQ29udGVudExlbmd0aCAmJiBrZXkgPT09ICdjb250ZW50LWxlbmd0aCcpIHtcbiAgICAgICAgICAgIG9uQ29udGVudExlbmd0aCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaGVhZGVyQXJyYXkucHVzaChgJHtrZXl9OiAke3ZhbHVlfWApO1xuICAgIH0pO1xuICAgIHJldHVybiBoZWFkZXJBcnJheTtcbn1cbmZ1bmN0aW9uIGlzUHJvbWlzZSh2YWwpIHtcbiAgICByZXR1cm4gdmFsPy50aGVuICE9IG51bGw7XG59XG5mdW5jdGlvbiBmYWtlUHJvbWlzZSh2YWx1ZSkge1xuICAgIGlmIChpc1Byb21pc2UodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgLy8gV3JpdGUgYSBmYWtlIHByb21pc2UgdG8gYXZvaWQgdGhlIHByb21pc2UgY29uc3RydWN0b3JcbiAgICAvLyBiZWluZyBjYWxsZWQgd2l0aCBgbmV3IFByb21pc2VgIGluIHRoZSBicm93c2VyLlxuICAgIHJldHVybiB7XG4gICAgICAgIHRoZW4ocmVzb2x2ZSkge1xuICAgICAgICAgICAgaWYgKHJlc29sdmUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFja1Jlc3VsdCA9IHJlc29sdmUodmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmIChpc1Byb21pc2UoY2FsbGJhY2tSZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFja1Jlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZha2VQcm9taXNlKGNhbGxiYWNrUmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBjYXRjaCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBmaW5hbGx5KGNiKSB7XG4gICAgICAgICAgICBpZiAoY2IpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFja1Jlc3VsdCA9IGNiKCk7XG4gICAgICAgICAgICAgICAgaWYgKGlzUHJvbWlzZShjYWxsYmFja1Jlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrUmVzdWx0LnRoZW4oKCkgPT4gdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFrZVByb21pc2UodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIFtTeW1ib2wudG9TdHJpbmdUYWddOiAnUHJvbWlzZScsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmouYnVmZmVyICE9IG51bGwgJiYgb2JqLmJ5dGVMZW5ndGggIT0gbnVsbCAmJiBvYmouYnl0ZU9mZnNldCAhPSBudWxsO1xufVxuZnVuY3Rpb24gaXNOb2RlUmVhZGFibGUob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5waXBlICE9IG51bGw7XG59XG5mdW5jdGlvbiBjcmVhdGVEZWZlcnJlZFByb21pc2UoKSB7XG4gICAgbGV0IHJlc29sdmVGbjtcbiAgICBsZXQgcmVqZWN0Rm47XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIGRlZmVycmVkUHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICByZXNvbHZlRm4gPSByZXNvbHZlO1xuICAgICAgICByZWplY3RGbiA9IHJlamVjdDtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9taXNlLFxuICAgICAgICBnZXQgcmVzb2x2ZSgpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlRm47XG4gICAgICAgIH0sXG4gICAgICAgIGdldCByZWplY3QoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0Rm47XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs ***!
  \***********************************************************************************************/
/***/ ((module) => {

"use strict";
eval("var M=Object.defineProperty;var Pe=Object.getOwnPropertyDescriptor;var Re=Object.getOwnPropertyNames;var Ee=Object.prototype.hasOwnProperty;var Oe=(e,t)=>{for(var r in t)M(e,r,{get:t[r],enumerable:!0})},ke=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of Re(t))!Ee.call(e,a)&&a!==r&&M(e,a,{get:()=>t[a],enumerable:!(n=Pe(t,a))||n.enumerable});return e};var Te=e=>ke(M({},\"__esModule\",{value:!0}),e);var Ne={};Oe(Ne,{URLPattern:()=>Y});module.exports=Te(Ne);var R=class{type=3;name=\"\";prefix=\"\";value=\"\";suffix=\"\";modifier=3;constructor(t,r,n,a,c,l){this.type=t,this.name=r,this.prefix=n,this.value=a,this.suffix=c,this.modifier=l}hasCustomName(){return this.name!==\"\"&&typeof this.name!=\"number\"}},Ae=/[$_\\p{ID_Start}]/u,ye=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,v=\".*\";function we(e,t){return(t?/^[\\x00-\\xFF]*$/:/^[\\x00-\\x7F]*$/).test(e)}function D(e,t=!1){let r=[],n=0;for(;n<e.length;){let a=e[n],c=function(l){if(!t)throw new TypeError(l);r.push({type:\"INVALID_CHAR\",index:n,value:e[n++]})};if(a===\"*\"){r.push({type:\"ASTERISK\",index:n,value:e[n++]});continue}if(a===\"+\"||a===\"?\"){r.push({type:\"OTHER_MODIFIER\",index:n,value:e[n++]});continue}if(a===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(a===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(a===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(a===\":\"){let l=\"\",s=n+1;for(;s<e.length;){let i=e.substr(s,1);if(s===n+1&&Ae.test(i)||s!==n+1&&ye.test(i)){l+=e[s++];continue}break}if(!l){c(`Missing parameter name at ${n}`);continue}r.push({type:\"NAME\",index:n,value:l}),n=s;continue}if(a===\"(\"){let l=1,s=\"\",i=n+1,o=!1;if(e[i]===\"?\"){c(`Pattern cannot start with \"?\" at ${i}`);continue}for(;i<e.length;){if(!we(e[i],!1)){c(`Invalid character '${e[i]}' at ${i}.`),o=!0;break}if(e[i]===\"\\\\\"){s+=e[i++]+e[i++];continue}if(e[i]===\")\"){if(l--,l===0){i++;break}}else if(e[i]===\"(\"&&(l++,e[i+1]!==\"?\")){c(`Capturing groups are not allowed at ${i}`),o=!0;break}s+=e[i++]}if(o)continue;if(l){c(`Unbalanced pattern at ${n}`);continue}if(!s){c(`Missing pattern at ${n}`);continue}r.push({type:\"REGEX\",index:n,value:s}),n=i;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}return r.push({type:\"END\",index:n,value:\"\"}),r}function F(e,t={}){let r=D(e);t.delimiter??=\"/#?\",t.prefixes??=\"./\";let n=`[^${S(t.delimiter)}]+?`,a=[],c=0,l=0,s=\"\",i=new Set,o=h=>{if(l<r.length&&r[l].type===h)return r[l++].value},f=()=>o(\"OTHER_MODIFIER\")??o(\"ASTERISK\"),d=h=>{let u=o(h);if(u!==void 0)return u;let{type:p,index:A}=r[l];throw new TypeError(`Unexpected ${p} at ${A}, expected ${h}`)},T=()=>{let h=\"\",u;for(;u=o(\"CHAR\")??o(\"ESCAPED_CHAR\");)h+=u;return h},xe=h=>h,L=t.encodePart||xe,I=\"\",U=h=>{I+=h},$=()=>{I.length&&(a.push(new R(3,\"\",\"\",L(I),\"\",3)),I=\"\")},X=(h,u,p,A,Z)=>{let g=3;switch(Z){case\"?\":g=1;break;case\"*\":g=0;break;case\"+\":g=2;break}if(!u&&!p&&g===3){U(h);return}if($(),!u&&!p){if(!h)return;a.push(new R(3,\"\",\"\",L(h),\"\",g));return}let m;p?p===\"*\"?m=v:m=p:m=n;let O=2;m===n?(O=1,m=\"\"):m===v&&(O=0,m=\"\");let P;if(u?P=u:p&&(P=c++),i.has(P))throw new TypeError(`Duplicate name '${P}'.`);i.add(P),a.push(new R(O,P,L(h),m,L(A),g))};for(;l<r.length;){let h=o(\"CHAR\"),u=o(\"NAME\"),p=o(\"REGEX\");if(!u&&!p&&(p=o(\"ASTERISK\")),u||p){let g=h??\"\";t.prefixes.indexOf(g)===-1&&(U(g),g=\"\"),$();let m=f();X(g,u,p,\"\",m);continue}let A=h??o(\"ESCAPED_CHAR\");if(A){U(A);continue}if(o(\"OPEN\")){let g=T(),m=o(\"NAME\"),O=o(\"REGEX\");!m&&!O&&(O=o(\"ASTERISK\"));let P=T();d(\"CLOSE\");let be=f();X(g,m,O,P,be);continue}$(),d(\"END\")}return a}function S(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function B(e){return e&&e.ignoreCase?\"ui\":\"u\"}function q(e,t,r){return W(F(e,r),t,r)}function k(e){switch(e){case 0:return\"*\";case 1:return\"?\";case 2:return\"+\";case 3:return\"\"}}function W(e,t,r={}){r.delimiter??=\"/#?\",r.prefixes??=\"./\",r.sensitive??=!1,r.strict??=!1,r.end??=!0,r.start??=!0,r.endsWith=\"\";let n=r.start?\"^\":\"\";for(let s of e){if(s.type===3){s.modifier===3?n+=S(s.value):n+=`(?:${S(s.value)})${k(s.modifier)}`;continue}t&&t.push(s.name);let i=`[^${S(r.delimiter)}]+?`,o=s.value;if(s.type===1?o=i:s.type===0&&(o=v),!s.prefix.length&&!s.suffix.length){s.modifier===3||s.modifier===1?n+=`(${o})${k(s.modifier)}`:n+=`((?:${o})${k(s.modifier)})`;continue}if(s.modifier===3||s.modifier===1){n+=`(?:${S(s.prefix)}(${o})${S(s.suffix)})`,n+=k(s.modifier);continue}n+=`(?:${S(s.prefix)}`,n+=`((?:${o})(?:`,n+=S(s.suffix),n+=S(s.prefix),n+=`(?:${o}))*)${S(s.suffix)})`,s.modifier===0&&(n+=\"?\")}let a=`[${S(r.endsWith)}]|$`,c=`[${S(r.delimiter)}]`;if(r.end)return r.strict||(n+=`${c}?`),r.endsWith.length?n+=`(?=${a})`:n+=\"$\",new RegExp(n,B(r));r.strict||(n+=`(?:${c}(?=${a}))?`);let l=!1;if(e.length){let s=e[e.length-1];s.type===3&&s.modifier===3&&(l=r.delimiter.indexOf(s)>-1)}return l||(n+=`(?=${c}|${a})`),new RegExp(n,B(r))}var x={delimiter:\"\",prefixes:\"\",sensitive:!0,strict:!0},J={delimiter:\".\",prefixes:\"\",sensitive:!0,strict:!0},Q={delimiter:\"/\",prefixes:\"/\",sensitive:!0,strict:!0};function ee(e,t){return e.length?e[0]===\"/\"?!0:!t||e.length<2?!1:(e[0]==\"\\\\\"||e[0]==\"{\")&&e[1]==\"/\":!1}function te(e,t){return e.startsWith(t)?e.substring(t.length,e.length):e}function Ce(e,t){return e.endsWith(t)?e.substr(0,e.length-t.length):e}function _(e){return!e||e.length<2?!1:e[0]===\"[\"||(e[0]===\"\\\\\"||e[0]===\"{\")&&e[1]===\"[\"}var re=[\"ftp\",\"file\",\"http\",\"https\",\"ws\",\"wss\"];function N(e){if(!e)return!0;for(let t of re)if(e.test(t))return!0;return!1}function ne(e,t){if(e=te(e,\"#\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.hash=e,r.hash?r.hash.substring(1,r.hash.length):\"\"}function se(e,t){if(e=te(e,\"?\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.search=e,r.search?r.search.substring(1,r.search.length):\"\"}function ie(e,t){return t||e===\"\"?e:_(e)?K(e):j(e)}function ae(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.password=e,r.password}function oe(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.username=e,r.username}function ce(e,t,r){if(r||e===\"\")return e;if(t&&!re.includes(t))return new URL(`${t}:${e}`).pathname;let n=e[0]==\"/\";return e=new URL(n?e:\"/-\"+e,\"https://example.com\").pathname,n||(e=e.substring(2,e.length)),e}function le(e,t,r){return z(t)===e&&(e=\"\"),r||e===\"\"?e:G(e)}function fe(e,t){return e=Ce(e,\":\"),t||e===\"\"?e:y(e)}function z(e){switch(e){case\"ws\":case\"http\":return\"80\";case\"wws\":case\"https\":return\"443\";case\"ftp\":return\"21\";default:return\"\"}}function y(e){if(e===\"\")return e;if(/^[-+.A-Za-z0-9]*$/.test(e))return e.toLowerCase();throw new TypeError(`Invalid protocol '${e}'.`)}function he(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.username=e,t.username}function ue(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.password=e,t.password}function j(e){if(e===\"\")return e;if(/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(e))throw new TypeError(`Invalid hostname '${e}'`);let t=new URL(\"https://example.com\");return t.hostname=e,t.hostname}function K(e){if(e===\"\")return e;if(/[^0-9a-fA-F[\\]:]/g.test(e))throw new TypeError(`Invalid IPv6 hostname '${e}'`);return e.toLowerCase()}function G(e){if(e===\"\"||/^[0-9]*$/.test(e)&&parseInt(e)<=65535)return e;throw new TypeError(`Invalid port '${e}'.`)}function de(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.pathname=e[0]!==\"/\"?\"/-\"+e:e,e[0]!==\"/\"?t.pathname.substring(2,t.pathname.length):t.pathname}function pe(e){return e===\"\"?e:new URL(`data:${e}`).pathname}function ge(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.search=e,t.search.substring(1,t.search.length)}function me(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.hash=e,t.hash.substring(1,t.hash.length)}var H=class{#i;#n=[];#t={};#e=0;#s=1;#l=0;#o=0;#d=0;#p=0;#g=!1;constructor(t){this.#i=t}get result(){return this.#t}parse(){for(this.#n=D(this.#i,!0);this.#e<this.#n.length;this.#e+=this.#s){if(this.#s=1,this.#n[this.#e].type===\"END\"){if(this.#o===0){this.#b(),this.#f()?this.#r(9,1):this.#h()?this.#r(8,1):this.#r(7,0);continue}else if(this.#o===2){this.#u(5);continue}this.#r(10,0);break}if(this.#d>0)if(this.#A())this.#d-=1;else continue;if(this.#T()){this.#d+=1;continue}switch(this.#o){case 0:this.#P()&&this.#u(1);break;case 1:if(this.#P()){this.#C();let t=7,r=1;this.#E()?(t=2,r=3):this.#g&&(t=2),this.#r(t,r)}break;case 2:this.#S()?this.#u(3):(this.#x()||this.#h()||this.#f())&&this.#u(5);break;case 3:this.#O()?this.#r(4,1):this.#S()&&this.#r(5,1);break;case 4:this.#S()&&this.#r(5,1);break;case 5:this.#y()?this.#p+=1:this.#w()&&(this.#p-=1),this.#k()&&!this.#p?this.#r(6,1):this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 6:this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 7:this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 8:this.#f()&&this.#r(9,1);break;case 9:break;case 10:break}}this.#t.hostname!==void 0&&this.#t.port===void 0&&(this.#t.port=\"\")}#r(t,r){switch(this.#o){case 0:break;case 1:this.#t.protocol=this.#c();break;case 2:break;case 3:this.#t.username=this.#c();break;case 4:this.#t.password=this.#c();break;case 5:this.#t.hostname=this.#c();break;case 6:this.#t.port=this.#c();break;case 7:this.#t.pathname=this.#c();break;case 8:this.#t.search=this.#c();break;case 9:this.#t.hash=this.#c();break;case 10:break}this.#o!==0&&t!==10&&([1,2,3,4].includes(this.#o)&&[6,7,8,9].includes(t)&&(this.#t.hostname??=\"\"),[1,2,3,4,5,6].includes(this.#o)&&[8,9].includes(t)&&(this.#t.pathname??=this.#g?\"/\":\"\"),[1,2,3,4,5,6,7].includes(this.#o)&&t===9&&(this.#t.search??=\"\")),this.#R(t,r)}#R(t,r){this.#o=t,this.#l=this.#e+r,this.#e+=r,this.#s=0}#b(){this.#e=this.#l,this.#s=0}#u(t){this.#b(),this.#o=t}#m(t){return t<0&&(t=this.#n.length-t),t<this.#n.length?this.#n[t]:this.#n[this.#n.length-1]}#a(t,r){let n=this.#m(t);return n.value===r&&(n.type===\"CHAR\"||n.type===\"ESCAPED_CHAR\"||n.type===\"INVALID_CHAR\")}#P(){return this.#a(this.#e,\":\")}#E(){return this.#a(this.#e+1,\"/\")&&this.#a(this.#e+2,\"/\")}#S(){return this.#a(this.#e,\"@\")}#O(){return this.#a(this.#e,\":\")}#k(){return this.#a(this.#e,\":\")}#x(){return this.#a(this.#e,\"/\")}#h(){if(this.#a(this.#e,\"?\"))return!0;if(this.#n[this.#e].value!==\"?\")return!1;let t=this.#m(this.#e-1);return t.type!==\"NAME\"&&t.type!==\"REGEX\"&&t.type!==\"CLOSE\"&&t.type!==\"ASTERISK\"}#f(){return this.#a(this.#e,\"#\")}#T(){return this.#n[this.#e].type==\"OPEN\"}#A(){return this.#n[this.#e].type==\"CLOSE\"}#y(){return this.#a(this.#e,\"[\")}#w(){return this.#a(this.#e,\"]\")}#c(){let t=this.#n[this.#e],r=this.#m(this.#l).index;return this.#i.substring(r,t.index)}#C(){let t={};Object.assign(t,x),t.encodePart=y;let r=q(this.#c(),void 0,t);this.#g=N(r)}};var V=[\"protocol\",\"username\",\"password\",\"hostname\",\"port\",\"pathname\",\"search\",\"hash\"],E=\"*\";function Se(e,t){if(typeof e!=\"string\")throw new TypeError(\"parameter 1 is not of type 'string'.\");let r=new URL(e,t);return{protocol:r.protocol.substring(0,r.protocol.length-1),username:r.username,password:r.password,hostname:r.hostname,port:r.port,pathname:r.pathname,search:r.search!==\"\"?r.search.substring(1,r.search.length):void 0,hash:r.hash!==\"\"?r.hash.substring(1,r.hash.length):void 0}}function b(e,t){return t?C(e):e}function w(e,t,r){let n;if(typeof t.baseURL==\"string\")try{n=new URL(t.baseURL),t.protocol===void 0&&(e.protocol=b(n.protocol.substring(0,n.protocol.length-1),r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&(e.username=b(n.username,r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&t.password===void 0&&(e.password=b(n.password,r)),t.protocol===void 0&&t.hostname===void 0&&(e.hostname=b(n.hostname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&(e.port=b(n.port,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&(e.pathname=b(n.pathname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&(e.search=b(n.search.substring(1,n.search.length),r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&t.hash===void 0&&(e.hash=b(n.hash.substring(1,n.hash.length),r))}catch{throw new TypeError(`invalid baseURL '${t.baseURL}'.`)}if(typeof t.protocol==\"string\"&&(e.protocol=fe(t.protocol,r)),typeof t.username==\"string\"&&(e.username=oe(t.username,r)),typeof t.password==\"string\"&&(e.password=ae(t.password,r)),typeof t.hostname==\"string\"&&(e.hostname=ie(t.hostname,r)),typeof t.port==\"string\"&&(e.port=le(t.port,e.protocol,r)),typeof t.pathname==\"string\"){if(e.pathname=t.pathname,n&&!ee(e.pathname,r)){let a=n.pathname.lastIndexOf(\"/\");a>=0&&(e.pathname=b(n.pathname.substring(0,a+1),r)+e.pathname)}e.pathname=ce(e.pathname,e.protocol,r)}return typeof t.search==\"string\"&&(e.search=se(t.search,r)),typeof t.hash==\"string\"&&(e.hash=ne(t.hash,r)),e}function C(e){return e.replace(/([+*?:{}()\\\\])/g,\"\\\\$1\")}function Le(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function Ie(e,t){t.delimiter??=\"/#?\",t.prefixes??=\"./\",t.sensitive??=!1,t.strict??=!1,t.end??=!0,t.start??=!0,t.endsWith=\"\";let r=\".*\",n=`[^${Le(t.delimiter)}]+?`,a=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,c=\"\";for(let l=0;l<e.length;++l){let s=e[l];if(s.type===3){if(s.modifier===3){c+=C(s.value);continue}c+=`{${C(s.value)}}${k(s.modifier)}`;continue}let i=s.hasCustomName(),o=!!s.suffix.length||!!s.prefix.length&&(s.prefix.length!==1||!t.prefixes.includes(s.prefix)),f=l>0?e[l-1]:null,d=l<e.length-1?e[l+1]:null;if(!o&&i&&s.type===1&&s.modifier===3&&d&&!d.prefix.length&&!d.suffix.length)if(d.type===3){let T=d.value.length>0?d.value[0]:\"\";o=a.test(T)}else o=!d.hasCustomName();if(!o&&!s.prefix.length&&f&&f.type===3){let T=f.value[f.value.length-1];o=t.prefixes.includes(T)}o&&(c+=\"{\"),c+=C(s.prefix),i&&(c+=`:${s.name}`),s.type===2?c+=`(${s.value})`:s.type===1?i||(c+=`(${n})`):s.type===0&&(!i&&(!f||f.type===3||f.modifier!==3||o||s.prefix!==\"\")?c+=\"*\":c+=`(${r})`),s.type===1&&i&&s.suffix.length&&a.test(s.suffix[0])&&(c+=\"\\\\\"),c+=C(s.suffix),o&&(c+=\"}\"),s.modifier!==3&&(c+=k(s.modifier))}return c}var Y=class{#i;#n={};#t={};#e={};#s={};#l=!1;constructor(t={},r,n){try{let a;if(typeof r==\"string\"?a=r:n=r,typeof t==\"string\"){let i=new H(t);if(i.parse(),t=i.result,a===void 0&&typeof t.protocol!=\"string\")throw new TypeError(\"A base URL must be provided for a relative constructor string.\");t.baseURL=a}else{if(!t||typeof t!=\"object\")throw new TypeError(\"parameter 1 is not of type 'string' and cannot convert to dictionary.\");if(a)throw new TypeError(\"parameter 1 is not of type 'string'.\")}typeof n>\"u\"&&(n={ignoreCase:!1});let c={ignoreCase:n.ignoreCase===!0},l={pathname:E,protocol:E,username:E,password:E,hostname:E,port:E,search:E,hash:E};this.#i=w(l,t,!0),z(this.#i.protocol)===this.#i.port&&(this.#i.port=\"\");let s;for(s of V){if(!(s in this.#i))continue;let i={},o=this.#i[s];switch(this.#t[s]=[],s){case\"protocol\":Object.assign(i,x),i.encodePart=y;break;case\"username\":Object.assign(i,x),i.encodePart=he;break;case\"password\":Object.assign(i,x),i.encodePart=ue;break;case\"hostname\":Object.assign(i,J),_(o)?i.encodePart=K:i.encodePart=j;break;case\"port\":Object.assign(i,x),i.encodePart=G;break;case\"pathname\":N(this.#n.protocol)?(Object.assign(i,Q,c),i.encodePart=de):(Object.assign(i,x,c),i.encodePart=pe);break;case\"search\":Object.assign(i,x,c),i.encodePart=ge;break;case\"hash\":Object.assign(i,x,c),i.encodePart=me;break}try{this.#s[s]=F(o,i),this.#n[s]=W(this.#s[s],this.#t[s],i),this.#e[s]=Ie(this.#s[s],i),this.#l=this.#l||this.#s[s].some(f=>f.type===2)}catch{throw new TypeError(`invalid ${s} pattern '${this.#i[s]}'.`)}}}catch(a){throw new TypeError(`Failed to construct 'URLPattern': ${a.message}`)}}test(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return!1;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return!1}let a;for(a of V)if(!this.#n[a].exec(n[a]))return!1;return!0}exec(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return null}let a={};r?a.inputs=[t,r]:a.inputs=[t];let c;for(c of V){let l=this.#n[c].exec(n[c]);if(!l)return null;let s={};for(let[i,o]of this.#t[c].entries())if(typeof o==\"string\"||typeof o==\"number\"){let f=l[i+1];s[o]=f}a[c]={input:n[c]??\"\",groups:s}}return a}static compareComponent(t,r,n){let a=(i,o)=>{for(let f of[\"type\",\"modifier\",\"prefix\",\"value\",\"suffix\"]){if(i[f]<o[f])return-1;if(i[f]===o[f])continue;return 1}return 0},c=new R(3,\"\",\"\",\"\",\"\",3),l=new R(0,\"\",\"\",\"\",\"\",3),s=(i,o)=>{let f=0;for(;f<Math.min(i.length,o.length);++f){let d=a(i[f],o[f]);if(d)return d}return i.length===o.length?0:a(i[f]??c,o[f]??c)};return!r.#e[t]&&!n.#e[t]?0:r.#e[t]&&!n.#e[t]?s(r.#s[t],[l]):!r.#e[t]&&n.#e[t]?s([l],n.#s[t]):s(r.#s[t],n.#s[t])}get protocol(){return this.#e.protocol}get username(){return this.#e.username}get password(){return this.#e.password}get hostname(){return this.#e.hostname}get port(){return this.#e.port}get pathname(){return this.#e.pathname}get search(){return this.#e.search}get hash(){return this.#e.hash}get hasRegExpGroups(){return this.#l}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/index.cjs":
/*!*************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/index.cjs ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { URLPattern } = __webpack_require__(/*! ./dist/urlpattern.cjs */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\");\n\nmodule.exports = { URLPattern };\n\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = URLPattern;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvdXJscGF0dGVybi1wb2x5ZmlsbC9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxhQUFhLEVBQUUsbUJBQU8sQ0FBQyw0SEFBdUI7O0FBRXRELG1CQUFtQjs7QUFFbkI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy91cmxwYXR0ZXJuLXBvbHlmaWxsL2luZGV4LmNqcz8wYmUwIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVVJMUGF0dGVybiB9ID0gcmVxdWlyZShcIi4vZGlzdC91cmxwYXR0ZXJuLmNqc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7IFVSTFBhdHRlcm4gfTtcblxuaWYgKCFnbG9iYWxUaGlzLlVSTFBhdHRlcm4pIHtcbiAgZ2xvYmFsVGhpcy5VUkxQYXR0ZXJuID0gVVJMUGF0dGVybjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/urlpattern-polyfill/index.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return Buffer.from(blobPart);\n    }\n    else if (Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst busboy_1 = tslib_1.__importDefault(__webpack_require__(/*! busboy */ \"(ssr)/../node_modules/busboy/lib/index.js\"));\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            return (0, utils_js_1.fakePromise)([]);\n        }\n        this._chunks = [];\n        _body.readable.on('data', chunk => {\n            this._chunks.push(chunk);\n        });\n        return new Promise((resolve, reject) => {\n            _body.readable.once('end', () => {\n                resolve(this._chunks);\n            });\n            _body.readable.once('error', e => {\n                reject(e);\n            });\n        });\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        });\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const bb = (0, busboy_1.default)({\n                headers: {\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defParamCharset: 'utf-8',\n            });\n            bb.on('field', (name, value, { nameTruncated, valueTruncated }) => {\n                if (nameTruncated) {\n                    reject(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    reject(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('fieldsLimit', () => {\n                reject(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('file', (name, fileStream, { filename, mimeType }) => {\n                const chunks = [];\n                fileStream.on('limit', () => {\n                    reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('filesLimit', () => {\n                reject(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                reject(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('close', () => {\n                resolve(this._formData);\n            });\n            bb.on('error', (err = 'An error occurred while parsing the form data') => {\n                const errMessage = err.message || err.toString();\n                reject(new TypeError(errMessage, err.cause));\n            });\n            _body?.readable.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = Buffer.concat(chunks);\n            return this._buffer;\n        });\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const buffer = Buffer.from(bodyInit);\n        const contentLength = buffer.byteLength;\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (Buffer.isBuffer(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => bodyInit,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return bodyInit.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null;\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!***********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGlDQUFpQztBQUNqQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyxxSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGtCQUFrQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Db21wcmVzc2lvblN0cmVhbS5qcz9lMDhjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV96bGliXzEgPSByZXF1aXJlKFwibm9kZTp6bGliXCIpO1xuY29uc3QgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbENvbXByZXNzaW9uU3RyZWFtIGV4dGVuZHMgVHJhbnNmb3JtU3RyZWFtX2pzXzEuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHN0YXRpYyBzdXBwb3J0ZWRGb3JtYXRzID0gZ2xvYmFsVGhpcy5wcm9jZXNzPy52ZXJzaW9uPy5zdGFydHNXaXRoKCd2MicpXG4gICAgICAgID8gWydnemlwJywgJ2RlZmxhdGUnLCAnYnInXVxuICAgICAgICA6IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2RlZmxhdGUtcmF3JywgJ2JyJ107XG4gICAgY29uc3RydWN0b3IoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgc3dpdGNoIChjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICAgICAgY2FzZSAneC1nemlwJzpcbiAgICAgICAgICAgIGNhc2UgJ2d6aXAnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVHemlwKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3gtZGVmbGF0ZSc6XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlRGVmbGF0ZSkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlLXJhdyc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZURlZmxhdGVSYXcpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYnInOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVCcm90bGlDb21wcmVzcykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgY29tcHJlc3Npb24gZm9ybWF0OiAke2NvbXByZXNzaW9uRm9ybWF0fWApO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtID0gUG9ueWZpbGxDb21wcmVzc2lvblN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUNBQW1DO0FBQ25DLG9CQUFvQixtQkFBTyxDQUFDLDRCQUFXO0FBQ3ZDLDZCQUE2QixtQkFBTyxDQUFDLHFJQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0Usa0JBQWtCO0FBQzFGO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0RlY29tcHJlc3Npb25TdHJlYW0uanM/MjhiMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV96bGliXzEgPSByZXF1aXJlKFwibm9kZTp6bGliXCIpO1xuY29uc3QgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgc3RhdGljIHN1cHBvcnRlZEZvcm1hdHMgPSBnbG9iYWxUaGlzLnByb2Nlc3M/LnZlcnNpb24/LnN0YXJ0c1dpdGgoJ3YyJylcbiAgICAgICAgPyBbJ2d6aXAnLCAnZGVmbGF0ZScsICdiciddXG4gICAgICAgIDogWydnemlwJywgJ2RlZmxhdGUnLCAnZGVmbGF0ZS1yYXcnLCAnYnInXTtcbiAgICBjb25zdHJ1Y3Rvcihjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICBzd2l0Y2ggKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlICd4LWd6aXAnOlxuICAgICAgICAgICAgY2FzZSAnZ3ppcCc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUd1bnppcCkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICd4LWRlZmxhdGUnOlxuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZSc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUluZmxhdGUpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZS1yYXcnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVJbmZsYXRlUmF3KSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2JyJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlQnJvdGxpRGVjb21wcmVzcykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFVuc3VwcG9ydGVkIGNvbXByZXNzaW9uIGZvcm1hdDogJyR7Y29tcHJlc3Npb25Gb3JtYXR9J2ApO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gPSBQb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0ZpbGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Qsb0JBQW9CO0FBQ3BCLGtCQUFrQixtQkFBTyxDQUFDLCtHQUFXO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRmlsZS5qcz9iNGJkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEZpbGUgPSB2b2lkIDA7XG5jb25zdCBCbG9iX2pzXzEgPSByZXF1aXJlKFwiLi9CbG9iLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxGaWxlIGV4dGVuZHMgQmxvYl9qc18xLlBvbnlmaWxsQmxvYiB7XG4gICAgbmFtZTtcbiAgICBsYXN0TW9kaWZpZWQ7XG4gICAgY29uc3RydWN0b3IoZmlsZUJpdHMsIG5hbWUsIG9wdGlvbnMpIHtcbiAgICAgICAgc3VwZXIoZmlsZUJpdHMsIG9wdGlvbnMpO1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgICAgICB0aGlzLmxhc3RNb2RpZmllZCA9IG9wdGlvbnM/Lmxhc3RNb2RpZmllZCB8fCBEYXRlLm5vdygpO1xuICAgIH1cbiAgICB3ZWJraXRSZWxhdGl2ZVBhdGggPSAnJztcbn1cbmV4cG9ydHMuUG9ueWZpbGxGaWxlID0gUG9ueWZpbGxGaWxlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    *[Symbol.iterator]() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return this[Symbol.iterator]();\n    }\n    keys() {\n        return this.map.keys();\n    }\n    *values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    const entries = [];\n    let sentInitialHeader = false;\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: controller => {\n            formData.forEach((value, key) => {\n                if (!sentInitialHeader) {\n                    controller.enqueue(Buffer.from(`--${boundary}\\r\\n`));\n                    sentInitialHeader = true;\n                }\n                entries.push([key, value]);\n            });\n            if (!sentInitialHeader) {\n                controller.enqueue(Buffer.from(`--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n        pull: async (controller) => {\n            const entry = entries.shift();\n            if (entry) {\n                const [key, value] = entry;\n                if (typeof value === 'string') {\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                    controller.enqueue(Buffer.from(value));\n                }\n                else {\n                    let filenamePart = '';\n                    if (value.name) {\n                        filenamePart = `; filename=\"${value.name}\"`;\n                    }\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                    controller.enqueue(Buffer.from(`Content-Type: ${value.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                    const entryStream = value.stream();\n                    for await (const chunk of entryStream) {\n                        controller.enqueue(chunk);\n                    }\n                }\n                if (entries.length === 0) {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                    controller.close();\n                }\n                else {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n                }\n            }\n            else {\n                controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0Zvcm1EYXRhLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4Qiw2QkFBNkI7QUFDN0IsNEJBQTRCLG1CQUFPLENBQUMsbUlBQXFCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0Esb0RBQW9ELFNBQVM7QUFDN0Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0ZBQW9GLFFBQVEsSUFBSTtBQUNoRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLFlBQVksV0FBVztBQUNqRTtBQUNBLG9GQUFvRixRQUFRLElBQUksR0FBRyxhQUFhO0FBQ2hILG9FQUFvRSx5Q0FBeUM7QUFDN0c7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFNBQVM7QUFDckU7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELFNBQVM7QUFDakU7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Gb3JtRGF0YS5qcz83YzQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbEZvcm1EYXRhID0gdm9pZCAwO1xuZXhwb3J0cy5nZXRTdHJlYW1Gcm9tRm9ybURhdGEgPSBnZXRTdHJlYW1Gcm9tRm9ybURhdGE7XG5jb25zdCBSZWFkYWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vUmVhZGFibGVTdHJlYW0uanNcIik7XG5jbGFzcyBQb255ZmlsbEZvcm1EYXRhIHtcbiAgICBtYXAgPSBuZXcgTWFwKCk7XG4gICAgYXBwZW5kKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSkge1xuICAgICAgICBsZXQgdmFsdWVzID0gdGhpcy5tYXAuZ2V0KG5hbWUpO1xuICAgICAgICBpZiAoIXZhbHVlcykge1xuICAgICAgICAgICAgdmFsdWVzID0gW107XG4gICAgICAgICAgICB0aGlzLm1hcC5zZXQobmFtZSwgdmFsdWVzKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBlbnRyeSA9IGlzQmxvYih2YWx1ZSlcbiAgICAgICAgICAgID8gZ2V0Tm9ybWFsaXplZEZpbGUobmFtZSwgdmFsdWUsIGZpbGVOYW1lKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICAgICAgdmFsdWVzLnB1c2goZW50cnkpO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICB0aGlzLm1hcC5kZWxldGUobmFtZSk7XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlcyA9IHRoaXMubWFwLmdldChuYW1lKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlcyA/IHZhbHVlc1swXSA6IG51bGw7XG4gICAgfVxuICAgIGdldEFsbChuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5nZXQobmFtZSkgfHwgW107XG4gICAgfVxuICAgIGhhcyhuYW1lKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5oYXMobmFtZSk7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSwgZmlsZU5hbWUpIHtcbiAgICAgICAgY29uc3QgZW50cnkgPSBpc0Jsb2IodmFsdWUpXG4gICAgICAgICAgICA/IGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIHZhbHVlLCBmaWxlTmFtZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgICAgIHRoaXMubWFwLnNldChuYW1lLCBbZW50cnldKTtcbiAgICB9XG4gICAgKltTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlc10gb2YgdGhpcy5tYXApIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgW2tleSwgdmFsdWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVudHJpZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICB9XG4gICAga2V5cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmtleXMoKTtcbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCB2YWx1ZXMgb2YgdGhpcy5tYXAudmFsdWVzKCkpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yRWFjaChjYWxsYmFjaykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0aGlzKSB7XG4gICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxGb3JtRGF0YSA9IFBvbnlmaWxsRm9ybURhdGE7XG5mdW5jdGlvbiBnZXRTdHJlYW1Gcm9tRm9ybURhdGEoZm9ybURhdGEsIGJvdW5kYXJ5ID0gJy0tLScpIHtcbiAgICBjb25zdCBlbnRyaWVzID0gW107XG4gICAgbGV0IHNlbnRJbml0aWFsSGVhZGVyID0gZmFsc2U7XG4gICAgcmV0dXJuIG5ldyBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICBzdGFydDogY29udHJvbGxlciA9PiB7XG4gICAgICAgICAgICBmb3JtRGF0YS5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFzZW50SW5pdGlhbEhlYWRlcikge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYC0tJHtib3VuZGFyeX1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIHNlbnRJbml0aWFsSGVhZGVyID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZW50cmllcy5wdXNoKFtrZXksIHZhbHVlXSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGlmICghc2VudEluaXRpYWxIZWFkZXIpIHtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYC0tJHtib3VuZGFyeX0tLVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIHB1bGw6IGFzeW5jIChjb250cm9sbGVyKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbnRyeSA9IGVudHJpZXMuc2hpZnQoKTtcbiAgICAgICAgICAgIGlmIChlbnRyeSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IFtrZXksIHZhbHVlXSA9IGVudHJ5O1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtrZXl9XCJcXHJcXG5cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbSh2YWx1ZSkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZpbGVuYW1lUGFydCA9ICcnO1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZW5hbWVQYXJ0ID0gYDsgZmlsZW5hbWU9XCIke3ZhbHVlLm5hbWV9XCJgO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1EaXNwb3NpdGlvbjogZm9ybS1kYXRhOyBuYW1lPVwiJHtrZXl9XCIke2ZpbGVuYW1lUGFydH1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgQ29udGVudC1UeXBlOiAke3ZhbHVlLnR5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSd9XFxyXFxuXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbnRyeVN0cmVhbSA9IHZhbHVlLnN0cmVhbSgpO1xuICAgICAgICAgICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIGVudHJ5U3RyZWFtKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoY2h1bmspO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChlbnRyaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYFxcclxcbi0tJHtib3VuZGFyeX0tLVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBcXHJcXG4tLSR7Ym91bmRhcnl9XFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgXFxyXFxuLS0ke2JvdW5kYXJ5fS0tXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldE5vcm1hbGl6ZWRGaWxlKG5hbWUsIGJsb2IsIGZpbGVOYW1lKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGJsb2IsICduYW1lJywge1xuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgIHZhbHVlOiBmaWxlTmFtZSB8fCBibG9iLm5hbWUgfHwgbmFtZSxcbiAgICB9KTtcbiAgICByZXR1cm4gYmxvYjtcbn1cbmZ1bmN0aW9uIGlzQmxvYih2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uYXJyYXlCdWZmZXIgIT0gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies = [];\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie') {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            return this.headersInit.find(header => header[0].toLowerCase() === normalized)?.[1] || null;\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach(([key, value]) => {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(normalizedKey, value);\n                    });\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    has(name) {\n        if (name === 'set-cookie') {\n            return this._setCookies.length > 0;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *keys() {\n        if (this._setCookies.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    *values() {\n        yield* this._setCookies;\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    *entries() {\n        yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    getSetCookie() {\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies;\n            }\n            else {\n                record[key] = value.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0hlYWRlcnMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLHFCQUFxQjtBQUNyQixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWMsSUFBSSxNQUFNO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwwQkFBMEIsNEJBQTRCO0FBQ3REO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9IZWFkZXJzLmpzPzc0MGYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsSGVhZGVycyA9IHZvaWQgMDtcbmV4cG9ydHMuaXNIZWFkZXJzTGlrZSA9IGlzSGVhZGVyc0xpa2U7XG5jb25zdCB1dGlsXzEgPSByZXF1aXJlKFwidXRpbFwiKTtcbmZ1bmN0aW9uIGlzSGVhZGVyc0xpa2UoaGVhZGVycykge1xuICAgIHJldHVybiBoZWFkZXJzPy5nZXQgJiYgaGVhZGVycz8uZm9yRWFjaDtcbn1cbmNsYXNzIFBvbnlmaWxsSGVhZGVycyB7XG4gICAgaGVhZGVyc0luaXQ7XG4gICAgX21hcDtcbiAgICBvYmplY3ROb3JtYWxpemVkS2V5c09mSGVhZGVyc0luaXQgPSBbXTtcbiAgICBvYmplY3RPcmlnaW5hbEtleXNPZkhlYWRlcnNJbml0ID0gW107XG4gICAgX3NldENvb2tpZXMgPSBbXTtcbiAgICBjb25zdHJ1Y3RvcihoZWFkZXJzSW5pdCkge1xuICAgICAgICB0aGlzLmhlYWRlcnNJbml0ID0gaGVhZGVyc0luaXQ7XG4gICAgfVxuICAgIC8vIHBlcmY6IHdlIGRvbid0IG5lZWQgdG8gYnVpbGQgYHRoaXMubWFwYCBmb3IgUmVxdWVzdHMsIGFzIHdlIGNhbiBhY2Nlc3MgdGhlIGhlYWRlcnMgZGlyZWN0bHlcbiAgICBfZ2V0KGtleSkge1xuICAgICAgICBjb25zdCBub3JtYWxpemVkID0ga2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChub3JtYWxpemVkID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zZXRDb29raWVzLmpvaW4oJywgJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gSWYgdGhlIG1hcCBpcyBidWlsdCwgcmV1c2UgaXRcbiAgICAgICAgaWYgKHRoaXMuX21hcCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuX21hcC5nZXQobm9ybWFsaXplZCkgfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGUgbWFwIGlzIG5vdCBidWlsdCwgdHJ5IHRvIGdldCB0aGUgdmFsdWUgZnJvbSB0aGUgdGhpcy5oZWFkZXJzSW5pdFxuICAgICAgICBpZiAodGhpcy5oZWFkZXJzSW5pdCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaGVhZGVyc0luaXQuZmluZChoZWFkZXIgPT4gaGVhZGVyWzBdLnRvTG93ZXJDYXNlKCkgPT09IG5vcm1hbGl6ZWQpPy5bMV0gfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc0hlYWRlcnNMaWtlKHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzSW5pdC5nZXQobm9ybWFsaXplZCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBpbml0VmFsdWUgPSB0aGlzLmhlYWRlcnNJbml0W2tleV0gfHwgdGhpcy5oZWFkZXJzSW5pdFtub3JtYWxpemVkXTtcbiAgICAgICAgICAgIGlmIChpbml0VmFsdWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBpbml0VmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoIXRoaXMub2JqZWN0Tm9ybWFsaXplZEtleXNPZkhlYWRlcnNJbml0Lmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIE9iamVjdC5rZXlzKHRoaXMuaGVhZGVyc0luaXQpLmZvckVhY2goayA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMub2JqZWN0T3JpZ2luYWxLZXlzT2ZIZWFkZXJzSW5pdC5wdXNoKGspO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLm9iamVjdE5vcm1hbGl6ZWRLZXlzT2ZIZWFkZXJzSW5pdC5wdXNoKGsudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IHRoaXMub2JqZWN0Tm9ybWFsaXplZEtleXNPZkhlYWRlcnNJbml0LmluZGV4T2Yobm9ybWFsaXplZCk7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbEtleSA9IHRoaXMub2JqZWN0T3JpZ2luYWxLZXlzT2ZIZWFkZXJzSW5pdFtpbmRleF07XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5oZWFkZXJzSW5pdFtvcmlnaW5hbEtleV07XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gcGVyZjogQnVpbGQgdGhlIG1hcCBvZiBoZWFkZXJzIGxhemlseSwgb25seSB3aGVuIHdlIG5lZWQgdG8gYWNjZXNzIGFsbCBoZWFkZXJzIG9yIHdyaXRlIHRvIGl0LlxuICAgIC8vIEkgY291bGQgZG8gYSBnZXR0ZXIgaGVyZSwgYnV0IEknbSB0b28gbGF6eSB0byB0eXBlIGBnZXR0ZXJgLlxuICAgIGdldE1hcCgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9tYXApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmhlYWRlcnNJbml0ICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVhZGVyc0luaXQuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBub3JtYWxpemVkS2V5ID0ga2V5LnRvTG93ZXJDYXNlKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9ybWFsaXplZEtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fc2V0Q29va2llcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAuc2V0KG5vcm1hbGl6ZWRLZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlzSGVhZGVyc0xpa2UodGhpcy5oZWFkZXJzSW5pdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFwID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhlYWRlcnNJbml0LmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3NldENvb2tpZXMucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFwLnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9tYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaW5pdEtleSBpbiB0aGlzLmhlYWRlcnNJbml0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpbml0VmFsdWUgPSB0aGlzLmhlYWRlcnNJbml0W2luaXRLZXldO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGluaXRWYWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgbm9ybWFsaXplZEtleSA9IGluaXRLZXkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9ybWFsaXplZEtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3NldENvb2tpZXMucHVzaChpbml0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWFwLnNldChub3JtYWxpemVkS2V5LCBpbml0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbWFwID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9tYXA7XG4gICAgfVxuICAgIGFwcGVuZChuYW1lLCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBrZXkgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICAgICAgdGhpcy5fc2V0Q29va2llcy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBleGlzdGluZ1ZhbHVlID0gdGhpcy5nZXRNYXAoKS5nZXQoa2V5KTtcbiAgICAgICAgY29uc3QgZmluYWxWYWx1ZSA9IGV4aXN0aW5nVmFsdWUgPyBgJHtleGlzdGluZ1ZhbHVlfSwgJHt2YWx1ZX1gIDogdmFsdWU7XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuc2V0KGtleSwgZmluYWxWYWx1ZSk7XG4gICAgfVxuICAgIGdldChuYW1lKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5fZ2V0KG5hbWUpO1xuICAgICAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBoYXMobmFtZSkge1xuICAgICAgICBpZiAobmFtZSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fc2V0Q29va2llcy5sZW5ndGggPiAwO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAhIXRoaXMuX2dldChuYW1lKTsgLy8gd2UgbWlnaHQgbmVlZCB0byBjaGVjayBpZiBoZWFkZXIgZXhpc3RzIGFuZCBub3QganVzdCBjaGVjayBpZiBpdCdzIG5vdCBudWxsYWJsZVxuICAgIH1cbiAgICBzZXQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3Qga2V5ID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICBpZiAoa2V5ID09PSAnc2V0LWNvb2tpZScpIHtcbiAgICAgICAgICAgIHRoaXMuX3NldENvb2tpZXMgPSBbdmFsdWVdO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuc2V0KGtleSwgdmFsdWUpO1xuICAgIH1cbiAgICBkZWxldGUobmFtZSkge1xuICAgICAgICBjb25zdCBrZXkgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICAgICAgdGhpcy5fc2V0Q29va2llcyA9IFtdO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuZGVsZXRlKGtleSk7XG4gICAgfVxuICAgIGZvckVhY2goY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5fc2V0Q29va2llcy5mb3JFYWNoKHNldENvb2tpZSA9PiB7XG4gICAgICAgICAgICBjYWxsYmFjayhzZXRDb29raWUsICdzZXQtY29va2llJywgdGhpcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXRoaXMuX21hcCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaGVhZGVyc0luaXQpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLmhlYWRlcnNJbml0LmZvckVhY2goKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpc0hlYWRlcnNMaWtlKHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuaGVhZGVyc0luaXQuZm9yRWFjaChjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgT2JqZWN0LmVudHJpZXModGhpcy5oZWFkZXJzSW5pdCkuZm9yRWFjaCgoW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuZ2V0TWFwKCkuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgY2FsbGJhY2sodmFsdWUsIGtleSwgdGhpcyk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAqa2V5cygpIHtcbiAgICAgICAgaWYgKHRoaXMuX3NldENvb2tpZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB5aWVsZCAnc2V0LWNvb2tpZSc7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLl9tYXApIHtcbiAgICAgICAgICAgIGlmICh0aGlzLmhlYWRlcnNJbml0KSB7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGhpcy5oZWFkZXJzSW5pdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQqIHRoaXMuaGVhZGVyc0luaXQubWFwKChba2V5XSkgPT4ga2V5KVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGlzSGVhZGVyc0xpa2UodGhpcy5oZWFkZXJzSW5pdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgeWllbGQqIHRoaXMuaGVhZGVyc0luaXQua2V5cygpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHlpZWxkKiBPYmplY3Qua2V5cyh0aGlzLmhlYWRlcnNJbml0KVtTeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHlpZWxkKiB0aGlzLmdldE1hcCgpLmtleXMoKTtcbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgeWllbGQqIHRoaXMuX3NldENvb2tpZXM7XG4gICAgICAgIGlmICghdGhpcy5fbWFwKSB7XG4gICAgICAgICAgICBpZiAodGhpcy5oZWFkZXJzSW5pdCkge1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkKiB0aGlzLmhlYWRlcnNJbml0Lm1hcCgoWywgdmFsdWVdKSA9PiB2YWx1ZSlbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpc0hlYWRlcnNMaWtlKHRoaXMuaGVhZGVyc0luaXQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkKiB0aGlzLmhlYWRlcnNJbml0LnZhbHVlcygpO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHlpZWxkKiBPYmplY3QudmFsdWVzKHRoaXMuaGVhZGVyc0luaXQpW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgeWllbGQqIHRoaXMuZ2V0TWFwKCkudmFsdWVzKCk7XG4gICAgfVxuICAgICplbnRyaWVzKCkge1xuICAgICAgICB5aWVsZCogdGhpcy5fc2V0Q29va2llcy5tYXAoY29va2llID0+IFsnc2V0LWNvb2tpZScsIGNvb2tpZV0pO1xuICAgICAgICBpZiAoIXRoaXMuX21hcCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuaGVhZGVyc0luaXQpIHtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCogdGhpcy5oZWFkZXJzSW5pdDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaXNIZWFkZXJzTGlrZSh0aGlzLmhlYWRlcnNJbml0KSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCogdGhpcy5oZWFkZXJzSW5pdC5lbnRyaWVzKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgeWllbGQqIE9iamVjdC5lbnRyaWVzKHRoaXMuaGVhZGVyc0luaXQpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB5aWVsZCogdGhpcy5nZXRNYXAoKS5lbnRyaWVzKCk7XG4gICAgfVxuICAgIGdldFNldENvb2tpZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3NldENvb2tpZXM7XG4gICAgfVxuICAgIFtTeW1ib2wuaXRlcmF0b3JdKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5lbnRyaWVzKCk7XG4gICAgfVxuICAgIFtTeW1ib2wuZm9yKCdub2RlanMudXRpbC5pbnNwZWN0LmN1c3RvbScpXSgpIHtcbiAgICAgICAgY29uc3QgcmVjb3JkID0ge307XG4gICAgICAgIHRoaXMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3NldC1jb29raWUnKSB7XG4gICAgICAgICAgICAgICAgcmVjb3JkWydzZXQtY29va2llJ10gPSB0aGlzLl9zZXRDb29raWVzO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVjb3JkW2tleV0gPSB2YWx1ZS5pbmNsdWRlcygnLCcpID8gdmFsdWUuc3BsaXQoJywnKS5tYXAoZWwgPT4gZWwudHJpbSgpKSA6IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGBIZWFkZXJzICR7KDAsIHV0aWxfMS5pbnNwZWN0KShyZWNvcmQpfWA7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbEhlYWRlcnMgPSBQb255ZmlsbEhlYWRlcnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            this.readable = new stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return Promise.resolve().then(async () => {\n                        if (!started) {\n                            const controller = createController(desiredSize, this);\n                            started = true;\n                            await underlyingSource?.start?.(controller);\n                            controller._flush();\n                            if (controller._closed) {\n                                return;\n                            }\n                        }\n                        const controller = createController(desiredSize, this);\n                        await underlyingSource?.pull?.(controller);\n                        controller._flush();\n                        ongoing = false;\n                    });\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        return new Promise(resolve => this.readable.once('end', resolve));\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)(undefined);\n            },\n            closed: new Promise((resolve, reject) => {\n                this.readable.once('end', resolve);\n                this.readable.once('error', reject);\n            }),\n        };\n    }\n    [Symbol.asyncIterator]() {\n        return this.readable[Symbol.asyncIterator]();\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return new Promise((resolve, reject) => {\n                this.readable.pipe(destination.writable);\n                destination.writable.once('finish', resolve);\n                destination.writable.once('error', reject);\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return Promise.resolve().then(async () => {\n                try {\n                    for await (const chunk of this) {\n                        await writer.write(chunk);\n                    }\n                    await writer.close();\n                }\n                catch (err) {\n                    await writer.abort(err);\n                }\n            });\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable);\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let url;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            url = input;\n        }\n        else if (isURL(input)) {\n            url = input.toString();\n        }\n        else if (isRequest(input)) {\n            url = input.url;\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, options);\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this._signal = requestInit?.signal;\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.url = url || '';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (this.url.startsWith('http:/') && requestInit.agent instanceof http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (this.url.startsWith('https:/') && requestInit.agent instanceof https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    url;\n    duplex;\n    agent;\n    _signal;\n    get signal() {\n        // Create a new signal only if needed\n        // Because the creation of signal is expensive\n        if (!this._signal) {\n            this._signal = new AbortController().signal;\n        }\n        return this._signal;\n    }\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsdUJBQXVCO0FBQ3ZCLGVBQWUsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixrQkFBa0IsbUJBQU8sQ0FBQywrR0FBVztBQUNyQyxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBYztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1JlcXVlc3QuanM/OWE0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxSZXF1ZXN0ID0gdm9pZCAwO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcImh0dHBcIik7XG5jb25zdCBodHRwc18xID0gcmVxdWlyZShcImh0dHBzXCIpO1xuY29uc3QgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbmNvbnN0IEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5mdW5jdGlvbiBpc1JlcXVlc3QoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXRbU3ltYm9sLnRvU3RyaW5nVGFnXSA9PT0gJ1JlcXVlc3QnO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uaHJlZiAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxSZXF1ZXN0IGV4dGVuZHMgQm9keV9qc18xLlBvbnlmaWxsQm9keSB7XG4gICAgY29uc3RydWN0b3IoaW5wdXQsIG9wdGlvbnMpIHtcbiAgICAgICAgbGV0IHVybDtcbiAgICAgICAgbGV0IGJvZHlJbml0ID0gbnVsbDtcbiAgICAgICAgbGV0IHJlcXVlc3RJbml0O1xuICAgICAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgdXJsID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNVUkwoaW5wdXQpKSB7XG4gICAgICAgICAgICB1cmwgPSBpbnB1dC50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzUmVxdWVzdChpbnB1dCkpIHtcbiAgICAgICAgICAgIHVybCA9IGlucHV0LnVybDtcbiAgICAgICAgICAgIGJvZHlJbml0ID0gaW5wdXQuYm9keTtcbiAgICAgICAgICAgIHJlcXVlc3RJbml0ID0gaW5wdXQ7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgIT0gbnVsbCkge1xuICAgICAgICAgICAgYm9keUluaXQgPSBvcHRpb25zLmJvZHkgfHwgbnVsbDtcbiAgICAgICAgICAgIHJlcXVlc3RJbml0ID0gb3B0aW9ucztcbiAgICAgICAgfVxuICAgICAgICBzdXBlcihib2R5SW5pdCwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY2FjaGUgPSByZXF1ZXN0SW5pdD8uY2FjaGUgfHwgJ2RlZmF1bHQnO1xuICAgICAgICB0aGlzLmNyZWRlbnRpYWxzID0gcmVxdWVzdEluaXQ/LmNyZWRlbnRpYWxzIHx8ICdzYW1lLW9yaWdpbic7XG4gICAgICAgIHRoaXMuaGVhZGVycyA9XG4gICAgICAgICAgICByZXF1ZXN0SW5pdD8uaGVhZGVycyAmJiAoMCwgSGVhZGVyc19qc18xLmlzSGVhZGVyc0xpa2UpKHJlcXVlc3RJbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyByZXF1ZXN0SW5pdC5oZWFkZXJzXG4gICAgICAgICAgICAgICAgOiBuZXcgSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVycyhyZXF1ZXN0SW5pdD8uaGVhZGVycyk7XG4gICAgICAgIHRoaXMuaW50ZWdyaXR5ID0gcmVxdWVzdEluaXQ/LmludGVncml0eSB8fCAnJztcbiAgICAgICAgdGhpcy5rZWVwYWxpdmUgPSByZXF1ZXN0SW5pdD8ua2VlcGFsaXZlICE9IG51bGwgPyByZXF1ZXN0SW5pdD8ua2VlcGFsaXZlIDogZmFsc2U7XG4gICAgICAgIHRoaXMubWV0aG9kID0gcmVxdWVzdEluaXQ/Lm1ldGhvZD8udG9VcHBlckNhc2UoKSB8fCAnR0VUJztcbiAgICAgICAgdGhpcy5tb2RlID0gcmVxdWVzdEluaXQ/Lm1vZGUgfHwgJ2NvcnMnO1xuICAgICAgICB0aGlzLnJlZGlyZWN0ID0gcmVxdWVzdEluaXQ/LnJlZGlyZWN0IHx8ICdmb2xsb3cnO1xuICAgICAgICB0aGlzLnJlZmVycmVyID0gcmVxdWVzdEluaXQ/LnJlZmVycmVyIHx8ICdhYm91dDpjbGllbnQnO1xuICAgICAgICB0aGlzLnJlZmVycmVyUG9saWN5ID0gcmVxdWVzdEluaXQ/LnJlZmVycmVyUG9saWN5IHx8ICduby1yZWZlcnJlcic7XG4gICAgICAgIHRoaXMuX3NpZ25hbCA9IHJlcXVlc3RJbml0Py5zaWduYWw7XG4gICAgICAgIHRoaXMuaGVhZGVyc1NlcmlhbGl6ZXIgPSByZXF1ZXN0SW5pdD8uaGVhZGVyc1NlcmlhbGl6ZXI7XG4gICAgICAgIHRoaXMuZHVwbGV4ID0gcmVxdWVzdEluaXQ/LmR1cGxleCB8fCAnaGFsZic7XG4gICAgICAgIHRoaXMudXJsID0gdXJsIHx8ICcnO1xuICAgICAgICB0aGlzLmRlc3RpbmF0aW9uID0gJ2RvY3VtZW50JztcbiAgICAgICAgdGhpcy5wcmlvcml0eSA9ICdhdXRvJztcbiAgICAgICAgaWYgKHRoaXMubWV0aG9kICE9PSAnR0VUJyAmJiB0aGlzLm1ldGhvZCAhPT0gJ0hFQUQnKSB7XG4gICAgICAgICAgICB0aGlzLmhhbmRsZUNvbnRlbnRMZW5ndGhIZWFkZXIodHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJlcXVlc3RJbml0Py5hZ2VudCAhPSBudWxsKSB7XG4gICAgICAgICAgICBpZiAocmVxdWVzdEluaXQuYWdlbnQgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy51cmwuc3RhcnRzV2l0aCgnaHR0cDovJykgJiYgcmVxdWVzdEluaXQuYWdlbnQgaW5zdGFuY2VvZiBodHRwXzEuQWdlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gcmVxdWVzdEluaXQuYWdlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnVybC5zdGFydHNXaXRoKCdodHRwczovJykgJiYgcmVxdWVzdEluaXQuYWdlbnQgaW5zdGFuY2VvZiBodHRwc18xLkFnZW50KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5hZ2VudCA9IHJlcXVlc3RJbml0LmFnZW50O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGhlYWRlcnNTZXJpYWxpemVyO1xuICAgIGNhY2hlO1xuICAgIGNyZWRlbnRpYWxzO1xuICAgIGRlc3RpbmF0aW9uO1xuICAgIGhlYWRlcnM7XG4gICAgaW50ZWdyaXR5O1xuICAgIGtlZXBhbGl2ZTtcbiAgICBtZXRob2Q7XG4gICAgbW9kZTtcbiAgICBwcmlvcml0eTtcbiAgICByZWRpcmVjdDtcbiAgICByZWZlcnJlcjtcbiAgICByZWZlcnJlclBvbGljeTtcbiAgICB1cmw7XG4gICAgZHVwbGV4O1xuICAgIGFnZW50O1xuICAgIF9zaWduYWw7XG4gICAgZ2V0IHNpZ25hbCgpIHtcbiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IHNpZ25hbCBvbmx5IGlmIG5lZWRlZFxuICAgICAgICAvLyBCZWNhdXNlIHRoZSBjcmVhdGlvbiBvZiBzaWduYWwgaXMgZXhwZW5zaXZlXG4gICAgICAgIGlmICghdGhpcy5fc2lnbmFsKSB7XG4gICAgICAgICAgICB0aGlzLl9zaWduYWwgPSBuZXcgQWJvcnRDb250cm9sbGVyKCkuc2lnbmFsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9zaWduYWw7XG4gICAgfVxuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgW1N5bWJvbC50b1N0cmluZ1RhZ10gPSAnUmVxdWVzdCc7XG59XG5leHBvcnRzLlBvbnlmaWxsUmVxdWVzdCA9IFBvbnlmaWxsUmVxdWVzdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init = {}) {\n        init.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        if (!init.headers.has('content-type')) {\n            init.headers.set('content-type', JSON_CONTENT_TYPE);\n        }\n        return new PonyfillResponse(JSON.stringify(data), init);\n    }\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1Jlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHdCQUF3QjtBQUN4QixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0Isa0JBQWtCLG1CQUFPLENBQUMsK0dBQVc7QUFDckMscUJBQXFCLG1CQUFPLENBQUMscUhBQWM7QUFDM0MsNkNBQTZDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsU0FBUztBQUNUO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvUmVzcG9uc2UuanM/YjYwMCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxSZXNwb25zZSA9IHZvaWQgMDtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCJodHRwXCIpO1xuY29uc3QgQm9keV9qc18xID0gcmVxdWlyZShcIi4vQm9keS5qc1wiKTtcbmNvbnN0IEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5jb25zdCBKU09OX0NPTlRFTlRfVFlQRSA9ICdhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PXV0Zi04JztcbmNsYXNzIFBvbnlmaWxsUmVzcG9uc2UgZXh0ZW5kcyBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5IHtcbiAgICBoZWFkZXJzO1xuICAgIGNvbnN0cnVjdG9yKGJvZHksIGluaXQpIHtcbiAgICAgICAgc3VwZXIoYm9keSB8fCBudWxsLCBpbml0KTtcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIGluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyBpbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICAgICAgICB0aGlzLnN0YXR1cyA9IGluaXQ/LnN0YXR1cyB8fCAyMDA7XG4gICAgICAgIHRoaXMuc3RhdHVzVGV4dCA9IGluaXQ/LnN0YXR1c1RleHQgfHwgaHR0cF8xLlNUQVRVU19DT0RFU1t0aGlzLnN0YXR1c10gfHwgJ09LJztcbiAgICAgICAgdGhpcy51cmwgPSBpbml0Py51cmwgfHwgJyc7XG4gICAgICAgIHRoaXMucmVkaXJlY3RlZCA9IGluaXQ/LnJlZGlyZWN0ZWQgfHwgZmFsc2U7XG4gICAgICAgIHRoaXMudHlwZSA9IGluaXQ/LnR5cGUgfHwgJ2RlZmF1bHQnO1xuICAgICAgICB0aGlzLmhhbmRsZUNvbnRlbnRMZW5ndGhIZWFkZXIoKTtcbiAgICB9XG4gICAgZ2V0IG9rKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5zdGF0dXMgPj0gMjAwICYmIHRoaXMuc3RhdHVzIDwgMzAwO1xuICAgIH1cbiAgICBzdGF0dXM7XG4gICAgc3RhdHVzVGV4dDtcbiAgICB1cmw7XG4gICAgcmVkaXJlY3RlZDtcbiAgICB0eXBlO1xuICAgIGNsb25lKCkge1xuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG4gICAgc3RhdGljIGVycm9yKCkge1xuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgc3RhdHVzOiA1MDAsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyByZWRpcmVjdCh1cmwsIHN0YXR1cyA9IDMwMikge1xuICAgICAgICBpZiAoc3RhdHVzIDwgMzAwIHx8IHN0YXR1cyA+IDM5OSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ0ludmFsaWQgc3RhdHVzIGNvZGUnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IFBvbnlmaWxsUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgIGxvY2F0aW9uOiB1cmwsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgc3RhdHVzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIGpzb24oZGF0YSwgaW5pdCA9IHt9KSB7XG4gICAgICAgIGluaXQuaGVhZGVycyA9XG4gICAgICAgICAgICBpbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkoaW5pdC5oZWFkZXJzKVxuICAgICAgICAgICAgICAgID8gaW5pdC5oZWFkZXJzXG4gICAgICAgICAgICAgICAgOiBuZXcgSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVycyhpbml0Py5oZWFkZXJzKTtcbiAgICAgICAgaWYgKCFpbml0LmhlYWRlcnMuaGFzKCdjb250ZW50LXR5cGUnKSkge1xuICAgICAgICAgICAgaW5pdC5oZWFkZXJzLnNldCgnY29udGVudC10eXBlJywgSlNPTl9DT05URU5UX1RZUEUpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShKU09OLnN0cmluZ2lmeShkYXRhKSwgaW5pdCk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFJlc3BvbnNlID0gUG9ueWZpbGxSZXNwb25zZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRywyQkFBMkI7QUFDekQsb0JBQW9CO0FBQ3BCLG1CQUFtQixtQkFBTyxDQUFDLGlIQUFZO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkI7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RleHRFbmNvZGVyRGVjb2Rlci5qcz85ZDljIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyID0gZXhwb3J0cy5Qb255ZmlsbFRleHRFbmNvZGVyID0gdm9pZCAwO1xuZXhwb3J0cy5Qb255ZmlsbEJ0b2EgPSBQb255ZmlsbEJ0b2E7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jbGFzcyBQb255ZmlsbFRleHRFbmNvZGVyIHtcbiAgICBlbmNvZGluZztcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZyA9ICd1dGYtOCcpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICAgIH1cbiAgICBlbmNvZGUoaW5wdXQpIHtcbiAgICAgICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LCB0aGlzLmVuY29kaW5nKTtcbiAgICB9XG4gICAgZW5jb2RlSW50byhzb3VyY2UsIGRlc3RpbmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IHRoaXMuZW5jb2RlKHNvdXJjZSk7XG4gICAgICAgIGNvbnN0IGNvcGllZCA9IGJ1ZmZlci5jb3B5KGRlc3RpbmF0aW9uKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHJlYWQ6IGNvcGllZCxcbiAgICAgICAgICAgIHdyaXR0ZW46IGNvcGllZCxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXIgPSBQb255ZmlsbFRleHRFbmNvZGVyO1xuY2xhc3MgUG9ueWZpbGxUZXh0RGVjb2RlciB7XG4gICAgZW5jb2Rpbmc7XG4gICAgZmF0YWwgPSBmYWxzZTtcbiAgICBpZ25vcmVCT00gPSBmYWxzZTtcbiAgICBjb25zdHJ1Y3RvcihlbmNvZGluZyA9ICd1dGYtOCcsIG9wdGlvbnMpIHtcbiAgICAgICAgdGhpcy5lbmNvZGluZyA9IGVuY29kaW5nO1xuICAgICAgICBpZiAob3B0aW9ucykge1xuICAgICAgICAgICAgdGhpcy5mYXRhbCA9IG9wdGlvbnMuZmF0YWwgfHwgZmFsc2U7XG4gICAgICAgICAgICB0aGlzLmlnbm9yZUJPTSA9IG9wdGlvbnMuaWdub3JlQk9NIHx8IGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRlY29kZShpbnB1dCkge1xuICAgICAgICBpZiAoQnVmZmVyLmlzQnVmZmVyKGlucHV0KSkge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0LnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICgoMCwgdXRpbHNfanNfMS5pc0FycmF5QnVmZmVyVmlldykoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQuYnVmZmVyLCBpbnB1dC5ieXRlT2Zmc2V0LCBpbnB1dC5ieXRlTGVuZ3RoKS50b1N0cmluZyh0aGlzLmVuY29kaW5nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUZXh0RGVjb2RlciA9IFBvbnlmaWxsVGV4dERlY29kZXI7XG5mdW5jdGlvbiBQb255ZmlsbEJ0b2EoaW5wdXQpIHtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQsICdiaW5hcnknKS50b1N0cmluZygnYmFzZTY0Jyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    transform.end();\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1RyYW5zZm9ybVN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0Isc0JBQXNCLG1CQUFPLENBQUMsZ0NBQWE7QUFDM0MsNEJBQTRCLG1CQUFPLENBQUMsbUlBQXFCO0FBQ3pELDRCQUE0QixtQkFBTyxDQUFDLG1JQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVHJhbnNmb3JtU3RyZWFtLmpzP2ExYWIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtID0gdm9pZCAwO1xuY29uc3Qgbm9kZV9zdHJlYW1fMSA9IHJlcXVpcmUoXCJub2RlOnN0cmVhbVwiKTtcbmNvbnN0IFJlYWRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9SZWFkYWJsZVN0cmVhbS5qc1wiKTtcbmNvbnN0IFdyaXRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9Xcml0YWJsZVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICB0cmFuc2Zvcm07XG4gICAgd3JpdGFibGU7XG4gICAgcmVhZGFibGU7XG4gICAgY29uc3RydWN0b3IodHJhbnNmb3JtZXIpIHtcbiAgICAgICAgaWYgKHRyYW5zZm9ybWVyIGluc3RhbmNlb2Ygbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0pIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtZXI7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHJhbnNmb3JtZXIpIHtcbiAgICAgICAgICAgIGNvbnN0IGNvbnRyb2xsZXIgPSB7XG4gICAgICAgICAgICAgICAgZW5xdWV1ZShjaHVuaykge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0ucHVzaChjaHVuayk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBlcnJvcihyZWFzb24pIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLmRlc3Ryb3kocmVhc29uKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHRlcm1pbmF0ZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtLmVuZCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgZ2V0IGRlc2lyZWRTaXplKCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJhbnNmb3JtLndyaXRhYmxlTGVuZ3RoO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtID0gbmV3IG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKHtcbiAgICAgICAgICAgICAgICByZWFkKCkgeyB9LFxuICAgICAgICAgICAgICAgIHdyaXRlKGNodW5rLCBfZW5jb2RpbmcsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0cmFuc2Zvcm1lci50cmFuc2Zvcm0/LihjaHVuaywgY29udHJvbGxlcik7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgUHJvbWlzZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBlcnIgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBmaW5hbChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdHJhbnNmb3JtZXIuZmx1c2g/Lihjb250cm9sbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnRyYW5zZm9ybSA9IHRyYW5zZm9ybTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gbmV3IG5vZGVfc3RyZWFtXzEuVHJhbnNmb3JtKCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy53cml0YWJsZSA9IG5ldyBXcml0YWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsV3JpdGFibGVTdHJlYW0odGhpcy50cmFuc2Zvcm0pO1xuICAgICAgICB0aGlzLnJlYWRhYmxlID0gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSA9IFBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nconst fast_url_parser_1 = tslib_1.__importDefault(__webpack_require__(/*! @kamilkisiela/fast-url-parser */ \"(ssr)/../node_modules/@kamilkisiela/fast-url-parser/src/urlparser.js\"));\nconst URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nfast_url_parser_1.default.queryString = fast_querystring_1.default;\nclass PonyfillURL extends fast_url_parser_1.default {\n    constructor(url, base) {\n        super();\n        if (url.startsWith('data:')) {\n            this.protocol = 'data:';\n            this.pathname = url.slice('data:'.length);\n            return;\n        }\n        this.parse(url, false);\n        if (base) {\n            const baseParsed = typeof base === 'string' ? new PonyfillURL(base) : base;\n            this.protocol = this.protocol || baseParsed.protocol;\n            this.host = this.host || baseParsed.host;\n            this.pathname = this.pathname || baseParsed.pathname;\n        }\n    }\n    get origin() {\n        return `${this.protocol}//${this.host}`;\n    }\n    _searchParams;\n    get searchParams() {\n        if (!this._searchParams) {\n            this._searchParams = new URLSearchParams_js_1.PonyfillURLSearchParams(this.query);\n        }\n        return this._searchParams;\n    }\n    get username() {\n        return this.auth?.split(':')[0] || '';\n    }\n    set username(value) {\n        this.auth = `${value}:${this.password}`;\n    }\n    get password() {\n        return this.auth?.split(':')[1] || '';\n    }\n    set password(value) {\n        this.auth = `${this.username}:${value}`;\n    }\n    toString() {\n        return this.format();\n    }\n    toJSON() {\n        return this.toString();\n    }\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static resolveObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            URL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || (0, buffer_1.resolveObjectURL)(url));\n    }\n}\nexports.PonyfillURL = PonyfillURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxtQkFBbUI7QUFDbkIsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQU87QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsc0JBQVE7QUFDakMsbURBQW1ELG1CQUFPLENBQUMsNkVBQWtCO0FBQzdFLGtEQUFrRCxtQkFBTyxDQUFDLDJHQUErQjtBQUN6Riw2QkFBNkIsbUJBQU8sQ0FBQyxxSUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGNBQWMsSUFBSSxVQUFVO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixNQUFNLEdBQUcsY0FBYztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGNBQWMsR0FBRyxNQUFNO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQywyQkFBMkI7QUFDdEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVVJMLmpzP2JjZTciXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVVJMID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGJ1ZmZlcl8xID0gcmVxdWlyZShcImJ1ZmZlclwiKTtcbmNvbnN0IGNyeXB0b18xID0gcmVxdWlyZShcImNyeXB0b1wiKTtcbmNvbnN0IGZhc3RfcXVlcnlzdHJpbmdfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJmYXN0LXF1ZXJ5c3RyaW5nXCIpKTtcbmNvbnN0IGZhc3RfdXJsX3BhcnNlcl8xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIkBrYW1pbGtpc2llbGEvZmFzdC11cmwtcGFyc2VyXCIpKTtcbmNvbnN0IFVSTFNlYXJjaFBhcmFtc19qc18xID0gcmVxdWlyZShcIi4vVVJMU2VhcmNoUGFyYW1zLmpzXCIpO1xuZmFzdF91cmxfcGFyc2VyXzEuZGVmYXVsdC5xdWVyeVN0cmluZyA9IGZhc3RfcXVlcnlzdHJpbmdfMS5kZWZhdWx0O1xuY2xhc3MgUG9ueWZpbGxVUkwgZXh0ZW5kcyBmYXN0X3VybF9wYXJzZXJfMS5kZWZhdWx0IHtcbiAgICBjb25zdHJ1Y3Rvcih1cmwsIGJhc2UpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgaWYgKHVybC5zdGFydHNXaXRoKCdkYXRhOicpKSB7XG4gICAgICAgICAgICB0aGlzLnByb3RvY29sID0gJ2RhdGE6JztcbiAgICAgICAgICAgIHRoaXMucGF0aG5hbWUgPSB1cmwuc2xpY2UoJ2RhdGE6Jy5sZW5ndGgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFyc2UodXJsLCBmYWxzZSk7XG4gICAgICAgIGlmIChiYXNlKSB7XG4gICAgICAgICAgICBjb25zdCBiYXNlUGFyc2VkID0gdHlwZW9mIGJhc2UgPT09ICdzdHJpbmcnID8gbmV3IFBvbnlmaWxsVVJMKGJhc2UpIDogYmFzZTtcbiAgICAgICAgICAgIHRoaXMucHJvdG9jb2wgPSB0aGlzLnByb3RvY29sIHx8IGJhc2VQYXJzZWQucHJvdG9jb2w7XG4gICAgICAgICAgICB0aGlzLmhvc3QgPSB0aGlzLmhvc3QgfHwgYmFzZVBhcnNlZC5ob3N0O1xuICAgICAgICAgICAgdGhpcy5wYXRobmFtZSA9IHRoaXMucGF0aG5hbWUgfHwgYmFzZVBhcnNlZC5wYXRobmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgb3JpZ2luKCkge1xuICAgICAgICByZXR1cm4gYCR7dGhpcy5wcm90b2NvbH0vLyR7dGhpcy5ob3N0fWA7XG4gICAgfVxuICAgIF9zZWFyY2hQYXJhbXM7XG4gICAgZ2V0IHNlYXJjaFBhcmFtcygpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9zZWFyY2hQYXJhbXMpIHtcbiAgICAgICAgICAgIHRoaXMuX3NlYXJjaFBhcmFtcyA9IG5ldyBVUkxTZWFyY2hQYXJhbXNfanNfMS5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyh0aGlzLnF1ZXJ5KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fc2VhcmNoUGFyYW1zO1xuICAgIH1cbiAgICBnZXQgdXNlcm5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF1dGg/LnNwbGl0KCc6JylbMF0gfHwgJyc7XG4gICAgfVxuICAgIHNldCB1c2VybmFtZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLmF1dGggPSBgJHt2YWx1ZX06JHt0aGlzLnBhc3N3b3JkfWA7XG4gICAgfVxuICAgIGdldCBwYXNzd29yZCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aD8uc3BsaXQoJzonKVsxXSB8fCAnJztcbiAgICB9XG4gICAgc2V0IHBhc3N3b3JkKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYXV0aCA9IGAke3RoaXMudXNlcm5hbWV9OiR7dmFsdWV9YDtcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmZvcm1hdCgpO1xuICAgIH1cbiAgICB0b0pTT04oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHN0YXRpYyBibG9iUmVnaXN0cnkgPSBuZXcgTWFwKCk7XG4gICAgc3RhdGljIGNyZWF0ZU9iamVjdFVSTChibG9iKSB7XG4gICAgICAgIGNvbnN0IGJsb2JVcmwgPSBgYmxvYjp3aGF0d2dub2RlOiR7KDAsIGNyeXB0b18xLnJhbmRvbVVVSUQpKCl9YDtcbiAgICAgICAgdGhpcy5ibG9iUmVnaXN0cnkuc2V0KGJsb2JVcmwsIGJsb2IpO1xuICAgICAgICByZXR1cm4gYmxvYlVybDtcbiAgICB9XG4gICAgc3RhdGljIHJlc29sdmVPYmplY3RVUkwodXJsKSB7XG4gICAgICAgIGlmICghdGhpcy5ibG9iUmVnaXN0cnkuaGFzKHVybCkpIHtcbiAgICAgICAgICAgIFVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYmxvYlJlZ2lzdHJ5LmRlbGV0ZSh1cmwpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN0YXRpYyBnZXRCbG9iRnJvbVVSTCh1cmwpIHtcbiAgICAgICAgcmV0dXJuICh0aGlzLmJsb2JSZWdpc3RyeS5nZXQodXJsKSB8fCAoMCwgYnVmZmVyXzEucmVzb2x2ZU9iamVjdFVSTCkodXJsKSk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFVSTCA9IFBvbnlmaWxsVVJMO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nfunction isURLSearchParams(value) {\n    return value?.entries != null;\n}\nclass PonyfillURLSearchParams {\n    params;\n    constructor(init) {\n        if (init) {\n            if (typeof init === 'string') {\n                this.params = fast_querystring_1.default.parse(init);\n            }\n            else if (Array.isArray(init)) {\n                this.params = {};\n                for (const [key, value] of init) {\n                    this.params[key] = value;\n                }\n            }\n            else if (isURLSearchParams(init)) {\n                this.params = {};\n                for (const [key, value] of init.entries()) {\n                    this.params[key] = value;\n                }\n            }\n            else {\n                this.params = init;\n            }\n        }\n        else {\n            this.params = {};\n        }\n    }\n    append(name, value) {\n        const existingValue = this.params[name];\n        const finalValue = existingValue ? `${existingValue},${value}` : value;\n        this.params[name] = finalValue;\n    }\n    delete(name) {\n        delete this.params[name];\n    }\n    get(name) {\n        const value = this.params[name];\n        if (Array.isArray(value)) {\n            return value[0] || null;\n        }\n        return value || null;\n    }\n    getAll(name) {\n        const value = this.params[name];\n        if (!Array.isArray(value)) {\n            return value ? [value] : [];\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.params;\n    }\n    set(name, value) {\n        this.params[name] = value;\n    }\n    sort() {\n        const sortedKeys = Object.keys(this.params).sort();\n        const sortedParams = {};\n        for (const key of sortedKeys) {\n            sortedParams[key] = this.params[key];\n        }\n        this.params = sortedParams;\n    }\n    toString() {\n        return fast_querystring_1.default.stringify(this.params);\n    }\n    *keys() {\n        for (const key in this.params) {\n            yield key;\n        }\n    }\n    *entries() {\n        for (const key of this.keys()) {\n            const value = this.params[key];\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    yield [key, item];\n                }\n            }\n            else {\n                yield [key, value];\n            }\n        }\n    }\n    *values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n    get size() {\n        return Object.keys(this.params).length;\n    }\n}\nexports.PonyfillURLSearchParams = PonyfillURLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwrQkFBK0I7QUFDL0IsZ0JBQWdCLG1CQUFPLENBQUMsd0RBQU87QUFDL0IsbURBQW1ELG1CQUFPLENBQUMsNkVBQWtCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsY0FBYyxHQUFHLE1BQU07QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL1VSTFNlYXJjaFBhcmFtcy5qcz80YWQyIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBmYXN0X3F1ZXJ5c3RyaW5nXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiZmFzdC1xdWVyeXN0cmluZ1wiKSk7XG5mdW5jdGlvbiBpc1VSTFNlYXJjaFBhcmFtcyh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uZW50cmllcyAhPSBudWxsO1xufVxuY2xhc3MgUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXMge1xuICAgIHBhcmFtcztcbiAgICBjb25zdHJ1Y3Rvcihpbml0KSB7XG4gICAgICAgIGlmIChpbml0KSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGluaXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5wYXJzZShpbml0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaW5pdCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGluaXQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYXJhbXNba2V5XSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzVVJMU2VhcmNoUGFyYW1zKGluaXQpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBpbml0LmVudHJpZXMoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhcmFtc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSBpbml0O1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5wYXJhbXMgPSB7fTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhcHBlbmQobmFtZSwgdmFsdWUpIHtcbiAgICAgICAgY29uc3QgZXhpc3RpbmdWYWx1ZSA9IHRoaXMucGFyYW1zW25hbWVdO1xuICAgICAgICBjb25zdCBmaW5hbFZhbHVlID0gZXhpc3RpbmdWYWx1ZSA/IGAke2V4aXN0aW5nVmFsdWV9LCR7dmFsdWV9YCA6IHZhbHVlO1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IGZpbmFsVmFsdWU7XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIGRlbGV0ZSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICB9XG4gICAgZ2V0KG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWVbMF0gfHwgbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdmFsdWUgfHwgbnVsbDtcbiAgICB9XG4gICAgZ2V0QWxsKG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1tuYW1lXTtcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID8gW3ZhbHVlXSA6IFtdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG5hbWUgaW4gdGhpcy5wYXJhbXM7XG4gICAgfVxuICAgIHNldChuYW1lLCB2YWx1ZSkge1xuICAgICAgICB0aGlzLnBhcmFtc1tuYW1lXSA9IHZhbHVlO1xuICAgIH1cbiAgICBzb3J0KCkge1xuICAgICAgICBjb25zdCBzb3J0ZWRLZXlzID0gT2JqZWN0LmtleXModGhpcy5wYXJhbXMpLnNvcnQoKTtcbiAgICAgICAgY29uc3Qgc29ydGVkUGFyYW1zID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IG9mIHNvcnRlZEtleXMpIHtcbiAgICAgICAgICAgIHNvcnRlZFBhcmFtc1trZXldID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnBhcmFtcyA9IHNvcnRlZFBhcmFtcztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIHJldHVybiBmYXN0X3F1ZXJ5c3RyaW5nXzEuZGVmYXVsdC5zdHJpbmdpZnkodGhpcy5wYXJhbXMpO1xuICAgIH1cbiAgICAqa2V5cygpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdGhpcy5wYXJhbXMpIHtcbiAgICAgICAgICAgIHlpZWxkIGtleTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAqZW50cmllcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgdGhpcy5rZXlzKCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGhpcy5wYXJhbXNba2V5XTtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBba2V5LCBpdGVtXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBba2V5LCB2YWx1ZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgKnZhbHVlcygpIHtcbiAgICAgICAgZm9yIChjb25zdCBbLCB2YWx1ZV0gb2YgdGhpcykge1xuICAgICAgICAgICAgeWllbGQgdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmVudHJpZXMoKTtcbiAgICB9XG4gICAgZm9yRWFjaChjYWxsYmFjaykge1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiB0aGlzKSB7XG4gICAgICAgICAgICBjYWxsYmFjayh2YWx1ZSwga2V5LCB0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBnZXQgc2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHRoaXMucGFyYW1zKS5sZW5ndGg7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtcyA9IFBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            let onabort;\n            let reason;\n            const controller = {\n                signal: {\n                    any(signals) {\n                        return AbortSignal.any([...signals]);\n                    },\n                    get reason() {\n                        return reason;\n                    },\n                    get aborted() {\n                        return writable.destroyed;\n                    },\n                    addEventListener: (_event, eventListener) => {\n                        writable.once('error', eventListener);\n                        writable.once('close', eventListener);\n                    },\n                    removeEventListener: (_event, eventListener) => {\n                        writable.off('error', eventListener);\n                        writable.off('close', eventListener);\n                    },\n                    dispatchEvent: (_event) => {\n                        return false;\n                    },\n                    get onabort() {\n                        return onabort;\n                    },\n                    set onabort(value) {\n                        if (onabort) {\n                            this.removeEventListener('abort', onabort);\n                        }\n                        onabort = value;\n                        if (onabort) {\n                            this.addEventListener('abort', onabort);\n                        }\n                    },\n                    throwIfAborted() {\n                        if (writable.destroyed) {\n                            throw reason;\n                        }\n                    },\n                },\n                error: e => {\n                    this.writable.destroy(e);\n                },\n            };\n            this.writable.once('error', err => {\n                reason = err;\n            });\n        }\n        else {\n            this.writable = new stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            closed: new Promise(resolve => {\n                writable.once('close', () => {\n                    resolve(undefined);\n                });\n            }),\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            ready: new Promise(resolve => {\n                writable.once('drain', () => {\n                    resolve(undefined);\n                });\n            }),\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                if (chunk == null) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    writable.write(chunk, (err) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    if (writable.errored) {\n                        reject(writable.errored);\n                    }\n                    else {\n                        writable.end((err) => {\n                            if (err) {\n                                reject(err);\n                            }\n                            else {\n                                resolve();\n                            }\n                        });\n                    }\n                });\n            },\n            abort(reason) {\n                return new Promise(resolve => {\n                    writable.destroy(reason);\n                    writable.once('close', resolve);\n                });\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)(undefined);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.writable.errored) {\n                reject(this.writable.errored);\n            }\n            else {\n                this.writable.end((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            }\n        });\n    }\n    abort(reason) {\n        return new Promise(resolve => {\n            this.writable.destroy(reason);\n            this.writable.once('close', resolve);\n        });\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nfunction getResponseForFile(url) {\n    const path = (0, url_1.fileURLToPath)(url);\n    const readable = (0, fs_1.createReadStream)(path);\n    return new Response_js_1.PonyfillResponse(readable);\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixhQUFhLG1CQUFPLENBQUMsY0FBSTtBQUN6QixjQUFjLG1CQUFPLENBQUMsZ0JBQUs7QUFDM0IsdUJBQXVCLG1CQUFPLENBQUMseUhBQWdCO0FBQy9DLDJCQUEyQixtQkFBTyxDQUFDLGlJQUFvQjtBQUN2RCxxQkFBcUIsbUJBQU8sQ0FBQyxxSEFBYztBQUMzQyxzQkFBc0IsbUJBQU8sQ0FBQyx1SEFBZTtBQUM3QyxpQkFBaUIsbUJBQU8sQ0FBQyw2R0FBVTtBQUNuQyxtQkFBbUIsbUJBQU8sQ0FBQyxpSEFBWTtBQUN2Qyx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvZmV0Y2guanM/YTRkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZmV0Y2hQb255ZmlsbCA9IGZldGNoUG9ueWZpbGw7XG5jb25zdCBmc18xID0gcmVxdWlyZShcImZzXCIpO1xuY29uc3QgdXJsXzEgPSByZXF1aXJlKFwidXJsXCIpO1xuY29uc3QgZmV0Y2hDdXJsX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaEN1cmwuanNcIik7XG5jb25zdCBmZXRjaE5vZGVIdHRwX2pzXzEgPSByZXF1aXJlKFwiLi9mZXRjaE5vZGVIdHRwLmpzXCIpO1xuY29uc3QgUmVxdWVzdF9qc18xID0gcmVxdWlyZShcIi4vUmVxdWVzdC5qc1wiKTtcbmNvbnN0IFJlc3BvbnNlX2pzXzEgPSByZXF1aXJlKFwiLi9SZXNwb25zZS5qc1wiKTtcbmNvbnN0IFVSTF9qc18xID0gcmVxdWlyZShcIi4vVVJMLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuY29uc3QgQkFTRTY0X1NVRkZJWCA9ICc7YmFzZTY0JztcbmZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yRmlsZSh1cmwpIHtcbiAgICBjb25zdCBwYXRoID0gKDAsIHVybF8xLmZpbGVVUkxUb1BhdGgpKHVybCk7XG4gICAgY29uc3QgcmVhZGFibGUgPSAoMCwgZnNfMS5jcmVhdGVSZWFkU3RyZWFtKShwYXRoKTtcbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShyZWFkYWJsZSk7XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckRhdGFVcmkodXJsKSB7XG4gICAgY29uc3QgW21pbWVUeXBlID0gJ3RleHQvcGxhaW4nLCAuLi5kYXRhc10gPSB1cmwuc3Vic3RyaW5nKDUpLnNwbGl0KCcsJyk7XG4gICAgY29uc3QgZGF0YSA9IGRlY29kZVVSSUNvbXBvbmVudChkYXRhcy5qb2luKCcsJykpO1xuICAgIGlmIChtaW1lVHlwZS5lbmRzV2l0aChCQVNFNjRfU1VGRklYKSkge1xuICAgICAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShkYXRhLCAnYmFzZTY0dXJsJyk7XG4gICAgICAgIGNvbnN0IHJlYWxNaW1lVHlwZSA9IG1pbWVUeXBlLnNsaWNlKDAsIC1CQVNFNjRfU1VGRklYLmxlbmd0aCk7XG4gICAgICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKGJ1ZmZlciwge1xuICAgICAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiByZWFsTWltZVR5cGUsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoZGF0YSwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgc3RhdHVzVGV4dDogJ09LJyxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IG1pbWVUeXBlLFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0UmVzcG9uc2VGb3JCbG9iKHVybCkge1xuICAgIGNvbnN0IGJsb2IgPSBVUkxfanNfMS5Qb255ZmlsbFVSTC5nZXRCbG9iRnJvbVVSTCh1cmwpO1xuICAgIGlmICghYmxvYikge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIEJsb2IgVVJMJyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKGJsb2IsIHtcbiAgICAgICAgc3RhdHVzOiAyMDAsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBibG9iLnR5cGUsXG4gICAgICAgICAgICAnY29udGVudC1sZW5ndGgnOiBibG9iLnNpemUudG9TdHJpbmcoKSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGlzVVJMKG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmouaHJlZiAhPSBudWxsO1xufVxuZnVuY3Rpb24gZmV0Y2hQb255ZmlsbChpbmZvLCBpbml0KSB7XG4gICAgaWYgKHR5cGVvZiBpbmZvID09PSAnc3RyaW5nJyB8fCBpc1VSTChpbmZvKSkge1xuICAgICAgICBjb25zdCBwb255ZmlsbFJlcXVlc3QgPSBuZXcgUmVxdWVzdF9qc18xLlBvbnlmaWxsUmVxdWVzdChpbmZvLCBpbml0KTtcbiAgICAgICAgcmV0dXJuIGZldGNoUG9ueWZpbGwocG9ueWZpbGxSZXF1ZXN0KTtcbiAgICB9XG4gICAgY29uc3QgZmV0Y2hSZXF1ZXN0ID0gaW5mbztcbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdkYXRhOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JEYXRhVXJpKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgaWYgKGZldGNoUmVxdWVzdC51cmwuc3RhcnRzV2l0aCgnZmlsZTonKSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGdldFJlc3BvbnNlRm9yRmlsZShmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKShyZXNwb25zZSk7XG4gICAgfVxuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2Jsb2I6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckJsb2IoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZ2xvYmFsVGhpcy5saWJjdXJsICYmICFmZXRjaFJlcXVlc3QuYWdlbnQpIHtcbiAgICAgICAgcmV0dXJuICgwLCBmZXRjaEN1cmxfanNfMS5mZXRjaEN1cmwpKGZldGNoUmVxdWVzdCk7XG4gICAgfVxuICAgIHJldHVybiAoMCwgZmV0Y2hOb2RlSHR0cF9qc18xLmZldGNoTm9kZUh0dHApKGZldGNoUmVxdWVzdCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tls_1 = __webpack_require__(/*! tls */ \"tls\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    curlHandle.setStreamProgressCallback(function () {\n        return fetchRequest['_signal']?.aborted\n            ? process.env.DEBUG\n                ? CurlProgressFunc.Continue\n                : 1\n            : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, utils_js_1.createDeferredPromise)();\n    let streamResolved;\n    if (fetchRequest['_signal']) {\n        fetchRequest['_signal'].onabort = () => {\n            if (curlHandle.isOpen) {\n                try {\n                    curlHandle.pause(CurlPause.Recv);\n                }\n                catch (e) {\n                    deferredPromise.reject(e);\n                }\n            }\n        };\n    }\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = new stream_1.PassThrough();\n        stream_1.promises\n            .pipeline(stream, outputStream, {\n            end: true,\n            signal: fetchRequest['_signal'] ?? undefined,\n        })\n            .then(() => {\n            if (!stream.destroyed) {\n                stream.resume();\n            }\n        })\n            .catch(deferredPromise.reject);\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    (headerFilter.includes('location') || headerFilter.includes('Location'))) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    let count = 0;\n    try {\n        count = Curl.getCount();\n    }\n    catch { }\n    if (count > 0) {\n        setImmediate(() => {\n            curlHandle.perform();\n        });\n    }\n    else {\n        curlHandle.perform();\n    }\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.url);\n            const nodeReadable = (fetchRequest.body != null\n                ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                    ? fetchRequest.body\n                    : stream_1.Readable.from(fetchRequest.body)\n                : null);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            if (nodeHeaders['accept-encoding'] == null) {\n                nodeHeaders['accept-encoding'] = 'gzip, deflate, br';\n            }\n            const nodeRequest = requestFn(fetchRequest.url, {\n                method: fetchRequest.method,\n                headers: nodeHeaders,\n                signal: fetchRequest['_signal'] ?? undefined,\n                agent: fetchRequest.agent,\n            });\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, zlib_1.createBrotliDecompress)();\n                        break;\n                    default:\n                        outputStream = new stream_1.PassThrough();\n                }\n                if (nodeResponse.headers.location) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                stream_1.promises\n                    .pipeline(nodeResponse, outputStream, {\n                    signal: fetchRequest['_signal'] ?? undefined,\n                    end: true,\n                })\n                    .then(() => {\n                    if (!nodeResponse.destroyed) {\n                        nodeResponse.resume();\n                    }\n                })\n                    .catch(reject);\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n                    status: nodeResponse.statusCode,\n                    statusText: nodeResponse.statusMessage,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                });\n                resolve(ponyfillResponse);\n            });\n            nodeRequest.once('error', reject);\n            if (nodeReadable) {\n                nodeReadable.pipe(nodeRequest);\n            }\n            else {\n                nodeRequest.end();\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2ZldGNoTm9kZUh0dHAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLGVBQWUsbUJBQU8sQ0FBQyxrQkFBTTtBQUM3QixnQkFBZ0IsbUJBQU8sQ0FBQyxvQkFBTztBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyxlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0IscUJBQXFCLG1CQUFPLENBQUMscUhBQWM7QUFDM0Msc0JBQXNCLG1CQUFPLENBQUMsdUhBQWU7QUFDN0MsaUJBQWlCLG1CQUFPLENBQUMsNkdBQVU7QUFDbkMsbUJBQW1CLG1CQUFPLENBQUMsaUhBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMseUJBQXlCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvZmV0Y2hOb2RlSHR0cC5qcz80YzVlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mZXRjaE5vZGVIdHRwID0gZmV0Y2hOb2RlSHR0cDtcbmNvbnN0IGh0dHBfMSA9IHJlcXVpcmUoXCJodHRwXCIpO1xuY29uc3QgaHR0cHNfMSA9IHJlcXVpcmUoXCJodHRwc1wiKTtcbmNvbnN0IHN0cmVhbV8xID0gcmVxdWlyZShcInN0cmVhbVwiKTtcbmNvbnN0IHpsaWJfMSA9IHJlcXVpcmUoXCJ6bGliXCIpO1xuY29uc3QgUmVxdWVzdF9qc18xID0gcmVxdWlyZShcIi4vUmVxdWVzdC5qc1wiKTtcbmNvbnN0IFJlc3BvbnNlX2pzXzEgPSByZXF1aXJlKFwiLi9SZXNwb25zZS5qc1wiKTtcbmNvbnN0IFVSTF9qc18xID0gcmVxdWlyZShcIi4vVVJMLmpzXCIpO1xuY29uc3QgdXRpbHNfanNfMSA9IHJlcXVpcmUoXCIuL3V0aWxzLmpzXCIpO1xuZnVuY3Rpb24gZ2V0UmVxdWVzdEZuRm9yUHJvdG9jb2wodXJsKSB7XG4gICAgaWYgKHVybC5zdGFydHNXaXRoKCdodHRwOicpKSB7XG4gICAgICAgIHJldHVybiBodHRwXzEucmVxdWVzdDtcbiAgICB9XG4gICAgZWxzZSBpZiAodXJsLnN0YXJ0c1dpdGgoJ2h0dHBzOicpKSB7XG4gICAgICAgIHJldHVybiBodHRwc18xLnJlcXVlc3Q7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgcHJvdG9jb2w6ICR7dXJsLnNwbGl0KCc6JylbMF0gfHwgdXJsfWApO1xufVxuZnVuY3Rpb24gZmV0Y2hOb2RlSHR0cChmZXRjaFJlcXVlc3QpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgcmVxdWVzdEZuID0gZ2V0UmVxdWVzdEZuRm9yUHJvdG9jb2woZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgICAgICBjb25zdCBub2RlUmVhZGFibGUgPSAoZmV0Y2hSZXF1ZXN0LmJvZHkgIT0gbnVsbFxuICAgICAgICAgICAgICAgID8gKDAsIHV0aWxzX2pzXzEuaXNOb2RlUmVhZGFibGUpKGZldGNoUmVxdWVzdC5ib2R5KVxuICAgICAgICAgICAgICAgICAgICA/IGZldGNoUmVxdWVzdC5ib2R5XG4gICAgICAgICAgICAgICAgICAgIDogc3RyZWFtXzEuUmVhZGFibGUuZnJvbShmZXRjaFJlcXVlc3QuYm9keSlcbiAgICAgICAgICAgICAgICA6IG51bGwpO1xuICAgICAgICAgICAgY29uc3QgaGVhZGVyc1NlcmlhbGl6ZXIgPSBmZXRjaFJlcXVlc3QuaGVhZGVyc1NlcmlhbGl6ZXIgfHwgdXRpbHNfanNfMS5nZXRIZWFkZXJzT2JqO1xuICAgICAgICAgICAgY29uc3Qgbm9kZUhlYWRlcnMgPSBoZWFkZXJzU2VyaWFsaXplcihmZXRjaFJlcXVlc3QuaGVhZGVycyk7XG4gICAgICAgICAgICBpZiAobm9kZUhlYWRlcnNbJ2FjY2VwdC1lbmNvZGluZyddID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBub2RlSGVhZGVyc1snYWNjZXB0LWVuY29kaW5nJ10gPSAnZ3ppcCwgZGVmbGF0ZSwgYnInO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgbm9kZVJlcXVlc3QgPSByZXF1ZXN0Rm4oZmV0Y2hSZXF1ZXN0LnVybCwge1xuICAgICAgICAgICAgICAgIG1ldGhvZDogZmV0Y2hSZXF1ZXN0Lm1ldGhvZCxcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiBub2RlSGVhZGVycyxcbiAgICAgICAgICAgICAgICBzaWduYWw6IGZldGNoUmVxdWVzdFsnX3NpZ25hbCddID8/IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICBhZ2VudDogZmV0Y2hSZXF1ZXN0LmFnZW50LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBub2RlUmVxdWVzdC5vbmNlKCdyZXNwb25zZScsIG5vZGVSZXNwb25zZSA9PiB7XG4gICAgICAgICAgICAgICAgbGV0IG91dHB1dFN0cmVhbTtcbiAgICAgICAgICAgICAgICBjb25zdCBjb250ZW50RW5jb2RpbmcgPSBub2RlUmVzcG9uc2UuaGVhZGVyc1snY29udGVudC1lbmNvZGluZyddO1xuICAgICAgICAgICAgICAgIHN3aXRjaCAoY29udGVudEVuY29kaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ3gtZ3ppcCc6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2d6aXAnOlxuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0U3RyZWFtID0gKDAsIHpsaWJfMS5jcmVhdGVHdW56aXApKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAneC1kZWZsYXRlJzpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAnZGVmbGF0ZSc6XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRTdHJlYW0gPSAoMCwgemxpYl8xLmNyZWF0ZUluZmxhdGUpKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAneC1kZWZsYXRlLXJhdyc6XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUtcmF3JzpcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFN0cmVhbSA9ICgwLCB6bGliXzEuY3JlYXRlSW5mbGF0ZVJhdykoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlICdicic6XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRTdHJlYW0gPSAoMCwgemxpYl8xLmNyZWF0ZUJyb3RsaURlY29tcHJlc3MpKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFN0cmVhbSA9IG5ldyBzdHJlYW1fMS5QYXNzVGhyb3VnaCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobm9kZVJlc3BvbnNlLmhlYWRlcnMubG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZldGNoUmVxdWVzdC5yZWRpcmVjdCA9PT0gJ2Vycm9yJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVkaXJlY3RFcnJvciA9IG5ldyBFcnJvcignUmVkaXJlY3RzIGFyZSBub3QgYWxsb3dlZCcpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KHJlZGlyZWN0RXJyb3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVJlc3BvbnNlLnJlc3VtZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChmZXRjaFJlcXVlc3QucmVkaXJlY3QgPT09ICdmb2xsb3cnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZWRpcmVjdGVkVXJsID0gbmV3IFVSTF9qc18xLlBvbnlmaWxsVVJMKG5vZGVSZXNwb25zZS5oZWFkZXJzLmxvY2F0aW9uLCBmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlZGlyZWN0UmVzcG9uc2UkID0gZmV0Y2hOb2RlSHR0cChuZXcgUmVxdWVzdF9qc18xLlBvbnlmaWxsUmVxdWVzdChyZWRpcmVjdGVkVXJsLCBmZXRjaFJlcXVlc3QpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVkaXJlY3RSZXNwb25zZSQudGhlbihyZWRpcmVjdFJlc3BvbnNlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWRpcmVjdFJlc3BvbnNlLnJlZGlyZWN0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZWRpcmVjdFJlc3BvbnNlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZVJlc3BvbnNlLnJlc3VtZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN0cmVhbV8xLnByb21pc2VzXG4gICAgICAgICAgICAgICAgICAgIC5waXBlbGluZShub2RlUmVzcG9uc2UsIG91dHB1dFN0cmVhbSwge1xuICAgICAgICAgICAgICAgICAgICBzaWduYWw6IGZldGNoUmVxdWVzdFsnX3NpZ25hbCddID8/IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgZW5kOiB0cnVlLFxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFub2RlUmVzcG9uc2UuZGVzdHJveWVkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlUmVzcG9uc2UucmVzdW1lKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2gocmVqZWN0KTtcbiAgICAgICAgICAgICAgICBjb25zdCBwb255ZmlsbFJlc3BvbnNlID0gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShvdXRwdXRTdHJlYW0sIHtcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiBub2RlUmVzcG9uc2Uuc3RhdHVzQ29kZSxcbiAgICAgICAgICAgICAgICAgICAgc3RhdHVzVGV4dDogbm9kZVJlc3BvbnNlLnN0YXR1c01lc3NhZ2UsXG4gICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IG5vZGVSZXNwb25zZS5oZWFkZXJzLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGZldGNoUmVxdWVzdC51cmwsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZShwb255ZmlsbFJlc3BvbnNlKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbm9kZVJlcXVlc3Qub25jZSgnZXJyb3InLCByZWplY3QpO1xuICAgICAgICAgICAgaWYgKG5vZGVSZWFkYWJsZSkge1xuICAgICAgICAgICAgICAgIG5vZGVSZWFkYWJsZS5waXBlKG5vZGVSZXF1ZXN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5vZGVSZXF1ZXN0LmVuZCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZWplY3QoZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQixHQUFHLHlCQUF5QixHQUFHLHVCQUF1QixHQUFHLHNCQUFzQixHQUFHLHVCQUF1QixHQUFHLFdBQVcsR0FBRyxZQUFZLEdBQUcsbUJBQW1CLEdBQUcsbUJBQW1CLEdBQUcsWUFBWSxHQUFHLGdCQUFnQixHQUFHLFlBQVksR0FBRyxzQkFBc0IsR0FBRyxnQkFBZ0IsR0FBRyxlQUFlLEdBQUcsWUFBWSxHQUFHLGVBQWUsR0FBRyxhQUFhO0FBQzdXLGlCQUFpQixtQkFBTyxDQUFDLGlIQUFZO0FBQ3JDLHlDQUF3QyxFQUFFLHFDQUFxQyxvQ0FBb0MsRUFBQztBQUNwSCxtQkFBbUIsbUJBQU8sQ0FBQyxxSEFBYztBQUN6QywyQ0FBMEMsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDMUgsZ0JBQWdCLG1CQUFPLENBQUMsK0dBQVc7QUFDbkMsd0NBQXVDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ2pILG1CQUFtQixtQkFBTyxDQUFDLHFIQUFjO0FBQ3pDLDJDQUEwQyxFQUFFLHFDQUFxQyx3Q0FBd0MsRUFBQztBQUMxSCxvQkFBb0IsbUJBQU8sQ0FBQyx1SEFBZTtBQUMzQyw0Q0FBMkMsRUFBRSxxQ0FBcUMsMENBQTBDLEVBQUM7QUFDN0gsMEJBQTBCLG1CQUFPLENBQUMsbUlBQXFCO0FBQ3ZELGtEQUFpRCxFQUFFLHFDQUFxQyxzREFBc0QsRUFBQztBQUMvSSxnQkFBZ0IsbUJBQU8sQ0FBQywrR0FBVztBQUNuQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDakgsb0JBQW9CLG1CQUFPLENBQUMsdUhBQWU7QUFDM0MsNENBQTJDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQzdILGdCQUFnQixtQkFBTyxDQUFDLCtHQUFXO0FBQ25DLHdDQUF1QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUNqSCw4QkFBOEIsbUJBQU8sQ0FBQywySUFBeUI7QUFDL0QsK0NBQThDLEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQzdJLCtDQUE4QyxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUM3SSx3Q0FBdUMsRUFBRSxxQ0FBcUMsZ0RBQWdELEVBQUM7QUFDL0gsZUFBZSxtQkFBTyxDQUFDLDZHQUFVO0FBQ2pDLHVDQUFzQyxFQUFFLHFDQUFxQyxnQ0FBZ0MsRUFBQztBQUM5RywyQkFBMkIsbUJBQU8sQ0FBQyxxSUFBc0I7QUFDekQsbURBQWtELEVBQUUscUNBQXFDLHdEQUF3RCxFQUFDO0FBQ2xKLDBCQUEwQixtQkFBTyxDQUFDLG1JQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDL0ksMkJBQTJCLG1CQUFPLENBQUMscUlBQXNCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSiw2QkFBNkIsbUJBQU8sQ0FBQyx5SUFBd0I7QUFDN0QscURBQW9ELEVBQUUscUNBQXFDLDREQUE0RCxFQUFDO0FBQ3hKLCtCQUErQixtQkFBTyxDQUFDLDZJQUEwQjtBQUNqRSx1REFBc0QsRUFBRSxxQ0FBcUMsZ0VBQWdFLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9pbmRleC5qcz81OTAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWNvbXByZXNzaW9uU3RyZWFtID0gZXhwb3J0cy5Db21wcmVzc2lvblN0cmVhbSA9IGV4cG9ydHMuVHJhbnNmb3JtU3RyZWFtID0gZXhwb3J0cy5Xcml0YWJsZVN0cmVhbSA9IGV4cG9ydHMuVVJMU2VhcmNoUGFyYW1zID0gZXhwb3J0cy5VUkwgPSBleHBvcnRzLmJ0b2EgPSBleHBvcnRzLlRleHREZWNvZGVyID0gZXhwb3J0cy5UZXh0RW5jb2RlciA9IGV4cG9ydHMuQmxvYiA9IGV4cG9ydHMuRm9ybURhdGEgPSBleHBvcnRzLkZpbGUgPSBleHBvcnRzLlJlYWRhYmxlU3RyZWFtID0gZXhwb3J0cy5SZXNwb25zZSA9IGV4cG9ydHMuUmVxdWVzdCA9IGV4cG9ydHMuQm9keSA9IGV4cG9ydHMuSGVhZGVycyA9IGV4cG9ydHMuZmV0Y2ggPSB2b2lkIDA7XG52YXIgZmV0Y2hfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiZmV0Y2hcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGZldGNoX2pzXzEuZmV0Y2hQb255ZmlsbDsgfSB9KTtcbnZhciBIZWFkZXJzX2pzXzEgPSByZXF1aXJlKFwiLi9IZWFkZXJzLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiSGVhZGVyc1wiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gSGVhZGVyc19qc18xLlBvbnlmaWxsSGVhZGVyczsgfSB9KTtcbnZhciBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQm9keVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQm9keV9qc18xLlBvbnlmaWxsQm9keTsgfSB9KTtcbnZhciBSZXF1ZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9SZXF1ZXN0LmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVxdWVzdFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVxdWVzdF9qc18xLlBvbnlmaWxsUmVxdWVzdDsgfSB9KTtcbnZhciBSZXNwb25zZV9qc18xID0gcmVxdWlyZShcIi4vUmVzcG9uc2UuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZXNwb25zZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlOyB9IH0pO1xudmFyIFJlYWRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9SZWFkYWJsZVN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlYWRhYmxlU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZWFkYWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsUmVhZGFibGVTdHJlYW07IH0gfSk7XG52YXIgRmlsZV9qc18xID0gcmVxdWlyZShcIi4vRmlsZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkZpbGVcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZpbGVfanNfMS5Qb255ZmlsbEZpbGU7IH0gfSk7XG52YXIgRm9ybURhdGFfanNfMSA9IHJlcXVpcmUoXCIuL0Zvcm1EYXRhLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRm9ybURhdGFcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIEZvcm1EYXRhX2pzXzEuUG9ueWZpbGxGb3JtRGF0YTsgfSB9KTtcbnZhciBCbG9iX2pzXzEgPSByZXF1aXJlKFwiLi9CbG9iLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiQmxvYlwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQmxvYl9qc18xLlBvbnlmaWxsQmxvYjsgfSB9KTtcbnZhciBUZXh0RW5jb2RlckRlY29kZXJfanNfMSA9IHJlcXVpcmUoXCIuL1RleHRFbmNvZGVyRGVjb2Rlci5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRleHRFbmNvZGVyXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbFRleHRFbmNvZGVyOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGV4dERlY29kZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dERlY29kZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJidG9hXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUZXh0RW5jb2RlckRlY29kZXJfanNfMS5Qb255ZmlsbEJ0b2E7IH0gfSk7XG52YXIgVVJMX2pzXzEgPSByZXF1aXJlKFwiLi9VUkwuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVUkxcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFVSTF9qc18xLlBvbnlmaWxsVVJMOyB9IH0pO1xudmFyIFVSTFNlYXJjaFBhcmFtc19qc18xID0gcmVxdWlyZShcIi4vVVJMU2VhcmNoUGFyYW1zLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVVJMU2VhcmNoUGFyYW1zXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBVUkxTZWFyY2hQYXJhbXNfanNfMS5Qb255ZmlsbFVSTFNlYXJjaFBhcmFtczsgfSB9KTtcbnZhciBXcml0YWJsZVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vV3JpdGFibGVTdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJXcml0YWJsZVN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gV3JpdGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFdyaXRhYmxlU3RyZWFtOyB9IH0pO1xudmFyIFRyYW5zZm9ybVN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vVHJhbnNmb3JtU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVHJhbnNmb3JtU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbTsgfSB9KTtcbnZhciBDb21wcmVzc2lvblN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vQ29tcHJlc3Npb25TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJDb21wcmVzc2lvblN0cmVhbVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gQ29tcHJlc3Npb25TdHJlYW1fanNfMS5Qb255ZmlsbENvbXByZXNzaW9uU3RyZWFtOyB9IH0pO1xudmFyIERlY29tcHJlc3Npb25TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL0RlY29tcHJlc3Npb25TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJEZWNvbXByZXNzaW9uU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBEZWNvbXByZXNzaW9uU3RyZWFtX2pzXzEuUG9ueWZpbGxEZWNvbXByZXNzaW9uU3RyZWFtOyB9IH0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.fakePromise = fakePromise;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.createDeferredPromise = createDeferredPromise;\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    const obj = {};\n    headers.forEach((value, key) => {\n        obj[key] = value;\n    });\n    return obj;\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction fakePromise(value) {\n    if (isPromise(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if (isPromise(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if (isPromise(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHFCQUFxQjtBQUNyQixnQ0FBZ0M7QUFDaEMsbUJBQW1CO0FBQ25CLHlCQUF5QjtBQUN6QixzQkFBc0I7QUFDdEIsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSSxJQUFJLE1BQU07QUFDMUMsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvdXRpbHMuanM/NzczZCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SGVhZGVyc09iaiA9IGdldEhlYWRlcnNPYmo7XG5leHBvcnRzLmRlZmF1bHRIZWFkZXJzU2VyaWFsaXplciA9IGRlZmF1bHRIZWFkZXJzU2VyaWFsaXplcjtcbmV4cG9ydHMuZmFrZVByb21pc2UgPSBmYWtlUHJvbWlzZTtcbmV4cG9ydHMuaXNBcnJheUJ1ZmZlclZpZXcgPSBpc0FycmF5QnVmZmVyVmlldztcbmV4cG9ydHMuaXNOb2RlUmVhZGFibGUgPSBpc05vZGVSZWFkYWJsZTtcbmV4cG9ydHMuY3JlYXRlRGVmZXJyZWRQcm9taXNlID0gY3JlYXRlRGVmZXJyZWRQcm9taXNlO1xuZnVuY3Rpb24gaXNIZWFkZXJzSW5zdGFuY2Uob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uZm9yRWFjaCAhPSBudWxsO1xufVxuZnVuY3Rpb24gZ2V0SGVhZGVyc09iaihoZWFkZXJzKSB7XG4gICAgaWYgKGhlYWRlcnMgPT0gbnVsbCB8fCAhaXNIZWFkZXJzSW5zdGFuY2UoaGVhZGVycykpIHtcbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfVxuICAgIGNvbnN0IG9iaiA9IHt9O1xuICAgIGhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBvYmpba2V5XSA9IHZhbHVlO1xuICAgIH0pO1xuICAgIHJldHVybiBvYmo7XG59XG5mdW5jdGlvbiBkZWZhdWx0SGVhZGVyc1NlcmlhbGl6ZXIoaGVhZGVycywgb25Db250ZW50TGVuZ3RoKSB7XG4gICAgY29uc3QgaGVhZGVyQXJyYXkgPSBbXTtcbiAgICBoZWFkZXJzLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgaWYgKG9uQ29udGVudExlbmd0aCAmJiBrZXkgPT09ICdjb250ZW50LWxlbmd0aCcpIHtcbiAgICAgICAgICAgIG9uQ29udGVudExlbmd0aCh2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaGVhZGVyQXJyYXkucHVzaChgJHtrZXl9OiAke3ZhbHVlfWApO1xuICAgIH0pO1xuICAgIHJldHVybiBoZWFkZXJBcnJheTtcbn1cbmZ1bmN0aW9uIGlzUHJvbWlzZSh2YWwpIHtcbiAgICByZXR1cm4gdmFsPy50aGVuICE9IG51bGw7XG59XG5mdW5jdGlvbiBmYWtlUHJvbWlzZSh2YWx1ZSkge1xuICAgIGlmIChpc1Byb21pc2UodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgLy8gV3JpdGUgYSBmYWtlIHByb21pc2UgdG8gYXZvaWQgdGhlIHByb21pc2UgY29uc3RydWN0b3JcbiAgICAvLyBiZWluZyBjYWxsZWQgd2l0aCBgbmV3IFByb21pc2VgIGluIHRoZSBicm93c2VyLlxuICAgIHJldHVybiB7XG4gICAgICAgIHRoZW4ocmVzb2x2ZSkge1xuICAgICAgICAgICAgaWYgKHJlc29sdmUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFja1Jlc3VsdCA9IHJlc29sdmUodmFsdWUpO1xuICAgICAgICAgICAgICAgIGlmIChpc1Byb21pc2UoY2FsbGJhY2tSZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjYWxsYmFja1Jlc3VsdDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZha2VQcm9taXNlKGNhbGxiYWNrUmVzdWx0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBjYXRjaCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBmaW5hbGx5KGNiKSB7XG4gICAgICAgICAgICBpZiAoY2IpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjYWxsYmFja1Jlc3VsdCA9IGNiKCk7XG4gICAgICAgICAgICAgICAgaWYgKGlzUHJvbWlzZShjYWxsYmFja1Jlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrUmVzdWx0LnRoZW4oKCkgPT4gdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFrZVByb21pc2UodmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIFtTeW1ib2wudG9TdHJpbmdUYWddOiAnUHJvbWlzZScsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGlzQXJyYXlCdWZmZXJWaWV3KG9iaikge1xuICAgIHJldHVybiBvYmogIT0gbnVsbCAmJiBvYmouYnVmZmVyICE9IG51bGwgJiYgb2JqLmJ5dGVMZW5ndGggIT0gbnVsbCAmJiBvYmouYnl0ZU9mZnNldCAhPSBudWxsO1xufVxuZnVuY3Rpb24gaXNOb2RlUmVhZGFibGUob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5waXBlICE9IG51bGw7XG59XG5mdW5jdGlvbiBjcmVhdGVEZWZlcnJlZFByb21pc2UoKSB7XG4gICAgbGV0IHJlc29sdmVGbjtcbiAgICBsZXQgcmVqZWN0Rm47XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIGRlZmVycmVkUHJvbWlzZUV4ZWN1dG9yKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICByZXNvbHZlRm4gPSByZXNvbHZlO1xuICAgICAgICByZWplY3RGbiA9IHJlamVjdDtcbiAgICB9KTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwcm9taXNlLFxuICAgICAgICBnZXQgcmVzb2x2ZSgpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlRm47XG4gICAgICAgIH0sXG4gICAgICAgIGdldCByZWplY3QoKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVqZWN0Rm47XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/dist/urlpattern.cjs":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/dist/urlpattern.cjs ***!
  \**************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("var M=Object.defineProperty;var Pe=Object.getOwnPropertyDescriptor;var Re=Object.getOwnPropertyNames;var Ee=Object.prototype.hasOwnProperty;var Oe=(e,t)=>{for(var r in t)M(e,r,{get:t[r],enumerable:!0})},ke=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of Re(t))!Ee.call(e,a)&&a!==r&&M(e,a,{get:()=>t[a],enumerable:!(n=Pe(t,a))||n.enumerable});return e};var Te=e=>ke(M({},\"__esModule\",{value:!0}),e);var Ne={};Oe(Ne,{URLPattern:()=>Y});module.exports=Te(Ne);var R=class{type=3;name=\"\";prefix=\"\";value=\"\";suffix=\"\";modifier=3;constructor(t,r,n,a,c,l){this.type=t,this.name=r,this.prefix=n,this.value=a,this.suffix=c,this.modifier=l}hasCustomName(){return this.name!==\"\"&&typeof this.name!=\"number\"}},Ae=/[$_\\p{ID_Start}]/u,ye=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,v=\".*\";function we(e,t){return(t?/^[\\x00-\\xFF]*$/:/^[\\x00-\\x7F]*$/).test(e)}function D(e,t=!1){let r=[],n=0;for(;n<e.length;){let a=e[n],c=function(l){if(!t)throw new TypeError(l);r.push({type:\"INVALID_CHAR\",index:n,value:e[n++]})};if(a===\"*\"){r.push({type:\"ASTERISK\",index:n,value:e[n++]});continue}if(a===\"+\"||a===\"?\"){r.push({type:\"OTHER_MODIFIER\",index:n,value:e[n++]});continue}if(a===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(a===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(a===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(a===\":\"){let l=\"\",s=n+1;for(;s<e.length;){let i=e.substr(s,1);if(s===n+1&&Ae.test(i)||s!==n+1&&ye.test(i)){l+=e[s++];continue}break}if(!l){c(`Missing parameter name at ${n}`);continue}r.push({type:\"NAME\",index:n,value:l}),n=s;continue}if(a===\"(\"){let l=1,s=\"\",i=n+1,o=!1;if(e[i]===\"?\"){c(`Pattern cannot start with \"?\" at ${i}`);continue}for(;i<e.length;){if(!we(e[i],!1)){c(`Invalid character '${e[i]}' at ${i}.`),o=!0;break}if(e[i]===\"\\\\\"){s+=e[i++]+e[i++];continue}if(e[i]===\")\"){if(l--,l===0){i++;break}}else if(e[i]===\"(\"&&(l++,e[i+1]!==\"?\")){c(`Capturing groups are not allowed at ${i}`),o=!0;break}s+=e[i++]}if(o)continue;if(l){c(`Unbalanced pattern at ${n}`);continue}if(!s){c(`Missing pattern at ${n}`);continue}r.push({type:\"REGEX\",index:n,value:s}),n=i;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}return r.push({type:\"END\",index:n,value:\"\"}),r}function F(e,t={}){let r=D(e);t.delimiter??=\"/#?\",t.prefixes??=\"./\";let n=`[^${S(t.delimiter)}]+?`,a=[],c=0,l=0,s=\"\",i=new Set,o=h=>{if(l<r.length&&r[l].type===h)return r[l++].value},f=()=>o(\"OTHER_MODIFIER\")??o(\"ASTERISK\"),d=h=>{let u=o(h);if(u!==void 0)return u;let{type:p,index:A}=r[l];throw new TypeError(`Unexpected ${p} at ${A}, expected ${h}`)},T=()=>{let h=\"\",u;for(;u=o(\"CHAR\")??o(\"ESCAPED_CHAR\");)h+=u;return h},xe=h=>h,L=t.encodePart||xe,I=\"\",U=h=>{I+=h},$=()=>{I.length&&(a.push(new R(3,\"\",\"\",L(I),\"\",3)),I=\"\")},X=(h,u,p,A,Z)=>{let g=3;switch(Z){case\"?\":g=1;break;case\"*\":g=0;break;case\"+\":g=2;break}if(!u&&!p&&g===3){U(h);return}if($(),!u&&!p){if(!h)return;a.push(new R(3,\"\",\"\",L(h),\"\",g));return}let m;p?p===\"*\"?m=v:m=p:m=n;let O=2;m===n?(O=1,m=\"\"):m===v&&(O=0,m=\"\");let P;if(u?P=u:p&&(P=c++),i.has(P))throw new TypeError(`Duplicate name '${P}'.`);i.add(P),a.push(new R(O,P,L(h),m,L(A),g))};for(;l<r.length;){let h=o(\"CHAR\"),u=o(\"NAME\"),p=o(\"REGEX\");if(!u&&!p&&(p=o(\"ASTERISK\")),u||p){let g=h??\"\";t.prefixes.indexOf(g)===-1&&(U(g),g=\"\"),$();let m=f();X(g,u,p,\"\",m);continue}let A=h??o(\"ESCAPED_CHAR\");if(A){U(A);continue}if(o(\"OPEN\")){let g=T(),m=o(\"NAME\"),O=o(\"REGEX\");!m&&!O&&(O=o(\"ASTERISK\"));let P=T();d(\"CLOSE\");let be=f();X(g,m,O,P,be);continue}$(),d(\"END\")}return a}function S(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function B(e){return e&&e.ignoreCase?\"ui\":\"u\"}function q(e,t,r){return W(F(e,r),t,r)}function k(e){switch(e){case 0:return\"*\";case 1:return\"?\";case 2:return\"+\";case 3:return\"\"}}function W(e,t,r={}){r.delimiter??=\"/#?\",r.prefixes??=\"./\",r.sensitive??=!1,r.strict??=!1,r.end??=!0,r.start??=!0,r.endsWith=\"\";let n=r.start?\"^\":\"\";for(let s of e){if(s.type===3){s.modifier===3?n+=S(s.value):n+=`(?:${S(s.value)})${k(s.modifier)}`;continue}t&&t.push(s.name);let i=`[^${S(r.delimiter)}]+?`,o=s.value;if(s.type===1?o=i:s.type===0&&(o=v),!s.prefix.length&&!s.suffix.length){s.modifier===3||s.modifier===1?n+=`(${o})${k(s.modifier)}`:n+=`((?:${o})${k(s.modifier)})`;continue}if(s.modifier===3||s.modifier===1){n+=`(?:${S(s.prefix)}(${o})${S(s.suffix)})`,n+=k(s.modifier);continue}n+=`(?:${S(s.prefix)}`,n+=`((?:${o})(?:`,n+=S(s.suffix),n+=S(s.prefix),n+=`(?:${o}))*)${S(s.suffix)})`,s.modifier===0&&(n+=\"?\")}let a=`[${S(r.endsWith)}]|$`,c=`[${S(r.delimiter)}]`;if(r.end)return r.strict||(n+=`${c}?`),r.endsWith.length?n+=`(?=${a})`:n+=\"$\",new RegExp(n,B(r));r.strict||(n+=`(?:${c}(?=${a}))?`);let l=!1;if(e.length){let s=e[e.length-1];s.type===3&&s.modifier===3&&(l=r.delimiter.indexOf(s)>-1)}return l||(n+=`(?=${c}|${a})`),new RegExp(n,B(r))}var x={delimiter:\"\",prefixes:\"\",sensitive:!0,strict:!0},J={delimiter:\".\",prefixes:\"\",sensitive:!0,strict:!0},Q={delimiter:\"/\",prefixes:\"/\",sensitive:!0,strict:!0};function ee(e,t){return e.length?e[0]===\"/\"?!0:!t||e.length<2?!1:(e[0]==\"\\\\\"||e[0]==\"{\")&&e[1]==\"/\":!1}function te(e,t){return e.startsWith(t)?e.substring(t.length,e.length):e}function Ce(e,t){return e.endsWith(t)?e.substr(0,e.length-t.length):e}function _(e){return!e||e.length<2?!1:e[0]===\"[\"||(e[0]===\"\\\\\"||e[0]===\"{\")&&e[1]===\"[\"}var re=[\"ftp\",\"file\",\"http\",\"https\",\"ws\",\"wss\"];function N(e){if(!e)return!0;for(let t of re)if(e.test(t))return!0;return!1}function ne(e,t){if(e=te(e,\"#\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.hash=e,r.hash?r.hash.substring(1,r.hash.length):\"\"}function se(e,t){if(e=te(e,\"?\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.search=e,r.search?r.search.substring(1,r.search.length):\"\"}function ie(e,t){return t||e===\"\"?e:_(e)?K(e):j(e)}function ae(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.password=e,r.password}function oe(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.username=e,r.username}function ce(e,t,r){if(r||e===\"\")return e;if(t&&!re.includes(t))return new URL(`${t}:${e}`).pathname;let n=e[0]==\"/\";return e=new URL(n?e:\"/-\"+e,\"https://example.com\").pathname,n||(e=e.substring(2,e.length)),e}function le(e,t,r){return z(t)===e&&(e=\"\"),r||e===\"\"?e:G(e)}function fe(e,t){return e=Ce(e,\":\"),t||e===\"\"?e:y(e)}function z(e){switch(e){case\"ws\":case\"http\":return\"80\";case\"wws\":case\"https\":return\"443\";case\"ftp\":return\"21\";default:return\"\"}}function y(e){if(e===\"\")return e;if(/^[-+.A-Za-z0-9]*$/.test(e))return e.toLowerCase();throw new TypeError(`Invalid protocol '${e}'.`)}function he(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.username=e,t.username}function ue(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.password=e,t.password}function j(e){if(e===\"\")return e;if(/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(e))throw new TypeError(`Invalid hostname '${e}'`);let t=new URL(\"https://example.com\");return t.hostname=e,t.hostname}function K(e){if(e===\"\")return e;if(/[^0-9a-fA-F[\\]:]/g.test(e))throw new TypeError(`Invalid IPv6 hostname '${e}'`);return e.toLowerCase()}function G(e){if(e===\"\"||/^[0-9]*$/.test(e)&&parseInt(e)<=65535)return e;throw new TypeError(`Invalid port '${e}'.`)}function de(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.pathname=e[0]!==\"/\"?\"/-\"+e:e,e[0]!==\"/\"?t.pathname.substring(2,t.pathname.length):t.pathname}function pe(e){return e===\"\"?e:new URL(`data:${e}`).pathname}function ge(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.search=e,t.search.substring(1,t.search.length)}function me(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.hash=e,t.hash.substring(1,t.hash.length)}var H=class{#i;#n=[];#t={};#e=0;#s=1;#l=0;#o=0;#d=0;#p=0;#g=!1;constructor(t){this.#i=t}get result(){return this.#t}parse(){for(this.#n=D(this.#i,!0);this.#e<this.#n.length;this.#e+=this.#s){if(this.#s=1,this.#n[this.#e].type===\"END\"){if(this.#o===0){this.#b(),this.#f()?this.#r(9,1):this.#h()?this.#r(8,1):this.#r(7,0);continue}else if(this.#o===2){this.#u(5);continue}this.#r(10,0);break}if(this.#d>0)if(this.#A())this.#d-=1;else continue;if(this.#T()){this.#d+=1;continue}switch(this.#o){case 0:this.#P()&&this.#u(1);break;case 1:if(this.#P()){this.#C();let t=7,r=1;this.#E()?(t=2,r=3):this.#g&&(t=2),this.#r(t,r)}break;case 2:this.#S()?this.#u(3):(this.#x()||this.#h()||this.#f())&&this.#u(5);break;case 3:this.#O()?this.#r(4,1):this.#S()&&this.#r(5,1);break;case 4:this.#S()&&this.#r(5,1);break;case 5:this.#y()?this.#p+=1:this.#w()&&(this.#p-=1),this.#k()&&!this.#p?this.#r(6,1):this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 6:this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 7:this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 8:this.#f()&&this.#r(9,1);break;case 9:break;case 10:break}}this.#t.hostname!==void 0&&this.#t.port===void 0&&(this.#t.port=\"\")}#r(t,r){switch(this.#o){case 0:break;case 1:this.#t.protocol=this.#c();break;case 2:break;case 3:this.#t.username=this.#c();break;case 4:this.#t.password=this.#c();break;case 5:this.#t.hostname=this.#c();break;case 6:this.#t.port=this.#c();break;case 7:this.#t.pathname=this.#c();break;case 8:this.#t.search=this.#c();break;case 9:this.#t.hash=this.#c();break;case 10:break}this.#o!==0&&t!==10&&([1,2,3,4].includes(this.#o)&&[6,7,8,9].includes(t)&&(this.#t.hostname??=\"\"),[1,2,3,4,5,6].includes(this.#o)&&[8,9].includes(t)&&(this.#t.pathname??=this.#g?\"/\":\"\"),[1,2,3,4,5,6,7].includes(this.#o)&&t===9&&(this.#t.search??=\"\")),this.#R(t,r)}#R(t,r){this.#o=t,this.#l=this.#e+r,this.#e+=r,this.#s=0}#b(){this.#e=this.#l,this.#s=0}#u(t){this.#b(),this.#o=t}#m(t){return t<0&&(t=this.#n.length-t),t<this.#n.length?this.#n[t]:this.#n[this.#n.length-1]}#a(t,r){let n=this.#m(t);return n.value===r&&(n.type===\"CHAR\"||n.type===\"ESCAPED_CHAR\"||n.type===\"INVALID_CHAR\")}#P(){return this.#a(this.#e,\":\")}#E(){return this.#a(this.#e+1,\"/\")&&this.#a(this.#e+2,\"/\")}#S(){return this.#a(this.#e,\"@\")}#O(){return this.#a(this.#e,\":\")}#k(){return this.#a(this.#e,\":\")}#x(){return this.#a(this.#e,\"/\")}#h(){if(this.#a(this.#e,\"?\"))return!0;if(this.#n[this.#e].value!==\"?\")return!1;let t=this.#m(this.#e-1);return t.type!==\"NAME\"&&t.type!==\"REGEX\"&&t.type!==\"CLOSE\"&&t.type!==\"ASTERISK\"}#f(){return this.#a(this.#e,\"#\")}#T(){return this.#n[this.#e].type==\"OPEN\"}#A(){return this.#n[this.#e].type==\"CLOSE\"}#y(){return this.#a(this.#e,\"[\")}#w(){return this.#a(this.#e,\"]\")}#c(){let t=this.#n[this.#e],r=this.#m(this.#l).index;return this.#i.substring(r,t.index)}#C(){let t={};Object.assign(t,x),t.encodePart=y;let r=q(this.#c(),void 0,t);this.#g=N(r)}};var V=[\"protocol\",\"username\",\"password\",\"hostname\",\"port\",\"pathname\",\"search\",\"hash\"],E=\"*\";function Se(e,t){if(typeof e!=\"string\")throw new TypeError(\"parameter 1 is not of type 'string'.\");let r=new URL(e,t);return{protocol:r.protocol.substring(0,r.protocol.length-1),username:r.username,password:r.password,hostname:r.hostname,port:r.port,pathname:r.pathname,search:r.search!==\"\"?r.search.substring(1,r.search.length):void 0,hash:r.hash!==\"\"?r.hash.substring(1,r.hash.length):void 0}}function b(e,t){return t?C(e):e}function w(e,t,r){let n;if(typeof t.baseURL==\"string\")try{n=new URL(t.baseURL),t.protocol===void 0&&(e.protocol=b(n.protocol.substring(0,n.protocol.length-1),r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&(e.username=b(n.username,r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&t.password===void 0&&(e.password=b(n.password,r)),t.protocol===void 0&&t.hostname===void 0&&(e.hostname=b(n.hostname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&(e.port=b(n.port,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&(e.pathname=b(n.pathname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&(e.search=b(n.search.substring(1,n.search.length),r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&t.hash===void 0&&(e.hash=b(n.hash.substring(1,n.hash.length),r))}catch{throw new TypeError(`invalid baseURL '${t.baseURL}'.`)}if(typeof t.protocol==\"string\"&&(e.protocol=fe(t.protocol,r)),typeof t.username==\"string\"&&(e.username=oe(t.username,r)),typeof t.password==\"string\"&&(e.password=ae(t.password,r)),typeof t.hostname==\"string\"&&(e.hostname=ie(t.hostname,r)),typeof t.port==\"string\"&&(e.port=le(t.port,e.protocol,r)),typeof t.pathname==\"string\"){if(e.pathname=t.pathname,n&&!ee(e.pathname,r)){let a=n.pathname.lastIndexOf(\"/\");a>=0&&(e.pathname=b(n.pathname.substring(0,a+1),r)+e.pathname)}e.pathname=ce(e.pathname,e.protocol,r)}return typeof t.search==\"string\"&&(e.search=se(t.search,r)),typeof t.hash==\"string\"&&(e.hash=ne(t.hash,r)),e}function C(e){return e.replace(/([+*?:{}()\\\\])/g,\"\\\\$1\")}function Le(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function Ie(e,t){t.delimiter??=\"/#?\",t.prefixes??=\"./\",t.sensitive??=!1,t.strict??=!1,t.end??=!0,t.start??=!0,t.endsWith=\"\";let r=\".*\",n=`[^${Le(t.delimiter)}]+?`,a=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,c=\"\";for(let l=0;l<e.length;++l){let s=e[l];if(s.type===3){if(s.modifier===3){c+=C(s.value);continue}c+=`{${C(s.value)}}${k(s.modifier)}`;continue}let i=s.hasCustomName(),o=!!s.suffix.length||!!s.prefix.length&&(s.prefix.length!==1||!t.prefixes.includes(s.prefix)),f=l>0?e[l-1]:null,d=l<e.length-1?e[l+1]:null;if(!o&&i&&s.type===1&&s.modifier===3&&d&&!d.prefix.length&&!d.suffix.length)if(d.type===3){let T=d.value.length>0?d.value[0]:\"\";o=a.test(T)}else o=!d.hasCustomName();if(!o&&!s.prefix.length&&f&&f.type===3){let T=f.value[f.value.length-1];o=t.prefixes.includes(T)}o&&(c+=\"{\"),c+=C(s.prefix),i&&(c+=`:${s.name}`),s.type===2?c+=`(${s.value})`:s.type===1?i||(c+=`(${n})`):s.type===0&&(!i&&(!f||f.type===3||f.modifier!==3||o||s.prefix!==\"\")?c+=\"*\":c+=`(${r})`),s.type===1&&i&&s.suffix.length&&a.test(s.suffix[0])&&(c+=\"\\\\\"),c+=C(s.suffix),o&&(c+=\"}\"),s.modifier!==3&&(c+=k(s.modifier))}return c}var Y=class{#i;#n={};#t={};#e={};#s={};#l=!1;constructor(t={},r,n){try{let a;if(typeof r==\"string\"?a=r:n=r,typeof t==\"string\"){let i=new H(t);if(i.parse(),t=i.result,a===void 0&&typeof t.protocol!=\"string\")throw new TypeError(\"A base URL must be provided for a relative constructor string.\");t.baseURL=a}else{if(!t||typeof t!=\"object\")throw new TypeError(\"parameter 1 is not of type 'string' and cannot convert to dictionary.\");if(a)throw new TypeError(\"parameter 1 is not of type 'string'.\")}typeof n>\"u\"&&(n={ignoreCase:!1});let c={ignoreCase:n.ignoreCase===!0},l={pathname:E,protocol:E,username:E,password:E,hostname:E,port:E,search:E,hash:E};this.#i=w(l,t,!0),z(this.#i.protocol)===this.#i.port&&(this.#i.port=\"\");let s;for(s of V){if(!(s in this.#i))continue;let i={},o=this.#i[s];switch(this.#t[s]=[],s){case\"protocol\":Object.assign(i,x),i.encodePart=y;break;case\"username\":Object.assign(i,x),i.encodePart=he;break;case\"password\":Object.assign(i,x),i.encodePart=ue;break;case\"hostname\":Object.assign(i,J),_(o)?i.encodePart=K:i.encodePart=j;break;case\"port\":Object.assign(i,x),i.encodePart=G;break;case\"pathname\":N(this.#n.protocol)?(Object.assign(i,Q,c),i.encodePart=de):(Object.assign(i,x,c),i.encodePart=pe);break;case\"search\":Object.assign(i,x,c),i.encodePart=ge;break;case\"hash\":Object.assign(i,x,c),i.encodePart=me;break}try{this.#s[s]=F(o,i),this.#n[s]=W(this.#s[s],this.#t[s],i),this.#e[s]=Ie(this.#s[s],i),this.#l=this.#l||this.#s[s].some(f=>f.type===2)}catch{throw new TypeError(`invalid ${s} pattern '${this.#i[s]}'.`)}}}catch(a){throw new TypeError(`Failed to construct 'URLPattern': ${a.message}`)}}test(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return!1;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return!1}let a;for(a of V)if(!this.#n[a].exec(n[a]))return!1;return!0}exec(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return null}let a={};r?a.inputs=[t,r]:a.inputs=[t];let c;for(c of V){let l=this.#n[c].exec(n[c]);if(!l)return null;let s={};for(let[i,o]of this.#t[c].entries())if(typeof o==\"string\"||typeof o==\"number\"){let f=l[i+1];s[o]=f}a[c]={input:n[c]??\"\",groups:s}}return a}static compareComponent(t,r,n){let a=(i,o)=>{for(let f of[\"type\",\"modifier\",\"prefix\",\"value\",\"suffix\"]){if(i[f]<o[f])return-1;if(i[f]===o[f])continue;return 1}return 0},c=new R(3,\"\",\"\",\"\",\"\",3),l=new R(0,\"\",\"\",\"\",\"\",3),s=(i,o)=>{let f=0;for(;f<Math.min(i.length,o.length);++f){let d=a(i[f],o[f]);if(d)return d}return i.length===o.length?0:a(i[f]??c,o[f]??c)};return!r.#e[t]&&!n.#e[t]?0:r.#e[t]&&!n.#e[t]?s(r.#s[t],[l]):!r.#e[t]&&n.#e[t]?s([l],n.#s[t]):s(r.#s[t],n.#s[t])}get protocol(){return this.#e.protocol}get username(){return this.#e.username}get password(){return this.#e.password}get hostname(){return this.#e.hostname}get port(){return this.#e.port}get pathname(){return this.#e.pathname}get search(){return this.#e.search}get hash(){return this.#e.hash}get hasRegExpGroups(){return this.#l}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvdXJscGF0dGVybi1wb2x5ZmlsbC9kaXN0L3VybHBhdHRlcm4uY2pzIiwibWFwcGluZ3MiOiJBQUFhLDRCQUE0Qix1Q0FBdUMsa0NBQWtDLHVDQUF1QyxlQUFlLHNCQUFzQix1QkFBdUIsRUFBRSxnQkFBZ0IsK0ZBQStGLG1EQUFtRCxFQUFFLFVBQVUsaUJBQWlCLGVBQWUsU0FBUyxLQUFLLFVBQVUsT0FBTyxpQkFBaUIsRUFBRSxzQkFBc0IsWUFBWSxPQUFPLFFBQVEsVUFBVSxTQUFTLFVBQVUsV0FBVyx5QkFBeUIsaUZBQWlGLGdCQUFnQixtREFBbUQsV0FBVyxTQUFTLDBCQUEwQixZQUFZLFdBQVcsaUJBQWlCLG9EQUFvRCxtQkFBbUIsYUFBYSxLQUFLLFdBQVcsRUFBRSx5QkFBeUIsNkJBQTZCLFFBQVEseUNBQXlDLEdBQUcsWUFBWSxRQUFRLHFDQUFxQyxFQUFFLFNBQVMscUJBQXFCLFFBQVEsMkNBQTJDLEVBQUUsU0FBUyxhQUFhLFFBQVEsMkNBQTJDLEVBQUUsU0FBUyxTQUFTLEdBQUcsUUFBUSxpQ0FBaUMsRUFBRSxTQUFTLFNBQVMsR0FBRyxRQUFRLGtDQUFrQyxFQUFFLFNBQVMsWUFBWSxlQUFlLEtBQUssV0FBVyxFQUFFLG9CQUFvQiw2Q0FBNkMsVUFBVSxTQUFTLE1BQU0sT0FBTywrQkFBK0IsRUFBRSxHQUFHLFNBQVMsUUFBUSw0QkFBNEIsTUFBTSxTQUFTLFlBQVksd0JBQXdCLGVBQWUsc0NBQXNDLEVBQUUsR0FBRyxTQUFTLEtBQUssV0FBVyxFQUFFLGlCQUFpQix3QkFBd0IsS0FBSyxPQUFPLEVBQUUsU0FBUyxNQUFNLGdCQUFnQixpQkFBaUIsU0FBUyxlQUFlLGNBQWMsSUFBSSxPQUFPLHdDQUF3Qyx5Q0FBeUMsRUFBRSxRQUFRLE1BQU0sVUFBVSxjQUFjLE1BQU0sMkJBQTJCLEVBQUUsR0FBRyxTQUFTLE9BQU8sd0JBQXdCLEVBQUUsR0FBRyxTQUFTLFFBQVEsNkJBQTZCLE1BQU0sU0FBUyxRQUFRLGlDQUFpQyxFQUFFLGVBQWUsNEJBQTRCLElBQUksaUJBQWlCLEVBQUUsV0FBVyxzQ0FBc0MsV0FBVyxlQUFlLHVDQUF1QyxpREFBaUQsZ0RBQWdELFdBQVcsdUJBQXVCLElBQUksZUFBZSxNQUFNLGtDQUFrQyxHQUFHLEtBQUssRUFBRSxhQUFhLEVBQUUsR0FBRyxRQUFRLFdBQVcsS0FBSywrQkFBK0IsTUFBTSxTQUFTLHVDQUF1QyxLQUFLLFFBQVEsa0RBQWtELGlCQUFpQixRQUFRLFVBQVUsWUFBWSxNQUFNLFlBQVksTUFBTSxZQUFZLE1BQU0sa0JBQWtCLEtBQUssT0FBTyxlQUFlLGFBQWEsaUNBQWlDLE9BQU8sTUFBTSxzQkFBc0IsUUFBUSxtQ0FBbUMsTUFBTSxvRUFBb0UsRUFBRSxLQUFLLDJDQUEyQyxLQUFLLFdBQVcsRUFBRSx5Q0FBeUMsbUNBQW1DLFlBQVksNENBQTRDLFVBQVUsY0FBYyxTQUFTLDJCQUEyQixNQUFNLEtBQUssU0FBUyxjQUFjLG1DQUFtQywwQkFBMEIsVUFBVSxXQUFXLFdBQVcsY0FBYyxTQUFTLGFBQWEsU0FBUyxjQUFjLDRCQUE0QixzQkFBc0IsY0FBYyxnQ0FBZ0Msa0JBQWtCLHFCQUFxQixjQUFjLFVBQVUsaUJBQWlCLGlCQUFpQixpQkFBaUIsaUJBQWlCLG1CQUFtQixFQUFFLDJHQUEyRyxxQkFBcUIsZ0JBQWdCLGVBQWUsc0NBQXNDLFdBQVcsR0FBRyxjQUFjLEVBQUUsU0FBUyxrQkFBa0IsV0FBVyxlQUFlLGVBQWUsd0VBQXdFLHNDQUFzQyxFQUFFLEdBQUcsY0FBYyxZQUFZLEVBQUUsR0FBRyxjQUFjLEdBQUcsU0FBUyxtQ0FBbUMsU0FBUyxZQUFZLEdBQUcsRUFBRSxHQUFHLFlBQVksb0JBQW9CLFNBQVMsU0FBUyxZQUFZLFlBQVksRUFBRSw2Q0FBNkMsRUFBRSxNQUFNLFlBQVksNEJBQTRCLFVBQVUsY0FBYyxXQUFXLGVBQWUsR0FBRyxpQ0FBaUMsRUFBRSwrQkFBK0IsRUFBRSw2QkFBNkIsb0JBQW9CLEVBQUUsS0FBSyxFQUFFLE1BQU0sU0FBUyxhQUFhLG9CQUFvQiwwREFBMEQsb0JBQW9CLEVBQUUsR0FBRyxFQUFFLHVCQUF1QixPQUFPLGdEQUFnRCxJQUFJLGlEQUFpRCxJQUFJLG1EQUFtRCxpQkFBaUIscUVBQXFFLGlCQUFpQixpQkFBaUIsd0RBQXdELGlCQUFpQixxREFBcUQsY0FBYywyREFBMkQsZUFBZSxnREFBZ0QsY0FBYyxlQUFlLHNDQUFzQyxTQUFTLGlCQUFpQixrQ0FBa0MscUNBQXFDLDREQUE0RCxpQkFBaUIsa0NBQWtDLHFDQUFxQyxvRUFBb0UsaUJBQWlCLGtDQUFrQyxpQkFBaUIsc0JBQXNCLHFDQUFxQywrQkFBK0IsaUJBQWlCLHNCQUFzQixxQ0FBcUMsK0JBQStCLG1CQUFtQixzQkFBc0Isd0NBQXdDLEVBQUUsR0FBRyxFQUFFLFlBQVksZ0JBQWdCLDZGQUE2RixtQkFBbUIseUNBQXlDLGlCQUFpQixvQ0FBb0MsY0FBYyxVQUFVLCtCQUErQixrQ0FBa0MscUJBQXFCLGtCQUFrQixjQUFjLG1CQUFtQixzREFBc0QseUNBQXlDLEVBQUUsS0FBSyxlQUFlLG1CQUFtQixxQ0FBcUMsK0JBQStCLGVBQWUsbUJBQW1CLHFDQUFxQywrQkFBK0IsY0FBYyxtQkFBbUIsZ0ZBQWdGLEVBQUUsSUFBSSxxQ0FBcUMsK0JBQStCLGNBQWMsbUJBQW1CLDZFQUE2RSxFQUFFLElBQUksdUJBQXVCLGNBQWMsMkRBQTJELHFDQUFxQyxFQUFFLEtBQUssZUFBZSxtQkFBbUIscUNBQXFDLHNHQUFzRyxlQUFlLGdDQUFnQyxFQUFFLFlBQVksZUFBZSxtQkFBbUIscUNBQXFDLHdEQUF3RCxlQUFlLG1CQUFtQixxQ0FBcUMsa0RBQWtELFlBQVksR0FBRyxNQUFNLE1BQU0sS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssTUFBTSxlQUFlLFVBQVUsYUFBYSxlQUFlLFFBQVEsMEJBQTBCLHVCQUF1QixrQkFBa0IsNENBQTRDLGdCQUFnQixxRUFBcUUsU0FBUyxxQkFBcUIsV0FBVyxTQUFTLGNBQWMsTUFBTSxxQ0FBcUMsY0FBYyxjQUFjLFdBQVcsU0FBUyxnQkFBZ0IsNkJBQTZCLE1BQU0scUJBQXFCLFVBQVUsWUFBWSxnREFBZ0QsTUFBTSwwRUFBMEUsTUFBTSxzREFBc0QsTUFBTSwrQkFBK0IsTUFBTSwySkFBMkosTUFBTSw2RUFBNkUsTUFBTSxzREFBc0QsTUFBTSwrQkFBK0IsTUFBTSxhQUFhLGVBQWUsb0VBQW9FLFFBQVEsZ0JBQWdCLGFBQWEsa0NBQWtDLE1BQU0sYUFBYSxrQ0FBa0MsTUFBTSxrQ0FBa0MsTUFBTSxrQ0FBa0MsTUFBTSw4QkFBOEIsTUFBTSxrQ0FBa0MsTUFBTSxnQ0FBZ0MsTUFBTSw4QkFBOEIsTUFBTSxjQUFjLHdRQUF3USxRQUFRLGlEQUFpRCxLQUFLLDBCQUEwQixNQUFNLG9CQUFvQixNQUFNLHVGQUF1RixRQUFRLGlCQUFpQix3RkFBd0YsS0FBSyw0QkFBNEIsS0FBSyxzREFBc0QsS0FBSyw0QkFBNEIsS0FBSyw0QkFBNEIsS0FBSyw0QkFBNEIsS0FBSyw0QkFBNEIsS0FBSyxpQ0FBaUMseUNBQXlDLHlCQUF5QixnRkFBZ0YsS0FBSyw0QkFBNEIsS0FBSyxxQ0FBcUMsS0FBSyxzQ0FBc0MsS0FBSyw0QkFBNEIsS0FBSyw0QkFBNEIsS0FBSyxnREFBZ0Qsb0NBQW9DLEtBQUssU0FBUyxrQ0FBa0MsNEJBQTRCLGVBQWUsNEZBQTRGLGlCQUFpQixrRkFBa0YsbUJBQW1CLE9BQU8sOFFBQThRLGdCQUFnQixnQkFBZ0Isa0JBQWtCLE1BQU0sa0NBQWtDLGc2QkFBZzZCLE1BQU0sd0NBQXdDLFVBQVUsS0FBSyxzVUFBc1UsK0NBQStDLGtDQUFrQywrREFBK0QsdUNBQXVDLDZHQUE2RyxjQUFjLDBCQUEwQixpQkFBaUIsZUFBZSw0QkFBNEIsc0JBQXNCLGlCQUFpQiwyR0FBMkcsa0JBQWtCLGdCQUFnQiwwQkFBMEIsWUFBWSxTQUFTLFlBQVksV0FBVyxLQUFLLFdBQVcsZUFBZSxtQkFBbUIsY0FBYyxTQUFTLEtBQUssRUFBRSxZQUFZLEVBQUUsY0FBYyxFQUFFLFNBQVMsbUtBQW1LLDJGQUEyRixxQ0FBcUMsWUFBWSwwQkFBMEIsd0NBQXdDLGdDQUFnQyx5QkFBeUIsU0FBUyw2QkFBNkIsT0FBTyxxQkFBcUIsUUFBUSx5QkFBeUIsRUFBRSxzRkFBc0YsRUFBRSwyRkFBMkYsc0NBQXNDLFNBQVMsWUFBWSxHQUFHLE1BQU0sTUFBTSxNQUFNLE1BQU0sTUFBTSxnQkFBZ0IsTUFBTSxJQUFJLE1BQU0sa0RBQWtELGVBQWUsc0pBQXNKLFlBQVksS0FBSyx1SEFBdUgsaUVBQWlFLGtCQUFrQixjQUFjLEVBQUUsT0FBTyw2QkFBNkIsSUFBSSwrRUFBK0Usd0VBQXdFLE1BQU0sWUFBWSw0QkFBNEIsUUFBUSxjQUFjLHdCQUF3QixpREFBaUQsTUFBTSxrREFBa0QsTUFBTSxrREFBa0QsTUFBTSxxRUFBcUUsTUFBTSw2Q0FBNkMsTUFBTSxpSEFBaUgsTUFBTSxrREFBa0QsTUFBTSxnREFBZ0QsTUFBTSxJQUFJLG9JQUFvSSxNQUFNLCtCQUErQixHQUFHLFdBQVcsV0FBVyxPQUFPLFNBQVMseURBQXlELFVBQVUsSUFBSSxTQUFTLElBQUksT0FBTyx1RkFBdUYscUZBQXFGLHlCQUF5QixJQUFJLGlEQUFpRCxNQUFNLFNBQVMsTUFBTSw4Q0FBOEMsU0FBUyxTQUFTLElBQUksT0FBTyx1RkFBdUYscUZBQXFGLHVCQUF1QixJQUFJLGlEQUFpRCxNQUFNLFlBQVksU0FBUyw4QkFBOEIsTUFBTSxZQUFZLDRCQUE0QixrQkFBa0IsU0FBUywrRUFBK0UsYUFBYSxPQUFPLE1BQU0seUJBQXlCLFNBQVMsK0JBQStCLGNBQWMsMkRBQTJELHNCQUFzQix3QkFBd0IsU0FBUyxTQUFTLDZEQUE2RCxRQUFRLEtBQUssOEJBQThCLEtBQUssbUJBQW1CLGNBQWMsaURBQWlELGdIQUFnSCxlQUFlLHdCQUF3QixlQUFlLHdCQUF3QixlQUFlLHdCQUF3QixlQUFlLHdCQUF3QixXQUFXLG9CQUFvQixlQUFlLHdCQUF3QixhQUFhLHNCQUFzQixXQUFXLG9CQUFvQixzQkFBc0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL3VybHBhdHRlcm4tcG9seWZpbGwvZGlzdC91cmxwYXR0ZXJuLmNqcz9mMTdhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO3ZhciBNPU9iamVjdC5kZWZpbmVQcm9wZXJ0eTt2YXIgUGU9T2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcjt2YXIgUmU9T2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7dmFyIEVlPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dmFyIE9lPShlLHQpPT57Zm9yKHZhciByIGluIHQpTShlLHIse2dldDp0W3JdLGVudW1lcmFibGU6ITB9KX0sa2U9KGUsdCxyLG4pPT57aWYodCYmdHlwZW9mIHQ9PVwib2JqZWN0XCJ8fHR5cGVvZiB0PT1cImZ1bmN0aW9uXCIpZm9yKGxldCBhIG9mIFJlKHQpKSFFZS5jYWxsKGUsYSkmJmEhPT1yJiZNKGUsYSx7Z2V0OigpPT50W2FdLGVudW1lcmFibGU6IShuPVBlKHQsYSkpfHxuLmVudW1lcmFibGV9KTtyZXR1cm4gZX07dmFyIFRlPWU9PmtlKE0oe30sXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSksZSk7dmFyIE5lPXt9O09lKE5lLHtVUkxQYXR0ZXJuOigpPT5ZfSk7bW9kdWxlLmV4cG9ydHM9VGUoTmUpO3ZhciBSPWNsYXNze3R5cGU9MztuYW1lPVwiXCI7cHJlZml4PVwiXCI7dmFsdWU9XCJcIjtzdWZmaXg9XCJcIjttb2RpZmllcj0zO2NvbnN0cnVjdG9yKHQscixuLGEsYyxsKXt0aGlzLnR5cGU9dCx0aGlzLm5hbWU9cix0aGlzLnByZWZpeD1uLHRoaXMudmFsdWU9YSx0aGlzLnN1ZmZpeD1jLHRoaXMubW9kaWZpZXI9bH1oYXNDdXN0b21OYW1lKCl7cmV0dXJuIHRoaXMubmFtZSE9PVwiXCImJnR5cGVvZiB0aGlzLm5hbWUhPVwibnVtYmVyXCJ9fSxBZT0vWyRfXFxwe0lEX1N0YXJ0fV0vdSx5ZT0vWyRfXFx1MjAwQ1xcdTIwMERcXHB7SURfQ29udGludWV9XS91LHY9XCIuKlwiO2Z1bmN0aW9uIHdlKGUsdCl7cmV0dXJuKHQ/L15bXFx4MDAtXFx4RkZdKiQvOi9eW1xceDAwLVxceDdGXSokLykudGVzdChlKX1mdW5jdGlvbiBEKGUsdD0hMSl7bGV0IHI9W10sbj0wO2Zvcig7bjxlLmxlbmd0aDspe2xldCBhPWVbbl0sYz1mdW5jdGlvbihsKXtpZighdCl0aHJvdyBuZXcgVHlwZUVycm9yKGwpO3IucHVzaCh7dHlwZTpcIklOVkFMSURfQ0hBUlwiLGluZGV4Om4sdmFsdWU6ZVtuKytdfSl9O2lmKGE9PT1cIipcIil7ci5wdXNoKHt0eXBlOlwiQVNURVJJU0tcIixpbmRleDpuLHZhbHVlOmVbbisrXX0pO2NvbnRpbnVlfWlmKGE9PT1cIitcInx8YT09PVwiP1wiKXtyLnB1c2goe3R5cGU6XCJPVEhFUl9NT0RJRklFUlwiLGluZGV4Om4sdmFsdWU6ZVtuKytdfSk7Y29udGludWV9aWYoYT09PVwiXFxcXFwiKXtyLnB1c2goe3R5cGU6XCJFU0NBUEVEX0NIQVJcIixpbmRleDpuKyssdmFsdWU6ZVtuKytdfSk7Y29udGludWV9aWYoYT09PVwie1wiKXtyLnB1c2goe3R5cGU6XCJPUEVOXCIsaW5kZXg6bix2YWx1ZTplW24rK119KTtjb250aW51ZX1pZihhPT09XCJ9XCIpe3IucHVzaCh7dHlwZTpcIkNMT1NFXCIsaW5kZXg6bix2YWx1ZTplW24rK119KTtjb250aW51ZX1pZihhPT09XCI6XCIpe2xldCBsPVwiXCIscz1uKzE7Zm9yKDtzPGUubGVuZ3RoOyl7bGV0IGk9ZS5zdWJzdHIocywxKTtpZihzPT09bisxJiZBZS50ZXN0KGkpfHxzIT09bisxJiZ5ZS50ZXN0KGkpKXtsKz1lW3MrK107Y29udGludWV9YnJlYWt9aWYoIWwpe2MoYE1pc3NpbmcgcGFyYW1ldGVyIG5hbWUgYXQgJHtufWApO2NvbnRpbnVlfXIucHVzaCh7dHlwZTpcIk5BTUVcIixpbmRleDpuLHZhbHVlOmx9KSxuPXM7Y29udGludWV9aWYoYT09PVwiKFwiKXtsZXQgbD0xLHM9XCJcIixpPW4rMSxvPSExO2lmKGVbaV09PT1cIj9cIil7YyhgUGF0dGVybiBjYW5ub3Qgc3RhcnQgd2l0aCBcIj9cIiBhdCAke2l9YCk7Y29udGludWV9Zm9yKDtpPGUubGVuZ3RoOyl7aWYoIXdlKGVbaV0sITEpKXtjKGBJbnZhbGlkIGNoYXJhY3RlciAnJHtlW2ldfScgYXQgJHtpfS5gKSxvPSEwO2JyZWFrfWlmKGVbaV09PT1cIlxcXFxcIil7cys9ZVtpKytdK2VbaSsrXTtjb250aW51ZX1pZihlW2ldPT09XCIpXCIpe2lmKGwtLSxsPT09MCl7aSsrO2JyZWFrfX1lbHNlIGlmKGVbaV09PT1cIihcIiYmKGwrKyxlW2krMV0hPT1cIj9cIikpe2MoYENhcHR1cmluZyBncm91cHMgYXJlIG5vdCBhbGxvd2VkIGF0ICR7aX1gKSxvPSEwO2JyZWFrfXMrPWVbaSsrXX1pZihvKWNvbnRpbnVlO2lmKGwpe2MoYFVuYmFsYW5jZWQgcGF0dGVybiBhdCAke259YCk7Y29udGludWV9aWYoIXMpe2MoYE1pc3NpbmcgcGF0dGVybiBhdCAke259YCk7Y29udGludWV9ci5wdXNoKHt0eXBlOlwiUkVHRVhcIixpbmRleDpuLHZhbHVlOnN9KSxuPWk7Y29udGludWV9ci5wdXNoKHt0eXBlOlwiQ0hBUlwiLGluZGV4Om4sdmFsdWU6ZVtuKytdfSl9cmV0dXJuIHIucHVzaCh7dHlwZTpcIkVORFwiLGluZGV4Om4sdmFsdWU6XCJcIn0pLHJ9ZnVuY3Rpb24gRihlLHQ9e30pe2xldCByPUQoZSk7dC5kZWxpbWl0ZXI/Pz1cIi8jP1wiLHQucHJlZml4ZXM/Pz1cIi4vXCI7bGV0IG49YFteJHtTKHQuZGVsaW1pdGVyKX1dKz9gLGE9W10sYz0wLGw9MCxzPVwiXCIsaT1uZXcgU2V0LG89aD0+e2lmKGw8ci5sZW5ndGgmJnJbbF0udHlwZT09PWgpcmV0dXJuIHJbbCsrXS52YWx1ZX0sZj0oKT0+byhcIk9USEVSX01PRElGSUVSXCIpPz9vKFwiQVNURVJJU0tcIiksZD1oPT57bGV0IHU9byhoKTtpZih1IT09dm9pZCAwKXJldHVybiB1O2xldHt0eXBlOnAsaW5kZXg6QX09cltsXTt0aHJvdyBuZXcgVHlwZUVycm9yKGBVbmV4cGVjdGVkICR7cH0gYXQgJHtBfSwgZXhwZWN0ZWQgJHtofWApfSxUPSgpPT57bGV0IGg9XCJcIix1O2Zvcig7dT1vKFwiQ0hBUlwiKT8/byhcIkVTQ0FQRURfQ0hBUlwiKTspaCs9dTtyZXR1cm4gaH0seGU9aD0+aCxMPXQuZW5jb2RlUGFydHx8eGUsST1cIlwiLFU9aD0+e0krPWh9LCQ9KCk9PntJLmxlbmd0aCYmKGEucHVzaChuZXcgUigzLFwiXCIsXCJcIixMKEkpLFwiXCIsMykpLEk9XCJcIil9LFg9KGgsdSxwLEEsWik9PntsZXQgZz0zO3N3aXRjaChaKXtjYXNlXCI/XCI6Zz0xO2JyZWFrO2Nhc2VcIipcIjpnPTA7YnJlYWs7Y2FzZVwiK1wiOmc9MjticmVha31pZighdSYmIXAmJmc9PT0zKXtVKGgpO3JldHVybn1pZigkKCksIXUmJiFwKXtpZighaClyZXR1cm47YS5wdXNoKG5ldyBSKDMsXCJcIixcIlwiLEwoaCksXCJcIixnKSk7cmV0dXJufWxldCBtO3A/cD09PVwiKlwiP209djptPXA6bT1uO2xldCBPPTI7bT09PW4/KE89MSxtPVwiXCIpOm09PT12JiYoTz0wLG09XCJcIik7bGV0IFA7aWYodT9QPXU6cCYmKFA9YysrKSxpLmhhcyhQKSl0aHJvdyBuZXcgVHlwZUVycm9yKGBEdXBsaWNhdGUgbmFtZSAnJHtQfScuYCk7aS5hZGQoUCksYS5wdXNoKG5ldyBSKE8sUCxMKGgpLG0sTChBKSxnKSl9O2Zvcig7bDxyLmxlbmd0aDspe2xldCBoPW8oXCJDSEFSXCIpLHU9byhcIk5BTUVcIikscD1vKFwiUkVHRVhcIik7aWYoIXUmJiFwJiYocD1vKFwiQVNURVJJU0tcIikpLHV8fHApe2xldCBnPWg/P1wiXCI7dC5wcmVmaXhlcy5pbmRleE9mKGcpPT09LTEmJihVKGcpLGc9XCJcIiksJCgpO2xldCBtPWYoKTtYKGcsdSxwLFwiXCIsbSk7Y29udGludWV9bGV0IEE9aD8/byhcIkVTQ0FQRURfQ0hBUlwiKTtpZihBKXtVKEEpO2NvbnRpbnVlfWlmKG8oXCJPUEVOXCIpKXtsZXQgZz1UKCksbT1vKFwiTkFNRVwiKSxPPW8oXCJSRUdFWFwiKTshbSYmIU8mJihPPW8oXCJBU1RFUklTS1wiKSk7bGV0IFA9VCgpO2QoXCJDTE9TRVwiKTtsZXQgYmU9ZigpO1goZyxtLE8sUCxiZSk7Y29udGludWV9JCgpLGQoXCJFTkRcIil9cmV0dXJuIGF9ZnVuY3Rpb24gUyhlKXtyZXR1cm4gZS5yZXBsYWNlKC8oWy4rKj9eJHt9KClbXFxdfC9cXFxcXSkvZyxcIlxcXFwkMVwiKX1mdW5jdGlvbiBCKGUpe3JldHVybiBlJiZlLmlnbm9yZUNhc2U/XCJ1aVwiOlwidVwifWZ1bmN0aW9uIHEoZSx0LHIpe3JldHVybiBXKEYoZSxyKSx0LHIpfWZ1bmN0aW9uIGsoZSl7c3dpdGNoKGUpe2Nhc2UgMDpyZXR1cm5cIipcIjtjYXNlIDE6cmV0dXJuXCI/XCI7Y2FzZSAyOnJldHVyblwiK1wiO2Nhc2UgMzpyZXR1cm5cIlwifX1mdW5jdGlvbiBXKGUsdCxyPXt9KXtyLmRlbGltaXRlcj8/PVwiLyM/XCIsci5wcmVmaXhlcz8/PVwiLi9cIixyLnNlbnNpdGl2ZT8/PSExLHIuc3RyaWN0Pz89ITEsci5lbmQ/Pz0hMCxyLnN0YXJ0Pz89ITAsci5lbmRzV2l0aD1cIlwiO2xldCBuPXIuc3RhcnQ/XCJeXCI6XCJcIjtmb3IobGV0IHMgb2YgZSl7aWYocy50eXBlPT09Myl7cy5tb2RpZmllcj09PTM/bis9UyhzLnZhbHVlKTpuKz1gKD86JHtTKHMudmFsdWUpfSkke2socy5tb2RpZmllcil9YDtjb250aW51ZX10JiZ0LnB1c2gocy5uYW1lKTtsZXQgaT1gW14ke1Moci5kZWxpbWl0ZXIpfV0rP2Asbz1zLnZhbHVlO2lmKHMudHlwZT09PTE/bz1pOnMudHlwZT09PTAmJihvPXYpLCFzLnByZWZpeC5sZW5ndGgmJiFzLnN1ZmZpeC5sZW5ndGgpe3MubW9kaWZpZXI9PT0zfHxzLm1vZGlmaWVyPT09MT9uKz1gKCR7b30pJHtrKHMubW9kaWZpZXIpfWA6bis9YCgoPzoke299KSR7ayhzLm1vZGlmaWVyKX0pYDtjb250aW51ZX1pZihzLm1vZGlmaWVyPT09M3x8cy5tb2RpZmllcj09PTEpe24rPWAoPzoke1Mocy5wcmVmaXgpfSgke299KSR7UyhzLnN1ZmZpeCl9KWAsbis9ayhzLm1vZGlmaWVyKTtjb250aW51ZX1uKz1gKD86JHtTKHMucHJlZml4KX1gLG4rPWAoKD86JHtvfSkoPzpgLG4rPVMocy5zdWZmaXgpLG4rPVMocy5wcmVmaXgpLG4rPWAoPzoke299KSkqKSR7UyhzLnN1ZmZpeCl9KWAscy5tb2RpZmllcj09PTAmJihuKz1cIj9cIil9bGV0IGE9YFske1Moci5lbmRzV2l0aCl9XXwkYCxjPWBbJHtTKHIuZGVsaW1pdGVyKX1dYDtpZihyLmVuZClyZXR1cm4gci5zdHJpY3R8fChuKz1gJHtjfT9gKSxyLmVuZHNXaXRoLmxlbmd0aD9uKz1gKD89JHthfSlgOm4rPVwiJFwiLG5ldyBSZWdFeHAobixCKHIpKTtyLnN0cmljdHx8KG4rPWAoPzoke2N9KD89JHthfSkpP2ApO2xldCBsPSExO2lmKGUubGVuZ3RoKXtsZXQgcz1lW2UubGVuZ3RoLTFdO3MudHlwZT09PTMmJnMubW9kaWZpZXI9PT0zJiYobD1yLmRlbGltaXRlci5pbmRleE9mKHMpPi0xKX1yZXR1cm4gbHx8KG4rPWAoPz0ke2N9fCR7YX0pYCksbmV3IFJlZ0V4cChuLEIocikpfXZhciB4PXtkZWxpbWl0ZXI6XCJcIixwcmVmaXhlczpcIlwiLHNlbnNpdGl2ZTohMCxzdHJpY3Q6ITB9LEo9e2RlbGltaXRlcjpcIi5cIixwcmVmaXhlczpcIlwiLHNlbnNpdGl2ZTohMCxzdHJpY3Q6ITB9LFE9e2RlbGltaXRlcjpcIi9cIixwcmVmaXhlczpcIi9cIixzZW5zaXRpdmU6ITAsc3RyaWN0OiEwfTtmdW5jdGlvbiBlZShlLHQpe3JldHVybiBlLmxlbmd0aD9lWzBdPT09XCIvXCI/ITA6IXR8fGUubGVuZ3RoPDI/ITE6KGVbMF09PVwiXFxcXFwifHxlWzBdPT1cIntcIikmJmVbMV09PVwiL1wiOiExfWZ1bmN0aW9uIHRlKGUsdCl7cmV0dXJuIGUuc3RhcnRzV2l0aCh0KT9lLnN1YnN0cmluZyh0Lmxlbmd0aCxlLmxlbmd0aCk6ZX1mdW5jdGlvbiBDZShlLHQpe3JldHVybiBlLmVuZHNXaXRoKHQpP2Uuc3Vic3RyKDAsZS5sZW5ndGgtdC5sZW5ndGgpOmV9ZnVuY3Rpb24gXyhlKXtyZXR1cm4hZXx8ZS5sZW5ndGg8Mj8hMTplWzBdPT09XCJbXCJ8fChlWzBdPT09XCJcXFxcXCJ8fGVbMF09PT1cIntcIikmJmVbMV09PT1cIltcIn12YXIgcmU9W1wiZnRwXCIsXCJmaWxlXCIsXCJodHRwXCIsXCJodHRwc1wiLFwid3NcIixcIndzc1wiXTtmdW5jdGlvbiBOKGUpe2lmKCFlKXJldHVybiEwO2ZvcihsZXQgdCBvZiByZSlpZihlLnRlc3QodCkpcmV0dXJuITA7cmV0dXJuITF9ZnVuY3Rpb24gbmUoZSx0KXtpZihlPXRlKGUsXCIjXCIpLHR8fGU9PT1cIlwiKXJldHVybiBlO2xldCByPW5ldyBVUkwoXCJodHRwczovL2V4YW1wbGUuY29tXCIpO3JldHVybiByLmhhc2g9ZSxyLmhhc2g/ci5oYXNoLnN1YnN0cmluZygxLHIuaGFzaC5sZW5ndGgpOlwiXCJ9ZnVuY3Rpb24gc2UoZSx0KXtpZihlPXRlKGUsXCI/XCIpLHR8fGU9PT1cIlwiKXJldHVybiBlO2xldCByPW5ldyBVUkwoXCJodHRwczovL2V4YW1wbGUuY29tXCIpO3JldHVybiByLnNlYXJjaD1lLHIuc2VhcmNoP3Iuc2VhcmNoLnN1YnN0cmluZygxLHIuc2VhcmNoLmxlbmd0aCk6XCJcIn1mdW5jdGlvbiBpZShlLHQpe3JldHVybiB0fHxlPT09XCJcIj9lOl8oZSk/SyhlKTpqKGUpfWZ1bmN0aW9uIGFlKGUsdCl7aWYodHx8ZT09PVwiXCIpcmV0dXJuIGU7bGV0IHI9bmV3IFVSTChcImh0dHBzOi8vZXhhbXBsZS5jb21cIik7cmV0dXJuIHIucGFzc3dvcmQ9ZSxyLnBhc3N3b3JkfWZ1bmN0aW9uIG9lKGUsdCl7aWYodHx8ZT09PVwiXCIpcmV0dXJuIGU7bGV0IHI9bmV3IFVSTChcImh0dHBzOi8vZXhhbXBsZS5jb21cIik7cmV0dXJuIHIudXNlcm5hbWU9ZSxyLnVzZXJuYW1lfWZ1bmN0aW9uIGNlKGUsdCxyKXtpZihyfHxlPT09XCJcIilyZXR1cm4gZTtpZih0JiYhcmUuaW5jbHVkZXModCkpcmV0dXJuIG5ldyBVUkwoYCR7dH06JHtlfWApLnBhdGhuYW1lO2xldCBuPWVbMF09PVwiL1wiO3JldHVybiBlPW5ldyBVUkwobj9lOlwiLy1cIitlLFwiaHR0cHM6Ly9leGFtcGxlLmNvbVwiKS5wYXRobmFtZSxufHwoZT1lLnN1YnN0cmluZygyLGUubGVuZ3RoKSksZX1mdW5jdGlvbiBsZShlLHQscil7cmV0dXJuIHoodCk9PT1lJiYoZT1cIlwiKSxyfHxlPT09XCJcIj9lOkcoZSl9ZnVuY3Rpb24gZmUoZSx0KXtyZXR1cm4gZT1DZShlLFwiOlwiKSx0fHxlPT09XCJcIj9lOnkoZSl9ZnVuY3Rpb24geihlKXtzd2l0Y2goZSl7Y2FzZVwid3NcIjpjYXNlXCJodHRwXCI6cmV0dXJuXCI4MFwiO2Nhc2VcInd3c1wiOmNhc2VcImh0dHBzXCI6cmV0dXJuXCI0NDNcIjtjYXNlXCJmdHBcIjpyZXR1cm5cIjIxXCI7ZGVmYXVsdDpyZXR1cm5cIlwifX1mdW5jdGlvbiB5KGUpe2lmKGU9PT1cIlwiKXJldHVybiBlO2lmKC9eWy0rLkEtWmEtejAtOV0qJC8udGVzdChlKSlyZXR1cm4gZS50b0xvd2VyQ2FzZSgpO3Rocm93IG5ldyBUeXBlRXJyb3IoYEludmFsaWQgcHJvdG9jb2wgJyR7ZX0nLmApfWZ1bmN0aW9uIGhlKGUpe2lmKGU9PT1cIlwiKXJldHVybiBlO2xldCB0PW5ldyBVUkwoXCJodHRwczovL2V4YW1wbGUuY29tXCIpO3JldHVybiB0LnVzZXJuYW1lPWUsdC51c2VybmFtZX1mdW5jdGlvbiB1ZShlKXtpZihlPT09XCJcIilyZXR1cm4gZTtsZXQgdD1uZXcgVVJMKFwiaHR0cHM6Ly9leGFtcGxlLmNvbVwiKTtyZXR1cm4gdC5wYXNzd29yZD1lLHQucGFzc3dvcmR9ZnVuY3Rpb24gaihlKXtpZihlPT09XCJcIilyZXR1cm4gZTtpZigvW1xcdFxcblxcciAjJS86PD4/QFtcXF1eXFxcXHxdL2cudGVzdChlKSl0aHJvdyBuZXcgVHlwZUVycm9yKGBJbnZhbGlkIGhvc3RuYW1lICcke2V9J2ApO2xldCB0PW5ldyBVUkwoXCJodHRwczovL2V4YW1wbGUuY29tXCIpO3JldHVybiB0Lmhvc3RuYW1lPWUsdC5ob3N0bmFtZX1mdW5jdGlvbiBLKGUpe2lmKGU9PT1cIlwiKXJldHVybiBlO2lmKC9bXjAtOWEtZkEtRltcXF06XS9nLnRlc3QoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBJUHY2IGhvc3RuYW1lICcke2V9J2ApO3JldHVybiBlLnRvTG93ZXJDYXNlKCl9ZnVuY3Rpb24gRyhlKXtpZihlPT09XCJcInx8L15bMC05XSokLy50ZXN0KGUpJiZwYXJzZUludChlKTw9NjU1MzUpcmV0dXJuIGU7dGhyb3cgbmV3IFR5cGVFcnJvcihgSW52YWxpZCBwb3J0ICcke2V9Jy5gKX1mdW5jdGlvbiBkZShlKXtpZihlPT09XCJcIilyZXR1cm4gZTtsZXQgdD1uZXcgVVJMKFwiaHR0cHM6Ly9leGFtcGxlLmNvbVwiKTtyZXR1cm4gdC5wYXRobmFtZT1lWzBdIT09XCIvXCI/XCIvLVwiK2U6ZSxlWzBdIT09XCIvXCI/dC5wYXRobmFtZS5zdWJzdHJpbmcoMix0LnBhdGhuYW1lLmxlbmd0aCk6dC5wYXRobmFtZX1mdW5jdGlvbiBwZShlKXtyZXR1cm4gZT09PVwiXCI/ZTpuZXcgVVJMKGBkYXRhOiR7ZX1gKS5wYXRobmFtZX1mdW5jdGlvbiBnZShlKXtpZihlPT09XCJcIilyZXR1cm4gZTtsZXQgdD1uZXcgVVJMKFwiaHR0cHM6Ly9leGFtcGxlLmNvbVwiKTtyZXR1cm4gdC5zZWFyY2g9ZSx0LnNlYXJjaC5zdWJzdHJpbmcoMSx0LnNlYXJjaC5sZW5ndGgpfWZ1bmN0aW9uIG1lKGUpe2lmKGU9PT1cIlwiKXJldHVybiBlO2xldCB0PW5ldyBVUkwoXCJodHRwczovL2V4YW1wbGUuY29tXCIpO3JldHVybiB0Lmhhc2g9ZSx0Lmhhc2guc3Vic3RyaW5nKDEsdC5oYXNoLmxlbmd0aCl9dmFyIEg9Y2xhc3N7I2k7I249W107I3Q9e307I2U9MDsjcz0xOyNsPTA7I289MDsjZD0wOyNwPTA7I2c9ITE7Y29uc3RydWN0b3IodCl7dGhpcy4jaT10fWdldCByZXN1bHQoKXtyZXR1cm4gdGhpcy4jdH1wYXJzZSgpe2Zvcih0aGlzLiNuPUQodGhpcy4jaSwhMCk7dGhpcy4jZTx0aGlzLiNuLmxlbmd0aDt0aGlzLiNlKz10aGlzLiNzKXtpZih0aGlzLiNzPTEsdGhpcy4jblt0aGlzLiNlXS50eXBlPT09XCJFTkRcIil7aWYodGhpcy4jbz09PTApe3RoaXMuI2IoKSx0aGlzLiNmKCk/dGhpcy4jcig5LDEpOnRoaXMuI2goKT90aGlzLiNyKDgsMSk6dGhpcy4jcig3LDApO2NvbnRpbnVlfWVsc2UgaWYodGhpcy4jbz09PTIpe3RoaXMuI3UoNSk7Y29udGludWV9dGhpcy4jcigxMCwwKTticmVha31pZih0aGlzLiNkPjApaWYodGhpcy4jQSgpKXRoaXMuI2QtPTE7ZWxzZSBjb250aW51ZTtpZih0aGlzLiNUKCkpe3RoaXMuI2QrPTE7Y29udGludWV9c3dpdGNoKHRoaXMuI28pe2Nhc2UgMDp0aGlzLiNQKCkmJnRoaXMuI3UoMSk7YnJlYWs7Y2FzZSAxOmlmKHRoaXMuI1AoKSl7dGhpcy4jQygpO2xldCB0PTcscj0xO3RoaXMuI0UoKT8odD0yLHI9Myk6dGhpcy4jZyYmKHQ9MiksdGhpcy4jcih0LHIpfWJyZWFrO2Nhc2UgMjp0aGlzLiNTKCk/dGhpcy4jdSgzKToodGhpcy4jeCgpfHx0aGlzLiNoKCl8fHRoaXMuI2YoKSkmJnRoaXMuI3UoNSk7YnJlYWs7Y2FzZSAzOnRoaXMuI08oKT90aGlzLiNyKDQsMSk6dGhpcy4jUygpJiZ0aGlzLiNyKDUsMSk7YnJlYWs7Y2FzZSA0OnRoaXMuI1MoKSYmdGhpcy4jcig1LDEpO2JyZWFrO2Nhc2UgNTp0aGlzLiN5KCk/dGhpcy4jcCs9MTp0aGlzLiN3KCkmJih0aGlzLiNwLT0xKSx0aGlzLiNrKCkmJiF0aGlzLiNwP3RoaXMuI3IoNiwxKTp0aGlzLiN4KCk/dGhpcy4jcig3LDApOnRoaXMuI2goKT90aGlzLiNyKDgsMSk6dGhpcy4jZigpJiZ0aGlzLiNyKDksMSk7YnJlYWs7Y2FzZSA2OnRoaXMuI3goKT90aGlzLiNyKDcsMCk6dGhpcy4jaCgpP3RoaXMuI3IoOCwxKTp0aGlzLiNmKCkmJnRoaXMuI3IoOSwxKTticmVhaztjYXNlIDc6dGhpcy4jaCgpP3RoaXMuI3IoOCwxKTp0aGlzLiNmKCkmJnRoaXMuI3IoOSwxKTticmVhaztjYXNlIDg6dGhpcy4jZigpJiZ0aGlzLiNyKDksMSk7YnJlYWs7Y2FzZSA5OmJyZWFrO2Nhc2UgMTA6YnJlYWt9fXRoaXMuI3QuaG9zdG5hbWUhPT12b2lkIDAmJnRoaXMuI3QucG9ydD09PXZvaWQgMCYmKHRoaXMuI3QucG9ydD1cIlwiKX0jcih0LHIpe3N3aXRjaCh0aGlzLiNvKXtjYXNlIDA6YnJlYWs7Y2FzZSAxOnRoaXMuI3QucHJvdG9jb2w9dGhpcy4jYygpO2JyZWFrO2Nhc2UgMjpicmVhaztjYXNlIDM6dGhpcy4jdC51c2VybmFtZT10aGlzLiNjKCk7YnJlYWs7Y2FzZSA0OnRoaXMuI3QucGFzc3dvcmQ9dGhpcy4jYygpO2JyZWFrO2Nhc2UgNTp0aGlzLiN0Lmhvc3RuYW1lPXRoaXMuI2MoKTticmVhaztjYXNlIDY6dGhpcy4jdC5wb3J0PXRoaXMuI2MoKTticmVhaztjYXNlIDc6dGhpcy4jdC5wYXRobmFtZT10aGlzLiNjKCk7YnJlYWs7Y2FzZSA4OnRoaXMuI3Quc2VhcmNoPXRoaXMuI2MoKTticmVhaztjYXNlIDk6dGhpcy4jdC5oYXNoPXRoaXMuI2MoKTticmVhaztjYXNlIDEwOmJyZWFrfXRoaXMuI28hPT0wJiZ0IT09MTAmJihbMSwyLDMsNF0uaW5jbHVkZXModGhpcy4jbykmJls2LDcsOCw5XS5pbmNsdWRlcyh0KSYmKHRoaXMuI3QuaG9zdG5hbWU/Pz1cIlwiKSxbMSwyLDMsNCw1LDZdLmluY2x1ZGVzKHRoaXMuI28pJiZbOCw5XS5pbmNsdWRlcyh0KSYmKHRoaXMuI3QucGF0aG5hbWU/Pz10aGlzLiNnP1wiL1wiOlwiXCIpLFsxLDIsMyw0LDUsNiw3XS5pbmNsdWRlcyh0aGlzLiNvKSYmdD09PTkmJih0aGlzLiN0LnNlYXJjaD8/PVwiXCIpKSx0aGlzLiNSKHQscil9I1IodCxyKXt0aGlzLiNvPXQsdGhpcy4jbD10aGlzLiNlK3IsdGhpcy4jZSs9cix0aGlzLiNzPTB9I2IoKXt0aGlzLiNlPXRoaXMuI2wsdGhpcy4jcz0wfSN1KHQpe3RoaXMuI2IoKSx0aGlzLiNvPXR9I20odCl7cmV0dXJuIHQ8MCYmKHQ9dGhpcy4jbi5sZW5ndGgtdCksdDx0aGlzLiNuLmxlbmd0aD90aGlzLiNuW3RdOnRoaXMuI25bdGhpcy4jbi5sZW5ndGgtMV19I2EodCxyKXtsZXQgbj10aGlzLiNtKHQpO3JldHVybiBuLnZhbHVlPT09ciYmKG4udHlwZT09PVwiQ0hBUlwifHxuLnR5cGU9PT1cIkVTQ0FQRURfQ0hBUlwifHxuLnR5cGU9PT1cIklOVkFMSURfQ0hBUlwiKX0jUCgpe3JldHVybiB0aGlzLiNhKHRoaXMuI2UsXCI6XCIpfSNFKCl7cmV0dXJuIHRoaXMuI2EodGhpcy4jZSsxLFwiL1wiKSYmdGhpcy4jYSh0aGlzLiNlKzIsXCIvXCIpfSNTKCl7cmV0dXJuIHRoaXMuI2EodGhpcy4jZSxcIkBcIil9I08oKXtyZXR1cm4gdGhpcy4jYSh0aGlzLiNlLFwiOlwiKX0jaygpe3JldHVybiB0aGlzLiNhKHRoaXMuI2UsXCI6XCIpfSN4KCl7cmV0dXJuIHRoaXMuI2EodGhpcy4jZSxcIi9cIil9I2goKXtpZih0aGlzLiNhKHRoaXMuI2UsXCI/XCIpKXJldHVybiEwO2lmKHRoaXMuI25bdGhpcy4jZV0udmFsdWUhPT1cIj9cIilyZXR1cm4hMTtsZXQgdD10aGlzLiNtKHRoaXMuI2UtMSk7cmV0dXJuIHQudHlwZSE9PVwiTkFNRVwiJiZ0LnR5cGUhPT1cIlJFR0VYXCImJnQudHlwZSE9PVwiQ0xPU0VcIiYmdC50eXBlIT09XCJBU1RFUklTS1wifSNmKCl7cmV0dXJuIHRoaXMuI2EodGhpcy4jZSxcIiNcIil9I1QoKXtyZXR1cm4gdGhpcy4jblt0aGlzLiNlXS50eXBlPT1cIk9QRU5cIn0jQSgpe3JldHVybiB0aGlzLiNuW3RoaXMuI2VdLnR5cGU9PVwiQ0xPU0VcIn0jeSgpe3JldHVybiB0aGlzLiNhKHRoaXMuI2UsXCJbXCIpfSN3KCl7cmV0dXJuIHRoaXMuI2EodGhpcy4jZSxcIl1cIil9I2MoKXtsZXQgdD10aGlzLiNuW3RoaXMuI2VdLHI9dGhpcy4jbSh0aGlzLiNsKS5pbmRleDtyZXR1cm4gdGhpcy4jaS5zdWJzdHJpbmcocix0LmluZGV4KX0jQygpe2xldCB0PXt9O09iamVjdC5hc3NpZ24odCx4KSx0LmVuY29kZVBhcnQ9eTtsZXQgcj1xKHRoaXMuI2MoKSx2b2lkIDAsdCk7dGhpcy4jZz1OKHIpfX07dmFyIFY9W1wicHJvdG9jb2xcIixcInVzZXJuYW1lXCIsXCJwYXNzd29yZFwiLFwiaG9zdG5hbWVcIixcInBvcnRcIixcInBhdGhuYW1lXCIsXCJzZWFyY2hcIixcImhhc2hcIl0sRT1cIipcIjtmdW5jdGlvbiBTZShlLHQpe2lmKHR5cGVvZiBlIT1cInN0cmluZ1wiKXRocm93IG5ldyBUeXBlRXJyb3IoXCJwYXJhbWV0ZXIgMSBpcyBub3Qgb2YgdHlwZSAnc3RyaW5nJy5cIik7bGV0IHI9bmV3IFVSTChlLHQpO3JldHVybntwcm90b2NvbDpyLnByb3RvY29sLnN1YnN0cmluZygwLHIucHJvdG9jb2wubGVuZ3RoLTEpLHVzZXJuYW1lOnIudXNlcm5hbWUscGFzc3dvcmQ6ci5wYXNzd29yZCxob3N0bmFtZTpyLmhvc3RuYW1lLHBvcnQ6ci5wb3J0LHBhdGhuYW1lOnIucGF0aG5hbWUsc2VhcmNoOnIuc2VhcmNoIT09XCJcIj9yLnNlYXJjaC5zdWJzdHJpbmcoMSxyLnNlYXJjaC5sZW5ndGgpOnZvaWQgMCxoYXNoOnIuaGFzaCE9PVwiXCI/ci5oYXNoLnN1YnN0cmluZygxLHIuaGFzaC5sZW5ndGgpOnZvaWQgMH19ZnVuY3Rpb24gYihlLHQpe3JldHVybiB0P0MoZSk6ZX1mdW5jdGlvbiB3KGUsdCxyKXtsZXQgbjtpZih0eXBlb2YgdC5iYXNlVVJMPT1cInN0cmluZ1wiKXRyeXtuPW5ldyBVUkwodC5iYXNlVVJMKSx0LnByb3RvY29sPT09dm9pZCAwJiYoZS5wcm90b2NvbD1iKG4ucHJvdG9jb2wuc3Vic3RyaW5nKDAsbi5wcm90b2NvbC5sZW5ndGgtMSkscikpLCFyJiZ0LnByb3RvY29sPT09dm9pZCAwJiZ0Lmhvc3RuYW1lPT09dm9pZCAwJiZ0LnBvcnQ9PT12b2lkIDAmJnQudXNlcm5hbWU9PT12b2lkIDAmJihlLnVzZXJuYW1lPWIobi51c2VybmFtZSxyKSksIXImJnQucHJvdG9jb2w9PT12b2lkIDAmJnQuaG9zdG5hbWU9PT12b2lkIDAmJnQucG9ydD09PXZvaWQgMCYmdC51c2VybmFtZT09PXZvaWQgMCYmdC5wYXNzd29yZD09PXZvaWQgMCYmKGUucGFzc3dvcmQ9YihuLnBhc3N3b3JkLHIpKSx0LnByb3RvY29sPT09dm9pZCAwJiZ0Lmhvc3RuYW1lPT09dm9pZCAwJiYoZS5ob3N0bmFtZT1iKG4uaG9zdG5hbWUscikpLHQucHJvdG9jb2w9PT12b2lkIDAmJnQuaG9zdG5hbWU9PT12b2lkIDAmJnQucG9ydD09PXZvaWQgMCYmKGUucG9ydD1iKG4ucG9ydCxyKSksdC5wcm90b2NvbD09PXZvaWQgMCYmdC5ob3N0bmFtZT09PXZvaWQgMCYmdC5wb3J0PT09dm9pZCAwJiZ0LnBhdGhuYW1lPT09dm9pZCAwJiYoZS5wYXRobmFtZT1iKG4ucGF0aG5hbWUscikpLHQucHJvdG9jb2w9PT12b2lkIDAmJnQuaG9zdG5hbWU9PT12b2lkIDAmJnQucG9ydD09PXZvaWQgMCYmdC5wYXRobmFtZT09PXZvaWQgMCYmdC5zZWFyY2g9PT12b2lkIDAmJihlLnNlYXJjaD1iKG4uc2VhcmNoLnN1YnN0cmluZygxLG4uc2VhcmNoLmxlbmd0aCkscikpLHQucHJvdG9jb2w9PT12b2lkIDAmJnQuaG9zdG5hbWU9PT12b2lkIDAmJnQucG9ydD09PXZvaWQgMCYmdC5wYXRobmFtZT09PXZvaWQgMCYmdC5zZWFyY2g9PT12b2lkIDAmJnQuaGFzaD09PXZvaWQgMCYmKGUuaGFzaD1iKG4uaGFzaC5zdWJzdHJpbmcoMSxuLmhhc2gubGVuZ3RoKSxyKSl9Y2F0Y2h7dGhyb3cgbmV3IFR5cGVFcnJvcihgaW52YWxpZCBiYXNlVVJMICcke3QuYmFzZVVSTH0nLmApfWlmKHR5cGVvZiB0LnByb3RvY29sPT1cInN0cmluZ1wiJiYoZS5wcm90b2NvbD1mZSh0LnByb3RvY29sLHIpKSx0eXBlb2YgdC51c2VybmFtZT09XCJzdHJpbmdcIiYmKGUudXNlcm5hbWU9b2UodC51c2VybmFtZSxyKSksdHlwZW9mIHQucGFzc3dvcmQ9PVwic3RyaW5nXCImJihlLnBhc3N3b3JkPWFlKHQucGFzc3dvcmQscikpLHR5cGVvZiB0Lmhvc3RuYW1lPT1cInN0cmluZ1wiJiYoZS5ob3N0bmFtZT1pZSh0Lmhvc3RuYW1lLHIpKSx0eXBlb2YgdC5wb3J0PT1cInN0cmluZ1wiJiYoZS5wb3J0PWxlKHQucG9ydCxlLnByb3RvY29sLHIpKSx0eXBlb2YgdC5wYXRobmFtZT09XCJzdHJpbmdcIil7aWYoZS5wYXRobmFtZT10LnBhdGhuYW1lLG4mJiFlZShlLnBhdGhuYW1lLHIpKXtsZXQgYT1uLnBhdGhuYW1lLmxhc3RJbmRleE9mKFwiL1wiKTthPj0wJiYoZS5wYXRobmFtZT1iKG4ucGF0aG5hbWUuc3Vic3RyaW5nKDAsYSsxKSxyKStlLnBhdGhuYW1lKX1lLnBhdGhuYW1lPWNlKGUucGF0aG5hbWUsZS5wcm90b2NvbCxyKX1yZXR1cm4gdHlwZW9mIHQuc2VhcmNoPT1cInN0cmluZ1wiJiYoZS5zZWFyY2g9c2UodC5zZWFyY2gscikpLHR5cGVvZiB0Lmhhc2g9PVwic3RyaW5nXCImJihlLmhhc2g9bmUodC5oYXNoLHIpKSxlfWZ1bmN0aW9uIEMoZSl7cmV0dXJuIGUucmVwbGFjZSgvKFsrKj86e30oKVxcXFxdKS9nLFwiXFxcXCQxXCIpfWZ1bmN0aW9uIExlKGUpe3JldHVybiBlLnJlcGxhY2UoLyhbLisqP14ke30oKVtcXF18L1xcXFxdKS9nLFwiXFxcXCQxXCIpfWZ1bmN0aW9uIEllKGUsdCl7dC5kZWxpbWl0ZXI/Pz1cIi8jP1wiLHQucHJlZml4ZXM/Pz1cIi4vXCIsdC5zZW5zaXRpdmU/Pz0hMSx0LnN0cmljdD8/PSExLHQuZW5kPz89ITAsdC5zdGFydD8/PSEwLHQuZW5kc1dpdGg9XCJcIjtsZXQgcj1cIi4qXCIsbj1gW14ke0xlKHQuZGVsaW1pdGVyKX1dKz9gLGE9L1skX1xcdTIwMENcXHUyMDBEXFxwe0lEX0NvbnRpbnVlfV0vdSxjPVwiXCI7Zm9yKGxldCBsPTA7bDxlLmxlbmd0aDsrK2wpe2xldCBzPWVbbF07aWYocy50eXBlPT09Myl7aWYocy5tb2RpZmllcj09PTMpe2MrPUMocy52YWx1ZSk7Y29udGludWV9Yys9YHske0Mocy52YWx1ZSl9fSR7ayhzLm1vZGlmaWVyKX1gO2NvbnRpbnVlfWxldCBpPXMuaGFzQ3VzdG9tTmFtZSgpLG89ISFzLnN1ZmZpeC5sZW5ndGh8fCEhcy5wcmVmaXgubGVuZ3RoJiYocy5wcmVmaXgubGVuZ3RoIT09MXx8IXQucHJlZml4ZXMuaW5jbHVkZXMocy5wcmVmaXgpKSxmPWw+MD9lW2wtMV06bnVsbCxkPWw8ZS5sZW5ndGgtMT9lW2wrMV06bnVsbDtpZighbyYmaSYmcy50eXBlPT09MSYmcy5tb2RpZmllcj09PTMmJmQmJiFkLnByZWZpeC5sZW5ndGgmJiFkLnN1ZmZpeC5sZW5ndGgpaWYoZC50eXBlPT09Myl7bGV0IFQ9ZC52YWx1ZS5sZW5ndGg+MD9kLnZhbHVlWzBdOlwiXCI7bz1hLnRlc3QoVCl9ZWxzZSBvPSFkLmhhc0N1c3RvbU5hbWUoKTtpZighbyYmIXMucHJlZml4Lmxlbmd0aCYmZiYmZi50eXBlPT09Myl7bGV0IFQ9Zi52YWx1ZVtmLnZhbHVlLmxlbmd0aC0xXTtvPXQucHJlZml4ZXMuaW5jbHVkZXMoVCl9byYmKGMrPVwie1wiKSxjKz1DKHMucHJlZml4KSxpJiYoYys9YDoke3MubmFtZX1gKSxzLnR5cGU9PT0yP2MrPWAoJHtzLnZhbHVlfSlgOnMudHlwZT09PTE/aXx8KGMrPWAoJHtufSlgKTpzLnR5cGU9PT0wJiYoIWkmJighZnx8Zi50eXBlPT09M3x8Zi5tb2RpZmllciE9PTN8fG98fHMucHJlZml4IT09XCJcIik/Yys9XCIqXCI6Yys9YCgke3J9KWApLHMudHlwZT09PTEmJmkmJnMuc3VmZml4Lmxlbmd0aCYmYS50ZXN0KHMuc3VmZml4WzBdKSYmKGMrPVwiXFxcXFwiKSxjKz1DKHMuc3VmZml4KSxvJiYoYys9XCJ9XCIpLHMubW9kaWZpZXIhPT0zJiYoYys9ayhzLm1vZGlmaWVyKSl9cmV0dXJuIGN9dmFyIFk9Y2xhc3N7I2k7I249e307I3Q9e307I2U9e307I3M9e307I2w9ITE7Y29uc3RydWN0b3IodD17fSxyLG4pe3RyeXtsZXQgYTtpZih0eXBlb2Ygcj09XCJzdHJpbmdcIj9hPXI6bj1yLHR5cGVvZiB0PT1cInN0cmluZ1wiKXtsZXQgaT1uZXcgSCh0KTtpZihpLnBhcnNlKCksdD1pLnJlc3VsdCxhPT09dm9pZCAwJiZ0eXBlb2YgdC5wcm90b2NvbCE9XCJzdHJpbmdcIil0aHJvdyBuZXcgVHlwZUVycm9yKFwiQSBiYXNlIFVSTCBtdXN0IGJlIHByb3ZpZGVkIGZvciBhIHJlbGF0aXZlIGNvbnN0cnVjdG9yIHN0cmluZy5cIik7dC5iYXNlVVJMPWF9ZWxzZXtpZighdHx8dHlwZW9mIHQhPVwib2JqZWN0XCIpdGhyb3cgbmV3IFR5cGVFcnJvcihcInBhcmFtZXRlciAxIGlzIG5vdCBvZiB0eXBlICdzdHJpbmcnIGFuZCBjYW5ub3QgY29udmVydCB0byBkaWN0aW9uYXJ5LlwiKTtpZihhKXRocm93IG5ldyBUeXBlRXJyb3IoXCJwYXJhbWV0ZXIgMSBpcyBub3Qgb2YgdHlwZSAnc3RyaW5nJy5cIil9dHlwZW9mIG4+XCJ1XCImJihuPXtpZ25vcmVDYXNlOiExfSk7bGV0IGM9e2lnbm9yZUNhc2U6bi5pZ25vcmVDYXNlPT09ITB9LGw9e3BhdGhuYW1lOkUscHJvdG9jb2w6RSx1c2VybmFtZTpFLHBhc3N3b3JkOkUsaG9zdG5hbWU6RSxwb3J0OkUsc2VhcmNoOkUsaGFzaDpFfTt0aGlzLiNpPXcobCx0LCEwKSx6KHRoaXMuI2kucHJvdG9jb2wpPT09dGhpcy4jaS5wb3J0JiYodGhpcy4jaS5wb3J0PVwiXCIpO2xldCBzO2ZvcihzIG9mIFYpe2lmKCEocyBpbiB0aGlzLiNpKSljb250aW51ZTtsZXQgaT17fSxvPXRoaXMuI2lbc107c3dpdGNoKHRoaXMuI3Rbc109W10scyl7Y2FzZVwicHJvdG9jb2xcIjpPYmplY3QuYXNzaWduKGkseCksaS5lbmNvZGVQYXJ0PXk7YnJlYWs7Y2FzZVwidXNlcm5hbWVcIjpPYmplY3QuYXNzaWduKGkseCksaS5lbmNvZGVQYXJ0PWhlO2JyZWFrO2Nhc2VcInBhc3N3b3JkXCI6T2JqZWN0LmFzc2lnbihpLHgpLGkuZW5jb2RlUGFydD11ZTticmVhaztjYXNlXCJob3N0bmFtZVwiOk9iamVjdC5hc3NpZ24oaSxKKSxfKG8pP2kuZW5jb2RlUGFydD1LOmkuZW5jb2RlUGFydD1qO2JyZWFrO2Nhc2VcInBvcnRcIjpPYmplY3QuYXNzaWduKGkseCksaS5lbmNvZGVQYXJ0PUc7YnJlYWs7Y2FzZVwicGF0aG5hbWVcIjpOKHRoaXMuI24ucHJvdG9jb2wpPyhPYmplY3QuYXNzaWduKGksUSxjKSxpLmVuY29kZVBhcnQ9ZGUpOihPYmplY3QuYXNzaWduKGkseCxjKSxpLmVuY29kZVBhcnQ9cGUpO2JyZWFrO2Nhc2VcInNlYXJjaFwiOk9iamVjdC5hc3NpZ24oaSx4LGMpLGkuZW5jb2RlUGFydD1nZTticmVhaztjYXNlXCJoYXNoXCI6T2JqZWN0LmFzc2lnbihpLHgsYyksaS5lbmNvZGVQYXJ0PW1lO2JyZWFrfXRyeXt0aGlzLiNzW3NdPUYobyxpKSx0aGlzLiNuW3NdPVcodGhpcy4jc1tzXSx0aGlzLiN0W3NdLGkpLHRoaXMuI2Vbc109SWUodGhpcy4jc1tzXSxpKSx0aGlzLiNsPXRoaXMuI2x8fHRoaXMuI3Nbc10uc29tZShmPT5mLnR5cGU9PT0yKX1jYXRjaHt0aHJvdyBuZXcgVHlwZUVycm9yKGBpbnZhbGlkICR7c30gcGF0dGVybiAnJHt0aGlzLiNpW3NdfScuYCl9fX1jYXRjaChhKXt0aHJvdyBuZXcgVHlwZUVycm9yKGBGYWlsZWQgdG8gY29uc3RydWN0ICdVUkxQYXR0ZXJuJzogJHthLm1lc3NhZ2V9YCl9fXRlc3QodD17fSxyKXtsZXQgbj17cGF0aG5hbWU6XCJcIixwcm90b2NvbDpcIlwiLHVzZXJuYW1lOlwiXCIscGFzc3dvcmQ6XCJcIixob3N0bmFtZTpcIlwiLHBvcnQ6XCJcIixzZWFyY2g6XCJcIixoYXNoOlwiXCJ9O2lmKHR5cGVvZiB0IT1cInN0cmluZ1wiJiZyKXRocm93IG5ldyBUeXBlRXJyb3IoXCJwYXJhbWV0ZXIgMSBpcyBub3Qgb2YgdHlwZSAnc3RyaW5nJy5cIik7aWYodHlwZW9mIHQ+XCJ1XCIpcmV0dXJuITE7dHJ5e3R5cGVvZiB0PT1cIm9iamVjdFwiP249dyhuLHQsITEpOm49dyhuLFNlKHQsciksITEpfWNhdGNoe3JldHVybiExfWxldCBhO2ZvcihhIG9mIFYpaWYoIXRoaXMuI25bYV0uZXhlYyhuW2FdKSlyZXR1cm4hMTtyZXR1cm4hMH1leGVjKHQ9e30scil7bGV0IG49e3BhdGhuYW1lOlwiXCIscHJvdG9jb2w6XCJcIix1c2VybmFtZTpcIlwiLHBhc3N3b3JkOlwiXCIsaG9zdG5hbWU6XCJcIixwb3J0OlwiXCIsc2VhcmNoOlwiXCIsaGFzaDpcIlwifTtpZih0eXBlb2YgdCE9XCJzdHJpbmdcIiYmcil0aHJvdyBuZXcgVHlwZUVycm9yKFwicGFyYW1ldGVyIDEgaXMgbm90IG9mIHR5cGUgJ3N0cmluZycuXCIpO2lmKHR5cGVvZiB0PlwidVwiKXJldHVybjt0cnl7dHlwZW9mIHQ9PVwib2JqZWN0XCI/bj13KG4sdCwhMSk6bj13KG4sU2UodCxyKSwhMSl9Y2F0Y2h7cmV0dXJuIG51bGx9bGV0IGE9e307cj9hLmlucHV0cz1bdCxyXTphLmlucHV0cz1bdF07bGV0IGM7Zm9yKGMgb2YgVil7bGV0IGw9dGhpcy4jbltjXS5leGVjKG5bY10pO2lmKCFsKXJldHVybiBudWxsO2xldCBzPXt9O2ZvcihsZXRbaSxvXW9mIHRoaXMuI3RbY10uZW50cmllcygpKWlmKHR5cGVvZiBvPT1cInN0cmluZ1wifHx0eXBlb2Ygbz09XCJudW1iZXJcIil7bGV0IGY9bFtpKzFdO3Nbb109Zn1hW2NdPXtpbnB1dDpuW2NdPz9cIlwiLGdyb3VwczpzfX1yZXR1cm4gYX1zdGF0aWMgY29tcGFyZUNvbXBvbmVudCh0LHIsbil7bGV0IGE9KGksbyk9Pntmb3IobGV0IGYgb2ZbXCJ0eXBlXCIsXCJtb2RpZmllclwiLFwicHJlZml4XCIsXCJ2YWx1ZVwiLFwic3VmZml4XCJdKXtpZihpW2ZdPG9bZl0pcmV0dXJuLTE7aWYoaVtmXT09PW9bZl0pY29udGludWU7cmV0dXJuIDF9cmV0dXJuIDB9LGM9bmV3IFIoMyxcIlwiLFwiXCIsXCJcIixcIlwiLDMpLGw9bmV3IFIoMCxcIlwiLFwiXCIsXCJcIixcIlwiLDMpLHM9KGksbyk9PntsZXQgZj0wO2Zvcig7ZjxNYXRoLm1pbihpLmxlbmd0aCxvLmxlbmd0aCk7KytmKXtsZXQgZD1hKGlbZl0sb1tmXSk7aWYoZClyZXR1cm4gZH1yZXR1cm4gaS5sZW5ndGg9PT1vLmxlbmd0aD8wOmEoaVtmXT8/YyxvW2ZdPz9jKX07cmV0dXJuIXIuI2VbdF0mJiFuLiNlW3RdPzA6ci4jZVt0XSYmIW4uI2VbdF0/cyhyLiNzW3RdLFtsXSk6IXIuI2VbdF0mJm4uI2VbdF0/cyhbbF0sbi4jc1t0XSk6cyhyLiNzW3RdLG4uI3NbdF0pfWdldCBwcm90b2NvbCgpe3JldHVybiB0aGlzLiNlLnByb3RvY29sfWdldCB1c2VybmFtZSgpe3JldHVybiB0aGlzLiNlLnVzZXJuYW1lfWdldCBwYXNzd29yZCgpe3JldHVybiB0aGlzLiNlLnBhc3N3b3JkfWdldCBob3N0bmFtZSgpe3JldHVybiB0aGlzLiNlLmhvc3RuYW1lfWdldCBwb3J0KCl7cmV0dXJuIHRoaXMuI2UucG9ydH1nZXQgcGF0aG5hbWUoKXtyZXR1cm4gdGhpcy4jZS5wYXRobmFtZX1nZXQgc2VhcmNoKCl7cmV0dXJuIHRoaXMuI2Uuc2VhcmNofWdldCBoYXNoKCl7cmV0dXJuIHRoaXMuI2UuaGFzaH1nZXQgaGFzUmVnRXhwR3JvdXBzKCl7cmV0dXJuIHRoaXMuI2x9fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/index.cjs":
/*!****************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/index.cjs ***!
  \****************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { URLPattern } = __webpack_require__(/*! ./dist/urlpattern.cjs */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\");\n\nmodule.exports = { URLPattern };\n\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = URLPattern;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvdXJscGF0dGVybi1wb2x5ZmlsbC9pbmRleC5janMiLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxhQUFhLEVBQUUsbUJBQU8sQ0FBQywrSEFBdUI7O0FBRXRELG1CQUFtQjs7QUFFbkI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy91cmxwYXR0ZXJuLXBvbHlmaWxsL2luZGV4LmNqcz85MWRlIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgVVJMUGF0dGVybiB9ID0gcmVxdWlyZShcIi4vZGlzdC91cmxwYXR0ZXJuLmNqc1wiKTtcblxubW9kdWxlLmV4cG9ydHMgPSB7IFVSTFBhdHRlcm4gfTtcblxuaWYgKCFnbG9iYWxUaGlzLlVSTFBhdHRlcm4pIHtcbiAgZ2xvYmFsVGhpcy5VUkxQYXR0ZXJuID0gVVJMUGF0dGVybjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/urlpattern-polyfill/index.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/cache-localforage/esm/InMemoryLRUDriver.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/cache-localforage/esm/InMemoryLRUDriver.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createInMemoryLRUDriver: () => (/* binding */ createInMemoryLRUDriver)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/utils/esm/global-lru-cache.js\");\n\nfunction nextTick() {\n    // Make sure this is scheduled for next tick because LRU Cache is synchronous\n    // This helps for testing multiple Mesh instances pointing to the same cache\n    return new Promise(resolve => setTimeout(resolve));\n}\nfunction createInMemoryLRUDriver(ttl) {\n    let lru;\n    return {\n        _driver: 'INMEMORY_LRU',\n        _initStorage(options) {\n            lru = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_0__.createLruCache)(options.size, ttl);\n        },\n        async getItem(key, callback) {\n            try {\n                await nextTick();\n                const value = lru.get(key);\n                if (callback) {\n                    callback(null, value);\n                }\n                return value;\n            }\n            catch (err) {\n                if (callback) {\n                    callback(err);\n                }\n                throw err;\n            }\n        },\n        async setItem(key, value, callback) {\n            try {\n                await nextTick();\n                lru.set(key, value);\n                if (callback) {\n                    callback(null, value);\n                }\n                return value;\n            }\n            catch (err) {\n                if (callback) {\n                    callback(err);\n                }\n                throw err;\n            }\n        },\n        async removeItem(key, callback) {\n            try {\n                await nextTick();\n                lru.delete(key);\n                if (callback) {\n                    callback(null);\n                }\n            }\n            catch (err) {\n                callback(err);\n                throw err;\n            }\n        },\n        async clear(callback) {\n            try {\n                await nextTick();\n                lru.clear();\n                if (callback) {\n                    callback(null);\n                }\n            }\n            catch (err) {\n                if (callback) {\n                    callback(err);\n                }\n                throw err;\n            }\n        },\n        async length(callback) {\n            try {\n                await nextTick();\n                const value = lru.size;\n                if (callback) {\n                    callback(null, value);\n                }\n                return value;\n            }\n            catch (err) {\n                if (callback) {\n                    callback(err);\n                }\n                throw err;\n            }\n        },\n        async key(n, callback) {\n            try {\n                await nextTick();\n                const value = lru.keys()[n];\n                if (callback) {\n                    callback(null, value);\n                }\n                return value;\n            }\n            catch (err) {\n                if (callback) {\n                    callback(err);\n                }\n                throw err;\n            }\n        },\n        async keys(callback) {\n            try {\n                await nextTick();\n                const value = lru.keys();\n                if (callback) {\n                    callback(null, value);\n                }\n                return value;\n            }\n            catch (err) {\n                if (callback) {\n                    callback(err);\n                }\n                throw err;\n            }\n        },\n        async iterate(iteratee, callback) {\n            try {\n                await nextTick();\n                lru.keys().forEach((key, i) => {\n                    iteratee(lru.get(key), key, i);\n                });\n                if (callback) {\n                    callback(null);\n                }\n            }\n            catch (err) {\n                if (callback) {\n                    callback(err);\n                }\n                throw err;\n            }\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvY2FjaGUtbG9jYWxmb3JhZ2UvZXNtL0luTWVtb3J5TFJVRHJpdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXFEO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLG1FQUFjO0FBQ2hDLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvY2FjaGUtbG9jYWxmb3JhZ2UvZXNtL0luTWVtb3J5TFJVRHJpdmVyLmpzP2Y4YmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlTHJ1Q2FjaGUgfSBmcm9tICdAZ3JhcGhxbC1tZXNoL3V0aWxzJztcbmZ1bmN0aW9uIG5leHRUaWNrKCkge1xuICAgIC8vIE1ha2Ugc3VyZSB0aGlzIGlzIHNjaGVkdWxlZCBmb3IgbmV4dCB0aWNrIGJlY2F1c2UgTFJVIENhY2hlIGlzIHN5bmNocm9ub3VzXG4gICAgLy8gVGhpcyBoZWxwcyBmb3IgdGVzdGluZyBtdWx0aXBsZSBNZXNoIGluc3RhbmNlcyBwb2ludGluZyB0byB0aGUgc2FtZSBjYWNoZVxuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHNldFRpbWVvdXQocmVzb2x2ZSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUluTWVtb3J5TFJVRHJpdmVyKHR0bCkge1xuICAgIGxldCBscnU7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgX2RyaXZlcjogJ0lOTUVNT1JZX0xSVScsXG4gICAgICAgIF9pbml0U3RvcmFnZShvcHRpb25zKSB7XG4gICAgICAgICAgICBscnUgPSBjcmVhdGVMcnVDYWNoZShvcHRpb25zLnNpemUsIHR0bCk7XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGdldEl0ZW0oa2V5LCBjYWxsYmFjaykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhd2FpdCBuZXh0VGljaygpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gbHJ1LmdldChrZXkpO1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhc3luYyBzZXRJdGVtKGtleSwgdmFsdWUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IG5leHRUaWNrKCk7XG4gICAgICAgICAgICAgICAgbHJ1LnNldChrZXksIHZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2sobnVsbCwgdmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgcmVtb3ZlSXRlbShrZXksIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IG5leHRUaWNrKCk7XG4gICAgICAgICAgICAgICAgbHJ1LmRlbGV0ZShrZXkpO1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGNsZWFyKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IG5leHRUaWNrKCk7XG4gICAgICAgICAgICAgICAgbHJ1LmNsZWFyKCk7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhc3luYyBsZW5ndGgoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgbmV4dFRpY2soKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGxydS5zaXplO1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsLCB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhc3luYyBrZXkobiwgY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgbmV4dFRpY2soKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGxydS5rZXlzKClbbl07XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGtleXMoY2FsbGJhY2spIHtcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXdhaXQgbmV4dFRpY2soKTtcbiAgICAgICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGxydS5rZXlzKCk7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKG51bGwsIHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIGl0ZXJhdGUoaXRlcmF0ZWUsIGNhbGxiYWNrKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGF3YWl0IG5leHRUaWNrKCk7XG4gICAgICAgICAgICAgICAgbHJ1LmtleXMoKS5mb3JFYWNoKChrZXksIGkpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaXRlcmF0ZWUobHJ1LmdldChrZXkpLCBrZXksIGkpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgICAgICAgICAgICAgICBjYWxsYmFjayhudWxsKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHRocm93IGVycjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/cache-localforage/esm/InMemoryLRUDriver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/cache-localforage/esm/index.js":
/*!********************************************************************!*\
  !*** ../node_modules/@graphql-mesh/cache-localforage/esm/index.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ LocalforageCache)\n/* harmony export */ });\n/* harmony import */ var localforage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! localforage */ \"(ssr)/../node_modules/localforage/dist/localforage.js\");\n/* harmony import */ var _InMemoryLRUDriver_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InMemoryLRUDriver.js */ \"(ssr)/../node_modules/@graphql-mesh/cache-localforage/esm/InMemoryLRUDriver.js\");\n\n\nlocalforage__WEBPACK_IMPORTED_MODULE_0__.defineDriver((0,_InMemoryLRUDriver_js__WEBPACK_IMPORTED_MODULE_1__.createInMemoryLRUDriver)()).catch(err => console.error('Failed at defining InMemoryLRU driver', err));\nclass LocalforageCache {\n    constructor(config) {\n        const driverNames = (config === null || config === void 0 ? void 0 : config.driver) || ['INDEXEDDB', 'WEBSQL', 'LOCALSTORAGE', 'INMEMORY_LRU'];\n        this.localforage = localforage__WEBPACK_IMPORTED_MODULE_0__.createInstance({\n            name: (config === null || config === void 0 ? void 0 : config.name) || 'graphql-mesh-cache',\n            storeName: (config === null || config === void 0 ? void 0 : config.storeName) || 'graphql-mesh-cache-store',\n            // @ts-expect-error - Weird error\n            driver: driverNames.map(driverName => { var _a; return (_a = localforage__WEBPACK_IMPORTED_MODULE_0__[driverName]) !== null && _a !== void 0 ? _a : driverName; }),\n            size: config === null || config === void 0 ? void 0 : config.size,\n            version: config === null || config === void 0 ? void 0 : config.version,\n            description: config === null || config === void 0 ? void 0 : config.description,\n        });\n    }\n    async get(key) {\n        const expiresAt = await this.localforage.getItem(`${key}.expiresAt`);\n        if (expiresAt && Date.now() > expiresAt) {\n            await this.localforage.removeItem(key);\n        }\n        return this.localforage.getItem(key.toString());\n    }\n    async getKeysByPrefix(prefix) {\n        const keys = await this.localforage.keys();\n        return keys.filter(key => key.startsWith(prefix));\n    }\n    async set(key, value, options) {\n        const jobs = [this.localforage.setItem(key, value)];\n        if (options === null || options === void 0 ? void 0 : options.ttl) {\n            jobs.push(this.localforage.setItem(`${key}.expiresAt`, Date.now() + options.ttl * 1000));\n        }\n        await Promise.all(jobs);\n    }\n    delete(key) {\n        return this.localforage.removeItem(key);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvY2FjaGUtbG9jYWxmb3JhZ2UvZXNtL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUMyQjtBQUNqRSxxREFBd0IsQ0FBQyw4RUFBdUI7QUFDakM7QUFDZjtBQUNBO0FBQ0EsMkJBQTJCLHVEQUEwQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsUUFBUSxhQUFhLHdDQUFXLDREQUE0RDtBQUNoSjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLDREQUE0RCxJQUFJO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxJQUFJO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9jYWNoZS1sb2NhbGZvcmFnZS9lc20vaW5kZXguanM/MDRkYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTG9jYWxGb3JhZ2UgZnJvbSAnbG9jYWxmb3JhZ2UnO1xuaW1wb3J0IHsgY3JlYXRlSW5NZW1vcnlMUlVEcml2ZXIgfSBmcm9tICcuL0luTWVtb3J5TFJVRHJpdmVyLmpzJztcbkxvY2FsRm9yYWdlLmRlZmluZURyaXZlcihjcmVhdGVJbk1lbW9yeUxSVURyaXZlcigpKS5jYXRjaChlcnIgPT4gY29uc29sZS5lcnJvcignRmFpbGVkIGF0IGRlZmluaW5nIEluTWVtb3J5TFJVIGRyaXZlcicsIGVycikpO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9jYWxmb3JhZ2VDYWNoZSB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGRyaXZlck5hbWVzID0gKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5kcml2ZXIpIHx8IFsnSU5ERVhFRERCJywgJ1dFQlNRTCcsICdMT0NBTFNUT1JBR0UnLCAnSU5NRU1PUllfTFJVJ107XG4gICAgICAgIHRoaXMubG9jYWxmb3JhZ2UgPSBMb2NhbEZvcmFnZS5jcmVhdGVJbnN0YW5jZSh7XG4gICAgICAgICAgICBuYW1lOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLm5hbWUpIHx8ICdncmFwaHFsLW1lc2gtY2FjaGUnLFxuICAgICAgICAgICAgc3RvcmVOYW1lOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLnN0b3JlTmFtZSkgfHwgJ2dyYXBocWwtbWVzaC1jYWNoZS1zdG9yZScsXG4gICAgICAgICAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gV2VpcmQgZXJyb3JcbiAgICAgICAgICAgIGRyaXZlcjogZHJpdmVyTmFtZXMubWFwKGRyaXZlck5hbWUgPT4geyB2YXIgX2E7IHJldHVybiAoX2EgPSBMb2NhbEZvcmFnZVtkcml2ZXJOYW1lXSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZHJpdmVyTmFtZTsgfSksXG4gICAgICAgICAgICBzaXplOiBjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuc2l6ZSxcbiAgICAgICAgICAgIHZlcnNpb246IGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy52ZXJzaW9uLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5kZXNjcmlwdGlvbixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFzeW5jIGdldChrZXkpIHtcbiAgICAgICAgY29uc3QgZXhwaXJlc0F0ID0gYXdhaXQgdGhpcy5sb2NhbGZvcmFnZS5nZXRJdGVtKGAke2tleX0uZXhwaXJlc0F0YCk7XG4gICAgICAgIGlmIChleHBpcmVzQXQgJiYgRGF0ZS5ub3coKSA+IGV4cGlyZXNBdCkge1xuICAgICAgICAgICAgYXdhaXQgdGhpcy5sb2NhbGZvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMubG9jYWxmb3JhZ2UuZ2V0SXRlbShrZXkudG9TdHJpbmcoKSk7XG4gICAgfVxuICAgIGFzeW5jIGdldEtleXNCeVByZWZpeChwcmVmaXgpIHtcbiAgICAgICAgY29uc3Qga2V5cyA9IGF3YWl0IHRoaXMubG9jYWxmb3JhZ2Uua2V5cygpO1xuICAgICAgICByZXR1cm4ga2V5cy5maWx0ZXIoa2V5ID0+IGtleS5zdGFydHNXaXRoKHByZWZpeCkpO1xuICAgIH1cbiAgICBhc3luYyBzZXQoa2V5LCB2YWx1ZSwgb3B0aW9ucykge1xuICAgICAgICBjb25zdCBqb2JzID0gW3RoaXMubG9jYWxmb3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKV07XG4gICAgICAgIGlmIChvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMudHRsKSB7XG4gICAgICAgICAgICBqb2JzLnB1c2godGhpcy5sb2NhbGZvcmFnZS5zZXRJdGVtKGAke2tleX0uZXhwaXJlc0F0YCwgRGF0ZS5ub3coKSArIG9wdGlvbnMudHRsICogMTAwMCkpO1xuICAgICAgICB9XG4gICAgICAgIGF3YWl0IFByb21pc2UuYWxsKGpvYnMpO1xuICAgIH1cbiAgICBkZWxldGUoa2V5KSB7XG4gICAgICAgIHJldHVybiB0aGlzLmxvY2FsZm9yYWdlLnJlbW92ZUl0ZW0oa2V5KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/cache-localforage/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/esm/index.js":
/*!**********************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GraphQLHandler)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildClientSchema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getIntrospectionQuery.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! lodash.get */ \"(ssr)/../node_modules/lodash.get/index.js\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"process\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"util\");\n/* harmony import */ var _graphql_mesh_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-mesh/store */ \"(ssr)/../node_modules/@graphql-mesh/store/esm/index.js\");\n/* harmony import */ var _graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-mesh/string-interpolation */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/resolver-data-factory.js\");\n/* harmony import */ var _graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-mesh/string-interpolation */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/index.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/read-file-or-url.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/load-from-module-export-expression.js\");\n/* harmony import */ var _graphql_tools_federation__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @graphql-tools/federation */ \"(ssr)/../node_modules/@graphql-tools/federation/esm/gateway.js\");\n/* harmony import */ var _graphql_tools_url_loader__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/url-loader */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isDocumentNode.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/selectionSets.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n\n\n\n\n\n\n\n\n\nconst getResolverData = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getResolverData(params) {\n    return {\n        root: params.rootValue,\n        args: params.variables,\n        context: params.context,\n        env: _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.env,\n    };\n});\nclass GraphQLHandler {\n    constructor({ name, config, baseDir, store, importFn, logger, }) {\n        this.urlLoader = new _graphql_tools_url_loader__WEBPACK_IMPORTED_MODULE_3__.UrlLoader();\n        this.interpolationStringSet = new Set();\n        this.name = name;\n        this.config = config;\n        this.baseDir = baseDir;\n        this.nonExecutableSchema = store.proxy('introspectionSchema', _graphql_mesh_store__WEBPACK_IMPORTED_MODULE_4__.PredefinedProxyOptions.GraphQLSchemaWithDiffing);\n        this.importFn = importFn;\n        this.logger = logger;\n    }\n    getArgsAndContextVariables() {\n        return (0,_graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_5__.parseInterpolationStrings)(this.interpolationStringSet);\n    }\n    wrapExecutorToPassSourceNameAndDebug(executor) {\n        const sourceName = this.name;\n        const logger = this.logger;\n        return function executorWithSourceName(executionRequest) {\n            logger.debug(() => `Sending GraphQL Request: `, (0,graphql__WEBPACK_IMPORTED_MODULE_6__.print)(executionRequest.document));\n            executionRequest.info = executionRequest.info || {};\n            executionRequest.info.sourceName = sourceName;\n            return executor(executionRequest);\n        };\n    }\n    async getExecutorForHTTPSourceConfig(httpSourceConfig) {\n        const { endpoint, operationHeaders = {}, connectionParams = {} } = httpSourceConfig;\n        this.interpolationStringSet.add(endpoint);\n        Object.keys(operationHeaders).forEach(headerName => {\n            this.interpolationStringSet.add(headerName.toString());\n        });\n        const endpointFactory = (0,_graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_5__.getInterpolatedStringFactory)(endpoint);\n        const operationHeadersFactory = (0,_graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_5__.getInterpolatedHeadersFactory)(operationHeaders);\n        const subscriptionsEndpoint = httpSourceConfig.subscriptionsEndpoint\n            ? _graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_7__.stringInterpolator.parse(httpSourceConfig.subscriptionsEndpoint, { env: _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.env })\n            : undefined;\n        const connectionParamsFactory = (0,_graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_5__.getInterpolatedHeadersFactory)(connectionParams);\n        const executor = this.urlLoader.getExecutorAsync(endpoint, {\n            ...httpSourceConfig,\n            subscriptionsEndpoint,\n            subscriptionsProtocol: httpSourceConfig.subscriptionsProtocol,\n            // @ts-expect-error - this is a bug in the types\n            customFetch: this.fetchFn,\n        });\n        return function meshExecutor(params) {\n            const resolverData = getResolverData(params);\n            return executor({\n                ...params,\n                extensions: {\n                    ...params.extensions,\n                    headers: operationHeadersFactory(resolverData),\n                    connectionParams: connectionParamsFactory(resolverData),\n                    endpoint: endpointFactory(resolverData),\n                },\n            });\n        };\n    }\n    getSchemaFromContent(sdlOrIntrospection) {\n        if (typeof sdlOrIntrospection === 'string') {\n            if (sdlOrIntrospection.includes('@key')) {\n                sdlOrIntrospection = sdlOrIntrospection.replace(/extend type (\\w+)/g, 'type $1 @extends');\n            }\n            return (0,graphql__WEBPACK_IMPORTED_MODULE_8__.buildSchema)(sdlOrIntrospection, {\n                assumeValid: true,\n                assumeValidSDL: true,\n            });\n        }\n        else if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.isDocumentNode)(sdlOrIntrospection)) {\n            return (0,graphql__WEBPACK_IMPORTED_MODULE_8__.buildASTSchema)(sdlOrIntrospection, {\n                assumeValid: true,\n                assumeValidSDL: true,\n            });\n        }\n        else if (sdlOrIntrospection.__schema) {\n            return (0,graphql__WEBPACK_IMPORTED_MODULE_10__.buildClientSchema)(sdlOrIntrospection, {\n                assumeValid: true,\n            });\n        }\n        throw new Error(`Invalid introspection data: ${_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_11__.inspect(sdlOrIntrospection)}`);\n    }\n    async getNonExecutableSchemaForHTTPSource(httpSourceConfig) {\n        this.interpolationStringSet.add(httpSourceConfig.endpoint);\n        Object.keys(httpSourceConfig.schemaHeaders || {}).forEach(headerName => {\n            this.interpolationStringSet.add(headerName.toString());\n        });\n        const schemaHeadersFactory = (0,_graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_5__.getInterpolatedHeadersFactory)(httpSourceConfig.schemaHeaders || {});\n        if (httpSourceConfig.source) {\n            const opts = {\n                cwd: this.baseDir,\n                allowUnknownExtensions: true,\n                importFn: this.importFn,\n                fetch: this.fetchFn,\n                logger: this.logger,\n            };\n            if (!(0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_12__.isUrl)(httpSourceConfig.source)) {\n                return this.nonExecutableSchema.getWithSet(async () => {\n                    const sdlOrIntrospection = await (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_12__.readFile)(httpSourceConfig.source, opts);\n                    return this.getSchemaFromContent(sdlOrIntrospection);\n                });\n            }\n            const headers = schemaHeadersFactory({\n                env: _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.env,\n            });\n            const sdlOrIntrospection = await (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_12__.readUrl)(httpSourceConfig.source, {\n                ...opts,\n                headers,\n            });\n            return this.getSchemaFromContent(sdlOrIntrospection);\n        }\n        return this.nonExecutableSchema.getWithSet(async () => {\n            const endpointFactory = (0,_graphql_mesh_string_interpolation__WEBPACK_IMPORTED_MODULE_5__.getInterpolatedStringFactory)(httpSourceConfig.endpoint);\n            const executor = this.urlLoader.getExecutorAsync(httpSourceConfig.endpoint, {\n                ...httpSourceConfig,\n                // @ts-expect-error - this is a bug in the types\n                customFetch: this.fetchFn,\n                subscriptionsProtocol: httpSourceConfig.subscriptionsProtocol,\n            });\n            function meshIntrospectionExecutor(params) {\n                const resolverData = getResolverData(params);\n                return executor({\n                    ...params,\n                    extensions: {\n                        ...params.extensions,\n                        headers: schemaHeadersFactory(resolverData),\n                        endpoint: endpointFactory(resolverData),\n                    },\n                });\n            }\n            const introspection = (await meshIntrospectionExecutor({\n                document: (0,graphql__WEBPACK_IMPORTED_MODULE_13__.parse)((0,graphql__WEBPACK_IMPORTED_MODULE_14__.getIntrospectionQuery)()),\n            }));\n            if (introspection.data.__schema.types.find(t => t.name === '_Service')) {\n                const sdl = (await meshIntrospectionExecutor({\n                    document: (0,graphql__WEBPACK_IMPORTED_MODULE_13__.parse)(_graphql_tools_federation__WEBPACK_IMPORTED_MODULE_15__.SubgraphSDLQuery),\n                }));\n                const schema = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.buildSchema)(sdl.data._service.sdl.replace(/extend type (\\w+)/g, 'type $1 @extends'), {\n                    assumeValid: true,\n                    assumeValidSDL: true,\n                });\n                return schema;\n            }\n            return (0,graphql__WEBPACK_IMPORTED_MODULE_10__.buildClientSchema)(introspection.data, {\n                assumeValid: true,\n            });\n        });\n    }\n    async getCodeFirstSource({ source: schemaConfig, }) {\n        if (schemaConfig.endsWith('.graphql')) {\n            const rawSDL = await (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_12__.readFileOrUrl)(schemaConfig, {\n                cwd: this.baseDir,\n                allowUnknownExtensions: true,\n                importFn: this.importFn,\n                fetch: this.fetchFn,\n                logger: this.logger,\n            });\n            const schema = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.buildSchema)(rawSDL, {\n                assumeValid: true,\n                assumeValidSDL: true,\n            });\n            const { contextVariables } = this.getArgsAndContextVariables();\n            return {\n                schema,\n                contextVariables,\n            };\n        }\n        else {\n            // Loaders logic should be here somehow\n            const schemaOrStringOrDocumentNode = await (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_16__.loadFromModuleExportExpression)(schemaConfig, { cwd: this.baseDir, defaultExportName: 'schema', importFn: this.importFn });\n            let schema;\n            if (schemaOrStringOrDocumentNode instanceof graphql__WEBPACK_IMPORTED_MODULE_17__.GraphQLSchema) {\n                schema = schemaOrStringOrDocumentNode;\n            }\n            else if (typeof schemaOrStringOrDocumentNode === 'string') {\n                schema = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.buildSchema)(schemaOrStringOrDocumentNode, {\n                    assumeValid: true,\n                    assumeValidSDL: true,\n                });\n            }\n            else if (typeof schemaOrStringOrDocumentNode === 'object' &&\n                schemaOrStringOrDocumentNode?.kind === graphql__WEBPACK_IMPORTED_MODULE_18__.Kind.DOCUMENT) {\n                schema = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.buildASTSchema)(schemaOrStringOrDocumentNode, {\n                    assumeValid: true,\n                    assumeValidSDL: true,\n                });\n            }\n            else {\n                throw new Error(`Provided file '${schemaConfig} exports an unknown type: ${_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_11__.inspect(schemaOrStringOrDocumentNode)}': expected GraphQLSchema, SDL or DocumentNode.`);\n            }\n            const { contextVariables } = this.getArgsAndContextVariables();\n            return {\n                schema,\n                contextVariables,\n            };\n        }\n    }\n    getRaceExecutor(executors) {\n        return function raceExecutor(params) {\n            return Promise.race(executors.map(executor => executor(params)));\n        };\n    }\n    getFallbackExecutor(executors) {\n        return async function fallbackExecutor(params) {\n            let error;\n            let response;\n            for (const executor of executors) {\n                try {\n                    const executorResponse = await executor(params);\n                    if ('errors' in executorResponse && executorResponse.errors?.length) {\n                        response = executorResponse;\n                        continue;\n                    }\n                    else {\n                        return executorResponse;\n                    }\n                }\n                catch (e) {\n                    error = e;\n                }\n            }\n            if (response != null) {\n                return response;\n            }\n            throw error;\n        };\n    }\n    async getMeshSource(payload) {\n        const meshSource = await this.getMeshSourceWithoutFederation(payload);\n        if (meshSource.schema.getDirective('key') != null) {\n            const typeDefs = (0,graphql__WEBPACK_IMPORTED_MODULE_19__.visit)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_20__.getDocumentNodeFromSchema)(meshSource.schema), {\n                ObjectTypeDefinition(node) {\n                    if (node.directives?.find(d => d.name.value === 'extends')) {\n                        return {\n                            ...node,\n                            directives: node.directives.filter(d => d.name.value !== 'extends'),\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_18__.Kind.OBJECT_TYPE_EXTENSION,\n                        };\n                    }\n                    return node;\n                },\n            });\n            const extraConfig = (0,_graphql_tools_federation__WEBPACK_IMPORTED_MODULE_15__.getSubschemaForFederationWithTypeDefs)(typeDefs);\n            return {\n                ...meshSource,\n                ...extraConfig,\n                batch: true,\n            };\n        }\n        return meshSource;\n    }\n    async getMeshSourceWithoutFederation({ fetchFn }) {\n        this.fetchFn = fetchFn;\n        if ('sources' in this.config) {\n            if (this.config.strategy === 'race') {\n                const schemaPromises = [];\n                const executorPromises = [];\n                let batch = true;\n                for (const httpSourceConfig of this.config.sources) {\n                    if (httpSourceConfig.batch === false) {\n                        batch = false;\n                    }\n                    schemaPromises.push(this.getNonExecutableSchemaForHTTPSource(httpSourceConfig));\n                    executorPromises.push(this.getExecutorForHTTPSourceConfig(httpSourceConfig));\n                }\n                const [schema, ...executors] = await Promise.all([\n                    Promise.race(schemaPromises),\n                    ...executorPromises,\n                ]);\n                const executor = this.getRaceExecutor(executors);\n                const { contextVariables } = this.getArgsAndContextVariables();\n                return {\n                    schema,\n                    executor,\n                    batch,\n                    contextVariables,\n                };\n            }\n            else if (this.config.strategy === 'highestValue') {\n                if (this.config.strategyConfig == null) {\n                    throw new Error(`You must configure 'highestValue' strategy`);\n                }\n                let schema;\n                const executorPromises = [];\n                let error;\n                for (const httpSourceConfig of this.config.sources) {\n                    executorPromises.push(this.getExecutorForHTTPSourceConfig(httpSourceConfig));\n                    if (schema == null) {\n                        try {\n                            schema = await this.getNonExecutableSchemaForHTTPSource(httpSourceConfig);\n                        }\n                        catch (e) {\n                            error = e;\n                        }\n                    }\n                }\n                if (schema == null) {\n                    throw error;\n                }\n                const executors = await Promise.all(executorPromises);\n                const parsedSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_21__.parseSelectionSet)(this.config.strategyConfig.selectionSet);\n                const valuePath = this.config.strategyConfig.value;\n                const highestValueExecutor = async function highestValueExecutor(executionRequest) {\n                    const operationAST = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_22__.getOperationASTFromRequest)(executionRequest);\n                    operationAST.selectionSet.selections.push(...parsedSelectionSet.selections);\n                    const results = await Promise.all(executors.map(executor => executor(executionRequest)));\n                    let highestValue = -Infinity;\n                    let resultWithHighestResult = results[0];\n                    for (const result of results) {\n                        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_23__.isAsyncIterable)(result)) {\n                            console.warn('Incremental delivery is not supported currently');\n                            return result;\n                        }\n                        else if (result.data != null) {\n                            const currentValue = lodash_get__WEBPACK_IMPORTED_MODULE_0__(result.data, valuePath);\n                            if (currentValue > highestValue) {\n                                resultWithHighestResult = result;\n                                highestValue = currentValue;\n                            }\n                        }\n                    }\n                    return resultWithHighestResult;\n                };\n                const { contextVariables } = this.getArgsAndContextVariables();\n                return {\n                    schema,\n                    executor: this.wrapExecutorToPassSourceNameAndDebug(highestValueExecutor),\n                    // Batching doesn't make sense with fallback strategy\n                    batch: false,\n                    contextVariables,\n                };\n            }\n            else {\n                let schema;\n                const executorPromises = [];\n                let error;\n                for (const httpSourceConfig of this.config.sources) {\n                    executorPromises.push(this.getExecutorForHTTPSourceConfig(httpSourceConfig));\n                    if (schema == null) {\n                        try {\n                            schema = await this.getNonExecutableSchemaForHTTPSource(httpSourceConfig);\n                        }\n                        catch (e) {\n                            error = e;\n                        }\n                    }\n                }\n                if (schema == null) {\n                    throw error;\n                }\n                const executors = await Promise.all(executorPromises);\n                const executor = this.getFallbackExecutor(executors);\n                const { contextVariables } = this.getArgsAndContextVariables();\n                return {\n                    schema,\n                    executor,\n                    // Batching doesn't make sense with fallback strategy\n                    batch: false,\n                    contextVariables,\n                };\n            }\n        }\n        else if ('endpoint' in this.config) {\n            const [schemaResult, executorResult] = await Promise.allSettled([\n                this.getNonExecutableSchemaForHTTPSource(this.config),\n                this.getExecutorForHTTPSourceConfig(this.config),\n            ]);\n            if (schemaResult.status === 'rejected') {\n                if (schemaResult.reason instanceof _graphql_mesh_store__WEBPACK_IMPORTED_MODULE_4__.ValidationError) {\n                    throw schemaResult.reason;\n                }\n                throw new Error(`Failed to fetch introspection from ${this.config.endpoint}: ${_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_11__.inspect(schemaResult.reason)}`);\n            }\n            if (executorResult.status === 'rejected') {\n                throw new Error(`Failed to create executor for ${this.config.endpoint}: ${_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_11__.inspect(executorResult.reason)}`);\n            }\n            const { contextVariables } = this.getArgsAndContextVariables();\n            return {\n                schema: schemaResult.value,\n                executor: this.wrapExecutorToPassSourceNameAndDebug(executorResult.value),\n                batch: this.config.batch != null ? this.config.batch : true,\n                contextVariables,\n            };\n        }\n        else if ('source' in this.config) {\n            return this.getCodeFirstSource(this.config);\n        }\n        throw new Error(`Unexpected config: ${_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_11__.inspect(this.config)}`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/index.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Interpolator: () => (/* reexport safe */ _interpolator_js__WEBPACK_IMPORTED_MODULE_1__.Interpolator),\n/* harmony export */   getInterpolatedHeadersFactory: () => (/* reexport safe */ _resolver_data_factory_js__WEBPACK_IMPORTED_MODULE_2__.getInterpolatedHeadersFactory),\n/* harmony export */   getInterpolatedStringFactory: () => (/* reexport safe */ _resolver_data_factory_js__WEBPACK_IMPORTED_MODULE_2__.getInterpolatedStringFactory),\n/* harmony export */   getInterpolationKeys: () => (/* reexport safe */ _resolver_data_factory_js__WEBPACK_IMPORTED_MODULE_2__.getInterpolationKeys),\n/* harmony export */   hashObject: () => (/* binding */ hashObject),\n/* harmony export */   parseInterpolationStrings: () => (/* reexport safe */ _resolver_data_factory_js__WEBPACK_IMPORTED_MODULE_2__.parseInterpolationStrings),\n/* harmony export */   stringInterpolator: () => (/* binding */ stringInterpolator)\n/* harmony export */ });\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"(ssr)/../node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var _interpolator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./interpolator.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/interpolator.js\");\n/* harmony import */ var _resolver_data_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./resolver-data-factory.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/resolver-data-factory.js\");\n\n\nconst hashCode = (s) => s.split('').reduce((a, b) => ((a << 5) - a + b.charCodeAt(0)) | 0, 0);\nfunction hashObject(value) {\n    return hashCode(JSON.stringify(value)).toString();\n}\n\nconst stringInterpolator = new _interpolator_js__WEBPACK_IMPORTED_MODULE_1__.Interpolator({\n    delimiter: ['{', '}'],\n});\nstringInterpolator.addAlias('typeName', 'info.parentType.name');\nstringInterpolator.addAlias('type', 'info.parentType.name');\nstringInterpolator.addAlias('parentType', 'info.parentType.name');\nstringInterpolator.addAlias('fieldName', 'info.fieldName');\nstringInterpolator.registerModifier('date', (formatStr) => dayjs__WEBPACK_IMPORTED_MODULE_0__(new Date()).format(formatStr));\nstringInterpolator.registerModifier('hash', (value) => hashObject(value));\nstringInterpolator.registerModifier('base64', (value) => {\n    if (globalThis.Buffer.from) {\n        return globalThis.Buffer.from(value).toString('base64');\n    }\n    else {\n        return btoa(value);\n    }\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUEwQjtBQUN1QjtBQUNqRDtBQUNPO0FBQ1A7QUFDQTtBQUN3QjtBQUNqQiwrQkFBK0IsMERBQVk7QUFDbEQsa0JBQWtCLEtBQUs7QUFDdkIsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGtDQUFLO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQzBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3N0cmluZy1pbnRlcnBvbGF0aW9uL2VzbS9pbmRleC5qcz9jNThhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkYXlqcyBmcm9tICdkYXlqcyc7XG5pbXBvcnQgeyBJbnRlcnBvbGF0b3IgfSBmcm9tICcuL2ludGVycG9sYXRvci5qcyc7XG5jb25zdCBoYXNoQ29kZSA9IChzKSA9PiBzLnNwbGl0KCcnKS5yZWR1Y2UoKGEsIGIpID0+ICgoYSA8PCA1KSAtIGEgKyBiLmNoYXJDb2RlQXQoMCkpIHwgMCwgMCk7XG5leHBvcnQgZnVuY3Rpb24gaGFzaE9iamVjdCh2YWx1ZSkge1xuICAgIHJldHVybiBoYXNoQ29kZShKU09OLnN0cmluZ2lmeSh2YWx1ZSkpLnRvU3RyaW5nKCk7XG59XG5leHBvcnQgeyBJbnRlcnBvbGF0b3IgfTtcbmV4cG9ydCBjb25zdCBzdHJpbmdJbnRlcnBvbGF0b3IgPSBuZXcgSW50ZXJwb2xhdG9yKHtcbiAgICBkZWxpbWl0ZXI6IFsneycsICd9J10sXG59KTtcbnN0cmluZ0ludGVycG9sYXRvci5hZGRBbGlhcygndHlwZU5hbWUnLCAnaW5mby5wYXJlbnRUeXBlLm5hbWUnKTtcbnN0cmluZ0ludGVycG9sYXRvci5hZGRBbGlhcygndHlwZScsICdpbmZvLnBhcmVudFR5cGUubmFtZScpO1xuc3RyaW5nSW50ZXJwb2xhdG9yLmFkZEFsaWFzKCdwYXJlbnRUeXBlJywgJ2luZm8ucGFyZW50VHlwZS5uYW1lJyk7XG5zdHJpbmdJbnRlcnBvbGF0b3IuYWRkQWxpYXMoJ2ZpZWxkTmFtZScsICdpbmZvLmZpZWxkTmFtZScpO1xuc3RyaW5nSW50ZXJwb2xhdG9yLnJlZ2lzdGVyTW9kaWZpZXIoJ2RhdGUnLCAoZm9ybWF0U3RyKSA9PiBkYXlqcyhuZXcgRGF0ZSgpKS5mb3JtYXQoZm9ybWF0U3RyKSk7XG5zdHJpbmdJbnRlcnBvbGF0b3IucmVnaXN0ZXJNb2RpZmllcignaGFzaCcsICh2YWx1ZSkgPT4gaGFzaE9iamVjdCh2YWx1ZSkpO1xuc3RyaW5nSW50ZXJwb2xhdG9yLnJlZ2lzdGVyTW9kaWZpZXIoJ2Jhc2U2NCcsICh2YWx1ZSkgPT4ge1xuICAgIGlmIChnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKSB7XG4gICAgICAgIHJldHVybiBnbG9iYWxUaGlzLkJ1ZmZlci5mcm9tKHZhbHVlKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gYnRvYSh2YWx1ZSk7XG4gICAgfVxufSk7XG5leHBvcnQgKiBmcm9tICcuL3Jlc29sdmVyLWRhdGEtZmFjdG9yeS5qcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/interpolator.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/interpolator.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Interpolator: () => (/* binding */ Interpolator)\n/* harmony export */ });\n/* harmony import */ var json_pointer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! json-pointer */ \"(ssr)/../node_modules/json-pointer/index.js\");\n/* harmony import */ var lodash_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash.get */ \"(ssr)/../node_modules/lodash.get/index.js\");\n/* harmony import */ var _modifiers_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modifiers/index.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/index.js\");\n/* harmony import */ var _statics_DefaultOptions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./statics/DefaultOptions.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/statics/DefaultOptions.js\");\n\n\n\n\nclass Interpolator {\n    constructor(options = _statics_DefaultOptions_js__WEBPACK_IMPORTED_MODULE_2__.defaultOptions) {\n        this.options = options;\n        this.modifiers = [];\n        this.aliases = [];\n        this.registerBuiltInModifiers();\n    }\n    registerBuiltInModifiers() {\n        _modifiers_index_js__WEBPACK_IMPORTED_MODULE_3__.defaultModifiers.forEach(modifier => this.registerModifier(modifier.key, modifier.transform));\n        return this;\n    }\n    get delimiter() {\n        return this.options.delimiter;\n    }\n    delimiterStart() {\n        return this.options.delimiter[0];\n    }\n    delimiterEnd() {\n        return this.options.delimiter[1];\n    }\n    registerModifier(key, transform) {\n        if (!key) {\n            return new Error('Modifiers must have a key');\n        }\n        if (typeof transform !== 'function') {\n            return new Error('Modifiers must have a transformer. Transformers must be a function that returns a value.');\n        }\n        this.modifiers.push({ key: key.toLowerCase(), transform });\n        return this;\n    }\n    parseRules(str) {\n        const regex = `${this.delimiterStart()}([^}]+)${this.delimiterEnd()}`;\n        const execRegex = new RegExp(regex, 'gi');\n        const matches = str.match(execRegex);\n        // const parsableMatches = matches.map((match) => ({ key: removeDelimiter(match), replaceWith: match }));\n        return matches ? this.extractRules(matches) : [];\n    }\n    extractRules(matches) {\n        return matches.map(match => {\n            const alternativeText = this.getAlternativeText(match);\n            const modifiers = this.getModifiers(match);\n            return {\n                key: this.getKeyFromMatch(match),\n                replace: match,\n                modifiers,\n                alternativeText,\n            };\n        });\n    }\n    getKeyFromMatch(match) {\n        const removeReservedSymbols = [':', '|'];\n        return this.removeDelimiter(removeReservedSymbols.reduce((val, sym) => (val.indexOf(sym) > 0 ? this.removeAfter(val, sym) : val), match));\n    }\n    removeDelimiter(val) {\n        return val\n            .replace(new RegExp(this.delimiterStart(), 'g'), '')\n            .replace(new RegExp(this.delimiterEnd(), 'g'), '');\n    }\n    removeAfter(str, val) {\n        return str.substring(0, str.indexOf(val));\n    }\n    extractAfter(str, val) {\n        return str.substring(str.indexOf(val) + 1);\n    }\n    getAlternativeText(str) {\n        if (str.indexOf(':') > 0) {\n            const altText = this.removeDelimiter(this.extractAfter(str, ':'));\n            if (altText.indexOf('|') > 0) {\n                return this.removeAfter(altText, '|');\n            }\n            return altText;\n        }\n        return '';\n    }\n    getModifiers(str) {\n        if (str.indexOf('|') > 0) {\n            const strModifiers = this.removeDelimiter(this.extractAfter(str, '|')).split(',');\n            return strModifiers.map(modifier => this.getModifier(modifier.toLowerCase()));\n        }\n        return [];\n    }\n    parse(str = '', data = {}) {\n        const rules = this.parseRules(str);\n        if (rules && rules.length > 0) {\n            return this.parseFromRules(str, data, rules);\n        }\n        return str;\n    }\n    parseFromRules(str, data, rules) {\n        return rules.reduce((reducedStr, rule) => this.applyRule(reducedStr, rule, data), str);\n    }\n    applyRule(str, rule, data = {}) {\n        const dataToReplace = this.applyData(rule.key, data);\n        if (dataToReplace !== undefined) {\n            return str.replace(rule.replace, this.applyModifiers(rule.modifiers, dataToReplace, data));\n        }\n        else if (rule.alternativeText) {\n            return str.replace(rule.replace, this.applyModifiers(rule.modifiers, rule.alternativeText, data));\n        }\n        const defaultModifier = this.applyModifiers(rule.modifiers, rule.key, data);\n        if (defaultModifier === rule.key) {\n            return str.replace(rule.replace, '');\n        }\n        return str.replace(rule.replace, defaultModifier);\n    }\n    getFromAlias(key) {\n        return this.aliases.find(alias => alias.key.toLowerCase() === key.toLowerCase());\n    }\n    applyData(key, data) {\n        const [prop, ptr] = key.split('#');\n        const propData = lodash_get__WEBPACK_IMPORTED_MODULE_1__(data, prop);\n        if (ptr) {\n            try {\n                return json_pointer__WEBPACK_IMPORTED_MODULE_0__.get(propData, ptr);\n            }\n            catch (e) {\n                if (e.message.startsWith('Invalid reference')) {\n                    return undefined;\n                }\n                throw e;\n            }\n        }\n        return propData;\n    }\n    getModifier(key) {\n        return this.modifiers.find(modifier => modifier.key === key);\n    }\n    applyModifiers(modifiers, str, rawData) {\n        try {\n            const transformers = modifiers.map(modifier => modifier && modifier.transform);\n            return transformers.reduce((str, transform) => (transform ? transform(str, rawData) : str), str);\n        }\n        catch (e) {\n            console.error(`An error occurred while applying modifiers to ${str}`, modifiers, e);\n            return str;\n        }\n    }\n    addAlias(key, ref) {\n        if (typeof ref === 'function') {\n            this.aliases.push({ key, ref: ref() });\n        }\n        else {\n            this.aliases.push({ key, ref });\n        }\n        return this;\n    }\n    removeAlias(key) {\n        this.aliases = this.aliases.filter(alias => alias.key !== key);\n        return this;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/interpolator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/index.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/index.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultModifiers: () => (/* binding */ defaultModifiers)\n/* harmony export */ });\n/* harmony import */ var _lowercase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lowercase.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/lowercase.js\");\n/* harmony import */ var _title_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./title.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/title.js\");\n/* harmony import */ var _uppercase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./uppercase.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/uppercase.js\");\n\n\n\nconst defaultModifiers = [\n    {\n        key: 'uppercase',\n        transform: _uppercase_js__WEBPACK_IMPORTED_MODULE_0__.uppercase,\n    },\n    {\n        key: 'lowercase',\n        transform: _lowercase_js__WEBPACK_IMPORTED_MODULE_1__.lowercase,\n    },\n    {\n        key: 'title',\n        transform: _title_js__WEBPACK_IMPORTED_MODULE_2__.titlecase,\n    },\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vbW9kaWZpZXJzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMkM7QUFDSjtBQUNJO0FBQ3BDO0FBQ1A7QUFDQTtBQUNBLG1CQUFtQixvREFBUztBQUM1QixLQUFLO0FBQ0w7QUFDQTtBQUNBLG1CQUFtQixvREFBUztBQUM1QixLQUFLO0FBQ0w7QUFDQTtBQUNBLG1CQUFtQixnREFBUztBQUM1QixLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvc3RyaW5nLWludGVycG9sYXRpb24vZXNtL21vZGlmaWVycy9pbmRleC5qcz9iZDA2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvd2VyY2FzZSB9IGZyb20gJy4vbG93ZXJjYXNlLmpzJztcbmltcG9ydCB7IHRpdGxlY2FzZSB9IGZyb20gJy4vdGl0bGUuanMnO1xuaW1wb3J0IHsgdXBwZXJjYXNlIH0gZnJvbSAnLi91cHBlcmNhc2UuanMnO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRNb2RpZmllcnMgPSBbXG4gICAge1xuICAgICAgICBrZXk6ICd1cHBlcmNhc2UnLFxuICAgICAgICB0cmFuc2Zvcm06IHVwcGVyY2FzZSxcbiAgICB9LFxuICAgIHtcbiAgICAgICAga2V5OiAnbG93ZXJjYXNlJyxcbiAgICAgICAgdHJhbnNmb3JtOiBsb3dlcmNhc2UsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGtleTogJ3RpdGxlJyxcbiAgICAgICAgdHJhbnNmb3JtOiB0aXRsZWNhc2UsXG4gICAgfSxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/lowercase.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/lowercase.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   lowercase: () => (/* binding */ lowercase)\n/* harmony export */ });\nconst lowercase = value => value.toLowerCase();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vbW9kaWZpZXJzL2xvd2VyY2FzZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvc3RyaW5nLWludGVycG9sYXRpb24vZXNtL21vZGlmaWVycy9sb3dlcmNhc2UuanM/ZTk2YSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbG93ZXJjYXNlID0gdmFsdWUgPT4gdmFsdWUudG9Mb3dlckNhc2UoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/lowercase.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/title.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/title.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   titlecase: () => (/* binding */ titlecase)\n/* harmony export */ });\nconst titlecase = value => value.replace(/\\w\\S*/g, s => s.charAt(0).toUpperCase() + s.substr(1).toLowerCase());\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vbW9kaWZpZXJzL3RpdGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vbW9kaWZpZXJzL3RpdGxlLmpzPzMxYjEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHRpdGxlY2FzZSA9IHZhbHVlID0+IHZhbHVlLnJlcGxhY2UoL1xcd1xcUyovZywgcyA9PiBzLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgcy5zdWJzdHIoMSkudG9Mb3dlckNhc2UoKSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/title.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/uppercase.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/uppercase.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   uppercase: () => (/* binding */ uppercase)\n/* harmony export */ });\nconst uppercase = value => value.toUpperCase();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vbW9kaWZpZXJzL3VwcGVyY2FzZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvc3RyaW5nLWludGVycG9sYXRpb24vZXNtL21vZGlmaWVycy91cHBlcmNhc2UuanM/MzcyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgdXBwZXJjYXNlID0gdmFsdWUgPT4gdmFsdWUudG9VcHBlckNhc2UoKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/modifiers/uppercase.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/resolver-data-factory.js":
/*!**************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/resolver-data-factory.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInterpolatedHeadersFactory: () => (/* binding */ getInterpolatedHeadersFactory),\n/* harmony export */   getInterpolatedStringFactory: () => (/* binding */ getInterpolatedStringFactory),\n/* harmony export */   getInterpolationKeys: () => (/* binding */ getInterpolationKeys),\n/* harmony export */   parseInterpolationStrings: () => (/* binding */ parseInterpolationStrings)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/index.js\");\n\nfunction getInterpolationKeys(...interpolationStrings) {\n    return interpolationStrings.reduce((keys, str) => [\n        ...keys,\n        ...(str ? _index_js__WEBPACK_IMPORTED_MODULE_0__.stringInterpolator.parseRules(str).map((match) => match.key) : []),\n    ], []);\n}\nfunction parseInterpolationStrings(interpolationStrings, argTypeMap) {\n    const interpolationKeys = getInterpolationKeys(...interpolationStrings);\n    const args = {};\n    const contextVariables = {};\n    for (const interpolationKey of interpolationKeys) {\n        const interpolationKeyParts = interpolationKey.split('.');\n        const varName = interpolationKeyParts[interpolationKeyParts.length - 1];\n        const initialObject = interpolationKeyParts[0];\n        const argType = argTypeMap && varName in argTypeMap\n            ? argTypeMap[varName]\n            : interpolationKeyParts.length > 2\n                ? 'JSON'\n                : 'ID';\n        switch (initialObject) {\n            case 'args':\n                args[varName] = {\n                    type: argType,\n                };\n                break;\n            case 'context':\n                contextVariables[varName] = `Scalars['${argType}']`;\n                break;\n        }\n    }\n    return {\n        args,\n        contextVariables,\n    };\n}\nfunction getInterpolatedStringFactory(nonInterpolatedString) {\n    return resolverData => _index_js__WEBPACK_IMPORTED_MODULE_0__.stringInterpolator.parse(nonInterpolatedString, resolverData);\n}\nfunction getInterpolatedHeadersFactory(nonInterpolatedHeaders = {}) {\n    return resolverData => {\n        const headers = {};\n        for (const headerName in nonInterpolatedHeaders) {\n            const headerValue = nonInterpolatedHeaders[headerName];\n            if (headerValue) {\n                const interpolatedValue = _index_js__WEBPACK_IMPORTED_MODULE_0__.stringInterpolator.parse(headerValue, resolverData);\n                if (interpolatedValue) {\n                    headers[headerName] = interpolatedValue;\n                }\n            }\n        }\n        return headers;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vcmVzb2x2ZXItZGF0YS1mYWN0b3J5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWdEO0FBQ3pDO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQix5REFBa0I7QUFDcEM7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsUUFBUTtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCwyQkFBMkIseURBQWtCO0FBQzdDO0FBQ08sa0VBQWtFO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMseURBQWtCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvc3RyaW5nLWludGVycG9sYXRpb24vZXNtL3Jlc29sdmVyLWRhdGEtZmFjdG9yeS5qcz9iNGQ1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0cmluZ0ludGVycG9sYXRvciB9IGZyb20gJy4vaW5kZXguanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEludGVycG9sYXRpb25LZXlzKC4uLmludGVycG9sYXRpb25TdHJpbmdzKSB7XG4gICAgcmV0dXJuIGludGVycG9sYXRpb25TdHJpbmdzLnJlZHVjZSgoa2V5cywgc3RyKSA9PiBbXG4gICAgICAgIC4uLmtleXMsXG4gICAgICAgIC4uLihzdHIgPyBzdHJpbmdJbnRlcnBvbGF0b3IucGFyc2VSdWxlcyhzdHIpLm1hcCgobWF0Y2gpID0+IG1hdGNoLmtleSkgOiBbXSksXG4gICAgXSwgW10pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW50ZXJwb2xhdGlvblN0cmluZ3MoaW50ZXJwb2xhdGlvblN0cmluZ3MsIGFyZ1R5cGVNYXApIHtcbiAgICBjb25zdCBpbnRlcnBvbGF0aW9uS2V5cyA9IGdldEludGVycG9sYXRpb25LZXlzKC4uLmludGVycG9sYXRpb25TdHJpbmdzKTtcbiAgICBjb25zdCBhcmdzID0ge307XG4gICAgY29uc3QgY29udGV4dFZhcmlhYmxlcyA9IHt9O1xuICAgIGZvciAoY29uc3QgaW50ZXJwb2xhdGlvbktleSBvZiBpbnRlcnBvbGF0aW9uS2V5cykge1xuICAgICAgICBjb25zdCBpbnRlcnBvbGF0aW9uS2V5UGFydHMgPSBpbnRlcnBvbGF0aW9uS2V5LnNwbGl0KCcuJyk7XG4gICAgICAgIGNvbnN0IHZhck5hbWUgPSBpbnRlcnBvbGF0aW9uS2V5UGFydHNbaW50ZXJwb2xhdGlvbktleVBhcnRzLmxlbmd0aCAtIDFdO1xuICAgICAgICBjb25zdCBpbml0aWFsT2JqZWN0ID0gaW50ZXJwb2xhdGlvbktleVBhcnRzWzBdO1xuICAgICAgICBjb25zdCBhcmdUeXBlID0gYXJnVHlwZU1hcCAmJiB2YXJOYW1lIGluIGFyZ1R5cGVNYXBcbiAgICAgICAgICAgID8gYXJnVHlwZU1hcFt2YXJOYW1lXVxuICAgICAgICAgICAgOiBpbnRlcnBvbGF0aW9uS2V5UGFydHMubGVuZ3RoID4gMlxuICAgICAgICAgICAgICAgID8gJ0pTT04nXG4gICAgICAgICAgICAgICAgOiAnSUQnO1xuICAgICAgICBzd2l0Y2ggKGluaXRpYWxPYmplY3QpIHtcbiAgICAgICAgICAgIGNhc2UgJ2FyZ3MnOlxuICAgICAgICAgICAgICAgIGFyZ3NbdmFyTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IGFyZ1R5cGUsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2NvbnRleHQnOlxuICAgICAgICAgICAgICAgIGNvbnRleHRWYXJpYWJsZXNbdmFyTmFtZV0gPSBgU2NhbGFyc1snJHthcmdUeXBlfSddYDtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBhcmdzLFxuICAgICAgICBjb250ZXh0VmFyaWFibGVzLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0SW50ZXJwb2xhdGVkU3RyaW5nRmFjdG9yeShub25JbnRlcnBvbGF0ZWRTdHJpbmcpIHtcbiAgICByZXR1cm4gcmVzb2x2ZXJEYXRhID0+IHN0cmluZ0ludGVycG9sYXRvci5wYXJzZShub25JbnRlcnBvbGF0ZWRTdHJpbmcsIHJlc29sdmVyRGF0YSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0SW50ZXJwb2xhdGVkSGVhZGVyc0ZhY3Rvcnkobm9uSW50ZXJwb2xhdGVkSGVhZGVycyA9IHt9KSB7XG4gICAgcmV0dXJuIHJlc29sdmVyRGF0YSA9PiB7XG4gICAgICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBoZWFkZXJOYW1lIGluIG5vbkludGVycG9sYXRlZEhlYWRlcnMpIHtcbiAgICAgICAgICAgIGNvbnN0IGhlYWRlclZhbHVlID0gbm9uSW50ZXJwb2xhdGVkSGVhZGVyc1toZWFkZXJOYW1lXTtcbiAgICAgICAgICAgIGlmIChoZWFkZXJWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGludGVycG9sYXRlZFZhbHVlID0gc3RyaW5nSW50ZXJwb2xhdG9yLnBhcnNlKGhlYWRlclZhbHVlLCByZXNvbHZlckRhdGEpO1xuICAgICAgICAgICAgICAgIGlmIChpbnRlcnBvbGF0ZWRWYWx1ZSkge1xuICAgICAgICAgICAgICAgICAgICBoZWFkZXJzW2hlYWRlck5hbWVdID0gaW50ZXJwb2xhdGVkVmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBoZWFkZXJzO1xuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/resolver-data-factory.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/statics/DefaultOptions.js":
/*!***************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/statics/DefaultOptions.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultOptions: () => (/* binding */ defaultOptions)\n/* harmony export */ });\nconst defaultOptions = {\n    delimiter: ['{', '}'],\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vc3RhdGljcy9EZWZhdWx0T3B0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUCxrQkFBa0IsS0FBSztBQUN2QiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9zdHJpbmctaW50ZXJwb2xhdGlvbi9lc20vc3RhdGljcy9EZWZhdWx0T3B0aW9ucy5qcz8wNzJjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBkZWxpbWl0ZXI6IFsneycsICd9J10sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/string-interpolation/esm/statics/DefaultOptions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/defaultImportFn.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/defaultImportFn.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultImportFn: () => (/* binding */ defaultImportFn)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n\nasync function defaultImportFn(path) {\n    let module = await __webpack_require__(\"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm lazy recursive\")(path)\n        .catch(e => {\n        if (e.code === 'ERR_REQUIRE_ESM') {\n            // eslint-disable-next-line no-new-func\n            return new Function(`return import(${JSON.stringify(path)})`)();\n        }\n        throw e;\n    })\n        .catch(e => {\n        if (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(path) && !path.endsWith('.js') && !path.endsWith('.ts')) {\n            return defaultImportFn(`${path}.ts`);\n        }\n        throw e;\n    });\n    if (module.default != null) {\n        module = module.default;\n    }\n    if (typeof module === 'object' && module != null) {\n        const prototypeOfObject = Object.getPrototypeOf(module);\n        if (prototypeOfObject == null || prototypeOfObject === Object.prototype) {\n            const normalizedVal = {};\n            for (const key in module) {\n                normalizedVal[key] = module[key];\n            }\n            return normalizedVal;\n        }\n    }\n    return module;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZGVmYXVsdEltcG9ydEZuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlFO0FBQ2pFO0FBQ0EsdUJBQXVCLHVIQUEwQixJQUFJLENBQUM7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EsaURBQWlELHFCQUFxQjtBQUN0RTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsWUFBWSxtRUFBcUI7QUFDakMsc0NBQXNDLEtBQUs7QUFDM0M7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDMkIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2RlZmF1bHRJbXBvcnRGbi5qcz8xNGU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhdGggYXMgcGF0aE1vZHVsZSB9IGZyb20gJ0BncmFwaHFsLW1lc2gvY3Jvc3MtaGVscGVycyc7XG5hc3luYyBmdW5jdGlvbiBkZWZhdWx0SW1wb3J0Rm4ocGF0aCkge1xuICAgIGxldCBtb2R1bGUgPSBhd2FpdCBpbXBvcnQoLyogQHZpdGUtaWdub3JlICovIHBhdGgpXG4gICAgICAgIC5jYXRjaChlID0+IHtcbiAgICAgICAgaWYgKGUuY29kZSA9PT0gJ0VSUl9SRVFVSVJFX0VTTScpIHtcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1uZXctZnVuY1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBGdW5jdGlvbihgcmV0dXJuIGltcG9ydCgke0pTT04uc3RyaW5naWZ5KHBhdGgpfSlgKSgpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IGU7XG4gICAgfSlcbiAgICAgICAgLmNhdGNoKGUgPT4ge1xuICAgICAgICBpZiAocGF0aE1vZHVsZS5pc0Fic29sdXRlKHBhdGgpICYmICFwYXRoLmVuZHNXaXRoKCcuanMnKSAmJiAhcGF0aC5lbmRzV2l0aCgnLnRzJykpIHtcbiAgICAgICAgICAgIHJldHVybiBkZWZhdWx0SW1wb3J0Rm4oYCR7cGF0aH0udHNgKTtcbiAgICAgICAgfVxuICAgICAgICB0aHJvdyBlO1xuICAgIH0pO1xuICAgIGlmIChtb2R1bGUuZGVmYXVsdCAhPSBudWxsKSB7XG4gICAgICAgIG1vZHVsZSA9IG1vZHVsZS5kZWZhdWx0O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcgJiYgbW9kdWxlICE9IG51bGwpIHtcbiAgICAgICAgY29uc3QgcHJvdG90eXBlT2ZPYmplY3QgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2YobW9kdWxlKTtcbiAgICAgICAgaWYgKHByb3RvdHlwZU9mT2JqZWN0ID09IG51bGwgfHwgcHJvdG90eXBlT2ZPYmplY3QgPT09IE9iamVjdC5wcm90b3R5cGUpIHtcbiAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRWYWwgPSB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIG1vZHVsZSkge1xuICAgICAgICAgICAgICAgIG5vcm1hbGl6ZWRWYWxba2V5XSA9IG1vZHVsZVtrZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZWRWYWw7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1vZHVsZTtcbn1cbmV4cG9ydCB7IGRlZmF1bHRJbXBvcnRGbiB9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/defaultImportFn.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/load-from-module-export-expression.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/load-from-module-export-expression.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadFromModuleExportExpression: () => (/* binding */ loadFromModuleExportExpression)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n/* harmony import */ var _defaultImportFn_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultImportFn.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/defaultImportFn.js\");\n/* eslint-disable @typescript-eslint/return-await */\n\n\nasync function loadFromModuleExportExpression(expression, options) {\n    if (typeof expression !== 'string') {\n        return Promise.resolve(expression);\n    }\n    const { defaultExportName, cwd, importFn = _defaultImportFn_js__WEBPACK_IMPORTED_MODULE_0__.defaultImportFn } = options || {};\n    const [modulePath, exportName = defaultExportName] = expression.split('#');\n    const mod = await tryImport(modulePath, cwd, importFn);\n    return mod[exportName] || (mod.default && mod.default[exportName]) || mod.default || mod;\n}\nasync function tryImport(modulePath, cwd, importFn) {\n    try {\n        return await importFn(modulePath);\n    }\n    catch {\n        if (!_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.isAbsolute(modulePath)) {\n            const absoluteModulePath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.isAbsolute(modulePath)\n                ? modulePath\n                : _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.join(cwd, modulePath);\n            return importFn(absoluteModulePath);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vbG9hZC1mcm9tLW1vZHVsZS1leHBvcnQtZXhwcmVzc2lvbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNtRDtBQUNJO0FBQ2hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQ0FBbUMsZ0VBQWUsR0FBRztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1FQUFlO0FBQzVCLHVDQUF1QyxtRUFBZTtBQUN0RDtBQUNBLGtCQUFrQiw2REFBUztBQUMzQjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vbG9hZC1mcm9tLW1vZHVsZS1leHBvcnQtZXhwcmVzc2lvbi5qcz81MWJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9yZXR1cm4tYXdhaXQgKi9cbmltcG9ydCB7IHBhdGggfSBmcm9tICdAZ3JhcGhxbC1tZXNoL2Nyb3NzLWhlbHBlcnMnO1xuaW1wb3J0IHsgZGVmYXVsdEltcG9ydEZuIH0gZnJvbSAnLi9kZWZhdWx0SW1wb3J0Rm4uanMnO1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGxvYWRGcm9tTW9kdWxlRXhwb3J0RXhwcmVzc2lvbihleHByZXNzaW9uLCBvcHRpb25zKSB7XG4gICAgaWYgKHR5cGVvZiBleHByZXNzaW9uICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKGV4cHJlc3Npb24pO1xuICAgIH1cbiAgICBjb25zdCB7IGRlZmF1bHRFeHBvcnROYW1lLCBjd2QsIGltcG9ydEZuID0gZGVmYXVsdEltcG9ydEZuIH0gPSBvcHRpb25zIHx8IHt9O1xuICAgIGNvbnN0IFttb2R1bGVQYXRoLCBleHBvcnROYW1lID0gZGVmYXVsdEV4cG9ydE5hbWVdID0gZXhwcmVzc2lvbi5zcGxpdCgnIycpO1xuICAgIGNvbnN0IG1vZCA9IGF3YWl0IHRyeUltcG9ydChtb2R1bGVQYXRoLCBjd2QsIGltcG9ydEZuKTtcbiAgICByZXR1cm4gbW9kW2V4cG9ydE5hbWVdIHx8IChtb2QuZGVmYXVsdCAmJiBtb2QuZGVmYXVsdFtleHBvcnROYW1lXSkgfHwgbW9kLmRlZmF1bHQgfHwgbW9kO1xufVxuYXN5bmMgZnVuY3Rpb24gdHJ5SW1wb3J0KG1vZHVsZVBhdGgsIGN3ZCwgaW1wb3J0Rm4pIHtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gYXdhaXQgaW1wb3J0Rm4obW9kdWxlUGF0aCk7XG4gICAgfVxuICAgIGNhdGNoIHtcbiAgICAgICAgaWYgKCFwYXRoLmlzQWJzb2x1dGUobW9kdWxlUGF0aCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGFic29sdXRlTW9kdWxlUGF0aCA9IHBhdGguaXNBYnNvbHV0ZShtb2R1bGVQYXRoKVxuICAgICAgICAgICAgICAgID8gbW9kdWxlUGF0aFxuICAgICAgICAgICAgICAgIDogcGF0aC5qb2luKGN3ZCwgbW9kdWxlUGF0aCk7XG4gICAgICAgICAgICByZXR1cm4gaW1wb3J0Rm4oYWJzb2x1dGVNb2R1bGVQYXRoKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/load-from-module-export-expression.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/read-file-or-url.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/read-file-or-url.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isUrl: () => (/* binding */ isUrl),\n/* harmony export */   loadYaml: () => (/* binding */ loadYaml),\n/* harmony export */   readFile: () => (/* binding */ readFile),\n/* harmony export */   readFileOrUrl: () => (/* binding */ readFileOrUrl),\n/* harmony export */   readUrl: () => (/* binding */ readUrl)\n/* harmony export */ });\n/* harmony import */ var js_yaml__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-yaml */ \"(ssr)/../node_modules/js-yaml/dist/js-yaml.mjs\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"fs\");\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _load_from_module_export_expression_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./load-from-module-export-expression.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/load-from-module-export-expression.js\");\n\n\n\n\nfunction isUrl(str) {\n    return /^https?:\\/\\//.test(str);\n}\nasync function readFileOrUrl(filePathOrUrl, config) {\n    if (isUrl(filePathOrUrl)) {\n        config.logger.debug(`Fetching ${filePathOrUrl} via HTTP`);\n        return readUrl(filePathOrUrl, config);\n    }\n    else if (filePathOrUrl.startsWith('{') || filePathOrUrl.startsWith('[')) {\n        return JSON.parse(filePathOrUrl);\n    }\n    else {\n        config.logger.debug(`Reading ${filePathOrUrl} from the file system`);\n        return readFile(filePathOrUrl, config);\n    }\n}\nfunction getSchema(filepath, logger) {\n    return js_yaml__WEBPACK_IMPORTED_MODULE_0__.DEFAULT_SCHEMA.extend([\n        new js_yaml__WEBPACK_IMPORTED_MODULE_0__.Type('!include', {\n            kind: 'scalar',\n            resolve(path) {\n                return typeof path === 'string';\n            },\n            construct(path) {\n                const newCwd = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.dirname(filepath);\n                const absoluteFilePath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.isAbsolute(path)\n                    ? path\n                    : _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.resolve(newCwd, path);\n                const content = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.readFileSync(absoluteFilePath, 'utf8');\n                return loadYaml(absoluteFilePath, content, logger);\n            },\n        }),\n        new js_yaml__WEBPACK_IMPORTED_MODULE_0__.Type('!includes', {\n            kind: 'scalar',\n            resolve(path) {\n                return typeof path === 'string';\n            },\n            construct(path) {\n                const newCwd = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.dirname(filepath);\n                const absoluteDirPath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.isAbsolute(path)\n                    ? path\n                    : _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.resolve(newCwd, path);\n                const files = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.readdirSync(absoluteDirPath);\n                return files.map(filePath => {\n                    const absoluteFilePath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.resolve(absoluteDirPath, filePath);\n                    const fileContent = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.readFileSync(absoluteFilePath, 'utf8');\n                    return loadYaml(absoluteFilePath, fileContent, logger);\n                });\n            },\n        }),\n    ]);\n}\nfunction loadYaml(filepath, content, logger) {\n    return (0,js_yaml__WEBPACK_IMPORTED_MODULE_0__.load)(content, {\n        filename: filepath,\n        schema: getSchema(filepath, logger),\n        onWarning(warning) {\n            logger.warn(`${filepath}: ${warning.message}\\n${warning.stack}`);\n        },\n    });\n}\nasync function readFile(fileExpression, { allowUnknownExtensions, cwd, fallbackFormat, importFn, logger }) {\n    const [filePath] = fileExpression.split('#');\n    if (/js$/.test(filePath) || /ts$/.test(filePath)) {\n        return (0,_load_from_module_export_expression_js__WEBPACK_IMPORTED_MODULE_3__.loadFromModuleExportExpression)(fileExpression, {\n            cwd,\n            importFn,\n            defaultExportName: 'default',\n        });\n    }\n    const actualPath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.isAbsolute(filePath) ? filePath : _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.join(cwd, filePath);\n    const rawResult = await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.promises.readFile(actualPath, 'utf-8');\n    if (/json$/.test(actualPath)) {\n        return JSON.parse(rawResult);\n    }\n    if (/yaml$/.test(actualPath) || /yml$/.test(actualPath)) {\n        return loadYaml(actualPath, rawResult, logger);\n    }\n    else if (fallbackFormat) {\n        switch (fallbackFormat) {\n            case 'json':\n                return JSON.parse(rawResult);\n            case 'yaml':\n                return loadYaml(actualPath, rawResult, logger);\n            case 'ts':\n            case 'js':\n                return importFn(actualPath);\n        }\n    }\n    else if (!allowUnknownExtensions) {\n        throw new Error(`Failed to parse JSON/YAML. Ensure file '${filePath}' has ` +\n            `the correct extension (i.e. '.json', '.yaml', or '.yml).`);\n    }\n    return rawResult;\n}\nasync function readUrl(path, config) {\n    const { allowUnknownExtensions, fallbackFormat } = config || {};\n    config.headers ||= {};\n    config.fetch ||= _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_4__.fetch;\n    const response = await config.fetch(path, config);\n    const contentType = response.headers?.get('content-type') || '';\n    const responseText = await response.text();\n    config?.logger?.debug(`${path} returned `, responseText);\n    if (/json$/.test(path) ||\n        contentType.startsWith('application/json') ||\n        fallbackFormat === 'json') {\n        return JSON.parse(responseText);\n    }\n    else if (/yaml$/.test(path) ||\n        /yml$/.test(path) ||\n        contentType.includes('yaml') ||\n        contentType.includes('yml') ||\n        fallbackFormat === 'yaml') {\n        return loadYaml(path, responseText, config?.logger);\n    }\n    else if (!allowUnknownExtensions) {\n        throw new Error(`Failed to parse JSON/YAML. Ensure URL '${path}' has ` +\n            `the correct extension (i.e. '.json', '.yaml', or '.yml) or mime type in the response headers.`);\n    }\n    return responseText;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-mesh/utils/esm/read-file-or-url.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-graphql-ws/esm/index.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-graphql-ws/esm/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildGraphQLWSExecutor: () => (/* binding */ buildGraphQLWSExecutor)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql_ws__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql-ws */ \"(ssr)/../node_modules/graphql-ws/lib/client.mjs\");\n/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-ws */ \"(ssr)/../node_modules/isomorphic-ws/node.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n\n\n\n\nconst defaultPrintFn = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(graphql__WEBPACK_IMPORTED_MODULE_2__.print);\nfunction isClient(client) {\n    return 'subscribe' in client;\n}\nfunction buildGraphQLWSExecutor(clientOptionsOrClient) {\n    let graphqlWSClient;\n    let executorConnectionParams = {};\n    let printFn = defaultPrintFn;\n    if (isClient(clientOptionsOrClient)) {\n        graphqlWSClient = clientOptionsOrClient;\n    }\n    else {\n        if (clientOptionsOrClient.print) {\n            printFn = clientOptionsOrClient.print;\n        }\n        graphqlWSClient = (0,graphql_ws__WEBPACK_IMPORTED_MODULE_3__.createClient)({\n            ...clientOptionsOrClient,\n            webSocketImpl: isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__,\n            lazy: true,\n            connectionParams: () => {\n                const optionsConnectionParams = (typeof clientOptionsOrClient.connectionParams === 'function'\n                    ? clientOptionsOrClient.connectionParams()\n                    : clientOptionsOrClient.connectionParams) || {};\n                return Object.assign(optionsConnectionParams, executorConnectionParams);\n            },\n        });\n        if (clientOptionsOrClient.onClient) {\n            clientOptionsOrClient.onClient(graphqlWSClient);\n        }\n    }\n    const executor = function GraphQLWSExecutor(executionRequest) {\n        const { document, variables, operationName, extensions, operationType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.getOperationASTFromRequest)(executionRequest).operation, } = executionRequest;\n        // additional connection params can be supplied through the \"connectionParams\" field in extensions.\n        // TODO: connection params only from the FIRST operation in lazy mode will be used (detect connectionParams changes and reconnect, too implicit?)\n        if (extensions?.['connectionParams'] && typeof extensions?.['connectionParams'] === 'object') {\n            executorConnectionParams = Object.assign(executorConnectionParams, extensions['connectionParams']);\n        }\n        const query = printFn(document);\n        const iterableIterator = graphqlWSClient.iterate({\n            query,\n            variables,\n            operationName,\n            extensions,\n        });\n        if (operationType === 'subscription') {\n            return iterableIterator;\n        }\n        return iterableIterator.next().then(({ value }) => value);\n    };\n    const disposableExecutor = executor;\n    disposableExecutor[Symbol.asyncDispose] = function disposeWS() {\n        return graphqlWSClient.dispose();\n    };\n    return disposableExecutor;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItZ3JhcGhxbC13cy9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdDO0FBQ1U7QUFDSjtBQUN1QztBQUM3RSx1QkFBdUIsOERBQVEsQ0FBQywwQ0FBSztBQUNyQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHdEQUFZO0FBQ3RDO0FBQ0EsMkJBQTJCLDBDQUFTO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnRUFBZ0UsZ0ZBQTBCLGdDQUFnQztBQUMxSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxPQUFPO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1ncmFwaHFsLXdzL2VzbS9pbmRleC5qcz8yMzMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByaW50IH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdncmFwaHFsLXdzJztcbmltcG9ydCBXZWJTb2NrZXQgZnJvbSAnaXNvbW9ycGhpYy13cyc7XG5pbXBvcnQgeyBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdCwgbWVtb2l6ZTEsIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuY29uc3QgZGVmYXVsdFByaW50Rm4gPSBtZW1vaXplMShwcmludCk7XG5mdW5jdGlvbiBpc0NsaWVudChjbGllbnQpIHtcbiAgICByZXR1cm4gJ3N1YnNjcmliZScgaW4gY2xpZW50O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkR3JhcGhRTFdTRXhlY3V0b3IoY2xpZW50T3B0aW9uc09yQ2xpZW50KSB7XG4gICAgbGV0IGdyYXBocWxXU0NsaWVudDtcbiAgICBsZXQgZXhlY3V0b3JDb25uZWN0aW9uUGFyYW1zID0ge307XG4gICAgbGV0IHByaW50Rm4gPSBkZWZhdWx0UHJpbnRGbjtcbiAgICBpZiAoaXNDbGllbnQoY2xpZW50T3B0aW9uc09yQ2xpZW50KSkge1xuICAgICAgICBncmFwaHFsV1NDbGllbnQgPSBjbGllbnRPcHRpb25zT3JDbGllbnQ7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoY2xpZW50T3B0aW9uc09yQ2xpZW50LnByaW50KSB7XG4gICAgICAgICAgICBwcmludEZuID0gY2xpZW50T3B0aW9uc09yQ2xpZW50LnByaW50O1xuICAgICAgICB9XG4gICAgICAgIGdyYXBocWxXU0NsaWVudCA9IGNyZWF0ZUNsaWVudCh7XG4gICAgICAgICAgICAuLi5jbGllbnRPcHRpb25zT3JDbGllbnQsXG4gICAgICAgICAgICB3ZWJTb2NrZXRJbXBsOiBXZWJTb2NrZXQsXG4gICAgICAgICAgICBsYXp5OiB0cnVlLFxuICAgICAgICAgICAgY29ubmVjdGlvblBhcmFtczogKCkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9wdGlvbnNDb25uZWN0aW9uUGFyYW1zID0gKHR5cGVvZiBjbGllbnRPcHRpb25zT3JDbGllbnQuY29ubmVjdGlvblBhcmFtcyA9PT0gJ2Z1bmN0aW9uJ1xuICAgICAgICAgICAgICAgICAgICA/IGNsaWVudE9wdGlvbnNPckNsaWVudC5jb25uZWN0aW9uUGFyYW1zKClcbiAgICAgICAgICAgICAgICAgICAgOiBjbGllbnRPcHRpb25zT3JDbGllbnQuY29ubmVjdGlvblBhcmFtcykgfHwge307XG4gICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24ob3B0aW9uc0Nvbm5lY3Rpb25QYXJhbXMsIGV4ZWN1dG9yQ29ubmVjdGlvblBhcmFtcyk7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGNsaWVudE9wdGlvbnNPckNsaWVudC5vbkNsaWVudCkge1xuICAgICAgICAgICAgY2xpZW50T3B0aW9uc09yQ2xpZW50Lm9uQ2xpZW50KGdyYXBocWxXU0NsaWVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgZXhlY3V0b3IgPSBmdW5jdGlvbiBHcmFwaFFMV1NFeGVjdXRvcihleGVjdXRpb25SZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IHsgZG9jdW1lbnQsIHZhcmlhYmxlcywgb3BlcmF0aW9uTmFtZSwgZXh0ZW5zaW9ucywgb3BlcmF0aW9uVHlwZSA9IGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0KGV4ZWN1dGlvblJlcXVlc3QpLm9wZXJhdGlvbiwgfSA9IGV4ZWN1dGlvblJlcXVlc3Q7XG4gICAgICAgIC8vIGFkZGl0aW9uYWwgY29ubmVjdGlvbiBwYXJhbXMgY2FuIGJlIHN1cHBsaWVkIHRocm91Z2ggdGhlIFwiY29ubmVjdGlvblBhcmFtc1wiIGZpZWxkIGluIGV4dGVuc2lvbnMuXG4gICAgICAgIC8vIFRPRE86IGNvbm5lY3Rpb24gcGFyYW1zIG9ubHkgZnJvbSB0aGUgRklSU1Qgb3BlcmF0aW9uIGluIGxhenkgbW9kZSB3aWxsIGJlIHVzZWQgKGRldGVjdCBjb25uZWN0aW9uUGFyYW1zIGNoYW5nZXMgYW5kIHJlY29ubmVjdCwgdG9vIGltcGxpY2l0PylcbiAgICAgICAgaWYgKGV4dGVuc2lvbnM/LlsnY29ubmVjdGlvblBhcmFtcyddICYmIHR5cGVvZiBleHRlbnNpb25zPy5bJ2Nvbm5lY3Rpb25QYXJhbXMnXSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGV4ZWN1dG9yQ29ubmVjdGlvblBhcmFtcyA9IE9iamVjdC5hc3NpZ24oZXhlY3V0b3JDb25uZWN0aW9uUGFyYW1zLCBleHRlbnNpb25zWydjb25uZWN0aW9uUGFyYW1zJ10pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gcHJpbnRGbihkb2N1bWVudCk7XG4gICAgICAgIGNvbnN0IGl0ZXJhYmxlSXRlcmF0b3IgPSBncmFwaHFsV1NDbGllbnQuaXRlcmF0ZSh7XG4gICAgICAgICAgICBxdWVyeSxcbiAgICAgICAgICAgIHZhcmlhYmxlcyxcbiAgICAgICAgICAgIG9wZXJhdGlvbk5hbWUsXG4gICAgICAgICAgICBleHRlbnNpb25zLFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKG9wZXJhdGlvblR5cGUgPT09ICdzdWJzY3JpcHRpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlcmFibGVJdGVyYXRvcjtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXRlcmFibGVJdGVyYXRvci5uZXh0KCkudGhlbigoeyB2YWx1ZSB9KSA9PiB2YWx1ZSk7XG4gICAgfTtcbiAgICBjb25zdCBkaXNwb3NhYmxlRXhlY3V0b3IgPSBleGVjdXRvcjtcbiAgICBkaXNwb3NhYmxlRXhlY3V0b3JbU3ltYm9sLmFzeW5jRGlzcG9zZV0gPSBmdW5jdGlvbiBkaXNwb3NlV1MoKSB7XG4gICAgICAgIHJldHVybiBncmFwaHFsV1NDbGllbnQuZGlzcG9zZSgpO1xuICAgIH07XG4gICAgcmV0dXJuIGRpc3Bvc2FibGVFeGVjdXRvcjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-graphql-ws/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-legacy-ws/esm/index.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-legacy-ws/esm/index.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LEGACY_WS: () => (/* binding */ LEGACY_WS),\n/* harmony export */   buildWSLegacyExecutor: () => (/* binding */ buildWSLegacyExecutor)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-ws */ \"(ssr)/../node_modules/isomorphic-ws/node.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js\");\n\n\n\nvar LEGACY_WS;\n(function (LEGACY_WS) {\n    LEGACY_WS[\"CONNECTION_INIT\"] = \"connection_init\";\n    LEGACY_WS[\"CONNECTION_ACK\"] = \"connection_ack\";\n    LEGACY_WS[\"CONNECTION_ERROR\"] = \"connection_error\";\n    LEGACY_WS[\"CONNECTION_KEEP_ALIVE\"] = \"ka\";\n    LEGACY_WS[\"START\"] = \"start\";\n    LEGACY_WS[\"STOP\"] = \"stop\";\n    LEGACY_WS[\"CONNECTION_TERMINATE\"] = \"connection_terminate\";\n    LEGACY_WS[\"DATA\"] = \"data\";\n    LEGACY_WS[\"ERROR\"] = \"error\";\n    LEGACY_WS[\"COMPLETE\"] = \"complete\";\n})(LEGACY_WS || (LEGACY_WS = {}));\nfunction buildWSLegacyExecutor(subscriptionsEndpoint, WebSocketImpl, options) {\n    let executorConnectionParams = {};\n    let websocket = null;\n    const ensureWebsocket = (errorHandler = err => console.error(err)) => {\n        if (websocket == null || websocket.readyState !== isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__.OPEN) {\n            websocket = new WebSocketImpl(subscriptionsEndpoint, 'graphql-ws', {\n                followRedirects: true,\n                headers: options?.headers,\n                rejectUnauthorized: false,\n                skipUTF8Validation: true,\n            });\n            websocket.onopen = () => {\n                let payload = {};\n                switch (typeof options?.connectionParams) {\n                    case 'function':\n                        payload = options?.connectionParams();\n                        break;\n                    case 'object':\n                        payload = options?.connectionParams;\n                        break;\n                }\n                payload = Object.assign(payload, executorConnectionParams);\n                websocket.send(JSON.stringify({\n                    type: LEGACY_WS.CONNECTION_INIT,\n                    payload,\n                }), (error) => {\n                    if (error) {\n                        errorHandler(error);\n                    }\n                });\n            };\n            websocket.onerror = event => {\n                errorHandler(event.error);\n            };\n            websocket.onclose = () => {\n                websocket = null;\n            };\n        }\n    };\n    const cleanupWebsocket = () => {\n        if (websocket != null) {\n            websocket.send(JSON.stringify({\n                type: LEGACY_WS.CONNECTION_TERMINATE,\n            }));\n            websocket.terminate();\n            websocket = null;\n        }\n    };\n    const executor = function legacyExecutor(request) {\n        // additional connection params can be supplied through the \"connectionParams\" field in extensions.\n        // TODO: connection params only from the FIRST operation in lazy mode will be used (detect connectionParams changes and reconnect, too implicit?)\n        if (request.extensions?.['connectionParams'] &&\n            typeof request.extensions?.['connectionParams'] === 'object') {\n            executorConnectionParams = Object.assign(executorConnectionParams, request.extensions['connectionParams']);\n        }\n        const id = Date.now().toString();\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.observableToAsyncIterable)({\n            subscribe(observer) {\n                function errorHandler(err) {\n                    observer.error(err);\n                }\n                ensureWebsocket();\n                if (websocket == null) {\n                    throw new Error(`WebSocket connection is not found!`);\n                }\n                websocket.onmessage = event => {\n                    const data = JSON.parse(event.data.toString('utf-8'));\n                    switch (data.type) {\n                        case LEGACY_WS.CONNECTION_ACK: {\n                            if (websocket == null) {\n                                throw new Error(`WebSocket connection is not found!`);\n                            }\n                            websocket.send(JSON.stringify({\n                                type: LEGACY_WS.START,\n                                id,\n                                payload: {\n                                    query: (0,graphql__WEBPACK_IMPORTED_MODULE_2__.print)(request.document),\n                                    variables: request.variables,\n                                    operationName: request.operationName,\n                                },\n                            }), (error) => {\n                                if (error) {\n                                    errorHandler(error);\n                                }\n                            });\n                            break;\n                        }\n                        case LEGACY_WS.CONNECTION_ERROR: {\n                            observer.error(data.payload);\n                            break;\n                        }\n                        case LEGACY_WS.CONNECTION_KEEP_ALIVE: {\n                            break;\n                        }\n                        case LEGACY_WS.DATA: {\n                            observer.next(data.payload);\n                            break;\n                        }\n                        case LEGACY_WS.COMPLETE: {\n                            if (websocket != null) {\n                                websocket.send(JSON.stringify({\n                                    type: LEGACY_WS.CONNECTION_TERMINATE,\n                                }), (error) => {\n                                    if (error) {\n                                        errorHandler(error);\n                                    }\n                                });\n                            }\n                            observer.complete();\n                            cleanupWebsocket();\n                            break;\n                        }\n                    }\n                };\n                return {\n                    unsubscribe: () => {\n                        if (websocket?.readyState === isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__.OPEN) {\n                            websocket?.send(JSON.stringify({\n                                type: LEGACY_WS.STOP,\n                                id,\n                            }));\n                        }\n                        cleanupWebsocket();\n                    },\n                };\n            },\n        });\n    };\n    executor[Symbol.dispose] = cleanupWebsocket;\n    return executor;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-legacy-ws/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultAsyncFetch.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultAsyncFetch.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultAsyncFetch: () => (/* binding */ defaultAsyncFetch)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n\nconst defaultAsyncFetch = async (input, init) => {\n    return (0,_whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__.fetch)(input, init);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXJsLWxvYWRlci9lc20vZGVmYXVsdEFzeW5jRmV0Y2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkM7QUFDcEM7QUFDUCxXQUFXLHlEQUFLO0FBQ2hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91cmwtbG9hZGVyL2VzbS9kZWZhdWx0QXN5bmNGZXRjaC5qcz9kODZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZldGNoIH0gZnJvbSAnQHdoYXR3Zy1ub2RlL2ZldGNoJztcbmV4cG9ydCBjb25zdCBkZWZhdWx0QXN5bmNGZXRjaCA9IGFzeW5jIChpbnB1dCwgaW5pdCkgPT4ge1xuICAgIHJldHVybiBmZXRjaChpbnB1dCwgaW5pdCk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultAsyncFetch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultSyncFetch.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultSyncFetch.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultSyncFetch: () => (/* binding */ defaultSyncFetch)\n/* harmony export */ });\n/* harmony import */ var _ardatan_sync_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ardatan/sync-fetch */ \"(ssr)/../node_modules/@ardatan/sync-fetch/index.js\");\n\nconst defaultSyncFetch = (input, init) => {\n    if (typeof input === 'string') {\n        delete init?.signal;\n    }\n    else {\n        delete input.signal;\n    }\n    return _ardatan_sync_fetch__WEBPACK_IMPORTED_MODULE_0__(input, init);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXJsLWxvYWRlci9lc20vZGVmYXVsdFN5bmNGZXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvRDtBQUM3QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0RBQWlCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91cmwtbG9hZGVyL2VzbS9kZWZhdWx0U3luY0ZldGNoLmpzPzBkODAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHN5bmNGZXRjaEltcG9ydGVkIGZyb20gJ0BhcmRhdGFuL3N5bmMtZmV0Y2gnO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRTeW5jRmV0Y2ggPSAoaW5wdXQsIGluaXQpID0+IHtcbiAgICBpZiAodHlwZW9mIGlucHV0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBkZWxldGUgaW5pdD8uc2lnbmFsO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZGVsZXRlIGlucHV0LnNpZ25hbDtcbiAgICB9XG4gICAgcmV0dXJuIHN5bmNGZXRjaEltcG9ydGVkKGlucHV0LCBpbml0KTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultSyncFetch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/index.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubscriptionProtocol: () => (/* binding */ SubscriptionProtocol),\n/* harmony export */   UrlLoader: () => (/* binding */ UrlLoader)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! isomorphic-ws */ \"(ssr)/../node_modules/isomorphic-ws/node.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_executor_graphql_ws__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/executor-graphql-ws */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-graphql-ws/esm/index.js\");\n/* harmony import */ var _graphql_tools_executor_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/executor-http */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/index.js\");\n/* harmony import */ var _graphql_tools_executor_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/executor-http */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/isLiveQueryOperationDefinitionNode.js\");\n/* harmony import */ var _graphql_tools_executor_legacy_ws__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/executor-legacy-ws */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/executor-legacy-ws/esm/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/parse-graphql-sdl.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/introspect.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/wrapSchema.js\");\n/* harmony import */ var _defaultAsyncFetch_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./defaultAsyncFetch.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultAsyncFetch.js\");\n/* harmony import */ var _defaultSyncFetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./defaultSyncFetch.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/defaultSyncFetch.js\");\n\n\n\n\n\n\n\n\n\n\nconst asyncImport = (moduleName) => __webpack_require__(\"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm lazy recursive ^.*$\")(`${moduleName}`);\nconst syncImport = (moduleName) => require(`${moduleName}`);\nvar SubscriptionProtocol;\n(function (SubscriptionProtocol) {\n    SubscriptionProtocol[\"WS\"] = \"WS\";\n    /**\n     * Use legacy web socket protocol `graphql-ws` instead of the more current standard `graphql-transport-ws`\n     */\n    SubscriptionProtocol[\"LEGACY_WS\"] = \"LEGACY_WS\";\n    /**\n     * Use SSE for subscription instead of WebSocket\n     */\n    SubscriptionProtocol[\"SSE\"] = \"SSE\";\n    /**\n     * Use `graphql-sse` for subscriptions\n     */\n    SubscriptionProtocol[\"GRAPHQL_SSE\"] = \"GRAPHQL_SSE\";\n})(SubscriptionProtocol || (SubscriptionProtocol = {}));\nconst acceptableProtocols = ['http:', 'https:', 'ws:', 'wss:'];\nfunction isCompatibleUri(uri) {\n    try {\n        const url = new URL(uri);\n        return acceptableProtocols.includes(url.protocol);\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * This loader loads a schema from a URL. The loaded schema is a fully-executable,\n * remote schema since it's created using [@graphql-tools/wrap](/docs/remote-schemas).\n *\n * ```\n * const schema = await loadSchema('http://localhost:3000/graphql', {\n *   loaders: [\n *     new UrlLoader(),\n *   ]\n * });\n * ```\n */\nclass UrlLoader {\n    buildHTTPExecutor(initialEndpoint, fetchFn, options) {\n        const HTTP_URL = switchProtocols(initialEndpoint, {\n            wss: 'https',\n            ws: 'http',\n        });\n        return (0,_graphql_tools_executor_http__WEBPACK_IMPORTED_MODULE_2__.buildHTTPExecutor)({\n            endpoint: HTTP_URL,\n            fetch: fetchFn,\n            ...options,\n        });\n    }\n    buildWSExecutor(subscriptionsEndpoint, webSocketImpl, connectionParams) {\n        const WS_URL = switchProtocols(subscriptionsEndpoint, {\n            https: 'wss',\n            http: 'ws',\n        });\n        return (0,_graphql_tools_executor_graphql_ws__WEBPACK_IMPORTED_MODULE_3__.buildGraphQLWSExecutor)({\n            url: WS_URL,\n            webSocketImpl,\n            connectionParams,\n        });\n    }\n    buildWSLegacyExecutor(subscriptionsEndpoint, WebSocketImpl, options) {\n        const WS_URL = switchProtocols(subscriptionsEndpoint, {\n            https: 'wss',\n            http: 'ws',\n        });\n        return (0,_graphql_tools_executor_legacy_ws__WEBPACK_IMPORTED_MODULE_4__.buildWSLegacyExecutor)(WS_URL, WebSocketImpl, options);\n    }\n    getFetch(customFetch, importFn) {\n        if (customFetch) {\n            if (typeof customFetch === 'string') {\n                const [moduleName, fetchFnName] = customFetch.split('#');\n                return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => importFn(moduleName))\n                    .then(module => (fetchFnName ? module[fetchFnName] : module))\n                    .resolve();\n            }\n            else if (typeof customFetch === 'function') {\n                return customFetch;\n            }\n        }\n        if (importFn === asyncImport) {\n            return _defaultAsyncFetch_js__WEBPACK_IMPORTED_MODULE_5__.defaultAsyncFetch;\n        }\n        else {\n            return _defaultSyncFetch_js__WEBPACK_IMPORTED_MODULE_6__.defaultSyncFetch;\n        }\n    }\n    getDefaultMethodFromOptions(method, defaultMethod) {\n        if (method) {\n            defaultMethod = method;\n        }\n        return defaultMethod;\n    }\n    getWebSocketImpl(importFn, options) {\n        if (typeof options?.webSocketImpl === 'string') {\n            const [moduleName, webSocketImplName] = options.webSocketImpl.split('#');\n            return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => importFn(moduleName))\n                .then(importedModule => webSocketImplName ? importedModule[webSocketImplName] : importedModule)\n                .resolve();\n        }\n        else {\n            const websocketImpl = options?.webSocketImpl || isomorphic_ws__WEBPACK_IMPORTED_MODULE_0__;\n            return websocketImpl;\n        }\n    }\n    buildSubscriptionExecutor(subscriptionsEndpoint, fetch, importFn, options) {\n        if (options?.subscriptionsProtocol === SubscriptionProtocol.SSE) {\n            return this.buildHTTPExecutor(subscriptionsEndpoint, fetch, options);\n        }\n        else if (options?.subscriptionsProtocol === SubscriptionProtocol.GRAPHQL_SSE) {\n            if (!options?.subscriptionsEndpoint) {\n                // when no custom subscriptions endpoint is specified,\n                // graphql-sse is recommended to be used on `/graphql/stream`\n                subscriptionsEndpoint += '/stream';\n            }\n            return this.buildHTTPExecutor(subscriptionsEndpoint, fetch, options);\n        }\n        else {\n            const webSocketImpl$ = new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => this.getWebSocketImpl(importFn, options));\n            const executor$ = webSocketImpl$.then(webSocketImpl => {\n                if (options?.subscriptionsProtocol === SubscriptionProtocol.LEGACY_WS) {\n                    return this.buildWSLegacyExecutor(subscriptionsEndpoint, webSocketImpl, options);\n                }\n                else {\n                    return this.buildWSExecutor(subscriptionsEndpoint, webSocketImpl, options?.connectionParams);\n                }\n            });\n            return request => executor$.then(executor => executor(request)).resolve();\n        }\n    }\n    getExecutor(endpoint, importFn, options) {\n        const fetch$ = new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => this.getFetch(options?.customFetch, importFn));\n        const httpExecutor$ = fetch$.then(fetch => {\n            return this.buildHTTPExecutor(endpoint, fetch, options);\n        });\n        if (options?.subscriptionsEndpoint != null ||\n            options?.subscriptionsProtocol !== SubscriptionProtocol.SSE) {\n            const subscriptionExecutor$ = fetch$.then(fetch => {\n                const subscriptionsEndpoint = options?.subscriptionsEndpoint || endpoint;\n                return this.buildSubscriptionExecutor(subscriptionsEndpoint, fetch, importFn, options);\n            });\n            // eslint-disable-next-line no-inner-declarations\n            function getExecutorByRequest(request) {\n                request.operationType =\n                    request.operationType || (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.getOperationASTFromRequest)(request)?.operation;\n                if (request.operationType === 'subscription' &&\n                    (0,_graphql_tools_executor_http__WEBPACK_IMPORTED_MODULE_8__.isLiveQueryOperationDefinitionNode)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.getOperationASTFromRequest)(request))) {\n                    request.operationType = 'subscription';\n                }\n                if (request.operationType === 'subscription') {\n                    return subscriptionExecutor$;\n                }\n                else {\n                    return httpExecutor$;\n                }\n            }\n            return request => getExecutorByRequest(request)\n                .then(executor => executor(request))\n                .resolve();\n        }\n        else {\n            return request => httpExecutor$.then(executor => executor(request)).resolve();\n        }\n    }\n    getExecutorAsync(endpoint, options) {\n        return this.getExecutor(endpoint, asyncImport, options);\n    }\n    getExecutorSync(endpoint, options) {\n        return this.getExecutor(endpoint, syncImport, options);\n    }\n    handleSDL(pointer, fetch, options) {\n        const defaultMethod = this.getDefaultMethodFromOptions(options?.method, 'GET');\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => fetch(pointer, {\n            method: defaultMethod,\n            headers: typeof options?.headers === 'function' ? options.headers() : options?.headers,\n        }))\n            .then(response => response.text())\n            .then(schemaString => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.parseGraphQLSDL)(pointer, schemaString, options))\n            .resolve();\n    }\n    async load(pointer, options) {\n        if (!isCompatibleUri(pointer)) {\n            return [];\n        }\n        let source = {\n            location: pointer,\n        };\n        let executor;\n        if (options?.handleAsSDL || pointer.endsWith('.graphql') || pointer.endsWith('.graphqls')) {\n            const fetch = await this.getFetch(options?.customFetch, asyncImport);\n            source = await this.handleSDL(pointer, fetch, options);\n            if (!source.schema && !source.document && !source.rawSDL) {\n                throw new Error(`Invalid SDL response`);\n            }\n            source.schema =\n                source.schema ||\n                    (source.document\n                        ? (0,graphql__WEBPACK_IMPORTED_MODULE_10__.buildASTSchema)(source.document, options)\n                        : source.rawSDL\n                            ? (0,graphql__WEBPACK_IMPORTED_MODULE_10__.buildSchema)(source.rawSDL, options)\n                            : undefined);\n        }\n        else {\n            executor = this.getExecutorAsync(pointer, options);\n            source.schema = await (0,_graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_11__.schemaFromExecutor)(executor, {}, options);\n        }\n        if (!source.schema) {\n            throw new Error(`Invalid introspected schema`);\n        }\n        if (options?.endpoint) {\n            executor = this.getExecutorAsync(options.endpoint, options);\n        }\n        if (executor) {\n            source.schema = (0,_graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_12__.wrapSchema)({\n                schema: source.schema,\n                executor,\n                batch: options?.batch,\n            });\n        }\n        return [source];\n    }\n    loadSync(pointer, options) {\n        if (!isCompatibleUri(pointer)) {\n            return [];\n        }\n        let source = {\n            location: pointer,\n        };\n        let executor;\n        if (options?.handleAsSDL || pointer.endsWith('.graphql') || pointer.endsWith('.graphqls')) {\n            const fetch = this.getFetch(options?.customFetch, syncImport);\n            source = this.handleSDL(pointer, fetch, options);\n            if (!source.schema && !source.document && !source.rawSDL) {\n                throw new Error(`Invalid SDL response`);\n            }\n            source.schema =\n                source.schema ||\n                    (source.document\n                        ? (0,graphql__WEBPACK_IMPORTED_MODULE_10__.buildASTSchema)(source.document, options)\n                        : source.rawSDL\n                            ? (0,graphql__WEBPACK_IMPORTED_MODULE_10__.buildSchema)(source.rawSDL, options)\n                            : undefined);\n        }\n        else {\n            executor = this.getExecutorSync(pointer, options);\n            source.schema = (0,_graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_11__.schemaFromExecutor)(executor, {}, options);\n        }\n        if (!source.schema) {\n            throw new Error(`Invalid introspected schema`);\n        }\n        if (options?.endpoint) {\n            executor = this.getExecutorSync(options.endpoint, options);\n        }\n        if (executor) {\n            source.schema = (0,_graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_12__.wrapSchema)({\n                schema: source.schema,\n                executor,\n            });\n        }\n        return [source];\n    }\n}\nfunction switchProtocols(pointer, protocolMap) {\n    return Object.entries(protocolMap).reduce((prev, [source, target]) => prev.replace(`${source}://`, `${target}://`).replace(`${source}:\\\\`, `${target}:\\\\`), pointer);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/url-loader/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromType.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromType.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromType: () => (/* binding */ astFromType)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n\nfunction astFromType(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21UeXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDa0I7QUFDbkQ7QUFDUCxRQUFRLHNEQUFhO0FBQ3JCO0FBQ0EsK0JBQStCLHlDQUFJO0FBQ25DLGlEQUFpRCxzREFBTyxPQUFPO0FBQy9EO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtREFBVTtBQUN2QjtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUNBQUk7QUFDbEI7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21UeXBlLmpzPzVlZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdCB9IGZyb20gJ2Nyb3NzLWluc3BlY3QnO1xuaW1wb3J0IHsgaXNMaXN0VHlwZSwgaXNOb25OdWxsVHlwZSwgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGFzdEZyb21UeXBlKHR5cGUpIHtcbiAgICBpZiAoaXNOb25OdWxsVHlwZSh0eXBlKSkge1xuICAgICAgICBjb25zdCBpbm5lclR5cGUgPSBhc3RGcm9tVHlwZSh0eXBlLm9mVHlwZSk7XG4gICAgICAgIGlmIChpbm5lclR5cGUua2luZCA9PT0gS2luZC5OT05fTlVMTF9UWVBFKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHlwZSBub2RlICR7aW5zcGVjdCh0eXBlKX0uIElubmVyIHR5cGUgb2Ygbm9uLW51bGwgdHlwZSBjYW5ub3QgYmUgYSBub24tbnVsbCB0eXBlLmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLk5PTl9OVUxMX1RZUEUsXG4gICAgICAgICAgICB0eXBlOiBpbm5lclR5cGUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzTGlzdFR5cGUodHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuTElTVF9UWVBFLFxuICAgICAgICAgICAgdHlwZTogYXN0RnJvbVR5cGUodHlwZS5vZlR5cGUpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBraW5kOiBLaW5kLk5BTUVEX1RZUEUsXG4gICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRSxcbiAgICAgICAgICAgIHZhbHVlOiB0eXBlLm5hbWUsXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValue.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValue.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValue: () => (/* binding */ astFromValue)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const astValue = astFromValue(value, type.ofType);\n        if (astValue?.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL) {\n            return null;\n        }\n        return astValue;\n    }\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        const itemType = type.ofType;\n        if ((0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isIterableObject)(value)) {\n            const valuesNodes = [];\n            for (const item of value) {\n                const itemNode = astFromValue(item, itemType);\n                if (itemNode != null) {\n                    valuesNodes.push(itemNode);\n                }\n            }\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST, values: valuesNodes };\n        }\n        return astFromValue(value, itemType);\n    }\n    // Populate the fields of the input object by creating ASTs from each value\n    // in the JavaScript object according to the fields in the input type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n        if (!(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isObjectLike)(value)) {\n            return null;\n        }\n        const fieldNodes = [];\n        for (const field of Object.values(type.getFields())) {\n            const fieldValue = astFromValue(value[field.name], field.type);\n            if (fieldValue) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME, value: field.name },\n                    value: fieldValue,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT, fields: fieldNodes };\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n        // Since value is an internally represented value, it must be serialized\n        // to an externally represented value before converting into an AST.\n        const serialized = type.serialize(value);\n        if (serialized == null) {\n            return null;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM, value: serialized };\n        }\n        // ID types can use Int literals.\n        if (type.name === 'ID' &&\n            typeof serialized === 'string' &&\n            integerStringRegExp.test(serialized)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INT, value: serialized };\n        }\n        return (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__.astFromValueUntyped)(serialized);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n    console.assert(false, 'Unexpected input type: ' + (0,cross_inspect__WEBPACK_IMPORTED_MODULE_4__.inspect)(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21WYWx1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBd0M7QUFDOEQ7QUFDdkM7QUFDRDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsUUFBUSxzREFBYTtBQUNyQjtBQUNBLCtCQUErQix5Q0FBSTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsbURBQVU7QUFDbEI7QUFDQSxZQUFZLDZEQUFnQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUFNLHlDQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDBEQUFpQjtBQUN6QixhQUFhLHlEQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlDQUFJO0FBQzlCLDRCQUE0QixNQUFNLHlDQUFJLDBCQUEwQjtBQUNoRTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQSxRQUFRLG1EQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbURBQVU7QUFDdEIscUJBQXFCLE1BQU0seUNBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUFNLHlDQUFJO0FBQy9CO0FBQ0EsZUFBZSw0RUFBbUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELHNEQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVZhbHVlLmpzP2U1M2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdCB9IGZyb20gJ2Nyb3NzLWluc3BlY3QnO1xuaW1wb3J0IHsgaXNFbnVtVHlwZSwgaXNJbnB1dE9iamVjdFR5cGUsIGlzTGVhZlR5cGUsIGlzTGlzdFR5cGUsIGlzTm9uTnVsbFR5cGUsIEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBhc3RGcm9tVmFsdWVVbnR5cGVkIH0gZnJvbSAnLi9hc3RGcm9tVmFsdWVVbnR5cGVkLmpzJztcbmltcG9ydCB7IGlzSXRlcmFibGVPYmplY3QsIGlzT2JqZWN0TGlrZSB9IGZyb20gJy4vanN1dGlscy5qcyc7XG4vKipcbiAqIFByb2R1Y2VzIGEgR3JhcGhRTCBWYWx1ZSBBU1QgZ2l2ZW4gYSBKYXZhU2NyaXB0IG9iamVjdC5cbiAqIEZ1bmN0aW9uIHdpbGwgbWF0Y2ggSmF2YVNjcmlwdC9KU09OIHZhbHVlcyB0byBHcmFwaFFMIEFTVCBzY2hlbWEgZm9ybWF0XG4gKiBieSB1c2luZyBzdWdnZXN0ZWQgR3JhcGhRTElucHV0VHlwZS4gRm9yIGV4YW1wbGU6XG4gKlxuICogICAgIGFzdEZyb21WYWx1ZShcInZhbHVlXCIsIEdyYXBoUUxTdHJpbmcpXG4gKlxuICogQSBHcmFwaFFMIHR5cGUgbXVzdCBiZSBwcm92aWRlZCwgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIGludGVycHJldCBkaWZmZXJlbnRcbiAqIEphdmFTY3JpcHQgdmFsdWVzLlxuICpcbiAqIHwgSlNPTiBWYWx1ZSAgICB8IEdyYXBoUUwgVmFsdWUgICAgICAgIHxcbiAqIHwgLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgT2JqZWN0ICAgICAgICB8IElucHV0IE9iamVjdCAgICAgICAgIHxcbiAqIHwgQXJyYXkgICAgICAgICB8IExpc3QgICAgICAgICAgICAgICAgIHxcbiAqIHwgQm9vbGVhbiAgICAgICB8IEJvb2xlYW4gICAgICAgICAgICAgIHxcbiAqIHwgU3RyaW5nICAgICAgICB8IFN0cmluZyAvIEVudW0gVmFsdWUgIHxcbiAqIHwgTnVtYmVyICAgICAgICB8IEludCAvIEZsb2F0ICAgICAgICAgIHxcbiAqIHwgQmlnSW50ICAgICAgICB8IEludCAgICAgICAgICAgICAgICAgIHxcbiAqIHwgVW5rbm93biAgICAgICB8IEVudW0gVmFsdWUgICAgICAgICAgIHxcbiAqIHwgbnVsbCAgICAgICAgICB8IE51bGxWYWx1ZSAgICAgICAgICAgIHxcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3RGcm9tVmFsdWUodmFsdWUsIHR5cGUpIHtcbiAgICBpZiAoaXNOb25OdWxsVHlwZSh0eXBlKSkge1xuICAgICAgICBjb25zdCBhc3RWYWx1ZSA9IGFzdEZyb21WYWx1ZSh2YWx1ZSwgdHlwZS5vZlR5cGUpO1xuICAgICAgICBpZiAoYXN0VmFsdWU/LmtpbmQgPT09IEtpbmQuTlVMTCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzdFZhbHVlO1xuICAgIH1cbiAgICAvLyBvbmx5IGV4cGxpY2l0IG51bGwsIG5vdCB1bmRlZmluZWQsIE5hTlxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLk5VTEwgfTtcbiAgICB9XG4gICAgLy8gdW5kZWZpbmVkXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIENvbnZlcnQgSmF2YVNjcmlwdCBhcnJheSB0byBHcmFwaFFMIGxpc3QuIElmIHRoZSBHcmFwaFFMVHlwZSBpcyBhIGxpc3QsIGJ1dFxuICAgIC8vIHRoZSB2YWx1ZSBpcyBub3QgYW4gYXJyYXksIGNvbnZlcnQgdGhlIHZhbHVlIHVzaW5nIHRoZSBsaXN0J3MgaXRlbSB0eXBlLlxuICAgIGlmIChpc0xpc3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGl0ZW1UeXBlID0gdHlwZS5vZlR5cGU7XG4gICAgICAgIGlmIChpc0l0ZXJhYmxlT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWVzTm9kZXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1Ob2RlID0gYXN0RnJvbVZhbHVlKGl0ZW0sIGl0ZW1UeXBlKTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbU5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZXNOb2Rlcy5wdXNoKGl0ZW1Ob2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkxJU1QsIHZhbHVlczogdmFsdWVzTm9kZXMgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXN0RnJvbVZhbHVlKHZhbHVlLCBpdGVtVHlwZSk7XG4gICAgfVxuICAgIC8vIFBvcHVsYXRlIHRoZSBmaWVsZHMgb2YgdGhlIGlucHV0IG9iamVjdCBieSBjcmVhdGluZyBBU1RzIGZyb20gZWFjaCB2YWx1ZVxuICAgIC8vIGluIHRoZSBKYXZhU2NyaXB0IG9iamVjdCBhY2NvcmRpbmcgdG8gdGhlIGZpZWxkcyBpbiB0aGUgaW5wdXQgdHlwZS5cbiAgICBpZiAoaXNJbnB1dE9iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgaWYgKCFpc09iamVjdExpa2UodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmaWVsZE5vZGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgZmllbGQgb2YgT2JqZWN0LnZhbHVlcyh0eXBlLmdldEZpZWxkcygpKSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZSA9IGFzdEZyb21WYWx1ZSh2YWx1ZVtmaWVsZC5uYW1lXSwgZmllbGQudHlwZSk7XG4gICAgICAgICAgICBpZiAoZmllbGRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGZpZWxkTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuT0JKRUNUX0ZJRUxELFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB7IGtpbmQ6IEtpbmQuTkFNRSwgdmFsdWU6IGZpZWxkLm5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZpZWxkVmFsdWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5PQkpFQ1QsIGZpZWxkczogZmllbGROb2RlcyB9O1xuICAgIH1cbiAgICBpZiAoaXNMZWFmVHlwZSh0eXBlKSkge1xuICAgICAgICAvLyBTaW5jZSB2YWx1ZSBpcyBhbiBpbnRlcm5hbGx5IHJlcHJlc2VudGVkIHZhbHVlLCBpdCBtdXN0IGJlIHNlcmlhbGl6ZWRcbiAgICAgICAgLy8gdG8gYW4gZXh0ZXJuYWxseSByZXByZXNlbnRlZCB2YWx1ZSBiZWZvcmUgY29udmVydGluZyBpbnRvIGFuIEFTVC5cbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZCA9IHR5cGUuc2VyaWFsaXplKHZhbHVlKTtcbiAgICAgICAgaWYgKHNlcmlhbGl6ZWQgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRW51bVR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuRU5VTSwgdmFsdWU6IHNlcmlhbGl6ZWQgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJRCB0eXBlcyBjYW4gdXNlIEludCBsaXRlcmFscy5cbiAgICAgICAgaWYgKHR5cGUubmFtZSA9PT0gJ0lEJyAmJlxuICAgICAgICAgICAgdHlwZW9mIHNlcmlhbGl6ZWQgPT09ICdzdHJpbmcnICYmXG4gICAgICAgICAgICBpbnRlZ2VyU3RyaW5nUmVnRXhwLnRlc3Qoc2VyaWFsaXplZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuSU5ULCB2YWx1ZTogc2VyaWFsaXplZCB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhc3RGcm9tVmFsdWVVbnR5cGVkKHNlcmlhbGl6ZWQpO1xuICAgIH1cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gICAgLy8gTm90IHJlYWNoYWJsZSwgYWxsIHBvc3NpYmxlIHR5cGVzIGhhdmUgYmVlbiBjb25zaWRlcmVkLlxuICAgIGNvbnNvbGUuYXNzZXJ0KGZhbHNlLCAnVW5leHBlY3RlZCBpbnB1dCB0eXBlOiAnICsgaW5zcGVjdCh0eXBlKSk7XG59XG4vKipcbiAqIEludFZhbHVlOlxuICogICAtIE5lZ2F0aXZlU2lnbj8gMFxuICogICAtIE5lZ2F0aXZlU2lnbj8gTm9uWmVyb0RpZ2l0ICggRGlnaXQrICk/XG4gKi9cbmNvbnN0IGludGVnZXJTdHJpbmdSZWdFeHAgPSAvXi0/KD86MHxbMS05XVswLTldKikkLztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValueUntyped: () => (/* binding */ astFromValueUntyped)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        if (value?.toJSON) {\n            return astFromValueUntyped(value.toJSON());\n        }\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN, value };\n    }\n    if (typeof value === 'bigint') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: String(value) };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: stringNum }\n            : { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21WYWx1ZVVudHlwZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlDQUFJO0FBQzlCLDRCQUE0QixNQUFNLHlDQUFJLHlCQUF5QjtBQUMvRDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsTUFBTSx5Q0FBSTtBQUMxQixnQkFBZ0IsTUFBTSx5Q0FBSTtBQUMxQjtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQSx3REFBd0QsTUFBTTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21WYWx1ZVVudHlwZWQuanM/ZjFkYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG4vKipcbiAqIFByb2R1Y2VzIGEgR3JhcGhRTCBWYWx1ZSBBU1QgZ2l2ZW4gYSBKYXZhU2NyaXB0IG9iamVjdC5cbiAqIEZ1bmN0aW9uIHdpbGwgbWF0Y2ggSmF2YVNjcmlwdC9KU09OIHZhbHVlcyB0byBHcmFwaFFMIEFTVCBzY2hlbWEgZm9ybWF0XG4gKiBieSB1c2luZyB0aGUgZm9sbG93aW5nIG1hcHBpbmcuXG4gKlxuICogfCBKU09OIFZhbHVlICAgIHwgR3JhcGhRTCBWYWx1ZSAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBPYmplY3QgICAgICAgIHwgSW5wdXQgT2JqZWN0ICAgICAgICAgfFxuICogfCBBcnJheSAgICAgICAgIHwgTGlzdCAgICAgICAgICAgICAgICAgfFxuICogfCBCb29sZWFuICAgICAgIHwgQm9vbGVhbiAgICAgICAgICAgICAgfFxuICogfCBTdHJpbmcgICAgICAgIHwgU3RyaW5nICAgICAgICAgICAgICAgfFxuICogfCBOdW1iZXIgICAgICAgIHwgSW50IC8gRmxvYXQgICAgICAgICAgfFxuICogfCBCaWdJbnQgICAgICAgIHwgSW50ICAgICAgICAgICAgICAgICAgfFxuICogfCBudWxsICAgICAgICAgIHwgTnVsbFZhbHVlICAgICAgICAgICAgfFxuICpcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzdEZyb21WYWx1ZVVudHlwZWQodmFsdWUpIHtcbiAgICAvLyBvbmx5IGV4cGxpY2l0IG51bGwsIG5vdCB1bmRlZmluZWQsIE5hTlxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLk5VTEwgfTtcbiAgICB9XG4gICAgLy8gdW5kZWZpbmVkXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIENvbnZlcnQgSmF2YVNjcmlwdCBhcnJheSB0byBHcmFwaFFMIGxpc3QuIElmIHRoZSBHcmFwaFFMVHlwZSBpcyBhIGxpc3QsIGJ1dFxuICAgIC8vIHRoZSB2YWx1ZSBpcyBub3QgYW4gYXJyYXksIGNvbnZlcnQgdGhlIHZhbHVlIHVzaW5nIHRoZSBsaXN0J3MgaXRlbSB0eXBlLlxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICBjb25zdCB2YWx1ZXNOb2RlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1Ob2RlID0gYXN0RnJvbVZhbHVlVW50eXBlZChpdGVtKTtcbiAgICAgICAgICAgIGlmIChpdGVtTm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzTm9kZXMucHVzaChpdGVtTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5MSVNULCB2YWx1ZXM6IHZhbHVlc05vZGVzIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmICh2YWx1ZT8udG9KU09OKSB7XG4gICAgICAgICAgICByZXR1cm4gYXN0RnJvbVZhbHVlVW50eXBlZCh2YWx1ZS50b0pTT04oKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmllbGROb2RlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZSA9IHZhbHVlW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICBjb25zdCBhc3QgPSBhc3RGcm9tVmFsdWVVbnR5cGVkKGZpZWxkVmFsdWUpO1xuICAgICAgICAgICAgaWYgKGFzdCkge1xuICAgICAgICAgICAgICAgIGZpZWxkTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuT0JKRUNUX0ZJRUxELFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB7IGtpbmQ6IEtpbmQuTkFNRSwgdmFsdWU6IGZpZWxkTmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYXN0LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuT0JKRUNULCBmaWVsZHM6IGZpZWxkTm9kZXMgfTtcbiAgICB9XG4gICAgLy8gT3RoZXJzIHNlcmlhbGl6ZSBiYXNlZCBvbiB0aGVpciBjb3JyZXNwb25kaW5nIEphdmFTY3JpcHQgc2NhbGFyIHR5cGVzLlxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJykge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkJPT0xFQU4sIHZhbHVlIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdiaWdpbnQnKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuSU5ULCB2YWx1ZTogU3RyaW5nKHZhbHVlKSB9O1xuICAgIH1cbiAgICAvLyBKYXZhU2NyaXB0IG51bWJlcnMgY2FuIGJlIEludCBvciBGbG9hdCB2YWx1ZXMuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgaXNGaW5pdGUodmFsdWUpKSB7XG4gICAgICAgIGNvbnN0IHN0cmluZ051bSA9IFN0cmluZyh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBpbnRlZ2VyU3RyaW5nUmVnRXhwLnRlc3Qoc3RyaW5nTnVtKVxuICAgICAgICAgICAgPyB7IGtpbmQ6IEtpbmQuSU5ULCB2YWx1ZTogc3RyaW5nTnVtIH1cbiAgICAgICAgICAgIDogeyBraW5kOiBLaW5kLkZMT0FULCB2YWx1ZTogc3RyaW5nTnVtIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuU1RSSU5HLCB2YWx1ZSB9O1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBDYW5ub3QgY29udmVydCB2YWx1ZSB0byBBU1Q6ICR7dmFsdWV9LmApO1xufVxuLyoqXG4gKiBJbnRWYWx1ZTpcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IDBcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IE5vblplcm9EaWdpdCAoIERpZ2l0KyApP1xuICovXG5jb25zdCBpbnRlZ2VyU3RyaW5nUmVnRXhwID0gL14tPyg/OjB8WzEtOV1bMC05XSopJC87XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/comments.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/comments.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectComment: () => (/* binding */ collectComment),\n/* harmony export */   dedentBlockStringValue: () => (/* binding */ dedentBlockStringValue),\n/* harmony export */   getBlockStringIndentation: () => (/* binding */ getBlockStringIndentation),\n/* harmony export */   getComment: () => (/* binding */ getComment),\n/* harmony export */   getDescription: () => (/* binding */ getDescription),\n/* harmony export */   getLeadingCommentBlock: () => (/* binding */ getLeadingCommentBlock),\n/* harmony export */   printComment: () => (/* binding */ printComment),\n/* harmony export */   printWithComments: () => (/* binding */ printWithComments),\n/* harmony export */   pushComment: () => (/* binding */ pushComment),\n/* harmony export */   resetComments: () => (/* binding */ resetComments)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/tokenKind.mjs\");\n\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nfunction resetComments() {\n    commentsRegistry = {};\n}\nfunction collectComment(node) {\n    const entityName = node.name?.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nfunction pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nfunction printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    return maybeArray?.some(str => str.includes('\\n')) ?? false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, parent?.name?.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction printWithComments(ast) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(ast, printDocASTReducerWithComments);\n}\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options?.commentDescriptions) {\n        return getComment(node);\n    }\n}\nfunction getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\n/**\n * @internal\n */\nfunction getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/comments.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDescriptionNode: () => (/* binding */ getDescriptionNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction getDescriptionNode(obj) {\n    if (obj.astNode?.description) {\n        return {\n            ...obj.astNode.description,\n            block: true,\n        };\n    }\n    if (obj.description) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING,\n            value: obj.description,\n            block: true,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Rlc2NyaXB0aW9uRnJvbU9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUN4QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Rlc2NyaXB0aW9uRnJvbU9iamVjdC5qcz9kNmU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREZXNjcmlwdGlvbk5vZGUob2JqKSB7XG4gICAgaWYgKG9iai5hc3ROb2RlPy5kZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ub2JqLmFzdE5vZGUuZGVzY3JpcHRpb24sXG4gICAgICAgICAgICBibG9jazogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKG9iai5kZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogS2luZC5TVFJJTkcsXG4gICAgICAgICAgICB2YWx1ZTogb2JqLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgYmxvY2s6IHRydWUsXG4gICAgICAgIH07XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/errors.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGdEQUFXO0FBQ25CLG1CQUFtQixpREFBWTtBQUMvQjtBQUNBLGVBQWUsaURBQVk7QUFDM0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXJyb3JzLmpzPzQwN2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTEVycm9yLCB2ZXJzaW9uSW5mbyB9IGZyb20gJ2dyYXBocWwnO1xuY29uc3QgcG9zc2libGVHcmFwaFFMRXJyb3JQcm9wZXJ0aWVzID0gW1xuICAgICdtZXNzYWdlJyxcbiAgICAnbG9jYXRpb25zJyxcbiAgICAncGF0aCcsXG4gICAgJ25vZGVzJyxcbiAgICAnc291cmNlJyxcbiAgICAncG9zaXRpb25zJyxcbiAgICAnb3JpZ2luYWxFcnJvcicsXG4gICAgJ25hbWUnLFxuICAgICdzdGFjaycsXG4gICAgJ2V4dGVuc2lvbnMnLFxuXTtcbmZ1bmN0aW9uIGlzR3JhcGhRTEVycm9yTGlrZShlcnJvcikge1xuICAgIHJldHVybiAoZXJyb3IgIT0gbnVsbCAmJlxuICAgICAgICB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmXG4gICAgICAgIE9iamVjdC5rZXlzKGVycm9yKS5ldmVyeShrZXkgPT4gcG9zc2libGVHcmFwaFFMRXJyb3JQcm9wZXJ0aWVzLmluY2x1ZGVzKGtleSkpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zPy5vcmlnaW5hbEVycm9yICYmXG4gICAgICAgICEob3B0aW9ucy5vcmlnaW5hbEVycm9yIGluc3RhbmNlb2YgRXJyb3IpICYmXG4gICAgICAgIGlzR3JhcGhRTEVycm9yTGlrZShvcHRpb25zLm9yaWdpbmFsRXJyb3IpKSB7XG4gICAgICAgIG9wdGlvbnMub3JpZ2luYWxFcnJvciA9IGNyZWF0ZUdyYXBoUUxFcnJvcihvcHRpb25zLm9yaWdpbmFsRXJyb3IubWVzc2FnZSwgb3B0aW9ucy5vcmlnaW5hbEVycm9yKTtcbiAgICB9XG4gICAgaWYgKHZlcnNpb25JbmZvLm1ham9yID49IDE3KSB7XG4gICAgICAgIHJldHVybiBuZXcgR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zPy5ub2Rlcywgb3B0aW9ucz8uc291cmNlLCBvcHRpb25zPy5wb3NpdGlvbnMsIG9wdGlvbnM/LnBhdGgsIG9wdGlvbnM/Lm9yaWdpbmFsRXJyb3IsIG9wdGlvbnM/LmV4dGVuc2lvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9jYXRlZEVycm9yKG9yaWdpbmFsRXJyb3IsIHBhdGgpIHtcbiAgICByZXR1cm4gY3JlYXRlR3JhcGhRTEVycm9yKG9yaWdpbmFsRXJyb3IubWVzc2FnZSwge1xuICAgICAgICBub2Rlczogb3JpZ2luYWxFcnJvci5ub2RlcyxcbiAgICAgICAgc291cmNlOiBvcmlnaW5hbEVycm9yLnNvdXJjZSxcbiAgICAgICAgcG9zaXRpb25zOiBvcmlnaW5hbEVycm9yLnBvc2l0aW9ucyxcbiAgICAgICAgcGF0aDogcGF0aCA9PSBudWxsID8gb3JpZ2luYWxFcnJvci5wYXRoIDogcGF0aCxcbiAgICAgICAgb3JpZ2luYWxFcnJvcixcbiAgICAgICAgZXh0ZW5zaW9uczogb3JpZ2luYWxFcnJvci5leHRlbnNpb25zLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/get-directives.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/get-directives.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirective: () => (/* binding */ getDirective),\n/* harmony export */   getDirectiveInExtensions: () => (/* binding */ getDirectiveInExtensions),\n/* harmony export */   getDirectives: () => (/* binding */ getDirectives),\n/* harmony export */   getDirectivesInExtensions: () => (/* binding */ getDirectivesInExtensions)\n/* harmony export */ });\n/* harmony import */ var _getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDirectiveExtensions.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\");\n\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldC1kaXJlY3RpdmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFFO0FBQzlEO0FBQ1AsZ0NBQWdDLGtGQUFzQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyxrRkFBc0I7QUFDdEQ7QUFDQTtBQUNPO0FBQ1AsZ0NBQWdDLGtGQUFzQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyxrRkFBc0I7QUFDdEQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldC1kaXJlY3RpdmVzLmpzP2I1MGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyB9IGZyb20gJy4vZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlc0luRXh0ZW5zaW9ucyhub2RlLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gWydkaXJlY3RpdmVzJ10pIHtcbiAgICBjb25zdCBkaXJlY3RpdmVFeHRlbnNpb25zID0gZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyhub2RlLCB1bmRlZmluZWQsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpO1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhkaXJlY3RpdmVFeHRlbnNpb25zKVxuICAgICAgICAubWFwKChbZGlyZWN0aXZlTmFtZSwgZGlyZWN0aXZlQXJnc0Fycl0pID0+IGRpcmVjdGl2ZUFyZ3NBcnI/Lm1hcChkaXJlY3RpdmVBcmdzID0+ICh7XG4gICAgICAgIG5hbWU6IGRpcmVjdGl2ZU5hbWUsXG4gICAgICAgIGFyZ3M6IGRpcmVjdGl2ZUFyZ3MsXG4gICAgfSkpKVxuICAgICAgICAuZmxhdChJbmZpbml0eSlcbiAgICAgICAgLmZpbHRlcihCb29sZWFuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVJbkV4dGVuc2lvbnMobm9kZSwgZGlyZWN0aXZlTmFtZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMobm9kZSwgdW5kZWZpbmVkLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKTtcbiAgICByZXR1cm4gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVzKHNjaGVtYSwgbm9kZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMobm9kZSwgc2NoZW1hLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKTtcbiAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMoZGlyZWN0aXZlRXh0ZW5zaW9ucylcbiAgICAgICAgLm1hcCgoW2RpcmVjdGl2ZU5hbWUsIGRpcmVjdGl2ZUFyZ3NBcnJdKSA9PiBkaXJlY3RpdmVBcmdzQXJyPy5tYXAoZGlyZWN0aXZlQXJncyA9PiAoe1xuICAgICAgICBuYW1lOiBkaXJlY3RpdmVOYW1lLFxuICAgICAgICBhcmdzOiBkaXJlY3RpdmVBcmdzLFxuICAgIH0pKSlcbiAgICAgICAgLmZsYXQoSW5maW5pdHkpXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbik7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlKHNjaGVtYSwgbm9kZSwgZGlyZWN0aXZlTmFtZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMobm9kZSwgc2NoZW1hLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKTtcbiAgICByZXR1cm4gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/get-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getArgumentValues.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getArgumentValues.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArgumentValues: () => (/* binding */ getArgumentValues)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    const coercedValues = {};\n    const argumentNodes = node.arguments ?? [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL;\n        if (valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(variableValues, variableName)) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0,graphql__WEBPACK_IMPORTED_MODULE_6__.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldEFyZ3VtZW50VmFsdWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQzRCO0FBQ25CO0FBQ0g7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlEQUF5RDtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxLQUFLO0FBQ1YsaUJBQWlCLG9DQUFvQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFhO0FBQ2xDLHNCQUFzQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQixzREFBTyxVQUFVO0FBQ2xHO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHlDQUFJO0FBQzVDLCtCQUErQix5Q0FBSTtBQUNuQztBQUNBLDJDQUEyQywyREFBYztBQUN6RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0RBQWE7QUFDdEMsMEJBQTBCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLHNEQUFPLFVBQVU7QUFDdEcsdURBQXVELGFBQWE7QUFDcEU7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzREFBYTtBQUNuQyxrQkFBa0IsOERBQWtCLGNBQWMsS0FBSyxzQkFBc0Isc0RBQU8sVUFBVTtBQUM5RjtBQUNBLGFBQWE7QUFDYjtBQUNBLDZCQUE2QixxREFBWTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQiw4Q0FBSyxZQUFZO0FBQzlGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRBcmd1bWVudFZhbHVlcy5qcz83YjQwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3BlY3QgfSBmcm9tICdjcm9zcy1pbnNwZWN0JztcbmltcG9ydCB7IGlzTm9uTnVsbFR5cGUsIEtpbmQsIHByaW50LCB2YWx1ZUZyb21BU1QsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBjcmVhdGVHcmFwaFFMRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBoYXNPd25Qcm9wZXJ0eSB9IGZyb20gJy4vanN1dGlscy5qcyc7XG4vKipcbiAqIFByZXBhcmVzIGFuIG9iamVjdCBtYXAgb2YgYXJndW1lbnQgdmFsdWVzIGdpdmVuIGEgbGlzdCBvZiBhcmd1bWVudFxuICogZGVmaW5pdGlvbnMgYW5kIGxpc3Qgb2YgYXJndW1lbnQgQVNUIG5vZGVzLlxuICpcbiAqIE5vdGU6IFRoZSByZXR1cm5lZCB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdCB3aXRoIGEgcHJvdG90eXBlLCBzaW5jZSBpdCBpc1xuICogZXhwb3NlZCB0byB1c2VyIGNvZGUuIENhcmUgc2hvdWxkIGJlIHRha2VuIHRvIG5vdCBwdWxsIHZhbHVlcyBmcm9tIHRoZVxuICogT2JqZWN0IHByb3RvdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFyZ3VtZW50VmFsdWVzKGRlZiwgbm9kZSwgdmFyaWFibGVWYWx1ZXMgPSB7fSkge1xuICAgIGNvbnN0IGNvZXJjZWRWYWx1ZXMgPSB7fTtcbiAgICBjb25zdCBhcmd1bWVudE5vZGVzID0gbm9kZS5hcmd1bWVudHMgPz8gW107XG4gICAgY29uc3QgYXJnTm9kZU1hcCA9IGFyZ3VtZW50Tm9kZXMucmVkdWNlKChwcmV2LCBhcmcpID0+ICh7XG4gICAgICAgIC4uLnByZXYsXG4gICAgICAgIFthcmcubmFtZS52YWx1ZV06IGFyZyxcbiAgICB9KSwge30pO1xuICAgIGZvciAoY29uc3QgeyBuYW1lLCB0eXBlOiBhcmdUeXBlLCBkZWZhdWx0VmFsdWUgfSBvZiBkZWYuYXJncykge1xuICAgICAgICBjb25zdCBhcmd1bWVudE5vZGUgPSBhcmdOb2RlTWFwW25hbWVdO1xuICAgICAgICBpZiAoIWFyZ3VtZW50Tm9kZSkge1xuICAgICAgICAgICAgaWYgKGRlZmF1bHRWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY29lcmNlZFZhbHVlc1tuYW1lXSA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUoYXJnVHlwZSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIG9mIHJlcXVpcmVkIHR5cGUgXCIke2luc3BlY3QoYXJnVHlwZSl9XCIgYCArICd3YXMgbm90IHByb3ZpZGVkLicsIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFtub2RlXSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlTm9kZSA9IGFyZ3VtZW50Tm9kZS52YWx1ZTtcbiAgICAgICAgbGV0IGlzTnVsbCA9IHZhbHVlTm9kZS5raW5kID09PSBLaW5kLk5VTEw7XG4gICAgICAgIGlmICh2YWx1ZU5vZGUua2luZCA9PT0gS2luZC5WQVJJQUJMRSkge1xuICAgICAgICAgICAgY29uc3QgdmFyaWFibGVOYW1lID0gdmFsdWVOb2RlLm5hbWUudmFsdWU7XG4gICAgICAgICAgICBpZiAodmFyaWFibGVWYWx1ZXMgPT0gbnVsbCB8fCAhaGFzT3duUHJvcGVydHkodmFyaWFibGVWYWx1ZXMsIHZhcmlhYmxlTmFtZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29lcmNlZFZhbHVlc1tuYW1lXSA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaXNOb25OdWxsVHlwZShhcmdUeXBlKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIG9mIHJlcXVpcmVkIHR5cGUgXCIke2luc3BlY3QoYXJnVHlwZSl9XCIgYCArXG4gICAgICAgICAgICAgICAgICAgICAgICBgd2FzIHByb3ZpZGVkIHRoZSB2YXJpYWJsZSBcIiQke3ZhcmlhYmxlTmFtZX1cIiB3aGljaCB3YXMgbm90IHByb3ZpZGVkIGEgcnVudGltZSB2YWx1ZS5gLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlczogW3ZhbHVlTm9kZV0sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlzTnVsbCA9IHZhcmlhYmxlVmFsdWVzW3ZhcmlhYmxlTmFtZV0gPT0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNOdWxsICYmIGlzTm9uTnVsbFR5cGUoYXJnVHlwZSkpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgb2Ygbm9uLW51bGwgdHlwZSBcIiR7aW5zcGVjdChhcmdUeXBlKX1cIiBgICsgJ211c3Qgbm90IGJlIG51bGwuJywge1xuICAgICAgICAgICAgICAgIG5vZGVzOiBbdmFsdWVOb2RlXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvZXJjZWRWYWx1ZSA9IHZhbHVlRnJvbUFTVCh2YWx1ZU5vZGUsIGFyZ1R5cGUsIHZhcmlhYmxlVmFsdWVzKTtcbiAgICAgICAgaWYgKGNvZXJjZWRWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBOb3RlOiBWYWx1ZXNPZkNvcnJlY3RUeXBlUnVsZSB2YWxpZGF0aW9uIHNob3VsZCBjYXRjaCB0aGlzIGJlZm9yZVxuICAgICAgICAgICAgLy8gZXhlY3V0aW9uLiBUaGlzIGlzIGEgcnVudGltZSBjaGVjayB0byBlbnN1cmUgZXhlY3V0aW9uIGRvZXMgbm90XG4gICAgICAgICAgICAvLyBjb250aW51ZSB3aXRoIGFuIGludmFsaWQgYXJndW1lbnQgdmFsdWUuXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIGhhcyBpbnZhbGlkIHZhbHVlICR7cHJpbnQodmFsdWVOb2RlKX0uYCwge1xuICAgICAgICAgICAgICAgIG5vZGVzOiBbdmFsdWVOb2RlXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvZXJjZWRWYWx1ZXNbbmFtZV0gPSBjb2VyY2VkVmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBjb2VyY2VkVmFsdWVzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirectiveExtensions: () => (/* binding */ getDirectiveExtensions)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var _getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getArgumentValues.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\nfunction getDirectiveExtensions(directableObj, schema, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = {};\n    if (directableObj.extensions) {\n        let directivesInExtensions = directableObj.extensions;\n        for (const pathSegment of pathToDirectivesInExtensions) {\n            directivesInExtensions = directivesInExtensions?.[pathSegment];\n        }\n        if (directivesInExtensions != null) {\n            for (const directiveNameProp in directivesInExtensions) {\n                const directiveObjs = directivesInExtensions[directiveNameProp];\n                const directiveName = directiveNameProp;\n                if (Array.isArray(directiveObjs)) {\n                    for (const directiveObj of directiveObjs) {\n                        let existingDirectiveExtensions = directiveExtensions[directiveName];\n                        if (!existingDirectiveExtensions) {\n                            existingDirectiveExtensions = [];\n                            directiveExtensions[directiveName] = existingDirectiveExtensions;\n                        }\n                        existingDirectiveExtensions.push(directiveObj);\n                    }\n                }\n                else {\n                    let existingDirectiveExtensions = directiveExtensions[directiveName];\n                    if (!existingDirectiveExtensions) {\n                        existingDirectiveExtensions = [];\n                        directiveExtensions[directiveName] = existingDirectiveExtensions;\n                    }\n                    existingDirectiveExtensions.push(directiveObjs);\n                }\n            }\n        }\n    }\n    const memoizedStringify = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_0__.memoize1)(obj => JSON.stringify(obj));\n    const astNodes = [];\n    if (directableObj.astNode) {\n        astNodes.push(directableObj.astNode);\n    }\n    if (directableObj.extensionASTNodes) {\n        astNodes.push(...directableObj.extensionASTNodes);\n    }\n    for (const astNode of astNodes) {\n        if (astNode.directives?.length) {\n            for (const directive of astNode.directives) {\n                const directiveName = directive.name.value;\n                let existingDirectiveExtensions = directiveExtensions[directiveName];\n                if (!existingDirectiveExtensions) {\n                    existingDirectiveExtensions = [];\n                    directiveExtensions[directiveName] = existingDirectiveExtensions;\n                }\n                const directiveInSchema = schema?.getDirective(directiveName);\n                let value = {};\n                if (directiveInSchema) {\n                    value = (0,_getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__.getArgumentValues)(directiveInSchema, directive);\n                }\n                if (directive.arguments) {\n                    for (const argNode of directive.arguments) {\n                        const argName = argNode.name.value;\n                        if (value[argName] == null) {\n                            const argInDirective = directiveInSchema?.args.find(arg => arg.name === argName);\n                            if (argInDirective) {\n                                value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.valueFromAST)(argNode.value, argInDirective.type);\n                            }\n                        }\n                        if (value[argName] == null) {\n                            value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.valueFromASTUntyped)(argNode.value);\n                        }\n                    }\n                }\n                if (astNodes.length > 0 && existingDirectiveExtensions.length > 0) {\n                    const valStr = memoizedStringify(value);\n                    if (existingDirectiveExtensions.some(val => memoizedStringify(val) === valStr)) {\n                        continue;\n                    }\n                }\n                existingDirectiveExtensions.push(value);\n            }\n        }\n    }\n    return directiveExtensions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldERpcmVjdGl2ZUV4dGVuc2lvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEQ7QUFDRDtBQUNuQjtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHFEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHdFQUFpQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxxREFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsNERBQW1CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldERpcmVjdGl2ZUV4dGVuc2lvbnMuanM/MTFlZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2YWx1ZUZyb21BU1QsIHZhbHVlRnJvbUFTVFVudHlwZWQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGdldEFyZ3VtZW50VmFsdWVzIH0gZnJvbSAnLi9nZXRBcmd1bWVudFZhbHVlcy5qcyc7XG5pbXBvcnQgeyBtZW1vaXplMSB9IGZyb20gJy4vbWVtb2l6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyhkaXJlY3RhYmxlT2JqLCBzY2hlbWEsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBbJ2RpcmVjdGl2ZXMnXSkge1xuICAgIGNvbnN0IGRpcmVjdGl2ZUV4dGVuc2lvbnMgPSB7fTtcbiAgICBpZiAoZGlyZWN0YWJsZU9iai5leHRlbnNpb25zKSB7XG4gICAgICAgIGxldCBkaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gZGlyZWN0YWJsZU9iai5leHRlbnNpb25zO1xuICAgICAgICBmb3IgKGNvbnN0IHBhdGhTZWdtZW50IG9mIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpIHtcbiAgICAgICAgICAgIGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBkaXJlY3RpdmVzSW5FeHRlbnNpb25zPy5bcGF0aFNlZ21lbnRdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkaXJlY3RpdmVzSW5FeHRlbnNpb25zICE9IG51bGwpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZGlyZWN0aXZlTmFtZVByb3AgaW4gZGlyZWN0aXZlc0luRXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRpcmVjdGl2ZU9ianMgPSBkaXJlY3RpdmVzSW5FeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVQcm9wXTtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVOYW1lID0gZGlyZWN0aXZlTmFtZVByb3A7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGlyZWN0aXZlT2JqcykpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlY3RpdmVPYmogb2YgZGlyZWN0aXZlT2Jqcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV0gPSBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnM7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMucHVzaChkaXJlY3RpdmVPYmopO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zID0gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXSA9IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMucHVzaChkaXJlY3RpdmVPYmpzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgbWVtb2l6ZWRTdHJpbmdpZnkgPSBtZW1vaXplMShvYmogPT4gSlNPTi5zdHJpbmdpZnkob2JqKSk7XG4gICAgY29uc3QgYXN0Tm9kZXMgPSBbXTtcbiAgICBpZiAoZGlyZWN0YWJsZU9iai5hc3ROb2RlKSB7XG4gICAgICAgIGFzdE5vZGVzLnB1c2goZGlyZWN0YWJsZU9iai5hc3ROb2RlKTtcbiAgICB9XG4gICAgaWYgKGRpcmVjdGFibGVPYmouZXh0ZW5zaW9uQVNUTm9kZXMpIHtcbiAgICAgICAgYXN0Tm9kZXMucHVzaCguLi5kaXJlY3RhYmxlT2JqLmV4dGVuc2lvbkFTVE5vZGVzKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBhc3ROb2RlIG9mIGFzdE5vZGVzKSB7XG4gICAgICAgIGlmIChhc3ROb2RlLmRpcmVjdGl2ZXM/Lmxlbmd0aCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlY3RpdmUgb2YgYXN0Tm9kZS5kaXJlY3RpdmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlyZWN0aXZlTmFtZSA9IGRpcmVjdGl2ZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgICAgIGxldCBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMgPSBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdO1xuICAgICAgICAgICAgICAgIGlmICghZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdID0gZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVJblNjaGVtYSA9IHNjaGVtYT8uZ2V0RGlyZWN0aXZlKGRpcmVjdGl2ZU5hbWUpO1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHt9O1xuICAgICAgICAgICAgICAgIGlmIChkaXJlY3RpdmVJblNjaGVtYSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGdldEFyZ3VtZW50VmFsdWVzKGRpcmVjdGl2ZUluU2NoZW1hLCBkaXJlY3RpdmUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZGlyZWN0aXZlLmFyZ3VtZW50cykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZ05vZGUgb2YgZGlyZWN0aXZlLmFyZ3VtZW50cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJnTmFtZSA9IGFyZ05vZGUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZVthcmdOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJnSW5EaXJlY3RpdmUgPSBkaXJlY3RpdmVJblNjaGVtYT8uYXJncy5maW5kKGFyZyA9PiBhcmcubmFtZSA9PT0gYXJnTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ0luRGlyZWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW2FyZ05hbWVdID0gdmFsdWVGcm9tQVNUKGFyZ05vZGUudmFsdWUsIGFyZ0luRGlyZWN0aXZlLnR5cGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZVthcmdOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVbYXJnTmFtZV0gPSB2YWx1ZUZyb21BU1RVbnR5cGVkKGFyZ05vZGUudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhc3ROb2Rlcy5sZW5ndGggPiAwICYmIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbFN0ciA9IG1lbW9pemVkU3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucy5zb21lKHZhbCA9PiBtZW1vaXplZFN0cmluZ2lmeSh2YWwpID09PSB2YWxTdHIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRpcmVjdGl2ZUV4dGVuc2lvbnM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationASTFromDocument: () => (/* binding */ getOperationASTFromDocument),\n/* harmony export */   getOperationASTFromRequest: () => (/* binding */ getOperationASTFromRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nconst getOperationASTFromRequest = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDRjtBQUNqQztBQUNQLGdCQUFnQix3REFBZTtBQUMvQjtBQUNBLGtEQUFrRCxvQkFBb0I7QUFDdEU7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLHFEQUFRO0FBQ2xEO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0LmpzPzk5M2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0T3BlcmF0aW9uQVNUIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZW1vaXplMSB9IGZyb20gJy4vbWVtb2l6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0aW9uQVNURnJvbURvY3VtZW50KGRvY3VtZW50Tm9kZSwgb3BlcmF0aW9uTmFtZSkge1xuICAgIGNvbnN0IGRvYyA9IGdldE9wZXJhdGlvbkFTVChkb2N1bWVudE5vZGUsIG9wZXJhdGlvbk5hbWUpO1xuICAgIGlmICghZG9jKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGluZmVyIG9wZXJhdGlvbiAke29wZXJhdGlvbk5hbWUgfHwgJyd9YCk7XG4gICAgfVxuICAgIHJldHVybiBkb2M7XG59XG5leHBvcnQgY29uc3QgZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIGdldE9wZXJhdGlvbkFTVEZyb21Eb2N1bWVudChyZXF1ZXN0LmRvY3VtZW50LCByZXF1ZXN0Lm9wZXJhdGlvbk5hbWUpO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ3pCO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOENBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanM/YmQzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGNvbnN0IGFzQXJyYXkgPSAoZm5zKSA9PiAoQXJyYXkuaXNBcnJheShmbnMpID8gZm5zIDogZm5zID8gW2Zuc10gOiBbXSk7XG5jb25zdCBpbnZhbGlkRG9jUmVnZXggPSAvXFwuW2EtejAtOV0rJC9pO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9jdW1lbnRTdHJpbmcoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gWFhYOiBpcy12YWxpZC1wYXRoIG9yIGlzLWdsb2IgdHJlYXQgU0RMIGFzIGEgdmFsaWQgcGF0aFxuICAgIC8vIChgc2NhbGFyIERhdGVgIGZvciBleGFtcGxlKVxuICAgIC8vIHRoaXMgd2h5IGNoZWNraW5nIHRoZSBleHRlbnNpb24gaXMgZmFzdCBlbm91Z2hcbiAgICAvLyBhbmQgcHJldmVudCBmcm9tIHBhcnNpbmcgdGhlIHN0cmluZyBpbiBvcmRlciB0byBmaW5kIG91dFxuICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgYSBTRExcbiAgICBpZiAoaW52YWxpZERvY1JlZ2V4LnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHBhcnNlKHN0cik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkgeyB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuY29uc3QgaW52YWxpZFBhdGhSZWdleCA9IC9b4oCY4oCcISVePD5gXFxuXS87XG4vKipcbiAqIENoZWNrZXMgd2hldGhlciB0aGUgYHN0cmAgY29udGFpbnMgYW55IHBhdGggaWxsZWdhbCBjaGFyYWN0ZXJzLlxuICpcbiAqIEEgc3RyaW5nIG1heSBzb21ldGltZXMgbG9vayBsaWtlIGEgcGF0aCBidXQgaXMgbm90IChsaWtlIGFuIFNETCBvZiBhIHNpbXBsZVxuICogR3JhcGhRTCBzY2hlbWEpLiBUbyBtYWtlIHN1cmUgd2UgZG9uJ3QgeWllbGQgZmFsc2UtcG9zaXRpdmVzIGluIHN1Y2ggY2FzZXMsXG4gKiB3ZSBkaXNhbGxvdyBuZXcgbGluZXMgaW4gcGF0aHMgKGV2ZW4gdGhvdWdoIG1vc3QgVW5peCBzeXN0ZW1zIHN1cHBvcnQgbmV3XG4gKiBsaW5lcyBpbiBmaWxlIG5hbWVzKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRQYXRoKHN0cikge1xuICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJiAhaW52YWxpZFBhdGhSZWdleC50ZXN0KHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVN0cmluZ3MoYSwgYikge1xuICAgIGlmIChTdHJpbmcoYSkgPCBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBpZiAoU3RyaW5nKGEpID4gU3RyaW5nKGIpKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBub2RlVG9TdHJpbmcoYSkge1xuICAgIGxldCBuYW1lO1xuICAgIGlmICgnYWxpYXMnIGluIGEpIHtcbiAgICAgICAgbmFtZSA9IGEuYWxpYXM/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsICYmICduYW1lJyBpbiBhKSB7XG4gICAgICAgIG5hbWUgPSBhLm5hbWU/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIG5hbWUgPSBhLmtpbmQ7XG4gICAgfVxuICAgIHJldHVybiBuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVOb2RlcyhhLCBiLCBjdXN0b21Gbikge1xuICAgIGNvbnN0IGFTdHIgPSBub2RlVG9TdHJpbmcoYSk7XG4gICAgY29uc3QgYlN0ciA9IG5vZGVUb1N0cmluZyhiKTtcbiAgICBpZiAodHlwZW9mIGN1c3RvbUZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21GbihhU3RyLCBiU3RyKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBhcmVTdHJpbmdzKGFTdHIsIGJTdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU29tZShpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dCAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFNvbWUoaW5wdXQsIG1lc3NhZ2UgPSAnVmFsdWUgc2hvdWxkIGJlIHNvbWV0aGluZycpIHtcbiAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nfunction isAsyncIterable(value) {\n    return value?.[Symbol.asyncIterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2lzQXN5bmNJdGVyYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaXNBc3luY0l0ZXJhYmxlLmpzPzc3MWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzQXN5bmNJdGVyYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSAhPSBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isDocumentNode.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isDocumentNode.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDocumentNode: () => (/* binding */ isDocumentNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2lzRG9jdW1lbnROb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBQ3hCO0FBQ1AsdUZBQXVGLHlDQUFJO0FBQzNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaXNEb2N1bWVudE5vZGUuanM/YjdlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudE5vZGUob2JqZWN0KSB7XG4gICAgcmV0dXJuIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiAna2luZCcgaW4gb2JqZWN0ICYmIG9iamVjdC5raW5kID09PSBLaW5kLkRPQ1VNRU5UO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/isDocumentNode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2pzdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2dyYXBocWwvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9qc3V0aWxzLmpzPzdmYTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzSXRlcmFibGVPYmplY3QodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIFN5bWJvbC5pdGVyYXRvciBpbiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2UodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWU/LnRoZW4gIT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcm9taXNlUmVkdWNlKHZhbHVlcywgY2FsbGJhY2tGbiwgaW5pdGlhbFZhbHVlKSB7XG4gICAgbGV0IGFjY3VtdWxhdG9yID0gaW5pdGlhbFZhbHVlO1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgIGFjY3VtdWxhdG9yID0gaXNQcm9taXNlKGFjY3VtdWxhdG9yKVxuICAgICAgICAgICAgPyBhY2N1bXVsYXRvci50aGVuKHJlc29sdmVkID0+IGNhbGxiYWNrRm4ocmVzb2x2ZWQsIHZhbHVlKSlcbiAgICAgICAgICAgIDogY2FsbGJhY2tGbihhY2N1bXVsYXRvciwgdmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gYWNjdW11bGF0b3I7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   observableToAsyncIterable: () => (/* binding */ observableToAsyncIterable)\n/* harmony export */ });\nfunction observableToAsyncIterable(observable) {\n    const pullQueue = [];\n    const pushQueue = [];\n    let listening = true;\n    const pushValue = (value) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value, done: false });\n        }\n        else {\n            pushQueue.push({ value, done: false });\n        }\n    };\n    const pushError = (error) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] }, done: false });\n        }\n    };\n    const pushDone = () => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ done: true });\n        }\n        else {\n            pushQueue.push({ done: true });\n        }\n    };\n    const pullValue = () => new Promise(resolve => {\n        if (pushQueue.length !== 0) {\n            const element = pushQueue.shift();\n            // either {value: {errors: [...]}} or {value: ...}\n            resolve(element);\n        }\n        else {\n            pullQueue.push(resolve);\n        }\n    });\n    const subscription = observable.subscribe({\n        next(value) {\n            pushValue(value);\n        },\n        error(err) {\n            pushError(err);\n        },\n        complete() {\n            pushDone();\n        },\n    });\n    const emptyQueue = () => {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            for (const resolve of pullQueue) {\n                resolve({ value: undefined, done: true });\n            }\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return {\n        next() {\n            // return is a defined method, so it is safe to call it.\n            return listening ? pullValue() : this.return();\n        },\n        return() {\n            emptyQueue();\n            return Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            emptyQueue();\n            return Promise.reject(error);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL29ic2VydmFibGVUb0FzeW5jSXRlcmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG9CQUFvQjtBQUNwRDtBQUNBO0FBQ0EsNkJBQTZCLG9CQUFvQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFNBQVMsaUJBQWlCLGVBQWU7QUFDekU7QUFDQTtBQUNBLDZCQUE2QixTQUFTLGlCQUFpQixlQUFlO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0EsNkJBQTZCLFlBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixRQUFRLGdCQUFnQixJQUFJO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4QkFBOEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQ0FBcUMsOEJBQThCO0FBQ25FLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZS5qcz8zMTY4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBvYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlKG9ic2VydmFibGUpIHtcbiAgICBjb25zdCBwdWxsUXVldWUgPSBbXTtcbiAgICBjb25zdCBwdXNoUXVldWUgPSBbXTtcbiAgICBsZXQgbGlzdGVuaW5nID0gdHJ1ZTtcbiAgICBjb25zdCBwdXNoVmFsdWUgPSAodmFsdWUpID0+IHtcbiAgICAgICAgaWYgKHB1bGxRdWV1ZS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIC8vIEl0IGlzIHNhZmUgdG8gdXNlIHRoZSAhIG9wZXJhdG9yIGhlcmUgYXMgd2UgY2hlY2sgdGhlIGxlbmd0aC5cbiAgICAgICAgICAgIHB1bGxRdWV1ZS5zaGlmdCgpKHsgdmFsdWUsIGRvbmU6IGZhbHNlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHVzaFF1ZXVlLnB1c2goeyB2YWx1ZSwgZG9uZTogZmFsc2UgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHB1c2hFcnJvciA9IChlcnJvcikgPT4ge1xuICAgICAgICBpZiAocHVsbFF1ZXVlLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgLy8gSXQgaXMgc2FmZSB0byB1c2UgdGhlICEgb3BlcmF0b3IgaGVyZSBhcyB3ZSBjaGVjayB0aGUgbGVuZ3RoLlxuICAgICAgICAgICAgcHVsbFF1ZXVlLnNoaWZ0KCkoeyB2YWx1ZTogeyBlcnJvcnM6IFtlcnJvcl0gfSwgZG9uZTogZmFsc2UgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwdXNoUXVldWUucHVzaCh7IHZhbHVlOiB7IGVycm9yczogW2Vycm9yXSB9LCBkb25lOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgcHVzaERvbmUgPSAoKSA9PiB7XG4gICAgICAgIGlmIChwdWxsUXVldWUubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAvLyBJdCBpcyBzYWZlIHRvIHVzZSB0aGUgISBvcGVyYXRvciBoZXJlIGFzIHdlIGNoZWNrIHRoZSBsZW5ndGguXG4gICAgICAgICAgICBwdWxsUXVldWUuc2hpZnQoKSh7IGRvbmU6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwdXNoUXVldWUucHVzaCh7IGRvbmU6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHB1bGxWYWx1ZSA9ICgpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBpZiAocHVzaFF1ZXVlLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHB1c2hRdWV1ZS5zaGlmdCgpO1xuICAgICAgICAgICAgLy8gZWl0aGVyIHt2YWx1ZToge2Vycm9yczogWy4uLl19fSBvciB7dmFsdWU6IC4uLn1cbiAgICAgICAgICAgIHJlc29sdmUoZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwdWxsUXVldWUucHVzaChyZXNvbHZlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IG9ic2VydmFibGUuc3Vic2NyaWJlKHtcbiAgICAgICAgbmV4dCh2YWx1ZSkge1xuICAgICAgICAgICAgcHVzaFZhbHVlKHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3IoZXJyKSB7XG4gICAgICAgICAgICBwdXNoRXJyb3IoZXJyKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29tcGxldGUoKSB7XG4gICAgICAgICAgICBwdXNoRG9uZSgpO1xuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGVtcHR5UXVldWUgPSAoKSA9PiB7XG4gICAgICAgIGlmIChsaXN0ZW5pbmcpIHtcbiAgICAgICAgICAgIGxpc3RlbmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHJlc29sdmUgb2YgcHVsbFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwdWxsUXVldWUubGVuZ3RoID0gMDtcbiAgICAgICAgICAgIHB1c2hRdWV1ZS5sZW5ndGggPSAwO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuZXh0KCkge1xuICAgICAgICAgICAgLy8gcmV0dXJuIGlzIGEgZGVmaW5lZCBtZXRob2QsIHNvIGl0IGlzIHNhZmUgdG8gY2FsbCBpdC5cbiAgICAgICAgICAgIHJldHVybiBsaXN0ZW5pbmcgPyBwdWxsVmFsdWUoKSA6IHRoaXMucmV0dXJuKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHJldHVybigpIHtcbiAgICAgICAgICAgIGVtcHR5UXVldWUoKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoeyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH0pO1xuICAgICAgICB9LFxuICAgICAgICB0aHJvdyhlcnJvcikge1xuICAgICAgICAgICAgZW1wdHlRdWV1ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/parse-graphql-sdl.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/parse-graphql-sdl.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDescribable: () => (/* binding */ isDescribable),\n/* harmony export */   parseGraphQLSDL: () => (/* binding */ parseGraphQLSDL),\n/* harmony export */   transformCommentsToDescriptions: () => (/* binding */ transformCommentsToDescriptions)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/source.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/predicates.mjs\");\n/* harmony import */ var _comments_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./comments.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/comments.js\");\n\n\nfunction parseGraphQLSDL(location, rawSDL, options = {}) {\n    let document;\n    try {\n        if (options.commentDescriptions && rawSDL.includes('#')) {\n            document = transformCommentsToDescriptions(rawSDL, options);\n            // If noLocation=true, we need to make sure to print and parse it again, to remove locations,\n            // since `transformCommentsToDescriptions` must have locations set in order to transform the comments\n            // into descriptions.\n            if (options.noLocation) {\n                document = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)((0,graphql__WEBPACK_IMPORTED_MODULE_1__.print)(document), options);\n            }\n        }\n        else {\n            document = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(new graphql__WEBPACK_IMPORTED_MODULE_2__.Source(rawSDL, location), options);\n        }\n    }\n    catch (e) {\n        if (e.message.includes('EOF') && rawSDL.replace(/(\\#[^*]*)/g, '').trim() === '') {\n            document = {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.DOCUMENT,\n                definitions: [],\n            };\n        }\n        else {\n            throw e;\n        }\n    }\n    return {\n        location,\n        document,\n    };\n}\nfunction transformCommentsToDescriptions(sourceSdl, options = {}) {\n    const parsedDoc = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(sourceSdl, {\n        ...options,\n        noLocation: false,\n    });\n    const modifiedDoc = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.visit)(parsedDoc, {\n        leave: (node) => {\n            if (isDescribable(node)) {\n                const rawValue = (0,_comments_js__WEBPACK_IMPORTED_MODULE_5__.getLeadingCommentBlock)(node);\n                if (rawValue !== undefined) {\n                    const commentsBlock = (0,_comments_js__WEBPACK_IMPORTED_MODULE_5__.dedentBlockStringValue)('\\n' + rawValue);\n                    const isBlock = commentsBlock.includes('\\n');\n                    if (!node.description) {\n                        return {\n                            ...node,\n                            description: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.STRING,\n                                value: commentsBlock,\n                                block: isBlock,\n                            },\n                        };\n                    }\n                    else {\n                        return {\n                            ...node,\n                            description: {\n                                ...node.description,\n                                value: node.description.value + '\\n' + commentsBlock,\n                                block: true,\n                            },\n                        };\n                    }\n                }\n            }\n        },\n    });\n    return modifiedDoc;\n}\nfunction isDescribable(node) {\n    return ((0,graphql__WEBPACK_IMPORTED_MODULE_6__.isTypeSystemDefinitionNode)(node) ||\n        node.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.FIELD_DEFINITION ||\n        node.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.INPUT_VALUE_DEFINITION ||\n        node.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.ENUM_VALUE_DEFINITION);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3BhcnNlLWdyYXBocWwtc2RsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMEc7QUFDM0I7QUFDeEUsdURBQXVEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsOENBQUssQ0FBQyw4Q0FBSztBQUN0QztBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOENBQUssS0FBSywyQ0FBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlDQUFJO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLGdFQUFnRTtBQUN2RSxzQkFBc0IsOENBQUs7QUFDM0I7QUFDQTtBQUNBLEtBQUs7QUFDTCx3QkFBd0IsOENBQUs7QUFDN0I7QUFDQTtBQUNBLGlDQUFpQyxvRUFBc0I7QUFDdkQ7QUFDQSwwQ0FBMEMsb0VBQXNCO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MseUNBQUk7QUFDMUM7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDTztBQUNQLFlBQVksbUVBQTBCO0FBQ3RDLHNCQUFzQix5Q0FBSTtBQUMxQixzQkFBc0IseUNBQUk7QUFDMUIsc0JBQXNCLHlDQUFJO0FBQzFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ncmFwaHFsL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vcGFyc2UtZ3JhcGhxbC1zZGwuanM/ZGZjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTb3VyY2UgYXMgR3JhcGhRTFNvdXJjZSwgaXNUeXBlU3lzdGVtRGVmaW5pdGlvbk5vZGUsIEtpbmQsIHBhcnNlLCBwcmludCwgdmlzaXQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBkZWRlbnRCbG9ja1N0cmluZ1ZhbHVlLCBnZXRMZWFkaW5nQ29tbWVudEJsb2NrIH0gZnJvbSAnLi9jb21tZW50cy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VHcmFwaFFMU0RMKGxvY2F0aW9uLCByYXdTREwsIG9wdGlvbnMgPSB7fSkge1xuICAgIGxldCBkb2N1bWVudDtcbiAgICB0cnkge1xuICAgICAgICBpZiAob3B0aW9ucy5jb21tZW50RGVzY3JpcHRpb25zICYmIHJhd1NETC5pbmNsdWRlcygnIycpKSB7XG4gICAgICAgICAgICBkb2N1bWVudCA9IHRyYW5zZm9ybUNvbW1lbnRzVG9EZXNjcmlwdGlvbnMocmF3U0RMLCBvcHRpb25zKTtcbiAgICAgICAgICAgIC8vIElmIG5vTG9jYXRpb249dHJ1ZSwgd2UgbmVlZCB0byBtYWtlIHN1cmUgdG8gcHJpbnQgYW5kIHBhcnNlIGl0IGFnYWluLCB0byByZW1vdmUgbG9jYXRpb25zLFxuICAgICAgICAgICAgLy8gc2luY2UgYHRyYW5zZm9ybUNvbW1lbnRzVG9EZXNjcmlwdGlvbnNgIG11c3QgaGF2ZSBsb2NhdGlvbnMgc2V0IGluIG9yZGVyIHRvIHRyYW5zZm9ybSB0aGUgY29tbWVudHNcbiAgICAgICAgICAgIC8vIGludG8gZGVzY3JpcHRpb25zLlxuICAgICAgICAgICAgaWYgKG9wdGlvbnMubm9Mb2NhdGlvbikge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50ID0gcGFyc2UocHJpbnQoZG9jdW1lbnQpLCBvcHRpb25zKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGRvY3VtZW50ID0gcGFyc2UobmV3IEdyYXBoUUxTb3VyY2UocmF3U0RMLCBsb2NhdGlvbiksIG9wdGlvbnMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlKSB7XG4gICAgICAgIGlmIChlLm1lc3NhZ2UuaW5jbHVkZXMoJ0VPRicpICYmIHJhd1NETC5yZXBsYWNlKC8oXFwjW14qXSopL2csICcnKS50cmltKCkgPT09ICcnKSB7XG4gICAgICAgICAgICBkb2N1bWVudCA9IHtcbiAgICAgICAgICAgICAgICBraW5kOiBLaW5kLkRPQ1VNRU5ULFxuICAgICAgICAgICAgICAgIGRlZmluaXRpb25zOiBbXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGxvY2F0aW9uLFxuICAgICAgICBkb2N1bWVudCxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybUNvbW1lbnRzVG9EZXNjcmlwdGlvbnMoc291cmNlU2RsLCBvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCBwYXJzZWREb2MgPSBwYXJzZShzb3VyY2VTZGwsIHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgbm9Mb2NhdGlvbjogZmFsc2UsXG4gICAgfSk7XG4gICAgY29uc3QgbW9kaWZpZWREb2MgPSB2aXNpdChwYXJzZWREb2MsIHtcbiAgICAgICAgbGVhdmU6IChub2RlKSA9PiB7XG4gICAgICAgICAgICBpZiAoaXNEZXNjcmliYWJsZShub2RlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJhd1ZhbHVlID0gZ2V0TGVhZGluZ0NvbW1lbnRCbG9jayhub2RlKTtcbiAgICAgICAgICAgICAgICBpZiAocmF3VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjb21tZW50c0Jsb2NrID0gZGVkZW50QmxvY2tTdHJpbmdWYWx1ZSgnXFxuJyArIHJhd1ZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaXNCbG9jayA9IGNvbW1lbnRzQmxvY2suaW5jbHVkZXMoJ1xcbicpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIW5vZGUuZGVzY3JpcHRpb24pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLlNUUklORyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGNvbW1lbnRzQmxvY2ssXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJsb2NrOiBpc0Jsb2NrLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLm5vZGUuZGVzY3JpcHRpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBub2RlLmRlc2NyaXB0aW9uLnZhbHVlICsgJ1xcbicgKyBjb21tZW50c0Jsb2NrLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBibG9jazogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICByZXR1cm4gbW9kaWZpZWREb2M7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNEZXNjcmliYWJsZShub2RlKSB7XG4gICAgcmV0dXJuIChpc1R5cGVTeXN0ZW1EZWZpbml0aW9uTm9kZShub2RlKSB8fFxuICAgICAgICBub2RlLmtpbmQgPT09IEtpbmQuRklFTERfREVGSU5JVElPTiB8fFxuICAgICAgICBub2RlLmtpbmQgPT09IEtpbmQuSU5QVVRfVkFMVUVfREVGSU5JVElPTiB8fFxuICAgICAgICBub2RlLmtpbmQgPT09IEtpbmQuRU5VTV9WQUxVRV9ERUZJTklUSU9OKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/parse-graphql-sdl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromArg: () => (/* binding */ astFromArg),\n/* harmony export */   astFromDirective: () => (/* binding */ astFromDirective),\n/* harmony export */   astFromEnumType: () => (/* binding */ astFromEnumType),\n/* harmony export */   astFromEnumValue: () => (/* binding */ astFromEnumValue),\n/* harmony export */   astFromField: () => (/* binding */ astFromField),\n/* harmony export */   astFromInputField: () => (/* binding */ astFromInputField),\n/* harmony export */   astFromInputObjectType: () => (/* binding */ astFromInputObjectType),\n/* harmony export */   astFromInterfaceType: () => (/* binding */ astFromInterfaceType),\n/* harmony export */   astFromObjectType: () => (/* binding */ astFromObjectType),\n/* harmony export */   astFromScalarType: () => (/* binding */ astFromScalarType),\n/* harmony export */   astFromSchema: () => (/* binding */ astFromSchema),\n/* harmony export */   astFromUnionType: () => (/* binding */ astFromUnionType),\n/* harmony export */   getDirectiveNodes: () => (/* binding */ getDirectiveNodes),\n/* harmony export */   getDocumentNodeFromSchema: () => (/* binding */ getDocumentNodeFromSchema),\n/* harmony export */   makeDeprecatedDirective: () => (/* binding */ makeDeprecatedDirective),\n/* harmony export */   makeDirectiveNode: () => (/* binding */ makeDirectiveNode),\n/* harmony export */   makeDirectiveNodes: () => (/* binding */ makeDirectiveNodes),\n/* harmony export */   printSchemaWithDirectives: () => (/* binding */ printSchemaWithDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _astFromType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astFromType.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromType.js\");\n/* harmony import */ var _astFromValue_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astFromValue.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValue.js\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./descriptionFromObject.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\");\n/* harmony import */ var _get_directives_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./get-directives.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/get-directives.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n\n\n\n\n\n\n\n\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type);\n        const isIntrospection = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DOCUMENT,\n        definitions,\n    };\n}\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.print)(documentNode);\n}\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_6__.getRootTypeMap)(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_DEFINITION : graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    const descriptionNode = (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(schema);\n    if (descriptionNode) {\n        schemaNode.description = descriptionNode;\n    }\n    return schemaNode;\n}\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(directive),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: directive.args?.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: directive.locations?.map(location => ({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: location,\n        })) || [],\n    };\n}\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    let directiveNodesBesidesDeprecatedAndSpecifiedBy = [];\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    let deprecatedDirectiveNode = null;\n    let specifiedByDirectiveNode = null;\n    if (directives != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy = directives.filter(directive => directive.name.value !== 'deprecated' && directive.name.value !== 'specifiedBy');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = directives.filter(directive => directive.name.value === 'deprecated')?.[0];\n        }\n        if (entity.specifiedByUrl != null || entity.specifiedByURL != null) {\n            specifiedByDirectiveNode = directives.filter(directive => directive.name.value === 'specifiedBy')?.[0];\n        }\n    }\n    if (entity.deprecationReason != null && deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    if (entity.specifiedByUrl != null ||\n        (entity.specifiedByURL != null && specifiedByDirectiveNode == null)) {\n        const specifiedByValue = entity.specifiedByUrl || entity.specifiedByURL;\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        specifiedByDirectiveNode = makeDirectiveNode('specifiedBy', specifiedByArgs);\n    }\n    if (deprecatedDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(deprecatedDirectiveNode);\n    }\n    if (specifiedByDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(specifiedByDirectiveNode);\n    }\n    return directiveNodesBesidesDeprecatedAndSpecifiedBy;\n}\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(arg),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: arg.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined\n            ? ((0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(arg.defaultValue, arg.type) ?? undefined)\n            : undefined,\n        directives: getDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    const node = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace));\n    }\n    return node;\n}\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(type)),\n    };\n}\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(type, pathToDirectivesInExtensions);\n    const directives = makeDirectiveNodes(schema, directivesInExtensions);\n    const specifiedByValue = (type['specifiedByUrl'] ||\n        type['specifiedByURL']);\n    if (specifiedByValue &&\n        !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(field.defaultValue, field.type) ?? undefined,\n    };\n}\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(value),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: value.name,\n        },\n        directives: getDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDeprecatedDirective);\n}\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    for (const argName in args) {\n        const argValue = args[argName];\n        let value;\n        if (directive != null) {\n            const arg = directive.args.find(arg => arg.name === argName);\n            if (arg) {\n                value = (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(argValue, arg.type);\n            }\n        }\n        if (value == null) {\n            value = (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__.astFromValueUntyped)(argValue);\n        }\n        if (value != null) {\n            directiveArguments.push({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ARGUMENT,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: argName,\n                },\n                value,\n            });\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const { name, args } of directiveValues) {\n        const directive = schema?.getDirective(name);\n        directiveNodes.push(makeDirectiveNode(name, args, directive));\n    }\n    return directiveNodes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3Jvb3RUeXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUQ7QUFDVDtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQWtCLHdDQUF3QyxXQUFXO0FBQ25GO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QixxREFBUTtBQUN4QztBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixxREFBUTtBQUNwQztBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixxREFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3Jvb3RUeXBlcy5qcz9mOGQxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUdyYXBoUUxFcnJvciB9IGZyb20gJy4vZXJyb3JzLmpzJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnLi9tZW1vaXplLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZpbmVkUm9vdFR5cGUoc2NoZW1hLCBvcGVyYXRpb24sIG5vZGVzKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBnZXRSb290VHlwZU1hcChzY2hlbWEpO1xuICAgIGNvbnN0IHJvb3RUeXBlID0gcm9vdFR5cGVNYXAuZ2V0KG9wZXJhdGlvbik7XG4gICAgaWYgKHJvb3RUeXBlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBTY2hlbWEgaXMgbm90IGNvbmZpZ3VyZWQgdG8gZXhlY3V0ZSAke29wZXJhdGlvbn0gb3BlcmF0aW9uLmAsIHtcbiAgICAgICAgICAgIG5vZGVzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RUeXBlO1xufVxuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlTmFtZXMgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZU5hbWVzKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlcyA9IGdldFJvb3RUeXBlcyhzY2hlbWEpO1xuICAgIHJldHVybiBuZXcgU2V0KFsuLi5yb290VHlwZXNdLm1hcCh0eXBlID0+IHR5cGUubmFtZSkpO1xufSk7XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVzID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVzKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKTtcbiAgICByZXR1cm4gbmV3IFNldChyb290VHlwZU1hcC52YWx1ZXMoKSk7XG59KTtcbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZU1hcCA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlTWFwKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IHF1ZXJ5VHlwZSA9IHNjaGVtYS5nZXRRdWVyeVR5cGUoKTtcbiAgICBpZiAocXVlcnlUeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgncXVlcnknLCBxdWVyeVR5cGUpO1xuICAgIH1cbiAgICBjb25zdCBtdXRhdGlvblR5cGUgPSBzY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk7XG4gICAgaWYgKG11dGF0aW9uVHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ211dGF0aW9uJywgbXV0YXRpb25UeXBlKTtcbiAgICB9XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uVHlwZSA9IHNjaGVtYS5nZXRTdWJzY3JpcHRpb25UeXBlKCk7XG4gICAgaWYgKHN1YnNjcmlwdGlvblR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdzdWJzY3JpcHRpb24nLCBzdWJzY3JpcHRpb25UeXBlKTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RUeXBlTWFwO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/selectionSets.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/selectionSets.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSelectionSet: () => (/* binding */ parseSelectionSet)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nfunction parseSelectionSet(selectionSet, options) {\n    const query = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(selectionSet, options).definitions[0];\n    return query.selectionSet;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3NlbGVjdGlvblNldHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0M7QUFDekI7QUFDUCxrQkFBa0IsOENBQUs7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvZ3JhcGhxbC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3NlbGVjdGlvblNldHMuanM/YTNhYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU2VsZWN0aW9uU2V0KHNlbGVjdGlvblNldCwgb3B0aW9ucykge1xuICAgIGNvbnN0IHF1ZXJ5ID0gcGFyc2Uoc2VsZWN0aW9uU2V0LCBvcHRpb25zKS5kZWZpbml0aW9uc1swXTtcbiAgICByZXR1cm4gcXVlcnkuc2VsZWN0aW9uU2V0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/graphql/node_modules/@graphql-tools/utils/esm/selectionSets.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/esm/graphqlHandler.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/esm/graphqlHandler.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   graphqlHandler: () => (/* binding */ graphqlHandler)\n/* harmony export */ });\n/* harmony import */ var graphql_yoga__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql-yoga */ \"(ssr)/../node_modules/graphql-yoga/esm/server.js\");\n/* harmony import */ var graphql_yoga__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql-yoga */ \"(ssr)/../node_modules/@envelop/core/esm/plugins/use-logger.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nconst graphqlHandler = ({ getBuiltMesh, playgroundTitle, playgroundEnabled, graphqlEndpoint, corsConfig, batchingLimit, healthCheckEndpoint = '/healthcheck', extraParamNames, }) => {\n    const getYogaForMesh = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize1)(function getYogaForMesh(mesh) {\n        return (0,graphql_yoga__WEBPACK_IMPORTED_MODULE_1__.createYoga)({\n            plugins: [\n                ...mesh.plugins,\n                (0,graphql_yoga__WEBPACK_IMPORTED_MODULE_2__.useLogger)({\n                    skipIntrospection: true,\n                    logFn: (eventName, { args }) => {\n                        if (eventName.endsWith('-start')) {\n                            mesh.logger.debug(`\\t headers: `, args.contextValue.headers);\n                        }\n                    },\n                }),\n            ],\n            extraParamNames,\n            logging: mesh.logger,\n            maskedErrors: false,\n            graphiql: playgroundEnabled && {\n                title: playgroundTitle,\n            },\n            cors: corsConfig,\n            graphqlEndpoint,\n            landingPage: false,\n            batching: batchingLimit ? { limit: batchingLimit } : false,\n            healthCheckEndpoint,\n        });\n    });\n    return (request, ctx) => getBuiltMesh().then(mesh => getYogaForMesh(mesh).handleRequest(request, ctx));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9lc20vZ3JhcGhxbEhhbmRsZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRDtBQUNMO0FBQ3pDLDBCQUEwQixzSkFBc0o7QUFDdkwsMkJBQTJCLDhEQUFRO0FBQ25DLGVBQWUsd0RBQVU7QUFDekI7QUFDQTtBQUNBLGdCQUFnQix1REFBUztBQUN6QjtBQUNBLHlDQUF5QyxNQUFNO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyx1QkFBdUI7QUFDL0Q7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvZXNtL2dyYXBocWxIYW5kbGVyLmpzP2ZkMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlWW9nYSwgdXNlTG9nZ2VyIH0gZnJvbSAnZ3JhcGhxbC15b2dhJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGNvbnN0IGdyYXBocWxIYW5kbGVyID0gKHsgZ2V0QnVpbHRNZXNoLCBwbGF5Z3JvdW5kVGl0bGUsIHBsYXlncm91bmRFbmFibGVkLCBncmFwaHFsRW5kcG9pbnQsIGNvcnNDb25maWcsIGJhdGNoaW5nTGltaXQsIGhlYWx0aENoZWNrRW5kcG9pbnQgPSAnL2hlYWx0aGNoZWNrJywgZXh0cmFQYXJhbU5hbWVzLCB9KSA9PiB7XG4gICAgY29uc3QgZ2V0WW9nYUZvck1lc2ggPSBtZW1vaXplMShmdW5jdGlvbiBnZXRZb2dhRm9yTWVzaChtZXNoKSB7XG4gICAgICAgIHJldHVybiBjcmVhdGVZb2dhKHtcbiAgICAgICAgICAgIHBsdWdpbnM6IFtcbiAgICAgICAgICAgICAgICAuLi5tZXNoLnBsdWdpbnMsXG4gICAgICAgICAgICAgICAgdXNlTG9nZ2VyKHtcbiAgICAgICAgICAgICAgICAgICAgc2tpcEludHJvc3BlY3Rpb246IHRydWUsXG4gICAgICAgICAgICAgICAgICAgIGxvZ0ZuOiAoZXZlbnROYW1lLCB7IGFyZ3MgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50TmFtZS5lbmRzV2l0aCgnLXN0YXJ0JykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNoLmxvZ2dlci5kZWJ1ZyhgXFx0IGhlYWRlcnM6IGAsIGFyZ3MuY29udGV4dFZhbHVlLmhlYWRlcnMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIGV4dHJhUGFyYW1OYW1lcyxcbiAgICAgICAgICAgIGxvZ2dpbmc6IG1lc2gubG9nZ2VyLFxuICAgICAgICAgICAgbWFza2VkRXJyb3JzOiBmYWxzZSxcbiAgICAgICAgICAgIGdyYXBoaXFsOiBwbGF5Z3JvdW5kRW5hYmxlZCAmJiB7XG4gICAgICAgICAgICAgICAgdGl0bGU6IHBsYXlncm91bmRUaXRsZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBjb3JzOiBjb3JzQ29uZmlnLFxuICAgICAgICAgICAgZ3JhcGhxbEVuZHBvaW50LFxuICAgICAgICAgICAgbGFuZGluZ1BhZ2U6IGZhbHNlLFxuICAgICAgICAgICAgYmF0Y2hpbmc6IGJhdGNoaW5nTGltaXQgPyB7IGxpbWl0OiBiYXRjaGluZ0xpbWl0IH0gOiBmYWxzZSxcbiAgICAgICAgICAgIGhlYWx0aENoZWNrRW5kcG9pbnQsXG4gICAgICAgIH0pO1xuICAgIH0pO1xuICAgIHJldHVybiAocmVxdWVzdCwgY3R4KSA9PiBnZXRCdWlsdE1lc2goKS50aGVuKG1lc2ggPT4gZ2V0WW9nYUZvck1lc2gobWVzaCkuaGFuZGxlUmVxdWVzdChyZXF1ZXN0LCBjdHgpKTtcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/esm/graphqlHandler.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/esm/index.js":
/*!*******************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/esm/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMeshHTTPHandler: () => (/* binding */ createMeshHTTPHandler)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"fs\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/logger.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/fs-operations.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/with-cookies.js\");\n/* harmony import */ var _whatwg_node_server__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @whatwg-node/server */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/createServerAdapter.js\");\n/* harmony import */ var _whatwg_node_server__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @whatwg-node/server */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _graphqlHandler_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graphqlHandler.js */ \"(ssr)/../node_modules/@graphql-mesh/http/esm/graphqlHandler.js\");\n\n\n\n\nfunction createMeshHTTPHandler({ baseDir, getBuiltMesh, rawServeConfig = {}, playgroundTitle, }) {\n    let readyFlag = false;\n    let logger = new _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_0__.DefaultLogger('Mesh HTTP');\n    const { cors: corsConfig, staticFiles, playground: playgroundEnabled = \"development\" !== 'production', endpoint: graphqlPath = '/graphql', batchingLimit, healthCheckEndpoint = '/healthcheck', extraParamNames, } = rawServeConfig;\n    getBuiltMesh()\n        .then(mesh => {\n        readyFlag = true;\n        logger = mesh.logger.child('HTTP');\n    })\n        .catch(err => {\n        logger.error(err);\n    });\n    return (0,_whatwg_node_server__WEBPACK_IMPORTED_MODULE_1__.createServerAdapter)((0,_graphqlHandler_js__WEBPACK_IMPORTED_MODULE_2__.graphqlHandler)({\n        getBuiltMesh,\n        playgroundTitle,\n        playgroundEnabled,\n        graphqlEndpoint: graphqlPath,\n        corsConfig,\n        batchingLimit,\n        extraParamNames,\n    }), {\n        plugins: [\n            {\n                onRequest({ request, url, endResponse }) {\n                    switch (url.pathname) {\n                        case healthCheckEndpoint:\n                            endResponse(new _whatwg_node_server__WEBPACK_IMPORTED_MODULE_3__.Response(null, {\n                                status: 200,\n                            }));\n                            return;\n                        case '/readiness':\n                            endResponse(new _whatwg_node_server__WEBPACK_IMPORTED_MODULE_3__.Response(null, {\n                                status: readyFlag ? 204 : 503,\n                            }));\n                            return;\n                    }\n                    if (staticFiles && request.method === 'GET') {\n                        let relativePath = url.pathname;\n                        if (relativePath === '/' || !relativePath) {\n                            relativePath = 'index.html';\n                        }\n                        const absoluteStaticFilesPath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_4__.join(baseDir, staticFiles);\n                        const absolutePath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_4__.join(absoluteStaticFilesPath, relativePath);\n                        if (absolutePath.startsWith(absoluteStaticFilesPath)) {\n                            return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_5__.pathExists)(absolutePath).then(exists => {\n                                if (exists) {\n                                    const readStream = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_6__.createReadStream(absolutePath);\n                                    endResponse(new _whatwg_node_server__WEBPACK_IMPORTED_MODULE_3__.Response(readStream, {\n                                        status: 200,\n                                    }));\n                                }\n                            });\n                        }\n                    }\n                    else if (graphqlPath !== '/' && url.pathname === '/') {\n                        endResponse(new _whatwg_node_server__WEBPACK_IMPORTED_MODULE_3__.Response(null, {\n                            status: 302,\n                            headers: {\n                                Location: graphqlPath,\n                            },\n                        }));\n                        // eslint-disable-next-line no-useless-return\n                        return;\n                    }\n                    (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__.withCookies)(request);\n                    if (readyFlag) {\n                        return getBuiltMesh().then(async (mesh) => {\n                            for (const eventName of mesh.pubsub.getEventNames()) {\n                                if (eventName === `webhook:${request.method.toLowerCase()}:${url.pathname}`) {\n                                    const body = await request.text();\n                                    logger.debug(`Received webhook request for ${url.pathname}`, body);\n                                    mesh.pubsub.publish(eventName, request.headers.get('content-type') === 'application/json'\n                                        ? JSON.parse(body)\n                                        : body);\n                                    endResponse(new _whatwg_node_server__WEBPACK_IMPORTED_MODULE_3__.Response(null, {\n                                        status: 204,\n                                        statusText: 'OK',\n                                    }));\n                                    return;\n                                }\n                            }\n                        });\n                    }\n                },\n            },\n        ],\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWdFO0FBQ2E7QUFDVDtBQUNmO0FBQzlDLGlDQUFpQywwQ0FBMEMsb0JBQW9CO0FBQ3RHO0FBQ0EscUJBQXFCLDhEQUFhO0FBQ2xDLFlBQVksK0RBQStELGFBQW9CLCtIQUErSDtBQUM5TjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMLFdBQVcsd0VBQW1CLENBQUMsa0VBQWM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLDRCQUE0QiwyQkFBMkI7QUFDdkQ7QUFDQTtBQUNBLDRDQUE0Qyx5REFBUTtBQUNwRDtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0EsNENBQTRDLHlEQUFRO0FBQ3BEO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELDZEQUFTO0FBQ2pFLDZDQUE2Qyw2REFBUztBQUN0RDtBQUNBLG1DQUFtQywrREFBVTtBQUM3QztBQUNBLHVEQUF1RCx5RUFBbUI7QUFDMUUsb0RBQW9ELHlEQUFRO0FBQzVEO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyx5REFBUTtBQUNoRDtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0IseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnRUFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQSw2REFBNkQsNkJBQTZCLEdBQUcsYUFBYTtBQUMxRztBQUNBLGlGQUFpRixhQUFhO0FBQzlGO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCx5REFBUTtBQUM1RDtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvZXNtL2luZGV4LmpzP2ZjMWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnMsIHBhdGgsIHByb2Nlc3MgfSBmcm9tICdAZ3JhcGhxbC1tZXNoL2Nyb3NzLWhlbHBlcnMnO1xuaW1wb3J0IHsgRGVmYXVsdExvZ2dlciwgcGF0aEV4aXN0cywgd2l0aENvb2tpZXMgfSBmcm9tICdAZ3JhcGhxbC1tZXNoL3V0aWxzJztcbmltcG9ydCB7IGNyZWF0ZVNlcnZlckFkYXB0ZXIsIFJlc3BvbnNlIH0gZnJvbSAnQHdoYXR3Zy1ub2RlL3NlcnZlcic7XG5pbXBvcnQgeyBncmFwaHFsSGFuZGxlciB9IGZyb20gJy4vZ3JhcGhxbEhhbmRsZXIuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU1lc2hIVFRQSGFuZGxlcih7IGJhc2VEaXIsIGdldEJ1aWx0TWVzaCwgcmF3U2VydmVDb25maWcgPSB7fSwgcGxheWdyb3VuZFRpdGxlLCB9KSB7XG4gICAgbGV0IHJlYWR5RmxhZyA9IGZhbHNlO1xuICAgIGxldCBsb2dnZXIgPSBuZXcgRGVmYXVsdExvZ2dlcignTWVzaCBIVFRQJyk7XG4gICAgY29uc3QgeyBjb3JzOiBjb3JzQ29uZmlnLCBzdGF0aWNGaWxlcywgcGxheWdyb3VuZDogcGxheWdyb3VuZEVuYWJsZWQgPSBwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLCBlbmRwb2ludDogZ3JhcGhxbFBhdGggPSAnL2dyYXBocWwnLCBiYXRjaGluZ0xpbWl0LCBoZWFsdGhDaGVja0VuZHBvaW50ID0gJy9oZWFsdGhjaGVjaycsIGV4dHJhUGFyYW1OYW1lcywgfSA9IHJhd1NlcnZlQ29uZmlnO1xuICAgIGdldEJ1aWx0TWVzaCgpXG4gICAgICAgIC50aGVuKG1lc2ggPT4ge1xuICAgICAgICByZWFkeUZsYWcgPSB0cnVlO1xuICAgICAgICBsb2dnZXIgPSBtZXNoLmxvZ2dlci5jaGlsZCgnSFRUUCcpO1xuICAgIH0pXG4gICAgICAgIC5jYXRjaChlcnIgPT4ge1xuICAgICAgICBsb2dnZXIuZXJyb3IoZXJyKTtcbiAgICB9KTtcbiAgICByZXR1cm4gY3JlYXRlU2VydmVyQWRhcHRlcihncmFwaHFsSGFuZGxlcih7XG4gICAgICAgIGdldEJ1aWx0TWVzaCxcbiAgICAgICAgcGxheWdyb3VuZFRpdGxlLFxuICAgICAgICBwbGF5Z3JvdW5kRW5hYmxlZCxcbiAgICAgICAgZ3JhcGhxbEVuZHBvaW50OiBncmFwaHFsUGF0aCxcbiAgICAgICAgY29yc0NvbmZpZyxcbiAgICAgICAgYmF0Y2hpbmdMaW1pdCxcbiAgICAgICAgZXh0cmFQYXJhbU5hbWVzLFxuICAgIH0pLCB7XG4gICAgICAgIHBsdWdpbnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvblJlcXVlc3QoeyByZXF1ZXN0LCB1cmwsIGVuZFJlc3BvbnNlIH0pIHtcbiAgICAgICAgICAgICAgICAgICAgc3dpdGNoICh1cmwucGF0aG5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgaGVhbHRoQ2hlY2tFbmRwb2ludDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRSZXNwb25zZShuZXcgUmVzcG9uc2UobnVsbCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnL3JlYWRpbmVzcyc6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kUmVzcG9uc2UobmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiByZWFkeUZsYWcgPyAyMDQgOiA1MDMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoc3RhdGljRmlsZXMgJiYgcmVxdWVzdC5tZXRob2QgPT09ICdHRVQnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgcmVsYXRpdmVQYXRoID0gdXJsLnBhdGhuYW1lO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlbGF0aXZlUGF0aCA9PT0gJy8nIHx8ICFyZWxhdGl2ZVBhdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWxhdGl2ZVBhdGggPSAnaW5kZXguaHRtbCc7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhYnNvbHV0ZVN0YXRpY0ZpbGVzUGF0aCA9IHBhdGguam9pbihiYXNlRGlyLCBzdGF0aWNGaWxlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhYnNvbHV0ZVBhdGggPSBwYXRoLmpvaW4oYWJzb2x1dGVTdGF0aWNGaWxlc1BhdGgsIHJlbGF0aXZlUGF0aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWJzb2x1dGVQYXRoLnN0YXJ0c1dpdGgoYWJzb2x1dGVTdGF0aWNGaWxlc1BhdGgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhdGhFeGlzdHMoYWJzb2x1dGVQYXRoKS50aGVuKGV4aXN0cyA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChleGlzdHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlYWRTdHJlYW0gPSBmcy5jcmVhdGVSZWFkU3RyZWFtKGFic29sdXRlUGF0aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmRSZXNwb25zZShuZXcgUmVzcG9uc2UocmVhZFN0cmVhbSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoZ3JhcGhxbFBhdGggIT09ICcvJyAmJiB1cmwucGF0aG5hbWUgPT09ICcvJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZW5kUmVzcG9uc2UobmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDMwMixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIExvY2F0aW9uOiBncmFwaHFsUGF0aCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgd2l0aENvb2tpZXMocmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZWFkeUZsYWcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBnZXRCdWlsdE1lc2goKS50aGVuKGFzeW5jIChtZXNoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBldmVudE5hbWUgb2YgbWVzaC5wdWJzdWIuZ2V0RXZlbnROYW1lcygpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChldmVudE5hbWUgPT09IGB3ZWJob29rOiR7cmVxdWVzdC5tZXRob2QudG9Mb3dlckNhc2UoKX06JHt1cmwucGF0aG5hbWV9YCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYm9keSA9IGF3YWl0IHJlcXVlc3QudGV4dCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbG9nZ2VyLmRlYnVnKGBSZWNlaXZlZCB3ZWJob29rIHJlcXVlc3QgZm9yICR7dXJsLnBhdGhuYW1lfWAsIGJvZHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWVzaC5wdWJzdWIucHVibGlzaChldmVudE5hbWUsIHJlcXVlc3QuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpID09PSAnYXBwbGljYXRpb24vanNvbidcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IEpTT04ucGFyc2UoYm9keSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IGJvZHkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW5kUmVzcG9uc2UobmV3IFJlc3BvbnNlKG51bGwsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXM6IDIwNCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXSxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/fs-operations.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/fs-operations.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mkdir: () => (/* binding */ mkdir),\n/* harmony export */   pathExists: () => (/* binding */ pathExists),\n/* harmony export */   rmdirs: () => (/* binding */ rmdirs),\n/* harmony export */   writeFile: () => (/* binding */ writeFile),\n/* harmony export */   writeJSON: () => (/* binding */ writeJSON)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"fs\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n\nasync function pathExists(path) {\n    if (!path) {\n        return false;\n    }\n    try {\n        await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.stat(path);\n        return true;\n    }\n    catch (e) {\n        if (e.toString().includes('ENOENT')) {\n            return false;\n        }\n        else {\n            throw e;\n        }\n    }\n}\nfunction writeJSON(path, data, replacer, space) {\n    const stringified = JSON.stringify(data, replacer, space);\n    return writeFile(path, stringified, 'utf-8');\n}\nconst writeFile = async (path, ...args) => {\n    if (typeof path === 'string') {\n        const containingDir = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.dirname(path);\n        if (!(await pathExists(containingDir))) {\n            await mkdir(containingDir);\n        }\n    }\n    return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(path, ...args);\n};\nasync function mkdir(path, \n/**\n * Copied from fs.MakeDirectoryOptions.\n * TODO: somehow import it without depending on Node\n */\noptions = { recursive: true }) {\n    const ifExists = await pathExists(path);\n    if (!ifExists) {\n        await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(path, options);\n    }\n}\nasync function rmdirs(dir) {\n    if (await pathExists(dir)) {\n        const entries = await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.readdir(dir, { withFileTypes: true });\n        const results = await Promise.allSettled(entries.map(entry => {\n            const fullPath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.join(dir, entry.name);\n            if (entry.isDirectory()) {\n                return rmdirs(fullPath);\n            }\n            else {\n                return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.unlink(fullPath);\n            }\n        }));\n        for (const result of results) {\n            if (result.status === 'rejected' && result.reason.code !== 'ENOENT') {\n                throw result.reason;\n            }\n        }\n        await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.rmdir(dir);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZnMtb3BlcmF0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXFFO0FBQzlEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlFQUFXO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSw4QkFBOEIsZ0VBQWtCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpRUFBVztBQUN0QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGlCQUFpQjtBQUM3QjtBQUNBO0FBQ0EsY0FBYyxpRUFBVztBQUN6QjtBQUNBO0FBQ087QUFDUDtBQUNBLDhCQUE4QixpRUFBVyxnQkFBZ0IscUJBQXFCO0FBQzlFO0FBQ0EsNkJBQTZCLDZEQUFlO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLGlFQUFXO0FBQ2xDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLGlFQUFXO0FBQ3pCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL2h0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2ZzLW9wZXJhdGlvbnMuanM/OGNlYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcywgcGF0aCBhcyBwYXRoTW9kdWxlIH0gZnJvbSAnQGdyYXBocWwtbWVzaC9jcm9zcy1oZWxwZXJzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwYXRoRXhpc3RzKHBhdGgpIHtcbiAgICBpZiAoIXBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBmcy5wcm9taXNlcy5zdGF0KHBhdGgpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGUudG9TdHJpbmcoKS5pbmNsdWRlcygnRU5PRU5UJykpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gd3JpdGVKU09OKHBhdGgsIGRhdGEsIHJlcGxhY2VyLCBzcGFjZSkge1xuICAgIGNvbnN0IHN0cmluZ2lmaWVkID0gSlNPTi5zdHJpbmdpZnkoZGF0YSwgcmVwbGFjZXIsIHNwYWNlKTtcbiAgICByZXR1cm4gd3JpdGVGaWxlKHBhdGgsIHN0cmluZ2lmaWVkLCAndXRmLTgnKTtcbn1cbmV4cG9ydCBjb25zdCB3cml0ZUZpbGUgPSBhc3luYyAocGF0aCwgLi4uYXJncykgPT4ge1xuICAgIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgY29udGFpbmluZ0RpciA9IHBhdGhNb2R1bGUuZGlybmFtZShwYXRoKTtcbiAgICAgICAgaWYgKCEoYXdhaXQgcGF0aEV4aXN0cyhjb250YWluaW5nRGlyKSkpIHtcbiAgICAgICAgICAgIGF3YWl0IG1rZGlyKGNvbnRhaW5pbmdEaXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmcy5wcm9taXNlcy53cml0ZUZpbGUocGF0aCwgLi4uYXJncyk7XG59O1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1rZGlyKHBhdGgsIFxuLyoqXG4gKiBDb3BpZWQgZnJvbSBmcy5NYWtlRGlyZWN0b3J5T3B0aW9ucy5cbiAqIFRPRE86IHNvbWVob3cgaW1wb3J0IGl0IHdpdGhvdXQgZGVwZW5kaW5nIG9uIE5vZGVcbiAqL1xub3B0aW9ucyA9IHsgcmVjdXJzaXZlOiB0cnVlIH0pIHtcbiAgICBjb25zdCBpZkV4aXN0cyA9IGF3YWl0IHBhdGhFeGlzdHMocGF0aCk7XG4gICAgaWYgKCFpZkV4aXN0cykge1xuICAgICAgICBhd2FpdCBmcy5wcm9taXNlcy5ta2RpcihwYXRoLCBvcHRpb25zKTtcbiAgICB9XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcm1kaXJzKGRpcikge1xuICAgIGlmIChhd2FpdCBwYXRoRXhpc3RzKGRpcikpIHtcbiAgICAgICAgY29uc3QgZW50cmllcyA9IGF3YWl0IGZzLnByb21pc2VzLnJlYWRkaXIoZGlyLCB7IHdpdGhGaWxlVHlwZXM6IHRydWUgfSk7XG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSBhd2FpdCBQcm9taXNlLmFsbFNldHRsZWQoZW50cmllcy5tYXAoZW50cnkgPT4ge1xuICAgICAgICAgICAgY29uc3QgZnVsbFBhdGggPSBwYXRoTW9kdWxlLmpvaW4oZGlyLCBlbnRyeS5uYW1lKTtcbiAgICAgICAgICAgIGlmIChlbnRyeS5pc0RpcmVjdG9yeSgpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJtZGlycyhmdWxsUGF0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZnMucHJvbWlzZXMudW5saW5rKGZ1bGxQYXRoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSkpO1xuICAgICAgICBmb3IgKGNvbnN0IHJlc3VsdCBvZiByZXN1bHRzKSB7XG4gICAgICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gJ3JlamVjdGVkJyAmJiByZXN1bHQucmVhc29uLmNvZGUgIT09ICdFTk9FTlQnKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgcmVzdWx0LnJlYXNvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBhd2FpdCBmcy5wcm9taXNlcy5ybWRpcihkaXIpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/fs-operations.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/logger.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/logger.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultLogger: () => (/* binding */ DefaultLogger),\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   debugColor: () => (/* binding */ debugColor),\n/* harmony export */   errorColor: () => (/* binding */ errorColor),\n/* harmony export */   infoColor: () => (/* binding */ infoColor),\n/* harmony export */   titleBold: () => (/* binding */ titleBold),\n/* harmony export */   warnColor: () => (/* binding */ warnColor)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"process\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"util\");\n\nconst ANSI_CODES = {\n    black: '\\x1b[30m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m',\n    reset: '\\x1b[0m',\n    bold: '\\x1b[1m',\n    orange: '\\x1b[48:5:166m',\n};\nconst warnColor = msg => ANSI_CODES.orange + msg + ANSI_CODES.reset;\nconst infoColor = msg => ANSI_CODES.cyan + msg + ANSI_CODES.reset;\nconst errorColor = msg => ANSI_CODES.red + msg + ANSI_CODES.reset;\nconst debugColor = msg => ANSI_CODES.magenta + msg + ANSI_CODES.reset;\nconst titleBold = msg => ANSI_CODES.bold + msg + ANSI_CODES.reset;\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"debug\"] = 0] = \"debug\";\n    LogLevel[LogLevel[\"info\"] = 1] = \"info\";\n    LogLevel[LogLevel[\"warn\"] = 2] = \"warn\";\n    LogLevel[LogLevel[\"error\"] = 3] = \"error\";\n    LogLevel[LogLevel[\"silent\"] = 4] = \"silent\";\n})(LogLevel || (LogLevel = {}));\nconst noop = () => { };\nfunction truthy(str) {\n    return str === true || str === 1 || ['1', 't', 'true', 'y', 'yes'].includes(String(str));\n}\nfunction getTimestamp() {\n    return new Date().toISOString();\n}\nclass DefaultLogger {\n    constructor(name, logLevel = truthy(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG) ? LogLevel.debug : LogLevel.info, trim) {\n        this.name = name;\n        this.logLevel = logLevel;\n        this.trim = trim;\n    }\n    getLoggerMessage({ args = [] }) {\n        return args\n            .flat(Infinity)\n            .map(arg => {\n            if (typeof arg === 'string') {\n                if (this.trim && arg.length > this.trim) {\n                    return (arg.slice(0, this.trim) +\n                        '...' +\n                        '<Message is trimmed. Enable DEBUG=1 to see the full message.>');\n                }\n                return arg;\n            }\n            else if (typeof arg === 'object' && arg?.stack != null) {\n                return arg.stack;\n            }\n            return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.inspect(arg);\n        })\n            .join(' ');\n    }\n    handleLazyMessage({ lazyArgs }) {\n        const flattenedArgs = lazyArgs.flat(Infinity).flatMap(arg => {\n            if (typeof arg === 'function') {\n                return arg();\n            }\n            return arg;\n        });\n        return this.getLoggerMessage({ args: flattenedArgs });\n    }\n    get isDebug() {\n        if (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG) {\n            return (truthy(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG) ||\n                truthy(globalThis.DEBUG) ||\n                this.name.includes(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG || globalThis.DEBUG));\n        }\n        return false;\n    }\n    get prefix() {\n        return this.name ? titleBold(this.name) : ``;\n    }\n    log(...args) {\n        if (this.logLevel > LogLevel.info) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({ args });\n        const fullMessage = `[${getTimestamp()}] ${this.prefix} ${message}`;\n        if (/*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write(fullMessage + '\\n')) {\n            return;\n        }\n        console.log(fullMessage);\n    }\n    warn(...args) {\n        if (this.logLevel > LogLevel.warn) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({ args });\n        const fullMessage = `[${getTimestamp()}] ${this.prefix} WARN  ${warnColor(message)}`;\n        if (/*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write(fullMessage + '\\n')) {\n            return;\n        }\n        console.warn(fullMessage);\n    }\n    info(...args) {\n        if (this.logLevel > LogLevel.info) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({\n            args,\n        });\n        const fullMessage = `[${getTimestamp()}] INFO  ${this.prefix} ${infoColor(message)}`;\n        if (typeof /*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write === 'function') {\n            _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.stderr.write(fullMessage + '\\n');\n            return;\n        }\n        console.info(fullMessage);\n    }\n    error(...args) {\n        if (this.logLevel > LogLevel.error) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({ args });\n        const fullMessage = `[${getTimestamp()}] ERROR ${this.prefix} ${errorColor(message)}`;\n        if (typeof /*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write === 'function') {\n            _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.stderr.write(fullMessage + '\\n');\n            return;\n        }\n        console.error(fullMessage);\n    }\n    debug(...lazyArgs) {\n        if (this.logLevel > LogLevel.debug) {\n            return noop;\n        }\n        if (this.isDebug) {\n            const message = this.handleLazyMessage({\n                lazyArgs,\n            });\n            const fullMessage = `[${getTimestamp()}] DEBUG ${this.prefix} ${debugColor(message)}`;\n            if (typeof /*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write === 'function') {\n                _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.stderr.write(fullMessage + '\\n');\n                return;\n            }\n            console.debug(fullMessage);\n        }\n    }\n    child(name) {\n        if (this.name?.includes(name)) {\n            return this;\n        }\n        return new DefaultLogger(this.name ? `${this.name} - ${name}` : name, this.logLevel);\n    }\n    addPrefix(prefix) {\n        if (!this.name?.includes(prefix)) {\n            this.name = this.name ? `${this.name} - ${prefix}` : prefix;\n        }\n        return this;\n    }\n    toJSON() {\n        return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/logger.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/with-cookies.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/with-cookies.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withCookies: () => (/* binding */ withCookies)\n/* harmony export */ });\n// withCookies - embeds cookies object into the request\nconst withCookies = (request) => {\n    request.cookies = {};\n    try {\n        request.cookies = (request.headers.get('Cookie') || '')\n            .split(/;\\s*/)\n            .map(pair => pair.split(/=(.+)/))\n            .reduce((acc, [key, value]) => {\n            acc[key] = value;\n            return acc;\n        }, {});\n    }\n    catch (err) { }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vd2l0aC1jb29raWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9odHRwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3V0aWxzL2VzbS93aXRoLWNvb2tpZXMuanM/YzdhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB3aXRoQ29va2llcyAtIGVtYmVkcyBjb29raWVzIG9iamVjdCBpbnRvIHRoZSByZXF1ZXN0XG5leHBvcnQgY29uc3Qgd2l0aENvb2tpZXMgPSAocmVxdWVzdCkgPT4ge1xuICAgIHJlcXVlc3QuY29va2llcyA9IHt9O1xuICAgIHRyeSB7XG4gICAgICAgIHJlcXVlc3QuY29va2llcyA9IChyZXF1ZXN0LmhlYWRlcnMuZ2V0KCdDb29raWUnKSB8fCAnJylcbiAgICAgICAgICAgIC5zcGxpdCgvO1xccyovKVxuICAgICAgICAgICAgLm1hcChwYWlyID0+IHBhaXIuc3BsaXQoLz0oLispLykpXG4gICAgICAgICAgICAucmVkdWNlKChhY2MsIFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgYWNjW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgIHJldHVybiBhY2M7XG4gICAgICAgIH0sIHt9KTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycikgeyB9XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-mesh/utils/esm/with-cookies.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/createServerAdapter.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/createServerAdapter.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createServerAdapter: () => (/* binding */ createServerAdapter)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/utils.js\");\n/* harmony import */ var _uwebsockets_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./uwebsockets.js */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/uwebsockets.js\");\n/* eslint-disable @typescript-eslint/ban-types */\n\n\n\nasync function handleWaitUntils(waitUntilPromises) {\n    await Promise.allSettled(waitUntilPromises);\n}\n// Required for envs like nextjs edge runtime\nfunction isRequestAccessible(serverContext) {\n    try {\n        return !!serverContext?.request;\n    }\n    catch {\n        return false;\n    }\n}\nconst EMPTY_OBJECT = {};\nfunction createServerAdapter(serverAdapterBaseObject, options) {\n    const fetchAPI = {\n        .../*#__PURE__*/ (_whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__, 2))),\n        ...options?.fetchAPI,\n    };\n    const givenHandleRequest = typeof serverAdapterBaseObject === 'function'\n        ? serverAdapterBaseObject\n        : serverAdapterBaseObject.handle;\n    const onRequestHooks = [];\n    const onResponseHooks = [];\n    if (options?.plugins != null) {\n        for (const plugin of options.plugins) {\n            if (plugin.onRequest) {\n                onRequestHooks.push(plugin.onRequest);\n            }\n            if (plugin.onResponse) {\n                onResponseHooks.push(plugin.onResponse);\n            }\n        }\n    }\n    const handleRequest = onRequestHooks.length > 0 || onResponseHooks.length > 0\n        ? function handleRequest(request, serverContext) {\n            let requestHandler = givenHandleRequest;\n            let response;\n            if (onRequestHooks.length === 0) {\n                return handleEarlyResponse();\n            }\n            let url = new Proxy(EMPTY_OBJECT, {\n                get(_target, prop, _receiver) {\n                    url = new fetchAPI.URL(request.url, 'http://localhost');\n                    return Reflect.get(url, prop, url);\n                },\n            });\n            const onRequestHooksIteration$ = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.iterateAsyncVoid)(onRequestHooks, (onRequestHook, stopEarly) => onRequestHook({\n                request,\n                setRequest(newRequest) {\n                    request = newRequest;\n                },\n                serverContext,\n                fetchAPI,\n                url,\n                requestHandler,\n                setRequestHandler(newRequestHandler) {\n                    requestHandler = newRequestHandler;\n                },\n                endResponse(newResponse) {\n                    response = newResponse;\n                    if (newResponse) {\n                        stopEarly();\n                    }\n                },\n            }));\n            function handleResponse(response) {\n                if (onResponseHooks.length === 0) {\n                    return response;\n                }\n                const onResponseHookPayload = {\n                    request,\n                    response,\n                    serverContext,\n                    setResponse(newResponse) {\n                        response = newResponse;\n                    },\n                    fetchAPI,\n                };\n                const onResponseHooksIteration$ = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.iterateAsyncVoid)(onResponseHooks, onResponseHook => onResponseHook(onResponseHookPayload));\n                if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isPromise)(onResponseHooksIteration$)) {\n                    return onResponseHooksIteration$.then(() => response);\n                }\n                return response;\n            }\n            function handleEarlyResponse() {\n                if (!response) {\n                    const response$ = requestHandler(request, serverContext);\n                    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isPromise)(response$)) {\n                        return response$.then(handleResponse);\n                    }\n                    return handleResponse(response$);\n                }\n                return handleResponse(response);\n            }\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isPromise)(onRequestHooksIteration$)) {\n                return onRequestHooksIteration$.then(handleEarlyResponse);\n            }\n            return handleEarlyResponse();\n        }\n        : givenHandleRequest;\n    // TODO: Remove this on the next major version\n    function handleNodeRequest(nodeRequest, ...ctx) {\n        const serverContext = ctx.length > 1 ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.completeAssign)(...ctx) : ctx[0] || {};\n        const request = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.normalizeNodeRequest)(nodeRequest, fetchAPI.Request);\n        return handleRequest(request, serverContext);\n    }\n    function handleNodeRequestAndResponse(nodeRequest, nodeResponseOrContainer, ...ctx) {\n        const nodeResponse = nodeResponseOrContainer.raw || nodeResponseOrContainer;\n        _utils_js__WEBPACK_IMPORTED_MODULE_1__.nodeRequestResponseMap.set(nodeRequest, nodeResponse);\n        return handleNodeRequest(nodeRequest, ...ctx);\n    }\n    function requestListener(nodeRequest, nodeResponse, ...ctx) {\n        const waitUntilPromises = [];\n        const defaultServerContext = {\n            req: nodeRequest,\n            res: nodeResponse,\n            waitUntil(cb) {\n                waitUntilPromises.push(cb.catch(err => console.error(err)));\n            },\n        };\n        let response$;\n        try {\n            response$ = handleNodeRequestAndResponse(nodeRequest, nodeResponse, defaultServerContext, ...ctx);\n        }\n        catch (err) {\n            response$ = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.handleErrorFromRequestHandler)(err, fetchAPI.Response);\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isPromise)(response$)) {\n            return response$\n                .catch((e) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.handleErrorFromRequestHandler)(e, fetchAPI.Response))\n                .then(response => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sendNodeResponse)(response, nodeResponse, nodeRequest))\n                .catch(err => {\n                console.error(`Unexpected error while handling request: ${err.message || err}`);\n            });\n        }\n        try {\n            return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.sendNodeResponse)(response$, nodeResponse, nodeRequest);\n        }\n        catch (err) {\n            console.error(`Unexpected error while handling request: ${err.message || err}`);\n        }\n    }\n    function handleUWS(res, req, ...ctx) {\n        const waitUntilPromises = [];\n        const defaultServerContext = {\n            res,\n            req,\n            waitUntil(cb) {\n                waitUntilPromises.push(cb.catch(err => console.error(err)));\n            },\n        };\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.completeAssign)(defaultServerContext, ...ctx)\n            : defaultServerContext;\n        const signal = new _utils_js__WEBPACK_IMPORTED_MODULE_1__.ServerAdapterRequestAbortSignal();\n        const originalResEnd = res.end.bind(res);\n        let resEnded = false;\n        res.end = function (data) {\n            resEnded = true;\n            return originalResEnd(data);\n        };\n        const originalOnAborted = res.onAborted.bind(res);\n        originalOnAborted(function () {\n            signal.sendAbort();\n        });\n        res.onAborted = function (cb) {\n            signal.addEventListener('abort', cb);\n        };\n        const request = (0,_uwebsockets_js__WEBPACK_IMPORTED_MODULE_2__.getRequestFromUWSRequest)({\n            req,\n            res,\n            fetchAPI,\n            signal,\n        });\n        let response$;\n        try {\n            response$ = handleRequest(request, serverContext);\n        }\n        catch (err) {\n            response$ = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.handleErrorFromRequestHandler)(err, fetchAPI.Response);\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isPromise)(response$)) {\n            return response$\n                .catch((e) => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.handleErrorFromRequestHandler)(e, fetchAPI.Response))\n                .then(response => {\n                if (!signal.aborted && !resEnded) {\n                    return (0,_uwebsockets_js__WEBPACK_IMPORTED_MODULE_2__.sendResponseToUwsOpts)(res, response, signal);\n                }\n            })\n                .catch(err => {\n                console.error(`Unexpected error while handling request: \\n${err.stack || err.message || err}`);\n            });\n        }\n        try {\n            if (!signal.aborted && !resEnded) {\n                return (0,_uwebsockets_js__WEBPACK_IMPORTED_MODULE_2__.sendResponseToUwsOpts)(res, response$, signal);\n            }\n        }\n        catch (err) {\n            console.error(`Unexpected error while handling request: \\n${err.stack || err.message || err}`);\n        }\n    }\n    function handleEvent(event, ...ctx) {\n        if (!event.respondWith || !event.request) {\n            throw new TypeError(`Expected FetchEvent, got ${event}`);\n        }\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        const serverContext = filteredCtxParts.length > 0\n            ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.completeAssign)({}, event, ...filteredCtxParts)\n            : (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isolateObject)(event);\n        const response$ = handleRequest(event.request, serverContext);\n        event.respondWith(response$);\n    }\n    function handleRequestWithWaitUntil(request, ...ctx) {\n        const filteredCtxParts = ctx.filter(partCtx => partCtx != null);\n        let waitUntilPromises;\n        const serverContext = filteredCtxParts.length > 1\n            ? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.completeAssign)({}, ...filteredCtxParts)\n            : (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isolateObject)(filteredCtxParts[0], filteredCtxParts[0] == null || filteredCtxParts[0].waitUntil == null\n                ? (waitUntilPromises = [])\n                : undefined);\n        const response$ = handleRequest(request, serverContext);\n        if (waitUntilPromises?.length) {\n            return handleWaitUntils(waitUntilPromises).then(() => response$);\n        }\n        return response$;\n    }\n    const fetchFn = (input, ...maybeCtx) => {\n        if (typeof input === 'string' || 'href' in input) {\n            const [initOrCtx, ...restOfCtx] = maybeCtx;\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isRequestInit)(initOrCtx)) {\n                const request = new fetchAPI.Request(input, initOrCtx);\n                const res$ = handleRequestWithWaitUntil(request, ...restOfCtx);\n                return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.handleAbortSignalAndPromiseResponse)(res$, initOrCtx?.signal);\n            }\n            const request = new fetchAPI.Request(input);\n            return handleRequestWithWaitUntil(request, ...maybeCtx);\n        }\n        const res$ = handleRequestWithWaitUntil(input, ...maybeCtx);\n        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.handleAbortSignalAndPromiseResponse)(res$, input._signal);\n    };\n    const genericRequestHandler = (input, ...maybeCtx) => {\n        // If it is a Node request\n        const [initOrCtxOrRes, ...restOfCtx] = maybeCtx;\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isNodeRequest)(input)) {\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServerResponse)(initOrCtxOrRes)) {\n                throw new TypeError(`Expected ServerResponse, got ${initOrCtxOrRes}`);\n            }\n            return requestListener(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0,_uwebsockets_js__WEBPACK_IMPORTED_MODULE_2__.isUWSResponse)(input)) {\n            return handleUWS(input, initOrCtxOrRes, ...restOfCtx);\n        }\n        if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServerResponse)(initOrCtxOrRes)) {\n            throw new TypeError('Got Node response without Node request');\n        }\n        // Is input a container object over Request?\n        if (isRequestAccessible(input)) {\n            // Is it FetchEvent?\n            if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.isFetchEvent)(input)) {\n                return handleEvent(input, ...maybeCtx);\n            }\n            // In this input is also the context\n            return handleRequestWithWaitUntil(input.request, input, ...maybeCtx);\n        }\n        // Or is it Request itself?\n        // Then ctx is present and it is the context\n        return fetchFn(input, ...maybeCtx);\n    };\n    const adapterObj = {\n        handleRequest: handleRequestWithWaitUntil,\n        fetch: fetchFn,\n        handleNodeRequest,\n        handleNodeRequestAndResponse,\n        requestListener,\n        handleEvent,\n        handleUWS,\n        handle: genericRequestHandler,\n    };\n    const serverAdapter = new Proxy(genericRequestHandler, {\n        // It should have all the attributes of the handler function and the server instance\n        has: (_, prop) => {\n            return (prop in adapterObj ||\n                prop in genericRequestHandler ||\n                (serverAdapterBaseObject && prop in serverAdapterBaseObject));\n        },\n        get: (_, prop) => {\n            const adapterProp = adapterObj[prop];\n            if (adapterProp) {\n                if (adapterProp.bind) {\n                    return adapterProp.bind(adapterObj);\n                }\n                return adapterProp;\n            }\n            const handleProp = genericRequestHandler[prop];\n            if (handleProp) {\n                if (handleProp.bind) {\n                    return handleProp.bind(genericRequestHandler);\n                }\n                return handleProp;\n            }\n            if (serverAdapterBaseObject) {\n                const serverAdapterBaseObjectProp = serverAdapterBaseObject[prop];\n                if (serverAdapterBaseObjectProp) {\n                    if (serverAdapterBaseObjectProp.bind) {\n                        return function (...args) {\n                            const returnedVal = serverAdapterBaseObject[prop](...args);\n                            if (returnedVal === serverAdapterBaseObject) {\n                                return serverAdapter;\n                            }\n                            return returnedVal;\n                        };\n                    }\n                    return serverAdapterBaseObjectProp;\n                }\n            }\n        },\n        apply(_, __, args) {\n            return genericRequestHandler(...args);\n        },\n    });\n    return serverAdapter;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/createServerAdapter.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/utils.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/utils.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ServerAdapterRequestAbortSignal: () => (/* binding */ ServerAdapterRequestAbortSignal),\n/* harmony export */   completeAssign: () => (/* binding */ completeAssign),\n/* harmony export */   createDeferredPromise: () => (/* binding */ createDeferredPromise),\n/* harmony export */   decompressedResponseMap: () => (/* binding */ decompressedResponseMap),\n/* harmony export */   getSupportedEncodings: () => (/* binding */ getSupportedEncodings),\n/* harmony export */   handleAbortSignalAndPromiseResponse: () => (/* binding */ handleAbortSignalAndPromiseResponse),\n/* harmony export */   handleErrorFromRequestHandler: () => (/* binding */ handleErrorFromRequestHandler),\n/* harmony export */   handleResponseDecompression: () => (/* binding */ handleResponseDecompression),\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable),\n/* harmony export */   isFetchEvent: () => (/* binding */ isFetchEvent),\n/* harmony export */   isNodeRequest: () => (/* binding */ isNodeRequest),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   isReadable: () => (/* binding */ isReadable),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream),\n/* harmony export */   isRequestInit: () => (/* binding */ isRequestInit),\n/* harmony export */   isServerResponse: () => (/* binding */ isServerResponse),\n/* harmony export */   isolateObject: () => (/* binding */ isolateObject),\n/* harmony export */   iterateAsyncVoid: () => (/* binding */ iterateAsyncVoid),\n/* harmony export */   nodeRequestResponseMap: () => (/* binding */ nodeRequestResponseMap),\n/* harmony export */   normalizeNodeRequest: () => (/* binding */ normalizeNodeRequest),\n/* harmony export */   sendNodeResponse: () => (/* binding */ sendNodeResponse)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n\nfunction isAsyncIterable(body) {\n    return (body != null && typeof body === 'object' && typeof body[Symbol.asyncIterator] === 'function');\n}\nfunction getPort(nodeRequest) {\n    if (nodeRequest.socket?.localPort) {\n        return nodeRequest.socket?.localPort;\n    }\n    const hostInHeader = nodeRequest.headers?.[':authority'] || nodeRequest.headers?.host;\n    const portInHeader = hostInHeader?.split(':')?.[1];\n    if (portInHeader) {\n        return portInHeader;\n    }\n    return 80;\n}\nfunction getHostnameWithPort(nodeRequest) {\n    if (nodeRequest.headers?.[':authority']) {\n        return nodeRequest.headers?.[':authority'];\n    }\n    if (nodeRequest.headers?.host) {\n        return nodeRequest.headers?.host;\n    }\n    const port = getPort(nodeRequest);\n    if (nodeRequest.hostname) {\n        return nodeRequest.hostname + ':' + port;\n    }\n    const localIp = nodeRequest.socket?.localAddress;\n    if (localIp && !localIp?.includes('::') && !localIp?.includes('ffff')) {\n        return `${localIp}:${port}`;\n    }\n    return 'localhost';\n}\nfunction buildFullUrl(nodeRequest) {\n    const hostnameWithPort = getHostnameWithPort(nodeRequest);\n    const protocol = nodeRequest.protocol || (nodeRequest.socket?.encrypted ? 'https' : 'http');\n    const endpoint = nodeRequest.originalUrl || nodeRequest.url || '/graphql';\n    return `${protocol}://${hostnameWithPort}${endpoint}`;\n}\nfunction isRequestBody(body) {\n    const stringTag = body[Symbol.toStringTag];\n    if (typeof body === 'string' ||\n        stringTag === 'Uint8Array' ||\n        stringTag === 'Blob' ||\n        stringTag === 'FormData' ||\n        stringTag === 'URLSearchParams' ||\n        isAsyncIterable(body)) {\n        return true;\n    }\n    return false;\n}\nclass ServerAdapterRequestAbortSignal extends EventTarget {\n    aborted = false;\n    _onabort = null;\n    reason;\n    throwIfAborted() {\n        if (this.aborted) {\n            throw this.reason;\n        }\n    }\n    sendAbort() {\n        this.reason = new DOMException('This operation was aborted', 'AbortError');\n        this.aborted = true;\n        this.dispatchEvent(new Event('abort'));\n    }\n    get onabort() {\n        return this._onabort;\n    }\n    set onabort(value) {\n        this._onabort = value;\n        if (value) {\n            this.addEventListener('abort', value);\n        }\n        else {\n            this.removeEventListener('abort', value);\n        }\n    }\n    any(signals) {\n        return AbortSignal.any([...signals]);\n    }\n}\nlet bunNodeCompatModeWarned = false;\nconst nodeRequestResponseMap = new WeakMap();\nfunction normalizeNodeRequest(nodeRequest, RequestCtor) {\n    const rawRequest = nodeRequest.raw || nodeRequest.req || nodeRequest;\n    let fullUrl = buildFullUrl(rawRequest);\n    if (nodeRequest.query) {\n        const url = new _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__.URL(fullUrl);\n        for (const key in nodeRequest.query) {\n            url.searchParams.set(key, nodeRequest.query[key]);\n        }\n        fullUrl = url.toString();\n    }\n    let signal;\n    const nodeResponse = nodeRequestResponseMap.get(nodeRequest);\n    nodeRequestResponseMap.delete(nodeRequest);\n    let normalizedHeaders = nodeRequest.headers;\n    if (nodeRequest.headers?.[':method']) {\n        normalizedHeaders = {};\n        for (const key in nodeRequest.headers) {\n            if (!key.startsWith(':')) {\n                normalizedHeaders[key] = nodeRequest.headers[key];\n            }\n        }\n    }\n    if (nodeResponse?.once) {\n        let sendAbortSignal;\n        // If ponyfilled\n        if (RequestCtor !== globalThis.Request) {\n            signal = new ServerAdapterRequestAbortSignal();\n            sendAbortSignal = () => signal.sendAbort();\n        }\n        else {\n            const controller = new AbortController();\n            signal = controller.signal;\n            sendAbortSignal = () => controller.abort();\n        }\n        const closeEventListener = () => {\n            if (signal && !signal.aborted) {\n                rawRequest.aborted = true;\n                sendAbortSignal();\n            }\n        };\n        nodeResponse.once('error', closeEventListener);\n        nodeResponse.once('close', closeEventListener);\n        nodeResponse.once('finish', () => {\n            nodeResponse.removeListener('close', closeEventListener);\n        });\n    }\n    if (nodeRequest.method === 'GET' || nodeRequest.method === 'HEAD') {\n        return new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            signal,\n        });\n    }\n    /**\n     * Some Node server frameworks like Serverless Express sends a dummy object with body but as a Buffer not string\n     * so we do those checks to see is there something we can use directly as BodyInit\n     * because the presence of body means the request stream is already consumed and,\n     * rawRequest cannot be used as BodyInit/ReadableStream by Fetch API in this case.\n     */\n    const maybeParsedBody = nodeRequest.body;\n    if (maybeParsedBody != null && Object.keys(maybeParsedBody).length > 0) {\n        if (isRequestBody(maybeParsedBody)) {\n            return new RequestCtor(fullUrl, {\n                method: nodeRequest.method,\n                headers: normalizedHeaders,\n                body: maybeParsedBody,\n                signal,\n            });\n        }\n        const request = new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            signal,\n        });\n        if (!request.headers.get('content-type')?.includes('json')) {\n            request.headers.set('content-type', 'application/json; charset=utf-8');\n        }\n        return new Proxy(request, {\n            get: (target, prop, receiver) => {\n                switch (prop) {\n                    case 'json':\n                        return async () => maybeParsedBody;\n                    case 'text':\n                        return async () => JSON.stringify(maybeParsedBody);\n                    default:\n                        return Reflect.get(target, prop, receiver);\n                }\n            },\n        });\n    }\n    // Temporary workaround for a bug in Bun Node compat mode\n    if (globalThis.process?.versions?.bun && isReadable(rawRequest)) {\n        if (!bunNodeCompatModeWarned) {\n            bunNodeCompatModeWarned = true;\n            console.warn(`You use Bun Node compatibility mode, which is not recommended!\nIt will affect your performance. Please check our Bun integration recipe, and avoid using 'http' for your server implementation.`);\n        }\n        return new RequestCtor(fullUrl, {\n            method: nodeRequest.method,\n            headers: normalizedHeaders,\n            duplex: 'half',\n            body: new ReadableStream({\n                start(controller) {\n                    rawRequest.on('data', chunk => {\n                        controller.enqueue(chunk);\n                    });\n                    rawRequest.on('error', e => {\n                        controller.error(e);\n                    });\n                    rawRequest.on('end', () => {\n                        controller.close();\n                    });\n                },\n                cancel(e) {\n                    rawRequest.destroy(e);\n                },\n            }),\n            signal,\n        });\n    }\n    // perf: instead of spreading the object, we can just pass it as is and it performs better\n    return new RequestCtor(fullUrl, {\n        method: nodeRequest.method,\n        headers: normalizedHeaders,\n        body: rawRequest,\n        duplex: 'half',\n        signal,\n    });\n}\nfunction isReadable(stream) {\n    return stream.read != null;\n}\nfunction isNodeRequest(request) {\n    return isReadable(request);\n}\nfunction isServerResponse(stream) {\n    // Check all used functions are defined\n    return (stream != null &&\n        stream.setHeader != null &&\n        stream.end != null &&\n        stream.once != null &&\n        stream.write != null);\n}\nfunction isReadableStream(stream) {\n    return stream != null && stream.getReader != null;\n}\nfunction isFetchEvent(event) {\n    return event != null && event.request != null && event.respondWith != null;\n}\nfunction configureSocket(rawRequest) {\n    rawRequest?.socket?.setTimeout?.(0);\n    rawRequest?.socket?.setNoDelay?.(true);\n    rawRequest?.socket?.setKeepAlive?.(true);\n}\nfunction endResponse(serverResponse) {\n    // @ts-expect-error Avoid arguments adaptor trampoline https://v8.dev/blog/adaptor-frame\n    serverResponse.end(null, null, null);\n}\nasync function sendAsyncIterable(serverResponse, asyncIterable) {\n    let closed = false;\n    const closeEventListener = () => {\n        closed = true;\n    };\n    serverResponse.once('error', closeEventListener);\n    serverResponse.once('close', closeEventListener);\n    serverResponse.once('finish', () => {\n        serverResponse.removeListener('close', closeEventListener);\n    });\n    for await (const chunk of asyncIterable) {\n        if (closed) {\n            break;\n        }\n        if (!serverResponse\n            // @ts-expect-error http and http2 writes are actually compatible\n            .write(chunk)) {\n            if (closed) {\n                break;\n            }\n            await new Promise(resolve => serverResponse.once('drain', resolve));\n        }\n    }\n    endResponse(serverResponse);\n}\nfunction sendNodeResponse(fetchResponse, serverResponse, nodeRequest) {\n    if (serverResponse.closed || serverResponse.destroyed || serverResponse.writableEnded) {\n        return;\n    }\n    if (!fetchResponse) {\n        serverResponse.statusCode = 404;\n        serverResponse.end();\n        return;\n    }\n    serverResponse.statusCode = fetchResponse.status;\n    serverResponse.statusMessage = fetchResponse.statusText;\n    let setCookiesSet = false;\n    fetchResponse.headers.forEach((value, key) => {\n        if (key === 'set-cookie') {\n            if (setCookiesSet) {\n                return;\n            }\n            setCookiesSet = true;\n            const setCookies = fetchResponse.headers.getSetCookie?.();\n            if (setCookies) {\n                serverResponse.setHeader('set-cookie', setCookies);\n                return;\n            }\n        }\n        serverResponse.setHeader(key, value);\n    });\n    // Optimizations for node-fetch\n    const bufOfRes = fetchResponse._buffer;\n    if (bufOfRes) {\n        // @ts-expect-error http and http2 writes are actually compatible\n        serverResponse.write(bufOfRes);\n        endResponse(serverResponse);\n        return;\n    }\n    // Other fetch implementations\n    const fetchBody = fetchResponse.body;\n    if (fetchBody == null) {\n        endResponse(serverResponse);\n        return;\n    }\n    if (fetchBody[Symbol.toStringTag] === 'Uint8Array') {\n        serverResponse\n            // @ts-expect-error http and http2 writes are actually compatible\n            .write(fetchBody);\n        endResponse(serverResponse);\n        return;\n    }\n    configureSocket(nodeRequest);\n    if (isReadable(fetchBody)) {\n        serverResponse.once('close', () => {\n            fetchBody.destroy();\n        });\n        fetchBody.pipe(serverResponse);\n        return;\n    }\n    if (isAsyncIterable(fetchBody)) {\n        return sendAsyncIterable(serverResponse, fetchBody);\n    }\n}\nfunction isRequestInit(val) {\n    return (val != null &&\n        typeof val === 'object' &&\n        ('body' in val ||\n            'cache' in val ||\n            'credentials' in val ||\n            'headers' in val ||\n            'integrity' in val ||\n            'keepalive' in val ||\n            'method' in val ||\n            'mode' in val ||\n            'redirect' in val ||\n            'referrer' in val ||\n            'referrerPolicy' in val ||\n            'signal' in val ||\n            'window' in val));\n}\n// from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign#copying_accessors\nfunction completeAssign(...args) {\n    const [target, ...sources] = args.filter(arg => arg != null && typeof arg === 'object');\n    sources.forEach(source => {\n        // modified Object.keys to Object.getOwnPropertyNames\n        // because Object.keys only returns enumerable properties\n        const descriptors = Object.getOwnPropertyNames(source).reduce((descriptors, key) => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, key);\n            if (descriptor) {\n                descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\n            }\n            return descriptors;\n        }, {});\n        // By default, Object.assign copies enumerable Symbols, too\n        Object.getOwnPropertySymbols(source).forEach(sym => {\n            const descriptor = Object.getOwnPropertyDescriptor(source, sym);\n            if (descriptor?.enumerable) {\n                descriptors[sym] = descriptor;\n            }\n        });\n        Object.defineProperties(target, descriptors);\n    });\n    return target;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction iterateAsyncVoid(iterable, callback) {\n    const iterator = iterable[Symbol.iterator]();\n    let stopEarlyFlag = false;\n    function stopEarlyFn() {\n        stopEarlyFlag = true;\n    }\n    function iterate() {\n        const { done: endOfIterator, value } = iterator.next();\n        if (endOfIterator) {\n            return;\n        }\n        const result$ = callback(value, stopEarlyFn);\n        if (isPromise(result$)) {\n            return result$.then(() => {\n                if (stopEarlyFlag) {\n                    return;\n                }\n                return iterate();\n            });\n        }\n        if (stopEarlyFlag) {\n            return;\n        }\n        return iterate();\n    }\n    return iterate();\n}\nfunction handleErrorFromRequestHandler(error, ResponseCtor) {\n    return new ResponseCtor(error.stack || error.message || error.toString(), {\n        status: error.status || 500,\n    });\n}\nfunction isolateObject(originalCtx, waitUntilPromises) {\n    if (originalCtx == null) {\n        if (waitUntilPromises == null) {\n            return {};\n        }\n        originalCtx = {};\n    }\n    const extraProps = {};\n    const deletedProps = new Set();\n    return new Proxy(originalCtx, {\n        get(originalCtx, prop) {\n            if (waitUntilPromises != null && prop === 'waitUntil') {\n                return function waitUntil(promise) {\n                    waitUntilPromises.push(promise.catch(err => console.error(err)));\n                };\n            }\n            const extraPropVal = extraProps[prop];\n            if (extraPropVal != null) {\n                if (typeof extraPropVal === 'function') {\n                    return extraPropVal.bind(extraProps);\n                }\n                return extraPropVal;\n            }\n            if (deletedProps.has(prop)) {\n                return undefined;\n            }\n            return originalCtx[prop];\n        },\n        set(_originalCtx, prop, value) {\n            extraProps[prop] = value;\n            return true;\n        },\n        has(originalCtx, prop) {\n            if (waitUntilPromises != null && prop === 'waitUntil') {\n                return true;\n            }\n            if (deletedProps.has(prop)) {\n                return false;\n            }\n            if (prop in extraProps) {\n                return true;\n            }\n            return prop in originalCtx;\n        },\n        defineProperty(_originalCtx, prop, descriptor) {\n            return Reflect.defineProperty(extraProps, prop, descriptor);\n        },\n        deleteProperty(_originalCtx, prop) {\n            if (prop in extraProps) {\n                return Reflect.deleteProperty(extraProps, prop);\n            }\n            deletedProps.add(prop);\n            return true;\n        },\n        ownKeys(originalCtx) {\n            const extraKeys = Reflect.ownKeys(extraProps);\n            const originalKeys = Reflect.ownKeys(originalCtx);\n            const deletedKeys = Array.from(deletedProps);\n            const allKeys = new Set(extraKeys.concat(originalKeys.filter(keys => !deletedKeys.includes(keys))));\n            if (waitUntilPromises != null) {\n                allKeys.add('waitUntil');\n            }\n            return Array.from(allKeys);\n        },\n        getOwnPropertyDescriptor(originalCtx, prop) {\n            if (prop in extraProps) {\n                return Reflect.getOwnPropertyDescriptor(extraProps, prop);\n            }\n            if (deletedProps.has(prop)) {\n                return undefined;\n            }\n            return Reflect.getOwnPropertyDescriptor(originalCtx, prop);\n        },\n    });\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\nfunction handleAbortSignalAndPromiseResponse(response$, abortSignal) {\n    if (isPromise(response$) && abortSignal) {\n        const deferred$ = createDeferredPromise();\n        abortSignal.addEventListener('abort', function abortSignalFetchErrorHandler() {\n            deferred$.reject(abortSignal.reason);\n        });\n        response$\n            .then(function fetchSuccessHandler(res) {\n            deferred$.resolve(res);\n        })\n            .catch(function fetchErrorHandler(err) {\n            deferred$.reject(err);\n        });\n        return deferred$.promise;\n    }\n    return response$;\n}\nconst decompressedResponseMap = new WeakMap();\nconst supportedEncodingsByFetchAPI = new WeakMap();\nfunction getSupportedEncodings(fetchAPI) {\n    let supportedEncodings = supportedEncodingsByFetchAPI.get(fetchAPI);\n    if (!supportedEncodings) {\n        const possibleEncodings = ['deflate', 'gzip', 'deflate-raw', 'br'];\n        if (fetchAPI.DecompressionStream['supportedFormats']) {\n            supportedEncodings = fetchAPI.DecompressionStream['supportedFormats'];\n        }\n        else {\n            supportedEncodings = possibleEncodings.filter(encoding => {\n                // deflate-raw is not supported in Node.js >v20\n                if (globalThis.process?.version?.startsWith('v2') &&\n                    fetchAPI.DecompressionStream === globalThis.DecompressionStream &&\n                    encoding === 'deflate-raw') {\n                    return false;\n                }\n                try {\n                    // eslint-disable-next-line no-new\n                    new fetchAPI.DecompressionStream(encoding);\n                    return true;\n                }\n                catch {\n                    return false;\n                }\n            });\n        }\n        supportedEncodingsByFetchAPI.set(fetchAPI, supportedEncodings);\n    }\n    return supportedEncodings;\n}\nfunction handleResponseDecompression(response, fetchAPI) {\n    const contentEncodingHeader = response?.headers.get('content-encoding');\n    if (!contentEncodingHeader || contentEncodingHeader === 'none') {\n        return response;\n    }\n    if (!response?.body) {\n        return response;\n    }\n    let decompressedResponse = decompressedResponseMap.get(response);\n    if (!decompressedResponse || decompressedResponse.bodyUsed) {\n        let decompressedBody = response.body;\n        const contentEncodings = contentEncodingHeader.split(',');\n        if (!contentEncodings.every(encoding => getSupportedEncodings(fetchAPI).includes(encoding))) {\n            return new fetchAPI.Response(`Unsupported 'Content-Encoding': ${contentEncodingHeader}`, {\n                status: 415,\n                statusText: 'Unsupported Media Type',\n            });\n        }\n        for (const contentEncoding of contentEncodings) {\n            decompressedBody = decompressedBody.pipeThrough(new fetchAPI.DecompressionStream(contentEncoding));\n        }\n        decompressedResponse = new fetchAPI.Response(decompressedBody, response);\n        decompressedResponseMap.set(response, decompressedResponse);\n    }\n    return decompressedResponse;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/uwebsockets.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/uwebsockets.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRequestFromUWSRequest: () => (/* binding */ getRequestFromUWSRequest),\n/* harmony export */   isUWSResponse: () => (/* binding */ isUWSResponse),\n/* harmony export */   sendResponseToUwsOpts: () => (/* binding */ sendResponseToUwsOpts)\n/* harmony export */ });\nfunction isUWSResponse(res) {\n    return !!res.onData;\n}\nfunction getRequestFromUWSRequest({ req, res, fetchAPI, signal }) {\n    let body;\n    const method = req.getMethod();\n    if (method !== 'get' && method !== 'head') {\n        let controller;\n        body = new fetchAPI.ReadableStream({\n            start(c) {\n                controller = c;\n            },\n        });\n        const readable = body.readable;\n        if (readable) {\n            signal.addEventListener('abort', () => {\n                readable.push(null);\n            });\n            res.onData(function (ab, isLast) {\n                const chunk = Buffer.from(ab, 0, ab.byteLength);\n                readable.push(Buffer.from(chunk));\n                if (isLast) {\n                    readable.push(null);\n                }\n            });\n        }\n        else {\n            let closed = false;\n            signal.addEventListener('abort', () => {\n                if (!closed) {\n                    closed = true;\n                    controller.close();\n                }\n            });\n            res.onData(function (ab, isLast) {\n                const chunk = Buffer.from(ab, 0, ab.byteLength);\n                controller.enqueue(Buffer.from(chunk));\n                if (isLast) {\n                    closed = true;\n                    controller.close();\n                }\n            });\n        }\n    }\n    const headers = new fetchAPI.Headers();\n    req.forEach((key, value) => {\n        headers.append(key, value);\n    });\n    let url = `http://localhost${req.getUrl()}`;\n    const query = req.getQuery();\n    if (query) {\n        url += `?${query}`;\n    }\n    return new fetchAPI.Request(url, {\n        method,\n        headers,\n        body: body,\n        signal,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore - not in the TS types yet\n        duplex: 'half',\n    });\n}\nasync function forwardResponseBodyToUWSResponse(uwsResponse, fetchResponse, signal) {\n    for await (const chunk of fetchResponse.body) {\n        if (signal.aborted) {\n            return;\n        }\n        uwsResponse.cork(() => {\n            uwsResponse.write(chunk);\n        });\n    }\n    uwsResponse.cork(() => {\n        uwsResponse.end();\n    });\n}\nfunction sendResponseToUwsOpts(uwsResponse, fetchResponse, signal) {\n    if (!fetchResponse) {\n        uwsResponse.writeStatus('404 Not Found');\n        uwsResponse.end();\n        return;\n    }\n    const bufferOfRes = fetchResponse._buffer;\n    if (signal.aborted) {\n        return;\n    }\n    uwsResponse.cork(() => {\n        uwsResponse.writeStatus(`${fetchResponse.status} ${fetchResponse.statusText}`);\n        for (const [key, value] of fetchResponse.headers) {\n            // content-length causes an error with Node.js's fetch\n            if (key !== 'content-length') {\n                if (key === 'set-cookie') {\n                    const setCookies = fetchResponse.headers.getSetCookie?.();\n                    if (setCookies) {\n                        for (const setCookie of setCookies) {\n                            uwsResponse.writeHeader(key, setCookie);\n                        }\n                        continue;\n                    }\n                }\n                uwsResponse.writeHeader(key, value);\n            }\n        }\n        if (bufferOfRes) {\n            uwsResponse.end(bufferOfRes);\n        }\n    });\n    if (bufferOfRes) {\n        return;\n    }\n    if (!fetchResponse.body) {\n        uwsResponse.end();\n        return;\n    }\n    return forwardResponseBodyToUWSResponse(uwsResponse, fetchResponse, signal);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9lc20vdXdlYnNvY2tldHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ08sb0NBQW9DLDRCQUE0QjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxpQ0FBaUMsYUFBYTtBQUM5QztBQUNBO0FBQ0EsbUJBQW1CLE1BQU07QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxzQkFBc0IsRUFBRSx5QkFBeUI7QUFDcEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL3NlcnZlci9lc20vdXdlYnNvY2tldHMuanM/ZjNkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNVV1NSZXNwb25zZShyZXMpIHtcbiAgICByZXR1cm4gISFyZXMub25EYXRhO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFJlcXVlc3RGcm9tVVdTUmVxdWVzdCh7IHJlcSwgcmVzLCBmZXRjaEFQSSwgc2lnbmFsIH0pIHtcbiAgICBsZXQgYm9keTtcbiAgICBjb25zdCBtZXRob2QgPSByZXEuZ2V0TWV0aG9kKCk7XG4gICAgaWYgKG1ldGhvZCAhPT0gJ2dldCcgJiYgbWV0aG9kICE9PSAnaGVhZCcpIHtcbiAgICAgICAgbGV0IGNvbnRyb2xsZXI7XG4gICAgICAgIGJvZHkgPSBuZXcgZmV0Y2hBUEkuUmVhZGFibGVTdHJlYW0oe1xuICAgICAgICAgICAgc3RhcnQoYykge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIgPSBjO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlYWRhYmxlID0gYm9keS5yZWFkYWJsZTtcbiAgICAgICAgaWYgKHJlYWRhYmxlKSB7XG4gICAgICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVhZGFibGUucHVzaChudWxsKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzLm9uRGF0YShmdW5jdGlvbiAoYWIsIGlzTGFzdCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gQnVmZmVyLmZyb20oYWIsIDAsIGFiLmJ5dGVMZW5ndGgpO1xuICAgICAgICAgICAgICAgIHJlYWRhYmxlLnB1c2goQnVmZmVyLmZyb20oY2h1bmspKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNMYXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJlYWRhYmxlLnB1c2gobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBsZXQgY2xvc2VkID0gZmFsc2U7XG4gICAgICAgICAgICBzaWduYWwuYWRkRXZlbnRMaXN0ZW5lcignYWJvcnQnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFjbG9zZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmVzLm9uRGF0YShmdW5jdGlvbiAoYWIsIGlzTGFzdCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNodW5rID0gQnVmZmVyLmZyb20oYWIsIDAsIGFiLmJ5dGVMZW5ndGgpO1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShjaHVuaykpO1xuICAgICAgICAgICAgICAgIGlmIChpc0xhc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgY2xvc2VkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGhlYWRlcnMgPSBuZXcgZmV0Y2hBUEkuSGVhZGVycygpO1xuICAgIHJlcS5mb3JFYWNoKChrZXksIHZhbHVlKSA9PiB7XG4gICAgICAgIGhlYWRlcnMuYXBwZW5kKGtleSwgdmFsdWUpO1xuICAgIH0pO1xuICAgIGxldCB1cmwgPSBgaHR0cDovL2xvY2FsaG9zdCR7cmVxLmdldFVybCgpfWA7XG4gICAgY29uc3QgcXVlcnkgPSByZXEuZ2V0UXVlcnkoKTtcbiAgICBpZiAocXVlcnkpIHtcbiAgICAgICAgdXJsICs9IGA/JHtxdWVyeX1gO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IGZldGNoQVBJLlJlcXVlc3QodXJsLCB7XG4gICAgICAgIG1ldGhvZCxcbiAgICAgICAgaGVhZGVycyxcbiAgICAgICAgYm9keTogYm9keSxcbiAgICAgICAgc2lnbmFsLFxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L2Jhbi10cy1jb21tZW50XG4gICAgICAgIC8vIEB0cy1pZ25vcmUgLSBub3QgaW4gdGhlIFRTIHR5cGVzIHlldFxuICAgICAgICBkdXBsZXg6ICdoYWxmJyxcbiAgICB9KTtcbn1cbmFzeW5jIGZ1bmN0aW9uIGZvcndhcmRSZXNwb25zZUJvZHlUb1VXU1Jlc3BvbnNlKHV3c1Jlc3BvbnNlLCBmZXRjaFJlc3BvbnNlLCBzaWduYWwpIHtcbiAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIGZldGNoUmVzcG9uc2UuYm9keSkge1xuICAgICAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB1d3NSZXNwb25zZS5jb3JrKCgpID0+IHtcbiAgICAgICAgICAgIHV3c1Jlc3BvbnNlLndyaXRlKGNodW5rKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHV3c1Jlc3BvbnNlLmNvcmsoKCkgPT4ge1xuICAgICAgICB1d3NSZXNwb25zZS5lbmQoKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZW5kUmVzcG9uc2VUb1V3c09wdHModXdzUmVzcG9uc2UsIGZldGNoUmVzcG9uc2UsIHNpZ25hbCkge1xuICAgIGlmICghZmV0Y2hSZXNwb25zZSkge1xuICAgICAgICB1d3NSZXNwb25zZS53cml0ZVN0YXR1cygnNDA0IE5vdCBGb3VuZCcpO1xuICAgICAgICB1d3NSZXNwb25zZS5lbmQoKTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBidWZmZXJPZlJlcyA9IGZldGNoUmVzcG9uc2UuX2J1ZmZlcjtcbiAgICBpZiAoc2lnbmFsLmFib3J0ZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICB1d3NSZXNwb25zZS5jb3JrKCgpID0+IHtcbiAgICAgICAgdXdzUmVzcG9uc2Uud3JpdGVTdGF0dXMoYCR7ZmV0Y2hSZXNwb25zZS5zdGF0dXN9ICR7ZmV0Y2hSZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgICBmb3IgKGNvbnN0IFtrZXksIHZhbHVlXSBvZiBmZXRjaFJlc3BvbnNlLmhlYWRlcnMpIHtcbiAgICAgICAgICAgIC8vIGNvbnRlbnQtbGVuZ3RoIGNhdXNlcyBhbiBlcnJvciB3aXRoIE5vZGUuanMncyBmZXRjaFxuICAgICAgICAgICAgaWYgKGtleSAhPT0gJ2NvbnRlbnQtbGVuZ3RoJykge1xuICAgICAgICAgICAgICAgIGlmIChrZXkgPT09ICdzZXQtY29va2llJykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBzZXRDb29raWVzID0gZmV0Y2hSZXNwb25zZS5oZWFkZXJzLmdldFNldENvb2tpZT8uKCk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzZXRDb29raWVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHNldENvb2tpZSBvZiBzZXRDb29raWVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXdzUmVzcG9uc2Uud3JpdGVIZWFkZXIoa2V5LCBzZXRDb29raWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgdXdzUmVzcG9uc2Uud3JpdGVIZWFkZXIoa2V5LCB2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJ1ZmZlck9mUmVzKSB7XG4gICAgICAgICAgICB1d3NSZXNwb25zZS5lbmQoYnVmZmVyT2ZSZXMpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKGJ1ZmZlck9mUmVzKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKCFmZXRjaFJlc3BvbnNlLmJvZHkpIHtcbiAgICAgICAgdXdzUmVzcG9uc2UuZW5kKCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgcmV0dXJuIGZvcndhcmRSZXNwb25zZUJvZHlUb1VXU1Jlc3BvbnNlKHV3c1Jlc3BvbnNlLCBmZXRjaFJlc3BvbnNlLCBzaWduYWwpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/http/node_modules/@whatwg-node/server/esm/uwebsockets.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/esm/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/esm/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StitchingMerger)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var _graphql_mesh_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/store */ \"(ssr)/../node_modules/@graphql-mesh/store/esm/index.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/utils/esm/extract-resolvers.js\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/schema/esm/addResolversToSchema.js\");\n/* harmony import */ var _graphql_tools_stitch__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/stitch */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchSchemas.js\");\n/* harmony import */ var _graphql_tools_stitch__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-tools/stitch */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/types.js\");\n/* harmony import */ var _graphql_tools_stitching_directives__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/stitching-directives */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/federationToStitchingSDL.js\");\n/* harmony import */ var _graphql_tools_stitching_directives__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/stitching-directives */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n\n\n\n\n\n\n\nconst APOLLO_GET_SERVICE_DEFINITION_QUERY = /* GraphQL */ `\n  query __ApolloGetServiceDefinition__ {\n    _service {\n      sdl\n    }\n  }\n`;\nclass StitchingMerger {\n    constructor(options) {\n        this.name = 'stitching';\n        this.logger = options.logger;\n        this.store = options.store;\n    }\n    isFederatedSchema(schema) {\n        const queryType = schema.getQueryType();\n        if (queryType) {\n            const queryFields = queryType.getFields();\n            return '_service' in queryFields;\n        }\n        return false;\n    }\n    async replaceFederationSDLWithStitchingSDL(name, oldSchema, executor, stitchingDirectives) {\n        const rawSourceLogger = this.logger.child(name);\n        rawSourceLogger.debug(`Extracting existing resolvers if available`);\n        const resolvers = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_0__.extractResolvers)(oldSchema);\n        let newSchema = await this.store\n            .proxy(`${name}_stitching`, _graphql_mesh_store__WEBPACK_IMPORTED_MODULE_1__.PredefinedProxyOptions.GraphQLSchemaWithDiffing)\n            .getWithSet(async () => {\n            var _a, _b, _c;\n            this.logger.debug(`Fetching Apollo Federated Service SDL for ${name}`);\n            let federationSdl;\n            if ((_b = (_a = oldSchema.extensions) === null || _a === void 0 ? void 0 : _a.directives) === null || _b === void 0 ? void 0 : _b.link) {\n                federationSdl = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.printSchemaWithDirectives)(oldSchema);\n            }\n            else {\n                const sdlQueryResult = (await executor({\n                    document: (0,graphql__WEBPACK_IMPORTED_MODULE_3__.parse)(APOLLO_GET_SERVICE_DEFINITION_QUERY),\n                }));\n                if ((_c = sdlQueryResult.errors) === null || _c === void 0 ? void 0 : _c.length) {\n                    throw new _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.AggregateError(sdlQueryResult.errors, `Failed on fetching Federated SDL for ${name}`);\n                }\n                federationSdl = sdlQueryResult.data._service.sdl;\n            }\n            this.logger.debug(`Generating Stitching SDL for ${name}`);\n            const stitchingSdl = (0,_graphql_tools_stitching_directives__WEBPACK_IMPORTED_MODULE_5__.federationToStitchingSDL)(federationSdl, stitchingDirectives);\n            return (0,graphql__WEBPACK_IMPORTED_MODULE_6__.buildSchema)(stitchingSdl, {\n                assumeValid: true,\n                assumeValidSDL: true,\n            });\n        });\n        rawSourceLogger.debug(`Adding existing resolvers back to the schema`);\n        newSchema = (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_7__.addResolversToSchema)({\n            schema: newSchema,\n            resolvers,\n            updateResolversInPlace: true,\n            resolverValidationOptions: {\n                requireResolversToMatchSchema: 'ignore',\n            },\n        });\n        newSchema.extensions = oldSchema.extensions;\n        return newSchema;\n    }\n    async getUnifiedSchema(context) {\n        const { rawSources, typeDefs, resolvers } = context;\n        this.logger.debug(`Stitching directives are being generated`);\n        const defaultStitchingDirectives = (0,_graphql_tools_stitching_directives__WEBPACK_IMPORTED_MODULE_8__.stitchingDirectives)({\n            pathToDirectivesInExtensions: ['directives'],\n        });\n        this.logger.debug(`Checking if any of sources has federation metadata`);\n        const subschemas = await Promise.all(rawSources.map(async (rawSource) => {\n            if (rawSource.batch == null) {\n                rawSource.batch = true;\n            }\n            if (this.isFederatedSchema(rawSource.schema)) {\n                this.logger.debug(`${rawSource.name} has federated schema.`);\n                rawSource.schema = await this.replaceFederationSDLWithStitchingSDL(rawSource.name, rawSource.schema, rawSource.executor, defaultStitchingDirectives);\n            }\n            rawSource.merge =\n                defaultStitchingDirectives.stitchingDirectivesTransformer(rawSource).merge;\n            return rawSource;\n        }));\n        this.logger.debug(`Stitching the source schemas`);\n        const unifiedSchema = (0,_graphql_tools_stitch__WEBPACK_IMPORTED_MODULE_9__.stitchSchemas)({\n            subschemas,\n            typeDefs,\n            resolvers,\n            typeMergingOptions: {\n                validationSettings: {\n                    validationLevel: _graphql_tools_stitch__WEBPACK_IMPORTED_MODULE_10__.ValidationLevel.Off,\n                },\n            },\n            mergeDirectives: true,\n        });\n        this.logger.debug(`sourceMap is being generated and attached to the unified schema`);\n        unifiedSchema.extensions = unifiedSchema.extensions || {};\n        Object.assign(unifiedSchema.extensions, {\n            sourceMap: new Proxy({}, {\n                get: (_, pKey) => {\n                    if (pKey === 'get') {\n                        return (rawSource) => {\n                            const stitchingInfo = unifiedSchema.extensions.stitchingInfo;\n                            for (const [subschemaConfig, subschema] of stitchingInfo.subschemaMap) {\n                                if (subschemaConfig.name === rawSource.name) {\n                                    return subschema.transformedSchema;\n                                }\n                            }\n                            return undefined;\n                        };\n                    }\n                    return () => {\n                        throw new Error('Not Implemented');\n                    };\n                },\n            }),\n        });\n        return {\n            schema: unifiedSchema,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Subschema.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Subschema.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subschema: () => (/* binding */ Subschema),\n/* harmony export */   isSubschema: () => (/* binding */ isSubschema)\n/* harmony export */ });\n/* harmony import */ var _applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applySchemaTransforms.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n\nfunction isSubschema(value) {\n    return Boolean(value.transformedSchema);\n}\nclass Subschema {\n    constructor(config) {\n        var _a;\n        this.schema = config.schema;\n        this.executor = config.executor;\n        this.batch = config.batch;\n        this.batchingOptions = config.batchingOptions;\n        this.createProxyingResolver = config.createProxyingResolver;\n        this.transforms = (_a = config.transforms) !== null && _a !== void 0 ? _a : [];\n        this.merge = config.merge;\n    }\n    get transformedSchema() {\n        var _a, _b;\n        if (!this._transformedSchema) {\n            if (((_b = (_a = globalThis.process) === null || _a === void 0 ? void 0 : _a.env) === null || _b === void 0 ? void 0 : _b['DEBUG']) != null) {\n                console.warn('Transformed schema is not set yet. Returning a dummy one.');\n            }\n            this._transformedSchema = (0,_applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_0__.applySchemaTransforms)(this.schema, this);\n        }\n        return this._transformedSchema;\n    }\n    set transformedSchema(value) {\n        this._transformedSchema = value;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL1N1YnNjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBbUU7QUFDNUQ7QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxnRkFBcUI7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9TdWJzY2hlbWEuanM/NTY0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcHBseVNjaGVtYVRyYW5zZm9ybXMgfSBmcm9tICcuL2FwcGx5U2NoZW1hVHJhbnNmb3Jtcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaXNTdWJzY2hlbWEodmFsdWUpIHtcbiAgICByZXR1cm4gQm9vbGVhbih2YWx1ZS50cmFuc2Zvcm1lZFNjaGVtYSk7XG59XG5leHBvcnQgY2xhc3MgU3Vic2NoZW1hIHtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLnNjaGVtYSA9IGNvbmZpZy5zY2hlbWE7XG4gICAgICAgIHRoaXMuZXhlY3V0b3IgPSBjb25maWcuZXhlY3V0b3I7XG4gICAgICAgIHRoaXMuYmF0Y2ggPSBjb25maWcuYmF0Y2g7XG4gICAgICAgIHRoaXMuYmF0Y2hpbmdPcHRpb25zID0gY29uZmlnLmJhdGNoaW5nT3B0aW9ucztcbiAgICAgICAgdGhpcy5jcmVhdGVQcm94eWluZ1Jlc29sdmVyID0gY29uZmlnLmNyZWF0ZVByb3h5aW5nUmVzb2x2ZXI7XG4gICAgICAgIHRoaXMudHJhbnNmb3JtcyA9IChfYSA9IGNvbmZpZy50cmFuc2Zvcm1zKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICAgICAgdGhpcy5tZXJnZSA9IGNvbmZpZy5tZXJnZTtcbiAgICB9XG4gICAgZ2V0IHRyYW5zZm9ybWVkU2NoZW1hKCkge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICBpZiAoIXRoaXMuX3RyYW5zZm9ybWVkU2NoZW1hKSB7XG4gICAgICAgICAgICBpZiAoKChfYiA9IChfYSA9IGdsb2JhbFRoaXMucHJvY2VzcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmVudikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iWydERUJVRyddKSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdUcmFuc2Zvcm1lZCBzY2hlbWEgaXMgbm90IHNldCB5ZXQuIFJldHVybmluZyBhIGR1bW15IG9uZS4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMuX3RyYW5zZm9ybWVkU2NoZW1hID0gYXBwbHlTY2hlbWFUcmFuc2Zvcm1zKHRoaXMuc2NoZW1hLCB0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5fdHJhbnNmb3JtZWRTY2hlbWE7XG4gICAgfVxuICAgIHNldCB0cmFuc2Zvcm1lZFNjaGVtYSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl90cmFuc2Zvcm1lZFNjaGVtYSA9IHZhbHVlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Subschema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Transformer.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Transformer.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transformer: () => (/* binding */ Transformer)\n/* harmony export */ });\n/* harmony import */ var _prepareGatewayDocument_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prepareGatewayDocument.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js\");\n/* harmony import */ var _finalizeGatewayRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./finalizeGatewayRequest.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js\");\n/* harmony import */ var _checkResultAndHandleErrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./checkResultAndHandleErrors.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js\");\n\n\n\nclass Transformer {\n    constructor(context) {\n        this.transformations = [];\n        this.delegationContext = context;\n        const transforms = context.transforms;\n        const delegationTransforms = transforms.slice().reverse();\n        for (const transform of delegationTransforms) {\n            this.addTransform(transform, {});\n        }\n    }\n    addTransform(transform, context = {}) {\n        this.transformations.push({ transform, context });\n    }\n    transformRequest(originalRequest) {\n        var _a;\n        let request = {\n            ...originalRequest,\n            document: (0,_prepareGatewayDocument_js__WEBPACK_IMPORTED_MODULE_0__.prepareGatewayDocument)(originalRequest.document, this.delegationContext.transformedSchema, this.delegationContext.returnType, (_a = this.delegationContext.info) === null || _a === void 0 ? void 0 : _a.schema),\n        };\n        for (const transformation of this.transformations) {\n            if (transformation.transform.transformRequest) {\n                request = transformation.transform.transformRequest(request, this.delegationContext, transformation.context);\n            }\n        }\n        return (0,_finalizeGatewayRequest_js__WEBPACK_IMPORTED_MODULE_1__.finalizeGatewayRequest)(request, this.delegationContext);\n    }\n    transformResult(originalResult) {\n        let result = originalResult;\n        // from right to left\n        for (let i = this.transformations.length - 1; i >= 0; i--) {\n            const transformation = this.transformations[i];\n            if (transformation.transform.transformResult) {\n                result = transformation.transform.transformResult(result, this.delegationContext, transformation.context);\n            }\n        }\n        return (0,_checkResultAndHandleErrors_js__WEBPACK_IMPORTED_MODULE_2__.checkResultAndHandleErrors)(result, this.delegationContext);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL1RyYW5zZm9ybWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcUU7QUFDQTtBQUNRO0FBQ3RFO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEMsb0NBQW9DLG9CQUFvQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtGQUFzQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtGQUFzQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxRQUFRO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDBGQUEwQjtBQUN6QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vVHJhbnNmb3JtZXIuanM/Y2JkZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcmVwYXJlR2F0ZXdheURvY3VtZW50IH0gZnJvbSAnLi9wcmVwYXJlR2F0ZXdheURvY3VtZW50LmpzJztcbmltcG9ydCB7IGZpbmFsaXplR2F0ZXdheVJlcXVlc3QgfSBmcm9tICcuL2ZpbmFsaXplR2F0ZXdheVJlcXVlc3QuanMnO1xuaW1wb3J0IHsgY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMgfSBmcm9tICcuL2NoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzLmpzJztcbmV4cG9ydCBjbGFzcyBUcmFuc2Zvcm1lciB7XG4gICAgY29uc3RydWN0b3IoY29udGV4dCkge1xuICAgICAgICB0aGlzLnRyYW5zZm9ybWF0aW9ucyA9IFtdO1xuICAgICAgICB0aGlzLmRlbGVnYXRpb25Db250ZXh0ID0gY29udGV4dDtcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtcyA9IGNvbnRleHQudHJhbnNmb3JtcztcbiAgICAgICAgY29uc3QgZGVsZWdhdGlvblRyYW5zZm9ybXMgPSB0cmFuc2Zvcm1zLnNsaWNlKCkucmV2ZXJzZSgpO1xuICAgICAgICBmb3IgKGNvbnN0IHRyYW5zZm9ybSBvZiBkZWxlZ2F0aW9uVHJhbnNmb3Jtcykge1xuICAgICAgICAgICAgdGhpcy5hZGRUcmFuc2Zvcm0odHJhbnNmb3JtLCB7fSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkVHJhbnNmb3JtKHRyYW5zZm9ybSwgY29udGV4dCA9IHt9KSB7XG4gICAgICAgIHRoaXMudHJhbnNmb3JtYXRpb25zLnB1c2goeyB0cmFuc2Zvcm0sIGNvbnRleHQgfSk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0KSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgbGV0IHJlcXVlc3QgPSB7XG4gICAgICAgICAgICAuLi5vcmlnaW5hbFJlcXVlc3QsXG4gICAgICAgICAgICBkb2N1bWVudDogcHJlcGFyZUdhdGV3YXlEb2N1bWVudChvcmlnaW5hbFJlcXVlc3QuZG9jdW1lbnQsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQudHJhbnNmb3JtZWRTY2hlbWEsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQucmV0dXJuVHlwZSwgKF9hID0gdGhpcy5kZWxlZ2F0aW9uQ29udGV4dC5pbmZvKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Euc2NoZW1hKSxcbiAgICAgICAgfTtcbiAgICAgICAgZm9yIChjb25zdCB0cmFuc2Zvcm1hdGlvbiBvZiB0aGlzLnRyYW5zZm9ybWF0aW9ucykge1xuICAgICAgICAgICAgaWYgKHRyYW5zZm9ybWF0aW9uLnRyYW5zZm9ybS50cmFuc2Zvcm1SZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgcmVxdWVzdCA9IHRyYW5zZm9ybWF0aW9uLnRyYW5zZm9ybS50cmFuc2Zvcm1SZXF1ZXN0KHJlcXVlc3QsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQsIHRyYW5zZm9ybWF0aW9uLmNvbnRleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmaW5hbGl6ZUdhdGV3YXlSZXF1ZXN0KHJlcXVlc3QsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQpO1xuICAgIH1cbiAgICB0cmFuc2Zvcm1SZXN1bHQob3JpZ2luYWxSZXN1bHQpIHtcbiAgICAgICAgbGV0IHJlc3VsdCA9IG9yaWdpbmFsUmVzdWx0O1xuICAgICAgICAvLyBmcm9tIHJpZ2h0IHRvIGxlZnRcbiAgICAgICAgZm9yIChsZXQgaSA9IHRoaXMudHJhbnNmb3JtYXRpb25zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm1hdGlvbiA9IHRoaXMudHJhbnNmb3JtYXRpb25zW2ldO1xuICAgICAgICAgICAgaWYgKHRyYW5zZm9ybWF0aW9uLnRyYW5zZm9ybS50cmFuc2Zvcm1SZXN1bHQpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQgPSB0cmFuc2Zvcm1hdGlvbi50cmFuc2Zvcm0udHJhbnNmb3JtUmVzdWx0KHJlc3VsdCwgdGhpcy5kZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb24uY29udGV4dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzKHJlc3VsdCwgdGhpcy5kZWxlZ2F0aW9uQ29udGV4dCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Transformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySchemaTransforms: () => (/* binding */ applySchemaTransforms)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n// TODO: Instead of memoization, we can make sure that this isn't called multiple times\nconst applySchemaTransforms = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize2)(function applySchemaTransforms(originalWrappingSchema, subschemaConfig) {\n    const schemaTransforms = subschemaConfig.transforms;\n    if (schemaTransforms == null) {\n        return originalWrappingSchema;\n    }\n    return schemaTransforms.reduce((schema, transform) => { var _a; return ((_a = transform.transformSchema) === null || _a === void 0 ? void 0 : _a.call(transform, schema, subschemaConfig)) || schema; }, originalWrappingSchema);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL2FwcGx5U2NoZW1hVHJhbnNmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnRDtBQUNoRDtBQUNPLDhCQUE4Qiw4REFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxRQUFRLHVJQUF1STtBQUMzTSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vYXBwbHlTY2hlbWFUcmFuc2Zvcm1zLmpzPzRlOGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVtb2l6ZTIgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG4vLyBUT0RPOiBJbnN0ZWFkIG9mIG1lbW9pemF0aW9uLCB3ZSBjYW4gbWFrZSBzdXJlIHRoYXQgdGhpcyBpc24ndCBjYWxsZWQgbXVsdGlwbGUgdGltZXNcbmV4cG9ydCBjb25zdCBhcHBseVNjaGVtYVRyYW5zZm9ybXMgPSBtZW1vaXplMihmdW5jdGlvbiBhcHBseVNjaGVtYVRyYW5zZm9ybXMob3JpZ2luYWxXcmFwcGluZ1NjaGVtYSwgc3Vic2NoZW1hQ29uZmlnKSB7XG4gICAgY29uc3Qgc2NoZW1hVHJhbnNmb3JtcyA9IHN1YnNjaGVtYUNvbmZpZy50cmFuc2Zvcm1zO1xuICAgIGlmIChzY2hlbWFUcmFuc2Zvcm1zID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsV3JhcHBpbmdTY2hlbWE7XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWFUcmFuc2Zvcm1zLnJlZHVjZSgoc2NoZW1hLCB0cmFuc2Zvcm0pID0+IHsgdmFyIF9hOyByZXR1cm4gKChfYSA9IHRyYW5zZm9ybS50cmFuc2Zvcm1TY2hlbWEpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKHRyYW5zZm9ybSwgc2NoZW1hLCBzdWJzY2hlbWFDb25maWcpKSB8fCBzY2hlbWE7IH0sIG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEpO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js":
/*!*****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkResultAndHandleErrors: () => (/* binding */ checkResultAndHandleErrors),\n/* harmony export */   mergeDataAndErrors: () => (/* binding */ mergeDataAndErrors)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/jsutils/Path.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\");\n/* harmony import */ var _resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resolveExternalValue.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\");\n\n\n\nfunction checkResultAndHandleErrors(result, delegationContext) {\n    const { context, info, fieldName: responseKey = getResponseKey(info), subschema, returnType = getReturnType(info), skipTypeMerging, onLocatedError, } = delegationContext;\n    const { data, unpathedErrors } = mergeDataAndErrors(result.data == null ? undefined : result.data[responseKey], result.errors == null ? [] : result.errors, info != null && info.path ? (0,graphql__WEBPACK_IMPORTED_MODULE_0__.pathToArray)(info.path) : undefined, onLocatedError);\n    return (0,_resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_1__.resolveExternalValue)(data, unpathedErrors, subschema, context, info, returnType, skipTypeMerging);\n}\nfunction mergeDataAndErrors(data, errors, path, onLocatedError, index = 1) {\n    var _a;\n    if (data == null) {\n        if (!errors.length) {\n            return { data: null, unpathedErrors: [] };\n        }\n        if (errors.length === 1) {\n            const error = onLocatedError ? onLocatedError(errors[0]) : errors[0];\n            const newPath = path === undefined ? error.path : !error.path ? path : path.concat(error.path.slice(1));\n            return { data: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.relocatedError)(errors[0], newPath), unpathedErrors: [] };\n        }\n        // We cast path as any for GraphQL.js 14 compat\n        // locatedError path argument must be defined, but it is just forwarded to a constructor that allows a undefined value\n        // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/locatedError.js#L25\n        // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/GraphQLError.js#L19\n        const combinedError = new _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.AggregateError(errors, errors.map(error => error.message).join(', \\n'));\n        const newError = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.locatedError)(combinedError, undefined, path);\n        return { data: newError, unpathedErrors: [] };\n    }\n    if (!errors.length) {\n        return { data, unpathedErrors: [] };\n    }\n    const unpathedErrors = [];\n    const errorMap = new Map();\n    for (const error of errors) {\n        const pathSegment = (_a = error.path) === null || _a === void 0 ? void 0 : _a[index];\n        if (pathSegment != null) {\n            let pathSegmentErrors = errorMap.get(pathSegment);\n            if (pathSegmentErrors === undefined) {\n                pathSegmentErrors = [error];\n                errorMap.set(pathSegment, pathSegmentErrors);\n            }\n            else {\n                pathSegmentErrors.push(error);\n            }\n        }\n        else {\n            unpathedErrors.push(error);\n        }\n    }\n    for (const [pathSegment, pathSegmentErrors] of errorMap) {\n        if (data[pathSegment] !== undefined) {\n            const { data: newData, unpathedErrors: newErrors } = mergeDataAndErrors(data[pathSegment], pathSegmentErrors, path, onLocatedError, index + 1);\n            data[pathSegment] = newData;\n            unpathedErrors.push(...newErrors);\n        }\n        else {\n            unpathedErrors.push(...pathSegmentErrors);\n        }\n    }\n    return { data, unpathedErrors };\n}\nfunction getResponseKey(info) {\n    if (info == null) {\n        throw new Error(`Data cannot be extracted from result without an explicit key or source schema.`);\n    }\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getResponseKeyFromInfo)(info);\n}\nfunction getReturnType(info) {\n    if (info == null) {\n        throw new Error(`Return type cannot be inferred without a source schema.`);\n    }\n    return info.returnType;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL2NoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQTREO0FBQ2tDO0FBQzdCO0FBQzFEO0FBQ1AsWUFBWSw4SUFBOEk7QUFDMUosWUFBWSx1QkFBdUIseUpBQXlKLG9EQUFtQjtBQUMvTSxXQUFXLDhFQUFvQjtBQUMvQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLE1BQU0sb0VBQWM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxnRUFBYztBQUNoRCx5QkFBeUIscURBQVk7QUFDckMsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDJDQUEyQztBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw0RUFBc0I7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9jaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycy5qcz85ODFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlc3BvbnNlUGF0aEFzQXJyYXksIGxvY2F0ZWRFcnJvciB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgQWdncmVnYXRlRXJyb3IsIGdldFJlc3BvbnNlS2V5RnJvbUluZm8sIHJlbG9jYXRlZEVycm9yIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgcmVzb2x2ZUV4dGVybmFsVmFsdWUgfSBmcm9tICcuL3Jlc29sdmVFeHRlcm5hbFZhbHVlLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBjaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycyhyZXN1bHQsIGRlbGVnYXRpb25Db250ZXh0KSB7XG4gICAgY29uc3QgeyBjb250ZXh0LCBpbmZvLCBmaWVsZE5hbWU6IHJlc3BvbnNlS2V5ID0gZ2V0UmVzcG9uc2VLZXkoaW5mbyksIHN1YnNjaGVtYSwgcmV0dXJuVHlwZSA9IGdldFJldHVyblR5cGUoaW5mbyksIHNraXBUeXBlTWVyZ2luZywgb25Mb2NhdGVkRXJyb3IsIH0gPSBkZWxlZ2F0aW9uQ29udGV4dDtcbiAgICBjb25zdCB7IGRhdGEsIHVucGF0aGVkRXJyb3JzIH0gPSBtZXJnZURhdGFBbmRFcnJvcnMocmVzdWx0LmRhdGEgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IHJlc3VsdC5kYXRhW3Jlc3BvbnNlS2V5XSwgcmVzdWx0LmVycm9ycyA9PSBudWxsID8gW10gOiByZXN1bHQuZXJyb3JzLCBpbmZvICE9IG51bGwgJiYgaW5mby5wYXRoID8gcmVzcG9uc2VQYXRoQXNBcnJheShpbmZvLnBhdGgpIDogdW5kZWZpbmVkLCBvbkxvY2F0ZWRFcnJvcik7XG4gICAgcmV0dXJuIHJlc29sdmVFeHRlcm5hbFZhbHVlKGRhdGEsIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIGNvbnRleHQsIGluZm8sIHJldHVyblR5cGUsIHNraXBUeXBlTWVyZ2luZyk7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VEYXRhQW5kRXJyb3JzKGRhdGEsIGVycm9ycywgcGF0aCwgb25Mb2NhdGVkRXJyb3IsIGluZGV4ID0gMSkge1xuICAgIHZhciBfYTtcbiAgICBpZiAoZGF0YSA9PSBudWxsKSB7XG4gICAgICAgIGlmICghZXJyb3JzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgdW5wYXRoZWRFcnJvcnM6IFtdIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yID0gb25Mb2NhdGVkRXJyb3IgPyBvbkxvY2F0ZWRFcnJvcihlcnJvcnNbMF0pIDogZXJyb3JzWzBdO1xuICAgICAgICAgICAgY29uc3QgbmV3UGF0aCA9IHBhdGggPT09IHVuZGVmaW5lZCA/IGVycm9yLnBhdGggOiAhZXJyb3IucGF0aCA/IHBhdGggOiBwYXRoLmNvbmNhdChlcnJvci5wYXRoLnNsaWNlKDEpKTtcbiAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IHJlbG9jYXRlZEVycm9yKGVycm9yc1swXSwgbmV3UGF0aCksIHVucGF0aGVkRXJyb3JzOiBbXSB9O1xuICAgICAgICB9XG4gICAgICAgIC8vIFdlIGNhc3QgcGF0aCBhcyBhbnkgZm9yIEdyYXBoUUwuanMgMTQgY29tcGF0XG4gICAgICAgIC8vIGxvY2F0ZWRFcnJvciBwYXRoIGFyZ3VtZW50IG11c3QgYmUgZGVmaW5lZCwgYnV0IGl0IGlzIGp1c3QgZm9yd2FyZGVkIHRvIGEgY29uc3RydWN0b3IgdGhhdCBhbGxvd3MgYSB1bmRlZmluZWQgdmFsdWVcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2dyYXBocWwvZ3JhcGhxbC1qcy9ibG9iL2I0YmZmMGJhOWMxNWM5ZDcyNDVkZDY4NTU2ZTc1NGM0MWYyNjMyODkvc3JjL2Vycm9yL2xvY2F0ZWRFcnJvci5qcyNMMjVcbiAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2dyYXBocWwvZ3JhcGhxbC1qcy9ibG9iL2I0YmZmMGJhOWMxNWM5ZDcyNDVkZDY4NTU2ZTc1NGM0MWYyNjMyODkvc3JjL2Vycm9yL0dyYXBoUUxFcnJvci5qcyNMMTlcbiAgICAgICAgY29uc3QgY29tYmluZWRFcnJvciA9IG5ldyBBZ2dyZWdhdGVFcnJvcihlcnJvcnMsIGVycm9ycy5tYXAoZXJyb3IgPT4gZXJyb3IubWVzc2FnZSkuam9pbignLCBcXG4nKSk7XG4gICAgICAgIGNvbnN0IG5ld0Vycm9yID0gbG9jYXRlZEVycm9yKGNvbWJpbmVkRXJyb3IsIHVuZGVmaW5lZCwgcGF0aCk7XG4gICAgICAgIHJldHVybiB7IGRhdGE6IG5ld0Vycm9yLCB1bnBhdGhlZEVycm9yczogW10gfTtcbiAgICB9XG4gICAgaWYgKCFlcnJvcnMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiB7IGRhdGEsIHVucGF0aGVkRXJyb3JzOiBbXSB9O1xuICAgIH1cbiAgICBjb25zdCB1bnBhdGhlZEVycm9ycyA9IFtdO1xuICAgIGNvbnN0IGVycm9yTWFwID0gbmV3IE1hcCgpO1xuICAgIGZvciAoY29uc3QgZXJyb3Igb2YgZXJyb3JzKSB7XG4gICAgICAgIGNvbnN0IHBhdGhTZWdtZW50ID0gKF9hID0gZXJyb3IucGF0aCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2luZGV4XTtcbiAgICAgICAgaWYgKHBhdGhTZWdtZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGxldCBwYXRoU2VnbWVudEVycm9ycyA9IGVycm9yTWFwLmdldChwYXRoU2VnbWVudCk7XG4gICAgICAgICAgICBpZiAocGF0aFNlZ21lbnRFcnJvcnMgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHBhdGhTZWdtZW50RXJyb3JzID0gW2Vycm9yXTtcbiAgICAgICAgICAgICAgICBlcnJvck1hcC5zZXQocGF0aFNlZ21lbnQsIHBhdGhTZWdtZW50RXJyb3JzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHBhdGhTZWdtZW50RXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdW5wYXRoZWRFcnJvcnMucHVzaChlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBbcGF0aFNlZ21lbnQsIHBhdGhTZWdtZW50RXJyb3JzXSBvZiBlcnJvck1hcCkge1xuICAgICAgICBpZiAoZGF0YVtwYXRoU2VnbWVudF0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgY29uc3QgeyBkYXRhOiBuZXdEYXRhLCB1bnBhdGhlZEVycm9yczogbmV3RXJyb3JzIH0gPSBtZXJnZURhdGFBbmRFcnJvcnMoZGF0YVtwYXRoU2VnbWVudF0sIHBhdGhTZWdtZW50RXJyb3JzLCBwYXRoLCBvbkxvY2F0ZWRFcnJvciwgaW5kZXggKyAxKTtcbiAgICAgICAgICAgIGRhdGFbcGF0aFNlZ21lbnRdID0gbmV3RGF0YTtcbiAgICAgICAgICAgIHVucGF0aGVkRXJyb3JzLnB1c2goLi4ubmV3RXJyb3JzKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVucGF0aGVkRXJyb3JzLnB1c2goLi4ucGF0aFNlZ21lbnRFcnJvcnMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7IGRhdGEsIHVucGF0aGVkRXJyb3JzIH07XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUtleShpbmZvKSB7XG4gICAgaWYgKGluZm8gPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYERhdGEgY2Fubm90IGJlIGV4dHJhY3RlZCBmcm9tIHJlc3VsdCB3aXRob3V0IGFuIGV4cGxpY2l0IGtleSBvciBzb3VyY2Ugc2NoZW1hLmApO1xuICAgIH1cbiAgICByZXR1cm4gZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyhpbmZvKTtcbn1cbmZ1bmN0aW9uIGdldFJldHVyblR5cGUoaW5mbykge1xuICAgIGlmIChpbmZvID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXR1cm4gdHlwZSBjYW5ub3QgYmUgaW5mZXJyZWQgd2l0aG91dCBhIHNvdXJjZSBzY2hlbWEuYCk7XG4gICAgfVxuICAgIHJldHVybiBpbmZvLnJldHVyblR5cGU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/createRequest.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/createRequest.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRequest: () => (/* binding */ createRequest),\n/* harmony export */   getDelegatingOperation: () => (/* binding */ getDelegatingOperation)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/updateArgument.js\");\n\n\nfunction getDelegatingOperation(parentType, schema) {\n    if (parentType === schema.getMutationType()) {\n        return 'mutation';\n    }\n    else if (parentType === schema.getSubscriptionType()) {\n        return 'subscription';\n    }\n    return 'query';\n}\nfunction createRequest({ sourceSchema, sourceParentType, sourceFieldName, fragments, variableDefinitions, variableValues, targetRootValue, targetOperationName, targetOperation, targetFieldName, selectionSet, fieldNodes, context, info, }) {\n    var _a, _b;\n    let newSelectionSet;\n    const argumentNodeMap = Object.create(null);\n    if (selectionSet != null) {\n        newSelectionSet = selectionSet;\n    }\n    else {\n        const selections = [];\n        for (const fieldNode of fieldNodes || []) {\n            if (fieldNode.selectionSet) {\n                for (const selection of fieldNode.selectionSet.selections) {\n                    selections.push(selection);\n                }\n            }\n        }\n        newSelectionSet = selections.length\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                selections,\n            }\n            : undefined;\n        const args = (_a = fieldNodes === null || fieldNodes === void 0 ? void 0 : fieldNodes[0]) === null || _a === void 0 ? void 0 : _a.arguments;\n        if (args) {\n            for (const argNode of args) {\n                argumentNodeMap[argNode.name.value] = argNode;\n            }\n        }\n    }\n    const newVariables = Object.create(null);\n    const variableDefinitionMap = Object.create(null);\n    if (sourceSchema != null && variableDefinitions != null) {\n        for (const def of variableDefinitions) {\n            const varName = def.variable.name.value;\n            variableDefinitionMap[varName] = def;\n            const varType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.typeFromAST)(sourceSchema, def.type);\n            const serializedValue = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.serializeInputValue)(varType, variableValues === null || variableValues === void 0 ? void 0 : variableValues[varName]);\n            if (serializedValue !== undefined) {\n                newVariables[varName] = serializedValue;\n            }\n        }\n    }\n    if (sourceParentType != null && sourceFieldName != null) {\n        updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, newVariables);\n    }\n    const rootFieldName = targetFieldName !== null && targetFieldName !== void 0 ? targetFieldName : (_b = fieldNodes === null || fieldNodes === void 0 ? void 0 : fieldNodes[0]) === null || _b === void 0 ? void 0 : _b.name.value;\n    if (rootFieldName === undefined) {\n        throw new Error(`Either \"targetFieldName\" or a non empty \"fieldNodes\" array must be provided.`);\n    }\n    const rootfieldNode = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD,\n        arguments: Object.values(argumentNodeMap),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: rootFieldName,\n        },\n        selectionSet: newSelectionSet,\n    };\n    const operationName = targetOperationName\n        ? {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: targetOperationName,\n        }\n        : undefined;\n    const operationDefinition = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION,\n        name: operationName,\n        operation: targetOperation,\n        variableDefinitions: Object.values(variableDefinitionMap),\n        selectionSet: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n            selections: [rootfieldNode],\n        },\n    };\n    const definitions = [operationDefinition];\n    if (fragments != null) {\n        for (const fragmentName in fragments) {\n            const fragment = fragments[fragmentName];\n            definitions.push(fragment);\n        }\n    }\n    const document = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT,\n        definitions,\n    };\n    return {\n        document,\n        variables: newVariables,\n        rootValue: targetRootValue,\n        operationName: targetOperationName,\n        context,\n        info,\n        operationType: targetOperation,\n    };\n}\nfunction updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, variableValues) {\n    const generateVariableName = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.createVariableNameGenerator)(variableDefinitionMap);\n    const sourceField = sourceParentType.getFields()[sourceFieldName];\n    if (!sourceField) {\n        throw new Error(`Field \"${sourceFieldName}\" was not found in type \"${sourceParentType}\".`);\n    }\n    for (const argument of sourceField.args) {\n        const argName = argument.name;\n        const sourceArgType = argument.type;\n        if (argumentNodeMap[argName] === undefined) {\n            const defaultValue = argument.defaultValue;\n            if (defaultValue !== undefined) {\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.updateArgument)(argumentNodeMap, variableDefinitionMap, variableValues, argName, generateVariableName(argName), sourceArgType, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.serializeInputValue)(sourceArgType, defaultValue));\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/createRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultMergedResolver: () => (/* binding */ defaultMergedResolver)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/execute.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\");\n/* harmony import */ var _resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./resolveExternalValue.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\");\n/* harmony import */ var _mergeFields_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergeFields.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n\n\n\n\n/**\n * Resolver that knows how to:\n * a) handle aliases for proxied schemas\n * b) handle errors from proxied schemas\n * c) handle external to internal enum conversion\n */\nfunction defaultMergedResolver(parent, args, context, info) {\n    if (!parent) {\n        return null;\n    }\n    const responseKey = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getResponseKeyFromInfo)(info);\n    // check to see if parent is not a proxied result, i.e. if parent resolver was manually overwritten\n    // See https://github.com/ardatan/graphql-tools/issues/967\n    if (!(0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.isExternalObject)(parent)) {\n        return (0,graphql__WEBPACK_IMPORTED_MODULE_2__.defaultFieldResolver)(parent, args, context, info);\n    }\n    const data = parent[responseKey];\n    const unpathedErrors = (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.getUnpathedErrors)(parent);\n    const subschema = (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.getSubschema)(parent, responseKey);\n    return (0,_resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_3__.resolveExternalValue)(data, unpathedErrors, subschema, context, info);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL2RlZmF1bHRNZXJnZWRSZXNvbHZlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQztBQUNlO0FBQ0c7QUFDb0I7QUFDckY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNEVBQXNCO0FBQzlDO0FBQ0E7QUFDQSxTQUFTLGlFQUFnQjtBQUN6QixlQUFlLDZEQUFvQjtBQUNuQztBQUNBO0FBQ0EsMkJBQTJCLGtFQUFpQjtBQUM1QyxzQkFBc0IsNkRBQVk7QUFDbEMsV0FBVyw4RUFBb0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9kZWZhdWx0TWVyZ2VkUmVzb2x2ZXIuanM/Mzg1YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWZhdWx0RmllbGRSZXNvbHZlciB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IHJlc29sdmVFeHRlcm5hbFZhbHVlIH0gZnJvbSAnLi9yZXNvbHZlRXh0ZXJuYWxWYWx1ZS5qcyc7XG5pbXBvcnQgeyBnZXRTdWJzY2hlbWEsIGdldFVucGF0aGVkRXJyb3JzLCBpc0V4dGVybmFsT2JqZWN0IH0gZnJvbSAnLi9tZXJnZUZpZWxkcy5qcyc7XG4vKipcbiAqIFJlc29sdmVyIHRoYXQga25vd3MgaG93IHRvOlxuICogYSkgaGFuZGxlIGFsaWFzZXMgZm9yIHByb3hpZWQgc2NoZW1hc1xuICogYikgaGFuZGxlIGVycm9ycyBmcm9tIHByb3hpZWQgc2NoZW1hc1xuICogYykgaGFuZGxlIGV4dGVybmFsIHRvIGludGVybmFsIGVudW0gY29udmVyc2lvblxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdE1lcmdlZFJlc29sdmVyKHBhcmVudCwgYXJncywgY29udGV4dCwgaW5mbykge1xuICAgIGlmICghcGFyZW50KSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICBjb25zdCByZXNwb25zZUtleSA9IGdldFJlc3BvbnNlS2V5RnJvbUluZm8oaW5mbyk7XG4gICAgLy8gY2hlY2sgdG8gc2VlIGlmIHBhcmVudCBpcyBub3QgYSBwcm94aWVkIHJlc3VsdCwgaS5lLiBpZiBwYXJlbnQgcmVzb2x2ZXIgd2FzIG1hbnVhbGx5IG92ZXJ3cml0dGVuXG4gICAgLy8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmRhdGFuL2dyYXBocWwtdG9vbHMvaXNzdWVzLzk2N1xuICAgIGlmICghaXNFeHRlcm5hbE9iamVjdChwYXJlbnQpKSB7XG4gICAgICAgIHJldHVybiBkZWZhdWx0RmllbGRSZXNvbHZlcihwYXJlbnQsIGFyZ3MsIGNvbnRleHQsIGluZm8pO1xuICAgIH1cbiAgICBjb25zdCBkYXRhID0gcGFyZW50W3Jlc3BvbnNlS2V5XTtcbiAgICBjb25zdCB1bnBhdGhlZEVycm9ycyA9IGdldFVucGF0aGVkRXJyb3JzKHBhcmVudCk7XG4gICAgY29uc3Qgc3Vic2NoZW1hID0gZ2V0U3Vic2NoZW1hKHBhcmVudCwgcmVzcG9uc2VLZXkpO1xuICAgIHJldHVybiByZXNvbHZlRXh0ZXJuYWxWYWx1ZShkYXRhLCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultExecutor: () => (/* binding */ createDefaultExecutor),\n/* harmony export */   delegateRequest: () => (/* binding */ delegateRequest),\n/* harmony export */   delegateToSchema: () => (/* binding */ delegateToSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/validation/validate.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_batch_execute__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-tools/batch-execute */ \"(ssr)/../node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _subschemaConfig_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./subschemaConfig.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n/* harmony import */ var _Subschema_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Subschema.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Subschema.js\");\n/* harmony import */ var _createRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createRequest.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/createRequest.js\");\n/* harmony import */ var _Transformer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transformer.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Transformer.js\");\n/* harmony import */ var _applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./applySchemaTransforms.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n/* harmony import */ var _graphql_tools_executor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @graphql-tools/executor */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\");\n\n\n\n\n\n\n\n\n\n\nfunction delegateToSchema(options) {\n    var _a, _b;\n    const { info, schema, rootValue = (_a = schema.rootValue) !== null && _a !== void 0 ? _a : info.rootValue, operationName = (_b = info.operation.name) === null || _b === void 0 ? void 0 : _b.value, operation = (0,_createRequest_js__WEBPACK_IMPORTED_MODULE_1__.getDelegatingOperation)(info.parentType, info.schema), fieldName = info.fieldName, selectionSet, fieldNodes = info.fieldNodes, context, } = options;\n    const request = (0,_createRequest_js__WEBPACK_IMPORTED_MODULE_1__.createRequest)({\n        sourceSchema: info.schema,\n        sourceParentType: info.parentType,\n        sourceFieldName: info.fieldName,\n        fragments: info.fragments,\n        variableDefinitions: info.operation.variableDefinitions,\n        variableValues: info.variableValues,\n        targetRootValue: rootValue,\n        targetOperationName: operationName,\n        targetOperation: operation,\n        targetFieldName: fieldName,\n        selectionSet,\n        fieldNodes,\n        context,\n        info,\n    });\n    return delegateRequest({\n        ...options,\n        request,\n    });\n}\nfunction getDelegationReturnType(targetSchema, operation, fieldName) {\n    const rootType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getDefinedRootType)(targetSchema, operation);\n    const rootFieldType = rootType.getFields()[fieldName];\n    if (!rootFieldType) {\n        throw new Error(`Unable to find field '${fieldName}' in type '${rootType}'.`);\n    }\n    return rootFieldType.type;\n}\nfunction delegateRequest(options) {\n    const delegationContext = getDelegationContext(options);\n    const transformer = new _Transformer_js__WEBPACK_IMPORTED_MODULE_3__.Transformer(delegationContext);\n    const processedRequest = transformer.transformRequest(options.request);\n    if (options.validateRequest) {\n        validateRequest(delegationContext, processedRequest.document);\n    }\n    const executor = getExecutor(delegationContext);\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executor(processedRequest))\n        .then(originalResult => {\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.isAsyncIterable)(originalResult)) {\n            const iterator = originalResult[Symbol.asyncIterator]();\n            // \"subscribe\" to the subscription result and map the result through the transforms\n            return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.mapAsyncIterator)(iterator, result => transformer.transformResult(result));\n        }\n        return transformer.transformResult(originalResult);\n    })\n        .resolve();\n}\nfunction getDelegationContext({ request, schema, fieldName, returnType, args, info, transforms = [], transformedSchema, skipTypeMerging = false, }) {\n    var _a, _b, _c, _d;\n    const operationDefinition = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.getOperationASTFromRequest)(request);\n    let targetFieldName;\n    if (fieldName == null) {\n        targetFieldName = operationDefinition.selectionSet.selections[0].name.value;\n    }\n    else {\n        targetFieldName = fieldName;\n    }\n    const stitchingInfo = (_a = info === null || info === void 0 ? void 0 : info.schema.extensions) === null || _a === void 0 ? void 0 : _a['stitchingInfo'];\n    const subschemaOrSubschemaConfig = (_b = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.subschemaMap.get(schema)) !== null && _b !== void 0 ? _b : schema;\n    const operation = operationDefinition.operation;\n    if ((0,_subschemaConfig_js__WEBPACK_IMPORTED_MODULE_7__.isSubschemaConfig)(subschemaOrSubschemaConfig)) {\n        const targetSchema = subschemaOrSubschemaConfig.schema;\n        return {\n            subschema: schema,\n            subschemaConfig: subschemaOrSubschemaConfig,\n            targetSchema,\n            operation,\n            fieldName: targetFieldName,\n            args,\n            context: request.context,\n            info,\n            returnType: (_c = returnType !== null && returnType !== void 0 ? returnType : info === null || info === void 0 ? void 0 : info.returnType) !== null && _c !== void 0 ? _c : getDelegationReturnType(targetSchema, operation, targetFieldName),\n            transforms: subschemaOrSubschemaConfig.transforms != null\n                ? subschemaOrSubschemaConfig.transforms.concat(transforms)\n                : transforms,\n            transformedSchema: transformedSchema !== null && transformedSchema !== void 0 ? transformedSchema : (subschemaOrSubschemaConfig instanceof _Subschema_js__WEBPACK_IMPORTED_MODULE_8__.Subschema\n                ? subschemaOrSubschemaConfig.transformedSchema\n                : (0,_applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_9__.applySchemaTransforms)(targetSchema, subschemaOrSubschemaConfig)),\n            skipTypeMerging,\n        };\n    }\n    return {\n        subschema: schema,\n        subschemaConfig: undefined,\n        targetSchema: subschemaOrSubschemaConfig,\n        operation,\n        fieldName: targetFieldName,\n        args,\n        context: request.context,\n        info,\n        returnType: (_d = returnType !== null && returnType !== void 0 ? returnType : info === null || info === void 0 ? void 0 : info.returnType) !== null && _d !== void 0 ? _d : getDelegationReturnType(subschemaOrSubschemaConfig, operation, targetFieldName),\n        transforms,\n        transformedSchema: transformedSchema !== null && transformedSchema !== void 0 ? transformedSchema : subschemaOrSubschemaConfig,\n        skipTypeMerging,\n    };\n}\nfunction validateRequest(delegationContext, document) {\n    const errors = (0,graphql__WEBPACK_IMPORTED_MODULE_10__.validate)(delegationContext.targetSchema, document);\n    if (errors.length > 0) {\n        if (errors.length > 1) {\n            const combinedError = new _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.AggregateError(errors, errors.map(error => error.message).join(', \\n'));\n            throw combinedError;\n        }\n        const error = errors[0];\n        throw error.originalError || error;\n    }\n}\nconst GLOBAL_CONTEXT = {};\nfunction getExecutor(delegationContext) {\n    const { subschemaConfig, targetSchema, context } = delegationContext;\n    let executor = (subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.executor) || createDefaultExecutor(targetSchema);\n    if (subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.batch) {\n        const batchingOptions = subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.batchingOptions;\n        executor = (0,_graphql_tools_batch_execute__WEBPACK_IMPORTED_MODULE_12__.getBatchingExecutor)(context !== null && context !== void 0 ? context : GLOBAL_CONTEXT, executor, batchingOptions === null || batchingOptions === void 0 ? void 0 : batchingOptions.dataLoaderOptions, batchingOptions === null || batchingOptions === void 0 ? void 0 : batchingOptions.extensionsReducer);\n    }\n    return executor;\n}\nconst createDefaultExecutor = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_13__.memoize1)(function createDefaultExecutor(schema) {\n    return function defaultExecutor(request) {\n        return (0,_graphql_tools_executor__WEBPACK_IMPORTED_MODULE_14__.normalizedExecutor)({\n            schema,\n            document: request.document,\n            rootValue: request.rootValue,\n            contextValue: request.context,\n            variableValues: request.variables,\n            operationName: request.operationName,\n        });\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL2RlbGVnYXRlVG9TY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQW9DO0FBQ2M7QUFDaUI7QUFDaUY7QUFDM0Y7QUFDZDtBQUNnQztBQUM1QjtBQUNvQjtBQUNOO0FBQ3REO0FBQ1A7QUFDQSxZQUFZLHlNQUF5TSx5RUFBc0IsbUhBQW1IO0FBQzlWLG9CQUFvQixnRUFBYTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EscUJBQXFCLHdFQUFrQjtBQUN2QztBQUNBO0FBQ0EsaURBQWlELFVBQVUsYUFBYSxTQUFTO0FBQ2pGO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSw0QkFBNEIsd0RBQVc7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQWM7QUFDN0I7QUFDQSxZQUFZLHFFQUFlO0FBQzNCO0FBQ0E7QUFDQSxtQkFBbUIsc0VBQWdCO0FBQ25DO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLGdDQUFnQyxrSEFBa0g7QUFDbEo7QUFDQSxnQ0FBZ0MsZ0ZBQTBCO0FBQzFEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzRUFBaUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVKQUF1SixvREFBUztBQUNoSztBQUNBLGtCQUFrQixnRkFBcUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0RBQVE7QUFDM0I7QUFDQTtBQUNBLHNDQUFzQyxpRUFBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx5Q0FBeUM7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtGQUFtQjtBQUN0QztBQUNBO0FBQ0E7QUFDTyw4QkFBOEIsK0RBQVE7QUFDN0M7QUFDQSxlQUFlLDRFQUFrQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vZGVsZWdhdGVUb1NjaGVtYS5qcz9jMWM0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZhbGlkYXRlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgVmFsdWVPclByb21pc2UgfSBmcm9tICd2YWx1ZS1vci1wcm9taXNlJztcbmltcG9ydCB7IGdldEJhdGNoaW5nRXhlY3V0b3IgfSBmcm9tICdAZ3JhcGhxbC10b29scy9iYXRjaC1leGVjdXRlJztcbmltcG9ydCB7IG1hcEFzeW5jSXRlcmF0b3IsIEFnZ3JlZ2F0ZUVycm9yLCBpc0FzeW5jSXRlcmFibGUsIGdldERlZmluZWRSb290VHlwZSwgbWVtb2l6ZTEsIGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0LCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IGlzU3Vic2NoZW1hQ29uZmlnIH0gZnJvbSAnLi9zdWJzY2hlbWFDb25maWcuanMnO1xuaW1wb3J0IHsgU3Vic2NoZW1hIH0gZnJvbSAnLi9TdWJzY2hlbWEuanMnO1xuaW1wb3J0IHsgY3JlYXRlUmVxdWVzdCwgZ2V0RGVsZWdhdGluZ09wZXJhdGlvbiB9IGZyb20gJy4vY3JlYXRlUmVxdWVzdC5qcyc7XG5pbXBvcnQgeyBUcmFuc2Zvcm1lciB9IGZyb20gJy4vVHJhbnNmb3JtZXIuanMnO1xuaW1wb3J0IHsgYXBwbHlTY2hlbWFUcmFuc2Zvcm1zIH0gZnJvbSAnLi9hcHBseVNjaGVtYVRyYW5zZm9ybXMuanMnO1xuaW1wb3J0IHsgbm9ybWFsaXplZEV4ZWN1dG9yIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvZXhlY3V0b3InO1xuZXhwb3J0IGZ1bmN0aW9uIGRlbGVnYXRlVG9TY2hlbWEob3B0aW9ucykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgeyBpbmZvLCBzY2hlbWEsIHJvb3RWYWx1ZSA9IChfYSA9IHNjaGVtYS5yb290VmFsdWUpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGluZm8ucm9vdFZhbHVlLCBvcGVyYXRpb25OYW1lID0gKF9iID0gaW5mby5vcGVyYXRpb24ubmFtZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLnZhbHVlLCBvcGVyYXRpb24gPSBnZXREZWxlZ2F0aW5nT3BlcmF0aW9uKGluZm8ucGFyZW50VHlwZSwgaW5mby5zY2hlbWEpLCBmaWVsZE5hbWUgPSBpbmZvLmZpZWxkTmFtZSwgc2VsZWN0aW9uU2V0LCBmaWVsZE5vZGVzID0gaW5mby5maWVsZE5vZGVzLCBjb250ZXh0LCB9ID0gb3B0aW9ucztcbiAgICBjb25zdCByZXF1ZXN0ID0gY3JlYXRlUmVxdWVzdCh7XG4gICAgICAgIHNvdXJjZVNjaGVtYTogaW5mby5zY2hlbWEsXG4gICAgICAgIHNvdXJjZVBhcmVudFR5cGU6IGluZm8ucGFyZW50VHlwZSxcbiAgICAgICAgc291cmNlRmllbGROYW1lOiBpbmZvLmZpZWxkTmFtZSxcbiAgICAgICAgZnJhZ21lbnRzOiBpbmZvLmZyYWdtZW50cyxcbiAgICAgICAgdmFyaWFibGVEZWZpbml0aW9uczogaW5mby5vcGVyYXRpb24udmFyaWFibGVEZWZpbml0aW9ucyxcbiAgICAgICAgdmFyaWFibGVWYWx1ZXM6IGluZm8udmFyaWFibGVWYWx1ZXMsXG4gICAgICAgIHRhcmdldFJvb3RWYWx1ZTogcm9vdFZhbHVlLFxuICAgICAgICB0YXJnZXRPcGVyYXRpb25OYW1lOiBvcGVyYXRpb25OYW1lLFxuICAgICAgICB0YXJnZXRPcGVyYXRpb246IG9wZXJhdGlvbixcbiAgICAgICAgdGFyZ2V0RmllbGROYW1lOiBmaWVsZE5hbWUsXG4gICAgICAgIHNlbGVjdGlvblNldCxcbiAgICAgICAgZmllbGROb2RlcyxcbiAgICAgICAgY29udGV4dCxcbiAgICAgICAgaW5mbyxcbiAgICB9KTtcbiAgICByZXR1cm4gZGVsZWdhdGVSZXF1ZXN0KHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgcmVxdWVzdCxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldERlbGVnYXRpb25SZXR1cm5UeXBlKHRhcmdldFNjaGVtYSwgb3BlcmF0aW9uLCBmaWVsZE5hbWUpIHtcbiAgICBjb25zdCByb290VHlwZSA9IGdldERlZmluZWRSb290VHlwZSh0YXJnZXRTY2hlbWEsIG9wZXJhdGlvbik7XG4gICAgY29uc3Qgcm9vdEZpZWxkVHlwZSA9IHJvb3RUeXBlLmdldEZpZWxkcygpW2ZpZWxkTmFtZV07XG4gICAgaWYgKCFyb290RmllbGRUeXBlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIGZpbmQgZmllbGQgJyR7ZmllbGROYW1lfScgaW4gdHlwZSAnJHtyb290VHlwZX0nLmApO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdEZpZWxkVHlwZS50eXBlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGRlbGVnYXRlUmVxdWVzdChvcHRpb25zKSB7XG4gICAgY29uc3QgZGVsZWdhdGlvbkNvbnRleHQgPSBnZXREZWxlZ2F0aW9uQ29udGV4dChvcHRpb25zKTtcbiAgICBjb25zdCB0cmFuc2Zvcm1lciA9IG5ldyBUcmFuc2Zvcm1lcihkZWxlZ2F0aW9uQ29udGV4dCk7XG4gICAgY29uc3QgcHJvY2Vzc2VkUmVxdWVzdCA9IHRyYW5zZm9ybWVyLnRyYW5zZm9ybVJlcXVlc3Qob3B0aW9ucy5yZXF1ZXN0KTtcbiAgICBpZiAob3B0aW9ucy52YWxpZGF0ZVJlcXVlc3QpIHtcbiAgICAgICAgdmFsaWRhdGVSZXF1ZXN0KGRlbGVnYXRpb25Db250ZXh0LCBwcm9jZXNzZWRSZXF1ZXN0LmRvY3VtZW50KTtcbiAgICB9XG4gICAgY29uc3QgZXhlY3V0b3IgPSBnZXRFeGVjdXRvcihkZWxlZ2F0aW9uQ29udGV4dCk7XG4gICAgcmV0dXJuIG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiBleGVjdXRvcihwcm9jZXNzZWRSZXF1ZXN0KSlcbiAgICAgICAgLnRoZW4ob3JpZ2luYWxSZXN1bHQgPT4ge1xuICAgICAgICBpZiAoaXNBc3luY0l0ZXJhYmxlKG9yaWdpbmFsUmVzdWx0KSkge1xuICAgICAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBvcmlnaW5hbFJlc3VsdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICAgICAgICAgIC8vIFwic3Vic2NyaWJlXCIgdG8gdGhlIHN1YnNjcmlwdGlvbiByZXN1bHQgYW5kIG1hcCB0aGUgcmVzdWx0IHRocm91Z2ggdGhlIHRyYW5zZm9ybXNcbiAgICAgICAgICAgIHJldHVybiBtYXBBc3luY0l0ZXJhdG9yKGl0ZXJhdG9yLCByZXN1bHQgPT4gdHJhbnNmb3JtZXIudHJhbnNmb3JtUmVzdWx0KHJlc3VsdCkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cmFuc2Zvcm1lci50cmFuc2Zvcm1SZXN1bHQob3JpZ2luYWxSZXN1bHQpO1xuICAgIH0pXG4gICAgICAgIC5yZXNvbHZlKCk7XG59XG5mdW5jdGlvbiBnZXREZWxlZ2F0aW9uQ29udGV4dCh7IHJlcXVlc3QsIHNjaGVtYSwgZmllbGROYW1lLCByZXR1cm5UeXBlLCBhcmdzLCBpbmZvLCB0cmFuc2Zvcm1zID0gW10sIHRyYW5zZm9ybWVkU2NoZW1hLCBza2lwVHlwZU1lcmdpbmcgPSBmYWxzZSwgfSkge1xuICAgIHZhciBfYSwgX2IsIF9jLCBfZDtcbiAgICBjb25zdCBvcGVyYXRpb25EZWZpbml0aW9uID0gZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QocmVxdWVzdCk7XG4gICAgbGV0IHRhcmdldEZpZWxkTmFtZTtcbiAgICBpZiAoZmllbGROYW1lID09IG51bGwpIHtcbiAgICAgICAgdGFyZ2V0RmllbGROYW1lID0gb3BlcmF0aW9uRGVmaW5pdGlvbi5zZWxlY3Rpb25TZXQuc2VsZWN0aW9uc1swXS5uYW1lLnZhbHVlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGFyZ2V0RmllbGROYW1lID0gZmllbGROYW1lO1xuICAgIH1cbiAgICBjb25zdCBzdGl0Y2hpbmdJbmZvID0gKF9hID0gaW5mbyA9PT0gbnVsbCB8fCBpbmZvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpbmZvLnNjaGVtYS5leHRlbnNpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbJ3N0aXRjaGluZ0luZm8nXTtcbiAgICBjb25zdCBzdWJzY2hlbWFPclN1YnNjaGVtYUNvbmZpZyA9IChfYiA9IHN0aXRjaGluZ0luZm8gPT09IG51bGwgfHwgc3RpdGNoaW5nSW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RpdGNoaW5nSW5mby5zdWJzY2hlbWFNYXAuZ2V0KHNjaGVtYSkpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHNjaGVtYTtcbiAgICBjb25zdCBvcGVyYXRpb24gPSBvcGVyYXRpb25EZWZpbml0aW9uLm9wZXJhdGlvbjtcbiAgICBpZiAoaXNTdWJzY2hlbWFDb25maWcoc3Vic2NoZW1hT3JTdWJzY2hlbWFDb25maWcpKSB7XG4gICAgICAgIGNvbnN0IHRhcmdldFNjaGVtYSA9IHN1YnNjaGVtYU9yU3Vic2NoZW1hQ29uZmlnLnNjaGVtYTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHN1YnNjaGVtYTogc2NoZW1hLFxuICAgICAgICAgICAgc3Vic2NoZW1hQ29uZmlnOiBzdWJzY2hlbWFPclN1YnNjaGVtYUNvbmZpZyxcbiAgICAgICAgICAgIHRhcmdldFNjaGVtYSxcbiAgICAgICAgICAgIG9wZXJhdGlvbixcbiAgICAgICAgICAgIGZpZWxkTmFtZTogdGFyZ2V0RmllbGROYW1lLFxuICAgICAgICAgICAgYXJncyxcbiAgICAgICAgICAgIGNvbnRleHQ6IHJlcXVlc3QuY29udGV4dCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICByZXR1cm5UeXBlOiAoX2MgPSByZXR1cm5UeXBlICE9PSBudWxsICYmIHJldHVyblR5cGUgIT09IHZvaWQgMCA/IHJldHVyblR5cGUgOiBpbmZvID09PSBudWxsIHx8IGluZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGluZm8ucmV0dXJuVHlwZSkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogZ2V0RGVsZWdhdGlvblJldHVyblR5cGUodGFyZ2V0U2NoZW1hLCBvcGVyYXRpb24sIHRhcmdldEZpZWxkTmFtZSksXG4gICAgICAgICAgICB0cmFuc2Zvcm1zOiBzdWJzY2hlbWFPclN1YnNjaGVtYUNvbmZpZy50cmFuc2Zvcm1zICE9IG51bGxcbiAgICAgICAgICAgICAgICA/IHN1YnNjaGVtYU9yU3Vic2NoZW1hQ29uZmlnLnRyYW5zZm9ybXMuY29uY2F0KHRyYW5zZm9ybXMpXG4gICAgICAgICAgICAgICAgOiB0cmFuc2Zvcm1zLFxuICAgICAgICAgICAgdHJhbnNmb3JtZWRTY2hlbWE6IHRyYW5zZm9ybWVkU2NoZW1hICE9PSBudWxsICYmIHRyYW5zZm9ybWVkU2NoZW1hICE9PSB2b2lkIDAgPyB0cmFuc2Zvcm1lZFNjaGVtYSA6IChzdWJzY2hlbWFPclN1YnNjaGVtYUNvbmZpZyBpbnN0YW5jZW9mIFN1YnNjaGVtYVxuICAgICAgICAgICAgICAgID8gc3Vic2NoZW1hT3JTdWJzY2hlbWFDb25maWcudHJhbnNmb3JtZWRTY2hlbWFcbiAgICAgICAgICAgICAgICA6IGFwcGx5U2NoZW1hVHJhbnNmb3Jtcyh0YXJnZXRTY2hlbWEsIHN1YnNjaGVtYU9yU3Vic2NoZW1hQ29uZmlnKSksXG4gICAgICAgICAgICBza2lwVHlwZU1lcmdpbmcsXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHN1YnNjaGVtYTogc2NoZW1hLFxuICAgICAgICBzdWJzY2hlbWFDb25maWc6IHVuZGVmaW5lZCxcbiAgICAgICAgdGFyZ2V0U2NoZW1hOiBzdWJzY2hlbWFPclN1YnNjaGVtYUNvbmZpZyxcbiAgICAgICAgb3BlcmF0aW9uLFxuICAgICAgICBmaWVsZE5hbWU6IHRhcmdldEZpZWxkTmFtZSxcbiAgICAgICAgYXJncyxcbiAgICAgICAgY29udGV4dDogcmVxdWVzdC5jb250ZXh0LFxuICAgICAgICBpbmZvLFxuICAgICAgICByZXR1cm5UeXBlOiAoX2QgPSByZXR1cm5UeXBlICE9PSBudWxsICYmIHJldHVyblR5cGUgIT09IHZvaWQgMCA/IHJldHVyblR5cGUgOiBpbmZvID09PSBudWxsIHx8IGluZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGluZm8ucmV0dXJuVHlwZSkgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogZ2V0RGVsZWdhdGlvblJldHVyblR5cGUoc3Vic2NoZW1hT3JTdWJzY2hlbWFDb25maWcsIG9wZXJhdGlvbiwgdGFyZ2V0RmllbGROYW1lKSxcbiAgICAgICAgdHJhbnNmb3JtcyxcbiAgICAgICAgdHJhbnNmb3JtZWRTY2hlbWE6IHRyYW5zZm9ybWVkU2NoZW1hICE9PSBudWxsICYmIHRyYW5zZm9ybWVkU2NoZW1hICE9PSB2b2lkIDAgPyB0cmFuc2Zvcm1lZFNjaGVtYSA6IHN1YnNjaGVtYU9yU3Vic2NoZW1hQ29uZmlnLFxuICAgICAgICBza2lwVHlwZU1lcmdpbmcsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHZhbGlkYXRlUmVxdWVzdChkZWxlZ2F0aW9uQ29udGV4dCwgZG9jdW1lbnQpIHtcbiAgICBjb25zdCBlcnJvcnMgPSB2YWxpZGF0ZShkZWxlZ2F0aW9uQ29udGV4dC50YXJnZXRTY2hlbWEsIGRvY3VtZW50KTtcbiAgICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICBjb25zdCBjb21iaW5lZEVycm9yID0gbmV3IEFnZ3JlZ2F0ZUVycm9yKGVycm9ycywgZXJyb3JzLm1hcChlcnJvciA9PiBlcnJvci5tZXNzYWdlKS5qb2luKCcsIFxcbicpKTtcbiAgICAgICAgICAgIHRocm93IGNvbWJpbmVkRXJyb3I7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZXJyb3IgPSBlcnJvcnNbMF07XG4gICAgICAgIHRocm93IGVycm9yLm9yaWdpbmFsRXJyb3IgfHwgZXJyb3I7XG4gICAgfVxufVxuY29uc3QgR0xPQkFMX0NPTlRFWFQgPSB7fTtcbmZ1bmN0aW9uIGdldEV4ZWN1dG9yKGRlbGVnYXRpb25Db250ZXh0KSB7XG4gICAgY29uc3QgeyBzdWJzY2hlbWFDb25maWcsIHRhcmdldFNjaGVtYSwgY29udGV4dCB9ID0gZGVsZWdhdGlvbkNvbnRleHQ7XG4gICAgbGV0IGV4ZWN1dG9yID0gKHN1YnNjaGVtYUNvbmZpZyA9PT0gbnVsbCB8fCBzdWJzY2hlbWFDb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN1YnNjaGVtYUNvbmZpZy5leGVjdXRvcikgfHwgY3JlYXRlRGVmYXVsdEV4ZWN1dG9yKHRhcmdldFNjaGVtYSk7XG4gICAgaWYgKHN1YnNjaGVtYUNvbmZpZyA9PT0gbnVsbCB8fCBzdWJzY2hlbWFDb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN1YnNjaGVtYUNvbmZpZy5iYXRjaCkge1xuICAgICAgICBjb25zdCBiYXRjaGluZ09wdGlvbnMgPSBzdWJzY2hlbWFDb25maWcgPT09IG51bGwgfHwgc3Vic2NoZW1hQ29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzdWJzY2hlbWFDb25maWcuYmF0Y2hpbmdPcHRpb25zO1xuICAgICAgICBleGVjdXRvciA9IGdldEJhdGNoaW5nRXhlY3V0b3IoY29udGV4dCAhPT0gbnVsbCAmJiBjb250ZXh0ICE9PSB2b2lkIDAgPyBjb250ZXh0IDogR0xPQkFMX0NPTlRFWFQsIGV4ZWN1dG9yLCBiYXRjaGluZ09wdGlvbnMgPT09IG51bGwgfHwgYmF0Y2hpbmdPcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBiYXRjaGluZ09wdGlvbnMuZGF0YUxvYWRlck9wdGlvbnMsIGJhdGNoaW5nT3B0aW9ucyA9PT0gbnVsbCB8fCBiYXRjaGluZ09wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGJhdGNoaW5nT3B0aW9ucy5leHRlbnNpb25zUmVkdWNlcik7XG4gICAgfVxuICAgIHJldHVybiBleGVjdXRvcjtcbn1cbmV4cG9ydCBjb25zdCBjcmVhdGVEZWZhdWx0RXhlY3V0b3IgPSBtZW1vaXplMShmdW5jdGlvbiBjcmVhdGVEZWZhdWx0RXhlY3V0b3Ioc2NoZW1hKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGRlZmF1bHRFeGVjdXRvcihyZXF1ZXN0KSB7XG4gICAgICAgIHJldHVybiBub3JtYWxpemVkRXhlY3V0b3Ioe1xuICAgICAgICAgICAgc2NoZW1hLFxuICAgICAgICAgICAgZG9jdW1lbnQ6IHJlcXVlc3QuZG9jdW1lbnQsXG4gICAgICAgICAgICByb290VmFsdWU6IHJlcXVlc3Qucm9vdFZhbHVlLFxuICAgICAgICAgICAgY29udGV4dFZhbHVlOiByZXF1ZXN0LmNvbnRleHQsXG4gICAgICAgICAgICB2YXJpYWJsZVZhbHVlczogcmVxdWVzdC52YXJpYWJsZXMsXG4gICAgICAgICAgICBvcGVyYXRpb25OYW1lOiByZXF1ZXN0Lm9wZXJhdGlvbk5hbWUsXG4gICAgICAgIH0pO1xuICAgIH07XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js":
/*!*************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   finalizeGatewayRequest: () => (/* binding */ finalizeGatewayRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/updateArgument.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\");\n/* harmony import */ var _getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentMetadata.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\");\n\n\n\nfunction finalizeGatewayDocument(targetSchema, fragments, operations) {\n    var _a;\n    let usedVariables = [];\n    let usedFragments = [];\n    const newOperations = [];\n    let newFragments = [];\n    const validFragments = [];\n    const validFragmentsWithType = Object.create(null);\n    for (const fragment of fragments) {\n        const typeName = fragment.typeCondition.name.value;\n        const type = targetSchema.getType(typeName);\n        if (type != null) {\n            validFragments.push(fragment);\n            validFragmentsWithType[fragment.name.value] = type;\n        }\n    }\n    let fragmentSet = Object.create(null);\n    for (const operation of operations) {\n        const type = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getDefinedRootType)(targetSchema, operation.operation);\n        const { selectionSet, usedFragments: operationUsedFragments, usedVariables: operationUsedVariables, } = finalizeSelectionSet(targetSchema, type, validFragmentsWithType, operation.selectionSet);\n        usedFragments = union(usedFragments, operationUsedFragments);\n        const { usedVariables: collectedUsedVariables, newFragments: collectedNewFragments, fragmentSet: collectedFragmentSet, } = collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments);\n        const operationOrFragmentVariables = union(operationUsedVariables, collectedUsedVariables);\n        usedVariables = union(usedVariables, operationOrFragmentVariables);\n        newFragments = collectedNewFragments;\n        fragmentSet = collectedFragmentSet;\n        const variableDefinitions = ((_a = operation.variableDefinitions) !== null && _a !== void 0 ? _a : []).filter((variable) => operationOrFragmentVariables.indexOf(variable.variable.name.value) !== -1);\n        newOperations.push({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION,\n            operation: operation.operation,\n            name: operation.name,\n            directives: operation.directives,\n            variableDefinitions,\n            selectionSet,\n        });\n    }\n    const newDocument = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT,\n        definitions: [...newOperations, ...newFragments],\n    };\n    return {\n        usedVariables,\n        newDocument,\n    };\n}\nfunction finalizeGatewayRequest(originalRequest, delegationContext) {\n    let { document, variables } = originalRequest;\n    let { operations, fragments } = (0,_getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_2__.getDocumentMetadata)(document);\n    const { targetSchema, args } = delegationContext;\n    if (args) {\n        const requestWithNewVariables = addVariablesToRootFields(targetSchema, operations, args);\n        operations = requestWithNewVariables.newOperations;\n        variables = Object.assign({}, variables !== null && variables !== void 0 ? variables : {}, requestWithNewVariables.newVariables);\n    }\n    const { usedVariables, newDocument } = finalizeGatewayDocument(targetSchema, fragments, operations);\n    const newVariables = {};\n    if (variables != null) {\n        for (const variableName of usedVariables) {\n            const variableValue = variables[variableName];\n            if (variableValue !== undefined) {\n                newVariables[variableName] = variableValue;\n            }\n        }\n    }\n    return {\n        ...originalRequest,\n        document: newDocument,\n        variables: newVariables,\n    };\n}\nfunction addVariablesToRootFields(targetSchema, operations, args) {\n    const newVariables = Object.create(null);\n    const newOperations = operations.map((operation) => {\n        var _a, _b;\n        const variableDefinitionMap = ((_a = operation.variableDefinitions) !== null && _a !== void 0 ? _a : []).reduce((prev, def) => ({\n            ...prev,\n            [def.variable.name.value]: def,\n        }), {});\n        const type = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getDefinedRootType)(targetSchema, operation.operation);\n        const newSelections = [];\n        for (const selection of operation.selectionSet.selections) {\n            if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD) {\n                const argumentNodes = (_b = selection.arguments) !== null && _b !== void 0 ? _b : [];\n                const argumentNodeMap = argumentNodes.reduce((prev, argument) => ({\n                    ...prev,\n                    [argument.name.value]: argument,\n                }), {});\n                const targetField = type.getFields()[selection.name.value];\n                // excludes __typename\n                if (targetField != null) {\n                    updateArguments(targetField, argumentNodeMap, variableDefinitionMap, newVariables, args);\n                }\n                newSelections.push({\n                    ...selection,\n                    arguments: Object.values(argumentNodeMap),\n                });\n            }\n            else {\n                newSelections.push(selection);\n            }\n        }\n        const newSelectionSet = {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n            selections: newSelections,\n        };\n        return {\n            ...operation,\n            variableDefinitions: Object.values(variableDefinitionMap),\n            selectionSet: newSelectionSet,\n        };\n    });\n    return {\n        newOperations,\n        newVariables,\n    };\n}\nfunction updateArguments(targetField, argumentNodeMap, variableDefinitionMap, variableValues, newArgs) {\n    const generateVariableName = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.createVariableNameGenerator)(variableDefinitionMap);\n    for (const argument of targetField.args) {\n        const argName = argument.name;\n        const argType = argument.type;\n        if (argName in newArgs) {\n            (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.updateArgument)(argumentNodeMap, variableDefinitionMap, variableValues, argName, generateVariableName(argName), argType, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.serializeInputValue)(argType, newArgs[argName]));\n        }\n    }\n}\nfunction collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments) {\n    let remainingFragments = usedFragments.slice();\n    let usedVariables = [];\n    const newFragments = [];\n    while (remainingFragments.length !== 0) {\n        const nextFragmentName = remainingFragments.pop();\n        const fragment = validFragments.find(fr => fr.name.value === nextFragmentName);\n        if (fragment != null) {\n            const name = nextFragmentName;\n            const typeName = fragment.typeCondition.name.value;\n            const type = targetSchema.getType(typeName);\n            if (type == null) {\n                throw new Error(`Fragment reference type \"${typeName}\", but the type is not contained within the target schema.`);\n            }\n            const { selectionSet, usedFragments: fragmentUsedFragments, usedVariables: fragmentUsedVariables, } = finalizeSelectionSet(targetSchema, type, validFragmentsWithType, fragment.selectionSet);\n            remainingFragments = union(remainingFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            if (name && !(name in fragmentSet)) {\n                fragmentSet[name] = true;\n                newFragments.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: fragment.typeCondition,\n                    selectionSet,\n                });\n            }\n        }\n    }\n    return {\n        usedVariables,\n        newFragments,\n        fragmentSet,\n    };\n}\nconst filteredSelectionSetVisitorKeys = {\n    SelectionSet: ['selections'],\n    Field: ['selectionSet'],\n    InlineFragment: ['selectionSet'],\n    FragmentDefinition: ['selectionSet'],\n};\nconst variablesVisitorKeys = {\n    SelectionSet: ['selections'],\n    Field: ['arguments', 'directives', 'selectionSet'],\n    Argument: ['value'],\n    InlineFragment: ['directives', 'selectionSet'],\n    FragmentSpread: ['directives'],\n    FragmentDefinition: ['selectionSet'],\n    ObjectValue: ['fields'],\n    ObjectField: ['name', 'value'],\n    Directive: ['arguments'],\n    ListValue: ['values'],\n};\nfunction finalizeSelectionSet(schema, type, validFragments, selectionSet) {\n    const usedFragments = [];\n    const usedVariables = [];\n    const typeInfo = graphql__WEBPACK_IMPORTED_MODULE_5__.versionInfo.major < 16 ? new graphql__WEBPACK_IMPORTED_MODULE_6__.TypeInfo(schema, undefined, type) : new graphql__WEBPACK_IMPORTED_MODULE_6__.TypeInfo(schema, type);\n    const filteredSelectionSet = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.visit)(selectionSet, (0,graphql__WEBPACK_IMPORTED_MODULE_6__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD]: {\n            enter: node => {\n                const parentType = typeInfo.getParentType();\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isObjectType)(parentType) || (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isInterfaceType)(parentType)) {\n                    const fields = parentType.getFields();\n                    const field = node.name.value === '__typename' ? graphql__WEBPACK_IMPORTED_MODULE_9__.TypeNameMetaFieldDef : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    const args = field.args != null ? field.args : [];\n                    const argsMap = Object.create(null);\n                    for (const arg of args) {\n                        argsMap[arg.name] = arg;\n                    }\n                    if (node.arguments != null) {\n                        const newArgs = [];\n                        for (const arg of node.arguments) {\n                            if (arg.name.value in argsMap) {\n                                newArgs.push(arg);\n                            }\n                        }\n                        if (newArgs.length !== node.arguments.length) {\n                            return {\n                                ...node,\n                                arguments: newArgs,\n                            };\n                        }\n                    }\n                }\n            },\n            leave: node => {\n                const type = typeInfo.getType();\n                if (type == null) {\n                    throw new Error(`No type was found for field node ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_10__.inspect)(node)}.`);\n                }\n                const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(type);\n                if (!schema.getType(namedType.name) == null) {\n                    return null;\n                }\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isObjectType)(namedType) || (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isInterfaceType)(namedType)) {\n                    const selections = node.selectionSet != null ? node.selectionSet.selections : null;\n                    if (selections == null || selections.length === 0) {\n                        return null;\n                    }\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_SPREAD]: {\n            enter: node => {\n                if (!(node.name.value in validFragments)) {\n                    return null;\n                }\n                const parentType = typeInfo.getParentType();\n                const innerType = validFragments[node.name.value];\n                if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.implementsAbstractType)(schema, parentType, innerType)) {\n                    return null;\n                }\n                usedFragments.push(node.name.value);\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT]: {\n            enter: node => {\n                if (node.typeCondition != null) {\n                    const parentType = typeInfo.getParentType();\n                    const innerType = schema.getType(node.typeCondition.name.value);\n                    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.implementsAbstractType)(schema, parentType, innerType)) {\n                        return null;\n                    }\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET]: {\n            leave: node => {\n                const parentType = typeInfo.getParentType();\n                if (parentType != null && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isAbstractType)(parentType)) {\n                    const selections = node.selections.concat([\n                        {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n                            name: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                value: '__typename',\n                            },\n                        },\n                    ]);\n                    return {\n                        ...node,\n                        selections,\n                    };\n                }\n            },\n        },\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    filteredSelectionSetVisitorKeys);\n    (0,graphql__WEBPACK_IMPORTED_MODULE_7__.visit)(filteredSelectionSet, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE]: variableNode => {\n            usedVariables.push(variableNode.name.value);\n        },\n    }, \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    variablesVisitorKeys);\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments,\n        usedVariables,\n    };\n}\nfunction union(...arrays) {\n    const cache = Object.create(null);\n    const result = [];\n    for (const array of arrays) {\n        for (const item of array) {\n            if (!(item in cache)) {\n                cache[item] = true;\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDocumentMetadata: () => (/* binding */ getDocumentMetadata)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction getDocumentMetadata(document) {\n    const operations = [];\n    const fragments = [];\n    const fragmentNames = new Set();\n    for (let i = 0; i < document.definitions.length; i++) {\n        const def = document.definitions[i];\n        if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION) {\n            fragments.push(def);\n            fragmentNames.add(def.name.value);\n        }\n        else if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION) {\n            operations.push(def);\n        }\n    }\n    return {\n        operations,\n        fragments,\n        fragmentNames,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL2dldERvY3VtZW50TWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDeEI7QUFDUDtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUNBQWlDO0FBQ3JEO0FBQ0EseUJBQXlCLHlDQUFJO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qix5Q0FBSTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9nZXREb2N1bWVudE1ldGFkYXRhLmpzPzNiN2MiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERvY3VtZW50TWV0YWRhdGEoZG9jdW1lbnQpIHtcbiAgICBjb25zdCBvcGVyYXRpb25zID0gW107XG4gICAgY29uc3QgZnJhZ21lbnRzID0gW107XG4gICAgY29uc3QgZnJhZ21lbnROYW1lcyA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRvY3VtZW50LmRlZmluaXRpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGRlZiA9IGRvY3VtZW50LmRlZmluaXRpb25zW2ldO1xuICAgICAgICBpZiAoZGVmLmtpbmQgPT09IEtpbmQuRlJBR01FTlRfREVGSU5JVElPTikge1xuICAgICAgICAgICAgZnJhZ21lbnRzLnB1c2goZGVmKTtcbiAgICAgICAgICAgIGZyYWdtZW50TmFtZXMuYWRkKGRlZi5uYW1lLnZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChkZWYua2luZCA9PT0gS2luZC5PUEVSQVRJT05fREVGSU5JVElPTikge1xuICAgICAgICAgICAgb3BlcmF0aW9ucy5wdXNoKGRlZik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgb3BlcmF0aW9ucyxcbiAgICAgICAgZnJhZ21lbnRzLFxuICAgICAgICBmcmFnbWVudE5hbWVzLFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/mergeFields.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/mergeFields.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   annotateExternalObject: () => (/* binding */ annotateExternalObject),\n/* harmony export */   getActualFieldNodes: () => (/* binding */ getActualFieldNodes),\n/* harmony export */   getSubschema: () => (/* binding */ getSubschema),\n/* harmony export */   getUnpathedErrors: () => (/* binding */ getUnpathedErrors),\n/* harmony export */   isExternalObject: () => (/* binding */ isExternalObject),\n/* harmony export */   mergeFields: () => (/* binding */ mergeFields)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/jsutils/Path.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _symbols_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbols.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/symbols.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\n\nfunction isExternalObject(data) {\n    return data[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL] !== undefined;\n}\nfunction annotateExternalObject(object, errors, subschema, subschemaMap) {\n    Object.defineProperties(object, {\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_SUBSCHEMA_SYMBOL]: { value: subschema },\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL]: { value: subschemaMap },\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL]: { value: errors },\n    });\n    return object;\n}\nfunction getSubschema(object, responseKey) {\n    var _a;\n    return (_a = object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL][responseKey]) !== null && _a !== void 0 ? _a : object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_SUBSCHEMA_SYMBOL];\n}\nfunction getUnpathedErrors(object) {\n    return object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL];\n}\nconst EMPTY_ARRAY = [];\nconst EMPTY_OBJECT = Object.create(null);\nfunction asyncForEach(array, fn) {\n    return array.reduce((prev, curr) => prev.then(() => fn(curr)), new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => { }));\n}\nconst getActualFieldNodes = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.memoize1)(function (fieldNode) {\n    return [fieldNode];\n});\nfunction mergeFields(mergedTypeInfo, object, sourceSubschema, context, info) {\n    var _a;\n    const delegationMaps = mergedTypeInfo.delegationPlanBuilder(info.schema, sourceSubschema, info.variableValues != null && Object.keys(info.variableValues).length > 0 ? info.variableValues : EMPTY_OBJECT, info.fragments != null && Object.keys(info.fragments).length > 0 ? info.fragments : EMPTY_OBJECT, ((_a = info.fieldNodes) === null || _a === void 0 ? void 0 : _a.length)\n        ? info.fieldNodes.length === 1\n            ? getActualFieldNodes(info.fieldNodes[0])\n            : info.fieldNodes\n        : EMPTY_ARRAY);\n    return asyncForEach(delegationMaps, delegationMap => executeDelegationStage(mergedTypeInfo, delegationMap, object, context, info)).then(() => object);\n}\nfunction executeDelegationStage(mergedTypeInfo, delegationMap, object, context, info) {\n    const combinedErrors = object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL];\n    const path = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(info.path);\n    const combinedFieldSubschemaMap = object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL];\n    function finallyFn(source, subschema, selectionSet) {\n        var _a;\n        if (source instanceof Error || source == null) {\n            const schema = subschema.transformedSchema || info.schema;\n            const type = schema.getType(object.__typename);\n            const { fields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.collectFields)(schema, EMPTY_OBJECT, EMPTY_OBJECT, type, selectionSet);\n            const nullResult = {};\n            for (const [responseKey, fieldNodes] of fields) {\n                const combinedPath = [...path, responseKey];\n                if (source instanceof graphql__WEBPACK_IMPORTED_MODULE_5__.GraphQLError) {\n                    nullResult[responseKey] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.relocatedError)(source, combinedPath);\n                }\n                else if (source instanceof Error) {\n                    nullResult[responseKey] = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.locatedError)(source, fieldNodes, combinedPath);\n                }\n                else {\n                    nullResult[responseKey] = null;\n                }\n            }\n            source = nullResult;\n        }\n        else {\n            if (source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL]) {\n                combinedErrors.push(...source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL]);\n            }\n        }\n        const objectSubschema = source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_SUBSCHEMA_SYMBOL];\n        const fieldSubschemaMap = source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL];\n        for (const responseKey in source) {\n            const existingPropValue = object[responseKey];\n            const sourcePropValue = source[responseKey];\n            if (sourcePropValue != null || existingPropValue == null) {\n                object[responseKey] = sourcePropValue;\n            }\n            combinedFieldSubschemaMap[responseKey] = (_a = fieldSubschemaMap === null || fieldSubschemaMap === void 0 ? void 0 : fieldSubschemaMap[responseKey]) !== null && _a !== void 0 ? _a : objectSubschema;\n        }\n    }\n    return value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise.all([...delegationMap.entries()].map(([subschema, selectionSet]) => new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => {\n        const schema = subschema.transformedSchema || info.schema;\n        const type = schema.getType(object.__typename);\n        const resolver = mergedTypeInfo.resolvers.get(subschema);\n        if (resolver) {\n            return resolver(object, context, info, subschema, selectionSet, undefined, type);\n        }\n    })\n        .then(source => finallyFn(source, subschema, selectionSet))\n        .catch(error => finallyFn(error, subschema, selectionSet)))).then(() => { });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/mergeFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js":
/*!*************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareGatewayDocument: () => (/* binding */ prepareGatewayDocument)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDocumentMetadata.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\");\n\n\n\nfunction prepareGatewayDocument(originalDocument, transformedSchema, returnType, infoSchema) {\n    const wrappedConcreteTypesDocument = wrapConcreteTypes(returnType, transformedSchema, originalDocument);\n    if (infoSchema == null) {\n        return wrappedConcreteTypesDocument;\n    }\n    const { possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField, } = getSchemaMetaData(infoSchema, transformedSchema);\n    const { operations, fragments, fragmentNames } = (0,_getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentMetadata)(wrappedConcreteTypesDocument);\n    const { expandedFragments, fragmentReplacements } = getExpandedFragments(fragments, fragmentNames, possibleTypesMap);\n    const typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_1__.TypeInfo(transformedSchema);\n    const expandedDocument = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.DOCUMENT,\n        definitions: [...operations, ...fragments, ...expandedFragments],\n    };\n    const visitorKeyMap = {\n        Document: ['definitions'],\n        OperationDefinition: ['selectionSet'],\n        SelectionSet: ['selections'],\n        Field: ['selectionSet'],\n        InlineFragment: ['selectionSet'],\n        FragmentDefinition: ['selectionSet'],\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(expandedDocument, (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET]: node => visitSelectionSet(node, fragmentReplacements, transformedSchema, typeInfo, possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField),\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    visitorKeyMap);\n}\nfunction visitSelectionSet(node, fragmentReplacements, schema, typeInfo, possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField) {\n    var _a, _b;\n    const newSelections = new Set();\n    const maybeType = typeInfo.getParentType();\n    if (maybeType != null) {\n        const parentType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(maybeType);\n        const parentTypeName = parentType.name;\n        const fieldNodes = fieldNodesByType[parentTypeName];\n        if (fieldNodes) {\n            for (const fieldNode of fieldNodes) {\n                newSelections.add(fieldNode);\n            }\n        }\n        const interfaceExtensions = interfaceExtensionsMap[parentType.name];\n        const interfaceExtensionFields = [];\n        for (const selection of node.selections) {\n            if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT) {\n                if (selection.typeCondition != null) {\n                    const possibleTypes = possibleTypesMap[selection.typeCondition.name.value];\n                    if (possibleTypes == null) {\n                        newSelections.add(selection);\n                        continue;\n                    }\n                    for (const possibleTypeName of possibleTypes) {\n                        const maybePossibleType = schema.getType(possibleTypeName);\n                        if (maybePossibleType != null && (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.implementsAbstractType)(schema, parentType, maybePossibleType)) {\n                            newSelections.add(generateInlineFragment(possibleTypeName, selection.selectionSet));\n                        }\n                    }\n                }\n            }\n            else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD) {\n                const fragmentName = selection.name.value;\n                if (!fragmentReplacements[fragmentName]) {\n                    newSelections.add(selection);\n                    continue;\n                }\n                for (const replacement of fragmentReplacements[fragmentName]) {\n                    const typeName = replacement.typeName;\n                    const maybeReplacementType = schema.getType(typeName);\n                    if (maybeReplacementType != null && (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.implementsAbstractType)(schema, parentType, maybeType)) {\n                        newSelections.add({\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD,\n                            name: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                                value: replacement.fragmentName,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const fieldName = selection.name.value;\n                const fieldNodes = (_a = fieldNodesByField[parentTypeName]) === null || _a === void 0 ? void 0 : _a[fieldName];\n                if (fieldNodes != null) {\n                    for (const fieldNode of fieldNodes) {\n                        newSelections.add(fieldNode);\n                    }\n                }\n                const dynamicSelectionSets = (_b = dynamicSelectionSetsByField[parentTypeName]) === null || _b === void 0 ? void 0 : _b[fieldName];\n                if (dynamicSelectionSets != null) {\n                    for (const selectionSetFn of dynamicSelectionSets) {\n                        const selectionSet = selectionSetFn(selection);\n                        if (selectionSet != null) {\n                            for (const selection of selectionSet.selections) {\n                                newSelections.add(selection);\n                            }\n                        }\n                    }\n                }\n                if (interfaceExtensions === null || interfaceExtensions === void 0 ? void 0 : interfaceExtensions[fieldName]) {\n                    interfaceExtensionFields.push(selection);\n                }\n                else {\n                    newSelections.add(selection);\n                }\n            }\n        }\n        if (reversePossibleTypesMap[parentType.name]) {\n            newSelections.add({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                    value: '__typename',\n                },\n            });\n        }\n        if (interfaceExtensionFields.length) {\n            const possibleTypes = possibleTypesMap[parentType.name];\n            if (possibleTypes != null) {\n                for (const possibleType of possibleTypes) {\n                    newSelections.add(generateInlineFragment(possibleType, {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                        selections: interfaceExtensionFields,\n                    }));\n                }\n            }\n        }\n        return {\n            ...node,\n            selections: Array.from(newSelections),\n        };\n    }\n    return node;\n}\nfunction generateInlineFragment(typeName, selectionSet) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT,\n        typeCondition: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                value: typeName,\n            },\n        },\n        selectionSet,\n    };\n}\nconst getSchemaMetaData = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.memoize2)((sourceSchema, targetSchema) => {\n    var _a, _b, _c, _d;\n    const typeMap = sourceSchema.getTypeMap();\n    const targetTypeMap = targetSchema.getTypeMap();\n    const possibleTypesMap = Object.create(null);\n    const interfaceExtensionsMap = Object.create(null);\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(type)) {\n            const targetType = targetTypeMap[typeName];\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isInterfaceType)(type) && (0,graphql__WEBPACK_IMPORTED_MODULE_4__.isInterfaceType)(targetType)) {\n                const targetTypeFields = targetType.getFields();\n                const sourceTypeFields = type.getFields();\n                const extensionFields = Object.create(null);\n                let isExtensionFieldsEmpty = true;\n                for (const fieldName in sourceTypeFields) {\n                    if (!targetTypeFields[fieldName]) {\n                        extensionFields[fieldName] = true;\n                        isExtensionFieldsEmpty = false;\n                    }\n                }\n                if (!isExtensionFieldsEmpty) {\n                    interfaceExtensionsMap[typeName] = extensionFields;\n                }\n            }\n            if (interfaceExtensionsMap[typeName] || !(0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(targetType)) {\n                const implementations = sourceSchema.getPossibleTypes(type);\n                possibleTypesMap[typeName] = [];\n                for (const impl of implementations) {\n                    if (targetTypeMap[impl.name]) {\n                        possibleTypesMap[typeName].push(impl.name);\n                    }\n                }\n            }\n        }\n    }\n    const stitchingInfo = (_a = sourceSchema.extensions) === null || _a === void 0 ? void 0 : _a['stitchingInfo'];\n    return {\n        possibleTypesMap,\n        reversePossibleTypesMap: reversePossibleTypesMap(possibleTypesMap),\n        interfaceExtensionsMap,\n        fieldNodesByType: (_b = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.fieldNodesByType) !== null && _b !== void 0 ? _b : {},\n        fieldNodesByField: (_c = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.fieldNodesByField) !== null && _c !== void 0 ? _c : {},\n        dynamicSelectionSetsByField: (_d = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.dynamicSelectionSetsByField) !== null && _d !== void 0 ? _d : {},\n    };\n});\nfunction reversePossibleTypesMap(possibleTypesMap) {\n    const result = Object.create(null);\n    for (const typeName in possibleTypesMap) {\n        const toTypeNames = possibleTypesMap[typeName];\n        for (const toTypeName of toTypeNames) {\n            if (!result[toTypeName]) {\n                result[toTypeName] = [];\n            }\n            result[toTypeName].push(typeName);\n        }\n    }\n    return result;\n}\nfunction getExpandedFragments(fragments, fragmentNames, possibleTypesMap) {\n    let fragmentCounter = 0;\n    function generateFragmentName(typeName) {\n        let fragmentName;\n        do {\n            fragmentName = `_${typeName}_Fragment${fragmentCounter.toString()}`;\n            fragmentCounter++;\n        } while (fragmentNames.has(fragmentName));\n        return fragmentName;\n    }\n    const expandedFragments = [];\n    const fragmentReplacements = Object.create(null);\n    for (const fragment of fragments) {\n        const possibleTypes = possibleTypesMap[fragment.typeCondition.name.value];\n        if (possibleTypes != null) {\n            const fragmentName = fragment.name.value;\n            fragmentReplacements[fragmentName] = [];\n            for (const possibleTypeName of possibleTypes) {\n                const name = generateFragmentName(possibleTypeName);\n                fragmentNames.add(name);\n                expandedFragments.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                            value: possibleTypeName,\n                        },\n                    },\n                    selectionSet: fragment.selectionSet,\n                });\n                fragmentReplacements[fragmentName].push({\n                    fragmentName: name,\n                    typeName: possibleTypeName,\n                });\n            }\n        }\n    }\n    return {\n        expandedFragments,\n        fragmentReplacements,\n    };\n}\nfunction wrapConcreteTypes(returnType, targetSchema, document) {\n    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(returnType);\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_4__.isCompositeType)(namedType)) {\n        return document;\n    }\n    const rootTypeNames = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.getRootTypeNames)(targetSchema);\n    const typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_1__.TypeInfo(targetSchema);\n    const visitorKeys = {\n        Document: ['definitions'],\n        OperationDefinition: ['selectionSet'],\n        SelectionSet: ['selections'],\n        InlineFragment: ['selectionSet'],\n        FragmentDefinition: ['selectionSet'],\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(document, (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION]: (node) => {\n            const typeName = node.typeCondition.name.value;\n            if (!rootTypeNames.has(typeName)) {\n                return false;\n            }\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD]: (node) => {\n            const type = typeInfo.getType();\n            if (type != null && (0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)((0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(type))) {\n                return {\n                    ...node,\n                    selectionSet: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                        selections: [\n                            {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT,\n                                typeCondition: {\n                                    kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAMED_TYPE,\n                                    name: {\n                                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                                        value: namedType.name,\n                                    },\n                                },\n                                selectionSet: node.selectionSet,\n                            },\n                        ],\n                    },\n                };\n            }\n        },\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    visitorKeys);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL3ByZXBhcmVHYXRld2F5RG9jdW1lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQW9JO0FBQzFDO0FBQzNCO0FBQ3hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHVJQUF1STtBQUNuSixZQUFZLHVDQUF1QyxFQUFFLDRFQUFtQjtBQUN4RSxZQUFZLDBDQUEwQztBQUN0RCx5QkFBeUIsNkNBQVE7QUFDakM7QUFDQSxjQUFjLHlDQUFJO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBSyxtQkFBbUIsMERBQWlCO0FBQ3BELFNBQVMseUNBQUk7QUFDYixLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscURBQVk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMseUNBQUk7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCw0RUFBc0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyx5Q0FBSTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdELDRFQUFzQjtBQUM5RTtBQUNBLGtDQUFrQyx5Q0FBSTtBQUN0QztBQUNBLHNDQUFzQyx5Q0FBSTtBQUMxQztBQUNBLDZCQUE2QjtBQUM3Qix5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5Q0FBSTtBQUMxQjtBQUNBLDBCQUEwQix5Q0FBSTtBQUM5QjtBQUNBLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlDQUFJO0FBQ2xDO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUNBQUk7QUFDbEI7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQSxzQkFBc0IseUNBQUk7QUFDMUI7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4REFBUTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksdURBQWM7QUFDMUI7QUFDQSxnQkFBZ0Isd0RBQWUsVUFBVSx3REFBZTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscURBQXFELHVEQUFjO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlLQUFpSztBQUNqSyxtS0FBbUs7QUFDbkssdUxBQXVMO0FBQ3ZMO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixTQUFTLFdBQVcsMkJBQTJCO0FBQzlFO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlDQUFJO0FBQzlCO0FBQ0EsOEJBQThCLHlDQUFJO0FBQ2xDO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0EsOEJBQThCLHlDQUFJO0FBQ2xDO0FBQ0Esa0NBQWtDLHlDQUFJO0FBQ3RDO0FBQ0EseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHFEQUFZO0FBQ2xDLFNBQVMsd0RBQWU7QUFDeEI7QUFDQTtBQUNBLDBCQUEwQixzRUFBZ0I7QUFDMUMseUJBQXlCLDZDQUFRO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyw4Q0FBSyxXQUFXLDBEQUFpQjtBQUM1QyxTQUFTLHlDQUFJO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsU0FBUyx5Q0FBSTtBQUNiO0FBQ0EsZ0NBQWdDLHVEQUFjLENBQUMscURBQVk7QUFDM0Q7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlDQUFJO0FBQ2xDO0FBQ0E7QUFDQSxzQ0FBc0MseUNBQUk7QUFDMUM7QUFDQSwwQ0FBMEMseUNBQUk7QUFDOUM7QUFDQSw4Q0FBOEMseUNBQUk7QUFDbEQ7QUFDQSxxQ0FBcUM7QUFDckMsaUNBQWlDO0FBQ2pDO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9wcmVwYXJlR2F0ZXdheURvY3VtZW50LmpzPzYzMzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgVHlwZUluZm8sIGdldE5hbWVkVHlwZSwgaXNBYnN0cmFjdFR5cGUsIGlzSW50ZXJmYWNlVHlwZSwgdmlzaXQsIHZpc2l0V2l0aFR5cGVJbmZvLCBpc0NvbXBvc2l0ZVR5cGUsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBpbXBsZW1lbnRzQWJzdHJhY3RUeXBlLCBnZXRSb290VHlwZU5hbWVzLCBtZW1vaXplMiB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IGdldERvY3VtZW50TWV0YWRhdGEgfSBmcm9tICcuL2dldERvY3VtZW50TWV0YWRhdGEuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHByZXBhcmVHYXRld2F5RG9jdW1lbnQob3JpZ2luYWxEb2N1bWVudCwgdHJhbnNmb3JtZWRTY2hlbWEsIHJldHVyblR5cGUsIGluZm9TY2hlbWEpIHtcbiAgICBjb25zdCB3cmFwcGVkQ29uY3JldGVUeXBlc0RvY3VtZW50ID0gd3JhcENvbmNyZXRlVHlwZXMocmV0dXJuVHlwZSwgdHJhbnNmb3JtZWRTY2hlbWEsIG9yaWdpbmFsRG9jdW1lbnQpO1xuICAgIGlmIChpbmZvU2NoZW1hID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHdyYXBwZWRDb25jcmV0ZVR5cGVzRG9jdW1lbnQ7XG4gICAgfVxuICAgIGNvbnN0IHsgcG9zc2libGVUeXBlc01hcCwgcmV2ZXJzZVBvc3NpYmxlVHlwZXNNYXAsIGludGVyZmFjZUV4dGVuc2lvbnNNYXAsIGZpZWxkTm9kZXNCeVR5cGUsIGZpZWxkTm9kZXNCeUZpZWxkLCBkeW5hbWljU2VsZWN0aW9uU2V0c0J5RmllbGQsIH0gPSBnZXRTY2hlbWFNZXRhRGF0YShpbmZvU2NoZW1hLCB0cmFuc2Zvcm1lZFNjaGVtYSk7XG4gICAgY29uc3QgeyBvcGVyYXRpb25zLCBmcmFnbWVudHMsIGZyYWdtZW50TmFtZXMgfSA9IGdldERvY3VtZW50TWV0YWRhdGEod3JhcHBlZENvbmNyZXRlVHlwZXNEb2N1bWVudCk7XG4gICAgY29uc3QgeyBleHBhbmRlZEZyYWdtZW50cywgZnJhZ21lbnRSZXBsYWNlbWVudHMgfSA9IGdldEV4cGFuZGVkRnJhZ21lbnRzKGZyYWdtZW50cywgZnJhZ21lbnROYW1lcywgcG9zc2libGVUeXBlc01hcCk7XG4gICAgY29uc3QgdHlwZUluZm8gPSBuZXcgVHlwZUluZm8odHJhbnNmb3JtZWRTY2hlbWEpO1xuICAgIGNvbnN0IGV4cGFuZGVkRG9jdW1lbnQgPSB7XG4gICAgICAgIGtpbmQ6IEtpbmQuRE9DVU1FTlQsXG4gICAgICAgIGRlZmluaXRpb25zOiBbLi4ub3BlcmF0aW9ucywgLi4uZnJhZ21lbnRzLCAuLi5leHBhbmRlZEZyYWdtZW50c10sXG4gICAgfTtcbiAgICBjb25zdCB2aXNpdG9yS2V5TWFwID0ge1xuICAgICAgICBEb2N1bWVudDogWydkZWZpbml0aW9ucyddLFxuICAgICAgICBPcGVyYXRpb25EZWZpbml0aW9uOiBbJ3NlbGVjdGlvblNldCddLFxuICAgICAgICBTZWxlY3Rpb25TZXQ6IFsnc2VsZWN0aW9ucyddLFxuICAgICAgICBGaWVsZDogWydzZWxlY3Rpb25TZXQnXSxcbiAgICAgICAgSW5saW5lRnJhZ21lbnQ6IFsnc2VsZWN0aW9uU2V0J10sXG4gICAgICAgIEZyYWdtZW50RGVmaW5pdGlvbjogWydzZWxlY3Rpb25TZXQnXSxcbiAgICB9O1xuICAgIHJldHVybiB2aXNpdChleHBhbmRlZERvY3VtZW50LCB2aXNpdFdpdGhUeXBlSW5mbyh0eXBlSW5mbywge1xuICAgICAgICBbS2luZC5TRUxFQ1RJT05fU0VUXTogbm9kZSA9PiB2aXNpdFNlbGVjdGlvblNldChub2RlLCBmcmFnbWVudFJlcGxhY2VtZW50cywgdHJhbnNmb3JtZWRTY2hlbWEsIHR5cGVJbmZvLCBwb3NzaWJsZVR5cGVzTWFwLCByZXZlcnNlUG9zc2libGVUeXBlc01hcCwgaW50ZXJmYWNlRXh0ZW5zaW9uc01hcCwgZmllbGROb2Rlc0J5VHlwZSwgZmllbGROb2Rlc0J5RmllbGQsIGR5bmFtaWNTZWxlY3Rpb25TZXRzQnlGaWVsZCksXG4gICAgfSksIFxuICAgIC8vIHZpc2l0b3JLZXlzIGFyZ3VtZW50IHVzYWdlIGEgbGEgaHR0cHM6Ly9naXRodWIuY29tL2dhdHNieWpzL2dhdHNieS9ibG9iL21hc3Rlci9wYWNrYWdlcy9nYXRzYnktc291cmNlLWdyYXBocWwvc3JjL2JhdGNoaW5nL21lcmdlLXF1ZXJpZXMuanNcbiAgICAvLyBlbXB0eSBrZXlzIGNhbm5vdCBiZSByZW1vdmVkIG9ubHkgYmVjYXVzZSBvZiB0eXBlc2NyaXB0IGVycm9yc1xuICAgIC8vIHdpbGwgaG9wZWZ1bGx5IGJlIGZpeGVkIGluIGZ1dHVyZSB2ZXJzaW9uIG9mIGdyYXBocWwtanMgdG8gYmUgb3B0aW9uYWxcbiAgICB2aXNpdG9yS2V5TWFwKTtcbn1cbmZ1bmN0aW9uIHZpc2l0U2VsZWN0aW9uU2V0KG5vZGUsIGZyYWdtZW50UmVwbGFjZW1lbnRzLCBzY2hlbWEsIHR5cGVJbmZvLCBwb3NzaWJsZVR5cGVzTWFwLCByZXZlcnNlUG9zc2libGVUeXBlc01hcCwgaW50ZXJmYWNlRXh0ZW5zaW9uc01hcCwgZmllbGROb2Rlc0J5VHlwZSwgZmllbGROb2Rlc0J5RmllbGQsIGR5bmFtaWNTZWxlY3Rpb25TZXRzQnlGaWVsZCkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgbmV3U2VsZWN0aW9ucyA9IG5ldyBTZXQoKTtcbiAgICBjb25zdCBtYXliZVR5cGUgPSB0eXBlSW5mby5nZXRQYXJlbnRUeXBlKCk7XG4gICAgaWYgKG1heWJlVHlwZSAhPSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHBhcmVudFR5cGUgPSBnZXROYW1lZFR5cGUobWF5YmVUeXBlKTtcbiAgICAgICAgY29uc3QgcGFyZW50VHlwZU5hbWUgPSBwYXJlbnRUeXBlLm5hbWU7XG4gICAgICAgIGNvbnN0IGZpZWxkTm9kZXMgPSBmaWVsZE5vZGVzQnlUeXBlW3BhcmVudFR5cGVOYW1lXTtcbiAgICAgICAgaWYgKGZpZWxkTm9kZXMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROb2RlIG9mIGZpZWxkTm9kZXMpIHtcbiAgICAgICAgICAgICAgICBuZXdTZWxlY3Rpb25zLmFkZChmaWVsZE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGludGVyZmFjZUV4dGVuc2lvbnMgPSBpbnRlcmZhY2VFeHRlbnNpb25zTWFwW3BhcmVudFR5cGUubmFtZV07XG4gICAgICAgIGNvbnN0IGludGVyZmFjZUV4dGVuc2lvbkZpZWxkcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdGlvbiBvZiBub2RlLnNlbGVjdGlvbnMpIHtcbiAgICAgICAgICAgIGlmIChzZWxlY3Rpb24ua2luZCA9PT0gS2luZC5JTkxJTkVfRlJBR01FTlQpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0aW9uLnR5cGVDb25kaXRpb24gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBwb3NzaWJsZVR5cGVzID0gcG9zc2libGVUeXBlc01hcFtzZWxlY3Rpb24udHlwZUNvbmRpdGlvbi5uYW1lLnZhbHVlXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBvc3NpYmxlVHlwZXMgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3U2VsZWN0aW9ucy5hZGQoc2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcG9zc2libGVUeXBlTmFtZSBvZiBwb3NzaWJsZVR5cGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBtYXliZVBvc3NpYmxlVHlwZSA9IHNjaGVtYS5nZXRUeXBlKHBvc3NpYmxlVHlwZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG1heWJlUG9zc2libGVUeXBlICE9IG51bGwgJiYgaW1wbGVtZW50c0Fic3RyYWN0VHlwZShzY2hlbWEsIHBhcmVudFR5cGUsIG1heWJlUG9zc2libGVUeXBlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NlbGVjdGlvbnMuYWRkKGdlbmVyYXRlSW5saW5lRnJhZ21lbnQocG9zc2libGVUeXBlTmFtZSwgc2VsZWN0aW9uLnNlbGVjdGlvblNldCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoc2VsZWN0aW9uLmtpbmQgPT09IEtpbmQuRlJBR01FTlRfU1BSRUFEKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZnJhZ21lbnROYW1lID0gc2VsZWN0aW9uLm5hbWUudmFsdWU7XG4gICAgICAgICAgICAgICAgaWYgKCFmcmFnbWVudFJlcGxhY2VtZW50c1tmcmFnbWVudE5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1NlbGVjdGlvbnMuYWRkKHNlbGVjdGlvbik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHJlcGxhY2VtZW50IG9mIGZyYWdtZW50UmVwbGFjZW1lbnRzW2ZyYWdtZW50TmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdHlwZU5hbWUgPSByZXBsYWNlbWVudC50eXBlTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF5YmVSZXBsYWNlbWVudFR5cGUgPSBzY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChtYXliZVJlcGxhY2VtZW50VHlwZSAhPSBudWxsICYmIGltcGxlbWVudHNBYnN0cmFjdFR5cGUoc2NoZW1hLCBwYXJlbnRUeXBlLCBtYXliZVR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTZWxlY3Rpb25zLmFkZCh7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5GUkFHTUVOVF9TUFJFQUQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk5BTUUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiByZXBsYWNlbWVudC5mcmFnbWVudE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGROYW1lID0gc2VsZWN0aW9uLm5hbWUudmFsdWU7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGROb2RlcyA9IChfYSA9IGZpZWxkTm9kZXNCeUZpZWxkW3BhcmVudFR5cGVOYW1lXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKGZpZWxkTm9kZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTm9kZSBvZiBmaWVsZE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdTZWxlY3Rpb25zLmFkZChmaWVsZE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGR5bmFtaWNTZWxlY3Rpb25TZXRzID0gKF9iID0gZHluYW1pY1NlbGVjdGlvblNldHNCeUZpZWxkW3BhcmVudFR5cGVOYW1lXSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKGR5bmFtaWNTZWxlY3Rpb25TZXRzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3Rpb25TZXRGbiBvZiBkeW5hbWljU2VsZWN0aW9uU2V0cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0ID0gc2VsZWN0aW9uU2V0Rm4oc2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb25TZXQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc2VsZWN0aW9uIG9mIHNlbGVjdGlvblNldC5zZWxlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5ld1NlbGVjdGlvbnMuYWRkKHNlbGVjdGlvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpbnRlcmZhY2VFeHRlbnNpb25zID09PSBudWxsIHx8IGludGVyZmFjZUV4dGVuc2lvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGludGVyZmFjZUV4dGVuc2lvbnNbZmllbGROYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICBpbnRlcmZhY2VFeHRlbnNpb25GaWVsZHMucHVzaChzZWxlY3Rpb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3U2VsZWN0aW9ucy5hZGQoc2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHJldmVyc2VQb3NzaWJsZVR5cGVzTWFwW3BhcmVudFR5cGUubmFtZV0pIHtcbiAgICAgICAgICAgIG5ld1NlbGVjdGlvbnMuYWRkKHtcbiAgICAgICAgICAgICAgICBraW5kOiBLaW5kLkZJRUxELFxuICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ19fdHlwZW5hbWUnLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaW50ZXJmYWNlRXh0ZW5zaW9uRmllbGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgY29uc3QgcG9zc2libGVUeXBlcyA9IHBvc3NpYmxlVHlwZXNNYXBbcGFyZW50VHlwZS5uYW1lXTtcbiAgICAgICAgICAgIGlmIChwb3NzaWJsZVR5cGVzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHBvc3NpYmxlVHlwZSBvZiBwb3NzaWJsZVR5cGVzKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld1NlbGVjdGlvbnMuYWRkKGdlbmVyYXRlSW5saW5lRnJhZ21lbnQocG9zc2libGVUeXBlLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLlNFTEVDVElPTl9TRVQsXG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb25zOiBpbnRlcmZhY2VFeHRlbnNpb25GaWVsZHMsXG4gICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICBzZWxlY3Rpb25zOiBBcnJheS5mcm9tKG5ld1NlbGVjdGlvbnMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gbm9kZTtcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlSW5saW5lRnJhZ21lbnQodHlwZU5hbWUsIHNlbGVjdGlvblNldCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIGtpbmQ6IEtpbmQuSU5MSU5FX0ZSQUdNRU5ULFxuICAgICAgICB0eXBlQ29uZGl0aW9uOiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLk5BTUVEX1RZUEUsXG4gICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB0eXBlTmFtZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHNlbGVjdGlvblNldCxcbiAgICB9O1xufVxuY29uc3QgZ2V0U2NoZW1hTWV0YURhdGEgPSBtZW1vaXplMigoc291cmNlU2NoZW1hLCB0YXJnZXRTY2hlbWEpID0+IHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgY29uc3QgdHlwZU1hcCA9IHNvdXJjZVNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgY29uc3QgdGFyZ2V0VHlwZU1hcCA9IHRhcmdldFNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgY29uc3QgcG9zc2libGVUeXBlc01hcCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3QgaW50ZXJmYWNlRXh0ZW5zaW9uc01hcCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgaWYgKGlzQWJzdHJhY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCB0YXJnZXRUeXBlID0gdGFyZ2V0VHlwZU1hcFt0eXBlTmFtZV07XG4gICAgICAgICAgICBpZiAoaXNJbnRlcmZhY2VUeXBlKHR5cGUpICYmIGlzSW50ZXJmYWNlVHlwZSh0YXJnZXRUeXBlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldFR5cGVGaWVsZHMgPSB0YXJnZXRUeXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNvdXJjZVR5cGVGaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGV4dGVuc2lvbkZpZWxkcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICAgICAgbGV0IGlzRXh0ZW5zaW9uRmllbGRzRW1wdHkgPSB0cnVlO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHNvdXJjZVR5cGVGaWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCF0YXJnZXRUeXBlRmllbGRzW2ZpZWxkTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVuc2lvbkZpZWxkc1tmaWVsZE5hbWVdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzRXh0ZW5zaW9uRmllbGRzRW1wdHkgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWlzRXh0ZW5zaW9uRmllbGRzRW1wdHkpIHtcbiAgICAgICAgICAgICAgICAgICAgaW50ZXJmYWNlRXh0ZW5zaW9uc01hcFt0eXBlTmFtZV0gPSBleHRlbnNpb25GaWVsZHM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGludGVyZmFjZUV4dGVuc2lvbnNNYXBbdHlwZU5hbWVdIHx8ICFpc0Fic3RyYWN0VHlwZSh0YXJnZXRUeXBlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGltcGxlbWVudGF0aW9ucyA9IHNvdXJjZVNjaGVtYS5nZXRQb3NzaWJsZVR5cGVzKHR5cGUpO1xuICAgICAgICAgICAgICAgIHBvc3NpYmxlVHlwZXNNYXBbdHlwZU5hbWVdID0gW107XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBpbXBsIG9mIGltcGxlbWVudGF0aW9ucykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0VHlwZU1hcFtpbXBsLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NzaWJsZVR5cGVzTWFwW3R5cGVOYW1lXS5wdXNoKGltcGwubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgc3RpdGNoaW5nSW5mbyA9IChfYSA9IHNvdXJjZVNjaGVtYS5leHRlbnNpb25zKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbJ3N0aXRjaGluZ0luZm8nXTtcbiAgICByZXR1cm4ge1xuICAgICAgICBwb3NzaWJsZVR5cGVzTWFwLFxuICAgICAgICByZXZlcnNlUG9zc2libGVUeXBlc01hcDogcmV2ZXJzZVBvc3NpYmxlVHlwZXNNYXAocG9zc2libGVUeXBlc01hcCksXG4gICAgICAgIGludGVyZmFjZUV4dGVuc2lvbnNNYXAsXG4gICAgICAgIGZpZWxkTm9kZXNCeVR5cGU6IChfYiA9IHN0aXRjaGluZ0luZm8gPT09IG51bGwgfHwgc3RpdGNoaW5nSW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RpdGNoaW5nSW5mby5maWVsZE5vZGVzQnlUeXBlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiB7fSxcbiAgICAgICAgZmllbGROb2Rlc0J5RmllbGQ6IChfYyA9IHN0aXRjaGluZ0luZm8gPT09IG51bGwgfHwgc3RpdGNoaW5nSW5mbyA9PT0gdm9pZCAwID8gdm9pZCAwIDogc3RpdGNoaW5nSW5mby5maWVsZE5vZGVzQnlGaWVsZCkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDoge30sXG4gICAgICAgIGR5bmFtaWNTZWxlY3Rpb25TZXRzQnlGaWVsZDogKF9kID0gc3RpdGNoaW5nSW5mbyA9PT0gbnVsbCB8fCBzdGl0Y2hpbmdJbmZvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzdGl0Y2hpbmdJbmZvLmR5bmFtaWNTZWxlY3Rpb25TZXRzQnlGaWVsZCkgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDoge30sXG4gICAgfTtcbn0pO1xuZnVuY3Rpb24gcmV2ZXJzZVBvc3NpYmxlVHlwZXNNYXAocG9zc2libGVUeXBlc01hcCkge1xuICAgIGNvbnN0IHJlc3VsdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBwb3NzaWJsZVR5cGVzTWFwKSB7XG4gICAgICAgIGNvbnN0IHRvVHlwZU5hbWVzID0gcG9zc2libGVUeXBlc01hcFt0eXBlTmFtZV07XG4gICAgICAgIGZvciAoY29uc3QgdG9UeXBlTmFtZSBvZiB0b1R5cGVOYW1lcykge1xuICAgICAgICAgICAgaWYgKCFyZXN1bHRbdG9UeXBlTmFtZV0pIHtcbiAgICAgICAgICAgICAgICByZXN1bHRbdG9UeXBlTmFtZV0gPSBbXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdFt0b1R5cGVOYW1lXS5wdXNoKHR5cGVOYW1lKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZ2V0RXhwYW5kZWRGcmFnbWVudHMoZnJhZ21lbnRzLCBmcmFnbWVudE5hbWVzLCBwb3NzaWJsZVR5cGVzTWFwKSB7XG4gICAgbGV0IGZyYWdtZW50Q291bnRlciA9IDA7XG4gICAgZnVuY3Rpb24gZ2VuZXJhdGVGcmFnbWVudE5hbWUodHlwZU5hbWUpIHtcbiAgICAgICAgbGV0IGZyYWdtZW50TmFtZTtcbiAgICAgICAgZG8ge1xuICAgICAgICAgICAgZnJhZ21lbnROYW1lID0gYF8ke3R5cGVOYW1lfV9GcmFnbWVudCR7ZnJhZ21lbnRDb3VudGVyLnRvU3RyaW5nKCl9YDtcbiAgICAgICAgICAgIGZyYWdtZW50Q291bnRlcisrO1xuICAgICAgICB9IHdoaWxlIChmcmFnbWVudE5hbWVzLmhhcyhmcmFnbWVudE5hbWUpKTtcbiAgICAgICAgcmV0dXJuIGZyYWdtZW50TmFtZTtcbiAgICB9XG4gICAgY29uc3QgZXhwYW5kZWRGcmFnbWVudHMgPSBbXTtcbiAgICBjb25zdCBmcmFnbWVudFJlcGxhY2VtZW50cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgZm9yIChjb25zdCBmcmFnbWVudCBvZiBmcmFnbWVudHMpIHtcbiAgICAgICAgY29uc3QgcG9zc2libGVUeXBlcyA9IHBvc3NpYmxlVHlwZXNNYXBbZnJhZ21lbnQudHlwZUNvbmRpdGlvbi5uYW1lLnZhbHVlXTtcbiAgICAgICAgaWYgKHBvc3NpYmxlVHlwZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgZnJhZ21lbnROYW1lID0gZnJhZ21lbnQubmFtZS52YWx1ZTtcbiAgICAgICAgICAgIGZyYWdtZW50UmVwbGFjZW1lbnRzW2ZyYWdtZW50TmFtZV0gPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcG9zc2libGVUeXBlTmFtZSBvZiBwb3NzaWJsZVR5cGVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmFtZSA9IGdlbmVyYXRlRnJhZ21lbnROYW1lKHBvc3NpYmxlVHlwZU5hbWUpO1xuICAgICAgICAgICAgICAgIGZyYWdtZW50TmFtZXMuYWRkKG5hbWUpO1xuICAgICAgICAgICAgICAgIGV4cGFuZGVkRnJhZ21lbnRzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLkZSQUdNRU5UX0RFRklOSVRJT04sXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB0eXBlQ29uZGl0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk5BTUVEX1RZUEUsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBwb3NzaWJsZVR5cGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0OiBmcmFnbWVudC5zZWxlY3Rpb25TZXQsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgZnJhZ21lbnRSZXBsYWNlbWVudHNbZnJhZ21lbnROYW1lXS5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnROYW1lOiBuYW1lLFxuICAgICAgICAgICAgICAgICAgICB0eXBlTmFtZTogcG9zc2libGVUeXBlTmFtZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBleHBhbmRlZEZyYWdtZW50cyxcbiAgICAgICAgZnJhZ21lbnRSZXBsYWNlbWVudHMsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIHdyYXBDb25jcmV0ZVR5cGVzKHJldHVyblR5cGUsIHRhcmdldFNjaGVtYSwgZG9jdW1lbnQpIHtcbiAgICBjb25zdCBuYW1lZFR5cGUgPSBnZXROYW1lZFR5cGUocmV0dXJuVHlwZSk7XG4gICAgaWYgKCFpc0NvbXBvc2l0ZVR5cGUobmFtZWRUeXBlKSkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQ7XG4gICAgfVxuICAgIGNvbnN0IHJvb3RUeXBlTmFtZXMgPSBnZXRSb290VHlwZU5hbWVzKHRhcmdldFNjaGVtYSk7XG4gICAgY29uc3QgdHlwZUluZm8gPSBuZXcgVHlwZUluZm8odGFyZ2V0U2NoZW1hKTtcbiAgICBjb25zdCB2aXNpdG9yS2V5cyA9IHtcbiAgICAgICAgRG9jdW1lbnQ6IFsnZGVmaW5pdGlvbnMnXSxcbiAgICAgICAgT3BlcmF0aW9uRGVmaW5pdGlvbjogWydzZWxlY3Rpb25TZXQnXSxcbiAgICAgICAgU2VsZWN0aW9uU2V0OiBbJ3NlbGVjdGlvbnMnXSxcbiAgICAgICAgSW5saW5lRnJhZ21lbnQ6IFsnc2VsZWN0aW9uU2V0J10sXG4gICAgICAgIEZyYWdtZW50RGVmaW5pdGlvbjogWydzZWxlY3Rpb25TZXQnXSxcbiAgICB9O1xuICAgIHJldHVybiB2aXNpdChkb2N1bWVudCwgdmlzaXRXaXRoVHlwZUluZm8odHlwZUluZm8sIHtcbiAgICAgICAgW0tpbmQuRlJBR01FTlRfREVGSU5JVElPTl06IChub2RlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCB0eXBlTmFtZSA9IG5vZGUudHlwZUNvbmRpdGlvbi5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgaWYgKCFyb290VHlwZU5hbWVzLmhhcyh0eXBlTmFtZSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFtLaW5kLkZJRUxEXTogKG5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlSW5mby5nZXRUeXBlKCk7XG4gICAgICAgICAgICBpZiAodHlwZSAhPSBudWxsICYmIGlzQWJzdHJhY3RUeXBlKGdldE5hbWVkVHlwZSh0eXBlKSkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb25TZXQ6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0VMRUNUSU9OX1NFVCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuSU5MSU5FX0ZSQUdNRU5ULFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlQ29uZGl0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk5BTUVEX1RZUEUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBuYW1lZFR5cGUubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvblNldDogbm9kZS5zZWxlY3Rpb25TZXQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KSwgXG4gICAgLy8gdmlzaXRvcktleXMgYXJndW1lbnQgdXNhZ2UgYSBsYSBodHRwczovL2dpdGh1Yi5jb20vZ2F0c2J5anMvZ2F0c2J5L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2dhdHNieS1zb3VyY2UtZ3JhcGhxbC9zcmMvYmF0Y2hpbmcvbWVyZ2UtcXVlcmllcy5qc1xuICAgIC8vIGVtcHR5IGtleXMgY2Fubm90IGJlIHJlbW92ZWQgb25seSBiZWNhdXNlIG9mIHR5cGVzY3JpcHQgZXJyb3JzXG4gICAgLy8gd2lsbCBob3BlZnVsbHkgYmUgZml4ZWQgaW4gZnV0dXJlIHZlcnNpb24gb2YgZ3JhcGhxbC1qcyB0byBiZSBvcHRpb25hbFxuICAgIHZpc2l0b3JLZXlzKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveExternalValue: () => (/* binding */ resolveExternalValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n/* harmony import */ var _mergeFields_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergeFields.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n\n\n\nfunction resolveExternalValue(result, unpathedErrors, subschema, context, info, returnType = getReturnType(info), skipTypeMerging) {\n    const type = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(returnType);\n    if (result instanceof Error) {\n        return result;\n    }\n    if (result == null) {\n        return reportUnpathedErrorsViaNull(unpathedErrors);\n    }\n    if ('parseValue' in type) {\n        return type.parseValue(result);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(type)) {\n        return resolveExternalObject(type, result, unpathedErrors, subschema, context, info, skipTypeMerging);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        if (Array.isArray(result)) {\n            return resolveExternalList(type, result, unpathedErrors, subschema, context, info, skipTypeMerging);\n        }\n        return resolveExternalValue(result, unpathedErrors, subschema, context, info, type.ofType, skipTypeMerging);\n    }\n}\nfunction resolveExternalObject(type, object, unpathedErrors, subschema, context, info, skipTypeMerging) {\n    var _a;\n    // if we have already resolved this object, for example, when the identical object appears twice\n    // in a list, see https://github.com/ardatan/graphql-tools/issues/2304\n    if (!(0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.isExternalObject)(object)) {\n        (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.annotateExternalObject)(object, unpathedErrors, subschema, Object.create(null));\n    }\n    if (skipTypeMerging || info == null) {\n        return object;\n    }\n    const stitchingInfo = (_a = info.schema.extensions) === null || _a === void 0 ? void 0 : _a['stitchingInfo'];\n    if (stitchingInfo == null) {\n        return object;\n    }\n    const typeName = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(type) ? object.__typename : type.name;\n    const mergedTypeInfo = stitchingInfo.mergedTypes[typeName];\n    let targetSubschemas;\n    // Within the stitching context, delegation to a stitched GraphQLSchema or SubschemaConfig\n    // will be redirected to the appropriate Subschema object, from which merge targets can be queried.\n    if (mergedTypeInfo != null) {\n        targetSubschemas = mergedTypeInfo.targetSubschemas.get(subschema);\n    }\n    // If there are no merge targets from the subschema, return.\n    if (!targetSubschemas || !targetSubschemas.length) {\n        return object;\n    }\n    return (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.mergeFields)(mergedTypeInfo, object, subschema, context, info).resolve();\n}\nfunction resolveExternalList(type, list, unpathedErrors, subschema, context, info, skipTypeMerging) {\n    return list.map(listMember => resolveExternalValue(listMember, unpathedErrors, subschema, context, info, type.ofType, skipTypeMerging));\n}\nconst reportedErrors = new WeakMap();\nfunction reportUnpathedErrorsViaNull(unpathedErrors) {\n    if (unpathedErrors.length) {\n        const unreportedErrors = [];\n        for (const error of unpathedErrors) {\n            if (!reportedErrors.has(error)) {\n                unreportedErrors.push(error);\n                reportedErrors.set(error, true);\n            }\n        }\n        if (unreportedErrors.length) {\n            if (unreportedErrors.length === 1) {\n                return unreportedErrors[0];\n            }\n            const combinedError = new _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.AggregateError(unreportedErrors, unreportedErrors.map(error => error.message).join(', \\n'));\n            // We cast path as any for GraphQL.js 14 compat\n            // locatedError path argument must be defined, but it is just forwarded to a constructor that allows a undefined value\n            // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/locatedError.js#L25\n            // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/GraphQLError.js#L19\n            return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.locatedError)(combinedError, undefined, unreportedErrors[0].path);\n        }\n    }\n    return null;\n}\nfunction getReturnType(info) {\n    if (info == null) {\n        throw new Error(`Return type cannot be inferred without a source schema.`);\n    }\n    return info.returnType;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL3Jlc29sdmVFeHRlcm5hbFZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXNHO0FBQ2hEO0FBQ21DO0FBQ2xGO0FBQ1AsaUJBQWlCLHdEQUFlO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsd0RBQWU7QUFDNUI7QUFDQTtBQUNBLGFBQWEsbURBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLGlFQUFnQjtBQUN6QixRQUFRLHVFQUFzQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHVEQUFjO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDREQUFXO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxnRUFBYztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixxREFBWTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL3Jlc29sdmVFeHRlcm5hbFZhbHVlLmpzPzI5YTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TnVsbGFibGVUeXBlLCBpc0NvbXBvc2l0ZVR5cGUsIGlzTGlzdFR5cGUsIGlzQWJzdHJhY3RUeXBlLCBsb2NhdGVkRXJyb3IsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBBZ2dyZWdhdGVFcnJvciB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IGFubm90YXRlRXh0ZXJuYWxPYmplY3QsIGlzRXh0ZXJuYWxPYmplY3QsIG1lcmdlRmllbGRzIH0gZnJvbSAnLi9tZXJnZUZpZWxkcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZUV4dGVybmFsVmFsdWUocmVzdWx0LCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCByZXR1cm5UeXBlID0gZ2V0UmV0dXJuVHlwZShpbmZvKSwgc2tpcFR5cGVNZXJnaW5nKSB7XG4gICAgY29uc3QgdHlwZSA9IGdldE51bGxhYmxlVHlwZShyZXR1cm5UeXBlKTtcbiAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG4gICAgaWYgKHJlc3VsdCA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiByZXBvcnRVbnBhdGhlZEVycm9yc1ZpYU51bGwodW5wYXRoZWRFcnJvcnMpO1xuICAgIH1cbiAgICBpZiAoJ3BhcnNlVmFsdWUnIGluIHR5cGUpIHtcbiAgICAgICAgcmV0dXJuIHR5cGUucGFyc2VWYWx1ZShyZXN1bHQpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0NvbXBvc2l0ZVR5cGUodHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVFeHRlcm5hbE9iamVjdCh0eXBlLCByZXN1bHQsIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIGNvbnRleHQsIGluZm8sIHNraXBUeXBlTWVyZ2luZyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzTGlzdFR5cGUodHlwZSkpIHtcbiAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVFeHRlcm5hbExpc3QodHlwZSwgcmVzdWx0LCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCBza2lwVHlwZU1lcmdpbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNvbHZlRXh0ZXJuYWxWYWx1ZShyZXN1bHQsIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIGNvbnRleHQsIGluZm8sIHR5cGUub2ZUeXBlLCBza2lwVHlwZU1lcmdpbmcpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHJlc29sdmVFeHRlcm5hbE9iamVjdCh0eXBlLCBvYmplY3QsIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIGNvbnRleHQsIGluZm8sIHNraXBUeXBlTWVyZ2luZykge1xuICAgIHZhciBfYTtcbiAgICAvLyBpZiB3ZSBoYXZlIGFscmVhZHkgcmVzb2x2ZWQgdGhpcyBvYmplY3QsIGZvciBleGFtcGxlLCB3aGVuIHRoZSBpZGVudGljYWwgb2JqZWN0IGFwcGVhcnMgdHdpY2VcbiAgICAvLyBpbiBhIGxpc3QsIHNlZSBodHRwczovL2dpdGh1Yi5jb20vYXJkYXRhbi9ncmFwaHFsLXRvb2xzL2lzc3Vlcy8yMzA0XG4gICAgaWYgKCFpc0V4dGVybmFsT2JqZWN0KG9iamVjdCkpIHtcbiAgICAgICAgYW5ub3RhdGVFeHRlcm5hbE9iamVjdChvYmplY3QsIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIE9iamVjdC5jcmVhdGUobnVsbCkpO1xuICAgIH1cbiAgICBpZiAoc2tpcFR5cGVNZXJnaW5nIHx8IGluZm8gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cbiAgICBjb25zdCBzdGl0Y2hpbmdJbmZvID0gKF9hID0gaW5mby5zY2hlbWEuZXh0ZW5zaW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWydzdGl0Y2hpbmdJbmZvJ107XG4gICAgaWYgKHN0aXRjaGluZ0luZm8gPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cbiAgICBjb25zdCB0eXBlTmFtZSA9IGlzQWJzdHJhY3RUeXBlKHR5cGUpID8gb2JqZWN0Ll9fdHlwZW5hbWUgOiB0eXBlLm5hbWU7XG4gICAgY29uc3QgbWVyZ2VkVHlwZUluZm8gPSBzdGl0Y2hpbmdJbmZvLm1lcmdlZFR5cGVzW3R5cGVOYW1lXTtcbiAgICBsZXQgdGFyZ2V0U3Vic2NoZW1hcztcbiAgICAvLyBXaXRoaW4gdGhlIHN0aXRjaGluZyBjb250ZXh0LCBkZWxlZ2F0aW9uIHRvIGEgc3RpdGNoZWQgR3JhcGhRTFNjaGVtYSBvciBTdWJzY2hlbWFDb25maWdcbiAgICAvLyB3aWxsIGJlIHJlZGlyZWN0ZWQgdG8gdGhlIGFwcHJvcHJpYXRlIFN1YnNjaGVtYSBvYmplY3QsIGZyb20gd2hpY2ggbWVyZ2UgdGFyZ2V0cyBjYW4gYmUgcXVlcmllZC5cbiAgICBpZiAobWVyZ2VkVHlwZUluZm8gIT0gbnVsbCkge1xuICAgICAgICB0YXJnZXRTdWJzY2hlbWFzID0gbWVyZ2VkVHlwZUluZm8udGFyZ2V0U3Vic2NoZW1hcy5nZXQoc3Vic2NoZW1hKTtcbiAgICB9XG4gICAgLy8gSWYgdGhlcmUgYXJlIG5vIG1lcmdlIHRhcmdldHMgZnJvbSB0aGUgc3Vic2NoZW1hLCByZXR1cm4uXG4gICAgaWYgKCF0YXJnZXRTdWJzY2hlbWFzIHx8ICF0YXJnZXRTdWJzY2hlbWFzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VGaWVsZHMobWVyZ2VkVHlwZUluZm8sIG9iamVjdCwgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvKS5yZXNvbHZlKCk7XG59XG5mdW5jdGlvbiByZXNvbHZlRXh0ZXJuYWxMaXN0KHR5cGUsIGxpc3QsIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIGNvbnRleHQsIGluZm8sIHNraXBUeXBlTWVyZ2luZykge1xuICAgIHJldHVybiBsaXN0Lm1hcChsaXN0TWVtYmVyID0+IHJlc29sdmVFeHRlcm5hbFZhbHVlKGxpc3RNZW1iZXIsIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIGNvbnRleHQsIGluZm8sIHR5cGUub2ZUeXBlLCBza2lwVHlwZU1lcmdpbmcpKTtcbn1cbmNvbnN0IHJlcG9ydGVkRXJyb3JzID0gbmV3IFdlYWtNYXAoKTtcbmZ1bmN0aW9uIHJlcG9ydFVucGF0aGVkRXJyb3JzVmlhTnVsbCh1bnBhdGhlZEVycm9ycykge1xuICAgIGlmICh1bnBhdGhlZEVycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgdW5yZXBvcnRlZEVycm9ycyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGVycm9yIG9mIHVucGF0aGVkRXJyb3JzKSB7XG4gICAgICAgICAgICBpZiAoIXJlcG9ydGVkRXJyb3JzLmhhcyhlcnJvcikpIHtcbiAgICAgICAgICAgICAgICB1bnJlcG9ydGVkRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJlcG9ydGVkRXJyb3JzLnNldChlcnJvciwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHVucmVwb3J0ZWRFcnJvcnMubGVuZ3RoKSB7XG4gICAgICAgICAgICBpZiAodW5yZXBvcnRlZEVycm9ycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5yZXBvcnRlZEVycm9yc1swXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvbWJpbmVkRXJyb3IgPSBuZXcgQWdncmVnYXRlRXJyb3IodW5yZXBvcnRlZEVycm9ycywgdW5yZXBvcnRlZEVycm9ycy5tYXAoZXJyb3IgPT4gZXJyb3IubWVzc2FnZSkuam9pbignLCBcXG4nKSk7XG4gICAgICAgICAgICAvLyBXZSBjYXN0IHBhdGggYXMgYW55IGZvciBHcmFwaFFMLmpzIDE0IGNvbXBhdFxuICAgICAgICAgICAgLy8gbG9jYXRlZEVycm9yIHBhdGggYXJndW1lbnQgbXVzdCBiZSBkZWZpbmVkLCBidXQgaXQgaXMganVzdCBmb3J3YXJkZWQgdG8gYSBjb25zdHJ1Y3RvciB0aGF0IGFsbG93cyBhIHVuZGVmaW5lZCB2YWx1ZVxuICAgICAgICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL2dyYXBocWwvZ3JhcGhxbC1qcy9ibG9iL2I0YmZmMGJhOWMxNWM5ZDcyNDVkZDY4NTU2ZTc1NGM0MWYyNjMyODkvc3JjL2Vycm9yL2xvY2F0ZWRFcnJvci5qcyNMMjVcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvYmxvYi9iNGJmZjBiYTljMTVjOWQ3MjQ1ZGQ2ODU1NmU3NTRjNDFmMjYzMjg5L3NyYy9lcnJvci9HcmFwaFFMRXJyb3IuanMjTDE5XG4gICAgICAgICAgICByZXR1cm4gbG9jYXRlZEVycm9yKGNvbWJpbmVkRXJyb3IsIHVuZGVmaW5lZCwgdW5yZXBvcnRlZEVycm9yc1swXS5wYXRoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldFJldHVyblR5cGUoaW5mbykge1xuICAgIGlmIChpbmZvID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXR1cm4gdHlwZSBjYW5ub3QgYmUgaW5mZXJyZWQgd2l0aG91dCBhIHNvdXJjZSBzY2hlbWEuYCk7XG4gICAgfVxuICAgIHJldHVybiBpbmZvLnJldHVyblR5cGU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js":
/*!******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneSubschemaConfig: () => (/* binding */ cloneSubschemaConfig),\n/* harmony export */   isSubschemaConfig: () => (/* binding */ isSubschemaConfig)\n/* harmony export */ });\nfunction isSubschemaConfig(value) {\n    return Boolean(value === null || value === void 0 ? void 0 : value.schema);\n}\nfunction cloneSubschemaConfig(subschemaConfig) {\n    var _a, _b;\n    const newSubschemaConfig = {\n        ...subschemaConfig,\n        transforms: subschemaConfig.transforms != null ? [...subschemaConfig.transforms] : undefined,\n    };\n    if (newSubschemaConfig.merge != null) {\n        newSubschemaConfig.merge = { ...subschemaConfig.merge };\n        for (const typeName in newSubschemaConfig.merge) {\n            const mergedTypeConfig = (newSubschemaConfig.merge[typeName] = { ...((_b = (_a = subschemaConfig.merge) === null || _a === void 0 ? void 0 : _a[typeName]) !== null && _b !== void 0 ? _b : {}) });\n            if (mergedTypeConfig.entryPoints != null) {\n                mergedTypeConfig.entryPoints = mergedTypeConfig.entryPoints.map(entryPoint => ({ ...entryPoint }));\n            }\n            if (mergedTypeConfig.fields != null) {\n                const fields = (mergedTypeConfig.fields = { ...mergedTypeConfig.fields });\n                for (const fieldName in fields) {\n                    fields[fieldName] = { ...fields[fieldName] };\n                }\n            }\n        }\n    }\n    return newSubschemaConfig;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL3N1YnNjaGVtYUNvbmZpZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDO0FBQ3JDO0FBQ0EsNkVBQTZFLDZIQUE2SCxHQUFHO0FBQzdNO0FBQ0EsaUdBQWlHLGVBQWU7QUFDaEg7QUFDQTtBQUNBLDREQUE0RCw0QkFBNEI7QUFDeEY7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vc3Vic2NoZW1hQ29uZmlnLmpzP2IyY2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzU3Vic2NoZW1hQ29uZmlnKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odmFsdWUgPT09IG51bGwgfHwgdmFsdWUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZhbHVlLnNjaGVtYSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY2xvbmVTdWJzY2hlbWFDb25maWcoc3Vic2NoZW1hQ29uZmlnKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBuZXdTdWJzY2hlbWFDb25maWcgPSB7XG4gICAgICAgIC4uLnN1YnNjaGVtYUNvbmZpZyxcbiAgICAgICAgdHJhbnNmb3Jtczogc3Vic2NoZW1hQ29uZmlnLnRyYW5zZm9ybXMgIT0gbnVsbCA/IFsuLi5zdWJzY2hlbWFDb25maWcudHJhbnNmb3Jtc10gOiB1bmRlZmluZWQsXG4gICAgfTtcbiAgICBpZiAobmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlICE9IG51bGwpIHtcbiAgICAgICAgbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlID0geyAuLi5zdWJzY2hlbWFDb25maWcubWVyZ2UgfTtcbiAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBuZXdTdWJzY2hlbWFDb25maWcubWVyZ2UpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lcmdlZFR5cGVDb25maWcgPSAobmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlW3R5cGVOYW1lXSA9IHsgLi4uKChfYiA9IChfYSA9IHN1YnNjaGVtYUNvbmZpZy5tZXJnZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW3R5cGVOYW1lXSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDoge30pIH0pO1xuICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVDb25maWcuZW50cnlQb2ludHMgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIG1lcmdlZFR5cGVDb25maWcuZW50cnlQb2ludHMgPSBtZXJnZWRUeXBlQ29uZmlnLmVudHJ5UG9pbnRzLm1hcChlbnRyeVBvaW50ID0+ICh7IC4uLmVudHJ5UG9pbnQgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVDb25maWcuZmllbGRzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSAobWVyZ2VkVHlwZUNvbmZpZy5maWVsZHMgPSB7IC4uLm1lcmdlZFR5cGVDb25maWcuZmllbGRzIH0pO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZHNbZmllbGROYW1lXSA9IHsgLi4uZmllbGRzW2ZpZWxkTmFtZV0gfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ld1N1YnNjaGVtYUNvbmZpZztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/symbols.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/symbols.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FIELD_SUBSCHEMA_MAP_SYMBOL: () => (/* binding */ FIELD_SUBSCHEMA_MAP_SYMBOL),\n/* harmony export */   OBJECT_SUBSCHEMA_SYMBOL: () => (/* binding */ OBJECT_SUBSCHEMA_SYMBOL),\n/* harmony export */   UNPATHED_ERRORS_SYMBOL: () => (/* binding */ UNPATHED_ERRORS_SYMBOL)\n/* harmony export */ });\nconst UNPATHED_ERRORS_SYMBOL = Symbol.for('subschemaErrors');\nconst OBJECT_SUBSCHEMA_SYMBOL = Symbol.for('initialSubschema');\nconst FIELD_SUBSCHEMA_MAP_SYMBOL = Symbol.for('subschemaMap');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL3N5bWJvbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQU87QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vc3ltYm9scy5qcz9hZTZlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBVTlBBVEhFRF9FUlJPUlNfU1lNQk9MID0gU3ltYm9sLmZvcignc3Vic2NoZW1hRXJyb3JzJyk7XG5leHBvcnQgY29uc3QgT0JKRUNUX1NVQlNDSEVNQV9TWU1CT0wgPSBTeW1ib2wuZm9yKCdpbml0aWFsU3Vic2NoZW1hJyk7XG5leHBvcnQgY29uc3QgRklFTERfU1VCU0NIRU1BX01BUF9TWU1CT0wgPSBTeW1ib2wuZm9yKCdzdWJzY2hlbWFNYXAnKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/symbols.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/execute.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/execute.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertValidExecutionArguments: () => (/* binding */ assertValidExecutionArguments),\n/* harmony export */   buildExecutionContext: () => (/* binding */ buildExecutionContext),\n/* harmony export */   buildResolveInfo: () => (/* binding */ buildResolveInfo),\n/* harmony export */   defaultFieldResolver: () => (/* binding */ defaultFieldResolver),\n/* harmony export */   defaultTypeResolver: () => (/* binding */ defaultTypeResolver),\n/* harmony export */   execute: () => (/* binding */ execute),\n/* harmony export */   executeSync: () => (/* binding */ executeSync),\n/* harmony export */   flattenIncrementalResults: () => (/* binding */ flattenIncrementalResults),\n/* harmony export */   getFieldDef: () => (/* binding */ getFieldDef),\n/* harmony export */   getFragmentsFromDocument: () => (/* binding */ getFragmentsFromDocument),\n/* harmony export */   isIncrementalResult: () => (/* binding */ isIncrementalResult),\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/validate.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Path.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./values.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/values.js\");\n/* harmony import */ var _promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./promiseForObject.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js\");\n/* harmony import */ var _flattenAsyncIterable_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./flattenAsyncIterable.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js\");\n/* harmony import */ var _invariant_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./invariant.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/invariant.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\n\n\n\n\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nconst collectSubfields = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize3)((exeContext, returnType, fieldNodes) => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectSubFields)(exeContext.schema, exeContext.fragments, exeContext.variableValues, returnType, fieldNodes));\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification,\n * including `@defer` and `@stream` as proposed in\n * https://github.com/graphql/graphql-spec/pull/742\n *\n * This function returns a Promise of an IncrementalExecutionResults\n * object. This object either consists of a single ExecutionResult, or an\n * object containing an `initialResult` and a stream of `subsequentResults`.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nfunction execute(args) {\n    // If a valid execution context cannot be created due to incorrect arguments,\n    // a \"Response\" with only errors is returned.\n    const exeContext = buildExecutionContext(args);\n    // Return early errors if execution context failed.\n    if (!('schema' in exeContext)) {\n        return {\n            errors: exeContext.map(e => {\n                var _a;\n                Object.defineProperty(e, 'extensions', {\n                    value: {\n                        ...e.extensions,\n                        http: {\n                            ...(_a = e.extensions) === null || _a === void 0 ? void 0 : _a['http'],\n                            status: 400,\n                        },\n                    },\n                });\n                return e;\n            }),\n        };\n    }\n    return executeImpl(exeContext);\n}\nfunction executeImpl(exeContext) {\n    // Return a Promise that will eventually resolve to the data described by\n    // The \"Response\" section of the GraphQL specification.\n    //\n    // If errors are encountered while executing a GraphQL field, only that\n    // field and its descendants will be omitted, and sibling fields will still\n    // be executed. An execution which encounters errors will still result in a\n    // resolved Promise.\n    //\n    // Errors from sub-fields of a NonNull type may propagate to the top level,\n    // at which point we still log the error and null the parent field, which\n    // in this case is the entire response.\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executeOperation(exeContext))\n        .then(data => {\n        const initialResult = buildResponse(data, exeContext.errors);\n        if (exeContext.subsequentPayloads.size > 0) {\n            return {\n                initialResult: {\n                    ...initialResult,\n                    hasNext: true,\n                },\n                subsequentResults: yieldSubsequentPayloads(exeContext),\n            };\n        }\n        return initialResult;\n    }, (error) => {\n        exeContext.errors.push(error);\n        return buildResponse(null, exeContext.errors);\n    })\n        .resolve();\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\nfunction executeSync(args) {\n    const result = execute(args);\n    // Assert that the execution was synchronous.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result) || 'initialResult' in result) {\n        throw new Error('GraphQL execution failed to complete synchronously.');\n    }\n    return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\nfunction buildResponse(data, errors) {\n    return errors.length === 0 ? { data } : { errors, data };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n    console.assert(!!document, 'Must provide document.');\n    // If the schema used for execution is invalid, throw an error.\n    (0,graphql__WEBPACK_IMPORTED_MODULE_4__.assertValidSchema)(schema);\n    // Variables, if provided, must be an object.\n    console.assert(rawVariableValues == null || (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(rawVariableValues), 'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.');\n}\nconst getFragmentsFromDocument = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getFragmentsFromDocument(document) {\n    const fragments = Object.create(null);\n    for (const definition of document.definitions) {\n        if (definition.kind === graphql__WEBPACK_IMPORTED_MODULE_5__.Kind.FRAGMENT_DEFINITION) {\n            fragments[definition.name.value] = definition;\n        }\n    }\n    return fragments;\n});\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * TODO: consider no longer exporting this function\n * @internal\n */\nfunction buildExecutionContext(args) {\n    var _a, _b;\n    const { schema, document, rootValue, contextValue, variableValues: rawVariableValues, operationName, fieldResolver, typeResolver, subscribeFieldResolver, } = args;\n    // If the schema used for execution is invalid, throw an error.\n    (0,graphql__WEBPACK_IMPORTED_MODULE_4__.assertValidSchema)(schema);\n    const fragments = getFragmentsFromDocument(document);\n    let operation;\n    for (const definition of document.definitions) {\n        switch (definition.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_5__.Kind.OPERATION_DEFINITION:\n                if (operationName == null) {\n                    if (operation !== undefined) {\n                        return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Must provide operation name if query contains multiple operations.')];\n                    }\n                    operation = definition;\n                }\n                else if (((_a = definition.name) === null || _a === void 0 ? void 0 : _a.value) === operationName) {\n                    operation = definition;\n                }\n                break;\n            default:\n            // ignore non-executable definitions\n        }\n    }\n    if (operation == null) {\n        if (operationName != null) {\n            return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Unknown operation named \"${operationName}\".`)];\n        }\n        return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Must provide an operation.')];\n    }\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    /* c8 ignore next */\n    const variableDefinitions = (_b = operation.variableDefinitions) !== null && _b !== void 0 ? _b : [];\n    const coercedVariableValues = (0,_values_js__WEBPACK_IMPORTED_MODULE_7__.getVariableValues)(schema, variableDefinitions, rawVariableValues !== null && rawVariableValues !== void 0 ? rawVariableValues : {}, {\n        maxErrors: 50,\n    });\n    if (coercedVariableValues.errors) {\n        return coercedVariableValues.errors;\n    }\n    return {\n        schema,\n        fragments,\n        rootValue,\n        contextValue,\n        operation,\n        variableValues: coercedVariableValues.coerced,\n        fieldResolver: fieldResolver !== null && fieldResolver !== void 0 ? fieldResolver : defaultFieldResolver,\n        typeResolver: typeResolver !== null && typeResolver !== void 0 ? typeResolver : defaultTypeResolver,\n        subscribeFieldResolver: subscribeFieldResolver !== null && subscribeFieldResolver !== void 0 ? subscribeFieldResolver : defaultFieldResolver,\n        subsequentPayloads: new Set(),\n        errors: [],\n    };\n}\nfunction buildPerEventExecutionContext(exeContext, payload) {\n    return {\n        ...exeContext,\n        rootValue: payload,\n        subsequentPayloads: new Set(),\n        errors: [],\n    };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\nfunction executeOperation(exeContext) {\n    const { operation, schema, fragments, variableValues, rootValue } = exeContext;\n    const rootType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.getDefinedRootType)(schema, operation.operation, [operation]);\n    if (rootType == null) {\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Schema is not configured to execute ${operation.operation} operation.`, {\n            nodes: operation,\n        });\n    }\n    const { fields: rootFields, patches } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, rootType, operation.selectionSet);\n    const path = undefined;\n    let result;\n    if (operation.operation === 'mutation') {\n        result = executeFieldsSerially(exeContext, rootType, rootValue, path, rootFields);\n    }\n    else {\n        result = executeFields(exeContext, rootType, rootValue, path, rootFields);\n    }\n    for (const patch of patches) {\n        const { label, fields: patchFields } = patch;\n        executeDeferredFragment(exeContext, rootType, rootValue, patchFields, label, path);\n    }\n    return result;\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.promiseReduce)(fields, (results, [responseName, fieldNodes]) => {\n        const fieldPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, responseName, parentType.name);\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath)).then(result => {\n            if (result === undefined) {\n                return results;\n            }\n            results[responseName] = result;\n            return results;\n        });\n    }, Object.create(null)).resolve();\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\nfunction executeFields(exeContext, parentType, sourceValue, path, fields, asyncPayloadRecord) {\n    const results = Object.create(null);\n    let containsPromise = false;\n    try {\n        for (const [responseName, fieldNodes] of fields) {\n            const fieldPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, responseName, parentType.name);\n            const result = executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath, asyncPayloadRecord);\n            if (result !== undefined) {\n                results[responseName] = result;\n                if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n                    containsPromise = true;\n                }\n            }\n        }\n    }\n    catch (error) {\n        if (containsPromise) {\n            // Ensure that any promises returned by other fields are handled, as they may also reject.\n            return (0,_promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__.promiseForObject)(results).finally(() => {\n                throw error;\n            });\n        }\n        throw error;\n    }\n    // If there are no promises, we can just return the object\n    if (!containsPromise) {\n        return results;\n    }\n    // Otherwise, results is a map from field name to the result of resolving that\n    // field, which is possibly a promise. Return a promise that will return this\n    // same map, but with any promises replaced with the values they resolved to.\n    return (0,_promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__.promiseForObject)(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\nfunction executeField(exeContext, parentType, source, fieldNodes, path, asyncPayloadRecord) {\n    var _a, _b;\n    const errors = (_a = asyncPayloadRecord === null || asyncPayloadRecord === void 0 ? void 0 : asyncPayloadRecord.errors) !== null && _a !== void 0 ? _a : exeContext.errors;\n    const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n    if (!fieldDef) {\n        return;\n    }\n    const returnType = fieldDef.type;\n    const resolveFn = (_b = fieldDef.resolve) !== null && _b !== void 0 ? _b : exeContext.fieldResolver;\n    const info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path);\n    // Get the resolve function, regardless of if its result is normal or abrupt (error).\n    try {\n        // Build a JS object of arguments from the field.arguments AST, using the\n        // variables scope to fulfill any variable references.\n        // TODO: find a way to memoize, in case this field is within a List type.\n        const args = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.getArgumentValues)(fieldDef, fieldNodes[0], exeContext.variableValues);\n        // The resolve function's optional third argument is a context value that\n        // is provided to every resolve function within an execution. It is commonly\n        // used to represent an authenticated user, or request-specific caches.\n        const contextValue = exeContext.contextValue;\n        const result = resolveFn(source, args, contextValue, info);\n        let completed;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n            completed = result.then(resolved => completeValue(exeContext, returnType, fieldNodes, info, path, resolved, asyncPayloadRecord));\n        }\n        else {\n            completed = completeValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n        }\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completed)) {\n            // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n            // to take a second callback for the error case.\n            return completed.then(undefined, rawError => {\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n                const handledError = handleFieldError(error, returnType, errors);\n                filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n                return handledError;\n            });\n        }\n        return completed;\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n        const handledError = handleFieldError(error, returnType, errors);\n        filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n        return handledError;\n    }\n}\n/**\n * TODO: consider no longer exporting this function\n * @internal\n */\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n    // The resolve function's optional fourth argument is a collection of\n    // information about the current execution state.\n    return {\n        fieldName: fieldDef.name,\n        fieldNodes,\n        returnType: fieldDef.type,\n        parentType,\n        path,\n        schema: exeContext.schema,\n        fragments: exeContext.fragments,\n        rootValue: exeContext.rootValue,\n        operation: exeContext.operation,\n        variableValues: exeContext.variableValues,\n    };\n}\nfunction handleFieldError(error, returnType, errors) {\n    // If the field type is non-nullable, then it is resolved without any\n    // protection from errors, however it still properly locates the error.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isNonNullType)(returnType)) {\n        throw error;\n    }\n    // Otherwise, error protection is applied, logging the error and resolving\n    // a null value for this field if one is encountered.\n    errors.push(error);\n    return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    // If result is an Error, throw a located error.\n    if (result instanceof Error) {\n        throw result;\n    }\n    // If field type is NonNull, complete for inner type, and throw field error\n    // if result is null.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isNonNullType)(returnType)) {\n        const completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result, asyncPayloadRecord);\n        if (completed === null) {\n            throw new Error(`Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`);\n        }\n        return completed;\n    }\n    // If result value is null or undefined then return null.\n    if (result == null) {\n        return null;\n    }\n    // If field type is List, complete each item in the list with the inner type\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isListType)(returnType)) {\n        return completeListValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n    // returning null if serialization is not possible.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isLeafType)(returnType)) {\n        return completeLeafValue(returnType, result);\n    }\n    // If field type is an abstract type, Interface or Union, determine the\n    // runtime Object type and complete for that type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isAbstractType)(returnType)) {\n        return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    // If field type is Object, execute and complete all sub-selections.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isObjectType)(returnType)) {\n        return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    /* c8 ignore next 6 */\n    // Not reachable, all possible output types have been considered.\n    console.assert(false, 'Cannot complete value of unexpected output type: ' + (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(returnType));\n}\n/**\n * Returns an object containing the `@stream` arguments if a field should be\n * streamed based on the experimental flag, stream directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getStreamValues(exeContext, fieldNodes, path) {\n    // do not stream inner lists of multi-dimensional lists\n    if (typeof path.key === 'number') {\n        return;\n    }\n    // validation only allows equivalent streams on multiple fields, so it is\n    // safe to only check the first fieldNode for the stream directive\n    const stream = (0,graphql__WEBPACK_IMPORTED_MODULE_15__.getDirectiveValues)(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_16__.GraphQLStreamDirective, fieldNodes[0], exeContext.variableValues);\n    if (!stream) {\n        return;\n    }\n    if (stream.if === false) {\n        return;\n    }\n    (0,_invariant_js__WEBPACK_IMPORTED_MODULE_17__.invariant)(typeof stream['initialCount'] === 'number', 'initialCount must be a number');\n    (0,_invariant_js__WEBPACK_IMPORTED_MODULE_17__.invariant)(stream['initialCount'] >= 0, 'initialCount must be a positive integer');\n    return {\n        initialCount: stream['initialCount'],\n        label: typeof stream['label'] === 'string' ? stream['label'] : undefined,\n    };\n}\n/**\n * Complete a async iterator value by completing the result and calling\n * recursively until all the results are completed.\n */\nasync function completeAsyncIteratorValue(exeContext, itemType, fieldNodes, info, path, iterator, asyncPayloadRecord) {\n    var _a;\n    const errors = (_a = asyncPayloadRecord === null || asyncPayloadRecord === void 0 ? void 0 : asyncPayloadRecord.errors) !== null && _a !== void 0 ? _a : exeContext.errors;\n    const stream = getStreamValues(exeContext, fieldNodes, path);\n    let containsPromise = false;\n    const completedResults = [];\n    let index = 0;\n    while (true) {\n        if (stream && typeof stream.initialCount === 'number' && index >= stream.initialCount) {\n            executeStreamIterator(index, iterator, exeContext, fieldNodes, info, itemType, path, stream.label, asyncPayloadRecord);\n            break;\n        }\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        let iteration;\n        try {\n            iteration = await iterator.next();\n            if (iteration.done) {\n                break;\n            }\n        }\n        catch (rawError) {\n            const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n            completedResults.push(handleFieldError(error, itemType, errors));\n            break;\n        }\n        if (completeListItemValue(iteration.value, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord)) {\n            containsPromise = true;\n        }\n        index += 1;\n    }\n    return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    var _a;\n    const itemType = returnType.ofType;\n    const errors = (_a = asyncPayloadRecord === null || asyncPayloadRecord === void 0 ? void 0 : asyncPayloadRecord.errors) !== null && _a !== void 0 ? _a : exeContext.errors;\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__.isAsyncIterable)(result)) {\n        const iterator = result[Symbol.asyncIterator]();\n        return completeAsyncIteratorValue(exeContext, itemType, fieldNodes, info, path, iterator, asyncPayloadRecord);\n    }\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isIterableObject)(result)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`);\n    }\n    const stream = getStreamValues(exeContext, fieldNodes, path);\n    // This is specified as a simple map, however we're optimizing the path\n    // where the list contains no Promises by avoiding creating another Promise.\n    let containsPromise = false;\n    let previousAsyncPayloadRecord = asyncPayloadRecord;\n    const completedResults = [];\n    let index = 0;\n    for (const item of result) {\n        // No need to modify the info object containing the path,\n        // since from here on it is not ever accessed by resolver functions.\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        if (stream && typeof stream.initialCount === 'number' && index >= stream.initialCount) {\n            previousAsyncPayloadRecord = executeStreamField(path, itemPath, item, exeContext, fieldNodes, info, itemType, stream.label, previousAsyncPayloadRecord);\n            index++;\n            continue;\n        }\n        if (completeListItemValue(item, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord)) {\n            containsPromise = true;\n        }\n        index++;\n    }\n    return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a list item value by adding it to the completed results.\n *\n * Returns true if the value is a Promise.\n */\nfunction completeListItemValue(item, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord) {\n    try {\n        let completedItem;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(item)) {\n            completedItem = item.then(resolved => completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved, asyncPayloadRecord));\n        }\n        else {\n            completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n        }\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n            // to take a second callback for the error case.\n            completedResults.push(completedItem.then(undefined, rawError => {\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                const handledError = handleFieldError(error, itemType, errors);\n                filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                return handledError;\n            }));\n            return true;\n        }\n        completedResults.push(completedItem);\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const handledError = handleFieldError(error, itemType, errors);\n        filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        completedResults.push(handledError);\n    }\n    return false;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\nfunction completeLeafValue(returnType, result) {\n    const serializedResult = returnType.serialize(result);\n    if (serializedResult == null) {\n        throw new Error(`Expected \\`${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(returnType)}.serialize(${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)})\\` to ` +\n            `return non-nullable value, returned: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(serializedResult)}`);\n    }\n    return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    var _a;\n    const resolveTypeFn = (_a = returnType.resolveType) !== null && _a !== void 0 ? _a : exeContext.typeResolver;\n    const contextValue = exeContext.contextValue;\n    const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(runtimeType)) {\n        return runtimeType.then(resolvedRuntimeType => completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result, asyncPayloadRecord));\n    }\n    return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result, asyncPayloadRecord);\n}\nfunction ensureValidRuntimeType(runtimeTypeName, exeContext, returnType, fieldNodes, info, result) {\n    if (runtimeTypeName == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`, { nodes: fieldNodes });\n    }\n    // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n    // TODO: remove in 17.0.0 release\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isObjectType)(runtimeTypeName)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.');\n    }\n    if (typeof runtimeTypeName !== 'string') {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n            `value ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)}, received \"${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(runtimeTypeName)}\".`);\n    }\n    const runtimeType = exeContext.schema.getType(runtimeTypeName);\n    if (runtimeType == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`, { nodes: fieldNodes });\n    }\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_13__.isObjectType)(runtimeType)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`, { nodes: fieldNodes });\n    }\n    if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`, { nodes: fieldNodes });\n    }\n    return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    // If there is an isTypeOf predicate function, call it with the\n    // current result. If isTypeOf returns false, then raise an error rather\n    // than continuing execution.\n    if (returnType.isTypeOf) {\n        const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOf)) {\n            return isTypeOf.then(resolvedIsTypeOf => {\n                if (!resolvedIsTypeOf) {\n                    throw invalidReturnTypeError(returnType, result, fieldNodes);\n                }\n                return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord);\n            });\n        }\n        if (!isTypeOf) {\n            throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n    }\n    return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord);\n}\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Expected value of type \"${returnType.name}\" but got: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)}.`, {\n        nodes: fieldNodes,\n    });\n}\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord) {\n    // Collect sub-fields to execute to complete this value.\n    const { fields: subFieldNodes, patches: subPatches } = collectSubfields(exeContext, returnType, fieldNodes);\n    const subFields = executeFields(exeContext, returnType, result, path, subFieldNodes, asyncPayloadRecord);\n    for (const subPatch of subPatches) {\n        const { label, fields: subPatchFieldNodes } = subPatch;\n        executeDeferredFragment(exeContext, returnType, result, subPatchFieldNodes, label, path, asyncPayloadRecord);\n    }\n    return subFields;\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\nconst defaultTypeResolver = function (value, contextValue, info, abstractType) {\n    // First, look for `__typename`.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(value) && typeof value['__typename'] === 'string') {\n        return value['__typename'];\n    }\n    // Otherwise, test each possible type.\n    const possibleTypes = info.schema.getPossibleTypes(abstractType);\n    const promisedIsTypeOfResults = [];\n    for (let i = 0; i < possibleTypes.length; i++) {\n        const type = possibleTypes[i];\n        if (type.isTypeOf) {\n            const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOfResult)) {\n                promisedIsTypeOfResults[i] = isTypeOfResult;\n            }\n            else if (isTypeOfResult) {\n                return type.name;\n            }\n        }\n    }\n    if (promisedIsTypeOfResults.length) {\n        return Promise.all(promisedIsTypeOfResults).then(isTypeOfResults => {\n            for (let i = 0; i < isTypeOfResults.length; i++) {\n                if (isTypeOfResults[i]) {\n                    return possibleTypes[i].name;\n                }\n            }\n        });\n    }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\nconst defaultFieldResolver = function (source, args, contextValue, info) {\n    // ensure source is a value for which property access is acceptable.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(source) || typeof source === 'function') {\n        const property = source[info.fieldName];\n        if (typeof property === 'function') {\n            return source[info.fieldName](args, contextValue, info);\n        }\n        return property;\n    }\n};\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification,\n * including `@defer` and `@stream` as proposed in\n * https://github.com/graphql/graphql-spec/pull/742\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with descriptive\n * errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription resolver\n * logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of result representing the response stream.\n *\n * Each result may be an ExecutionResult with no `hasNext` (if executing the\n * event did not use `@defer` or `@stream`), or an\n * `InitialIncrementalExecutionResult` or `SubsequentIncrementalExecutionResult`\n * (if executing the event used `@defer` or `@stream`). In the case of\n * incremental execution results, each event produces a single\n * `InitialIncrementalExecutionResult` followed by one or more\n * `SubsequentIncrementalExecutionResult`s; all but the last have `hasNext: true`,\n * and the last has `hasNext: false`. There is no interleaving between results\n * generated from the same original event.\n *\n * Accepts an object with named arguments.\n */\nfunction subscribe(args) {\n    // If a valid execution context cannot be created due to incorrect arguments,\n    // a \"Response\" with only errors is returned.\n    const exeContext = buildExecutionContext(args);\n    // Return early errors if execution context failed.\n    if (!('schema' in exeContext)) {\n        return {\n            errors: exeContext.map(e => {\n                var _a;\n                Object.defineProperty(e, 'extensions', {\n                    value: {\n                        ...e.extensions,\n                        http: {\n                            ...(_a = e.extensions) === null || _a === void 0 ? void 0 : _a['http'],\n                            status: 400,\n                        },\n                    },\n                });\n                return e;\n            }),\n        };\n    }\n    const resultOrStream = createSourceEventStreamImpl(exeContext);\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(resultOrStream)) {\n        return resultOrStream.then(resolvedResultOrStream => mapSourceToResponse(exeContext, resolvedResultOrStream));\n    }\n    return mapSourceToResponse(exeContext, resultOrStream);\n}\nfunction flattenIncrementalResults(incrementalResults) {\n    const subsequentIterator = incrementalResults.subsequentResults;\n    let initialResultSent = false;\n    let done = false;\n    return {\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        async next() {\n            if (done) {\n                return {\n                    value: undefined,\n                    done,\n                };\n            }\n            if (initialResultSent) {\n                return subsequentIterator.next();\n            }\n            initialResultSent = true;\n            return Promise.resolve({\n                value: incrementalResults.initialResult,\n                done,\n            });\n        },\n        return() {\n            done = true;\n            return subsequentIterator.return();\n        },\n        throw(error) {\n            done = true;\n            return subsequentIterator.throw(error);\n        },\n    };\n}\nasync function* ensureAsyncIterable(someExecutionResult) {\n    if ('initialResult' in someExecutionResult) {\n        yield* flattenIncrementalResults(someExecutionResult);\n    }\n    else {\n        yield someExecutionResult;\n    }\n}\nfunction mapSourceToResponse(exeContext, resultOrStream) {\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__.isAsyncIterable)(resultOrStream)) {\n        return resultOrStream;\n    }\n    // For each payload yielded from a subscription, map it over the normal\n    // GraphQL `execute` function, with `payload` as the rootValue.\n    // This implements the \"MapSourceToResponseEvent\" algorithm described in\n    // the GraphQL specification. The `execute` function provides the\n    // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n    // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n    return (0,_flattenAsyncIterable_js__WEBPACK_IMPORTED_MODULE_19__.flattenAsyncIterable)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_20__.mapAsyncIterator)(resultOrStream[Symbol.asyncIterator](), async (payload) => ensureAsyncIterable(await executeImpl(buildPerEventExecutionContext(exeContext, payload))), async function* (error) {\n        const wrappedError = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(error.message, {\n            originalError: error,\n            nodes: [exeContext.operation],\n        });\n        yield {\n            errors: [wrappedError],\n        };\n    }));\n}\nfunction createSourceEventStreamImpl(exeContext) {\n    try {\n        const eventStream = executeSubscription(exeContext);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(eventStream)) {\n            return eventStream.then(undefined, error => ({ errors: [error] }));\n        }\n        return eventStream;\n    }\n    catch (error) {\n        return { errors: [error] };\n    }\n}\nfunction executeSubscription(exeContext) {\n    var _a;\n    const { schema, fragments, operation, variableValues, rootValue } = exeContext;\n    const rootType = schema.getSubscriptionType();\n    if (rootType == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Schema is not configured to execute subscription operation.', { nodes: operation });\n    }\n    const { fields: rootFields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, rootType, operation.selectionSet);\n    const [responseName, fieldNodes] = [...rootFields.entries()][0];\n    const fieldName = fieldNodes[0].name.value;\n    const fieldDef = getFieldDef(schema, rootType, fieldNodes[0]);\n    if (!fieldDef) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`The subscription field \"${fieldName}\" is not defined.`, { nodes: fieldNodes });\n    }\n    const path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(undefined, responseName, rootType.name);\n    const info = buildResolveInfo(exeContext, fieldDef, fieldNodes, rootType, path);\n    try {\n        // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n        // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n        // Build a JS object of arguments from the field.arguments AST, using the\n        // variables scope to fulfill any variable references.\n        const args = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.getArgumentValues)(fieldDef, fieldNodes[0], variableValues);\n        // The resolve function's optional third argument is a context value that\n        // is provided to every resolve function within an execution. It is commonly\n        // used to represent an authenticated user, or request-specific caches.\n        const contextValue = exeContext.contextValue;\n        // Call the `subscribe()` resolver or the default resolver to produce an\n        // AsyncIterable yielding raw payloads.\n        const resolveFn = (_a = fieldDef.subscribe) !== null && _a !== void 0 ? _a : exeContext.subscribeFieldResolver;\n        const result = resolveFn(rootValue, args, contextValue, info);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n            return result.then(assertEventStream).then(undefined, error => {\n                throw (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(error, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n            });\n        }\n        return assertEventStream(result);\n    }\n    catch (error) {\n        throw (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(error, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n    }\n}\nfunction assertEventStream(result) {\n    if (result instanceof Error) {\n        throw result;\n    }\n    // Assert field returned an event stream, otherwise yield an error.\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__.isAsyncIterable)(result)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Subscription field must return Async Iterable. ' + `Received: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)}.`);\n    }\n    return result;\n}\nfunction executeDeferredFragment(exeContext, parentType, sourceValue, fields, label, path, parentContext) {\n    const asyncPayloadRecord = new DeferredFragmentRecord({\n        label,\n        path,\n        parentContext,\n        exeContext,\n    });\n    let promiseOrData;\n    try {\n        promiseOrData = executeFields(exeContext, parentType, sourceValue, path, fields, asyncPayloadRecord);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(promiseOrData)) {\n            promiseOrData = promiseOrData.then(null, e => {\n                asyncPayloadRecord.errors.push(e);\n                return null;\n            });\n        }\n    }\n    catch (e) {\n        asyncPayloadRecord.errors.push(e);\n        promiseOrData = null;\n    }\n    asyncPayloadRecord.addData(promiseOrData);\n}\nfunction executeStreamField(path, itemPath, item, exeContext, fieldNodes, info, itemType, label, parentContext) {\n    const asyncPayloadRecord = new StreamRecord({\n        label,\n        path: itemPath,\n        parentContext,\n        exeContext,\n    });\n    let completedItem;\n    try {\n        try {\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(item)) {\n                completedItem = item.then(resolved => completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved, asyncPayloadRecord));\n            }\n            else {\n                completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n            }\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n                // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n                // to take a second callback for the error case.\n                completedItem = completedItem.then(undefined, rawError => {\n                    const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                    const handledError = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n                    filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                    return handledError;\n                });\n            }\n        }\n        catch (rawError) {\n            const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n            completedItem = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n            filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        }\n    }\n    catch (error) {\n        asyncPayloadRecord.errors.push(error);\n        filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n        asyncPayloadRecord.addItems(null);\n        return asyncPayloadRecord;\n    }\n    let completedItems;\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n        completedItems = completedItem.then(value => [value], error => {\n            asyncPayloadRecord.errors.push(error);\n            filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n            return null;\n        });\n    }\n    else {\n        completedItems = [completedItem];\n    }\n    asyncPayloadRecord.addItems(completedItems);\n    return asyncPayloadRecord;\n}\nasync function executeStreamIteratorItem(iterator, exeContext, fieldNodes, info, itemType, asyncPayloadRecord, itemPath) {\n    let item;\n    try {\n        const { value, done } = await iterator.next();\n        if (done) {\n            asyncPayloadRecord.setIsCompletedIterator();\n            return { done, value: undefined };\n        }\n        item = value;\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const value = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n        // don't continue if iterator throws\n        return { done: true, value };\n    }\n    let completedItem;\n    try {\n        completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            completedItem = completedItem.then(undefined, rawError => {\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                const handledError = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n                filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                return handledError;\n            });\n        }\n        return { done: false, value: completedItem };\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const value = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n        filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        return { done: false, value };\n    }\n}\nasync function executeStreamIterator(initialIndex, iterator, exeContext, fieldNodes, info, itemType, path, label, parentContext) {\n    let index = initialIndex;\n    let previousAsyncPayloadRecord = parentContext !== null && parentContext !== void 0 ? parentContext : undefined;\n    while (true) {\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        const asyncPayloadRecord = new StreamRecord({\n            label,\n            path: itemPath,\n            parentContext: previousAsyncPayloadRecord,\n            iterator,\n            exeContext,\n        });\n        let iteration;\n        try {\n            iteration = await executeStreamIteratorItem(iterator, exeContext, fieldNodes, info, itemType, asyncPayloadRecord, itemPath);\n        }\n        catch (error) {\n            asyncPayloadRecord.errors.push(error);\n            filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n            asyncPayloadRecord.addItems(null);\n            // entire stream has errored and bubbled upwards\n            if (iterator === null || iterator === void 0 ? void 0 : iterator.return) {\n                iterator.return().catch(() => {\n                    // ignore errors\n                });\n            }\n            return;\n        }\n        const { done, value: completedItem } = iteration;\n        let completedItems;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            completedItems = completedItem.then(value => [value], error => {\n                asyncPayloadRecord.errors.push(error);\n                filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n                return null;\n            });\n        }\n        else {\n            completedItems = [completedItem];\n        }\n        asyncPayloadRecord.addItems(completedItems);\n        if (done) {\n            break;\n        }\n        previousAsyncPayloadRecord = asyncPayloadRecord;\n        index++;\n    }\n}\nfunction filterSubsequentPayloads(exeContext, nullPath, currentAsyncRecord) {\n    const nullPathArray = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(nullPath);\n    exeContext.subsequentPayloads.forEach(asyncRecord => {\n        var _a;\n        if (asyncRecord === currentAsyncRecord) {\n            // don't remove payload from where error originates\n            return;\n        }\n        for (let i = 0; i < nullPathArray.length; i++) {\n            if (asyncRecord.path[i] !== nullPathArray[i]) {\n                // asyncRecord points to a path unaffected by this payload\n                return;\n            }\n        }\n        // asyncRecord path points to nulled error field\n        if (isStreamPayload(asyncRecord) && ((_a = asyncRecord.iterator) === null || _a === void 0 ? void 0 : _a.return)) {\n            asyncRecord.iterator.return().catch(() => {\n                // ignore error\n            });\n        }\n        exeContext.subsequentPayloads.delete(asyncRecord);\n    });\n}\nfunction getCompletedIncrementalResults(exeContext) {\n    const incrementalResults = [];\n    for (const asyncPayloadRecord of exeContext.subsequentPayloads) {\n        const incrementalResult = {};\n        if (!asyncPayloadRecord.isCompleted) {\n            continue;\n        }\n        exeContext.subsequentPayloads.delete(asyncPayloadRecord);\n        if (isStreamPayload(asyncPayloadRecord)) {\n            const items = asyncPayloadRecord.items;\n            if (asyncPayloadRecord.isCompletedIterator) {\n                // async iterable resolver just finished but there may be pending payloads\n                continue;\n            }\n            incrementalResult.items = items;\n        }\n        else {\n            const data = asyncPayloadRecord.data;\n            incrementalResult.data = data !== null && data !== void 0 ? data : null;\n        }\n        incrementalResult.path = asyncPayloadRecord.path;\n        if (asyncPayloadRecord.label) {\n            incrementalResult.label = asyncPayloadRecord.label;\n        }\n        if (asyncPayloadRecord.errors.length > 0) {\n            incrementalResult.errors = asyncPayloadRecord.errors;\n        }\n        incrementalResults.push(incrementalResult);\n    }\n    return incrementalResults;\n}\nfunction yieldSubsequentPayloads(exeContext) {\n    let isDone = false;\n    async function next() {\n        if (isDone) {\n            return { value: undefined, done: true };\n        }\n        await Promise.race(Array.from(exeContext.subsequentPayloads).map(p => p.promise));\n        if (isDone) {\n            // a different call to next has exhausted all payloads\n            return { value: undefined, done: true };\n        }\n        const incremental = getCompletedIncrementalResults(exeContext);\n        const hasNext = exeContext.subsequentPayloads.size > 0;\n        if (!incremental.length && hasNext) {\n            return next();\n        }\n        if (!hasNext) {\n            isDone = true;\n        }\n        return {\n            value: incremental.length ? { incremental, hasNext } : { hasNext },\n            done: false,\n        };\n    }\n    function returnStreamIterators() {\n        const promises = [];\n        exeContext.subsequentPayloads.forEach(asyncPayloadRecord => {\n            var _a;\n            if (isStreamPayload(asyncPayloadRecord) && ((_a = asyncPayloadRecord.iterator) === null || _a === void 0 ? void 0 : _a.return)) {\n                promises.push(asyncPayloadRecord.iterator.return());\n            }\n        });\n        return Promise.all(promises);\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        next,\n        async return() {\n            await returnStreamIterators();\n            isDone = true;\n            return { value: undefined, done: true };\n        },\n        async throw(error) {\n            await returnStreamIterators();\n            isDone = true;\n            return Promise.reject(error);\n        },\n    };\n}\nclass DeferredFragmentRecord {\n    constructor(opts) {\n        this.type = 'defer';\n        this.label = opts.label;\n        this.path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(opts.path);\n        this.parentContext = opts.parentContext;\n        this.errors = [];\n        this._exeContext = opts.exeContext;\n        this._exeContext.subsequentPayloads.add(this);\n        this.isCompleted = false;\n        this.data = null;\n        this.promise = new Promise(resolve => {\n            this._resolve = MaybePromise => {\n                resolve(MaybePromise);\n            };\n        }).then(data => {\n            this.data = data;\n            this.isCompleted = true;\n        });\n    }\n    addData(data) {\n        var _a, _b, _c;\n        const parentData = (_a = this.parentContext) === null || _a === void 0 ? void 0 : _a.promise;\n        if (parentData) {\n            (_b = this._resolve) === null || _b === void 0 ? void 0 : _b.call(this, parentData.then(() => data));\n            return;\n        }\n        (_c = this._resolve) === null || _c === void 0 ? void 0 : _c.call(this, data);\n    }\n}\nclass StreamRecord {\n    constructor(opts) {\n        this.type = 'stream';\n        this.items = null;\n        this.label = opts.label;\n        this.path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(opts.path);\n        this.parentContext = opts.parentContext;\n        this.iterator = opts.iterator;\n        this.errors = [];\n        this._exeContext = opts.exeContext;\n        this._exeContext.subsequentPayloads.add(this);\n        this.isCompleted = false;\n        this.items = null;\n        this.promise = new Promise(resolve => {\n            this._resolve = MaybePromise => {\n                resolve(MaybePromise);\n            };\n        }).then(items => {\n            this.items = items;\n            this.isCompleted = true;\n        });\n    }\n    addItems(items) {\n        var _a, _b, _c;\n        const parentData = (_a = this.parentContext) === null || _a === void 0 ? void 0 : _a.promise;\n        if (parentData) {\n            (_b = this._resolve) === null || _b === void 0 ? void 0 : _b.call(this, parentData.then(() => items));\n            return;\n        }\n        (_c = this._resolve) === null || _c === void 0 ? void 0 : _c.call(this, items);\n    }\n    setIsCompletedIterator() {\n        this.isCompletedIterator = true;\n    }\n}\nfunction isStreamPayload(asyncPayload) {\n    return asyncPayload.type === 'stream';\n}\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n    const fieldName = fieldNode.name.value;\n    if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_21__.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n        return graphql__WEBPACK_IMPORTED_MODULE_21__.SchemaMetaFieldDef;\n    }\n    else if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_21__.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n        return graphql__WEBPACK_IMPORTED_MODULE_21__.TypeMetaFieldDef;\n    }\n    else if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_21__.TypeNameMetaFieldDef.name) {\n        return graphql__WEBPACK_IMPORTED_MODULE_21__.TypeNameMetaFieldDef;\n    }\n    return parentType.getFields()[fieldName];\n}\nfunction isIncrementalResult(result) {\n    return 'incremental' in result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/execute.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js":
/*!*********************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenAsyncIterable: () => (/* binding */ flattenAsyncIterable)\n/* harmony export */ });\n/**\n * Given an AsyncIterable of AsyncIterables, flatten all yielded results into a\n * single AsyncIterable.\n */\nfunction flattenAsyncIterable(iterable) {\n    // You might think this whole function could be replaced with\n    //\n    //    async function* flattenAsyncIterable(iterable) {\n    //      for await (const subIterator of iterable) {\n    //        yield* subIterator;\n    //      }\n    //    }\n    //\n    // but calling `.return()` on the iterator it returns won't interrupt the `for await`.\n    const topIterator = iterable[Symbol.asyncIterator]();\n    let currentNestedIterator;\n    let waitForCurrentNestedIterator;\n    let done = false;\n    async function next() {\n        if (done) {\n            return { value: undefined, done: true };\n        }\n        try {\n            if (!currentNestedIterator) {\n                // Somebody else is getting it already.\n                if (waitForCurrentNestedIterator) {\n                    await waitForCurrentNestedIterator;\n                    return await next();\n                }\n                // Nobody else is getting it. We should!\n                let resolve;\n                waitForCurrentNestedIterator = new Promise(r => {\n                    resolve = r;\n                });\n                const topIteratorResult = await topIterator.next();\n                if (topIteratorResult.done) {\n                    // Given that done only ever transitions from false to true,\n                    // require-atomic-updates is being unnecessarily cautious.\n                    done = true;\n                    return await next();\n                }\n                // eslint is making a reasonable point here, but we've explicitly protected\n                // ourself from the race condition by ensuring that only the single call\n                // that assigns to waitForCurrentNestedIterator is allowed to assign to\n                // currentNestedIterator or waitForCurrentNestedIterator.\n                currentNestedIterator = topIteratorResult.value[Symbol.asyncIterator]();\n                waitForCurrentNestedIterator = undefined;\n                resolve();\n                return await next();\n            }\n            const rememberCurrentNestedIterator = currentNestedIterator;\n            const nestedIteratorResult = await currentNestedIterator.next();\n            if (!nestedIteratorResult.done) {\n                return nestedIteratorResult;\n            }\n            // The nested iterator is done. If it's still the current one, make it not\n            // current. (If it's not the current one, somebody else has made us move on.)\n            if (currentNestedIterator === rememberCurrentNestedIterator) {\n                currentNestedIterator = undefined;\n            }\n            return await next();\n        }\n        catch (err) {\n            done = true;\n            throw err;\n        }\n    }\n    return {\n        next,\n        async return() {\n            var _a, _b;\n            done = true;\n            await Promise.all([(_a = currentNestedIterator === null || currentNestedIterator === void 0 ? void 0 : currentNestedIterator.return) === null || _a === void 0 ? void 0 : _a.call(currentNestedIterator), (_b = topIterator.return) === null || _b === void 0 ? void 0 : _b.call(topIterator)]);\n            return { value: undefined, done: true };\n        },\n        async throw(error) {\n            var _a, _b;\n            done = true;\n            await Promise.all([(_a = currentNestedIterator === null || currentNestedIterator === void 0 ? void 0 : currentNestedIterator.throw) === null || _a === void 0 ? void 0 : _a.call(currentNestedIterator, error), (_b = topIterator.throw) === null || _b === void 0 ? void 0 : _b.call(topIterator, error)]);\n            /* c8 ignore next */\n            throw error;\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9mbGF0dGVuQXN5bmNJdGVyYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL2ZsYXR0ZW5Bc3luY0l0ZXJhYmxlLmpzPzJhM2EiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBHaXZlbiBhbiBBc3luY0l0ZXJhYmxlIG9mIEFzeW5jSXRlcmFibGVzLCBmbGF0dGVuIGFsbCB5aWVsZGVkIHJlc3VsdHMgaW50byBhXG4gKiBzaW5nbGUgQXN5bmNJdGVyYWJsZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZsYXR0ZW5Bc3luY0l0ZXJhYmxlKGl0ZXJhYmxlKSB7XG4gICAgLy8gWW91IG1pZ2h0IHRoaW5rIHRoaXMgd2hvbGUgZnVuY3Rpb24gY291bGQgYmUgcmVwbGFjZWQgd2l0aFxuICAgIC8vXG4gICAgLy8gICAgYXN5bmMgZnVuY3Rpb24qIGZsYXR0ZW5Bc3luY0l0ZXJhYmxlKGl0ZXJhYmxlKSB7XG4gICAgLy8gICAgICBmb3IgYXdhaXQgKGNvbnN0IHN1Ykl0ZXJhdG9yIG9mIGl0ZXJhYmxlKSB7XG4gICAgLy8gICAgICAgIHlpZWxkKiBzdWJJdGVyYXRvcjtcbiAgICAvLyAgICAgIH1cbiAgICAvLyAgICB9XG4gICAgLy9cbiAgICAvLyBidXQgY2FsbGluZyBgLnJldHVybigpYCBvbiB0aGUgaXRlcmF0b3IgaXQgcmV0dXJucyB3b24ndCBpbnRlcnJ1cHQgdGhlIGBmb3IgYXdhaXRgLlxuICAgIGNvbnN0IHRvcEl0ZXJhdG9yID0gaXRlcmFibGVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgbGV0IGN1cnJlbnROZXN0ZWRJdGVyYXRvcjtcbiAgICBsZXQgd2FpdEZvckN1cnJlbnROZXN0ZWRJdGVyYXRvcjtcbiAgICBsZXQgZG9uZSA9IGZhbHNlO1xuICAgIGFzeW5jIGZ1bmN0aW9uIG5leHQoKSB7XG4gICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gICAgICAgIH1cbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmICghY3VycmVudE5lc3RlZEl0ZXJhdG9yKSB7XG4gICAgICAgICAgICAgICAgLy8gU29tZWJvZHkgZWxzZSBpcyBnZXR0aW5nIGl0IGFscmVhZHkuXG4gICAgICAgICAgICAgICAgaWYgKHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgYXdhaXQgd2FpdEZvckN1cnJlbnROZXN0ZWRJdGVyYXRvcjtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IG5leHQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gTm9ib2R5IGVsc2UgaXMgZ2V0dGluZyBpdC4gV2Ugc2hvdWxkIVxuICAgICAgICAgICAgICAgIGxldCByZXNvbHZlO1xuICAgICAgICAgICAgICAgIHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3IgPSBuZXcgUHJvbWlzZShyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSA9IHI7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgY29uc3QgdG9wSXRlcmF0b3JSZXN1bHQgPSBhd2FpdCB0b3BJdGVyYXRvci5uZXh0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHRvcEl0ZXJhdG9yUmVzdWx0LmRvbmUpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gR2l2ZW4gdGhhdCBkb25lIG9ubHkgZXZlciB0cmFuc2l0aW9ucyBmcm9tIGZhbHNlIHRvIHRydWUsXG4gICAgICAgICAgICAgICAgICAgIC8vIHJlcXVpcmUtYXRvbWljLXVwZGF0ZXMgaXMgYmVpbmcgdW5uZWNlc3NhcmlseSBjYXV0aW91cy5cbiAgICAgICAgICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBuZXh0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIGVzbGludCBpcyBtYWtpbmcgYSByZWFzb25hYmxlIHBvaW50IGhlcmUsIGJ1dCB3ZSd2ZSBleHBsaWNpdGx5IHByb3RlY3RlZFxuICAgICAgICAgICAgICAgIC8vIG91cnNlbGYgZnJvbSB0aGUgcmFjZSBjb25kaXRpb24gYnkgZW5zdXJpbmcgdGhhdCBvbmx5IHRoZSBzaW5nbGUgY2FsbFxuICAgICAgICAgICAgICAgIC8vIHRoYXQgYXNzaWducyB0byB3YWl0Rm9yQ3VycmVudE5lc3RlZEl0ZXJhdG9yIGlzIGFsbG93ZWQgdG8gYXNzaWduIHRvXG4gICAgICAgICAgICAgICAgLy8gY3VycmVudE5lc3RlZEl0ZXJhdG9yIG9yIHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3IuXG4gICAgICAgICAgICAgICAgY3VycmVudE5lc3RlZEl0ZXJhdG9yID0gdG9wSXRlcmF0b3JSZXN1bHQudmFsdWVbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgICAgICAgICAgICAgd2FpdEZvckN1cnJlbnROZXN0ZWRJdGVyYXRvciA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICByZXNvbHZlKCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGF3YWl0IG5leHQoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IHJlbWVtYmVyQ3VycmVudE5lc3RlZEl0ZXJhdG9yID0gY3VycmVudE5lc3RlZEl0ZXJhdG9yO1xuICAgICAgICAgICAgY29uc3QgbmVzdGVkSXRlcmF0b3JSZXN1bHQgPSBhd2FpdCBjdXJyZW50TmVzdGVkSXRlcmF0b3IubmV4dCgpO1xuICAgICAgICAgICAgaWYgKCFuZXN0ZWRJdGVyYXRvclJlc3VsdC5kb25lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG5lc3RlZEl0ZXJhdG9yUmVzdWx0O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVGhlIG5lc3RlZCBpdGVyYXRvciBpcyBkb25lLiBJZiBpdCdzIHN0aWxsIHRoZSBjdXJyZW50IG9uZSwgbWFrZSBpdCBub3RcbiAgICAgICAgICAgIC8vIGN1cnJlbnQuIChJZiBpdCdzIG5vdCB0aGUgY3VycmVudCBvbmUsIHNvbWVib2R5IGVsc2UgaGFzIG1hZGUgdXMgbW92ZSBvbi4pXG4gICAgICAgICAgICBpZiAoY3VycmVudE5lc3RlZEl0ZXJhdG9yID09PSByZW1lbWJlckN1cnJlbnROZXN0ZWRJdGVyYXRvcikge1xuICAgICAgICAgICAgICAgIGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBuZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICB0aHJvdyBlcnI7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV4dCxcbiAgICAgICAgYXN5bmMgcmV0dXJuKCkge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoWyhfYSA9IGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9PT0gbnVsbCB8fCBjdXJyZW50TmVzdGVkSXRlcmF0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnJlbnROZXN0ZWRJdGVyYXRvci5yZXR1cm4pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5jYWxsKGN1cnJlbnROZXN0ZWRJdGVyYXRvciksIChfYiA9IHRvcEl0ZXJhdG9yLnJldHVybikgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwodG9wSXRlcmF0b3IpXSk7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHRocm93KGVycm9yKSB7XG4gICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbKF9hID0gY3VycmVudE5lc3RlZEl0ZXJhdG9yID09PSBudWxsIHx8IGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogY3VycmVudE5lc3RlZEl0ZXJhdG9yLnRocm93KSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChjdXJyZW50TmVzdGVkSXRlcmF0b3IsIGVycm9yKSwgKF9iID0gdG9wSXRlcmF0b3IudGhyb3cpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKHRvcEl0ZXJhdG9yLCBlcnJvcildKTtcbiAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/invariant.js":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/invariant.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invariant: () => (/* binding */ invariant)\n/* harmony export */ });\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9pbnZhcmlhbnQuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vaW52YXJpYW50LmpzPzcxNDUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGludmFyaWFudChjb25kaXRpb24sIG1lc3NhZ2UpIHtcbiAgICBpZiAoIWNvbmRpdGlvbikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSAhPSBudWxsID8gbWVzc2FnZSA6ICdVbmV4cGVjdGVkIGludmFyaWFudCB0cmlnZ2VyZWQuJyk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/invariant.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js":
/*!*******************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizedExecutor: () => (/* binding */ normalizedExecutor)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _execute_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./execute.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/execute.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\nfunction normalizedExecutor(args) {\n    const operationAST = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getOperationAST)(args.document, args.operationName);\n    if (operationAST == null) {\n        throw new Error('Must provide an operation.');\n    }\n    if (operationAST.operation === 'subscription') {\n        return (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.subscribe)(args);\n    }\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.execute)(args))\n        .then((result) => {\n        if ('initialResult' in result) {\n            return (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.flattenIncrementalResults)(result);\n        }\n        return result;\n    })\n        .resolve();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9ub3JtYWxpemVkRXhlY3V0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQztBQUNtQztBQUMzQjtBQUMzQztBQUNQLHlCQUF5Qix3REFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVM7QUFDeEI7QUFDQSxlQUFlLDREQUFjLE9BQU8sb0RBQU87QUFDM0M7QUFDQTtBQUNBLG1CQUFtQixzRUFBeUI7QUFDNUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL25vcm1hbGl6ZWRFeGVjdXRvci5qcz9mYmE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE9wZXJhdGlvbkFTVCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZXhlY3V0ZSwgZmxhdHRlbkluY3JlbWVudGFsUmVzdWx0cywgc3Vic2NyaWJlIH0gZnJvbSAnLi9leGVjdXRlLmpzJztcbmltcG9ydCB7IFZhbHVlT3JQcm9taXNlIH0gZnJvbSAndmFsdWUtb3ItcHJvbWlzZSc7XG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplZEV4ZWN1dG9yKGFyZ3MpIHtcbiAgICBjb25zdCBvcGVyYXRpb25BU1QgPSBnZXRPcGVyYXRpb25BU1QoYXJncy5kb2N1bWVudCwgYXJncy5vcGVyYXRpb25OYW1lKTtcbiAgICBpZiAob3BlcmF0aW9uQVNUID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNdXN0IHByb3ZpZGUgYW4gb3BlcmF0aW9uLicpO1xuICAgIH1cbiAgICBpZiAob3BlcmF0aW9uQVNULm9wZXJhdGlvbiA9PT0gJ3N1YnNjcmlwdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIHN1YnNjcmliZShhcmdzKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiBleGVjdXRlKGFyZ3MpKVxuICAgICAgICAudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgIGlmICgnaW5pdGlhbFJlc3VsdCcgaW4gcmVzdWx0KSB7XG4gICAgICAgICAgICByZXR1cm4gZmxhdHRlbkluY3JlbWVudGFsUmVzdWx0cyhyZXN1bHQpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfSlcbiAgICAgICAgLnJlc29sdmUoKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js":
/*!*****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promiseForObject: () => (/* binding */ promiseForObject)\n/* harmony export */ });\n/**\n * This function transforms a JS object `Record<string, Promise<T>>` into\n * a `Promise<Record<string, T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nasync function promiseForObject(object) {\n    const resolvedObject = Object.create(null);\n    await Promise.all(Object.entries(object).map(async ([key, value]) => {\n        resolvedObject[key] = await value;\n    }));\n    return resolvedObject;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9wcm9taXNlRm9yT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vcHJvbWlzZUZvck9iamVjdC5qcz85YjgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBmdW5jdGlvbiB0cmFuc2Zvcm1zIGEgSlMgb2JqZWN0IGBSZWNvcmQ8c3RyaW5nLCBQcm9taXNlPFQ+PmAgaW50b1xuICogYSBgUHJvbWlzZTxSZWNvcmQ8c3RyaW5nLCBUPj5gXG4gKlxuICogVGhpcyBpcyBha2luIHRvIGJsdWViaXJkJ3MgYFByb21pc2UucHJvcHNgLCBidXQgaW1wbGVtZW50ZWQgb25seSB1c2luZ1xuICogYFByb21pc2UuYWxsYCBzbyBpdCB3aWxsIHdvcmsgd2l0aCBhbnkgaW1wbGVtZW50YXRpb24gb2YgRVM2IHByb21pc2VzLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcHJvbWlzZUZvck9iamVjdChvYmplY3QpIHtcbiAgICBjb25zdCByZXNvbHZlZE9iamVjdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgYXdhaXQgUHJvbWlzZS5hbGwoT2JqZWN0LmVudHJpZXMob2JqZWN0KS5tYXAoYXN5bmMgKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICByZXNvbHZlZE9iamVjdFtrZXldID0gYXdhaXQgdmFsdWU7XG4gICAgfSkpO1xuICAgIHJldHVybiByZXNvbHZlZE9iamVjdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/values.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/values.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVariableValues: () => (/* binding */ getVariableValues)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/coerceInputValue.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Path.js\");\n\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n    const errors = [];\n    const maxErrors = options === null || options === void 0 ? void 0 : options.maxErrors;\n    try {\n        const coerced = coerceVariableValues(schema, varDefNodes, inputs, error => {\n            if (maxErrors != null && errors.length >= maxErrors) {\n                throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)('Too many errors processing variables, error limit reached. Execution aborted.');\n            }\n            errors.push(error);\n        });\n        if (errors.length === 0) {\n            return { coerced };\n        }\n    }\n    catch (error) {\n        errors.push(error);\n    }\n    // @ts-expect-error - We know that errors is an array of GraphQLError.\n    return { errors };\n}\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n    const coercedValues = {};\n    for (const varDefNode of varDefNodes) {\n        const varName = varDefNode.variable.name.value;\n        const varType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.typeFromAST)(schema, varDefNode.type);\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInputType)(varType)) {\n            // Must use input types for variables. This should be caught during\n            // validation, however is checked again here for safety.\n            const varTypeStr = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.print)(varDefNode.type);\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`, { nodes: varDefNode.type }));\n            continue;\n        }\n        if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(inputs, varName)) {\n            if (varDefNode.defaultValue) {\n                coercedValues[varName] = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(varDefNode.defaultValue, varType);\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n                const varTypeStr = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(varType);\n                onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`, {\n                    nodes: varDefNode,\n                }));\n            }\n            continue;\n        }\n        const value = inputs[varName];\n        if (value === null && (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n            const varTypeStr = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(varType);\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`, {\n                nodes: varDefNode,\n            }));\n            continue;\n        }\n        coercedValues[varName] = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.coerceInputValue)(value, varType, (path, invalidValue, error) => {\n            let prefix = `Variable \"$${varName}\" got invalid value ` + (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(invalidValue);\n            if (path.length > 0) {\n                prefix += ` at \"${varName}${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.printPathArray)(path)}\"`;\n            }\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(prefix + '; ' + error.message, {\n                nodes: varDefNode,\n                originalError: error.originalError,\n            }));\n        });\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi92YWx1ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUEwRztBQUNQO0FBQ25HO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix3RUFBa0I7QUFDeEM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvREFBVztBQUNuQyxhQUFhLG9EQUFXO0FBQ3hCO0FBQ0E7QUFDQSwrQkFBK0IsOENBQUs7QUFDcEMsb0JBQW9CLHdFQUFrQixlQUFlLFFBQVEsNEJBQTRCLFdBQVcsNkNBQTZDLHdCQUF3QjtBQUN6SztBQUNBO0FBQ0EsYUFBYSxvRUFBYztBQUMzQjtBQUNBLHlDQUF5QyxxREFBWTtBQUNyRDtBQUNBLHFCQUFxQixzREFBYTtBQUNsQyxtQ0FBbUMsNkRBQU87QUFDMUMsd0JBQXdCLHdFQUFrQixlQUFlLFFBQVEsc0JBQXNCLFdBQVc7QUFDbEc7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0RBQWE7QUFDM0MsK0JBQStCLDZEQUFPO0FBQ3RDLG9CQUFvQix3RUFBa0IsZUFBZSxRQUFRLHNCQUFzQixXQUFXO0FBQzlGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxpQ0FBaUMseURBQWdCO0FBQ2pELHVDQUF1QyxRQUFRLHdCQUF3Qiw2REFBTztBQUM5RTtBQUNBLGtDQUFrQyxRQUFRLEVBQUUsb0VBQWMsT0FBTztBQUNqRTtBQUNBLG9CQUFvQix3RUFBa0IsYUFBYTtBQUNuRDtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vdmFsdWVzLmpzPzE3NDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJpbnQsIGlzSW5wdXRUeXBlLCBpc05vbk51bGxUeXBlLCBjb2VyY2VJbnB1dFZhbHVlLCB0eXBlRnJvbUFTVCwgdmFsdWVGcm9tQVNULCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgY3JlYXRlR3JhcGhRTEVycm9yLCBoYXNPd25Qcm9wZXJ0eSwgaW5zcGVjdCwgcHJpbnRQYXRoQXJyYXkgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG4vKipcbiAqIFByZXBhcmVzIGFuIG9iamVjdCBtYXAgb2YgdmFyaWFibGVWYWx1ZXMgb2YgdGhlIGNvcnJlY3QgdHlwZSBiYXNlZCBvbiB0aGVcbiAqIHByb3ZpZGVkIHZhcmlhYmxlIGRlZmluaXRpb25zIGFuZCBhcmJpdHJhcnkgaW5wdXQuIElmIHRoZSBpbnB1dCBjYW5ub3QgYmVcbiAqIHBhcnNlZCB0byBtYXRjaCB0aGUgdmFyaWFibGUgZGVmaW5pdGlvbnMsIGEgR3JhcGhRTEVycm9yIHdpbGwgYmUgdGhyb3duLlxuICpcbiAqIE5vdGU6IFRoZSByZXR1cm5lZCB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdCB3aXRoIGEgcHJvdG90eXBlLCBzaW5jZSBpdCBpc1xuICogZXhwb3NlZCB0byB1c2VyIGNvZGUuIENhcmUgc2hvdWxkIGJlIHRha2VuIHRvIG5vdCBwdWxsIHZhbHVlcyBmcm9tIHRoZVxuICogT2JqZWN0IHByb3RvdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFZhcmlhYmxlVmFsdWVzKHNjaGVtYSwgdmFyRGVmTm9kZXMsIGlucHV0cywgb3B0aW9ucykge1xuICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgIGNvbnN0IG1heEVycm9ycyA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5tYXhFcnJvcnM7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgY29lcmNlZCA9IGNvZXJjZVZhcmlhYmxlVmFsdWVzKHNjaGVtYSwgdmFyRGVmTm9kZXMsIGlucHV0cywgZXJyb3IgPT4ge1xuICAgICAgICAgICAgaWYgKG1heEVycm9ycyAhPSBudWxsICYmIGVycm9ycy5sZW5ndGggPj0gbWF4RXJyb3JzKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKCdUb28gbWFueSBlcnJvcnMgcHJvY2Vzc2luZyB2YXJpYWJsZXMsIGVycm9yIGxpbWl0IHJlYWNoZWQuIEV4ZWN1dGlvbiBhYm9ydGVkLicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiB7IGNvZXJjZWQgfTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgZXJyb3JzLnB1c2goZXJyb3IpO1xuICAgIH1cbiAgICAvLyBAdHMtZXhwZWN0LWVycm9yIC0gV2Uga25vdyB0aGF0IGVycm9ycyBpcyBhbiBhcnJheSBvZiBHcmFwaFFMRXJyb3IuXG4gICAgcmV0dXJuIHsgZXJyb3JzIH07XG59XG5mdW5jdGlvbiBjb2VyY2VWYXJpYWJsZVZhbHVlcyhzY2hlbWEsIHZhckRlZk5vZGVzLCBpbnB1dHMsIG9uRXJyb3IpIHtcbiAgICBjb25zdCBjb2VyY2VkVmFsdWVzID0ge307XG4gICAgZm9yIChjb25zdCB2YXJEZWZOb2RlIG9mIHZhckRlZk5vZGVzKSB7XG4gICAgICAgIGNvbnN0IHZhck5hbWUgPSB2YXJEZWZOb2RlLnZhcmlhYmxlLm5hbWUudmFsdWU7XG4gICAgICAgIGNvbnN0IHZhclR5cGUgPSB0eXBlRnJvbUFTVChzY2hlbWEsIHZhckRlZk5vZGUudHlwZSk7XG4gICAgICAgIGlmICghaXNJbnB1dFR5cGUodmFyVHlwZSkpIHtcbiAgICAgICAgICAgIC8vIE11c3QgdXNlIGlucHV0IHR5cGVzIGZvciB2YXJpYWJsZXMuIFRoaXMgc2hvdWxkIGJlIGNhdWdodCBkdXJpbmdcbiAgICAgICAgICAgIC8vIHZhbGlkYXRpb24sIGhvd2V2ZXIgaXMgY2hlY2tlZCBhZ2FpbiBoZXJlIGZvciBzYWZldHkuXG4gICAgICAgICAgICBjb25zdCB2YXJUeXBlU3RyID0gcHJpbnQodmFyRGVmTm9kZS50eXBlKTtcbiAgICAgICAgICAgIG9uRXJyb3IoY3JlYXRlR3JhcGhRTEVycm9yKGBWYXJpYWJsZSBcIiQke3Zhck5hbWV9XCIgZXhwZWN0ZWQgdmFsdWUgb2YgdHlwZSBcIiR7dmFyVHlwZVN0cn1cIiB3aGljaCBjYW5ub3QgYmUgdXNlZCBhcyBhbiBpbnB1dCB0eXBlLmAsIHsgbm9kZXM6IHZhckRlZk5vZGUudHlwZSB9KSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWhhc093blByb3BlcnR5KGlucHV0cywgdmFyTmFtZSkpIHtcbiAgICAgICAgICAgIGlmICh2YXJEZWZOb2RlLmRlZmF1bHRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGNvZXJjZWRWYWx1ZXNbdmFyTmFtZV0gPSB2YWx1ZUZyb21BU1QodmFyRGVmTm9kZS5kZWZhdWx0VmFsdWUsIHZhclR5cGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNOb25OdWxsVHlwZSh2YXJUeXBlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhclR5cGVTdHIgPSBpbnNwZWN0KHZhclR5cGUpO1xuICAgICAgICAgICAgICAgIG9uRXJyb3IoY3JlYXRlR3JhcGhRTEVycm9yKGBWYXJpYWJsZSBcIiQke3Zhck5hbWV9XCIgb2YgcmVxdWlyZWQgdHlwZSBcIiR7dmFyVHlwZVN0cn1cIiB3YXMgbm90IHByb3ZpZGVkLmAsIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXM6IHZhckRlZk5vZGUsXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmFsdWUgPSBpbnB1dHNbdmFyTmFtZV07XG4gICAgICAgIGlmICh2YWx1ZSA9PT0gbnVsbCAmJiBpc05vbk51bGxUeXBlKHZhclR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCB2YXJUeXBlU3RyID0gaW5zcGVjdCh2YXJUeXBlKTtcbiAgICAgICAgICAgIG9uRXJyb3IoY3JlYXRlR3JhcGhRTEVycm9yKGBWYXJpYWJsZSBcIiQke3Zhck5hbWV9XCIgb2Ygbm9uLW51bGwgdHlwZSBcIiR7dmFyVHlwZVN0cn1cIiBtdXN0IG5vdCBiZSBudWxsLmAsIHtcbiAgICAgICAgICAgICAgICBub2RlczogdmFyRGVmTm9kZSxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvZXJjZWRWYWx1ZXNbdmFyTmFtZV0gPSBjb2VyY2VJbnB1dFZhbHVlKHZhbHVlLCB2YXJUeXBlLCAocGF0aCwgaW52YWxpZFZhbHVlLCBlcnJvcikgPT4ge1xuICAgICAgICAgICAgbGV0IHByZWZpeCA9IGBWYXJpYWJsZSBcIiQke3Zhck5hbWV9XCIgZ290IGludmFsaWQgdmFsdWUgYCArIGluc3BlY3QoaW52YWxpZFZhbHVlKTtcbiAgICAgICAgICAgIGlmIChwYXRoLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBwcmVmaXggKz0gYCBhdCBcIiR7dmFyTmFtZX0ke3ByaW50UGF0aEFycmF5KHBhdGgpfVwiYDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIG9uRXJyb3IoY3JlYXRlR3JhcGhRTEVycm9yKHByZWZpeCArICc7ICcgKyBlcnJvci5tZXNzYWdlLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IHZhckRlZk5vZGUsXG4gICAgICAgICAgICAgICAgb3JpZ2luYWxFcnJvcjogZXJyb3Iub3JpZ2luYWxFcnJvcixcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjb2VyY2VkVmFsdWVzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/executor/esm/execution/values.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/extensions.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/extensions.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyExtensions: () => (/* binding */ applyExtensions),\n/* harmony export */   extractExtensionsFromSchema: () => (/* reexport safe */ _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.extractExtensionsFromSchema),\n/* harmony export */   mergeExtensions: () => (/* binding */ mergeExtensions)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js\");\n\n\nfunction mergeExtensions(extensions) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)(extensions);\n}\nfunction applyExtensionObject(obj, extensions) {\n    if (!obj) {\n        return;\n    }\n    obj.extensions = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)([obj.extensions || {}, extensions || {}]);\n}\nfunction applyExtensions(schema, extensions) {\n    applyExtensionObject(schema, extensions.schemaExtensions);\n    for (const [typeName, data] of Object.entries(extensions.types || {})) {\n        const type = schema.getType(typeName);\n        if (type) {\n            applyExtensionObject(type, data.extensions);\n            if (data.type === 'object' || data.type === 'interface') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    if (field) {\n                        applyExtensionObject(field, fieldData.extensions);\n                        for (const [arg, argData] of Object.entries(fieldData.arguments)) {\n                            applyExtensionObject(field.args.find(a => a.name === arg), argData);\n                        }\n                    }\n                }\n            }\n            else if (data.type === 'input') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    applyExtensionObject(field, fieldData.extensions);\n                }\n            }\n            else if (data.type === 'enum') {\n                for (const [valueName, valueData] of Object.entries(data.values)) {\n                    const value = type.getValue(valueName);\n                    applyExtensionObject(value, valueData);\n                }\n            }\n        }\n    }\n    return schema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL2V4dGVuc2lvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBaUQ7QUFDa0I7QUFDNUQ7QUFDUCxXQUFXLCtEQUFTO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsK0RBQVMsc0JBQXNCLGtCQUFrQjtBQUN0RTtBQUNPO0FBQ1A7QUFDQSx3RUFBd0U7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vZXh0ZW5zaW9ucy5qcz9jMDRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lcmdlRGVlcCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCB7IGV4dHJhY3RFeHRlbnNpb25zRnJvbVNjaGVtYSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUV4dGVuc2lvbnMoZXh0ZW5zaW9ucykge1xuICAgIHJldHVybiBtZXJnZURlZXAoZXh0ZW5zaW9ucyk7XG59XG5mdW5jdGlvbiBhcHBseUV4dGVuc2lvbk9iamVjdChvYmosIGV4dGVuc2lvbnMpIHtcbiAgICBpZiAoIW9iaikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIG9iai5leHRlbnNpb25zID0gbWVyZ2VEZWVwKFtvYmouZXh0ZW5zaW9ucyB8fCB7fSwgZXh0ZW5zaW9ucyB8fCB7fV0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFwcGx5RXh0ZW5zaW9ucyhzY2hlbWEsIGV4dGVuc2lvbnMpIHtcbiAgICBhcHBseUV4dGVuc2lvbk9iamVjdChzY2hlbWEsIGV4dGVuc2lvbnMuc2NoZW1hRXh0ZW5zaW9ucyk7XG4gICAgZm9yIChjb25zdCBbdHlwZU5hbWUsIGRhdGFdIG9mIE9iamVjdC5lbnRyaWVzKGV4dGVuc2lvbnMudHlwZXMgfHwge30pKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSBzY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSk7XG4gICAgICAgIGlmICh0eXBlKSB7XG4gICAgICAgICAgICBhcHBseUV4dGVuc2lvbk9iamVjdCh0eXBlLCBkYXRhLmV4dGVuc2lvbnMpO1xuICAgICAgICAgICAgaWYgKGRhdGEudHlwZSA9PT0gJ29iamVjdCcgfHwgZGF0YS50eXBlID09PSAnaW50ZXJmYWNlJykge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2ZpZWxkTmFtZSwgZmllbGREYXRhXSBvZiBPYmplY3QuZW50cmllcyhkYXRhLmZpZWxkcykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSB0eXBlLmdldEZpZWxkcygpW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXBwbHlFeHRlbnNpb25PYmplY3QoZmllbGQsIGZpZWxkRGF0YS5leHRlbnNpb25zKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2FyZywgYXJnRGF0YV0gb2YgT2JqZWN0LmVudHJpZXMoZmllbGREYXRhLmFyZ3VtZW50cykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcHBseUV4dGVuc2lvbk9iamVjdChmaWVsZC5hcmdzLmZpbmQoYSA9PiBhLm5hbWUgPT09IGFyZyksIGFyZ0RhdGEpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZGF0YS50eXBlID09PSAnaW5wdXQnKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBbZmllbGROYW1lLCBmaWVsZERhdGFdIG9mIE9iamVjdC5lbnRyaWVzKGRhdGEuZmllbGRzKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IHR5cGUuZ2V0RmllbGRzKClbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgYXBwbHlFeHRlbnNpb25PYmplY3QoZmllbGQsIGZpZWxkRGF0YS5leHRlbnNpb25zKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChkYXRhLnR5cGUgPT09ICdlbnVtJykge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW3ZhbHVlTmFtZSwgdmFsdWVEYXRhXSBvZiBPYmplY3QuZW50cmllcyhkYXRhLnZhbHVlcykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0eXBlLmdldFZhbHVlKHZhbHVlTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIGFwcGx5RXh0ZW5zaW9uT2JqZWN0KHZhbHVlLCB2YWx1ZURhdGEpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc2NoZW1hO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/extensions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/merge-resolvers.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/merge-resolvers.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeResolvers: () => (/* binding */ mergeResolvers)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n\n/**\n * Deep merges multiple resolver definition objects into a single definition.\n * @param resolversDefinitions Resolver definitions to be merged\n * @param options Additional options\n *\n * ```js\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const clientResolver = require('./clientResolver');\n * const productResolver = require('./productResolver');\n *\n * const resolvers = mergeResolvers([\n *  clientResolver,\n *  productResolver,\n * ]);\n * ```\n *\n * If you don't want to manually create the array of resolver objects, you can\n * also use this function along with loadFiles:\n *\n * ```js\n * const path = require('path');\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const { loadFilesSync } = require('@graphql-tools/load-files');\n *\n * const resolversArray = loadFilesSync(path.join(__dirname, './resolvers'));\n *\n * const resolvers = mergeResolvers(resolversArray)\n * ```\n */\nfunction mergeResolvers(resolversDefinitions, options) {\n    if (!resolversDefinitions || (Array.isArray(resolversDefinitions) && resolversDefinitions.length === 0)) {\n        return {};\n    }\n    if (!Array.isArray(resolversDefinitions)) {\n        return resolversDefinitions;\n    }\n    if (resolversDefinitions.length === 1) {\n        return resolversDefinitions[0] || {};\n    }\n    const resolvers = new Array();\n    for (let resolversDefinition of resolversDefinitions) {\n        if (Array.isArray(resolversDefinition)) {\n            resolversDefinition = mergeResolvers(resolversDefinition);\n        }\n        if (typeof resolversDefinition === 'object' && resolversDefinition) {\n            resolvers.push(resolversDefinition);\n        }\n    }\n    const result = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mergeDeep)(resolvers, true);\n    if (options === null || options === void 0 ? void 0 : options.exclusions) {\n        for (const exclusion of options.exclusions) {\n            const [typeName, fieldName] = exclusion.split('.');\n            if (!fieldName || fieldName === '*') {\n                delete result[typeName];\n            }\n            else if (result[typeName]) {\n                delete result[typeName][fieldName];\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL21lcmdlLXJlc29sdmVycy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGlCQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUIsV0FBVyxnQkFBZ0I7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0RBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS9tZXJnZS1yZXNvbHZlcnMuanM/ZGIzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtZXJnZURlZXAgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG4vKipcbiAqIERlZXAgbWVyZ2VzIG11bHRpcGxlIHJlc29sdmVyIGRlZmluaXRpb24gb2JqZWN0cyBpbnRvIGEgc2luZ2xlIGRlZmluaXRpb24uXG4gKiBAcGFyYW0gcmVzb2x2ZXJzRGVmaW5pdGlvbnMgUmVzb2x2ZXIgZGVmaW5pdGlvbnMgdG8gYmUgbWVyZ2VkXG4gKiBAcGFyYW0gb3B0aW9ucyBBZGRpdGlvbmFsIG9wdGlvbnNcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgeyBtZXJnZVJlc29sdmVycyB9ID0gcmVxdWlyZSgnQGdyYXBocWwtdG9vbHMvbWVyZ2UnKTtcbiAqIGNvbnN0IGNsaWVudFJlc29sdmVyID0gcmVxdWlyZSgnLi9jbGllbnRSZXNvbHZlcicpO1xuICogY29uc3QgcHJvZHVjdFJlc29sdmVyID0gcmVxdWlyZSgnLi9wcm9kdWN0UmVzb2x2ZXInKTtcbiAqXG4gKiBjb25zdCByZXNvbHZlcnMgPSBtZXJnZVJlc29sdmVycyhbXG4gKiAgY2xpZW50UmVzb2x2ZXIsXG4gKiAgcHJvZHVjdFJlc29sdmVyLFxuICogXSk7XG4gKiBgYGBcbiAqXG4gKiBJZiB5b3UgZG9uJ3Qgd2FudCB0byBtYW51YWxseSBjcmVhdGUgdGhlIGFycmF5IG9mIHJlc29sdmVyIG9iamVjdHMsIHlvdSBjYW5cbiAqIGFsc28gdXNlIHRoaXMgZnVuY3Rpb24gYWxvbmcgd2l0aCBsb2FkRmlsZXM6XG4gKlxuICogYGBganNcbiAqIGNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG4gKiBjb25zdCB7IG1lcmdlUmVzb2x2ZXJzIH0gPSByZXF1aXJlKCdAZ3JhcGhxbC10b29scy9tZXJnZScpO1xuICogY29uc3QgeyBsb2FkRmlsZXNTeW5jIH0gPSByZXF1aXJlKCdAZ3JhcGhxbC10b29scy9sb2FkLWZpbGVzJyk7XG4gKlxuICogY29uc3QgcmVzb2x2ZXJzQXJyYXkgPSBsb2FkRmlsZXNTeW5jKHBhdGguam9pbihfX2Rpcm5hbWUsICcuL3Jlc29sdmVycycpKTtcbiAqXG4gKiBjb25zdCByZXNvbHZlcnMgPSBtZXJnZVJlc29sdmVycyhyZXNvbHZlcnNBcnJheSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VSZXNvbHZlcnMocmVzb2x2ZXJzRGVmaW5pdGlvbnMsIG9wdGlvbnMpIHtcbiAgICBpZiAoIXJlc29sdmVyc0RlZmluaXRpb25zIHx8IChBcnJheS5pc0FycmF5KHJlc29sdmVyc0RlZmluaXRpb25zKSAmJiByZXNvbHZlcnNEZWZpbml0aW9ucy5sZW5ndGggPT09IDApKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KHJlc29sdmVyc0RlZmluaXRpb25zKSkge1xuICAgICAgICByZXR1cm4gcmVzb2x2ZXJzRGVmaW5pdGlvbnM7XG4gICAgfVxuICAgIGlmIChyZXNvbHZlcnNEZWZpbml0aW9ucy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVyc0RlZmluaXRpb25zWzBdIHx8IHt9O1xuICAgIH1cbiAgICBjb25zdCByZXNvbHZlcnMgPSBuZXcgQXJyYXkoKTtcbiAgICBmb3IgKGxldCByZXNvbHZlcnNEZWZpbml0aW9uIG9mIHJlc29sdmVyc0RlZmluaXRpb25zKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHJlc29sdmVyc0RlZmluaXRpb24pKSB7XG4gICAgICAgICAgICByZXNvbHZlcnNEZWZpbml0aW9uID0gbWVyZ2VSZXNvbHZlcnMocmVzb2x2ZXJzRGVmaW5pdGlvbik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiByZXNvbHZlcnNEZWZpbml0aW9uID09PSAnb2JqZWN0JyAmJiByZXNvbHZlcnNEZWZpbml0aW9uKSB7XG4gICAgICAgICAgICByZXNvbHZlcnMucHVzaChyZXNvbHZlcnNEZWZpbml0aW9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBtZXJnZURlZXAocmVzb2x2ZXJzLCB0cnVlKTtcbiAgICBpZiAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmV4Y2x1c2lvbnMpIHtcbiAgICAgICAgZm9yIChjb25zdCBleGNsdXNpb24gb2Ygb3B0aW9ucy5leGNsdXNpb25zKSB7XG4gICAgICAgICAgICBjb25zdCBbdHlwZU5hbWUsIGZpZWxkTmFtZV0gPSBleGNsdXNpb24uc3BsaXQoJy4nKTtcbiAgICAgICAgICAgIGlmICghZmllbGROYW1lIHx8IGZpZWxkTmFtZSA9PT0gJyonKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHJlc3VsdFt0eXBlTmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXN1bHRbdHlwZU5hbWVdKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHJlc3VsdFt0eXBlTmFtZV1bZmllbGROYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/merge-resolvers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js":
/*!**************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeArguments: () => (/* binding */ mergeArguments)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.isSome), config);\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.compareNodes);\n    }\n    return result;\n}\nfunction deduplicateArguments(args, config) {\n    return args.reduce((acc, current) => {\n        const dupIndex = acc.findIndex(arg => arg.name.value === current.name.value);\n        if (dupIndex === -1) {\n            return acc.concat([current]);\n        }\n        else if (!(config === null || config === void 0 ? void 0 : config.reverseArguments)) {\n            acc[dupIndex] = current;\n        }\n        return acc;\n    }, []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvYXJndW1lbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTREO0FBQ3JEO0FBQ1Asb0VBQW9FLHdEQUFNO0FBQzFFO0FBQ0Esb0JBQW9CLDhEQUFZO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9hcmd1bWVudHMuanM/NzY3NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wYXJlTm9kZXMsIGlzU29tZSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUFyZ3VtZW50cyhhcmdzMSwgYXJnczIsIGNvbmZpZykge1xuICAgIGNvbnN0IHJlc3VsdCA9IGRlZHVwbGljYXRlQXJndW1lbnRzKFsuLi5hcmdzMiwgLi4uYXJnczFdLmZpbHRlcihpc1NvbWUpLCBjb25maWcpO1xuICAgIGlmIChjb25maWcgJiYgY29uZmlnLnNvcnQpIHtcbiAgICAgICAgcmVzdWx0LnNvcnQoY29tcGFyZU5vZGVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGRlZHVwbGljYXRlQXJndW1lbnRzKGFyZ3MsIGNvbmZpZykge1xuICAgIHJldHVybiBhcmdzLnJlZHVjZSgoYWNjLCBjdXJyZW50KSA9PiB7XG4gICAgICAgIGNvbnN0IGR1cEluZGV4ID0gYWNjLmZpbmRJbmRleChhcmcgPT4gYXJnLm5hbWUudmFsdWUgPT09IGN1cnJlbnQubmFtZS52YWx1ZSk7XG4gICAgICAgIGlmIChkdXBJbmRleCA9PT0gLTEpIHtcbiAgICAgICAgICAgIHJldHVybiBhY2MuY29uY2F0KFtjdXJyZW50XSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoIShjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcucmV2ZXJzZUFyZ3VtZW50cykpIHtcbiAgICAgICAgICAgIGFjY1tkdXBJbmRleF0gPSBjdXJyZW50O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhY2M7XG4gICAgfSwgW10pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js":
/*!***************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDirective: () => (/* binding */ mergeDirective),\n/* harmony export */   mergeDirectives: () => (/* binding */ mergeDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction isRepeatableDirective(directive, directives) {\n    var _a;\n    return !!((_a = directives === null || directives === void 0 ? void 0 : directives[directive.name.value]) === null || _a === void 0 ? void 0 : _a.repeatable);\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives, definitions) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i && !isRepeatableDirective(directive, definitions)) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.isSome);\n}\nfunction mergeDirectives(d1 = [], d2 = [], config, directives) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext], directives);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive) && !isRepeatableDirective(directive, directives)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nfunction validateInputs(node, existingNode) {\n    const printedNode = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.print)({\n        ...node,\n        description: undefined,\n    });\n    const printedExistingNode = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.print)({\n        ...existingNode,\n        description: undefined,\n    });\n    // eslint-disable-next-line\n    const leaveInputs = new RegExp('(directive @w*d*)|( on .*$)', 'g');\n    const sameArguments = printedNode.replace(leaveInputs, '') === printedExistingNode.replace(leaveInputs, '');\n    if (!sameArguments) {\n        throw new Error(`Unable to merge GraphQL directive \"${node.name.value}\". \\nExisting directive:  \\n\\t${printedExistingNode} \\nReceived directive: \\n\\t${printedNode}`);\n    }\n}\nfunction mergeDirective(node, existingNode) {\n    if (existingNode) {\n        validateInputs(node, existingNode);\n        return {\n            ...node,\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZGlyZWN0aXZlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ2M7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixPQUFPO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGdCQUFnQix3REFBTTtBQUN0QjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw4Q0FBSztBQUM3QjtBQUNBO0FBQ0EsS0FBSztBQUNMLGdDQUFnQyw4Q0FBSztBQUNyQztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGdCQUFnQixnQ0FBZ0MscUJBQXFCLDRCQUE0QixZQUFZO0FBQzNLO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZGlyZWN0aXZlcy5qcz9lYmY1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByaW50IH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBpc1NvbWUgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5mdW5jdGlvbiBkaXJlY3RpdmVBbHJlYWR5RXhpc3RzKGRpcmVjdGl2ZXNBcnIsIG90aGVyRGlyZWN0aXZlKSB7XG4gICAgcmV0dXJuICEhZGlyZWN0aXZlc0Fyci5maW5kKGRpcmVjdGl2ZSA9PiBkaXJlY3RpdmUubmFtZS52YWx1ZSA9PT0gb3RoZXJEaXJlY3RpdmUubmFtZS52YWx1ZSk7XG59XG5mdW5jdGlvbiBpc1JlcGVhdGFibGVEaXJlY3RpdmUoZGlyZWN0aXZlLCBkaXJlY3RpdmVzKSB7XG4gICAgdmFyIF9hO1xuICAgIHJldHVybiAhISgoX2EgPSBkaXJlY3RpdmVzID09PSBudWxsIHx8IGRpcmVjdGl2ZXMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRpcmVjdGl2ZXNbZGlyZWN0aXZlLm5hbWUudmFsdWVdKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmVwZWF0YWJsZSk7XG59XG5mdW5jdGlvbiBuYW1lQWxyZWFkeUV4aXN0cyhuYW1lLCBuYW1lc0Fycikge1xuICAgIHJldHVybiBuYW1lc0Fyci5zb21lKCh7IHZhbHVlIH0pID0+IHZhbHVlID09PSBuYW1lLnZhbHVlKTtcbn1cbmZ1bmN0aW9uIG1lcmdlQXJndW1lbnRzKGExLCBhMikge1xuICAgIGNvbnN0IHJlc3VsdCA9IFsuLi5hMl07XG4gICAgZm9yIChjb25zdCBhcmd1bWVudCBvZiBhMSkge1xuICAgICAgICBjb25zdCBleGlzdGluZ0luZGV4ID0gcmVzdWx0LmZpbmRJbmRleChhID0+IGEubmFtZS52YWx1ZSA9PT0gYXJndW1lbnQubmFtZS52YWx1ZSk7XG4gICAgICAgIGlmIChleGlzdGluZ0luZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nQXJnID0gcmVzdWx0W2V4aXN0aW5nSW5kZXhdO1xuICAgICAgICAgICAgaWYgKGV4aXN0aW5nQXJnLnZhbHVlLmtpbmQgPT09ICdMaXN0VmFsdWUnKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc291cmNlID0gZXhpc3RpbmdBcmcudmFsdWUudmFsdWVzO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGFyZ3VtZW50LnZhbHVlLnZhbHVlcztcbiAgICAgICAgICAgICAgICAvLyBtZXJnZSB2YWx1ZXMgb2YgdHdvIGxpc3RzXG4gICAgICAgICAgICAgICAgZXhpc3RpbmdBcmcudmFsdWUudmFsdWVzID0gZGVkdXBsaWNhdGVMaXN0cyhzb3VyY2UsIHRhcmdldCwgKHRhcmdldFZhbCwgc291cmNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGFyZ2V0VmFsLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIXZhbHVlIHx8ICFzb3VyY2Uuc29tZSgoc291cmNlVmFsKSA9PiBzb3VyY2VWYWwudmFsdWUgPT09IHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGV4aXN0aW5nQXJnLnZhbHVlID0gYXJndW1lbnQudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChhcmd1bWVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGRlZHVwbGljYXRlRGlyZWN0aXZlcyhkaXJlY3RpdmVzLCBkZWZpbml0aW9ucykge1xuICAgIHJldHVybiBkaXJlY3RpdmVzXG4gICAgICAgIC5tYXAoKGRpcmVjdGl2ZSwgaSwgYWxsKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpcnN0QXQgPSBhbGwuZmluZEluZGV4KGQgPT4gZC5uYW1lLnZhbHVlID09PSBkaXJlY3RpdmUubmFtZS52YWx1ZSk7XG4gICAgICAgIGlmIChmaXJzdEF0ICE9PSBpICYmICFpc1JlcGVhdGFibGVEaXJlY3RpdmUoZGlyZWN0aXZlLCBkZWZpbml0aW9ucykpIHtcbiAgICAgICAgICAgIGNvbnN0IGR1cCA9IGFsbFtmaXJzdEF0XTtcbiAgICAgICAgICAgIGRpcmVjdGl2ZS5hcmd1bWVudHMgPSBtZXJnZUFyZ3VtZW50cyhkaXJlY3RpdmUuYXJndW1lbnRzLCBkdXAuYXJndW1lbnRzKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaXJlY3RpdmU7XG4gICAgfSlcbiAgICAgICAgLmZpbHRlcihpc1NvbWUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGlyZWN0aXZlcyhkMSA9IFtdLCBkMiA9IFtdLCBjb25maWcsIGRpcmVjdGl2ZXMpIHtcbiAgICBjb25zdCByZXZlcnNlT3JkZXIgPSBjb25maWcgJiYgY29uZmlnLnJldmVyc2VEaXJlY3RpdmVzO1xuICAgIGNvbnN0IGFzTmV4dCA9IHJldmVyc2VPcmRlciA/IGQxIDogZDI7XG4gICAgY29uc3QgYXNGaXJzdCA9IHJldmVyc2VPcmRlciA/IGQyIDogZDE7XG4gICAgY29uc3QgcmVzdWx0ID0gZGVkdXBsaWNhdGVEaXJlY3RpdmVzKFsuLi5hc05leHRdLCBkaXJlY3RpdmVzKTtcbiAgICBmb3IgKGNvbnN0IGRpcmVjdGl2ZSBvZiBhc0ZpcnN0KSB7XG4gICAgICAgIGlmIChkaXJlY3RpdmVBbHJlYWR5RXhpc3RzKHJlc3VsdCwgZGlyZWN0aXZlKSAmJiAhaXNSZXBlYXRhYmxlRGlyZWN0aXZlKGRpcmVjdGl2ZSwgZGlyZWN0aXZlcykpIHtcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nRGlyZWN0aXZlSW5kZXggPSByZXN1bHQuZmluZEluZGV4KGQgPT4gZC5uYW1lLnZhbHVlID09PSBkaXJlY3RpdmUubmFtZS52YWx1ZSk7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ0RpcmVjdGl2ZSA9IHJlc3VsdFtleGlzdGluZ0RpcmVjdGl2ZUluZGV4XTtcbiAgICAgICAgICAgIHJlc3VsdFtleGlzdGluZ0RpcmVjdGl2ZUluZGV4XS5hcmd1bWVudHMgPSBtZXJnZUFyZ3VtZW50cyhkaXJlY3RpdmUuYXJndW1lbnRzIHx8IFtdLCBleGlzdGluZ0RpcmVjdGl2ZS5hcmd1bWVudHMgfHwgW10pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmVzdWx0LnB1c2goZGlyZWN0aXZlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gdmFsaWRhdGVJbnB1dHMobm9kZSwgZXhpc3RpbmdOb2RlKSB7XG4gICAgY29uc3QgcHJpbnRlZE5vZGUgPSBwcmludCh7XG4gICAgICAgIC4uLm5vZGUsXG4gICAgICAgIGRlc2NyaXB0aW9uOiB1bmRlZmluZWQsXG4gICAgfSk7XG4gICAgY29uc3QgcHJpbnRlZEV4aXN0aW5nTm9kZSA9IHByaW50KHtcbiAgICAgICAgLi4uZXhpc3RpbmdOb2RlLFxuICAgICAgICBkZXNjcmlwdGlvbjogdW5kZWZpbmVkLFxuICAgIH0pO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICAgIGNvbnN0IGxlYXZlSW5wdXRzID0gbmV3IFJlZ0V4cCgnKGRpcmVjdGl2ZSBAdypkKil8KCBvbiAuKiQpJywgJ2cnKTtcbiAgICBjb25zdCBzYW1lQXJndW1lbnRzID0gcHJpbnRlZE5vZGUucmVwbGFjZShsZWF2ZUlucHV0cywgJycpID09PSBwcmludGVkRXhpc3RpbmdOb2RlLnJlcGxhY2UobGVhdmVJbnB1dHMsICcnKTtcbiAgICBpZiAoIXNhbWVBcmd1bWVudHMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbWVyZ2UgR3JhcGhRTCBkaXJlY3RpdmUgXCIke25vZGUubmFtZS52YWx1ZX1cIi4gXFxuRXhpc3RpbmcgZGlyZWN0aXZlOiAgXFxuXFx0JHtwcmludGVkRXhpc3RpbmdOb2RlfSBcXG5SZWNlaXZlZCBkaXJlY3RpdmU6IFxcblxcdCR7cHJpbnRlZE5vZGV9YCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGlyZWN0aXZlKG5vZGUsIGV4aXN0aW5nTm9kZSkge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgdmFsaWRhdGVJbnB1dHMobm9kZSwgZXhpc3RpbmdOb2RlKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICBsb2NhdGlvbnM6IFtcbiAgICAgICAgICAgICAgICAuLi5leGlzdGluZ05vZGUubG9jYXRpb25zLFxuICAgICAgICAgICAgICAgIC4uLm5vZGUubG9jYXRpb25zLmZpbHRlcihuYW1lID0+ICFuYW1lQWxyZWFkeUV4aXN0cyhuYW1lLCBleGlzdGluZ05vZGUubG9jYXRpb25zKSksXG4gICAgICAgICAgICBdLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gbm9kZTtcbn1cbmZ1bmN0aW9uIGRlZHVwbGljYXRlTGlzdHMoc291cmNlLCB0YXJnZXQsIGZpbHRlckZuKSB7XG4gICAgcmV0dXJuIHNvdXJjZS5jb25jYXQodGFyZ2V0LmZpbHRlcih2YWwgPT4gZmlsdGVyRm4odmFsLCBzb3VyY2UpKSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeEnumValues: () => (/* binding */ mergeEnumValues)\n/* harmony export */ });\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction mergeEnumValues(first, second, config, directives) {\n    if (config === null || config === void 0 ? void 0 : config.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(secondValue.directives, firstValue.directives, directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.compareNodes);\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZW51bS12YWx1ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWtEO0FBQ0U7QUFDN0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLCtEQUFlO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsOERBQVk7QUFDaEM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9lbnVtLXZhbHVlcy5qcz9mZDUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lcmdlRGlyZWN0aXZlcyB9IGZyb20gJy4vZGlyZWN0aXZlcy5qcyc7XG5pbXBvcnQgeyBjb21wYXJlTm9kZXMgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VFbnVtVmFsdWVzKGZpcnN0LCBzZWNvbmQsIGNvbmZpZywgZGlyZWN0aXZlcykge1xuICAgIGlmIChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29uc2lzdGVudEVudW1NZXJnZSkge1xuICAgICAgICBjb25zdCByZXZlcnNlZCA9IFtdO1xuICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICAgIHJldmVyc2VkLnB1c2goLi4uZmlyc3QpO1xuICAgICAgICB9XG4gICAgICAgIGZpcnN0ID0gc2Vjb25kO1xuICAgICAgICBzZWNvbmQgPSByZXZlcnNlZDtcbiAgICB9XG4gICAgY29uc3QgZW51bVZhbHVlTWFwID0gbmV3IE1hcCgpO1xuICAgIGlmIChmaXJzdCkge1xuICAgICAgICBmb3IgKGNvbnN0IGZpcnN0VmFsdWUgb2YgZmlyc3QpIHtcbiAgICAgICAgICAgIGVudW1WYWx1ZU1hcC5zZXQoZmlyc3RWYWx1ZS5uYW1lLnZhbHVlLCBmaXJzdFZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoc2Vjb25kKSB7XG4gICAgICAgIGZvciAoY29uc3Qgc2Vjb25kVmFsdWUgb2Ygc2Vjb25kKSB7XG4gICAgICAgICAgICBjb25zdCBlbnVtVmFsdWUgPSBzZWNvbmRWYWx1ZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgaWYgKGVudW1WYWx1ZU1hcC5oYXMoZW51bVZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpcnN0VmFsdWUgPSBlbnVtVmFsdWVNYXAuZ2V0KGVudW1WYWx1ZSk7XG4gICAgICAgICAgICAgICAgZmlyc3RWYWx1ZS5kZXNjcmlwdGlvbiA9IHNlY29uZFZhbHVlLmRlc2NyaXB0aW9uIHx8IGZpcnN0VmFsdWUuZGVzY3JpcHRpb247XG4gICAgICAgICAgICAgICAgZmlyc3RWYWx1ZS5kaXJlY3RpdmVzID0gbWVyZ2VEaXJlY3RpdmVzKHNlY29uZFZhbHVlLmRpcmVjdGl2ZXMsIGZpcnN0VmFsdWUuZGlyZWN0aXZlcywgZGlyZWN0aXZlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBlbnVtVmFsdWVNYXAuc2V0KGVudW1WYWx1ZSwgc2Vjb25kVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IFsuLi5lbnVtVmFsdWVNYXAudmFsdWVzKCldO1xuICAgIGlmIChjb25maWcgJiYgY29uZmlnLnNvcnQpIHtcbiAgICAgICAgcmVzdWx0LnNvcnQoY29tcGFyZU5vZGVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeEnum: () => (/* binding */ mergeEnum)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _enum_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enum-values.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js\");\n\n\n\nfunction mergeEnum(e1, e2, config, directives) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || e1.kind === 'EnumTypeDefinition' || e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(e1.directives, e2.directives, config, directives),\n            values: (0,_enum_values_js__WEBPACK_IMPORTED_MODULE_1__.mergeEnumValues)(e1.values, e2.values, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...e1,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZW51bS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQ21CO0FBQ0M7QUFDNUM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtEQUFlO0FBQ3ZDLG9CQUFvQixnRUFBZTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZW51bS5qcz83NzFkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lcmdlRGlyZWN0aXZlcyB9IGZyb20gJy4vZGlyZWN0aXZlcy5qcyc7XG5pbXBvcnQgeyBtZXJnZUVudW1WYWx1ZXMgfSBmcm9tICcuL2VudW0tdmFsdWVzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUVudW0oZTEsIGUyLCBjb25maWcsIGRpcmVjdGl2ZXMpIHtcbiAgICBpZiAoZTIpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IGUxLm5hbWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogZTFbJ2Rlc2NyaXB0aW9uJ10gfHwgZTJbJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fCBlMS5raW5kID09PSAnRW51bVR5cGVEZWZpbml0aW9uJyB8fCBlMi5raW5kID09PSAnRW51bVR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgID8gJ0VudW1UeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICA6ICdFbnVtVHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICBsb2M6IGUxLmxvYyxcbiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IG1lcmdlRGlyZWN0aXZlcyhlMS5kaXJlY3RpdmVzLCBlMi5kaXJlY3RpdmVzLCBjb25maWcsIGRpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgdmFsdWVzOiBtZXJnZUVudW1WYWx1ZXMoZTEudmFsdWVzLCBlMi52YWx1ZXMsIGNvbmZpZyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLmUxLFxuICAgICAgICAgICAga2luZDogS2luZC5FTlVNX1RZUEVfREVGSU5JVElPTixcbiAgICAgICAgfVxuICAgICAgICA6IGUxO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeFields: () => (/* binding */ mergeFields)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _arguments_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arguments.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js\");\n\n\n\n\nfunction fieldAlreadyExists(fieldsArr, otherField) {\n    const resultIndex = fieldsArr.findIndex(field => field.name.value === otherField.name.value);\n    return [resultIndex > -1 ? fieldsArr[resultIndex] : null, resultIndex];\n}\nfunction mergeFields(type, f1, f2, config, directives) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            const [existing, existingIndex] = fieldAlreadyExists(result, field);\n            if (existing && !(config === null || config === void 0 ? void 0 : config.ignoreFieldConflicts)) {\n                const newField = ((config === null || config === void 0 ? void 0 : config.onFieldTypeConflict) && config.onFieldTypeConflict(existing, field, type, config === null || config === void 0 ? void 0 : config.throwOnConflict)) ||\n                    preventConflicts(type, existing, field, config === null || config === void 0 ? void 0 : config.throwOnConflict);\n                newField.arguments = (0,_arguments_js__WEBPACK_IMPORTED_MODULE_0__.mergeArguments)(field['arguments'] || [], existing['arguments'] || [], config);\n                newField.directives = (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(field.directives, existing.directives, config, directives);\n                newField.description = field.description || existing.description;\n                result[existingIndex] = newField;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.printTypeNode)(a.type);\n    const bType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.printTypeNode)(b.type);\n    if (aType !== bType) {\n        const t1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractType)(a.type);\n        const t2 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractType)(b.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${b.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n        if (!safeChangeForFieldType(a.type, b.type, !ignoreNullability)) {\n            throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n        }\n    }\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(b.type) && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(a.type)) {\n        a.type = b.type;\n    }\n    return a;\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isWrappingTypeNode)(oldType) && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isWrappingTypeNode)(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(newType)) {\n        const ofType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isListTypeNode)(oldType)) {\n        return (((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZmllbGRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStHO0FBQzdEO0FBQ0U7QUFDSjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsNkRBQWM7QUFDbkQsc0NBQXNDLCtEQUFlO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw4REFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQSw4REFBOEQsZ0JBQWdCLEdBQUcsaUJBQWlCO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdEQUFhO0FBQy9CLGtCQUFrQix3REFBYTtBQUMvQjtBQUNBLG1CQUFtQixzREFBVztBQUM5QixtQkFBbUIsc0RBQVc7QUFDOUI7QUFDQSxzQ0FBc0MsYUFBYSx3REFBd0QsY0FBYyxxQ0FBcUMsY0FBYztBQUM1SztBQUNBO0FBQ0Esc0NBQXNDLGdCQUFnQixHQUFHLGFBQWEsdUJBQXVCLE1BQU0sUUFBUSxNQUFNO0FBQ2pIO0FBQ0E7QUFDQSxRQUFRLDREQUFpQixhQUFhLDREQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDZEQUFrQixjQUFjLDZEQUFrQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLDREQUFpQjtBQUN6Qix1QkFBdUIsNERBQWlCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQWlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQWM7QUFDdEIsaUJBQWlCLHlEQUFjO0FBQy9CLGFBQWEsNERBQWlCO0FBQzlCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZmllbGRzLmpzPzhkZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0cmFjdFR5cGUsIGlzV3JhcHBpbmdUeXBlTm9kZSwgaXNMaXN0VHlwZU5vZGUsIGlzTm9uTnVsbFR5cGVOb2RlLCBwcmludFR5cGVOb2RlIH0gZnJvbSAnLi91dGlscy5qcyc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZXMgfSBmcm9tICcuL2RpcmVjdGl2ZXMuanMnO1xuaW1wb3J0IHsgY29tcGFyZU5vZGVzIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgbWVyZ2VBcmd1bWVudHMgfSBmcm9tICcuL2FyZ3VtZW50cy5qcyc7XG5mdW5jdGlvbiBmaWVsZEFscmVhZHlFeGlzdHMoZmllbGRzQXJyLCBvdGhlckZpZWxkKSB7XG4gICAgY29uc3QgcmVzdWx0SW5kZXggPSBmaWVsZHNBcnIuZmluZEluZGV4KGZpZWxkID0+IGZpZWxkLm5hbWUudmFsdWUgPT09IG90aGVyRmllbGQubmFtZS52YWx1ZSk7XG4gICAgcmV0dXJuIFtyZXN1bHRJbmRleCA+IC0xID8gZmllbGRzQXJyW3Jlc3VsdEluZGV4XSA6IG51bGwsIHJlc3VsdEluZGV4XTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUZpZWxkcyh0eXBlLCBmMSwgZjIsIGNvbmZpZywgZGlyZWN0aXZlcykge1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIGlmIChmMiAhPSBudWxsKSB7XG4gICAgICAgIHJlc3VsdC5wdXNoKC4uLmYyKTtcbiAgICB9XG4gICAgaWYgKGYxICE9IG51bGwpIHtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZCBvZiBmMSkge1xuICAgICAgICAgICAgY29uc3QgW2V4aXN0aW5nLCBleGlzdGluZ0luZGV4XSA9IGZpZWxkQWxyZWFkeUV4aXN0cyhyZXN1bHQsIGZpZWxkKTtcbiAgICAgICAgICAgIGlmIChleGlzdGluZyAmJiAhKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5pZ25vcmVGaWVsZENvbmZsaWN0cykpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBuZXdGaWVsZCA9ICgoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLm9uRmllbGRUeXBlQ29uZmxpY3QpICYmIGNvbmZpZy5vbkZpZWxkVHlwZUNvbmZsaWN0KGV4aXN0aW5nLCBmaWVsZCwgdHlwZSwgY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLnRocm93T25Db25mbGljdCkpIHx8XG4gICAgICAgICAgICAgICAgICAgIHByZXZlbnRDb25mbGljdHModHlwZSwgZXhpc3RpbmcsIGZpZWxkLCBjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcudGhyb3dPbkNvbmZsaWN0KTtcbiAgICAgICAgICAgICAgICBuZXdGaWVsZC5hcmd1bWVudHMgPSBtZXJnZUFyZ3VtZW50cyhmaWVsZFsnYXJndW1lbnRzJ10gfHwgW10sIGV4aXN0aW5nWydhcmd1bWVudHMnXSB8fCBbXSwgY29uZmlnKTtcbiAgICAgICAgICAgICAgICBuZXdGaWVsZC5kaXJlY3RpdmVzID0gbWVyZ2VEaXJlY3RpdmVzKGZpZWxkLmRpcmVjdGl2ZXMsIGV4aXN0aW5nLmRpcmVjdGl2ZXMsIGNvbmZpZywgZGlyZWN0aXZlcyk7XG4gICAgICAgICAgICAgICAgbmV3RmllbGQuZGVzY3JpcHRpb24gPSBmaWVsZC5kZXNjcmlwdGlvbiB8fCBleGlzdGluZy5kZXNjcmlwdGlvbjtcbiAgICAgICAgICAgICAgICByZXN1bHRbZXhpc3RpbmdJbmRleF0gPSBuZXdGaWVsZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGZpZWxkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY29uZmlnICYmIGNvbmZpZy5zb3J0KSB7XG4gICAgICAgIHJlc3VsdC5zb3J0KGNvbXBhcmVOb2Rlcyk7XG4gICAgfVxuICAgIGlmIChjb25maWcgJiYgY29uZmlnLmV4Y2x1c2lvbnMpIHtcbiAgICAgICAgY29uc3QgZXhjbHVzaW9ucyA9IGNvbmZpZy5leGNsdXNpb25zO1xuICAgICAgICByZXR1cm4gcmVzdWx0LmZpbHRlcihmaWVsZCA9PiAhZXhjbHVzaW9ucy5pbmNsdWRlcyhgJHt0eXBlLm5hbWUudmFsdWV9LiR7ZmllbGQubmFtZS52YWx1ZX1gKSk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5mdW5jdGlvbiBwcmV2ZW50Q29uZmxpY3RzKHR5cGUsIGEsIGIsIGlnbm9yZU51bGxhYmlsaXR5ID0gZmFsc2UpIHtcbiAgICBjb25zdCBhVHlwZSA9IHByaW50VHlwZU5vZGUoYS50eXBlKTtcbiAgICBjb25zdCBiVHlwZSA9IHByaW50VHlwZU5vZGUoYi50eXBlKTtcbiAgICBpZiAoYVR5cGUgIT09IGJUeXBlKSB7XG4gICAgICAgIGNvbnN0IHQxID0gZXh0cmFjdFR5cGUoYS50eXBlKTtcbiAgICAgICAgY29uc3QgdDIgPSBleHRyYWN0VHlwZShiLnR5cGUpO1xuICAgICAgICBpZiAodDEubmFtZS52YWx1ZSAhPT0gdDIubmFtZS52YWx1ZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGaWVsZCBcIiR7Yi5uYW1lLnZhbHVlfVwiIGFscmVhZHkgZGVmaW5lZCB3aXRoIGEgZGlmZmVyZW50IHR5cGUuIERlY2xhcmVkIGFzIFwiJHt0MS5uYW1lLnZhbHVlfVwiLCBidXQgeW91IHRyaWVkIHRvIG92ZXJyaWRlIHdpdGggXCIke3QyLm5hbWUudmFsdWV9XCJgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXNhZmVDaGFuZ2VGb3JGaWVsZFR5cGUoYS50eXBlLCBiLnR5cGUsICFpZ25vcmVOdWxsYWJpbGl0eSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRmllbGQgJyR7dHlwZS5uYW1lLnZhbHVlfS4ke2EubmFtZS52YWx1ZX0nIGNoYW5nZWQgdHlwZSBmcm9tICcke2FUeXBlfScgdG8gJyR7YlR5cGV9J2ApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChpc05vbk51bGxUeXBlTm9kZShiLnR5cGUpICYmICFpc05vbk51bGxUeXBlTm9kZShhLnR5cGUpKSB7XG4gICAgICAgIGEudHlwZSA9IGIudHlwZTtcbiAgICB9XG4gICAgcmV0dXJuIGE7XG59XG5mdW5jdGlvbiBzYWZlQ2hhbmdlRm9yRmllbGRUeXBlKG9sZFR5cGUsIG5ld1R5cGUsIGlnbm9yZU51bGxhYmlsaXR5ID0gZmFsc2UpIHtcbiAgICAvLyBib3RoIGFyZSBuYW1lZFxuICAgIGlmICghaXNXcmFwcGluZ1R5cGVOb2RlKG9sZFR5cGUpICYmICFpc1dyYXBwaW5nVHlwZU5vZGUobmV3VHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIG9sZFR5cGUudG9TdHJpbmcoKSA9PT0gbmV3VHlwZS50b1N0cmluZygpO1xuICAgIH1cbiAgICAvLyBuZXcgaXMgbm9uLW51bGxcbiAgICBpZiAoaXNOb25OdWxsVHlwZU5vZGUobmV3VHlwZSkpIHtcbiAgICAgICAgY29uc3Qgb2ZUeXBlID0gaXNOb25OdWxsVHlwZU5vZGUob2xkVHlwZSkgPyBvbGRUeXBlLnR5cGUgOiBvbGRUeXBlO1xuICAgICAgICByZXR1cm4gc2FmZUNoYW5nZUZvckZpZWxkVHlwZShvZlR5cGUsIG5ld1R5cGUudHlwZSk7XG4gICAgfVxuICAgIC8vIG9sZCBpcyBub24tbnVsbFxuICAgIGlmIChpc05vbk51bGxUeXBlTm9kZShvbGRUeXBlKSkge1xuICAgICAgICByZXR1cm4gc2FmZUNoYW5nZUZvckZpZWxkVHlwZShuZXdUeXBlLCBvbGRUeXBlLCBpZ25vcmVOdWxsYWJpbGl0eSk7XG4gICAgfVxuICAgIC8vIG9sZCBpcyBsaXN0XG4gICAgaWYgKGlzTGlzdFR5cGVOb2RlKG9sZFR5cGUpKSB7XG4gICAgICAgIHJldHVybiAoKGlzTGlzdFR5cGVOb2RlKG5ld1R5cGUpICYmIHNhZmVDaGFuZ2VGb3JGaWVsZFR5cGUob2xkVHlwZS50eXBlLCBuZXdUeXBlLnR5cGUpKSB8fFxuICAgICAgICAgICAgKGlzTm9uTnVsbFR5cGVOb2RlKG5ld1R5cGUpICYmIHNhZmVDaGFuZ2VGb3JGaWVsZFR5cGUob2xkVHlwZSwgbmV3VHlwZVsndHlwZSddKSkpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js":
/*!***************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeInputType: () => (/* binding */ mergeInputType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fields.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n\n\n\nfunction mergeInputType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: (0,_fields_js__WEBPACK_IMPORTED_MODULE_0__.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvaW5wdXQtdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ1U7QUFDUTtBQUMzQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdURBQVc7QUFDbkMsNEJBQTRCLCtEQUFlO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxnQkFBZ0IsS0FBSyxVQUFVO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9pbnB1dC10eXBlLmpzPzJhZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lcmdlRmllbGRzIH0gZnJvbSAnLi9maWVsZHMuanMnO1xuaW1wb3J0IHsgbWVyZ2VEaXJlY3RpdmVzIH0gZnJvbSAnLi9kaXJlY3RpdmVzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUlucHV0VHlwZShub2RlLCBleGlzdGluZ05vZGUsIGNvbmZpZywgZGlyZWN0aXZlcykge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBub2RlWydkZXNjcmlwdGlvbiddIHx8IGV4aXN0aW5nTm9kZVsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fFxuICAgICAgICAgICAgICAgICAgICBub2RlLmtpbmQgPT09ICdJbnB1dE9iamVjdFR5cGVEZWZpbml0aW9uJyB8fFxuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ05vZGUua2luZCA9PT0gJ0lucHV0T2JqZWN0VHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgID8gJ0lucHV0T2JqZWN0VHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgIDogJ0lucHV0T2JqZWN0VHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICAgICAgbG9jOiBub2RlLmxvYyxcbiAgICAgICAgICAgICAgICBmaWVsZHM6IG1lcmdlRmllbGRzKG5vZGUsIG5vZGUuZmllbGRzLCBleGlzdGluZ05vZGUuZmllbGRzLCBjb25maWcpLFxuICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IG1lcmdlRGlyZWN0aXZlcyhub2RlLmRpcmVjdGl2ZXMsIGV4aXN0aW5nTm9kZS5kaXJlY3RpdmVzLCBjb25maWcsIGRpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbmFibGUgdG8gbWVyZ2UgR3JhcGhRTCBpbnB1dCB0eXBlIFwiJHtub2RlLm5hbWUudmFsdWV9XCI6ICR7ZS5tZXNzYWdlfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICBraW5kOiBLaW5kLklOUFVUX09CSkVDVF9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBub2RlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js":
/*!**************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js ***!
  \**************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeInterface: () => (/* binding */ mergeInterface)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fields.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merge-named-type-array.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\");\n\n\n\n\nfunction mergeInterface(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: (0,_fields_js__WEBPACK_IMPORTED_MODULE_0__.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n                interfaces: node['interfaces']\n                    ? (0,_merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvaW50ZXJmYWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQStCO0FBQ1c7QUFDUTtBQUNnQjtBQUMzRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdURBQVc7QUFDbkMsNEJBQTRCLCtEQUFlO0FBQzNDO0FBQ0Esc0JBQXNCLCtFQUFtQjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRSxnQkFBZ0IsS0FBSyxVQUFVO0FBQ2pHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9pbnRlcmZhY2UuanM/YWM3NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZXJnZUZpZWxkcyB9IGZyb20gJy4vZmllbGRzLmpzJztcbmltcG9ydCB7IG1lcmdlRGlyZWN0aXZlcyB9IGZyb20gJy4vZGlyZWN0aXZlcy5qcyc7XG5pbXBvcnQgeyBtZXJnZU5hbWVkVHlwZUFycmF5IH0gZnJvbSAnLi9tZXJnZS1uYW1lZC10eXBlLWFycmF5LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUludGVyZmFjZShub2RlLCBleGlzdGluZ05vZGUsIGNvbmZpZywgZGlyZWN0aXZlcykge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBub2RlWydkZXNjcmlwdGlvbiddIHx8IGV4aXN0aW5nTm9kZVsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fFxuICAgICAgICAgICAgICAgICAgICBub2RlLmtpbmQgPT09ICdJbnRlcmZhY2VUeXBlRGVmaW5pdGlvbicgfHxcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdOb2RlLmtpbmQgPT09ICdJbnRlcmZhY2VUeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICAgICAgPyAnSW50ZXJmYWNlVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgIDogJ0ludGVyZmFjZVR5cGVFeHRlbnNpb24nLFxuICAgICAgICAgICAgICAgIGxvYzogbm9kZS5sb2MsXG4gICAgICAgICAgICAgICAgZmllbGRzOiBtZXJnZUZpZWxkcyhub2RlLCBub2RlLmZpZWxkcywgZXhpc3RpbmdOb2RlLmZpZWxkcywgY29uZmlnKSxcbiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBtZXJnZURpcmVjdGl2ZXMobm9kZS5kaXJlY3RpdmVzLCBleGlzdGluZ05vZGUuZGlyZWN0aXZlcywgY29uZmlnLCBkaXJlY3RpdmVzKSxcbiAgICAgICAgICAgICAgICBpbnRlcmZhY2VzOiBub2RlWydpbnRlcmZhY2VzJ11cbiAgICAgICAgICAgICAgICAgICAgPyBtZXJnZU5hbWVkVHlwZUFycmF5KG5vZGVbJ2ludGVyZmFjZXMnXSwgZXhpc3RpbmdOb2RlWydpbnRlcmZhY2VzJ10sIGNvbmZpZylcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBtZXJnZSBHcmFwaFFMIGludGVyZmFjZSBcIiR7bm9kZS5uYW1lLnZhbHVlfVwiOiAke2UubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucylcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAga2luZDogS2luZC5JTlRFUkZBQ0VfVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogbm9kZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js":
/*!***************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeNamedTypeArray: () => (/* binding */ mergeNamedTypeArray)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nfunction mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.compareNodes);\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvbWVyZ2UtbmFtZWQtdHlwZS1hcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDTyxpRUFBaUU7QUFDeEU7QUFDQTtBQUNBLG9CQUFvQiw4REFBWTtBQUNoQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL21lcmdlLW5hbWVkLXR5cGUtYXJyYXkuanM/NzZkNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb21wYXJlTm9kZXMgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5mdW5jdGlvbiBhbHJlYWR5RXhpc3RzKGFyciwgb3RoZXIpIHtcbiAgICByZXR1cm4gISFhcnIuZmluZChpID0+IGkubmFtZS52YWx1ZSA9PT0gb3RoZXIubmFtZS52YWx1ZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VOYW1lZFR5cGVBcnJheShmaXJzdCA9IFtdLCBzZWNvbmQgPSBbXSwgY29uZmlnID0ge30pIHtcbiAgICBjb25zdCByZXN1bHQgPSBbLi4uc2Vjb25kLCAuLi5maXJzdC5maWx0ZXIoZCA9PiAhYWxyZWFkeUV4aXN0cyhzZWNvbmQsIGQpKV07XG4gICAgaWYgKGNvbmZpZyAmJiBjb25maWcuc29ydCkge1xuICAgICAgICByZXN1bHQuc29ydChjb21wYXJlTm9kZXMpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNamedDefinitionNode: () => (/* binding */ isNamedDefinitionNode),\n/* harmony export */   mergeGraphQLNodes: () => (/* binding */ mergeGraphQLNodes),\n/* harmony export */   schemaDefSymbol: () => (/* binding */ schemaDefSymbol)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enum.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scalar.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js\");\n/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./union.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js\");\n/* harmony import */ var _input_type_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./input-type.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _schema_def_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./schema-def.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/comments.js\");\n\n\n\n\n\n\n\n\n\n\nconst schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nfunction isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nfunction mergeGraphQLNodes(nodes, config, directives = {}) {\n    var _a, _b, _c;\n    const mergedResultMap = directives;\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = (_a = nodeDefinition.name) === null || _a === void 0 ? void 0 : _a.value;\n            if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.collectComment)(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (((_b = config === null || config === void 0 ? void 0 : config.exclusions) === null || _b === void 0 ? void 0 : _b.includes(name + '.*')) || ((_c = config === null || config === void 0 ? void 0 : config.exclusions) === null || _c === void 0 ? void 0 : _c.includes(name))) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_type_js__WEBPACK_IMPORTED_MODULE_2__.mergeType)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_enum_js__WEBPACK_IMPORTED_MODULE_3__.mergeEnum)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_union_js__WEBPACK_IMPORTED_MODULE_4__.mergeUnion)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_scalar_js__WEBPACK_IMPORTED_MODULE_5__.mergeScalar)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_input_type_js__WEBPACK_IMPORTED_MODULE_6__.mergeInputType)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INTERFACE_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_interface_js__WEBPACK_IMPORTED_MODULE_7__.mergeInterface)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE_DEFINITION:\n                        mergedResultMap[name] = (0,_directives_js__WEBPACK_IMPORTED_MODULE_8__.mergeDirective)(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION || nodeDefinition.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[schemaDefSymbol] = (0,_schema_def_js__WEBPACK_IMPORTED_MODULE_9__.mergeSchemaDefs)(nodeDefinition, mergedResultMap[schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvbWVyZ2Utbm9kZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUErQjtBQUNPO0FBQ0E7QUFDSTtBQUNGO0FBQ1M7QUFDRDtBQUNDO0FBQ0M7QUFDSTtBQUMvQztBQUNBO0FBQ1A7QUFDQTtBQUNPLHlEQUF5RDtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0VBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHlDQUFJO0FBQzdCLHlCQUF5Qix5Q0FBSTtBQUM3QixnREFBZ0QsbURBQVM7QUFDekQ7QUFDQSx5QkFBeUIseUNBQUk7QUFDN0IseUJBQXlCLHlDQUFJO0FBQzdCLGdEQUFnRCxtREFBUztBQUN6RDtBQUNBLHlCQUF5Qix5Q0FBSTtBQUM3Qix5QkFBeUIseUNBQUk7QUFDN0IsZ0RBQWdELHFEQUFVO0FBQzFEO0FBQ0EseUJBQXlCLHlDQUFJO0FBQzdCLHlCQUF5Qix5Q0FBSTtBQUM3QixnREFBZ0QsdURBQVc7QUFDM0Q7QUFDQSx5QkFBeUIseUNBQUk7QUFDN0IseUJBQXlCLHlDQUFJO0FBQzdCLGdEQUFnRCw4REFBYztBQUM5RDtBQUNBLHlCQUF5Qix5Q0FBSTtBQUM3Qix5QkFBeUIseUNBQUk7QUFDN0IsZ0RBQWdELDZEQUFjO0FBQzlEO0FBQ0EseUJBQXlCLHlDQUFJO0FBQzdCLGdEQUFnRCw4REFBYztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx5Q0FBSSw4Q0FBOEMseUNBQUk7QUFDL0YsK0NBQStDLCtEQUFlO0FBQzlEO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9tZXJnZS1ub2Rlcy5qcz80YWNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lcmdlVHlwZSB9IGZyb20gJy4vdHlwZS5qcyc7XG5pbXBvcnQgeyBtZXJnZUVudW0gfSBmcm9tICcuL2VudW0uanMnO1xuaW1wb3J0IHsgbWVyZ2VTY2FsYXIgfSBmcm9tICcuL3NjYWxhci5qcyc7XG5pbXBvcnQgeyBtZXJnZVVuaW9uIH0gZnJvbSAnLi91bmlvbi5qcyc7XG5pbXBvcnQgeyBtZXJnZUlucHV0VHlwZSB9IGZyb20gJy4vaW5wdXQtdHlwZS5qcyc7XG5pbXBvcnQgeyBtZXJnZUludGVyZmFjZSB9IGZyb20gJy4vaW50ZXJmYWNlLmpzJztcbmltcG9ydCB7IG1lcmdlRGlyZWN0aXZlIH0gZnJvbSAnLi9kaXJlY3RpdmVzLmpzJztcbmltcG9ydCB7IG1lcmdlU2NoZW1hRGVmcyB9IGZyb20gJy4vc2NoZW1hLWRlZi5qcyc7XG5pbXBvcnQgeyBjb2xsZWN0Q29tbWVudCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCBjb25zdCBzY2hlbWFEZWZTeW1ib2wgPSAnU0NIRU1BX0RFRl9TWU1CT0wnO1xuZXhwb3J0IGZ1bmN0aW9uIGlzTmFtZWREZWZpbml0aW9uTm9kZShkZWZpbml0aW9uTm9kZSkge1xuICAgIHJldHVybiAnbmFtZScgaW4gZGVmaW5pdGlvbk5vZGU7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VHcmFwaFFMTm9kZXMobm9kZXMsIGNvbmZpZywgZGlyZWN0aXZlcyA9IHt9KSB7XG4gICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgY29uc3QgbWVyZ2VkUmVzdWx0TWFwID0gZGlyZWN0aXZlcztcbiAgICBmb3IgKGNvbnN0IG5vZGVEZWZpbml0aW9uIG9mIG5vZGVzKSB7XG4gICAgICAgIGlmIChpc05hbWVkRGVmaW5pdGlvbk5vZGUobm9kZURlZmluaXRpb24pKSB7XG4gICAgICAgICAgICBjb25zdCBuYW1lID0gKF9hID0gbm9kZURlZmluaXRpb24ubmFtZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgICAgICAgICAgaWYgKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb21tZW50RGVzY3JpcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgY29sbGVjdENvbW1lbnQobm9kZURlZmluaXRpb24pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCgoX2IgPSBjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuZXhjbHVzaW9ucykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmluY2x1ZGVzKG5hbWUgKyAnLionKSkgfHwgKChfYyA9IGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5leGNsdXNpb25zKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuaW5jbHVkZXMobmFtZSkpKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIG1lcmdlZFJlc3VsdE1hcFtuYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAobm9kZURlZmluaXRpb24ua2luZCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuT0JKRUNUX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLk9CSkVDVF9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSA9IG1lcmdlVHlwZShub2RlRGVmaW5pdGlvbiwgbWVyZ2VkUmVzdWx0TWFwW25hbWVdLCBjb25maWcsIGRpcmVjdGl2ZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5FTlVNX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLkVOVU1fVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSBtZXJnZUVudW0obm9kZURlZmluaXRpb24sIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSwgY29uZmlnLCBkaXJlY3RpdmVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuVU5JT05fVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuVU5JT05fVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSBtZXJnZVVuaW9uKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZywgZGlyZWN0aXZlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLlNDQUxBUl9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5TQ0FMQVJfVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSBtZXJnZVNjYWxhcihub2RlRGVmaW5pdGlvbiwgbWVyZ2VkUmVzdWx0TWFwW25hbWVdLCBjb25maWcsIGRpcmVjdGl2ZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuSU5QVVRfT0JKRUNUX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gbWVyZ2VJbnB1dFR5cGUobm9kZURlZmluaXRpb24sIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSwgY29uZmlnLCBkaXJlY3RpdmVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuSU5URVJGQUNFX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLklOVEVSRkFDRV9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSA9IG1lcmdlSW50ZXJmYWNlKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZywgZGlyZWN0aXZlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLkRJUkVDVElWRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gbWVyZ2VEaXJlY3RpdmUobm9kZURlZmluaXRpb24sIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobm9kZURlZmluaXRpb24ua2luZCA9PT0gS2luZC5TQ0hFTUFfREVGSU5JVElPTiB8fCBub2RlRGVmaW5pdGlvbi5raW5kID09PSBLaW5kLlNDSEVNQV9FWFRFTlNJT04pIHtcbiAgICAgICAgICAgIG1lcmdlZFJlc3VsdE1hcFtzY2hlbWFEZWZTeW1ib2xdID0gbWVyZ2VTY2hlbWFEZWZzKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbc2NoZW1hRGVmU3ltYm9sXSwgY29uZmlnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VkUmVzdWx0TWFwO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js":
/*!*******************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeGraphQLTypes: () => (/* binding */ mergeGraphQLTypes),\n/* harmony export */   mergeTypeDefs: () => (/* binding */ mergeTypeDefs)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/predicates.mjs\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js\");\n/* harmony import */ var _merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./merge-nodes.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/comments.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/isDocumentNode.js\");\n/* harmony import */ var _schema_def_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./schema-def.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js\");\n\n\n\n\n\nfunction mergeTypeDefs(typeSource, config) {\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.resetComments)();\n    const doc = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config === null || config === void 0 ? void 0 : config.commentDescriptions) {\n        result = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.printWithComments)(doc);\n    }\n    else {\n        result = doc;\n    }\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.resetComments)();\n    return result;\n}\nfunction visitTypeSources(typeSource, options, allDirectives = [], allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allDirectives, allNodes, visitedTypeSources);\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSchema)(typeSource)) {\n            const documentNode = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getDocumentNodeFromSchema)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isStringTypes)(typeSource) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isSourceTypes)(typeSource)) {\n            const documentNode = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.parse)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && (0,graphql__WEBPACK_IMPORTED_MODULE_6__.isDefinitionNode)(typeSource)) {\n            if (typeSource.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE_DEFINITION) {\n                allDirectives.push(typeSource);\n            }\n            else {\n                allNodes.push(typeSource);\n            }\n        }\n        else if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.isDocumentNode)(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return { allDirectives, allNodes };\n}\nfunction mergeGraphQLTypes(typeSource, config) {\n    var _a, _b, _c;\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.resetComments)();\n    const { allDirectives, allNodes } = visitTypeSources(typeSource, config);\n    const mergedDirectives = (0,_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.mergeGraphQLNodes)(allDirectives, config);\n    const mergedNodes = (0,_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.mergeGraphQLNodes)(allNodes, config, mergedDirectives);\n    if (config === null || config === void 0 ? void 0 : config.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol] || {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in _schema_def_js__WEBPACK_IMPORTED_MODULE_9__.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = _schema_def_js__WEBPACK_IMPORTED_MODULE_9__.DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (((_a = schemaDef === null || schemaDef === void 0 ? void 0 : schemaDef.operationTypes) === null || _a === void 0 ? void 0 : _a.length) != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol] = schemaDef;\n        }\n    }\n    if ((config === null || config === void 0 ? void 0 : config.forceSchemaDefinition) && !((_c = (_b = mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol]) === null || _b === void 0 ? void 0 : _b.operationTypes) === null || _c === void 0 ? void 0 : _c.length)) {\n        mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol] = {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config === null || config === void 0 ? void 0 : config.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : _utils_js__WEBPACK_IMPORTED_MODULE_4__.defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => { var _a, _b; return sortFn((_a = a.name) === null || _a === void 0 ? void 0 : _a.value, (_b = b.name) === null || _b === void 0 ? void 0 : _b.value); });\n    }\n    return mergedNodeDefinitions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvbWVyZ2UtdHlwZWRlZnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQW1FO0FBQ2dCO0FBQ2I7QUFDOEM7QUFDbEQ7QUFDM0Q7QUFDUCxJQUFJLG1FQUFhO0FBQ2pCO0FBQ0EsY0FBYyx5Q0FBSTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHVFQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksbUVBQWE7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsaURBQVE7QUFDekIsaUNBQWlDLCtFQUF5QjtBQUMxRDtBQUNBO0FBQ0EsaUJBQWlCLHdEQUFhLGdCQUFnQix3REFBYTtBQUMzRCxpQ0FBaUMsOENBQUs7QUFDdEM7QUFDQTtBQUNBLG1EQUFtRCx5REFBZ0I7QUFDbkUsb0NBQW9DLHlDQUFJO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixvRUFBYztBQUMvQjtBQUNBO0FBQ0E7QUFDQSx5R0FBeUcsa0JBQWtCO0FBQzNIO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0EsSUFBSSxtRUFBYTtBQUNqQixZQUFZLDBCQUEwQjtBQUN0Qyw2QkFBNkIsa0VBQWlCO0FBQzlDLHdCQUF3QixrRUFBaUI7QUFDekM7QUFDQTtBQUNBLHNDQUFzQyw0REFBZTtBQUNyRCxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLDJFQUErQjtBQUN2RTtBQUNBO0FBQ0EsNkNBQTZDLDJFQUErQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUNBQUk7QUFDbEM7QUFDQSxrQ0FBa0MseUNBQUk7QUFDdEM7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsNERBQWU7QUFDdkM7QUFDQTtBQUNBLG9IQUFvSCw0REFBZTtBQUNuSSxvQkFBb0IsNERBQWU7QUFDbkMsa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQSwwQkFBMEIseUNBQUk7QUFDOUI7QUFDQTtBQUNBLDhCQUE4Qix5Q0FBSTtBQUNsQztBQUNBLGtDQUFrQyx5Q0FBSTtBQUN0QztBQUNBLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsOERBQXVCO0FBQ2hHLCtDQUErQyxZQUFZLDBJQUEwSTtBQUNyTTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL21lcmdlLXR5cGVkZWZzLmpzPzA5ZDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2UsIEtpbmQsIGlzU2NoZW1hLCBpc0RlZmluaXRpb25Ob2RlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZGVmYXVsdFN0cmluZ0NvbXBhcmF0b3IsIGlzU291cmNlVHlwZXMsIGlzU3RyaW5nVHlwZXMgfSBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCB7IG1lcmdlR3JhcGhRTE5vZGVzLCBzY2hlbWFEZWZTeW1ib2wgfSBmcm9tICcuL21lcmdlLW5vZGVzLmpzJztcbmltcG9ydCB7IGdldERvY3VtZW50Tm9kZUZyb21TY2hlbWEsIGlzRG9jdW1lbnROb2RlLCByZXNldENvbW1lbnRzLCBwcmludFdpdGhDb21tZW50cywgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBERUZBVUxUX09QRVJBVElPTl9UWVBFX05BTUVfTUFQIH0gZnJvbSAnLi9zY2hlbWEtZGVmLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZVR5cGVEZWZzKHR5cGVTb3VyY2UsIGNvbmZpZykge1xuICAgIHJlc2V0Q29tbWVudHMoKTtcbiAgICBjb25zdCBkb2MgPSB7XG4gICAgICAgIGtpbmQ6IEtpbmQuRE9DVU1FTlQsXG4gICAgICAgIGRlZmluaXRpb25zOiBtZXJnZUdyYXBoUUxUeXBlcyh0eXBlU291cmNlLCB7XG4gICAgICAgICAgICB1c2VTY2hlbWFEZWZpbml0aW9uOiB0cnVlLFxuICAgICAgICAgICAgZm9yY2VTY2hlbWFEZWZpbml0aW9uOiBmYWxzZSxcbiAgICAgICAgICAgIHRocm93T25Db25mbGljdDogZmFsc2UsXG4gICAgICAgICAgICBjb21tZW50RGVzY3JpcHRpb25zOiBmYWxzZSxcbiAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgfSksXG4gICAgfTtcbiAgICBsZXQgcmVzdWx0O1xuICAgIGlmIChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29tbWVudERlc2NyaXB0aW9ucykge1xuICAgICAgICByZXN1bHQgPSBwcmludFdpdGhDb21tZW50cyhkb2MpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVzdWx0ID0gZG9jO1xuICAgIH1cbiAgICByZXNldENvbW1lbnRzKCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIHZpc2l0VHlwZVNvdXJjZXModHlwZVNvdXJjZSwgb3B0aW9ucywgYWxsRGlyZWN0aXZlcyA9IFtdLCBhbGxOb2RlcyA9IFtdLCB2aXNpdGVkVHlwZVNvdXJjZXMgPSBuZXcgU2V0KCkpIHtcbiAgICBpZiAodHlwZVNvdXJjZSAmJiAhdmlzaXRlZFR5cGVTb3VyY2VzLmhhcyh0eXBlU291cmNlKSkge1xuICAgICAgICB2aXNpdGVkVHlwZVNvdXJjZXMuYWRkKHR5cGVTb3VyY2UpO1xuICAgICAgICBpZiAodHlwZW9mIHR5cGVTb3VyY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHZpc2l0VHlwZVNvdXJjZXModHlwZVNvdXJjZSgpLCBvcHRpb25zLCBhbGxEaXJlY3RpdmVzLCBhbGxOb2RlcywgdmlzaXRlZFR5cGVTb3VyY2VzKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KHR5cGVTb3VyY2UpKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHR5cGUgb2YgdHlwZVNvdXJjZSkge1xuICAgICAgICAgICAgICAgIHZpc2l0VHlwZVNvdXJjZXModHlwZSwgb3B0aW9ucywgYWxsRGlyZWN0aXZlcywgYWxsTm9kZXMsIHZpc2l0ZWRUeXBlU291cmNlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNTY2hlbWEodHlwZVNvdXJjZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGRvY3VtZW50Tm9kZSA9IGdldERvY3VtZW50Tm9kZUZyb21TY2hlbWEodHlwZVNvdXJjZSwgb3B0aW9ucyk7XG4gICAgICAgICAgICB2aXNpdFR5cGVTb3VyY2VzKGRvY3VtZW50Tm9kZS5kZWZpbml0aW9ucywgb3B0aW9ucywgYWxsRGlyZWN0aXZlcywgYWxsTm9kZXMsIHZpc2l0ZWRUeXBlU291cmNlcyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNTdHJpbmdUeXBlcyh0eXBlU291cmNlKSB8fCBpc1NvdXJjZVR5cGVzKHR5cGVTb3VyY2UpKSB7XG4gICAgICAgICAgICBjb25zdCBkb2N1bWVudE5vZGUgPSBwYXJzZSh0eXBlU291cmNlLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHZpc2l0VHlwZVNvdXJjZXMoZG9jdW1lbnROb2RlLmRlZmluaXRpb25zLCBvcHRpb25zLCBhbGxEaXJlY3RpdmVzLCBhbGxOb2RlcywgdmlzaXRlZFR5cGVTb3VyY2VzKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlb2YgdHlwZVNvdXJjZSA9PT0gJ29iamVjdCcgJiYgaXNEZWZpbml0aW9uTm9kZSh0eXBlU291cmNlKSkge1xuICAgICAgICAgICAgaWYgKHR5cGVTb3VyY2Uua2luZCA9PT0gS2luZC5ESVJFQ1RJVkVfREVGSU5JVElPTikge1xuICAgICAgICAgICAgICAgIGFsbERpcmVjdGl2ZXMucHVzaCh0eXBlU291cmNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGFsbE5vZGVzLnB1c2godHlwZVNvdXJjZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNEb2N1bWVudE5vZGUodHlwZVNvdXJjZSkpIHtcbiAgICAgICAgICAgIHZpc2l0VHlwZVNvdXJjZXModHlwZVNvdXJjZS5kZWZpbml0aW9ucywgb3B0aW9ucywgYWxsRGlyZWN0aXZlcywgYWxsTm9kZXMsIHZpc2l0ZWRUeXBlU291cmNlcyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYHR5cGVEZWZzIG11c3QgY29udGFpbiBvbmx5IHN0cmluZ3MsIGRvY3VtZW50cywgc2NoZW1hcywgb3IgZnVuY3Rpb25zLCBnb3QgJHt0eXBlb2YgdHlwZVNvdXJjZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBhbGxEaXJlY3RpdmVzLCBhbGxOb2RlcyB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlR3JhcGhRTFR5cGVzKHR5cGVTb3VyY2UsIGNvbmZpZykge1xuICAgIHZhciBfYSwgX2IsIF9jO1xuICAgIHJlc2V0Q29tbWVudHMoKTtcbiAgICBjb25zdCB7IGFsbERpcmVjdGl2ZXMsIGFsbE5vZGVzIH0gPSB2aXNpdFR5cGVTb3VyY2VzKHR5cGVTb3VyY2UsIGNvbmZpZyk7XG4gICAgY29uc3QgbWVyZ2VkRGlyZWN0aXZlcyA9IG1lcmdlR3JhcGhRTE5vZGVzKGFsbERpcmVjdGl2ZXMsIGNvbmZpZyk7XG4gICAgY29uc3QgbWVyZ2VkTm9kZXMgPSBtZXJnZUdyYXBoUUxOb2RlcyhhbGxOb2RlcywgY29uZmlnLCBtZXJnZWREaXJlY3RpdmVzKTtcbiAgICBpZiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLnVzZVNjaGVtYURlZmluaXRpb24pIHtcbiAgICAgICAgLy8gWFhYOiByaWdodCBub3cgd2UgZG9uJ3QgaGFuZGxlIG11bHRpcGxlIHNjaGVtYSBkZWZpbml0aW9uc1xuICAgICAgICBjb25zdCBzY2hlbWFEZWYgPSBtZXJnZWROb2Rlc1tzY2hlbWFEZWZTeW1ib2xdIHx8IHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0NIRU1BX0RFRklOSVRJT04sXG4gICAgICAgICAgICBvcGVyYXRpb25UeXBlczogW10sXG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IG9wZXJhdGlvblR5cGVzID0gc2NoZW1hRGVmLm9wZXJhdGlvblR5cGVzO1xuICAgICAgICBmb3IgKGNvbnN0IG9wVHlwZURlZk5vZGVUeXBlIGluIERFRkFVTFRfT1BFUkFUSU9OX1RZUEVfTkFNRV9NQVApIHtcbiAgICAgICAgICAgIGNvbnN0IG9wVHlwZURlZk5vZGUgPSBvcGVyYXRpb25UeXBlcy5maW5kKG9wZXJhdGlvblR5cGUgPT4gb3BlcmF0aW9uVHlwZS5vcGVyYXRpb24gPT09IG9wVHlwZURlZk5vZGVUeXBlKTtcbiAgICAgICAgICAgIGlmICghb3BUeXBlRGVmTm9kZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBvc3NpYmxlUm9vdFR5cGVOYW1lID0gREVGQVVMVF9PUEVSQVRJT05fVFlQRV9OQU1FX01BUFtvcFR5cGVEZWZOb2RlVHlwZV07XG4gICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdQb3NzaWJsZVJvb3RUeXBlID0gbWVyZ2VkTm9kZXNbcG9zc2libGVSb290VHlwZU5hbWVdO1xuICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ1Bvc3NpYmxlUm9vdFR5cGUgIT0gbnVsbCAmJiBleGlzdGluZ1Bvc3NpYmxlUm9vdFR5cGUubmFtZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIG9wZXJhdGlvblR5cGVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5PUEVSQVRJT05fVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRURfVFlQRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBleGlzdGluZ1Bvc3NpYmxlUm9vdFR5cGUubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb246IG9wVHlwZURlZk5vZGVUeXBlLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgoX2EgPSBzY2hlbWFEZWYgPT09IG51bGwgfHwgc2NoZW1hRGVmID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzY2hlbWFEZWYub3BlcmF0aW9uVHlwZXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpICE9IG51bGwgJiYgc2NoZW1hRGVmLm9wZXJhdGlvblR5cGVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIG1lcmdlZE5vZGVzW3NjaGVtYURlZlN5bWJvbF0gPSBzY2hlbWFEZWY7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuZm9yY2VTY2hlbWFEZWZpbml0aW9uKSAmJiAhKChfYyA9IChfYiA9IG1lcmdlZE5vZGVzW3NjaGVtYURlZlN5bWJvbF0pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5vcGVyYXRpb25UeXBlcykgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jLmxlbmd0aCkpIHtcbiAgICAgICAgbWVyZ2VkTm9kZXNbc2NoZW1hRGVmU3ltYm9sXSA9IHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0NIRU1BX0RFRklOSVRJT04sXG4gICAgICAgICAgICBvcGVyYXRpb25UeXBlczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5PUEVSQVRJT05fVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb246ICdxdWVyeScsXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRURfVFlQRSxcbiAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk5BTUUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6ICdRdWVyeScsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjb25zdCBtZXJnZWROb2RlRGVmaW5pdGlvbnMgPSBPYmplY3QudmFsdWVzKG1lcmdlZE5vZGVzKTtcbiAgICBpZiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLnNvcnQpIHtcbiAgICAgICAgY29uc3Qgc29ydEZuID0gdHlwZW9mIGNvbmZpZy5zb3J0ID09PSAnZnVuY3Rpb24nID8gY29uZmlnLnNvcnQgOiBkZWZhdWx0U3RyaW5nQ29tcGFyYXRvcjtcbiAgICAgICAgbWVyZ2VkTm9kZURlZmluaXRpb25zLnNvcnQoKGEsIGIpID0+IHsgdmFyIF9hLCBfYjsgcmV0dXJuIHNvcnRGbigoX2EgPSBhLm5hbWUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS52YWx1ZSwgKF9iID0gYi5uYW1lKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IudmFsdWUpOyB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlZE5vZGVEZWZpbml0aW9ucztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeScalar: () => (/* binding */ mergeScalar)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n\n\nfunction mergeScalar(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvc2NhbGFyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQjtBQUNtQjtBQUMzQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtEQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9zY2FsYXIuanM/Y2I1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZXMgfSBmcm9tICcuL2RpcmVjdGl2ZXMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlU2NhbGFyKG5vZGUsIGV4aXN0aW5nTm9kZSwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgaWYgKGV4aXN0aW5nTm9kZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IG5vZGVbJ2Rlc2NyaXB0aW9uJ10gfHwgZXhpc3RpbmdOb2RlWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAgICAga2luZDogKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucykgfHxcbiAgICAgICAgICAgICAgICBub2RlLmtpbmQgPT09ICdTY2FsYXJUeXBlRGVmaW5pdGlvbicgfHxcbiAgICAgICAgICAgICAgICBleGlzdGluZ05vZGUua2luZCA9PT0gJ1NjYWxhclR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgID8gJ1NjYWxhclR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgIDogJ1NjYWxhclR5cGVFeHRlbnNpb24nLFxuICAgICAgICAgICAgbG9jOiBub2RlLmxvYyxcbiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IG1lcmdlRGlyZWN0aXZlcyhub2RlLmRpcmVjdGl2ZXMsIGV4aXN0aW5nTm9kZS5kaXJlY3RpdmVzLCBjb25maWcsIGRpcmVjdGl2ZXMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucylcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAga2luZDogS2luZC5TQ0FMQVJfVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogbm9kZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js":
/*!***************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js ***!
  \***************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_OPERATION_TYPE_NAME_MAP: () => (/* binding */ DEFAULT_OPERATION_TYPE_NAME_MAP),\n/* harmony export */   mergeSchemaDefs: () => (/* binding */ mergeSchemaDefs)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n\n\nconst DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) || existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nfunction mergeSchemaDefs(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            kind: node.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION || existingNode.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION\n                ? graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION\n                : graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return ((config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvc2NoZW1hLWRlZi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ2tCO0FBQzNDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGdDQUFnQyx5Q0FBSSw0Q0FBNEMseUNBQUk7QUFDcEYsa0JBQWtCLHlDQUFJO0FBQ3RCLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBLHdCQUF3QiwrREFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9zY2hlbWEtZGVmLmpzP2Q4MjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lcmdlRGlyZWN0aXZlcyB9IGZyb20gJy4vZGlyZWN0aXZlcy5qcyc7XG5leHBvcnQgY29uc3QgREVGQVVMVF9PUEVSQVRJT05fVFlQRV9OQU1FX01BUCA9IHtcbiAgICBxdWVyeTogJ1F1ZXJ5JyxcbiAgICBtdXRhdGlvbjogJ011dGF0aW9uJyxcbiAgICBzdWJzY3JpcHRpb246ICdTdWJzY3JpcHRpb24nLFxufTtcbmZ1bmN0aW9uIG1lcmdlT3BlcmF0aW9uVHlwZXMob3BOb2RlTGlzdCA9IFtdLCBleGlzdGluZ09wTm9kZUxpc3QgPSBbXSkge1xuICAgIGNvbnN0IGZpbmFsT3BOb2RlTGlzdCA9IFtdO1xuICAgIGZvciAoY29uc3Qgb3BOb2RlVHlwZSBpbiBERUZBVUxUX09QRVJBVElPTl9UWVBFX05BTUVfTUFQKSB7XG4gICAgICAgIGNvbnN0IG9wTm9kZSA9IG9wTm9kZUxpc3QuZmluZChuID0+IG4ub3BlcmF0aW9uID09PSBvcE5vZGVUeXBlKSB8fCBleGlzdGluZ09wTm9kZUxpc3QuZmluZChuID0+IG4ub3BlcmF0aW9uID09PSBvcE5vZGVUeXBlKTtcbiAgICAgICAgaWYgKG9wTm9kZSkge1xuICAgICAgICAgICAgZmluYWxPcE5vZGVMaXN0LnB1c2gob3BOb2RlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmluYWxPcE5vZGVMaXN0O1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlU2NoZW1hRGVmcyhub2RlLCBleGlzdGluZ05vZGUsIGNvbmZpZywgZGlyZWN0aXZlcykge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpbmQ6IG5vZGUua2luZCA9PT0gS2luZC5TQ0hFTUFfREVGSU5JVElPTiB8fCBleGlzdGluZ05vZGUua2luZCA9PT0gS2luZC5TQ0hFTUFfREVGSU5JVElPTlxuICAgICAgICAgICAgICAgID8gS2luZC5TQ0hFTUFfREVGSU5JVElPTlxuICAgICAgICAgICAgICAgIDogS2luZC5TQ0hFTUFfRVhURU5TSU9OLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IG5vZGVbJ2Rlc2NyaXB0aW9uJ10gfHwgZXhpc3RpbmdOb2RlWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAgICAgZGlyZWN0aXZlczogbWVyZ2VEaXJlY3RpdmVzKG5vZGUuZGlyZWN0aXZlcywgZXhpc3RpbmdOb2RlLmRpcmVjdGl2ZXMsIGNvbmZpZywgZGlyZWN0aXZlcyksXG4gICAgICAgICAgICBvcGVyYXRpb25UeXBlczogbWVyZ2VPcGVyYXRpb25UeXBlcyhub2RlLm9wZXJhdGlvblR5cGVzLCBleGlzdGluZ05vZGUub3BlcmF0aW9uVHlwZXMpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gKChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29udmVydEV4dGVuc2lvbnMpXG4gICAgICAgID8ge1xuICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0NIRU1BX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBub2RlKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeType: () => (/* binding */ mergeType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fields.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merge-named-type-array.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\");\n\n\n\n\nfunction mergeType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: (0,_fields_js__WEBPACK_IMPORTED_MODULE_0__.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n                interfaces: (0,_merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__.mergeNamedTypeArray)(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvdHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUErQjtBQUNXO0FBQ1E7QUFDZ0I7QUFDM0Q7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVEQUFXO0FBQ25DLDRCQUE0QiwrREFBZTtBQUMzQyw0QkFBNEIsK0VBQW1CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLDZEQUE2RCxnQkFBZ0IsS0FBSyxVQUFVO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy90eXBlLmpzPzcwZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgbWVyZ2VGaWVsZHMgfSBmcm9tICcuL2ZpZWxkcy5qcyc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZXMgfSBmcm9tICcuL2RpcmVjdGl2ZXMuanMnO1xuaW1wb3J0IHsgbWVyZ2VOYW1lZFR5cGVBcnJheSB9IGZyb20gJy4vbWVyZ2UtbmFtZWQtdHlwZS1hcnJheS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VUeXBlKG5vZGUsIGV4aXN0aW5nTm9kZSwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgaWYgKGV4aXN0aW5nTm9kZSkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBuYW1lOiBub2RlLm5hbWUsXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb246IG5vZGVbJ2Rlc2NyaXB0aW9uJ10gfHwgZXhpc3RpbmdOb2RlWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAgICAgICAgIGtpbmQ6IChjb25maWcgPT09IG51bGwgfHwgY29uZmlnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjb25maWcuY29udmVydEV4dGVuc2lvbnMpIHx8XG4gICAgICAgICAgICAgICAgICAgIG5vZGUua2luZCA9PT0gJ09iamVjdFR5cGVEZWZpbml0aW9uJyB8fFxuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ05vZGUua2luZCA9PT0gJ09iamVjdFR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgICAgICA/ICdPYmplY3RUeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICAgICAgOiAnT2JqZWN0VHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICAgICAgbG9jOiBub2RlLmxvYyxcbiAgICAgICAgICAgICAgICBmaWVsZHM6IG1lcmdlRmllbGRzKG5vZGUsIG5vZGUuZmllbGRzLCBleGlzdGluZ05vZGUuZmllbGRzLCBjb25maWcpLFxuICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IG1lcmdlRGlyZWN0aXZlcyhub2RlLmRpcmVjdGl2ZXMsIGV4aXN0aW5nTm9kZS5kaXJlY3RpdmVzLCBjb25maWcsIGRpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgICAgIGludGVyZmFjZXM6IG1lcmdlTmFtZWRUeXBlQXJyYXkobm9kZS5pbnRlcmZhY2VzLCBleGlzdGluZ05vZGUuaW50ZXJmYWNlcywgY29uZmlnKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIG1lcmdlIEdyYXBoUUwgdHlwZSBcIiR7bm9kZS5uYW1lLnZhbHVlfVwiOiAke2UubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gKGNvbmZpZyA9PT0gbnVsbCB8fCBjb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGNvbmZpZy5jb252ZXJ0RXh0ZW5zaW9ucylcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAga2luZDogS2luZC5PQkpFQ1RfVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogbm9kZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeUnion: () => (/* binding */ mergeUnion)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merge-named-type-array.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\");\n\n\n\nfunction mergeUnion(first, second, config, directives) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(first.directives, second.directives, config, directives),\n            kind: (config === null || config === void 0 ? void 0 : config.convertExtensions) || first.kind === 'UnionTypeDefinition' || second.kind === 'UnionTypeDefinition'\n                ? graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION\n                : graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: (0,_merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__.mergeNamedTypeArray)(first.types, second.types, config),\n        };\n    }\n    return (config === null || config === void 0 ? void 0 : config.convertExtensions)\n        ? {\n            ...first,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvdW5pb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNtQjtBQUNnQjtBQUMzRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsK0RBQWU7QUFDdkM7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEIsa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0EsbUJBQW1CLCtFQUFtQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvdW5pb24uanM/MjM3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZXMgfSBmcm9tICcuL2RpcmVjdGl2ZXMuanMnO1xuaW1wb3J0IHsgbWVyZ2VOYW1lZFR5cGVBcnJheSB9IGZyb20gJy4vbWVyZ2UtbmFtZWQtdHlwZS1hcnJheS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VVbmlvbihmaXJzdCwgc2Vjb25kLCBjb25maWcsIGRpcmVjdGl2ZXMpIHtcbiAgICBpZiAoc2Vjb25kKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiBmaXJzdC5uYW1lLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGZpcnN0WydkZXNjcmlwdGlvbiddIHx8IHNlY29uZFsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgICAgIC8vIENvbnN0WE5vZGUgaGFzIGJlZW4gaW50cm9kdWNlZCBpbiB2MTYgYnV0IGl0IGlzIG5vdCBjb21wYXRpYmxlIHdpdGggWE5vZGUgc28gd2UgZG8gYGFzIGFueWAgZm9yIGJhY2t3YXJkcyBjb21wYXRpYmlsaXR5XG4gICAgICAgICAgICBkaXJlY3RpdmVzOiBtZXJnZURpcmVjdGl2ZXMoZmlyc3QuZGlyZWN0aXZlcywgc2Vjb25kLmRpcmVjdGl2ZXMsIGNvbmZpZywgZGlyZWN0aXZlcyksXG4gICAgICAgICAgICBraW5kOiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKSB8fCBmaXJzdC5raW5kID09PSAnVW5pb25UeXBlRGVmaW5pdGlvbicgfHwgc2Vjb25kLmtpbmQgPT09ICdVbmlvblR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgID8gS2luZC5VTklPTl9UWVBFX0RFRklOSVRJT05cbiAgICAgICAgICAgICAgICA6IEtpbmQuVU5JT05fVFlQRV9FWFRFTlNJT04sXG4gICAgICAgICAgICBsb2M6IGZpcnN0LmxvYyxcbiAgICAgICAgICAgIHR5cGVzOiBtZXJnZU5hbWVkVHlwZUFycmF5KGZpcnN0LnR5cGVzLCBzZWNvbmQudHlwZXMsIGNvbmZpZyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiAoY29uZmlnID09PSBudWxsIHx8IGNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogY29uZmlnLmNvbnZlcnRFeHRlbnNpb25zKVxuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLmZpcnN0LFxuICAgICAgICAgICAga2luZDogS2luZC5VTklPTl9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBmaXJzdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompareVal: () => (/* binding */ CompareVal),\n/* harmony export */   defaultStringComparator: () => (/* binding */ defaultStringComparator),\n/* harmony export */   extractType: () => (/* binding */ extractType),\n/* harmony export */   isListTypeNode: () => (/* binding */ isListTypeNode),\n/* harmony export */   isNonNullTypeNode: () => (/* binding */ isNonNullTypeNode),\n/* harmony export */   isSourceTypes: () => (/* binding */ isSourceTypes),\n/* harmony export */   isStringTypes: () => (/* binding */ isStringTypes),\n/* harmony export */   isWrappingTypeNode: () => (/* binding */ isWrappingTypeNode),\n/* harmony export */   printTypeNode: () => (/* binding */ printTypeNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/source.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nfunction isSourceTypes(types) {\n    return types instanceof graphql__WEBPACK_IMPORTED_MODULE_0__.Source;\n}\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE;\n}\nfunction isListTypeNode(type) {\n    return type.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE;\n}\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE;\n}\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nvar CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal || (CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBdUM7QUFDaEM7QUFDUDtBQUNBO0FBQ087QUFDUCw0QkFBNEIsMkNBQU07QUFDbEM7QUFDTztBQUNQO0FBQ0EsZ0NBQWdDLHlDQUFJO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCx5QkFBeUIseUNBQUk7QUFDN0I7QUFDTztBQUNQLHlCQUF5Qix5Q0FBSTtBQUM3QjtBQUNPO0FBQ1AseUJBQXlCLHlDQUFJO0FBQzdCO0FBQ087QUFDUDtBQUNBLG1CQUFtQix5QkFBeUI7QUFDNUM7QUFDQTtBQUNBLGtCQUFrQix5QkFBeUI7QUFDM0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQzFCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy91dGlscy5qcz9kNzVkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNvdXJjZSwgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3RyaW5nVHlwZXModHlwZXMpIHtcbiAgICByZXR1cm4gdHlwZW9mIHR5cGVzID09PSAnc3RyaW5nJztcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1NvdXJjZVR5cGVzKHR5cGVzKSB7XG4gICAgcmV0dXJuIHR5cGVzIGluc3RhbmNlb2YgU291cmNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGV4dHJhY3RUeXBlKHR5cGUpIHtcbiAgICBsZXQgdmlzaXRlZFR5cGUgPSB0eXBlO1xuICAgIHdoaWxlICh2aXNpdGVkVHlwZS5raW5kID09PSBLaW5kLkxJU1RfVFlQRSB8fCB2aXNpdGVkVHlwZS5raW5kID09PSAnTm9uTnVsbFR5cGUnKSB7XG4gICAgICAgIHZpc2l0ZWRUeXBlID0gdmlzaXRlZFR5cGUudHlwZTtcbiAgICB9XG4gICAgcmV0dXJuIHZpc2l0ZWRUeXBlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzV3JhcHBpbmdUeXBlTm9kZSh0eXBlKSB7XG4gICAgcmV0dXJuIHR5cGUua2luZCAhPT0gS2luZC5OQU1FRF9UWVBFO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTGlzdFR5cGVOb2RlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZS5raW5kID09PSBLaW5kLkxJU1RfVFlQRTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc05vbk51bGxUeXBlTm9kZSh0eXBlKSB7XG4gICAgcmV0dXJuIHR5cGUua2luZCA9PT0gS2luZC5OT05fTlVMTF9UWVBFO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHByaW50VHlwZU5vZGUodHlwZSkge1xuICAgIGlmIChpc0xpc3RUeXBlTm9kZSh0eXBlKSkge1xuICAgICAgICByZXR1cm4gYFske3ByaW50VHlwZU5vZGUodHlwZS50eXBlKX1dYDtcbiAgICB9XG4gICAgaWYgKGlzTm9uTnVsbFR5cGVOb2RlKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiBgJHtwcmludFR5cGVOb2RlKHR5cGUudHlwZSl9IWA7XG4gICAgfVxuICAgIHJldHVybiB0eXBlLm5hbWUudmFsdWU7XG59XG5leHBvcnQgdmFyIENvbXBhcmVWYWw7XG4oZnVuY3Rpb24gKENvbXBhcmVWYWwpIHtcbiAgICBDb21wYXJlVmFsW0NvbXBhcmVWYWxbXCJBX1NNQUxMRVJfVEhBTl9CXCJdID0gLTFdID0gXCJBX1NNQUxMRVJfVEhBTl9CXCI7XG4gICAgQ29tcGFyZVZhbFtDb21wYXJlVmFsW1wiQV9FUVVBTFNfQlwiXSA9IDBdID0gXCJBX0VRVUFMU19CXCI7XG4gICAgQ29tcGFyZVZhbFtDb21wYXJlVmFsW1wiQV9HUkVBVEVSX1RIQU5fQlwiXSA9IDFdID0gXCJBX0dSRUFURVJfVEhBTl9CXCI7XG59KShDb21wYXJlVmFsIHx8IChDb21wYXJlVmFsID0ge30pKTtcbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0U3RyaW5nQ29tcGFyYXRvcihhLCBiKSB7XG4gICAgaWYgKGEgPT0gbnVsbCAmJiBiID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIENvbXBhcmVWYWwuQV9FUVVBTFNfQjtcbiAgICB9XG4gICAgaWYgKGEgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gQ29tcGFyZVZhbC5BX1NNQUxMRVJfVEhBTl9CO1xuICAgIH1cbiAgICBpZiAoYiA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBDb21wYXJlVmFsLkFfR1JFQVRFUl9USEFOX0I7XG4gICAgfVxuICAgIGlmIChhIDwgYilcbiAgICAgICAgcmV0dXJuIENvbXBhcmVWYWwuQV9TTUFMTEVSX1RIQU5fQjtcbiAgICBpZiAoYSA+IGIpXG4gICAgICAgIHJldHVybiBDb21wYXJlVmFsLkFfR1JFQVRFUl9USEFOX0I7XG4gICAgcmV0dXJuIENvbXBhcmVWYWwuQV9FUVVBTFNfQjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDelegationPlanBuilder: () => (/* binding */ createDelegationPlanBuilder)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _getFieldsNotInSubschema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getFieldsNotInSubschema.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\nfunction calculateDelegationStage(mergedTypeInfo, sourceSubschemas, targetSubschemas, fieldNodes) {\n    var _a;\n    const { selectionSets, fieldSelectionSets, uniqueFields, nonUniqueFields } = mergedTypeInfo;\n    // 1.  calculate if possible to delegate to given subschema\n    const proxiableSubschemas = [];\n    const nonProxiableSubschemas = [];\n    for (const t of targetSubschemas) {\n        const selectionSet = selectionSets.get(t);\n        const fieldSelectionSetsMap = fieldSelectionSets.get(t);\n        if (selectionSet != null && !subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemas, selectionSet)) {\n            nonProxiableSubschemas.push(t);\n        }\n        else {\n            if (fieldSelectionSetsMap == null ||\n                fieldNodes.every(fieldNode => {\n                    const fieldName = fieldNode.name.value;\n                    const fieldSelectionSet = fieldSelectionSetsMap[fieldName];\n                    return (fieldSelectionSet == null ||\n                        subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemas, fieldSelectionSet));\n                })) {\n                proxiableSubschemas.push(t);\n            }\n            else {\n                nonProxiableSubschemas.push(t);\n            }\n        }\n    }\n    const unproxiableFieldNodes = [];\n    // 2. for each selection:\n    const delegationMap = new Map();\n    for (const fieldNode of fieldNodes) {\n        if (fieldNode.name.value === '__typename') {\n            continue;\n        }\n        // 2a. use uniqueFields map to assign fields to subschema if one of possible subschemas\n        const uniqueSubschema = uniqueFields[fieldNode.name.value];\n        if (uniqueSubschema != null) {\n            if (!proxiableSubschemas.includes(uniqueSubschema)) {\n                unproxiableFieldNodes.push(fieldNode);\n                continue;\n            }\n            const existingSubschema = (_a = delegationMap.get(uniqueSubschema)) === null || _a === void 0 ? void 0 : _a.selections;\n            if (existingSubschema != null) {\n                existingSubschema.push(fieldNode);\n            }\n            else {\n                delegationMap.set(uniqueSubschema, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                    selections: [fieldNode],\n                });\n            }\n            continue;\n        }\n        // 2b. use nonUniqueFields to assign to a possible subschema,\n        //     preferring one of the subschemas already targets of delegation\n        let nonUniqueSubschemas = nonUniqueFields[fieldNode.name.value];\n        if (nonUniqueSubschemas == null) {\n            unproxiableFieldNodes.push(fieldNode);\n            continue;\n        }\n        nonUniqueSubschemas = nonUniqueSubschemas.filter(s => proxiableSubschemas.includes(s));\n        if (!nonUniqueSubschemas.length) {\n            unproxiableFieldNodes.push(fieldNode);\n            continue;\n        }\n        const existingSubschema = nonUniqueSubschemas.find(s => delegationMap.has(s));\n        if (existingSubschema != null) {\n            // It is okay we previously explicitly check whether the map has the element.\n            delegationMap.get(existingSubschema).selections.push(fieldNode);\n        }\n        else {\n            delegationMap.set(nonUniqueSubschemas[0], {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                selections: [fieldNode],\n            });\n        }\n    }\n    return {\n        delegationMap,\n        proxiableSubschemas,\n        nonProxiableSubschemas,\n        unproxiableFieldNodes,\n    };\n}\nfunction getStitchingInfo(schema) {\n    var _a;\n    const stitchingInfo = (_a = schema.extensions) === null || _a === void 0 ? void 0 : _a['stitchingInfo'];\n    if (!stitchingInfo) {\n        throw new Error(`Schema is not a stitched schema.`);\n    }\n    return stitchingInfo;\n}\nfunction createDelegationPlanBuilder(mergedTypeInfo) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize5)(function delegationPlanBuilder(schema, sourceSubschema, variableValues, fragments, fieldNodes) {\n        var _a;\n        const stitchingInfo = getStitchingInfo(schema);\n        const targetSubschemas = mergedTypeInfo === null || mergedTypeInfo === void 0 ? void 0 : mergedTypeInfo.targetSubschemas.get(sourceSubschema);\n        if (!targetSubschemas || !targetSubschemas.length) {\n            return [];\n        }\n        const typeName = mergedTypeInfo.typeName;\n        const fieldsNotInSubschema = (0,_getFieldsNotInSubschema_js__WEBPACK_IMPORTED_MODULE_2__.getFieldsNotInSubschema)(schema, stitchingInfo, schema.getType(typeName), (_a = mergedTypeInfo.typeMaps.get(sourceSubschema)) === null || _a === void 0 ? void 0 : _a[typeName], fieldNodes, fragments, variableValues);\n        if (!fieldsNotInSubschema.length) {\n            return [];\n        }\n        const delegationMaps = [];\n        let sourceSubschemas = createSubschemas(sourceSubschema);\n        let delegationStage = calculateDelegationStage(mergedTypeInfo, sourceSubschemas, targetSubschemas, fieldsNotInSubschema);\n        let { delegationMap } = delegationStage;\n        while (delegationMap.size) {\n            delegationMaps.push(delegationMap);\n            const { proxiableSubschemas, nonProxiableSubschemas, unproxiableFieldNodes } = delegationStage;\n            sourceSubschemas = combineSubschemas(sourceSubschemas, proxiableSubschemas);\n            delegationStage = calculateDelegationStage(mergedTypeInfo, sourceSubschemas, nonProxiableSubschemas, unproxiableFieldNodes);\n            delegationMap = delegationStage.delegationMap;\n        }\n        return delegationMaps;\n    });\n}\nconst createSubschemas = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function createSubschemas(sourceSubschema) {\n    return [sourceSubschema];\n});\nconst combineSubschemas = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize2)(function combineSubschemas(sourceSubschemas, additionalSubschemas) {\n    return sourceSubschemas.concat(additionalSubschemas);\n});\nconst subschemaTypesContainSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize3)(function subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubchemas, selectionSet) {\n    return typesContainSelectionSet(sourceSubchemas.map(sourceSubschema => sourceSubschema.transformedSchema.getType(mergedTypeInfo.typeName)), selectionSet);\n});\nfunction typesContainSelectionSet(types, selectionSet) {\n    var _a;\n    const fieldMaps = types.map(type => type.getFields());\n    for (const selection of selectionSet.selections) {\n        if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD) {\n            const fields = fieldMaps.map(fieldMap => fieldMap[selection.name.value]).filter(field => field != null);\n            if (!fields.length) {\n                return false;\n            }\n            if (selection.selectionSet != null) {\n                return typesContainSelectionSet(fields.map(field => (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(field.type)), selection.selectionSet);\n            }\n        }\n        else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT && ((_a = selection.typeCondition) === null || _a === void 0 ? void 0 : _a.name.value) === types[0].name) {\n            return typesContainSelectionSet(types, selection.selectionSet);\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js":
/*!*************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMergedTypeResolver: () => (/* binding */ createMergedTypeResolver)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_batch_delegate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/batch-delegate */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js\");\n\n\n\nfunction createMergedTypeResolver(mergedTypeResolverOptions) {\n    const { fieldName, argsFromKeys, valuesFromResults, args } = mergedTypeResolverOptions;\n    if (argsFromKeys != null) {\n        return function mergedBatchedTypeResolver(_originalResult, context, info, subschema, selectionSet, key, type = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(info.returnType)) {\n            return (0,_graphql_tools_batch_delegate__WEBPACK_IMPORTED_MODULE_1__.batchDelegateToSchema)({\n                schema: subschema,\n                operation: 'query',\n                fieldName,\n                returnType: new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(type),\n                key,\n                argsFromKeys,\n                valuesFromResults,\n                selectionSet,\n                context,\n                info,\n                skipTypeMerging: true,\n            });\n        };\n    }\n    if (args != null) {\n        return function mergedTypeResolver(originalResult, context, info, subschema, selectionSet, _key, type = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(info.returnType)) {\n            return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.delegateToSchema)({\n                schema: subschema,\n                operation: 'query',\n                fieldName,\n                returnType: type,\n                args: args(originalResult),\n                selectionSet,\n                context,\n                info,\n                skipTypeMerging: true,\n            });\n        };\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9jcmVhdGVNZXJnZWRUeXBlUmVzb2x2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNPO0FBQ1c7QUFDL0Q7QUFDUCxZQUFZLG1EQUFtRDtBQUMvRDtBQUNBLHVIQUF1SCxxREFBWTtBQUNuSSxtQkFBbUIsb0ZBQXFCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxnREFBVztBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxnSEFBZ0gscURBQVk7QUFDNUgsbUJBQW1CLHlFQUFnQjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vY3JlYXRlTWVyZ2VkVHlwZVJlc29sdmVyLmpzPzA2MDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFtZWRUeXBlLCBHcmFwaFFMTGlzdCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZGVsZWdhdGVUb1NjaGVtYSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlJztcbmltcG9ydCB7IGJhdGNoRGVsZWdhdGVUb1NjaGVtYSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNZXJnZWRUeXBlUmVzb2x2ZXIobWVyZ2VkVHlwZVJlc29sdmVyT3B0aW9ucykge1xuICAgIGNvbnN0IHsgZmllbGROYW1lLCBhcmdzRnJvbUtleXMsIHZhbHVlc0Zyb21SZXN1bHRzLCBhcmdzIH0gPSBtZXJnZWRUeXBlUmVzb2x2ZXJPcHRpb25zO1xuICAgIGlmIChhcmdzRnJvbUtleXMgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VkQmF0Y2hlZFR5cGVSZXNvbHZlcihfb3JpZ2luYWxSZXN1bHQsIGNvbnRleHQsIGluZm8sIHN1YnNjaGVtYSwgc2VsZWN0aW9uU2V0LCBrZXksIHR5cGUgPSBnZXROYW1lZFR5cGUoaW5mby5yZXR1cm5UeXBlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGJhdGNoRGVsZWdhdGVUb1NjaGVtYSh7XG4gICAgICAgICAgICAgICAgc2NoZW1hOiBzdWJzY2hlbWEsXG4gICAgICAgICAgICAgICAgb3BlcmF0aW9uOiAncXVlcnknLFxuICAgICAgICAgICAgICAgIGZpZWxkTmFtZSxcbiAgICAgICAgICAgICAgICByZXR1cm5UeXBlOiBuZXcgR3JhcGhRTExpc3QodHlwZSksXG4gICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgIGFyZ3NGcm9tS2V5cyxcbiAgICAgICAgICAgICAgICB2YWx1ZXNGcm9tUmVzdWx0cyxcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb25TZXQsXG4gICAgICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgICAgICBpbmZvLFxuICAgICAgICAgICAgICAgIHNraXBUeXBlTWVyZ2luZzogdHJ1ZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoYXJncyAhPSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmdW5jdGlvbiBtZXJnZWRUeXBlUmVzb2x2ZXIob3JpZ2luYWxSZXN1bHQsIGNvbnRleHQsIGluZm8sIHN1YnNjaGVtYSwgc2VsZWN0aW9uU2V0LCBfa2V5LCB0eXBlID0gZ2V0TmFtZWRUeXBlKGluZm8ucmV0dXJuVHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBkZWxlZ2F0ZVRvU2NoZW1hKHtcbiAgICAgICAgICAgICAgICBzY2hlbWE6IHN1YnNjaGVtYSxcbiAgICAgICAgICAgICAgICBvcGVyYXRpb246ICdxdWVyeScsXG4gICAgICAgICAgICAgICAgZmllbGROYW1lLFxuICAgICAgICAgICAgICAgIHJldHVyblR5cGU6IHR5cGUsXG4gICAgICAgICAgICAgICAgYXJnczogYXJncyhvcmlnaW5hbFJlc3VsdCksXG4gICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0LFxuICAgICAgICAgICAgICAgIGNvbnRleHQsXG4gICAgICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgICAgICAgICBza2lwVHlwZU1lcmdpbmc6IHRydWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/definitions.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/definitions.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractDefinitions: () => (/* binding */ extractDefinitions)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction extractDefinitions(ast) {\n    const typeDefinitions = [];\n    const directiveDefs = [];\n    const schemaDefs = [];\n    const schemaExtensions = [];\n    const extensionDefs = [];\n    for (const def of ast.definitions) {\n        switch (def.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_DEFINITION:\n                typeDefinitions.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DIRECTIVE_DEFINITION:\n                directiveDefs.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION:\n                schemaDefs.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_EXTENSION:\n                schemaExtensions.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_EXTENSION:\n                extensionDefs.push(def);\n                break;\n        }\n    }\n    return {\n        typeDefinitions,\n        directiveDefs,\n        schemaDefs,\n        schemaExtensions,\n        extensionDefs,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9kZWZpbml0aW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFnQztBQUN6QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHlDQUFJO0FBQ3JCLGlCQUFpQix5Q0FBSTtBQUNyQixpQkFBaUIseUNBQUk7QUFDckIsaUJBQWlCLHlDQUFJO0FBQ3JCLGlCQUFpQix5Q0FBSTtBQUNyQixpQkFBaUIseUNBQUk7QUFDckI7QUFDQTtBQUNBLGlCQUFpQix5Q0FBSTtBQUNyQjtBQUNBO0FBQ0EsaUJBQWlCLHlDQUFJO0FBQ3JCO0FBQ0E7QUFDQSxpQkFBaUIseUNBQUk7QUFDckI7QUFDQTtBQUNBLGlCQUFpQix5Q0FBSTtBQUNyQixpQkFBaUIseUNBQUk7QUFDckIsaUJBQWlCLHlDQUFJO0FBQ3JCLGlCQUFpQix5Q0FBSTtBQUNyQixpQkFBaUIseUNBQUk7QUFDckIsaUJBQWlCLHlDQUFJO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9kZWZpbml0aW9ucy5qcz8zNmJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdERlZmluaXRpb25zKGFzdCkge1xuICAgIGNvbnN0IHR5cGVEZWZpbml0aW9ucyA9IFtdO1xuICAgIGNvbnN0IGRpcmVjdGl2ZURlZnMgPSBbXTtcbiAgICBjb25zdCBzY2hlbWFEZWZzID0gW107XG4gICAgY29uc3Qgc2NoZW1hRXh0ZW5zaW9ucyA9IFtdO1xuICAgIGNvbnN0IGV4dGVuc2lvbkRlZnMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGRlZiBvZiBhc3QuZGVmaW5pdGlvbnMpIHtcbiAgICAgICAgc3dpdGNoIChkZWYua2luZCkge1xuICAgICAgICAgICAgY2FzZSBLaW5kLk9CSkVDVF9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICBjYXNlIEtpbmQuSU5URVJGQUNFX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgIGNhc2UgS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLlVOSU9OX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgIGNhc2UgS2luZC5FTlVNX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgIGNhc2UgS2luZC5TQ0FMQVJfVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgIHR5cGVEZWZpbml0aW9ucy5wdXNoKGRlZik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEtpbmQuRElSRUNUSVZFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgZGlyZWN0aXZlRGVmcy5wdXNoKGRlZik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEtpbmQuU0NIRU1BX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgc2NoZW1hRGVmcy5wdXNoKGRlZik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEtpbmQuU0NIRU1BX0VYVEVOU0lPTjpcbiAgICAgICAgICAgICAgICBzY2hlbWFFeHRlbnNpb25zLnB1c2goZGVmKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2luZC5PQkpFQ1RfVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICBjYXNlIEtpbmQuSU5URVJGQUNFX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLklOUFVUX09CSkVDVF9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgIGNhc2UgS2luZC5VTklPTl9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgIGNhc2UgS2luZC5FTlVNX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLlNDQUxBUl9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgICAgICBleHRlbnNpb25EZWZzLnB1c2goZGVmKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlRGVmaW5pdGlvbnMsXG4gICAgICAgIGRpcmVjdGl2ZURlZnMsXG4gICAgICAgIHNjaGVtYURlZnMsXG4gICAgICAgIHNjaGVtYUV4dGVuc2lvbnMsXG4gICAgICAgIGV4dGVuc2lvbkRlZnMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/definitions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFieldsNotInSubschema: () => (/* binding */ getFieldsNotInSubschema)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\");\n\nfunction getFieldsNotInSubschema(schema, stitchingInfo, gatewayType, subschemaType, fieldNodes, fragments, variableValues) {\n    var _a;\n    const { fields: subFieldNodesByResponseKey } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.collectSubFields)(schema, fragments, variableValues, gatewayType, fieldNodes);\n    // TODO: Verify whether it is safe that extensions always exists.\n    const fieldNodesByField = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.fieldNodesByField;\n    const fields = subschemaType.getFields();\n    const fieldsNotInSchema = new Set();\n    for (const [, subFieldNodes] of subFieldNodesByResponseKey) {\n        const fieldName = subFieldNodes[0].name.value;\n        if (!fields[fieldName]) {\n            for (const subFieldNode of subFieldNodes) {\n                fieldsNotInSchema.add(subFieldNode);\n            }\n        }\n        const fieldNodesForField = (_a = fieldNodesByField === null || fieldNodesByField === void 0 ? void 0 : fieldNodesByField[gatewayType.name]) === null || _a === void 0 ? void 0 : _a[fieldName];\n        if (fieldNodesForField) {\n            for (const fieldNode of fieldNodesForField) {\n                if (!fields[fieldNode.name.value]) {\n                    fieldsNotInSchema.add(fieldNode);\n                }\n            }\n        }\n    }\n    return Array.from(fieldsNotInSchema);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9nZXRGaWVsZHNOb3RJblN1YnNjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3RDtBQUNqRDtBQUNQO0FBQ0EsWUFBWSxxQ0FBcUMsRUFBRSxzRUFBZ0I7QUFDbkU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vZ2V0RmllbGRzTm90SW5TdWJzY2hlbWEuanM/NWY1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2xsZWN0U3ViRmllbGRzIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEZpZWxkc05vdEluU3Vic2NoZW1hKHNjaGVtYSwgc3RpdGNoaW5nSW5mbywgZ2F0ZXdheVR5cGUsIHN1YnNjaGVtYVR5cGUsIGZpZWxkTm9kZXMsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgeyBmaWVsZHM6IHN1YkZpZWxkTm9kZXNCeVJlc3BvbnNlS2V5IH0gPSBjb2xsZWN0U3ViRmllbGRzKHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgZ2F0ZXdheVR5cGUsIGZpZWxkTm9kZXMpO1xuICAgIC8vIFRPRE86IFZlcmlmeSB3aGV0aGVyIGl0IGlzIHNhZmUgdGhhdCBleHRlbnNpb25zIGFsd2F5cyBleGlzdHMuXG4gICAgY29uc3QgZmllbGROb2Rlc0J5RmllbGQgPSBzdGl0Y2hpbmdJbmZvID09PSBudWxsIHx8IHN0aXRjaGluZ0luZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHN0aXRjaGluZ0luZm8uZmllbGROb2Rlc0J5RmllbGQ7XG4gICAgY29uc3QgZmllbGRzID0gc3Vic2NoZW1hVHlwZS5nZXRGaWVsZHMoKTtcbiAgICBjb25zdCBmaWVsZHNOb3RJblNjaGVtYSA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGNvbnN0IFssIHN1YkZpZWxkTm9kZXNdIG9mIHN1YkZpZWxkTm9kZXNCeVJlc3BvbnNlS2V5KSB7XG4gICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IHN1YkZpZWxkTm9kZXNbMF0ubmFtZS52YWx1ZTtcbiAgICAgICAgaWYgKCFmaWVsZHNbZmllbGROYW1lXSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBzdWJGaWVsZE5vZGUgb2Ygc3ViRmllbGROb2Rlcykge1xuICAgICAgICAgICAgICAgIGZpZWxkc05vdEluU2NoZW1hLmFkZChzdWJGaWVsZE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZpZWxkTm9kZXNGb3JGaWVsZCA9IChfYSA9IGZpZWxkTm9kZXNCeUZpZWxkID09PSBudWxsIHx8IGZpZWxkTm9kZXNCeUZpZWxkID09PSB2b2lkIDAgPyB2b2lkIDAgOiBmaWVsZE5vZGVzQnlGaWVsZFtnYXRld2F5VHlwZS5uYW1lXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2ZpZWxkTmFtZV07XG4gICAgICAgIGlmIChmaWVsZE5vZGVzRm9yRmllbGQpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROb2RlIG9mIGZpZWxkTm9kZXNGb3JGaWVsZCkge1xuICAgICAgICAgICAgICAgIGlmICghZmllbGRzW2ZpZWxkTm9kZS5uYW1lLnZhbHVlXSkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZHNOb3RJblNjaGVtYS5hZGQoZmllbGROb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIEFycmF5LmZyb20oZmllbGRzTm90SW5TY2hlbWEpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeCandidates.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeCandidates.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeCandidates: () => (/* binding */ mergeCandidates)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js\");\n/* harmony import */ var _mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mergeValidations.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeValidations.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n\n\n\n\nfunction mergeCandidates(typeName, candidates, typeMergingOptions) {\n    const initialCandidateType = candidates[0].type;\n    if (candidates.some(candidate => candidate.type.constructor !== initialCandidateType.constructor)) {\n        throw new Error(`Cannot merge different type categories into common type ${typeName}.`);\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(initialCandidateType)) {\n        return mergeObjectTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(initialCandidateType)) {\n        return mergeInputObjectTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(initialCandidateType)) {\n        return mergeInterfaceTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(initialCandidateType)) {\n        return mergeUnionTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(initialCandidateType)) {\n        return mergeEnumTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(initialCandidateType)) {\n        return mergeScalarTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else {\n        // not reachable.\n        throw new Error(`Type ${typeName} has unknown GraphQL type.`);\n    }\n}\nfunction mergeObjectTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const fields = fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const typeConfigs = candidates.map(candidate => candidate.type.toConfig());\n    const interfaceMap = typeConfigs\n        .map(typeConfig => typeConfig.interfaces)\n        .reduce((acc, interfaces) => {\n        if (interfaces != null) {\n            for (const iface of interfaces) {\n                acc[iface.name] = iface;\n            }\n        }\n        return acc;\n    }, Object.create(null));\n    const interfaces = Object.values(interfaceMap);\n    const astNodes = pluck('astNode', candidates);\n    const fieldAstNodes = canonicalFieldNamesForType(candidates)\n        .map(fieldName => { var _a; return (_a = fields[fieldName]) === null || _a === void 0 ? void 0 : _a.astNode; })\n        .filter(n => n != null);\n    if (astNodes.length > 1 && fieldAstNodes.length) {\n        astNodes.push({\n            ...astNodes[astNodes.length - 1],\n            fields: JSON.parse(JSON.stringify(fieldAstNodes)),\n        });\n    }\n    const astNode = astNodes\n        .slice(1)\n        .reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_1__.mergeType)(astNode, acc, { ignoreFieldConflicts: true }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        fields,\n        interfaces,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType(typeConfig);\n}\nfunction mergeInputObjectTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const fields = inputFieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const astNodes = pluck('astNode', candidates);\n    const fieldAstNodes = canonicalFieldNamesForType(candidates)\n        .map(fieldName => { var _a; return (_a = fields[fieldName]) === null || _a === void 0 ? void 0 : _a.astNode; })\n        .filter(n => n != null);\n    if (astNodes.length > 1 && fieldAstNodes.length) {\n        astNodes.push({\n            ...astNodes[astNodes.length - 1],\n            fields: JSON.parse(JSON.stringify(fieldAstNodes)),\n        });\n    }\n    const astNode = astNodes.slice(1).reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_2__.mergeInputType)(astNode, acc, {\n        ignoreFieldConflicts: true,\n    }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        fields,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType(typeConfig);\n}\nfunction pluck(typeProperty, candidates) {\n    return candidates.map(candidate => candidate.type[typeProperty]).filter(value => value != null);\n}\nfunction mergeInterfaceTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const fields = fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const typeConfigs = candidates.map(candidate => candidate.type.toConfig());\n    const interfaceMap = typeConfigs\n        .map(typeConfig => ('interfaces' in typeConfig ? typeConfig.interfaces : []))\n        .reduce((acc, interfaces) => {\n        if (interfaces != null) {\n            for (const iface of interfaces) {\n                acc[iface.name] = iface;\n            }\n        }\n        return acc;\n    }, Object.create(null));\n    const interfaces = Object.values(interfaceMap);\n    const astNodes = pluck('astNode', candidates);\n    const fieldAstNodes = canonicalFieldNamesForType(candidates)\n        .map(fieldName => { var _a; return (_a = fields[fieldName]) === null || _a === void 0 ? void 0 : _a.astNode; })\n        .filter(n => n != null);\n    if (astNodes.length > 1 && fieldAstNodes.length) {\n        astNodes.push({\n            ...astNodes[astNodes.length - 1],\n            fields: JSON.parse(JSON.stringify(fieldAstNodes)),\n        });\n    }\n    const astNode = astNodes.slice(1).reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_3__.mergeInterface)(astNode, acc, {\n        ignoreFieldConflicts: true,\n    }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        fields,\n        interfaces,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType(typeConfig);\n}\nfunction mergeUnionTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const typeConfigs = candidates.map(candidate => {\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(candidate.type)) {\n            throw new Error(`Expected ${candidate.type} to be a union type!`);\n        }\n        return candidate.type.toConfig();\n    });\n    const typeMap = typeConfigs.reduce((acc, typeConfig) => {\n        for (const type of typeConfig.types) {\n            acc[type.name] = type;\n        }\n        return acc;\n    }, Object.create(null));\n    const types = Object.values(typeMap);\n    const astNodes = pluck('astNode', candidates);\n    const astNode = astNodes\n        .slice(1)\n        .reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__.mergeUnion)(astNode, acc), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        types,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType(typeConfig);\n}\nfunction mergeEnumTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const values = enumValueConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const astNodes = pluck('astNode', candidates);\n    const astNode = astNodes\n        .slice(1)\n        .reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__.mergeEnum)(astNode, acc, { consistentEnumMerge: true }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        values,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType(typeConfig);\n}\nfunction enumValueConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    var _a;\n    const enumValueConfigCandidatesMap = Object.create(null);\n    for (const candidate of candidates) {\n        const valueMap = candidate.type.toConfig().values;\n        for (const enumValue in valueMap) {\n            const enumValueConfigCandidate = {\n                enumValueConfig: valueMap[enumValue],\n                enumValue,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (enumValue in enumValueConfigCandidatesMap) {\n                enumValueConfigCandidatesMap[enumValue].push(enumValueConfigCandidate);\n            }\n            else {\n                enumValueConfigCandidatesMap[enumValue] = [enumValueConfigCandidate];\n            }\n        }\n    }\n    const enumValueConfigMap = Object.create(null);\n    for (const enumValue in enumValueConfigCandidatesMap) {\n        const enumValueConfigMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.enumValueConfigMerger) !== null && _a !== void 0 ? _a : defaultEnumValueConfigMerger;\n        enumValueConfigMap[enumValue] = enumValueConfigMerger(enumValueConfigCandidatesMap[enumValue]);\n    }\n    return enumValueConfigMap;\n}\nfunction defaultEnumValueConfigMerger(candidates) {\n    const preferred = candidates.find(({ type, transformedSubschema }) => { var _a, _b; return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema) && ((_b = (_a = transformedSubschema.merge) === null || _a === void 0 ? void 0 : _a[type.name]) === null || _b === void 0 ? void 0 : _b.canonical); });\n    return (preferred || candidates[candidates.length - 1]).enumValueConfig;\n}\nfunction mergeScalarTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const serializeFns = pluck('serialize', candidates);\n    const serialize = serializeFns[serializeFns.length - 1];\n    const parseValueFns = pluck('parseValue', candidates);\n    const parseValue = parseValueFns[parseValueFns.length - 1];\n    const parseLiteralFns = pluck('parseLiteral', candidates);\n    const parseLiteral = parseLiteralFns[parseLiteralFns.length - 1];\n    const astNodes = pluck('astNode', candidates);\n    const astNode = astNodes\n        .slice(1)\n        .reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_7__.mergeScalar)(astNode, acc), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        serialize,\n        parseValue,\n        parseLiteral,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType(typeConfig);\n}\nfunction orderedTypeCandidates(candidates, typeMergingOptions) {\n    var _a;\n    const typeCandidateMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.typeCandidateMerger) !== null && _a !== void 0 ? _a : defaultTypeCandidateMerger;\n    const candidate = typeCandidateMerger(candidates);\n    return candidates.filter(c => c !== candidate).concat([candidate]);\n}\nfunction defaultTypeCandidateMerger(candidates) {\n    const canonical = candidates.filter(({ type, transformedSubschema }) => { var _a, _b; return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema) ? (_b = (_a = transformedSubschema.merge) === null || _a === void 0 ? void 0 : _a[type.name]) === null || _b === void 0 ? void 0 : _b.canonical : false; });\n    if (canonical.length > 1) {\n        throw new Error(`Multiple canonical definitions for \"${canonical[0].type.name}\"`);\n    }\n    else if (canonical.length) {\n        return canonical[0];\n    }\n    return candidates[candidates.length - 1];\n}\nfunction mergeTypeDescriptions(candidates, typeMergingOptions) {\n    var _a;\n    const typeDescriptionsMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.typeDescriptionsMerger) !== null && _a !== void 0 ? _a : defaultTypeDescriptionMerger;\n    return typeDescriptionsMerger(candidates);\n}\nfunction defaultTypeDescriptionMerger(candidates) {\n    return candidates[candidates.length - 1].type.description;\n}\nfunction fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    const fieldConfigCandidatesMap = Object.create(null);\n    for (const candidate of candidates) {\n        const typeConfig = candidate.type.toConfig();\n        const fieldConfigMap = typeConfig.fields;\n        for (const fieldName in fieldConfigMap) {\n            const fieldConfig = fieldConfigMap[fieldName];\n            const fieldConfigCandidate = {\n                fieldConfig,\n                fieldName,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (fieldName in fieldConfigCandidatesMap) {\n                fieldConfigCandidatesMap[fieldName].push(fieldConfigCandidate);\n            }\n            else {\n                fieldConfigCandidatesMap[fieldName] = [fieldConfigCandidate];\n            }\n        }\n    }\n    const fieldConfigMap = Object.create(null);\n    for (const fieldName in fieldConfigCandidatesMap) {\n        fieldConfigMap[fieldName] = mergeFieldConfigs(fieldConfigCandidatesMap[fieldName], typeMergingOptions);\n    }\n    return fieldConfigMap;\n}\nfunction mergeFieldConfigs(candidates, typeMergingOptions) {\n    var _a;\n    const fieldConfigMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.fieldConfigMerger) !== null && _a !== void 0 ? _a : defaultFieldConfigMerger;\n    const finalFieldConfig = fieldConfigMerger(candidates);\n    (0,_mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__.validateFieldConsistency)(finalFieldConfig, candidates, typeMergingOptions);\n    return finalFieldConfig;\n}\nfunction defaultFieldConfigMerger(candidates) {\n    var _a, _b, _c, _d, _e, _f;\n    const canonicalByField = [];\n    const canonicalByType = [];\n    for (const { type, fieldName, fieldConfig, transformedSubschema } of candidates) {\n        if (!(0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema))\n            continue;\n        if ((_d = (_c = (_b = (_a = transformedSubschema.merge) === null || _a === void 0 ? void 0 : _a[type.name]) === null || _b === void 0 ? void 0 : _b.fields) === null || _c === void 0 ? void 0 : _c[fieldName]) === null || _d === void 0 ? void 0 : _d.canonical) {\n            canonicalByField.push(fieldConfig);\n        }\n        else if ((_f = (_e = transformedSubschema.merge) === null || _e === void 0 ? void 0 : _e[type.name]) === null || _f === void 0 ? void 0 : _f.canonical) {\n            canonicalByType.push(fieldConfig);\n        }\n    }\n    if (canonicalByField.length > 1) {\n        throw new Error(`Multiple canonical definitions for \"${candidates[0].type.name}.${candidates[0].fieldName}\"`);\n    }\n    else if (canonicalByField.length) {\n        return canonicalByField[0];\n    }\n    else if (canonicalByType.length) {\n        return canonicalByType[0];\n    }\n    return candidates[candidates.length - 1].fieldConfig;\n}\nfunction inputFieldConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    var _a;\n    const inputFieldConfigCandidatesMap = Object.create(null);\n    const fieldInclusionMap = Object.create(null);\n    for (const candidate of candidates) {\n        const typeConfig = candidate.type.toConfig();\n        const inputFieldConfigMap = typeConfig.fields;\n        for (const fieldName in inputFieldConfigMap) {\n            const inputFieldConfig = inputFieldConfigMap[fieldName];\n            fieldInclusionMap[fieldName] = fieldInclusionMap[fieldName] || 0;\n            fieldInclusionMap[fieldName] += 1;\n            const inputFieldConfigCandidate = {\n                inputFieldConfig,\n                fieldName,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (fieldName in inputFieldConfigCandidatesMap) {\n                inputFieldConfigCandidatesMap[fieldName].push(inputFieldConfigCandidate);\n            }\n            else {\n                inputFieldConfigCandidatesMap[fieldName] = [inputFieldConfigCandidate];\n            }\n        }\n    }\n    (0,_mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__.validateInputObjectConsistency)(fieldInclusionMap, candidates, typeMergingOptions);\n    const inputFieldConfigMap = Object.create(null);\n    for (const fieldName in inputFieldConfigCandidatesMap) {\n        const inputFieldConfigMerger = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.inputFieldConfigMerger) !== null && _a !== void 0 ? _a : defaultInputFieldConfigMerger;\n        inputFieldConfigMap[fieldName] = inputFieldConfigMerger(inputFieldConfigCandidatesMap[fieldName]);\n        (0,_mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__.validateInputFieldConsistency)(inputFieldConfigMap[fieldName], inputFieldConfigCandidatesMap[fieldName], typeMergingOptions);\n    }\n    return inputFieldConfigMap;\n}\nfunction defaultInputFieldConfigMerger(candidates) {\n    var _a, _b, _c, _d, _e, _f;\n    const canonicalByField = [];\n    const canonicalByType = [];\n    for (const { type, fieldName, inputFieldConfig, transformedSubschema } of candidates) {\n        if (!(0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema))\n            continue;\n        if ((_d = (_c = (_b = (_a = transformedSubschema.merge) === null || _a === void 0 ? void 0 : _a[type.name]) === null || _b === void 0 ? void 0 : _b.fields) === null || _c === void 0 ? void 0 : _c[fieldName]) === null || _d === void 0 ? void 0 : _d.canonical) {\n            canonicalByField.push(inputFieldConfig);\n        }\n        else if ((_f = (_e = transformedSubschema.merge) === null || _e === void 0 ? void 0 : _e[type.name]) === null || _f === void 0 ? void 0 : _f.canonical) {\n            canonicalByType.push(inputFieldConfig);\n        }\n    }\n    if (canonicalByField.length > 1) {\n        throw new Error(`Multiple canonical definitions for \"${candidates[0].type.name}.${candidates[0].fieldName}\"`);\n    }\n    else if (canonicalByField.length) {\n        return canonicalByField[0];\n    }\n    else if (canonicalByType.length) {\n        return canonicalByType[0];\n    }\n    return candidates[candidates.length - 1].inputFieldConfig;\n}\nfunction canonicalFieldNamesForType(candidates) {\n    var _a;\n    const canonicalFieldNames = Object.create(null);\n    for (const { type, transformedSubschema } of candidates) {\n        if (!(0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema))\n            continue;\n        const mergeConfig = (_a = transformedSubschema.merge) === null || _a === void 0 ? void 0 : _a[type.name];\n        if (mergeConfig != null && mergeConfig.fields != null && !mergeConfig.canonical) {\n            for (const fieldName in mergeConfig.fields) {\n                const mergedFieldConfig = mergeConfig.fields[fieldName];\n                if (mergedFieldConfig.canonical) {\n                    canonicalFieldNames[fieldName] = true;\n                }\n            }\n        }\n    }\n    return Object.keys(canonicalFieldNames);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeCandidates.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeValidations.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeValidations.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateFieldConsistency: () => (/* binding */ validateFieldConsistency),\n/* harmony export */   validateInputEnumConsistency: () => (/* binding */ validateInputEnumConsistency),\n/* harmony export */   validateInputFieldConsistency: () => (/* binding */ validateInputFieldConsistency),\n/* harmony export */   validateInputObjectConsistency: () => (/* binding */ validateInputObjectConsistency),\n/* harmony export */   validateTypeConsistency: () => (/* binding */ validateTypeConsistency)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/types.js\");\n\n\nfunction validateFieldConsistency(finalFieldConfig, candidates, typeMergingOptions) {\n    const fieldNamespace = `${candidates[0].type.name}.${candidates[0].fieldName}`;\n    const finalFieldNull = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(finalFieldConfig.type);\n    validateTypeConsistency(finalFieldConfig, candidates.map(c => c.fieldConfig), 'field', fieldNamespace, typeMergingOptions);\n    if (getValidationSettings(fieldNamespace, typeMergingOptions).strictNullComparison &&\n        candidates.some(c => finalFieldNull !== (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.fieldConfig.type))) {\n        validationMessage(`Nullability of field \"${fieldNamespace}\" does not match across subschemas. Disable typeMergingOptions.validationSettings.strictNullComparison to permit safe divergences.`, fieldNamespace, typeMergingOptions);\n    }\n    else if (finalFieldNull && candidates.some(c => !(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.fieldConfig.type))) {\n        validationMessage(`Canonical definition of field \"${fieldNamespace}\" is not-null while some subschemas permit null. This will be an automatic error in future versions.`, fieldNamespace, typeMergingOptions);\n    }\n    const argCandidatesMap = Object.create(null);\n    for (const { fieldConfig } of candidates) {\n        if (fieldConfig.args == null) {\n            continue;\n        }\n        for (const argName in fieldConfig.args) {\n            const arg = fieldConfig.args[argName];\n            argCandidatesMap[argName] = argCandidatesMap[argName] || [];\n            argCandidatesMap[argName].push(arg);\n        }\n    }\n    if (Object.values(argCandidatesMap).some(argCandidates => candidates.length !== argCandidates.length)) {\n        validationMessage(`Canonical definition of field \"${fieldNamespace}\" implements inconsistent argument names across subschemas. Input may be filtered from some requests.`, fieldNamespace, typeMergingOptions);\n    }\n    for (const argName in argCandidatesMap) {\n        if (finalFieldConfig.args == null) {\n            continue;\n        }\n        const argCandidates = argCandidatesMap[argName];\n        const argNamespace = `${fieldNamespace}.${argName}`;\n        const finalArgConfig = finalFieldConfig.args[argName] || argCandidates[argCandidates.length - 1];\n        const finalArgType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(finalArgConfig.type);\n        const finalArgNull = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(finalArgConfig.type);\n        validateTypeConsistency(finalArgConfig, argCandidates, 'argument', argNamespace, typeMergingOptions);\n        if (getValidationSettings(argNamespace, typeMergingOptions).strictNullComparison &&\n            argCandidates.some(c => finalArgNull !== (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.type))) {\n            validationMessage(`Nullability of argument \"${argNamespace}\" does not match across subschemas. Disable typeMergingOptions.validationSettings.strictNullComparison to permit safe divergences.`, argNamespace, typeMergingOptions);\n        }\n        else if (!finalArgNull && argCandidates.some(c => (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.type))) {\n            validationMessage(`Canonical definition of argument \"${argNamespace}\" permits null while some subschemas require not-null. This will be an automatic error in future versions.`, argNamespace, typeMergingOptions);\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(finalArgType)) {\n            validateInputEnumConsistency(finalArgType, argCandidates, typeMergingOptions);\n        }\n    }\n}\nfunction validateInputObjectConsistency(fieldInclusionMap, candidates, typeMergingOptions) {\n    for (const fieldName in fieldInclusionMap) {\n        const count = fieldInclusionMap[fieldName];\n        if (candidates.length !== count) {\n            const namespace = `${candidates[0].type.name}.${fieldName}`;\n            validationMessage(`Definition of input field \"${namespace}\" is not implemented by all subschemas. Input may be filtered from some requests.`, namespace, typeMergingOptions);\n        }\n    }\n}\nfunction validateInputFieldConsistency(finalInputFieldConfig, candidates, typeMergingOptions) {\n    const inputFieldNamespace = `${candidates[0].type.name}.${candidates[0].fieldName}`;\n    const inputFieldConfigs = candidates.map(c => c.inputFieldConfig);\n    const finalInputFieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(finalInputFieldConfig.type);\n    const finalInputFieldNull = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(finalInputFieldConfig.type);\n    validateTypeConsistency(finalInputFieldConfig, inputFieldConfigs, 'input field', inputFieldNamespace, typeMergingOptions);\n    if (getValidationSettings(inputFieldNamespace, typeMergingOptions).strictNullComparison &&\n        candidates.some(c => finalInputFieldNull !== (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.inputFieldConfig.type))) {\n        validationMessage(`Nullability of input field \"${inputFieldNamespace}\" does not match across subschemas. Disable typeMergingOptions.validationSettings.strictNullComparison to permit safe divergences.`, inputFieldNamespace, typeMergingOptions);\n    }\n    else if (!finalInputFieldNull && candidates.some(c => (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.inputFieldConfig.type))) {\n        validationMessage(`Canonical definition of input field \"${inputFieldNamespace}\" permits null while some subschemas require not-null. This will be an automatic error in future versions.`, inputFieldNamespace, typeMergingOptions);\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(finalInputFieldType)) {\n        validateInputEnumConsistency(finalInputFieldType, inputFieldConfigs, typeMergingOptions);\n    }\n}\nfunction validateTypeConsistency(finalElementConfig, candidates, definitionType, settingNamespace, typeMergingOptions) {\n    var _a, _b, _c;\n    const finalNamedType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(finalElementConfig.type);\n    const finalIsScalar = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(finalNamedType);\n    const finalIsList = hasListType(finalElementConfig.type);\n    for (const c of candidates) {\n        if (finalIsList !== hasListType(c.type)) {\n            throw new Error(`Definitions of ${definitionType} \"${settingNamespace}\" implement inconsistent list types across subschemas and cannot be merged.`);\n        }\n        const currentNamedType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(c.type);\n        if (finalNamedType.toString() !== currentNamedType.toString()) {\n            const proxiableScalar = !!((_c = (_b = (_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.validationSettings) === null || _a === void 0 ? void 0 : _a.proxiableScalars) === null || _b === void 0 ? void 0 : _b[finalNamedType.toString()]) === null || _c === void 0 ? void 0 : _c.includes(currentNamedType.toString()));\n            const bothScalars = finalIsScalar && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(currentNamedType);\n            const permitScalar = proxiableScalar && bothScalars;\n            if (proxiableScalar && !bothScalars) {\n                throw new Error(`Types ${finalNamedType} and ${currentNamedType} are not proxiable scalars.`);\n            }\n            if (!permitScalar) {\n                validationMessage(`Definitions of ${definitionType} \"${settingNamespace}\" implement inconsistent named types across subschemas. This will be an automatic error in future versions.`, settingNamespace, typeMergingOptions);\n            }\n        }\n    }\n}\nfunction hasListType(type) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)((0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type));\n}\nfunction validateInputEnumConsistency(inputEnumType, candidates, typeMergingOptions) {\n    const enumValueInclusionMap = Object.create(null);\n    for (const candidate of candidates) {\n        const enumType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(candidate.type);\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(enumType)) {\n            for (const { value } of enumType.getValues()) {\n                enumValueInclusionMap[value] = enumValueInclusionMap[value] || 0;\n                enumValueInclusionMap[value] += 1;\n            }\n        }\n    }\n    if (Object.values(enumValueInclusionMap).some(count => candidates.length !== count)) {\n        validationMessage(`Enum \"${inputEnumType.name}\" is used as an input with inconsistent values across subschemas. This will be an automatic error in future versions.`, inputEnumType.name, typeMergingOptions);\n    }\n}\nfunction validationMessage(message, settingNamespace, typeMergingOptions) {\n    var _a;\n    const override = `typeMergingOptions.validationScopes['${settingNamespace}'].validationLevel`;\n    const settings = getValidationSettings(settingNamespace, typeMergingOptions);\n    switch ((_a = settings.validationLevel) !== null && _a !== void 0 ? _a : _types_js__WEBPACK_IMPORTED_MODULE_1__.ValidationLevel.Warn) {\n        case _types_js__WEBPACK_IMPORTED_MODULE_1__.ValidationLevel.Off:\n            return;\n        case _types_js__WEBPACK_IMPORTED_MODULE_1__.ValidationLevel.Error:\n            throw new Error(`${message} If this is intentional, you may disable this error by setting ${override} = \"warn|off\"`);\n        default:\n            console.warn(`${message} To disable this warning or elevate it to an error, set ${override} = \"error|off\"`);\n    }\n}\nfunction getValidationSettings(settingNamespace, typeMergingOptions) {\n    var _a, _b, _c;\n    return {\n        ...((_a = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.validationSettings) !== null && _a !== void 0 ? _a : {}),\n        ...((_c = (_b = typeMergingOptions === null || typeMergingOptions === void 0 ? void 0 : typeMergingOptions.validationScopes) === null || _b === void 0 ? void 0 : _b[settingNamespace]) !== null && _c !== void 0 ? _c : {}),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeValidations.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchSchemas.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchSchemas.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stitchSchemas: () => (/* binding */ stitchSchemas)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/extendSchema.mjs\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/schema/esm/addResolversToSchema.js\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/schema/esm/assertResolversPresent.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/Subschema.js\");\n/* harmony import */ var _typeCandidates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeCandidates.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeCandidates.js\");\n/* harmony import */ var _stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stitchingInfo.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchingInfo.js\");\n/* harmony import */ var _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./subschemaConfigTransforms/index.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js\");\n/* harmony import */ var _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./subschemaConfigTransforms/index.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/merge-resolvers.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/extensions.js\");\n\n\n\n\n\n\n\nfunction stitchSchemas({ subschemas = [], types = [], typeDefs = [], onTypeConflict, mergeDirectives, mergeTypes = true, typeMergingOptions, subschemaConfigTransforms = [], resolvers = {}, inheritResolversFromInterfaces = false, resolverValidationOptions = {}, updateResolversInPlace = true, schemaExtensions, ...rest }) {\n    const transformedSubschemas = [];\n    const subschemaMap = new Map();\n    const originalSubschemaMap = new Map();\n    for (const subschema of subschemas) {\n        for (const transformedSubschemaConfig of applySubschemaConfigTransforms(subschemaConfigTransforms, subschema, subschemaMap, originalSubschemaMap)) {\n            transformedSubschemas.push(transformedSubschemaConfig);\n        }\n    }\n    const directiveMap = Object.create(null);\n    for (const directive of graphql__WEBPACK_IMPORTED_MODULE_0__.specifiedDirectives) {\n        directiveMap[directive.name] = directive;\n    }\n    const schemaDefs = Object.create(null);\n    const [typeCandidates, rootTypeNameMap, extensions] = (0,_typeCandidates_js__WEBPACK_IMPORTED_MODULE_1__.buildTypeCandidates)({\n        subschemas: transformedSubschemas,\n        originalSubschemaMap,\n        types,\n        typeDefs: typeDefs || [],\n        parseOptions: rest,\n        directiveMap,\n        schemaDefs,\n        mergeDirectives,\n    });\n    let stitchingInfo = (0,_stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__.createStitchingInfo)(subschemaMap, typeCandidates, mergeTypes);\n    const { typeMap: newTypeMap, directives: newDirectives } = (0,_typeCandidates_js__WEBPACK_IMPORTED_MODULE_1__.buildTypes)({\n        typeCandidates,\n        directives: Object.values(directiveMap),\n        stitchingInfo,\n        rootTypeNames: Object.values(rootTypeNameMap),\n        onTypeConflict,\n        mergeTypes,\n        typeMergingOptions,\n    });\n    let schema = new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        query: newTypeMap[rootTypeNameMap.query],\n        mutation: newTypeMap[rootTypeNameMap.mutation],\n        subscription: newTypeMap[rootTypeNameMap.subscription],\n        types: Object.values(newTypeMap),\n        directives: newDirectives,\n        astNode: schemaDefs.schemaDef,\n        extensionASTNodes: schemaDefs.schemaExtensions,\n        extensions: null,\n    });\n    for (const extension of extensions) {\n        schema = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.extendSchema)(schema, extension, {\n            commentDescriptions: true,\n        });\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    const resolverMap = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__.mergeResolvers)(resolvers);\n    const finalResolvers = inheritResolversFromInterfaces\n        ? (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_6__.extendResolversFromInterfaces)(schema, resolverMap)\n        : resolverMap;\n    stitchingInfo = (0,_stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__.completeStitchingInfo)(stitchingInfo, finalResolvers, schema);\n    schema = (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_7__.addResolversToSchema)({\n        schema,\n        defaultFieldResolver: _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_8__.defaultMergedResolver,\n        resolvers: finalResolvers,\n        resolverValidationOptions,\n        inheritResolversFromInterfaces: false,\n        updateResolversInPlace,\n    });\n    const resolverValidationOptionsEntries = Object.entries(resolverValidationOptions);\n    if (resolverValidationOptionsEntries.length > 0 && resolverValidationOptionsEntries.some(([, o]) => o !== 'ignore')) {\n        (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_9__.assertResolversPresent)(schema, resolverValidationOptions);\n    }\n    (0,_stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__.addStitchingInfo)(schema, stitchingInfo);\n    if (schemaExtensions) {\n        if (Array.isArray(schemaExtensions)) {\n            schemaExtensions = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_10__.mergeExtensions)(schemaExtensions);\n        }\n        (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_10__.applyExtensions)(schema, schemaExtensions);\n    }\n    return schema;\n}\nconst subschemaConfigTransformerPresets = [\n    _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_11__.isolateComputedFieldsTransformer,\n    _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_12__.splitMergedTypeEntryPointsTransformer,\n];\nfunction applySubschemaConfigTransforms(subschemaConfigTransforms, subschemaOrSubschemaConfig, subschemaMap, originalSubschemaMap) {\n    let subschemaConfig;\n    if ((0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__.isSubschemaConfig)(subschemaOrSubschemaConfig)) {\n        subschemaConfig = subschemaOrSubschemaConfig;\n    }\n    else if (subschemaOrSubschemaConfig instanceof graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema) {\n        subschemaConfig = { schema: subschemaOrSubschemaConfig };\n    }\n    else {\n        throw new TypeError('Received invalid input.');\n    }\n    const transformedSubschemaConfigs = subschemaConfigTransforms\n        .concat(subschemaConfigTransformerPresets)\n        .reduce((transformedSubschemaConfigs, subschemaConfigTransform) => transformedSubschemaConfigs.flatMap(ssConfig => subschemaConfigTransform(ssConfig)), [subschemaConfig]);\n    const transformedSubschemas = transformedSubschemaConfigs.map(ssConfig => new _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_14__.Subschema(ssConfig));\n    const baseSubschema = transformedSubschemas[0];\n    subschemaMap.set(subschemaOrSubschemaConfig, baseSubschema);\n    for (const subschema of transformedSubschemas) {\n        originalSubschemaMap.set(subschema, subschemaOrSubschemaConfig);\n    }\n    return transformedSubschemas;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchSchemas.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchingInfo.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchingInfo.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addStitchingInfo: () => (/* binding */ addStitchingInfo),\n/* harmony export */   completeStitchingInfo: () => (/* binding */ completeStitchingInfo),\n/* harmony export */   createStitchingInfo: () => (/* binding */ createStitchingInfo),\n/* harmony export */   selectionSetContainsTopLevelField: () => (/* binding */ selectionSetContainsTopLevelField)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/selectionSets.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _createMergedTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createMergedTypeResolver.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js\");\n/* harmony import */ var _createDelegationPlanBuilder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createDelegationPlanBuilder.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\n\n\nfunction createStitchingInfo(subschemaMap, typeCandidates, mergeTypes) {\n    const mergedTypes = createMergedTypes(typeCandidates, mergeTypes);\n    return {\n        subschemaMap,\n        fieldNodesByType: Object.create(null),\n        fieldNodesByField: Object.create(null),\n        dynamicSelectionSetsByField: Object.create(null),\n        mergedTypes,\n    };\n}\nfunction createMergedTypes(typeCandidates, mergeTypes) {\n    var _a, _b;\n    const mergedTypes = Object.create(null);\n    for (const typeName in typeCandidates) {\n        if (typeCandidates[typeName].length > 1 &&\n            ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(typeCandidates[typeName][0].type) || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(typeCandidates[typeName][0].type))) {\n            const typeCandidatesWithMergedTypeConfig = typeCandidates[typeName].filter(typeCandidate => typeCandidate.transformedSubschema != null &&\n                typeCandidate.transformedSubschema.merge != null &&\n                typeName in typeCandidate.transformedSubschema.merge);\n            if (mergeTypes === true ||\n                (typeof mergeTypes === 'function' && mergeTypes(typeCandidates[typeName], typeName)) ||\n                (Array.isArray(mergeTypes) && mergeTypes.includes(typeName)) ||\n                typeCandidatesWithMergedTypeConfig.length) {\n                const targetSubschemas = [];\n                const typeMaps = new Map();\n                const supportedBySubschemas = Object.create({});\n                const selectionSets = new Map();\n                const fieldSelectionSets = new Map();\n                const resolvers = new Map();\n                for (const typeCandidate of typeCandidates[typeName]) {\n                    const subschema = typeCandidate.transformedSubschema;\n                    if (subschema == null) {\n                        continue;\n                    }\n                    typeMaps.set(subschema, subschema.transformedSchema.getTypeMap());\n                    const mergedTypeConfig = (_a = subschema === null || subschema === void 0 ? void 0 : subschema.merge) === null || _a === void 0 ? void 0 : _a[typeName];\n                    if (mergedTypeConfig == null) {\n                        continue;\n                    }\n                    if (mergedTypeConfig.selectionSet) {\n                        const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(mergedTypeConfig.selectionSet, { noLocation: true });\n                        selectionSets.set(subschema, selectionSet);\n                    }\n                    if (mergedTypeConfig.fields) {\n                        const parsedFieldSelectionSets = Object.create(null);\n                        for (const fieldName in mergedTypeConfig.fields) {\n                            if (mergedTypeConfig.fields[fieldName].selectionSet) {\n                                const rawFieldSelectionSet = mergedTypeConfig.fields[fieldName].selectionSet;\n                                parsedFieldSelectionSets[fieldName] = rawFieldSelectionSet\n                                    ? (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(rawFieldSelectionSet, { noLocation: true })\n                                    : undefined;\n                            }\n                        }\n                        fieldSelectionSets.set(subschema, parsedFieldSelectionSets);\n                    }\n                    const resolver = (_b = mergedTypeConfig.resolve) !== null && _b !== void 0 ? _b : (0,_createMergedTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__.createMergedTypeResolver)(mergedTypeConfig);\n                    if (resolver == null) {\n                        continue;\n                    }\n                    const keyFn = mergedTypeConfig.key;\n                    resolvers.set(subschema, keyFn\n                        ? function batchMergedTypeResolverWrapper(originalResult, context, info, subschema, selectionSet, type) {\n                            return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => keyFn(originalResult))\n                                .then(key => resolver(originalResult, context, info, subschema, selectionSet, key, type))\n                                .resolve();\n                        }\n                        : resolver);\n                    targetSubschemas.push(subschema);\n                    const type = subschema.transformedSchema.getType(typeName);\n                    const fieldMap = type.getFields();\n                    const selectionSet = selectionSets.get(subschema);\n                    for (const fieldName in fieldMap) {\n                        const field = fieldMap[fieldName];\n                        const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type);\n                        if (selectionSet && (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(fieldType) && selectionSetContainsTopLevelField(selectionSet, fieldName)) {\n                            continue;\n                        }\n                        if (!(fieldName in supportedBySubschemas)) {\n                            supportedBySubschemas[fieldName] = [];\n                        }\n                        supportedBySubschemas[fieldName].push(subschema);\n                    }\n                }\n                const sourceSubschemas = typeCandidates[typeName]\n                    .map(typeCandidate => typeCandidate === null || typeCandidate === void 0 ? void 0 : typeCandidate.transformedSubschema)\n                    .filter(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.isSome);\n                const targetSubschemasBySubschema = new Map();\n                for (const subschema of sourceSubschemas) {\n                    const filteredSubschemas = targetSubschemas.filter(s => s !== subschema);\n                    if (filteredSubschemas.length) {\n                        targetSubschemasBySubschema.set(subschema, filteredSubschemas);\n                    }\n                }\n                mergedTypes[typeName] = {\n                    typeName,\n                    targetSubschemas: targetSubschemasBySubschema,\n                    typeMaps,\n                    selectionSets,\n                    fieldSelectionSets,\n                    uniqueFields: Object.create({}),\n                    nonUniqueFields: Object.create({}),\n                    resolvers,\n                };\n                mergedTypes[typeName].delegationPlanBuilder = (0,_createDelegationPlanBuilder_js__WEBPACK_IMPORTED_MODULE_5__.createDelegationPlanBuilder)(mergedTypes[typeName]);\n                for (const fieldName in supportedBySubschemas) {\n                    if (supportedBySubschemas[fieldName].length === 1) {\n                        mergedTypes[typeName].uniqueFields[fieldName] = supportedBySubschemas[fieldName][0];\n                    }\n                    else {\n                        mergedTypes[typeName].nonUniqueFields[fieldName] = supportedBySubschemas[fieldName];\n                    }\n                }\n            }\n        }\n    }\n    return mergedTypes;\n}\nfunction completeStitchingInfo(stitchingInfo, resolvers, schema) {\n    const { fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField, mergedTypes } = stitchingInfo;\n    // must add __typename to query and mutation root types to handle type merging with nested root types\n    // cannot add __typename to subscription root types, but they cannot be nested\n    const rootTypes = [schema.getQueryType(), schema.getMutationType()];\n    for (const rootType of rootTypes) {\n        if (rootType) {\n            fieldNodesByType[rootType.name] = [\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)('{ __typename }', { noLocation: true }).selections[0],\n            ];\n        }\n    }\n    const selectionSetsByField = Object.create(null);\n    for (const typeName in mergedTypes) {\n        const mergedTypeInfo = mergedTypes[typeName];\n        if (mergedTypeInfo.selectionSets == null && mergedTypeInfo.fieldSelectionSets == null) {\n            continue;\n        }\n        for (const [subschemaConfig, selectionSet] of mergedTypeInfo.selectionSets) {\n            const schema = subschemaConfig.transformedSchema;\n            const type = schema.getType(typeName);\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type);\n                if (selectionSet && (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(fieldType) && selectionSetContainsTopLevelField(selectionSet, fieldName)) {\n                    continue;\n                }\n                updateSelectionSetMap(selectionSetsByField, typeName, fieldName, selectionSet, true);\n            }\n        }\n        for (const [, selectionSetFieldMap] of mergedTypeInfo.fieldSelectionSets) {\n            for (const fieldName in selectionSetFieldMap) {\n                const selectionSet = selectionSetFieldMap[fieldName];\n                updateSelectionSetMap(selectionSetsByField, typeName, fieldName, selectionSet, true);\n            }\n        }\n    }\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        if (type === undefined || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            continue;\n        }\n        const resolver = resolvers[typeName];\n        for (const fieldName in resolver) {\n            const field = resolver[fieldName];\n            if (typeof field.selectionSet === 'function') {\n                if (!(typeName in dynamicSelectionSetsByField)) {\n                    dynamicSelectionSetsByField[typeName] = Object.create(null);\n                }\n                if (!(fieldName in dynamicSelectionSetsByField[typeName])) {\n                    dynamicSelectionSetsByField[typeName][fieldName] = [];\n                }\n                dynamicSelectionSetsByField[typeName][fieldName].push(field.selectionSet);\n            }\n            else if (field.selectionSet) {\n                const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(field.selectionSet, { noLocation: true });\n                updateSelectionSetMap(selectionSetsByField, typeName, fieldName, selectionSet);\n            }\n        }\n    }\n    const variableValues = Object.create(null);\n    const fragments = Object.create(null);\n    const fieldNodeMap = Object.create(null);\n    for (const typeName in selectionSetsByField) {\n        const type = schema.getType(typeName);\n        for (const fieldName in selectionSetsByField[typeName]) {\n            for (const selectionSet of selectionSetsByField[typeName][fieldName]) {\n                const { fields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.collectFields)(schema, fragments, variableValues, type, selectionSet);\n                for (const [, fieldNodes] of fields) {\n                    for (const fieldNode of fieldNodes) {\n                        const key = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.print)(fieldNode);\n                        if (fieldNodeMap[key] == null) {\n                            fieldNodeMap[key] = fieldNode;\n                            updateArrayMap(fieldNodesByField, typeName, fieldName, fieldNode);\n                        }\n                        else {\n                            updateArrayMap(fieldNodesByField, typeName, fieldName, fieldNodeMap[key]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return stitchingInfo;\n}\nfunction updateSelectionSetMap(map, typeName, fieldName, selectionSet, includeTypename) {\n    if (includeTypename) {\n        const typenameSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)('{ __typename }', { noLocation: true });\n        updateArrayMap(map, typeName, fieldName, selectionSet, typenameSelectionSet);\n        return;\n    }\n    updateArrayMap(map, typeName, fieldName, selectionSet);\n}\nfunction updateArrayMap(map, typeName, fieldName, value, initialValue) {\n    if (map[typeName] == null) {\n        const initialItems = initialValue === undefined ? [value] : [initialValue, value];\n        map[typeName] = {\n            [fieldName]: initialItems,\n        };\n    }\n    else if (map[typeName][fieldName] == null) {\n        const initialItems = initialValue === undefined ? [value] : [initialValue, value];\n        map[typeName][fieldName] = initialItems;\n    }\n    else {\n        map[typeName][fieldName].push(value);\n    }\n}\nfunction addStitchingInfo(stitchedSchema, stitchingInfo) {\n    stitchedSchema.extensions = {\n        ...stitchedSchema.extensions,\n        stitchingInfo,\n    };\n}\nfunction selectionSetContainsTopLevelField(selectionSet, fieldName) {\n    return selectionSet.selections.some(selection => selection.kind === graphql__WEBPACK_IMPORTED_MODULE_8__.Kind.FIELD && selection.name.value === fieldName);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9zdGl0Y2hpbmdJbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0k7QUFDaEQ7QUFDUDtBQUNNO0FBQzdCO0FBQzNDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscURBQVksc0NBQXNDLHdEQUFlO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHVFQUFpQixrQ0FBa0Msa0JBQWtCO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsdUVBQWlCLHlCQUF5QixrQkFBa0I7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNHQUFzRyxzRkFBd0I7QUFDOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUNBQXVDLDREQUFjO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHFEQUFZO0FBQ3RELDRDQUE0QyxtREFBVTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix3REFBTTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRDtBQUNsRCxxREFBcUQ7QUFDckQ7QUFDQTtBQUNBLDhEQUE4RCw0RkFBMkI7QUFDekY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksZ0ZBQWdGO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQix1RUFBaUIsSUFBSSxZQUFZLEtBQUssa0JBQWtCO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxxREFBWTtBQUM5QyxvQ0FBb0MsbURBQVU7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxtREFBVSxVQUFVLDBEQUFpQixVQUFVLG9EQUFXO0FBQzVGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyx1RUFBaUIsdUJBQXVCLGtCQUFrQjtBQUMvRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLFNBQVMsRUFBRSxtRUFBYTtBQUNoRDtBQUNBO0FBQ0Esb0NBQW9DLDhDQUFLO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLHVFQUFpQixJQUFJLFlBQVksS0FBSyxrQkFBa0I7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asd0VBQXdFLHlDQUFJO0FBQzVFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvZXNtL3N0aXRjaGluZ0luZm8uanM/YTZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kLCBpc09iamVjdFR5cGUsIGdldE5hbWVkVHlwZSwgcHJpbnQsIGlzSW50ZXJmYWNlVHlwZSwgaXNMZWFmVHlwZSwgaXNJbnB1dE9iamVjdFR5cGUsIGlzVW5pb25UeXBlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgY29sbGVjdEZpZWxkcywgcGFyc2VTZWxlY3Rpb25TZXQsIGlzU29tZSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IGNyZWF0ZU1lcmdlZFR5cGVSZXNvbHZlciB9IGZyb20gJy4vY3JlYXRlTWVyZ2VkVHlwZVJlc29sdmVyLmpzJztcbmltcG9ydCB7IGNyZWF0ZURlbGVnYXRpb25QbGFuQnVpbGRlciB9IGZyb20gJy4vY3JlYXRlRGVsZWdhdGlvblBsYW5CdWlsZGVyLmpzJztcbmltcG9ydCB7IFZhbHVlT3JQcm9taXNlIH0gZnJvbSAndmFsdWUtb3ItcHJvbWlzZSc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3RpdGNoaW5nSW5mbyhzdWJzY2hlbWFNYXAsIHR5cGVDYW5kaWRhdGVzLCBtZXJnZVR5cGVzKSB7XG4gICAgY29uc3QgbWVyZ2VkVHlwZXMgPSBjcmVhdGVNZXJnZWRUeXBlcyh0eXBlQ2FuZGlkYXRlcywgbWVyZ2VUeXBlcyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc3Vic2NoZW1hTWFwLFxuICAgICAgICBmaWVsZE5vZGVzQnlUeXBlOiBPYmplY3QuY3JlYXRlKG51bGwpLFxuICAgICAgICBmaWVsZE5vZGVzQnlGaWVsZDogT2JqZWN0LmNyZWF0ZShudWxsKSxcbiAgICAgICAgZHluYW1pY1NlbGVjdGlvblNldHNCeUZpZWxkOiBPYmplY3QuY3JlYXRlKG51bGwpLFxuICAgICAgICBtZXJnZWRUeXBlcyxcbiAgICB9O1xufVxuZnVuY3Rpb24gY3JlYXRlTWVyZ2VkVHlwZXModHlwZUNhbmRpZGF0ZXMsIG1lcmdlVHlwZXMpIHtcbiAgICB2YXIgX2EsIF9iO1xuICAgIGNvbnN0IG1lcmdlZFR5cGVzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIHR5cGVDYW5kaWRhdGVzKSB7XG4gICAgICAgIGlmICh0eXBlQ2FuZGlkYXRlc1t0eXBlTmFtZV0ubGVuZ3RoID4gMSAmJlxuICAgICAgICAgICAgKGlzT2JqZWN0VHlwZSh0eXBlQ2FuZGlkYXRlc1t0eXBlTmFtZV1bMF0udHlwZSkgfHwgaXNJbnRlcmZhY2VUeXBlKHR5cGVDYW5kaWRhdGVzW3R5cGVOYW1lXVswXS50eXBlKSkpIHtcbiAgICAgICAgICAgIGNvbnN0IHR5cGVDYW5kaWRhdGVzV2l0aE1lcmdlZFR5cGVDb25maWcgPSB0eXBlQ2FuZGlkYXRlc1t0eXBlTmFtZV0uZmlsdGVyKHR5cGVDYW5kaWRhdGUgPT4gdHlwZUNhbmRpZGF0ZS50cmFuc2Zvcm1lZFN1YnNjaGVtYSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgdHlwZUNhbmRpZGF0ZS50cmFuc2Zvcm1lZFN1YnNjaGVtYS5tZXJnZSAhPSBudWxsICYmXG4gICAgICAgICAgICAgICAgdHlwZU5hbWUgaW4gdHlwZUNhbmRpZGF0ZS50cmFuc2Zvcm1lZFN1YnNjaGVtYS5tZXJnZSk7XG4gICAgICAgICAgICBpZiAobWVyZ2VUeXBlcyA9PT0gdHJ1ZSB8fFxuICAgICAgICAgICAgICAgICh0eXBlb2YgbWVyZ2VUeXBlcyA9PT0gJ2Z1bmN0aW9uJyAmJiBtZXJnZVR5cGVzKHR5cGVDYW5kaWRhdGVzW3R5cGVOYW1lXSwgdHlwZU5hbWUpKSB8fFxuICAgICAgICAgICAgICAgIChBcnJheS5pc0FycmF5KG1lcmdlVHlwZXMpICYmIG1lcmdlVHlwZXMuaW5jbHVkZXModHlwZU5hbWUpKSB8fFxuICAgICAgICAgICAgICAgIHR5cGVDYW5kaWRhdGVzV2l0aE1lcmdlZFR5cGVDb25maWcubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0U3Vic2NoZW1hcyA9IFtdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVNYXBzID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHN1cHBvcnRlZEJ5U3Vic2NoZW1hcyA9IE9iamVjdC5jcmVhdGUoe30pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGlvblNldHMgPSBuZXcgTWFwKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRTZWxlY3Rpb25TZXRzID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc29sdmVycyA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHR5cGVDYW5kaWRhdGUgb2YgdHlwZUNhbmRpZGF0ZXNbdHlwZU5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHN1YnNjaGVtYSA9IHR5cGVDYW5kaWRhdGUudHJhbnNmb3JtZWRTdWJzY2hlbWE7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdWJzY2hlbWEgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgdHlwZU1hcHMuc2V0KHN1YnNjaGVtYSwgc3Vic2NoZW1hLnRyYW5zZm9ybWVkU2NoZW1hLmdldFR5cGVNYXAoKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lcmdlZFR5cGVDb25maWcgPSAoX2EgPSBzdWJzY2hlbWEgPT09IG51bGwgfHwgc3Vic2NoZW1hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBzdWJzY2hlbWEubWVyZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVt0eXBlTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZXJnZWRUeXBlQ29uZmlnID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChtZXJnZWRUeXBlQ29uZmlnLnNlbGVjdGlvblNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0ID0gcGFyc2VTZWxlY3Rpb25TZXQobWVyZ2VkVHlwZUNvbmZpZy5zZWxlY3Rpb25TZXQsIHsgbm9Mb2NhdGlvbjogdHJ1ZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvblNldHMuc2V0KHN1YnNjaGVtYSwgc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAobWVyZ2VkVHlwZUNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZEZpZWxkU2VsZWN0aW9uU2V0cyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBtZXJnZWRUeXBlQ29uZmlnLmZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZXJnZWRUeXBlQ29uZmlnLmZpZWxkc1tmaWVsZE5hbWVdLnNlbGVjdGlvblNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByYXdGaWVsZFNlbGVjdGlvblNldCA9IG1lcmdlZFR5cGVDb25maWcuZmllbGRzW2ZpZWxkTmFtZV0uc2VsZWN0aW9uU2V0O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJzZWRGaWVsZFNlbGVjdGlvblNldHNbZmllbGROYW1lXSA9IHJhd0ZpZWxkU2VsZWN0aW9uU2V0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IHBhcnNlU2VsZWN0aW9uU2V0KHJhd0ZpZWxkU2VsZWN0aW9uU2V0LCB7IG5vTG9jYXRpb246IHRydWUgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkU2VsZWN0aW9uU2V0cy5zZXQoc3Vic2NoZW1hLCBwYXJzZWRGaWVsZFNlbGVjdGlvblNldHMpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc29sdmVyID0gKF9iID0gbWVyZ2VkVHlwZUNvbmZpZy5yZXNvbHZlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBjcmVhdGVNZXJnZWRUeXBlUmVzb2x2ZXIobWVyZ2VkVHlwZUNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNvbHZlciA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBrZXlGbiA9IG1lcmdlZFR5cGVDb25maWcua2V5O1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnMuc2V0KHN1YnNjaGVtYSwga2V5Rm5cbiAgICAgICAgICAgICAgICAgICAgICAgID8gZnVuY3Rpb24gYmF0Y2hNZXJnZWRUeXBlUmVzb2x2ZXJXcmFwcGVyKG9yaWdpbmFsUmVzdWx0LCBjb250ZXh0LCBpbmZvLCBzdWJzY2hlbWEsIHNlbGVjdGlvblNldCwgdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgVmFsdWVPclByb21pc2UoKCkgPT4ga2V5Rm4ob3JpZ2luYWxSZXN1bHQpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihrZXkgPT4gcmVzb2x2ZXIob3JpZ2luYWxSZXN1bHQsIGNvbnRleHQsIGluZm8sIHN1YnNjaGVtYSwgc2VsZWN0aW9uU2V0LCBrZXksIHR5cGUpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgOiByZXNvbHZlcik7XG4gICAgICAgICAgICAgICAgICAgIHRhcmdldFN1YnNjaGVtYXMucHVzaChzdWJzY2hlbWEpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB0eXBlID0gc3Vic2NoZW1hLnRyYW5zZm9ybWVkU2NoZW1hLmdldFR5cGUodHlwZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZE1hcCA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGlvblNldCA9IHNlbGVjdGlvblNldHMuZ2V0KHN1YnNjaGVtYSk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkTWFwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkTWFwW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZFR5cGUgPSBnZXROYW1lZFR5cGUoZmllbGQudHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0aW9uU2V0ICYmIGlzTGVhZlR5cGUoZmllbGRUeXBlKSAmJiBzZWxlY3Rpb25TZXRDb250YWluc1RvcExldmVsRmllbGQoc2VsZWN0aW9uU2V0LCBmaWVsZE5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIShmaWVsZE5hbWUgaW4gc3VwcG9ydGVkQnlTdWJzY2hlbWFzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1cHBvcnRlZEJ5U3Vic2NoZW1hc1tmaWVsZE5hbWVdID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBzdXBwb3J0ZWRCeVN1YnNjaGVtYXNbZmllbGROYW1lXS5wdXNoKHN1YnNjaGVtYSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3Qgc291cmNlU3Vic2NoZW1hcyA9IHR5cGVDYW5kaWRhdGVzW3R5cGVOYW1lXVxuICAgICAgICAgICAgICAgICAgICAubWFwKHR5cGVDYW5kaWRhdGUgPT4gdHlwZUNhbmRpZGF0ZSA9PT0gbnVsbCB8fCB0eXBlQ2FuZGlkYXRlID09PSB2b2lkIDAgPyB2b2lkIDAgOiB0eXBlQ2FuZGlkYXRlLnRyYW5zZm9ybWVkU3Vic2NoZW1hKVxuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKGlzU29tZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgdGFyZ2V0U3Vic2NoZW1hc0J5U3Vic2NoZW1hID0gbmV3IE1hcCgpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3Qgc3Vic2NoZW1hIG9mIHNvdXJjZVN1YnNjaGVtYXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmlsdGVyZWRTdWJzY2hlbWFzID0gdGFyZ2V0U3Vic2NoZW1hcy5maWx0ZXIocyA9PiBzICE9PSBzdWJzY2hlbWEpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmlsdGVyZWRTdWJzY2hlbWFzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGFyZ2V0U3Vic2NoZW1hc0J5U3Vic2NoZW1hLnNldChzdWJzY2hlbWEsIGZpbHRlcmVkU3Vic2NoZW1hcyk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWVyZ2VkVHlwZXNbdHlwZU5hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICB0eXBlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgdGFyZ2V0U3Vic2NoZW1hczogdGFyZ2V0U3Vic2NoZW1hc0J5U3Vic2NoZW1hLFxuICAgICAgICAgICAgICAgICAgICB0eXBlTWFwcyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0cyxcbiAgICAgICAgICAgICAgICAgICAgZmllbGRTZWxlY3Rpb25TZXRzLFxuICAgICAgICAgICAgICAgICAgICB1bmlxdWVGaWVsZHM6IE9iamVjdC5jcmVhdGUoe30pLFxuICAgICAgICAgICAgICAgICAgICBub25VbmlxdWVGaWVsZHM6IE9iamVjdC5jcmVhdGUoe30pLFxuICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnMsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBtZXJnZWRUeXBlc1t0eXBlTmFtZV0uZGVsZWdhdGlvblBsYW5CdWlsZGVyID0gY3JlYXRlRGVsZWdhdGlvblBsYW5CdWlsZGVyKG1lcmdlZFR5cGVzW3R5cGVOYW1lXSk7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gc3VwcG9ydGVkQnlTdWJzY2hlbWFzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChzdXBwb3J0ZWRCeVN1YnNjaGVtYXNbZmllbGROYW1lXS5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlZFR5cGVzW3R5cGVOYW1lXS51bmlxdWVGaWVsZHNbZmllbGROYW1lXSA9IHN1cHBvcnRlZEJ5U3Vic2NoZW1hc1tmaWVsZE5hbWVdWzBdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkVHlwZXNbdHlwZU5hbWVdLm5vblVuaXF1ZUZpZWxkc1tmaWVsZE5hbWVdID0gc3VwcG9ydGVkQnlTdWJzY2hlbWFzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlZFR5cGVzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBsZXRlU3RpdGNoaW5nSW5mbyhzdGl0Y2hpbmdJbmZvLCByZXNvbHZlcnMsIHNjaGVtYSkge1xuICAgIGNvbnN0IHsgZmllbGROb2Rlc0J5VHlwZSwgZmllbGROb2Rlc0J5RmllbGQsIGR5bmFtaWNTZWxlY3Rpb25TZXRzQnlGaWVsZCwgbWVyZ2VkVHlwZXMgfSA9IHN0aXRjaGluZ0luZm87XG4gICAgLy8gbXVzdCBhZGQgX190eXBlbmFtZSB0byBxdWVyeSBhbmQgbXV0YXRpb24gcm9vdCB0eXBlcyB0byBoYW5kbGUgdHlwZSBtZXJnaW5nIHdpdGggbmVzdGVkIHJvb3QgdHlwZXNcbiAgICAvLyBjYW5ub3QgYWRkIF9fdHlwZW5hbWUgdG8gc3Vic2NyaXB0aW9uIHJvb3QgdHlwZXMsIGJ1dCB0aGV5IGNhbm5vdCBiZSBuZXN0ZWRcbiAgICBjb25zdCByb290VHlwZXMgPSBbc2NoZW1hLmdldFF1ZXJ5VHlwZSgpLCBzY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCldO1xuICAgIGZvciAoY29uc3Qgcm9vdFR5cGUgb2Ygcm9vdFR5cGVzKSB7XG4gICAgICAgIGlmIChyb290VHlwZSkge1xuICAgICAgICAgICAgZmllbGROb2Rlc0J5VHlwZVtyb290VHlwZS5uYW1lXSA9IFtcbiAgICAgICAgICAgICAgICBwYXJzZVNlbGVjdGlvblNldCgneyBfX3R5cGVuYW1lIH0nLCB7IG5vTG9jYXRpb246IHRydWUgfSkuc2VsZWN0aW9uc1swXSxcbiAgICAgICAgICAgIF07XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgc2VsZWN0aW9uU2V0c0J5RmllbGQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gbWVyZ2VkVHlwZXMpIHtcbiAgICAgICAgY29uc3QgbWVyZ2VkVHlwZUluZm8gPSBtZXJnZWRUeXBlc1t0eXBlTmFtZV07XG4gICAgICAgIGlmIChtZXJnZWRUeXBlSW5mby5zZWxlY3Rpb25TZXRzID09IG51bGwgJiYgbWVyZ2VkVHlwZUluZm8uZmllbGRTZWxlY3Rpb25TZXRzID09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgW3N1YnNjaGVtYUNvbmZpZywgc2VsZWN0aW9uU2V0XSBvZiBtZXJnZWRUeXBlSW5mby5zZWxlY3Rpb25TZXRzKSB7XG4gICAgICAgICAgICBjb25zdCBzY2hlbWEgPSBzdWJzY2hlbWFDb25maWcudHJhbnNmb3JtZWRTY2hlbWE7XG4gICAgICAgICAgICBjb25zdCB0eXBlID0gc2NoZW1hLmdldFR5cGUodHlwZU5hbWUpO1xuICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRUeXBlID0gZ2V0TmFtZWRUeXBlKGZpZWxkLnR5cGUpO1xuICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb25TZXQgJiYgaXNMZWFmVHlwZShmaWVsZFR5cGUpICYmIHNlbGVjdGlvblNldENvbnRhaW5zVG9wTGV2ZWxGaWVsZChzZWxlY3Rpb25TZXQsIGZpZWxkTmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHVwZGF0ZVNlbGVjdGlvblNldE1hcChzZWxlY3Rpb25TZXRzQnlGaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSwgc2VsZWN0aW9uU2V0LCB0cnVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IFssIHNlbGVjdGlvblNldEZpZWxkTWFwXSBvZiBtZXJnZWRUeXBlSW5mby5maWVsZFNlbGVjdGlvblNldHMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHNlbGVjdGlvblNldEZpZWxkTWFwKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0ID0gc2VsZWN0aW9uU2V0RmllbGRNYXBbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICB1cGRhdGVTZWxlY3Rpb25TZXRNYXAoc2VsZWN0aW9uU2V0c0J5RmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUsIHNlbGVjdGlvblNldCwgdHJ1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiByZXNvbHZlcnMpIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHNjaGVtYS5nZXRUeXBlKHR5cGVOYW1lKTtcbiAgICAgICAgaWYgKHR5cGUgPT09IHVuZGVmaW5lZCB8fCBpc0xlYWZUeXBlKHR5cGUpIHx8IGlzSW5wdXRPYmplY3RUeXBlKHR5cGUpIHx8IGlzVW5pb25UeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXNvbHZlciA9IHJlc29sdmVyc1t0eXBlTmFtZV07XG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHJlc29sdmVyKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IHJlc29sdmVyW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICBpZiAodHlwZW9mIGZpZWxkLnNlbGVjdGlvblNldCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIGlmICghKHR5cGVOYW1lIGluIGR5bmFtaWNTZWxlY3Rpb25TZXRzQnlGaWVsZCkpIHtcbiAgICAgICAgICAgICAgICAgICAgZHluYW1pY1NlbGVjdGlvblNldHNCeUZpZWxkW3R5cGVOYW1lXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICghKGZpZWxkTmFtZSBpbiBkeW5hbWljU2VsZWN0aW9uU2V0c0J5RmllbGRbdHlwZU5hbWVdKSkge1xuICAgICAgICAgICAgICAgICAgICBkeW5hbWljU2VsZWN0aW9uU2V0c0J5RmllbGRbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gPSBbXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZHluYW1pY1NlbGVjdGlvblNldHNCeUZpZWxkW3R5cGVOYW1lXVtmaWVsZE5hbWVdLnB1c2goZmllbGQuc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGZpZWxkLnNlbGVjdGlvblNldCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGlvblNldCA9IHBhcnNlU2VsZWN0aW9uU2V0KGZpZWxkLnNlbGVjdGlvblNldCwgeyBub0xvY2F0aW9uOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgIHVwZGF0ZVNlbGVjdGlvblNldE1hcChzZWxlY3Rpb25TZXRzQnlGaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSwgc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB2YXJpYWJsZVZhbHVlcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3QgZnJhZ21lbnRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBjb25zdCBmaWVsZE5vZGVNYXAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gc2VsZWN0aW9uU2V0c0J5RmllbGQpIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHNjaGVtYS5nZXRUeXBlKHR5cGVOYW1lKTtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gc2VsZWN0aW9uU2V0c0J5RmllbGRbdHlwZU5hbWVdKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHNlbGVjdGlvblNldCBvZiBzZWxlY3Rpb25TZXRzQnlGaWVsZFt0eXBlTmFtZV1bZmllbGROYW1lXSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZmllbGRzIH0gPSBjb2xsZWN0RmllbGRzKHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgdHlwZSwgc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFssIGZpZWxkTm9kZXNdIG9mIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTm9kZSBvZiBmaWVsZE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBwcmludChmaWVsZE5vZGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkTm9kZU1hcFtrZXldID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZE5vZGVNYXBba2V5XSA9IGZpZWxkTm9kZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVBcnJheU1hcChmaWVsZE5vZGVzQnlGaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSwgZmllbGROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwZGF0ZUFycmF5TWFwKGZpZWxkTm9kZXNCeUZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lLCBmaWVsZE5vZGVNYXBba2V5XSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHN0aXRjaGluZ0luZm87XG59XG5mdW5jdGlvbiB1cGRhdGVTZWxlY3Rpb25TZXRNYXAobWFwLCB0eXBlTmFtZSwgZmllbGROYW1lLCBzZWxlY3Rpb25TZXQsIGluY2x1ZGVUeXBlbmFtZSkge1xuICAgIGlmIChpbmNsdWRlVHlwZW5hbWUpIHtcbiAgICAgICAgY29uc3QgdHlwZW5hbWVTZWxlY3Rpb25TZXQgPSBwYXJzZVNlbGVjdGlvblNldCgneyBfX3R5cGVuYW1lIH0nLCB7IG5vTG9jYXRpb246IHRydWUgfSk7XG4gICAgICAgIHVwZGF0ZUFycmF5TWFwKG1hcCwgdHlwZU5hbWUsIGZpZWxkTmFtZSwgc2VsZWN0aW9uU2V0LCB0eXBlbmFtZVNlbGVjdGlvblNldCk7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgdXBkYXRlQXJyYXlNYXAobWFwLCB0eXBlTmFtZSwgZmllbGROYW1lLCBzZWxlY3Rpb25TZXQpO1xufVxuZnVuY3Rpb24gdXBkYXRlQXJyYXlNYXAobWFwLCB0eXBlTmFtZSwgZmllbGROYW1lLCB2YWx1ZSwgaW5pdGlhbFZhbHVlKSB7XG4gICAgaWYgKG1hcFt0eXBlTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICBjb25zdCBpbml0aWFsSXRlbXMgPSBpbml0aWFsVmFsdWUgPT09IHVuZGVmaW5lZCA/IFt2YWx1ZV0gOiBbaW5pdGlhbFZhbHVlLCB2YWx1ZV07XG4gICAgICAgIG1hcFt0eXBlTmFtZV0gPSB7XG4gICAgICAgICAgICBbZmllbGROYW1lXTogaW5pdGlhbEl0ZW1zLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChtYXBbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICBjb25zdCBpbml0aWFsSXRlbXMgPSBpbml0aWFsVmFsdWUgPT09IHVuZGVmaW5lZCA/IFt2YWx1ZV0gOiBbaW5pdGlhbFZhbHVlLCB2YWx1ZV07XG4gICAgICAgIG1hcFt0eXBlTmFtZV1bZmllbGROYW1lXSA9IGluaXRpYWxJdGVtcztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG1hcFt0eXBlTmFtZV1bZmllbGROYW1lXS5wdXNoKHZhbHVlKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gYWRkU3RpdGNoaW5nSW5mbyhzdGl0Y2hlZFNjaGVtYSwgc3RpdGNoaW5nSW5mbykge1xuICAgIHN0aXRjaGVkU2NoZW1hLmV4dGVuc2lvbnMgPSB7XG4gICAgICAgIC4uLnN0aXRjaGVkU2NoZW1hLmV4dGVuc2lvbnMsXG4gICAgICAgIHN0aXRjaGluZ0luZm8sXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZWxlY3Rpb25TZXRDb250YWluc1RvcExldmVsRmllbGQoc2VsZWN0aW9uU2V0LCBmaWVsZE5hbWUpIHtcbiAgICByZXR1cm4gc2VsZWN0aW9uU2V0LnNlbGVjdGlvbnMuc29tZShzZWxlY3Rpb24gPT4gc2VsZWN0aW9uLmtpbmQgPT09IEtpbmQuRklFTEQgJiYgc2VsZWN0aW9uLm5hbWUudmFsdWUgPT09IGZpZWxkTmFtZSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/stitchingInfo.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js":
/*!***********************************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js ***!
  \***********************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isolateComputedFieldsTransformer: () => (/* binding */ isolateComputedFieldsTransformer)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/prune.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/filterSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/get-implementing-types.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js\");\n\n\n\nfunction isolateComputedFieldsTransformer(subschemaConfig) {\n    if (subschemaConfig.merge == null) {\n        return [subschemaConfig];\n    }\n    const baseSchemaTypes = Object.create(null);\n    const isolatedSchemaTypes = Object.create(null);\n    for (const typeName in subschemaConfig.merge) {\n        const mergedTypeConfig = subschemaConfig.merge[typeName];\n        baseSchemaTypes[typeName] = mergedTypeConfig;\n        if (mergedTypeConfig.fields) {\n            const baseFields = Object.create(null);\n            const isolatedFields = Object.create(null);\n            for (const fieldName in mergedTypeConfig.fields) {\n                const mergedFieldConfig = mergedTypeConfig.fields[fieldName];\n                if (mergedFieldConfig.computed && mergedFieldConfig.selectionSet) {\n                    isolatedFields[fieldName] = mergedFieldConfig;\n                }\n                else if (mergedFieldConfig.computed) {\n                    throw new Error(`A selectionSet is required for computed field \"${typeName}.${fieldName}\"`);\n                }\n                else {\n                    baseFields[fieldName] = mergedFieldConfig;\n                }\n            }\n            const isolatedFieldCount = Object.keys(isolatedFields).length;\n            const objectType = subschemaConfig.schema.getType(typeName);\n            if (isolatedFieldCount && isolatedFieldCount !== Object.keys(objectType.getFields()).length) {\n                baseSchemaTypes[typeName] = {\n                    ...mergedTypeConfig,\n                    fields: baseFields,\n                };\n                isolatedSchemaTypes[typeName] = {\n                    ...mergedTypeConfig,\n                    fields: isolatedFields,\n                    canonical: undefined,\n                };\n            }\n        }\n    }\n    if (Object.keys(isolatedSchemaTypes).length) {\n        return [\n            filterBaseSubschema({ ...subschemaConfig, merge: baseSchemaTypes }, isolatedSchemaTypes),\n            filterIsolatedSubschema({ ...subschemaConfig, merge: isolatedSchemaTypes }),\n        ];\n    }\n    return [subschemaConfig];\n}\nfunction filterBaseSubschema(subschemaConfig, isolatedSchemaTypes) {\n    var _a;\n    const schema = subschemaConfig.schema;\n    const typesForInterface = {};\n    const filteredSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.pruneSchema)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.filterSchema)({\n        schema,\n        objectFieldFilter: (typeName, fieldName) => { var _a, _b; return !((_b = (_a = isolatedSchemaTypes[typeName]) === null || _a === void 0 ? void 0 : _a.fields) === null || _b === void 0 ? void 0 : _b[fieldName]); },\n        interfaceFieldFilter: (typeName, fieldName) => {\n            if (!typesForInterface[typeName]) {\n                typesForInterface[typeName] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getImplementingTypes)(typeName, schema);\n            }\n            return !typesForInterface[typeName].some(implementingTypeName => { var _a, _b; return (_b = (_a = isolatedSchemaTypes[implementingTypeName]) === null || _a === void 0 ? void 0 : _a.fields) === null || _b === void 0 ? void 0 : _b[fieldName]; });\n        },\n    }));\n    const filteredFields = {};\n    for (const typeName in filteredSchema.getTypeMap()) {\n        const type = filteredSchema.getType(typeName);\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n            filteredFields[typeName] = { __typename: true };\n            const fieldMap = type.getFields();\n            for (const fieldName in fieldMap) {\n                filteredFields[typeName][fieldName] = true;\n            }\n        }\n    }\n    const filteredSubschema = {\n        ...subschemaConfig,\n        merge: subschemaConfig.merge\n            ? {\n                ...subschemaConfig.merge,\n            }\n            : undefined,\n        transforms: ((_a = subschemaConfig.transforms) !== null && _a !== void 0 ? _a : []).concat([\n            new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"]((typeName, fieldName) => { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }, (typeName, fieldName) => { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }),\n        ]),\n    };\n    const remainingTypes = filteredSchema.getTypeMap();\n    const mergeConfig = filteredSubschema.merge;\n    if (mergeConfig) {\n        for (const mergeType in mergeConfig) {\n            if (!remainingTypes[mergeType]) {\n                delete mergeConfig[mergeType];\n            }\n        }\n        if (!Object.keys(mergeConfig).length) {\n            delete filteredSubschema.merge;\n        }\n    }\n    return filteredSubschema;\n}\nfunction filterIsolatedSubschema(subschemaConfig) {\n    var _a, _b, _c;\n    const rootFields = {};\n    for (const typeName in subschemaConfig.merge) {\n        const mergedTypeConfig = subschemaConfig.merge[typeName];\n        const entryPoints = (_a = mergedTypeConfig.entryPoints) !== null && _a !== void 0 ? _a : [mergedTypeConfig];\n        for (const entryPoint of entryPoints) {\n            if (entryPoint.fieldName != null) {\n                rootFields[entryPoint.fieldName] = true;\n            }\n        }\n    }\n    const interfaceFields = {};\n    for (const typeName in subschemaConfig.merge) {\n        const type = subschemaConfig.schema.getType(typeName);\n        if (!type || !('getInterfaces' in type)) {\n            throw new Error(`${typeName} expected to have 'getInterfaces' method`);\n        }\n        for (const int of type.getInterfaces()) {\n            const intType = subschemaConfig.schema.getType(int.name);\n            if (!intType || !('getFields' in intType)) {\n                throw new Error(`${int.name} expected to have 'getFields' method`);\n            }\n            for (const intFieldName in intType.getFields()) {\n                if ((_b = subschemaConfig.merge[typeName].fields) === null || _b === void 0 ? void 0 : _b[intFieldName]) {\n                    interfaceFields[int.name] = interfaceFields[int.name] || {};\n                    interfaceFields[int.name][intFieldName] = true;\n                }\n            }\n        }\n    }\n    const filteredSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.pruneSchema)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.filterSchema)({\n        schema: subschemaConfig.schema,\n        rootFieldFilter: (operation, fieldName) => operation === 'Query' && rootFields[fieldName] != null,\n        objectFieldFilter: (typeName, fieldName) => { var _a, _b; return ((_b = (_a = subschemaConfig.merge[typeName]) === null || _a === void 0 ? void 0 : _a.fields) === null || _b === void 0 ? void 0 : _b[fieldName]) != null; },\n        interfaceFieldFilter: (typeName, fieldName) => { var _a; return ((_a = interfaceFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) != null; },\n    }));\n    const filteredFields = {};\n    for (const typeName in filteredSchema.getTypeMap()) {\n        const type = filteredSchema.getType(typeName);\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n            filteredFields[typeName] = { __typename: true };\n            const fieldMap = type.getFields();\n            for (const fieldName in fieldMap) {\n                filteredFields[typeName][fieldName] = true;\n            }\n        }\n    }\n    return {\n        ...subschemaConfig,\n        transforms: ((_c = subschemaConfig.transforms) !== null && _c !== void 0 ? _c : []).concat([\n            new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"]((typeName, fieldName) => { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }, (typeName, fieldName) => { var _a; return (((_a = filteredFields[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) ? undefined : null); }),\n        ]),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js":
/*!****************************************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js ***!
  \****************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitMergedTypeEntryPointsTransformer: () => (/* binding */ splitMergedTypeEntryPointsTransformer)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n\nfunction splitMergedTypeEntryPointsTransformer(subschemaConfig) {\n    var _a, _b, _c, _d;\n    if (!subschemaConfig.merge)\n        return [subschemaConfig];\n    const maxEntryPoints = Object.values(subschemaConfig.merge).reduce((max, mergedTypeConfig) => {\n        var _a, _b;\n        return Math.max(max, (_b = (_a = mergedTypeConfig === null || mergedTypeConfig === void 0 ? void 0 : mergedTypeConfig.entryPoints) === null || _a === void 0 ? void 0 : _a.length) !== null && _b !== void 0 ? _b : 0);\n    }, 0);\n    if (maxEntryPoints === 0)\n        return [subschemaConfig];\n    const subschemaPermutations = [];\n    for (let i = 0; i < maxEntryPoints; i += 1) {\n        const subschemaPermutation = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_0__.cloneSubschemaConfig)(subschemaConfig);\n        const mergedTypesCopy = (_a = subschemaPermutation.merge) !== null && _a !== void 0 ? _a : Object.create(null);\n        let currentMerge = mergedTypesCopy;\n        if (i > 0) {\n            subschemaPermutation.merge = currentMerge = Object.create(null);\n        }\n        for (const typeName in mergedTypesCopy) {\n            const mergedTypeConfig = mergedTypesCopy[typeName];\n            const mergedTypeEntryPoint = (_b = mergedTypeConfig === null || mergedTypeConfig === void 0 ? void 0 : mergedTypeConfig.entryPoints) === null || _b === void 0 ? void 0 : _b[i];\n            if (mergedTypeEntryPoint) {\n                if ((_d = (_c = mergedTypeConfig.selectionSet) !== null && _c !== void 0 ? _c : mergedTypeConfig.fieldName) !== null && _d !== void 0 ? _d : mergedTypeConfig.resolve) {\n                    throw new Error(`Merged type ${typeName} may not define entryPoints in addition to selectionSet, fieldName, or resolve`);\n                }\n                Object.assign(mergedTypeConfig, mergedTypeEntryPoint);\n                delete mergedTypeConfig.entryPoints;\n                if (i > 0) {\n                    delete mergedTypeConfig.canonical;\n                    if (mergedTypeConfig.fields != null) {\n                        for (const mergedFieldName in mergedTypeConfig.fields) {\n                            const mergedFieldConfig = mergedTypeConfig.fields[mergedFieldName];\n                            delete mergedFieldConfig.canonical;\n                        }\n                    }\n                }\n                currentMerge[typeName] = mergedTypeConfig;\n            }\n        }\n        subschemaPermutations.push(subschemaPermutation);\n    }\n    return subschemaPermutations;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9zdWJzY2hlbWFDb25maWdUcmFuc2Zvcm1zL3NwbGl0TWVyZ2VkVHlwZUVudHJ5UG9pbnRzVHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0Q7QUFDeEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QyxxQ0FBcUMsNkVBQW9CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1ELFVBQVU7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vc3Vic2NoZW1hQ29uZmlnVHJhbnNmb3Jtcy9zcGxpdE1lcmdlZFR5cGVFbnRyeVBvaW50c1RyYW5zZm9ybWVyLmpzP2JmMzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2xvbmVTdWJzY2hlbWFDb25maWcgfSBmcm9tICdAZ3JhcGhxbC10b29scy9kZWxlZ2F0ZSc7XG5leHBvcnQgZnVuY3Rpb24gc3BsaXRNZXJnZWRUeXBlRW50cnlQb2ludHNUcmFuc2Zvcm1lcihzdWJzY2hlbWFDb25maWcpIHtcbiAgICB2YXIgX2EsIF9iLCBfYywgX2Q7XG4gICAgaWYgKCFzdWJzY2hlbWFDb25maWcubWVyZ2UpXG4gICAgICAgIHJldHVybiBbc3Vic2NoZW1hQ29uZmlnXTtcbiAgICBjb25zdCBtYXhFbnRyeVBvaW50cyA9IE9iamVjdC52YWx1ZXMoc3Vic2NoZW1hQ29uZmlnLm1lcmdlKS5yZWR1Y2UoKG1heCwgbWVyZ2VkVHlwZUNvbmZpZykgPT4ge1xuICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICByZXR1cm4gTWF0aC5tYXgobWF4LCAoX2IgPSAoX2EgPSBtZXJnZWRUeXBlQ29uZmlnID09PSBudWxsIHx8IG1lcmdlZFR5cGVDb25maWcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1lcmdlZFR5cGVDb25maWcuZW50cnlQb2ludHMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5sZW5ndGgpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IDApO1xuICAgIH0sIDApO1xuICAgIGlmIChtYXhFbnRyeVBvaW50cyA9PT0gMClcbiAgICAgICAgcmV0dXJuIFtzdWJzY2hlbWFDb25maWddO1xuICAgIGNvbnN0IHN1YnNjaGVtYVBlcm11dGF0aW9ucyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbWF4RW50cnlQb2ludHM7IGkgKz0gMSkge1xuICAgICAgICBjb25zdCBzdWJzY2hlbWFQZXJtdXRhdGlvbiA9IGNsb25lU3Vic2NoZW1hQ29uZmlnKHN1YnNjaGVtYUNvbmZpZyk7XG4gICAgICAgIGNvbnN0IG1lcmdlZFR5cGVzQ29weSA9IChfYSA9IHN1YnNjaGVtYVBlcm11dGF0aW9uLm1lcmdlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICBsZXQgY3VycmVudE1lcmdlID0gbWVyZ2VkVHlwZXNDb3B5O1xuICAgICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgICAgIHN1YnNjaGVtYVBlcm11dGF0aW9uLm1lcmdlID0gY3VycmVudE1lcmdlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIG1lcmdlZFR5cGVzQ29weSkge1xuICAgICAgICAgICAgY29uc3QgbWVyZ2VkVHlwZUNvbmZpZyA9IG1lcmdlZFR5cGVzQ29weVt0eXBlTmFtZV07XG4gICAgICAgICAgICBjb25zdCBtZXJnZWRUeXBlRW50cnlQb2ludCA9IChfYiA9IG1lcmdlZFR5cGVDb25maWcgPT09IG51bGwgfHwgbWVyZ2VkVHlwZUNvbmZpZyA9PT0gdm9pZCAwID8gdm9pZCAwIDogbWVyZ2VkVHlwZUNvbmZpZy5lbnRyeVBvaW50cykgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iW2ldO1xuICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVFbnRyeVBvaW50KSB7XG4gICAgICAgICAgICAgICAgaWYgKChfZCA9IChfYyA9IG1lcmdlZFR5cGVDb25maWcuc2VsZWN0aW9uU2V0KSAhPT0gbnVsbCAmJiBfYyAhPT0gdm9pZCAwID8gX2MgOiBtZXJnZWRUeXBlQ29uZmlnLmZpZWxkTmFtZSkgIT09IG51bGwgJiYgX2QgIT09IHZvaWQgMCA/IF9kIDogbWVyZ2VkVHlwZUNvbmZpZy5yZXNvbHZlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTWVyZ2VkIHR5cGUgJHt0eXBlTmFtZX0gbWF5IG5vdCBkZWZpbmUgZW50cnlQb2ludHMgaW4gYWRkaXRpb24gdG8gc2VsZWN0aW9uU2V0LCBmaWVsZE5hbWUsIG9yIHJlc29sdmVgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihtZXJnZWRUeXBlQ29uZmlnLCBtZXJnZWRUeXBlRW50cnlQb2ludCk7XG4gICAgICAgICAgICAgICAgZGVsZXRlIG1lcmdlZFR5cGVDb25maWcuZW50cnlQb2ludHM7XG4gICAgICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBtZXJnZWRUeXBlQ29uZmlnLmNhbm9uaWNhbDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVDb25maWcuZmllbGRzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbWVyZ2VkRmllbGROYW1lIGluIG1lcmdlZFR5cGVDb25maWcuZmllbGRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVyZ2VkRmllbGRDb25maWcgPSBtZXJnZWRUeXBlQ29uZmlnLmZpZWxkc1ttZXJnZWRGaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBtZXJnZWRGaWVsZENvbmZpZy5jYW5vbmljYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY3VycmVudE1lcmdlW3R5cGVOYW1lXSA9IG1lcmdlZFR5cGVDb25maWc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3Vic2NoZW1hUGVybXV0YXRpb25zLnB1c2goc3Vic2NoZW1hUGVybXV0YXRpb24pO1xuICAgIH1cbiAgICByZXR1cm4gc3Vic2NoZW1hUGVybXV0YXRpb25zO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeCandidates.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeCandidates.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildTypeCandidates: () => (/* binding */ buildTypeCandidates),\n/* harmony export */   buildTypes: () => (/* binding */ buildTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _typeFromAST_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./typeFromAST.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeFromAST.js\");\n/* harmony import */ var _mergeCandidates_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./mergeCandidates.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/mergeCandidates.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definitions.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/definitions.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/wrapSchema.js\");\n\n\n\n\n\n\n\nfunction buildTypeCandidates({ subschemas, originalSubschemaMap, types, typeDefs, parseOptions, directiveMap, schemaDefs, mergeDirectives, }) {\n    const extensions = [];\n    const typeCandidates = Object.create(null);\n    let schemaDef;\n    let schemaExtensions = [];\n    let document;\n    let extraction;\n    if ((typeDefs && !Array.isArray(typeDefs)) || (Array.isArray(typeDefs) && typeDefs.length)) {\n        document = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_0__.mergeTypeDefs)(typeDefs, parseOptions);\n        extraction = (0,_definitions_js__WEBPACK_IMPORTED_MODULE_1__.extractDefinitions)(document);\n        schemaDef = extraction.schemaDefs[0];\n        schemaExtensions = schemaExtensions.concat(extraction.schemaExtensions);\n    }\n    schemaDefs.schemaDef = schemaDef !== null && schemaDef !== void 0 ? schemaDef : schemaDefs.schemaDef;\n    schemaDefs.schemaExtensions = schemaExtensions;\n    const rootTypeNameMap = getRootTypeNameMap(schemaDefs);\n    for (const subschema of subschemas) {\n        const schema = (subschema.transformedSchema = (0,_graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_2__.wrapSchema)(subschema));\n        const rootTypeMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getRootTypeMap)(schema);\n        const rootTypes = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getRootTypes)(schema);\n        for (const [operation, rootType] of rootTypeMap.entries()) {\n            addTypeCandidate(typeCandidates, rootTypeNameMap[operation], {\n                type: rootType,\n                subschema: originalSubschemaMap.get(subschema),\n                transformedSubschema: subschema,\n            });\n        }\n        if (mergeDirectives === true) {\n            for (const directive of schema.getDirectives()) {\n                directiveMap[directive.name] = directive;\n            }\n        }\n        const originalTypeMap = schema.getTypeMap();\n        for (const typeName in originalTypeMap) {\n            const type = originalTypeMap[typeName];\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isNamedType)(type) &&\n                (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(type).name.slice(0, 2) !== '__' &&\n                !rootTypes.has(type)) {\n                addTypeCandidate(typeCandidates, type.name, {\n                    type,\n                    subschema: originalSubschemaMap.get(subschema),\n                    transformedSubschema: subschema,\n                });\n            }\n        }\n    }\n    if (document != null && extraction != null) {\n        for (const def of extraction.typeDefinitions) {\n            const type = (0,_typeFromAST_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(def);\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_4__.isNamedType)(type)) {\n                throw new Error(`Expected to get named typed but got ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(def)}`);\n            }\n            if (type != null) {\n                addTypeCandidate(typeCandidates, type.name, { type });\n            }\n        }\n        for (const def of extraction.directiveDefs) {\n            const directive = (0,_typeFromAST_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(def);\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_7__.isDirective)(directive)) {\n                throw new Error(`Expected to get directive type but got ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(def)}`);\n            }\n            directiveMap[directive.name] = directive;\n        }\n        if (extraction.extensionDefs.length > 0) {\n            extensions.push({\n                ...document,\n                definitions: extraction.extensionDefs,\n            });\n        }\n    }\n    for (const type of types) {\n        addTypeCandidate(typeCandidates, type.name, { type });\n    }\n    return [typeCandidates, rootTypeNameMap, extensions];\n}\nfunction getRootTypeNameMap({ schemaDef, schemaExtensions, }) {\n    const rootTypeNameMap = {\n        query: 'Query',\n        mutation: 'Mutation',\n        subscription: 'Subscription',\n    };\n    const allNodes = schemaExtensions.slice();\n    if (schemaDef != null) {\n        allNodes.unshift(schemaDef);\n    }\n    for (const node of allNodes) {\n        if (node.operationTypes != null) {\n            for (const operationType of node.operationTypes) {\n                rootTypeNameMap[operationType.operation] = operationType.type.name.value;\n            }\n        }\n    }\n    return rootTypeNameMap;\n}\nfunction addTypeCandidate(typeCandidates, name, typeCandidate) {\n    if (!(name in typeCandidates)) {\n        typeCandidates[name] = [];\n    }\n    typeCandidates[name].push(typeCandidate);\n}\nfunction buildTypes({ typeCandidates, directives, stitchingInfo, rootTypeNames, onTypeConflict, mergeTypes, typeMergingOptions, }) {\n    const typeMap = Object.create(null);\n    for (const typeName in typeCandidates) {\n        if (rootTypeNames.includes(typeName) ||\n            (mergeTypes === true && !typeCandidates[typeName].some(candidate => (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isSpecifiedScalarType)(candidate.type))) ||\n            (typeof mergeTypes === 'function' && mergeTypes(typeCandidates[typeName], typeName)) ||\n            (Array.isArray(mergeTypes) && mergeTypes.includes(typeName)) ||\n            (stitchingInfo != null && typeName in stitchingInfo.mergedTypes)) {\n            typeMap[typeName] = (0,_mergeCandidates_js__WEBPACK_IMPORTED_MODULE_9__.mergeCandidates)(typeName, typeCandidates[typeName], typeMergingOptions);\n        }\n        else {\n            const candidateSelector = onTypeConflict != null\n                ? onTypeConflictToCandidateSelector(onTypeConflict)\n                : (cands) => cands[cands.length - 1];\n            typeMap[typeName] = candidateSelector(typeCandidates[typeName]).type;\n        }\n    }\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_10__.rewireTypes)(typeMap, directives);\n}\nfunction onTypeConflictToCandidateSelector(onTypeConflict) {\n    return cands => cands.reduce((prev, next) => {\n        const type = onTypeConflict(prev.type, next.type, {\n            left: {\n                subschema: prev.subschema,\n                transformedSubschema: prev.transformedSubschema,\n            },\n            right: {\n                subschema: next.subschema,\n                transformedSubschema: next.transformedSubschema,\n            },\n        });\n        if (prev.type === type) {\n            return prev;\n        }\n        else if (next.type === type) {\n            return next;\n        }\n        return {\n            schemaName: 'unknown',\n            type,\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeCandidates.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeFromAST.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeFromAST.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/comments.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nconst backcompatOptions = { commentDescriptions: true };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeFromAST);\nfunction typeFromAST(node) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION:\n            return makeObjectType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_DEFINITION:\n            return makeInterfaceType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_DEFINITION:\n            return makeEnumType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_DEFINITION:\n            return makeUnionType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_DEFINITION:\n            return makeScalarType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            return makeInputObjectType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DIRECTIVE_DEFINITION:\n            return makeDirective(node);\n        default:\n            return null;\n    }\n}\nfunction makeObjectType(node) {\n    const config = {\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        interfaces: () => { var _a; return ((_a = node.interfaces) === null || _a === void 0 ? void 0 : _a.map(iface => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createNamedStub)(iface.name.value, 'interface'))) || []; },\n        fields: () => (node.fields != null ? makeFields(node.fields) : {}),\n        astNode: node,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLObjectType(config);\n}\nfunction makeInterfaceType(node) {\n    const config = {\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        interfaces: () => {\n            var _a;\n            return (_a = node.interfaces) === null || _a === void 0 ? void 0 : _a.map(iface => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createNamedStub)(iface.name.value, 'interface'));\n        },\n        fields: () => (node.fields != null ? makeFields(node.fields) : {}),\n        astNode: node,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInterfaceType(config);\n}\nfunction makeEnumType(node) {\n    var _a, _b;\n    const values = (_b = (_a = node.values) === null || _a === void 0 ? void 0 : _a.reduce((prev, value) => ({\n        ...prev,\n        [value.name.value]: {\n            description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(value, backcompatOptions),\n            deprecationReason: getDeprecationReason(value),\n            astNode: value,\n        },\n    }), {})) !== null && _b !== void 0 ? _b : {};\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLEnumType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        values,\n        astNode: node,\n    });\n}\nfunction makeUnionType(node) {\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLUnionType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        types: () => { var _a, _b; return (_b = (_a = node.types) === null || _a === void 0 ? void 0 : _a.map(type => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createNamedStub)(type.name.value, 'object'))) !== null && _b !== void 0 ? _b : []; },\n        astNode: node,\n    });\n}\nfunction makeScalarType(node) {\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLScalarType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        astNode: node,\n        // TODO: serialize default property setting can be dropped once\n        // upstream graphql-js TypeScript typings are updated, likely in v16\n        serialize: value => value,\n    });\n}\nfunction makeInputObjectType(node) {\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInputObjectType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        fields: () => (node.fields ? makeValues(node.fields) : {}),\n        astNode: node,\n    });\n}\nfunction makeFields(nodes) {\n    return nodes.reduce((prev, node) => {\n        var _a;\n        return ({\n            ...prev,\n            [node.name.value]: {\n                type: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createStub)(node.type, 'output'),\n                description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n                args: makeValues((_a = node.arguments) !== null && _a !== void 0 ? _a : []),\n                deprecationReason: getDeprecationReason(node),\n                astNode: node,\n            },\n        });\n    }, {});\n}\nfunction makeValues(nodes) {\n    return nodes.reduce((prev, node) => ({\n        ...prev,\n        [node.name.value]: {\n            type: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createStub)(node.type, 'input'),\n            defaultValue: node.defaultValue !== undefined ? (0,graphql__WEBPACK_IMPORTED_MODULE_4__.valueFromASTUntyped)(node.defaultValue) : undefined,\n            description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n            astNode: node,\n        },\n    }), {});\n}\nfunction isLocationValue(value) {\n    return value in graphql__WEBPACK_IMPORTED_MODULE_5__.DirectiveLocation;\n}\nfunction makeDirective(node) {\n    var _a;\n    const locations = [];\n    for (const location of node.locations) {\n        const locationValue = location.value;\n        if (isLocationValue(locationValue)) {\n            locations.push(locationValue);\n        }\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLDirective({\n        name: node.name.value,\n        description: node.description != null ? node.description.value : null,\n        locations: locations,\n        isRepeatable: node.repeatable,\n        args: makeValues((_a = node.arguments) !== null && _a !== void 0 ? _a : []),\n        astNode: node,\n    });\n}\nfunction getDeprecationReason(node) {\n    const deprecated = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeprecatedDirective, node);\n    return deprecated === null || deprecated === void 0 ? void 0 : deprecated['reason'];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/typeFromAST.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/types.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/types.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValidationLevel: () => (/* binding */ ValidationLevel)\n/* harmony export */ });\nvar ValidationLevel;\n(function (ValidationLevel) {\n    ValidationLevel[\"Error\"] = \"error\";\n    ValidationLevel[\"Warn\"] = \"warn\";\n    ValidationLevel[\"Off\"] = \"off\";\n})(ValidationLevel || (ValidationLevel = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMENBQTBDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvZXNtL3R5cGVzLmpzPzI4YTkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBWYWxpZGF0aW9uTGV2ZWw7XG4oZnVuY3Rpb24gKFZhbGlkYXRpb25MZXZlbCkge1xuICAgIFZhbGlkYXRpb25MZXZlbFtcIkVycm9yXCJdID0gXCJlcnJvclwiO1xuICAgIFZhbGlkYXRpb25MZXZlbFtcIldhcm5cIl0gPSBcIndhcm5cIjtcbiAgICBWYWxpZGF0aW9uTGV2ZWxbXCJPZmZcIl0gPSBcIm9mZlwiO1xufSkoVmFsaWRhdGlvbkxldmVsIHx8IChWYWxpZGF0aW9uTGV2ZWwgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitch/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/defaultStitchingDirectiveOptions.js":
/*!***********************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/defaultStitchingDirectiveOptions.js ***!
  \***********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultStitchingDirectiveOptions: () => (/* binding */ defaultStitchingDirectiveOptions)\n/* harmony export */ });\nconst defaultStitchingDirectiveOptions = {\n    keyDirectiveName: 'key',\n    computedDirectiveName: 'computed',\n    canonicalDirectiveName: 'canonical',\n    mergeDirectiveName: 'merge',\n    pathToDirectivesInExtensions: ['directives'],\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL2RlZmF1bHRTdGl0Y2hpbmdEaXJlY3RpdmVPcHRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL2RlZmF1bHRTdGl0Y2hpbmdEaXJlY3RpdmVPcHRpb25zLmpzP2E1NDIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHRTdGl0Y2hpbmdEaXJlY3RpdmVPcHRpb25zID0ge1xuICAgIGtleURpcmVjdGl2ZU5hbWU6ICdrZXknLFxuICAgIGNvbXB1dGVkRGlyZWN0aXZlTmFtZTogJ2NvbXB1dGVkJyxcbiAgICBjYW5vbmljYWxEaXJlY3RpdmVOYW1lOiAnY2Fub25pY2FsJyxcbiAgICBtZXJnZURpcmVjdGl2ZU5hbWU6ICdtZXJnZScsXG4gICAgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9uczogWydkaXJlY3RpdmVzJ10sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/defaultStitchingDirectiveOptions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/extractVariables.js":
/*!*******************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/extractVariables.js ***!
  \*******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractVariables: () => (/* binding */ extractVariables)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n\nfunction extractVariables(inputValue) {\n    const path = [];\n    const variablePaths = Object.create(null);\n    const keyPathVisitor = {\n        enter: (_node, key) => {\n            if (typeof key === 'number') {\n                path.push(key);\n            }\n        },\n        leave: (_node, key) => {\n            if (typeof key === 'number') {\n                path.pop();\n            }\n        },\n    };\n    const fieldPathVisitor = {\n        enter: (node) => {\n            path.push(node.name.value);\n        },\n        leave: () => {\n            path.pop();\n        },\n    };\n    const variableVisitor = {\n        enter: (node, key) => {\n            if (typeof key === 'number') {\n                variablePaths[node.name.value] = path.concat([key]);\n            }\n            else {\n                variablePaths[node.name.value] = path.slice();\n            }\n            return {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL,\n            };\n        },\n    };\n    const newInputValue = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visit)(inputValue, {\n        [graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT]: keyPathVisitor,\n        [graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST]: keyPathVisitor,\n        [graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_FIELD]: fieldPathVisitor,\n        [graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE]: variableVisitor,\n    });\n    return {\n        inputValue: newInputValue,\n        variablePaths,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL2V4dHJhY3RWYXJpYWJsZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBQy9CO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5Q0FBSTtBQUMxQjtBQUNBLFNBQVM7QUFDVDtBQUNBLDBCQUEwQiw4Q0FBSztBQUMvQixTQUFTLHlDQUFJO0FBQ2IsU0FBUyx5Q0FBSTtBQUNiLFNBQVMseUNBQUk7QUFDYixTQUFTLHlDQUFJO0FBQ2IsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaGluZy1kaXJlY3RpdmVzL2VzbS9leHRyYWN0VmFyaWFibGVzLmpzPzIxZTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgdmlzaXQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0VmFyaWFibGVzKGlucHV0VmFsdWUpIHtcbiAgICBjb25zdCBwYXRoID0gW107XG4gICAgY29uc3QgdmFyaWFibGVQYXRocyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgY29uc3Qga2V5UGF0aFZpc2l0b3IgPSB7XG4gICAgICAgIGVudGVyOiAoX25vZGUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBrZXkgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgcGF0aC5wdXNoKGtleSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGxlYXZlOiAoX25vZGUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBrZXkgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgcGF0aC5wb3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9O1xuICAgIGNvbnN0IGZpZWxkUGF0aFZpc2l0b3IgPSB7XG4gICAgICAgIGVudGVyOiAobm9kZSkgPT4ge1xuICAgICAgICAgICAgcGF0aC5wdXNoKG5vZGUubmFtZS52YWx1ZSk7XG4gICAgICAgIH0sXG4gICAgICAgIGxlYXZlOiAoKSA9PiB7XG4gICAgICAgICAgICBwYXRoLnBvcCgpO1xuICAgICAgICB9LFxuICAgIH07XG4gICAgY29uc3QgdmFyaWFibGVWaXNpdG9yID0ge1xuICAgICAgICBlbnRlcjogKG5vZGUsIGtleSkgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBrZXkgPT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgdmFyaWFibGVQYXRoc1tub2RlLm5hbWUudmFsdWVdID0gcGF0aC5jb25jYXQoW2tleV0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgdmFyaWFibGVQYXRoc1tub2RlLm5hbWUudmFsdWVdID0gcGF0aC5zbGljZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk5VTEwsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH07XG4gICAgY29uc3QgbmV3SW5wdXRWYWx1ZSA9IHZpc2l0KGlucHV0VmFsdWUsIHtcbiAgICAgICAgW0tpbmQuT0JKRUNUXToga2V5UGF0aFZpc2l0b3IsXG4gICAgICAgIFtLaW5kLkxJU1RdOiBrZXlQYXRoVmlzaXRvcixcbiAgICAgICAgW0tpbmQuT0JKRUNUX0ZJRUxEXTogZmllbGRQYXRoVmlzaXRvcixcbiAgICAgICAgW0tpbmQuVkFSSUFCTEVdOiB2YXJpYWJsZVZpc2l0b3IsXG4gICAgfSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5wdXRWYWx1ZTogbmV3SW5wdXRWYWx1ZSxcbiAgICAgICAgdmFyaWFibGVQYXRocyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/extractVariables.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/federationToStitchingSDL.js":
/*!***************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/federationToStitchingSDL.js ***!
  \***************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   federationToStitchingSDL: () => (/* binding */ federationToStitchingSDL)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _stitchingDirectives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stitchingDirectives.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectives.js\");\n// Taken from https://github.com/gmac/federation-to-stitching-sdl/blob/main/index.js\n\n\nconst extensionKind = /Extension$/;\nconst entityKinds = [\n    graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION,\n    graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_EXTENSION,\n    graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_DEFINITION,\n    graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_EXTENSION,\n];\nfunction isEntityKind(def) {\n    return entityKinds.includes(def.kind);\n}\nfunction getQueryTypeDef(definitions) {\n    var _a;\n    const schemaDef = definitions.find(def => def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION);\n    const typeName = schemaDef\n        ? (_a = schemaDef.operationTypes.find(({ operation }) => operation === 'query')) === null || _a === void 0 ? void 0 : _a.type.name.value\n        : 'Query';\n    return definitions.find(def => def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION && def.name.value === typeName);\n}\n// Federation services are actually fairly complex,\n// as the `buildFederatedSchema` helper does a fair amount\n// of hidden work to setup the Federation schema specification:\n// https://www.apollographql.com/docs/federation/federation-spec/#federation-schema-specification\nfunction federationToStitchingSDL(federationSDL, stitchingConfig = (0,_stitchingDirectives_js__WEBPACK_IMPORTED_MODULE_1__.stitchingDirectives)()) {\n    const doc = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.parse)(federationSDL);\n    const entityTypes = [];\n    const baseTypeNames = doc.definitions.reduce((memo, typeDef) => {\n        if (!extensionKind.test(typeDef.kind) && 'name' in typeDef && typeDef.name) {\n            memo[typeDef.name.value] = true;\n        }\n        return memo;\n    }, {});\n    doc.definitions.forEach(typeDef => {\n        var _a, _b, _c;\n        // Un-extend all types (remove \"extends\" keywords)...\n        // extended types are invalid GraphQL without a local base type to extend from.\n        // Stitching merges flat types in lieu of hierarchical extensions.\n        if (extensionKind.test(typeDef.kind) && 'name' in typeDef && typeDef.name && !baseTypeNames[typeDef.name.value]) {\n            typeDef.kind = typeDef.kind.replace(extensionKind, 'Definition');\n        }\n        if (!isEntityKind(typeDef))\n            return;\n        // Find object definitions with \"@key\" directives;\n        // these are federated entities that get turned into merged types.\n        const keyDirs = [];\n        const otherDirs = [];\n        (_a = typeDef.directives) === null || _a === void 0 ? void 0 : _a.forEach(dir => {\n            if (dir.name.value === 'key') {\n                keyDirs.push(dir);\n            }\n            else {\n                otherDirs.push(dir);\n            }\n        });\n        if (!keyDirs.length)\n            return;\n        // Setup stitching MergedTypeConfig for all federated entities:\n        const selectionSet = `{ ${keyDirs.map((dir) => dir.arguments[0].value.value).join(' ')} }`;\n        const keyFields = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.parse)(selectionSet).definitions[0].selectionSet.selections.map((sel) => sel.name.value);\n        const keyDir = keyDirs[0];\n        keyDir.name.value = stitchingConfig.keyDirective.name;\n        keyDir.arguments[0].name.value = 'selectionSet';\n        keyDir.arguments[0].value.value = selectionSet;\n        typeDef.directives = [keyDir, ...otherDirs];\n        // Remove non-key \"@external\" fields from the type...\n        // the stitching query planner expects services to only publish their own fields.\n        // This makes \"@provides\" moot because the query planner can automate the logic.\n        typeDef.fields = (_b = typeDef.fields) === null || _b === void 0 ? void 0 : _b.filter(fieldDef => {\n            var _a;\n            return (keyFields.includes(fieldDef.name.value) || !((_a = fieldDef.directives) === null || _a === void 0 ? void 0 : _a.find(dir => dir.name.value === 'external')));\n        });\n        // Discard remaining \"@external\" directives and any \"@provides\" directives\n        (_c = typeDef.fields) === null || _c === void 0 ? void 0 : _c.forEach((fieldDef) => {\n            fieldDef.directives = fieldDef.directives.filter((dir) => !/^(external|provides)$/.test(dir.name.value));\n            fieldDef.directives.forEach((dir) => {\n                if (dir.name.value === 'requires') {\n                    dir.name.value = stitchingConfig.computedDirective.name;\n                    dir.arguments[0].name.value = 'selectionSet';\n                    dir.arguments[0].value.value = `{ ${dir.arguments[0].value.value} }`;\n                }\n            });\n        });\n        if (typeDef.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION || typeDef.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_EXTENSION) {\n            entityTypes.push(typeDef.name.value);\n        }\n    });\n    // Federation service SDLs are incomplete because they omit the federation spec itself...\n    // (https://www.apollographql.com/docs/federation/federation-spec/#federation-schema-specification)\n    // To make federation SDLs into valid and parsable GraphQL schemas,\n    // we must fill in the missing details from the specification.\n    if (entityTypes.length) {\n        const queryDef = getQueryTypeDef(doc.definitions);\n        const entitiesSchema = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.parse)(/* GraphQL */ `\n      scalar _Any\n      union _Entity = ${entityTypes.filter((v, i, a) => a.indexOf(v) === i).join(' | ')}\n      type Query { _entities(representations: [_Any!]!): [_Entity]! @${stitchingConfig.mergeDirective.name} }\n    `).definitions;\n        doc.definitions.push(entitiesSchema[0]);\n        doc.definitions.push(entitiesSchema[1]);\n        if (queryDef) {\n            queryDef.fields.push(entitiesSchema[2].fields[0]);\n        }\n        else {\n            doc.definitions.push(entitiesSchema[2]);\n        }\n    }\n    return [stitchingConfig.stitchingDirectivesTypeDefs, (0,graphql__WEBPACK_IMPORTED_MODULE_3__.print)(doc)].join('\\n');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/federationToStitchingSDL.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/getSourcePaths.js":
/*!*****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/getSourcePaths.js ***!
  \*****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getSourcePaths: () => (/* binding */ getSourcePaths)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var _pathsFromSelectionSet_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./pathsFromSelectionSet.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/pathsFromSelectionSet.js\");\n\n\nfunction getSourcePaths(mappingInstructions, selectionSet) {\n    const sourcePaths = [];\n    for (const mappingInstruction of mappingInstructions) {\n        const { sourcePath } = mappingInstruction;\n        if (sourcePath.length) {\n            sourcePaths.push(sourcePath);\n            continue;\n        }\n        if (selectionSet == null) {\n            continue;\n        }\n        const paths = (0,_pathsFromSelectionSet_js__WEBPACK_IMPORTED_MODULE_0__.pathsFromSelectionSet)(selectionSet);\n        for (const path of paths) {\n            sourcePaths.push(path);\n        }\n        sourcePaths.push([graphql__WEBPACK_IMPORTED_MODULE_1__.TypeNameMetaFieldDef.name]);\n    }\n    return sourcePaths;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL2dldFNvdXJjZVBhdGhzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUErQztBQUNvQjtBQUM1RDtBQUNQO0FBQ0E7QUFDQSxnQkFBZ0IsYUFBYTtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixnRkFBcUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlEQUFvQjtBQUM5QztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaGluZy1kaXJlY3RpdmVzL2VzbS9nZXRTb3VyY2VQYXRocy5qcz81MjNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFR5cGVOYW1lTWV0YUZpZWxkRGVmIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBwYXRoc0Zyb21TZWxlY3Rpb25TZXQgfSBmcm9tICcuL3BhdGhzRnJvbVNlbGVjdGlvblNldC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0U291cmNlUGF0aHMobWFwcGluZ0luc3RydWN0aW9ucywgc2VsZWN0aW9uU2V0KSB7XG4gICAgY29uc3Qgc291cmNlUGF0aHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IG1hcHBpbmdJbnN0cnVjdGlvbiBvZiBtYXBwaW5nSW5zdHJ1Y3Rpb25zKSB7XG4gICAgICAgIGNvbnN0IHsgc291cmNlUGF0aCB9ID0gbWFwcGluZ0luc3RydWN0aW9uO1xuICAgICAgICBpZiAoc291cmNlUGF0aC5sZW5ndGgpIHtcbiAgICAgICAgICAgIHNvdXJjZVBhdGhzLnB1c2goc291cmNlUGF0aCk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoc2VsZWN0aW9uU2V0ID09IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhdGhzID0gcGF0aHNGcm9tU2VsZWN0aW9uU2V0KHNlbGVjdGlvblNldCk7XG4gICAgICAgIGZvciAoY29uc3QgcGF0aCBvZiBwYXRocykge1xuICAgICAgICAgICAgc291cmNlUGF0aHMucHVzaChwYXRoKTtcbiAgICAgICAgfVxuICAgICAgICBzb3VyY2VQYXRocy5wdXNoKFtUeXBlTmFtZU1ldGFGaWVsZERlZi5uYW1lXSk7XG4gICAgfVxuICAgIHJldHVybiBzb3VyY2VQYXRocztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/getSourcePaths.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/parseMergeArgsExpr.js":
/*!*********************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/parseMergeArgsExpr.js ***!
  \*********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseMergeArgsExpr: () => (/* binding */ parseMergeArgsExpr)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var _extractVariables_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./extractVariables.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/extractVariables.js\");\n/* harmony import */ var _preparseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./preparseMergeArgsExpr.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/preparseMergeArgsExpr.js\");\n/* harmony import */ var _properties_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./properties.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/properties.js\");\n/* harmony import */ var _getSourcePaths_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getSourcePaths.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/getSourcePaths.js\");\n\n\n\n\n\nfunction parseMergeArgsExpr(mergeArgsExpr, selectionSet) {\n    const { mergeArgsExpr: newMergeArgsExpr, expansionExpressions } = (0,_preparseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_0__.preparseMergeArgsExpr)(mergeArgsExpr);\n    const inputValue = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.parseValue)(`{ ${newMergeArgsExpr} }`, { noLocation: true });\n    const { inputValue: newInputValue, variablePaths } = (0,_extractVariables_js__WEBPACK_IMPORTED_MODULE_2__.extractVariables)(inputValue);\n    if (!Object.keys(expansionExpressions).length) {\n        if (!Object.keys(variablePaths).length) {\n            throw new Error('Merge arguments must declare a key.');\n        }\n        const mappingInstructions = getMappingInstructions(variablePaths);\n        const usedProperties = (0,_properties_js__WEBPACK_IMPORTED_MODULE_3__.propertyTreeFromPaths)((0,_getSourcePaths_js__WEBPACK_IMPORTED_MODULE_4__.getSourcePaths)(mappingInstructions, selectionSet));\n        return { args: (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromASTUntyped)(newInputValue), usedProperties, mappingInstructions };\n    }\n    const expansionRegEx = new RegExp(`^${_preparseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_0__.EXPANSION_PREFIX}[0-9]+$`);\n    for (const variableName in variablePaths) {\n        if (!variableName.match(expansionRegEx)) {\n            throw new Error('Expansions cannot be mixed with single key declarations.');\n        }\n    }\n    const expansions = [];\n    const sourcePaths = [];\n    for (const variableName in expansionExpressions) {\n        const str = expansionExpressions[variableName];\n        const valuePath = variablePaths[variableName];\n        const { inputValue: expansionInputValue, variablePaths: expansionVariablePaths } = (0,_extractVariables_js__WEBPACK_IMPORTED_MODULE_2__.extractVariables)((0,graphql__WEBPACK_IMPORTED_MODULE_1__.parseValue)(`${str}`, { noLocation: true }));\n        if (!Object.keys(expansionVariablePaths).length) {\n            throw new Error('Merge arguments must declare a key.');\n        }\n        const mappingInstructions = getMappingInstructions(expansionVariablePaths);\n        const value = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromASTUntyped)(expansionInputValue);\n        sourcePaths.push(...(0,_getSourcePaths_js__WEBPACK_IMPORTED_MODULE_4__.getSourcePaths)(mappingInstructions, selectionSet));\n        assertNotWithinList(valuePath);\n        expansions.push({\n            valuePath,\n            value,\n            mappingInstructions,\n        });\n    }\n    const usedProperties = (0,_properties_js__WEBPACK_IMPORTED_MODULE_3__.propertyTreeFromPaths)(sourcePaths);\n    return { args: (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromASTUntyped)(newInputValue), usedProperties, expansions };\n}\nfunction getMappingInstructions(variablePaths) {\n    const mappingInstructions = [];\n    for (const keyPath in variablePaths) {\n        const valuePath = variablePaths[keyPath];\n        const splitKeyPath = keyPath.split(_preparseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_0__.KEY_DELIMITER).slice(1);\n        assertNotWithinList(valuePath);\n        mappingInstructions.push({\n            destinationPath: valuePath,\n            sourcePath: splitKeyPath,\n        });\n    }\n    return mappingInstructions;\n}\nfunction assertNotWithinList(path) {\n    for (const pathSegment of path) {\n        if (typeof pathSegment === 'number') {\n            throw new Error('Insertions cannot be made into a list.');\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3BhcnNlTWVyZ2VBcmdzRXhwci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTBEO0FBQ0Q7QUFDMkM7QUFDNUM7QUFDSDtBQUM5QztBQUNQLFlBQVksd0RBQXdELEVBQUUsZ0ZBQXFCO0FBQzNGLHVCQUF1QixtREFBVSxJQUFJLEVBQUUsbUJBQW1CLEtBQUssa0JBQWtCO0FBQ2pGLFlBQVksMkNBQTJDLEVBQUUsc0VBQWdCO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IscUVBQXFCLENBQUMsa0VBQWM7QUFDbkUsaUJBQWlCLE1BQU0sNERBQW1CO0FBQzFDO0FBQ0EsMENBQTBDLHVFQUFnQixDQUFDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHlFQUF5RSxFQUFFLHNFQUFnQixDQUFDLG1EQUFVLElBQUksSUFBSSxLQUFLLGtCQUFrQjtBQUNySjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiw0REFBbUI7QUFDekMsNEJBQTRCLGtFQUFjO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSwyQkFBMkIscUVBQXFCO0FBQ2hELGFBQWEsTUFBTSw0REFBbUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxvRUFBYTtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3BhcnNlTWVyZ2VBcmdzRXhwci5qcz9kNTRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlVmFsdWUsIHZhbHVlRnJvbUFTVFVudHlwZWQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGV4dHJhY3RWYXJpYWJsZXMgfSBmcm9tICcuL2V4dHJhY3RWYXJpYWJsZXMuanMnO1xuaW1wb3J0IHsgRVhQQU5TSU9OX1BSRUZJWCwgS0VZX0RFTElNSVRFUiwgcHJlcGFyc2VNZXJnZUFyZ3NFeHByIH0gZnJvbSAnLi9wcmVwYXJzZU1lcmdlQXJnc0V4cHIuanMnO1xuaW1wb3J0IHsgcHJvcGVydHlUcmVlRnJvbVBhdGhzIH0gZnJvbSAnLi9wcm9wZXJ0aWVzLmpzJztcbmltcG9ydCB7IGdldFNvdXJjZVBhdGhzIH0gZnJvbSAnLi9nZXRTb3VyY2VQYXRocy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VNZXJnZUFyZ3NFeHByKG1lcmdlQXJnc0V4cHIsIHNlbGVjdGlvblNldCkge1xuICAgIGNvbnN0IHsgbWVyZ2VBcmdzRXhwcjogbmV3TWVyZ2VBcmdzRXhwciwgZXhwYW5zaW9uRXhwcmVzc2lvbnMgfSA9IHByZXBhcnNlTWVyZ2VBcmdzRXhwcihtZXJnZUFyZ3NFeHByKTtcbiAgICBjb25zdCBpbnB1dFZhbHVlID0gcGFyc2VWYWx1ZShgeyAke25ld01lcmdlQXJnc0V4cHJ9IH1gLCB7IG5vTG9jYXRpb246IHRydWUgfSk7XG4gICAgY29uc3QgeyBpbnB1dFZhbHVlOiBuZXdJbnB1dFZhbHVlLCB2YXJpYWJsZVBhdGhzIH0gPSBleHRyYWN0VmFyaWFibGVzKGlucHV0VmFsdWUpO1xuICAgIGlmICghT2JqZWN0LmtleXMoZXhwYW5zaW9uRXhwcmVzc2lvbnMpLmxlbmd0aCkge1xuICAgICAgICBpZiAoIU9iamVjdC5rZXlzKHZhcmlhYmxlUGF0aHMpLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNZXJnZSBhcmd1bWVudHMgbXVzdCBkZWNsYXJlIGEga2V5LicpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1hcHBpbmdJbnN0cnVjdGlvbnMgPSBnZXRNYXBwaW5nSW5zdHJ1Y3Rpb25zKHZhcmlhYmxlUGF0aHMpO1xuICAgICAgICBjb25zdCB1c2VkUHJvcGVydGllcyA9IHByb3BlcnR5VHJlZUZyb21QYXRocyhnZXRTb3VyY2VQYXRocyhtYXBwaW5nSW5zdHJ1Y3Rpb25zLCBzZWxlY3Rpb25TZXQpKTtcbiAgICAgICAgcmV0dXJuIHsgYXJnczogdmFsdWVGcm9tQVNUVW50eXBlZChuZXdJbnB1dFZhbHVlKSwgdXNlZFByb3BlcnRpZXMsIG1hcHBpbmdJbnN0cnVjdGlvbnMgfTtcbiAgICB9XG4gICAgY29uc3QgZXhwYW5zaW9uUmVnRXggPSBuZXcgUmVnRXhwKGBeJHtFWFBBTlNJT05fUFJFRklYfVswLTldKyRgKTtcbiAgICBmb3IgKGNvbnN0IHZhcmlhYmxlTmFtZSBpbiB2YXJpYWJsZVBhdGhzKSB7XG4gICAgICAgIGlmICghdmFyaWFibGVOYW1lLm1hdGNoKGV4cGFuc2lvblJlZ0V4KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBhbnNpb25zIGNhbm5vdCBiZSBtaXhlZCB3aXRoIHNpbmdsZSBrZXkgZGVjbGFyYXRpb25zLicpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGV4cGFuc2lvbnMgPSBbXTtcbiAgICBjb25zdCBzb3VyY2VQYXRocyA9IFtdO1xuICAgIGZvciAoY29uc3QgdmFyaWFibGVOYW1lIGluIGV4cGFuc2lvbkV4cHJlc3Npb25zKSB7XG4gICAgICAgIGNvbnN0IHN0ciA9IGV4cGFuc2lvbkV4cHJlc3Npb25zW3ZhcmlhYmxlTmFtZV07XG4gICAgICAgIGNvbnN0IHZhbHVlUGF0aCA9IHZhcmlhYmxlUGF0aHNbdmFyaWFibGVOYW1lXTtcbiAgICAgICAgY29uc3QgeyBpbnB1dFZhbHVlOiBleHBhbnNpb25JbnB1dFZhbHVlLCB2YXJpYWJsZVBhdGhzOiBleHBhbnNpb25WYXJpYWJsZVBhdGhzIH0gPSBleHRyYWN0VmFyaWFibGVzKHBhcnNlVmFsdWUoYCR7c3RyfWAsIHsgbm9Mb2NhdGlvbjogdHJ1ZSB9KSk7XG4gICAgICAgIGlmICghT2JqZWN0LmtleXMoZXhwYW5zaW9uVmFyaWFibGVQYXRocykubGVuZ3RoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01lcmdlIGFyZ3VtZW50cyBtdXN0IGRlY2xhcmUgYSBrZXkuJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbWFwcGluZ0luc3RydWN0aW9ucyA9IGdldE1hcHBpbmdJbnN0cnVjdGlvbnMoZXhwYW5zaW9uVmFyaWFibGVQYXRocyk7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gdmFsdWVGcm9tQVNUVW50eXBlZChleHBhbnNpb25JbnB1dFZhbHVlKTtcbiAgICAgICAgc291cmNlUGF0aHMucHVzaCguLi5nZXRTb3VyY2VQYXRocyhtYXBwaW5nSW5zdHJ1Y3Rpb25zLCBzZWxlY3Rpb25TZXQpKTtcbiAgICAgICAgYXNzZXJ0Tm90V2l0aGluTGlzdCh2YWx1ZVBhdGgpO1xuICAgICAgICBleHBhbnNpb25zLnB1c2goe1xuICAgICAgICAgICAgdmFsdWVQYXRoLFxuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICBtYXBwaW5nSW5zdHJ1Y3Rpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3QgdXNlZFByb3BlcnRpZXMgPSBwcm9wZXJ0eVRyZWVGcm9tUGF0aHMoc291cmNlUGF0aHMpO1xuICAgIHJldHVybiB7IGFyZ3M6IHZhbHVlRnJvbUFTVFVudHlwZWQobmV3SW5wdXRWYWx1ZSksIHVzZWRQcm9wZXJ0aWVzLCBleHBhbnNpb25zIH07XG59XG5mdW5jdGlvbiBnZXRNYXBwaW5nSW5zdHJ1Y3Rpb25zKHZhcmlhYmxlUGF0aHMpIHtcbiAgICBjb25zdCBtYXBwaW5nSW5zdHJ1Y3Rpb25zID0gW107XG4gICAgZm9yIChjb25zdCBrZXlQYXRoIGluIHZhcmlhYmxlUGF0aHMpIHtcbiAgICAgICAgY29uc3QgdmFsdWVQYXRoID0gdmFyaWFibGVQYXRoc1trZXlQYXRoXTtcbiAgICAgICAgY29uc3Qgc3BsaXRLZXlQYXRoID0ga2V5UGF0aC5zcGxpdChLRVlfREVMSU1JVEVSKS5zbGljZSgxKTtcbiAgICAgICAgYXNzZXJ0Tm90V2l0aGluTGlzdCh2YWx1ZVBhdGgpO1xuICAgICAgICBtYXBwaW5nSW5zdHJ1Y3Rpb25zLnB1c2goe1xuICAgICAgICAgICAgZGVzdGluYXRpb25QYXRoOiB2YWx1ZVBhdGgsXG4gICAgICAgICAgICBzb3VyY2VQYXRoOiBzcGxpdEtleVBhdGgsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbWFwcGluZ0luc3RydWN0aW9ucztcbn1cbmZ1bmN0aW9uIGFzc2VydE5vdFdpdGhpbkxpc3QocGF0aCkge1xuICAgIGZvciAoY29uc3QgcGF0aFNlZ21lbnQgb2YgcGF0aCkge1xuICAgICAgICBpZiAodHlwZW9mIHBhdGhTZWdtZW50ID09PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnNlcnRpb25zIGNhbm5vdCBiZSBtYWRlIGludG8gYSBsaXN0LicpO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/parseMergeArgsExpr.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/pathsFromSelectionSet.js":
/*!************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/pathsFromSelectionSet.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pathsFromSelectionSet: () => (/* binding */ pathsFromSelectionSet)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction pathsFromSelectionSet(selectionSet, path = []) {\n    var _a;\n    const paths = [];\n    for (const selection of selectionSet.selections) {\n        const additions = (_a = pathsFromSelection(selection, path)) !== null && _a !== void 0 ? _a : [];\n        for (const addition of additions) {\n            paths.push(addition);\n        }\n    }\n    return paths;\n}\nfunction pathsFromSelection(selection, path) {\n    var _a, _b;\n    if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD) {\n        const responseKey = (_b = (_a = selection.alias) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : selection.name.value;\n        if (selection.selectionSet) {\n            return pathsFromSelectionSet(selection.selectionSet, path.concat([responseKey]));\n        }\n        else {\n            return [path.concat([responseKey])];\n        }\n    }\n    else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT) {\n        return pathsFromSelectionSet(selection.selectionSet, path);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3BhdGhzRnJvbVNlbGVjdGlvblNldC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUN4QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQix5Q0FBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLHlDQUFJO0FBQ3BDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3BhdGhzRnJvbVNlbGVjdGlvblNldC5qcz9iNmZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBwYXRoc0Zyb21TZWxlY3Rpb25TZXQoc2VsZWN0aW9uU2V0LCBwYXRoID0gW10pIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgcGF0aHMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHNlbGVjdGlvbiBvZiBzZWxlY3Rpb25TZXQuc2VsZWN0aW9ucykge1xuICAgICAgICBjb25zdCBhZGRpdGlvbnMgPSAoX2EgPSBwYXRoc0Zyb21TZWxlY3Rpb24oc2VsZWN0aW9uLCBwYXRoKSkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgICAgIGZvciAoY29uc3QgYWRkaXRpb24gb2YgYWRkaXRpb25zKSB7XG4gICAgICAgICAgICBwYXRocy5wdXNoKGFkZGl0aW9uKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGF0aHM7XG59XG5mdW5jdGlvbiBwYXRoc0Zyb21TZWxlY3Rpb24oc2VsZWN0aW9uLCBwYXRoKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBpZiAoc2VsZWN0aW9uLmtpbmQgPT09IEtpbmQuRklFTEQpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2VLZXkgPSAoX2IgPSAoX2EgPSBzZWxlY3Rpb24uYWxpYXMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS52YWx1ZSkgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDogc2VsZWN0aW9uLm5hbWUudmFsdWU7XG4gICAgICAgIGlmIChzZWxlY3Rpb24uc2VsZWN0aW9uU2V0KSB7XG4gICAgICAgICAgICByZXR1cm4gcGF0aHNGcm9tU2VsZWN0aW9uU2V0KHNlbGVjdGlvbi5zZWxlY3Rpb25TZXQsIHBhdGguY29uY2F0KFtyZXNwb25zZUtleV0pKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBbcGF0aC5jb25jYXQoW3Jlc3BvbnNlS2V5XSldO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKHNlbGVjdGlvbi5raW5kID09PSBLaW5kLklOTElORV9GUkFHTUVOVCkge1xuICAgICAgICByZXR1cm4gcGF0aHNGcm9tU2VsZWN0aW9uU2V0KHNlbGVjdGlvbi5zZWxlY3Rpb25TZXQsIHBhdGgpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/pathsFromSelectionSet.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/preparseMergeArgsExpr.js":
/*!************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/preparseMergeArgsExpr.js ***!
  \************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EXPANSION_PREFIX: () => (/* binding */ EXPANSION_PREFIX),\n/* harmony export */   KEY_DELIMITER: () => (/* binding */ KEY_DELIMITER),\n/* harmony export */   preparseMergeArgsExpr: () => (/* binding */ preparseMergeArgsExpr)\n/* harmony export */ });\nconst KEY_DELIMITER = '__dot__';\nconst EXPANSION_PREFIX = '__exp';\nfunction preparseMergeArgsExpr(mergeArgsExpr) {\n    const variableRegex = /\\$[_A-Za-z][_A-Za-z0-9.]*/g;\n    const dotRegex = /\\./g;\n    mergeArgsExpr = mergeArgsExpr.replace(variableRegex, variable => variable.replace(dotRegex, KEY_DELIMITER));\n    const segments = mergeArgsExpr.split('[[');\n    const expansionExpressions = Object.create(null);\n    if (segments.length === 1) {\n        return { mergeArgsExpr, expansionExpressions };\n    }\n    let finalSegments = [segments[0]];\n    for (let i = 1; i < segments.length; i++) {\n        const additionalSegments = segments[i].split(']]');\n        if (additionalSegments.length !== 2) {\n            throw new Error(`Each opening \"[[\" must be matched by a closing \"]]\" without nesting.`);\n        }\n        finalSegments = finalSegments.concat(additionalSegments);\n    }\n    let finalMergeArgsExpr = finalSegments[0];\n    for (let i = 1; i < finalSegments.length - 1; i += 2) {\n        const variableName = `${EXPANSION_PREFIX}${(i - 1) / 2 + 1}`;\n        expansionExpressions[variableName] = finalSegments[i];\n        finalMergeArgsExpr += `\\$${variableName}${finalSegments[i + 1]}`;\n    }\n    return { mergeArgsExpr: finalMergeArgsExpr, expansionExpressions };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3ByZXBhcnNlTWVyZ2VBcmdzRXhwci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNBO0FBQ0E7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLG9CQUFvQixxQkFBcUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsOEJBQThCO0FBQ2xELGdDQUFnQyxpQkFBaUIsRUFBRSxnQkFBZ0I7QUFDbkU7QUFDQSxtQ0FBbUMsYUFBYSxFQUFFLHFCQUFxQjtBQUN2RTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3ByZXBhcnNlTWVyZ2VBcmdzRXhwci5qcz8yY2NiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBLRVlfREVMSU1JVEVSID0gJ19fZG90X18nO1xuZXhwb3J0IGNvbnN0IEVYUEFOU0lPTl9QUkVGSVggPSAnX19leHAnO1xuZXhwb3J0IGZ1bmN0aW9uIHByZXBhcnNlTWVyZ2VBcmdzRXhwcihtZXJnZUFyZ3NFeHByKSB7XG4gICAgY29uc3QgdmFyaWFibGVSZWdleCA9IC9cXCRbX0EtWmEtel1bX0EtWmEtejAtOS5dKi9nO1xuICAgIGNvbnN0IGRvdFJlZ2V4ID0gL1xcLi9nO1xuICAgIG1lcmdlQXJnc0V4cHIgPSBtZXJnZUFyZ3NFeHByLnJlcGxhY2UodmFyaWFibGVSZWdleCwgdmFyaWFibGUgPT4gdmFyaWFibGUucmVwbGFjZShkb3RSZWdleCwgS0VZX0RFTElNSVRFUikpO1xuICAgIGNvbnN0IHNlZ21lbnRzID0gbWVyZ2VBcmdzRXhwci5zcGxpdCgnW1snKTtcbiAgICBjb25zdCBleHBhbnNpb25FeHByZXNzaW9ucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgaWYgKHNlZ21lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICByZXR1cm4geyBtZXJnZUFyZ3NFeHByLCBleHBhbnNpb25FeHByZXNzaW9ucyB9O1xuICAgIH1cbiAgICBsZXQgZmluYWxTZWdtZW50cyA9IFtzZWdtZW50c1swXV07XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPCBzZWdtZW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBhZGRpdGlvbmFsU2VnbWVudHMgPSBzZWdtZW50c1tpXS5zcGxpdCgnXV0nKTtcbiAgICAgICAgaWYgKGFkZGl0aW9uYWxTZWdtZW50cy5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgRWFjaCBvcGVuaW5nIFwiW1tcIiBtdXN0IGJlIG1hdGNoZWQgYnkgYSBjbG9zaW5nIFwiXV1cIiB3aXRob3V0IG5lc3RpbmcuYCk7XG4gICAgICAgIH1cbiAgICAgICAgZmluYWxTZWdtZW50cyA9IGZpbmFsU2VnbWVudHMuY29uY2F0KGFkZGl0aW9uYWxTZWdtZW50cyk7XG4gICAgfVxuICAgIGxldCBmaW5hbE1lcmdlQXJnc0V4cHIgPSBmaW5hbFNlZ21lbnRzWzBdO1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgZmluYWxTZWdtZW50cy5sZW5ndGggLSAxOyBpICs9IDIpIHtcbiAgICAgICAgY29uc3QgdmFyaWFibGVOYW1lID0gYCR7RVhQQU5TSU9OX1BSRUZJWH0keyhpIC0gMSkgLyAyICsgMX1gO1xuICAgICAgICBleHBhbnNpb25FeHByZXNzaW9uc1t2YXJpYWJsZU5hbWVdID0gZmluYWxTZWdtZW50c1tpXTtcbiAgICAgICAgZmluYWxNZXJnZUFyZ3NFeHByICs9IGBcXCQke3ZhcmlhYmxlTmFtZX0ke2ZpbmFsU2VnbWVudHNbaSArIDFdfWA7XG4gICAgfVxuICAgIHJldHVybiB7IG1lcmdlQXJnc0V4cHI6IGZpbmFsTWVyZ2VBcmdzRXhwciwgZXhwYW5zaW9uRXhwcmVzc2lvbnMgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/preparseMergeArgsExpr.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/properties.js":
/*!*************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/properties.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addProperty: () => (/* binding */ addProperty),\n/* harmony export */   getProperties: () => (/* binding */ getProperties),\n/* harmony export */   getProperty: () => (/* binding */ getProperty),\n/* harmony export */   propertyTreeFromPaths: () => (/* binding */ propertyTreeFromPaths)\n/* harmony export */ });\nfunction addProperty(object, path, value) {\n    const initialSegment = path[0];\n    if (path.length === 1) {\n        object[initialSegment] = value;\n        return;\n    }\n    let field = object[initialSegment];\n    if (field != null) {\n        addProperty(field, path.slice(1), value);\n        return;\n    }\n    if (typeof path[1] === 'string') {\n        field = Object.create(null);\n    }\n    else {\n        field = [];\n    }\n    addProperty(field, path.slice(1), value);\n    object[initialSegment] = field;\n}\nfunction getProperty(object, path) {\n    if (!path.length || object == null) {\n        return object;\n    }\n    const newPath = path.slice();\n    const key = newPath.shift();\n    if (key == null) {\n        return;\n    }\n    const prop = object[key];\n    return getProperty(prop, newPath);\n}\nfunction getProperties(object, propertyTree) {\n    if (object == null) {\n        return object;\n    }\n    const newObject = Object.create(null);\n    for (const key in propertyTree) {\n        const subKey = propertyTree[key];\n        if (subKey == null) {\n            newObject[key] = object[key];\n            continue;\n        }\n        const prop = object[key];\n        newObject[key] = deepMap(prop, function deepMapFn(item) {\n            return getProperties(item, subKey);\n        });\n    }\n    return newObject;\n}\nfunction propertyTreeFromPaths(paths) {\n    const propertyTree = Object.create(null);\n    for (const path of paths) {\n        addProperty(propertyTree, path, null);\n    }\n    return propertyTree;\n}\nfunction deepMap(arrayOrItem, fn) {\n    if (Array.isArray(arrayOrItem)) {\n        return arrayOrItem.map(nestedArrayOrItem => deepMap(nestedArrayOrItem, fn));\n    }\n    return fn(arrayOrItem);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3Byb3BlcnRpZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2hpbmctZGlyZWN0aXZlcy9lc20vcHJvcGVydGllcy5qcz8wYTc1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhZGRQcm9wZXJ0eShvYmplY3QsIHBhdGgsIHZhbHVlKSB7XG4gICAgY29uc3QgaW5pdGlhbFNlZ21lbnQgPSBwYXRoWzBdO1xuICAgIGlmIChwYXRoLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICBvYmplY3RbaW5pdGlhbFNlZ21lbnRdID0gdmFsdWU7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IGZpZWxkID0gb2JqZWN0W2luaXRpYWxTZWdtZW50XTtcbiAgICBpZiAoZmllbGQgIT0gbnVsbCkge1xuICAgICAgICBhZGRQcm9wZXJ0eShmaWVsZCwgcGF0aC5zbGljZSgxKSwgdmFsdWUpO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGF0aFsxXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZmllbGQgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZmllbGQgPSBbXTtcbiAgICB9XG4gICAgYWRkUHJvcGVydHkoZmllbGQsIHBhdGguc2xpY2UoMSksIHZhbHVlKTtcbiAgICBvYmplY3RbaW5pdGlhbFNlZ21lbnRdID0gZmllbGQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0UHJvcGVydHkob2JqZWN0LCBwYXRoKSB7XG4gICAgaWYgKCFwYXRoLmxlbmd0aCB8fCBvYmplY3QgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gb2JqZWN0O1xuICAgIH1cbiAgICBjb25zdCBuZXdQYXRoID0gcGF0aC5zbGljZSgpO1xuICAgIGNvbnN0IGtleSA9IG5ld1BhdGguc2hpZnQoKTtcbiAgICBpZiAoa2V5ID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBwcm9wID0gb2JqZWN0W2tleV07XG4gICAgcmV0dXJuIGdldFByb3BlcnR5KHByb3AsIG5ld1BhdGgpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFByb3BlcnRpZXMob2JqZWN0LCBwcm9wZXJ0eVRyZWUpIHtcbiAgICBpZiAob2JqZWN0ID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG4gICAgY29uc3QgbmV3T2JqZWN0ID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBmb3IgKGNvbnN0IGtleSBpbiBwcm9wZXJ0eVRyZWUpIHtcbiAgICAgICAgY29uc3Qgc3ViS2V5ID0gcHJvcGVydHlUcmVlW2tleV07XG4gICAgICAgIGlmIChzdWJLZXkgPT0gbnVsbCkge1xuICAgICAgICAgICAgbmV3T2JqZWN0W2tleV0gPSBvYmplY3Rba2V5XTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHByb3AgPSBvYmplY3Rba2V5XTtcbiAgICAgICAgbmV3T2JqZWN0W2tleV0gPSBkZWVwTWFwKHByb3AsIGZ1bmN0aW9uIGRlZXBNYXBGbihpdGVtKSB7XG4gICAgICAgICAgICByZXR1cm4gZ2V0UHJvcGVydGllcyhpdGVtLCBzdWJLZXkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG5ld09iamVjdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcm9wZXJ0eVRyZWVGcm9tUGF0aHMocGF0aHMpIHtcbiAgICBjb25zdCBwcm9wZXJ0eVRyZWUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvciAoY29uc3QgcGF0aCBvZiBwYXRocykge1xuICAgICAgICBhZGRQcm9wZXJ0eShwcm9wZXJ0eVRyZWUsIHBhdGgsIG51bGwpO1xuICAgIH1cbiAgICByZXR1cm4gcHJvcGVydHlUcmVlO1xufVxuZnVuY3Rpb24gZGVlcE1hcChhcnJheU9ySXRlbSwgZm4pIHtcbiAgICBpZiAoQXJyYXkuaXNBcnJheShhcnJheU9ySXRlbSkpIHtcbiAgICAgICAgcmV0dXJuIGFycmF5T3JJdGVtLm1hcChuZXN0ZWRBcnJheU9ySXRlbSA9PiBkZWVwTWFwKG5lc3RlZEFycmF5T3JJdGVtLCBmbikpO1xuICAgIH1cbiAgICByZXR1cm4gZm4oYXJyYXlPckl0ZW0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/properties.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectives.js":
/*!**********************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectives.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stitchingDirectives: () => (/* binding */ stitchingDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _defaultStitchingDirectiveOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultStitchingDirectiveOptions.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/defaultStitchingDirectiveOptions.js\");\n/* harmony import */ var _stitchingDirectivesValidator_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stitchingDirectivesValidator.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesValidator.js\");\n/* harmony import */ var _stitchingDirectivesTransformer_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./stitchingDirectivesTransformer.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesTransformer.js\");\n\n\n\n\nfunction stitchingDirectives(options = {}) {\n    const finalOptions = {\n        ..._defaultStitchingDirectiveOptions_js__WEBPACK_IMPORTED_MODULE_0__.defaultStitchingDirectiveOptions,\n        ...options,\n    };\n    const { keyDirectiveName, computedDirectiveName, mergeDirectiveName, canonicalDirectiveName } = finalOptions;\n    const keyDirectiveTypeDefs = /* GraphQL */ `directive @${keyDirectiveName}(selectionSet: String!) on OBJECT`;\n    const computedDirectiveTypeDefs = /* GraphQL */ `directive @${computedDirectiveName}(selectionSet: String!) on FIELD_DEFINITION`;\n    const mergeDirectiveTypeDefs = /* GraphQL */ `directive @${mergeDirectiveName}(argsExpr: String, keyArg: String, keyField: String, key: [String!], additionalArgs: String) on FIELD_DEFINITION`;\n    const canonicalDirectiveTypeDefs = /* GraphQL */ `directive @${canonicalDirectiveName} on OBJECT | INTERFACE | INPUT_OBJECT | UNION | ENUM | SCALAR | FIELD_DEFINITION | INPUT_FIELD_DEFINITION`;\n    const keyDirective = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLDirective({\n        name: keyDirectiveName,\n        locations: ['OBJECT'],\n        args: {\n            selectionSet: { type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString) },\n        },\n    });\n    const computedDirective = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLDirective({\n        name: computedDirectiveName,\n        locations: ['FIELD_DEFINITION'],\n        args: {\n            selectionSet: { type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString) },\n        },\n    });\n    const mergeDirective = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLDirective({\n        name: mergeDirectiveName,\n        locations: ['FIELD_DEFINITION'],\n        args: {\n            argsExpr: { type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString },\n            keyArg: { type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString },\n            keyField: { type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString },\n            key: { type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLList(new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString)) },\n            additionalArgs: { type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString },\n        },\n    });\n    const canonicalDirective = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLDirective({\n        name: canonicalDirectiveName,\n        locations: [\n            'OBJECT',\n            'INTERFACE',\n            'INPUT_OBJECT',\n            'UNION',\n            'ENUM',\n            'SCALAR',\n            'FIELD_DEFINITION',\n            'INPUT_FIELD_DEFINITION',\n        ],\n    });\n    const allStitchingDirectivesTypeDefs = [\n        keyDirectiveTypeDefs,\n        computedDirectiveTypeDefs,\n        mergeDirectiveTypeDefs,\n        canonicalDirectiveTypeDefs,\n    ].join('\\n');\n    return {\n        keyDirectiveTypeDefs,\n        computedDirectiveTypeDefs,\n        mergeDirectiveTypeDefs,\n        canonicalDirectiveTypeDefs,\n        stitchingDirectivesTypeDefs: allStitchingDirectivesTypeDefs,\n        allStitchingDirectivesTypeDefs,\n        keyDirective,\n        computedDirective,\n        mergeDirective,\n        canonicalDirective,\n        allStitchingDirectives: [keyDirective, computedDirective, mergeDirective, canonicalDirective],\n        stitchingDirectivesValidator: (0,_stitchingDirectivesValidator_js__WEBPACK_IMPORTED_MODULE_4__.stitchingDirectivesValidator)(finalOptions),\n        stitchingDirectivesTransformer: (0,_stitchingDirectivesTransformer_js__WEBPACK_IMPORTED_MODULE_5__.stitchingDirectivesTransformer)(finalOptions),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3N0aXRjaGluZ0RpcmVjdGl2ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUF1RjtBQUNFO0FBQ1I7QUFDSTtBQUM5RSx5Q0FBeUM7QUFDaEQ7QUFDQSxXQUFXLGtHQUFnQztBQUMzQztBQUNBO0FBQ0EsWUFBWSxzRkFBc0Y7QUFDbEcsNkRBQTZELGlCQUFpQjtBQUM5RSxrRUFBa0Usc0JBQXNCO0FBQ3hGLCtEQUErRCxtQkFBbUI7QUFDbEYsbUVBQW1FLHdCQUF3QjtBQUMzRiw2QkFBNkIscURBQWdCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixVQUFVLG1EQUFjLENBQUMsa0RBQWEsR0FBRztBQUNyRSxTQUFTO0FBQ1QsS0FBSztBQUNMLGtDQUFrQyxxREFBZ0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLFVBQVUsbURBQWMsQ0FBQyxrREFBYSxHQUFHO0FBQ3JFLFNBQVM7QUFDVCxLQUFLO0FBQ0wsK0JBQStCLHFEQUFnQjtBQUMvQztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsTUFBTSxrREFBYSxFQUFFO0FBQzdDLHNCQUFzQixNQUFNLGtEQUFhLEVBQUU7QUFDM0Msd0JBQXdCLE1BQU0sa0RBQWEsRUFBRTtBQUM3QyxtQkFBbUIsVUFBVSxnREFBVyxLQUFLLG1EQUFjLENBQUMsa0RBQWEsSUFBSTtBQUM3RSw4QkFBOEIsTUFBTSxrREFBYSxFQUFFO0FBQ25ELFNBQVM7QUFDVCxLQUFLO0FBQ0wsbUNBQW1DLHFEQUFnQjtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw4RkFBNEI7QUFDbEUsd0NBQXdDLGtHQUE4QjtBQUN0RTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2hpbmctZGlyZWN0aXZlcy9lc20vc3RpdGNoaW5nRGlyZWN0aXZlcy5qcz85Zjc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxEaXJlY3RpdmUsIEdyYXBoUUxMaXN0LCBHcmFwaFFMTm9uTnVsbCwgR3JhcGhRTFN0cmluZyB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZGVmYXVsdFN0aXRjaGluZ0RpcmVjdGl2ZU9wdGlvbnMgfSBmcm9tICcuL2RlZmF1bHRTdGl0Y2hpbmdEaXJlY3RpdmVPcHRpb25zLmpzJztcbmltcG9ydCB7IHN0aXRjaGluZ0RpcmVjdGl2ZXNWYWxpZGF0b3IgfSBmcm9tICcuL3N0aXRjaGluZ0RpcmVjdGl2ZXNWYWxpZGF0b3IuanMnO1xuaW1wb3J0IHsgc3RpdGNoaW5nRGlyZWN0aXZlc1RyYW5zZm9ybWVyIH0gZnJvbSAnLi9zdGl0Y2hpbmdEaXJlY3RpdmVzVHJhbnNmb3JtZXIuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHN0aXRjaGluZ0RpcmVjdGl2ZXMob3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgZmluYWxPcHRpb25zID0ge1xuICAgICAgICAuLi5kZWZhdWx0U3RpdGNoaW5nRGlyZWN0aXZlT3B0aW9ucyxcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICB9O1xuICAgIGNvbnN0IHsga2V5RGlyZWN0aXZlTmFtZSwgY29tcHV0ZWREaXJlY3RpdmVOYW1lLCBtZXJnZURpcmVjdGl2ZU5hbWUsIGNhbm9uaWNhbERpcmVjdGl2ZU5hbWUgfSA9IGZpbmFsT3B0aW9ucztcbiAgICBjb25zdCBrZXlEaXJlY3RpdmVUeXBlRGVmcyA9IC8qIEdyYXBoUUwgKi8gYGRpcmVjdGl2ZSBAJHtrZXlEaXJlY3RpdmVOYW1lfShzZWxlY3Rpb25TZXQ6IFN0cmluZyEpIG9uIE9CSkVDVGA7XG4gICAgY29uc3QgY29tcHV0ZWREaXJlY3RpdmVUeXBlRGVmcyA9IC8qIEdyYXBoUUwgKi8gYGRpcmVjdGl2ZSBAJHtjb21wdXRlZERpcmVjdGl2ZU5hbWV9KHNlbGVjdGlvblNldDogU3RyaW5nISkgb24gRklFTERfREVGSU5JVElPTmA7XG4gICAgY29uc3QgbWVyZ2VEaXJlY3RpdmVUeXBlRGVmcyA9IC8qIEdyYXBoUUwgKi8gYGRpcmVjdGl2ZSBAJHttZXJnZURpcmVjdGl2ZU5hbWV9KGFyZ3NFeHByOiBTdHJpbmcsIGtleUFyZzogU3RyaW5nLCBrZXlGaWVsZDogU3RyaW5nLCBrZXk6IFtTdHJpbmchXSwgYWRkaXRpb25hbEFyZ3M6IFN0cmluZykgb24gRklFTERfREVGSU5JVElPTmA7XG4gICAgY29uc3QgY2Fub25pY2FsRGlyZWN0aXZlVHlwZURlZnMgPSAvKiBHcmFwaFFMICovIGBkaXJlY3RpdmUgQCR7Y2Fub25pY2FsRGlyZWN0aXZlTmFtZX0gb24gT0JKRUNUIHwgSU5URVJGQUNFIHwgSU5QVVRfT0JKRUNUIHwgVU5JT04gfCBFTlVNIHwgU0NBTEFSIHwgRklFTERfREVGSU5JVElPTiB8IElOUFVUX0ZJRUxEX0RFRklOSVRJT05gO1xuICAgIGNvbnN0IGtleURpcmVjdGl2ZSA9IG5ldyBHcmFwaFFMRGlyZWN0aXZlKHtcbiAgICAgICAgbmFtZToga2V5RGlyZWN0aXZlTmFtZSxcbiAgICAgICAgbG9jYXRpb25zOiBbJ09CSkVDVCddLFxuICAgICAgICBhcmdzOiB7XG4gICAgICAgICAgICBzZWxlY3Rpb25TZXQ6IHsgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxTdHJpbmcpIH0sXG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgY29uc3QgY29tcHV0ZWREaXJlY3RpdmUgPSBuZXcgR3JhcGhRTERpcmVjdGl2ZSh7XG4gICAgICAgIG5hbWU6IGNvbXB1dGVkRGlyZWN0aXZlTmFtZSxcbiAgICAgICAgbG9jYXRpb25zOiBbJ0ZJRUxEX0RFRklOSVRJT04nXSxcbiAgICAgICAgYXJnczoge1xuICAgICAgICAgICAgc2VsZWN0aW9uU2V0OiB7IHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSB9LFxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnN0IG1lcmdlRGlyZWN0aXZlID0gbmV3IEdyYXBoUUxEaXJlY3RpdmUoe1xuICAgICAgICBuYW1lOiBtZXJnZURpcmVjdGl2ZU5hbWUsXG4gICAgICAgIGxvY2F0aW9uczogWydGSUVMRF9ERUZJTklUSU9OJ10sXG4gICAgICAgIGFyZ3M6IHtcbiAgICAgICAgICAgIGFyZ3NFeHByOiB7IHR5cGU6IEdyYXBoUUxTdHJpbmcgfSxcbiAgICAgICAgICAgIGtleUFyZzogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXG4gICAgICAgICAgICBrZXlGaWVsZDogeyB0eXBlOiBHcmFwaFFMU3RyaW5nIH0sXG4gICAgICAgICAgICBrZXk6IHsgdHlwZTogbmV3IEdyYXBoUUxMaXN0KG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMU3RyaW5nKSkgfSxcbiAgICAgICAgICAgIGFkZGl0aW9uYWxBcmdzOiB7IHR5cGU6IEdyYXBoUUxTdHJpbmcgfSxcbiAgICAgICAgfSxcbiAgICB9KTtcbiAgICBjb25zdCBjYW5vbmljYWxEaXJlY3RpdmUgPSBuZXcgR3JhcGhRTERpcmVjdGl2ZSh7XG4gICAgICAgIG5hbWU6IGNhbm9uaWNhbERpcmVjdGl2ZU5hbWUsXG4gICAgICAgIGxvY2F0aW9uczogW1xuICAgICAgICAgICAgJ09CSkVDVCcsXG4gICAgICAgICAgICAnSU5URVJGQUNFJyxcbiAgICAgICAgICAgICdJTlBVVF9PQkpFQ1QnLFxuICAgICAgICAgICAgJ1VOSU9OJyxcbiAgICAgICAgICAgICdFTlVNJyxcbiAgICAgICAgICAgICdTQ0FMQVInLFxuICAgICAgICAgICAgJ0ZJRUxEX0RFRklOSVRJT04nLFxuICAgICAgICAgICAgJ0lOUFVUX0ZJRUxEX0RFRklOSVRJT04nLFxuICAgICAgICBdLFxuICAgIH0pO1xuICAgIGNvbnN0IGFsbFN0aXRjaGluZ0RpcmVjdGl2ZXNUeXBlRGVmcyA9IFtcbiAgICAgICAga2V5RGlyZWN0aXZlVHlwZURlZnMsXG4gICAgICAgIGNvbXB1dGVkRGlyZWN0aXZlVHlwZURlZnMsXG4gICAgICAgIG1lcmdlRGlyZWN0aXZlVHlwZURlZnMsXG4gICAgICAgIGNhbm9uaWNhbERpcmVjdGl2ZVR5cGVEZWZzLFxuICAgIF0uam9pbignXFxuJyk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2V5RGlyZWN0aXZlVHlwZURlZnMsXG4gICAgICAgIGNvbXB1dGVkRGlyZWN0aXZlVHlwZURlZnMsXG4gICAgICAgIG1lcmdlRGlyZWN0aXZlVHlwZURlZnMsXG4gICAgICAgIGNhbm9uaWNhbERpcmVjdGl2ZVR5cGVEZWZzLFxuICAgICAgICBzdGl0Y2hpbmdEaXJlY3RpdmVzVHlwZURlZnM6IGFsbFN0aXRjaGluZ0RpcmVjdGl2ZXNUeXBlRGVmcyxcbiAgICAgICAgYWxsU3RpdGNoaW5nRGlyZWN0aXZlc1R5cGVEZWZzLFxuICAgICAgICBrZXlEaXJlY3RpdmUsXG4gICAgICAgIGNvbXB1dGVkRGlyZWN0aXZlLFxuICAgICAgICBtZXJnZURpcmVjdGl2ZSxcbiAgICAgICAgY2Fub25pY2FsRGlyZWN0aXZlLFxuICAgICAgICBhbGxTdGl0Y2hpbmdEaXJlY3RpdmVzOiBba2V5RGlyZWN0aXZlLCBjb21wdXRlZERpcmVjdGl2ZSwgbWVyZ2VEaXJlY3RpdmUsIGNhbm9uaWNhbERpcmVjdGl2ZV0sXG4gICAgICAgIHN0aXRjaGluZ0RpcmVjdGl2ZXNWYWxpZGF0b3I6IHN0aXRjaGluZ0RpcmVjdGl2ZXNWYWxpZGF0b3IoZmluYWxPcHRpb25zKSxcbiAgICAgICAgc3RpdGNoaW5nRGlyZWN0aXZlc1RyYW5zZm9ybWVyOiBzdGl0Y2hpbmdEaXJlY3RpdmVzVHJhbnNmb3JtZXIoZmluYWxPcHRpb25zKSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesTransformer.js":
/*!*********************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesTransformer.js ***!
  \*********************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stitchingDirectivesTransformer: () => (/* binding */ stitchingDirectivesTransformer)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/get-directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/selectionSets.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/get-implementing-types.js\");\n/* harmony import */ var _defaultStitchingDirectiveOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultStitchingDirectiveOptions.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/defaultStitchingDirectiveOptions.js\");\n/* harmony import */ var _parseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parseMergeArgsExpr.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/parseMergeArgsExpr.js\");\n/* harmony import */ var _properties_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./properties.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/properties.js\");\n/* harmony import */ var _stitchingDirectivesValidator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stitchingDirectivesValidator.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesValidator.js\");\n\n\n\n\n\n\n\nfunction stitchingDirectivesTransformer(options = {}) {\n    const { keyDirectiveName, computedDirectiveName, mergeDirectiveName, canonicalDirectiveName, pathToDirectivesInExtensions, } = {\n        ..._defaultStitchingDirectiveOptions_js__WEBPACK_IMPORTED_MODULE_0__.defaultStitchingDirectiveOptions,\n        ...options,\n    };\n    return (subschemaConfig) => {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const newSubschemaConfig = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_1__.cloneSubschemaConfig)(subschemaConfig);\n        const selectionSetsByType = Object.create(null);\n        const computedFieldSelectionSets = Object.create(null);\n        const mergedTypesResolversInfo = Object.create(null);\n        const canonicalTypesInfo = Object.create(null);\n        const schema = subschemaConfig.schema;\n        // gateway should also run validation\n        (0,_stitchingDirectivesValidator_js__WEBPACK_IMPORTED_MODULE_2__.stitchingDirectivesValidator)(options)(schema);\n        function setCanonicalDefinition(typeName, fieldName) {\n            var _a;\n            canonicalTypesInfo[typeName] = canonicalTypesInfo[typeName] || Object.create(null);\n            if (fieldName) {\n                const fields = (_a = canonicalTypesInfo[typeName].fields) !== null && _a !== void 0 ? _a : Object.create(null);\n                canonicalTypesInfo[typeName].fields = fields;\n                fields[fieldName] = true;\n            }\n            else {\n                canonicalTypesInfo[typeName].canonical = true;\n            }\n        }\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.mapSchema)(schema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.OBJECT_TYPE]: type => {\n                var _a, _b;\n                const keyDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, type, keyDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (keyDirective != null) {\n                    const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.parseSelectionSet)(keyDirective['selectionSet'], { noLocation: true });\n                    selectionSetsByType[type.name] = selectionSet;\n                }\n                const canonicalDirective = (_b = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, type, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _b === void 0 ? void 0 : _b[0];\n                if (canonicalDirective != null) {\n                    setCanonicalDefinition(type.name);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.OBJECT_FIELD]: (fieldConfig, fieldName, typeName) => {\n                var _a, _b, _c;\n                const computedDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, fieldConfig, computedDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (computedDirective != null) {\n                    const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.parseSelectionSet)(computedDirective['selectionSet'], { noLocation: true });\n                    if (!computedFieldSelectionSets[typeName]) {\n                        computedFieldSelectionSets[typeName] = Object.create(null);\n                    }\n                    computedFieldSelectionSets[typeName][fieldName] = selectionSet;\n                }\n                const mergeDirective = (_b = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, fieldConfig, mergeDirectiveName, pathToDirectivesInExtensions)) === null || _b === void 0 ? void 0 : _b[0];\n                if ((mergeDirective === null || mergeDirective === void 0 ? void 0 : mergeDirective['keyField']) != null) {\n                    const mergeDirectiveKeyField = mergeDirective['keyField'];\n                    const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.parseSelectionSet)(`{ ${mergeDirectiveKeyField}}`, { noLocation: true });\n                    const typeNames = mergeDirective['types'];\n                    const returnType = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.getNamedType)(fieldConfig.type);\n                    forEachConcreteType(schema, returnType, typeNames, typeName => {\n                        if (typeNames == null || typeNames.includes(typeName)) {\n                            const existingSelectionSet = selectionSetsByType[typeName];\n                            selectionSetsByType[typeName] = existingSelectionSet\n                                ? mergeSelectionSets(existingSelectionSet, selectionSet)\n                                : selectionSet;\n                        }\n                    });\n                }\n                const canonicalDirective = (_c = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, fieldConfig, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _c === void 0 ? void 0 : _c[0];\n                if (canonicalDirective != null) {\n                    setCanonicalDefinition(typeName, fieldName);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.INTERFACE_TYPE]: type => {\n                var _a;\n                const canonicalDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, type, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (canonicalDirective) {\n                    setCanonicalDefinition(type.name);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.INTERFACE_FIELD]: (fieldConfig, fieldName, typeName) => {\n                var _a;\n                const canonicalDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, fieldConfig, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (canonicalDirective) {\n                    setCanonicalDefinition(typeName, fieldName);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.INPUT_OBJECT_TYPE]: type => {\n                var _a;\n                const canonicalDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, type, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (canonicalDirective) {\n                    setCanonicalDefinition(type.name);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.INPUT_OBJECT_FIELD]: (inputFieldConfig, fieldName, typeName) => {\n                var _a;\n                const canonicalDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, inputFieldConfig, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (canonicalDirective != null) {\n                    setCanonicalDefinition(typeName, fieldName);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.UNION_TYPE]: type => {\n                var _a;\n                const canonicalDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, type, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (canonicalDirective != null) {\n                    setCanonicalDefinition(type.name);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.ENUM_TYPE]: type => {\n                var _a;\n                const canonicalDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, type, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (canonicalDirective != null) {\n                    setCanonicalDefinition(type.name);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.SCALAR_TYPE]: type => {\n                var _a;\n                const canonicalDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, type, canonicalDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (canonicalDirective != null) {\n                    setCanonicalDefinition(type.name);\n                }\n                return undefined;\n            },\n        });\n        if (subschemaConfig.merge) {\n            for (const typeName in subschemaConfig.merge) {\n                const mergedTypeConfig = subschemaConfig.merge[typeName];\n                if (mergedTypeConfig.selectionSet) {\n                    const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.parseSelectionSet)(mergedTypeConfig.selectionSet, { noLocation: true });\n                    if (selectionSet) {\n                        if (selectionSetsByType[typeName]) {\n                            selectionSetsByType[typeName] = mergeSelectionSets(selectionSetsByType[typeName], selectionSet);\n                        }\n                        else {\n                            selectionSetsByType[typeName] = selectionSet;\n                        }\n                    }\n                }\n                if (mergedTypeConfig.fields) {\n                    for (const fieldName in mergedTypeConfig.fields) {\n                        const fieldConfig = mergedTypeConfig.fields[fieldName];\n                        if (!fieldConfig.selectionSet)\n                            continue;\n                        const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.parseSelectionSet)(fieldConfig.selectionSet, { noLocation: true });\n                        if (selectionSet) {\n                            if ((_a = computedFieldSelectionSets[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName]) {\n                                computedFieldSelectionSets[typeName][fieldName] = mergeSelectionSets(computedFieldSelectionSets[typeName][fieldName], selectionSet);\n                            }\n                            else {\n                                if (computedFieldSelectionSets[typeName] == null) {\n                                    computedFieldSelectionSets[typeName] = Object.create(null);\n                                }\n                                computedFieldSelectionSets[typeName][fieldName] = selectionSet;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        const allSelectionSetsByType = Object.create(null);\n        for (const typeName in selectionSetsByType) {\n            allSelectionSetsByType[typeName] = allSelectionSetsByType[typeName] || [];\n            const selectionSet = selectionSetsByType[typeName];\n            allSelectionSetsByType[typeName].push(selectionSet);\n        }\n        for (const typeName in computedFieldSelectionSets) {\n            const selectionSets = computedFieldSelectionSets[typeName];\n            for (const i in selectionSets) {\n                allSelectionSetsByType[typeName] = allSelectionSetsByType[typeName] || [];\n                const selectionSet = selectionSets[i];\n                allSelectionSetsByType[typeName].push(selectionSet);\n            }\n        }\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.mapSchema)(schema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.OBJECT_FIELD]: function objectFieldMapper(fieldConfig, fieldName) {\n                var _a, _b;\n                const mergeDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getDirective)(schema, fieldConfig, mergeDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (mergeDirective != null) {\n                    const returnType = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.getNullableType)(fieldConfig.type);\n                    const returnsList = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.isListType)(returnType);\n                    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.getNamedType)(returnType);\n                    let mergeArgsExpr = mergeDirective['argsExpr'];\n                    if (mergeArgsExpr == null) {\n                        const key = mergeDirective['key'];\n                        const keyField = mergeDirective['keyField'];\n                        const keyExpr = key != null ? buildKeyExpr(key) : keyField != null ? `$key.${keyField}` : '$key';\n                        const keyArg = mergeDirective['keyArg'];\n                        const argNames = keyArg == null ? [Object.keys((_b = fieldConfig.args) !== null && _b !== void 0 ? _b : {})[0]] : keyArg.split('.');\n                        const lastArgName = argNames.pop();\n                        mergeArgsExpr = returnsList ? `${lastArgName}: [[${keyExpr}]]` : `${lastArgName}: ${keyExpr}`;\n                        for (const argName of argNames.reverse()) {\n                            mergeArgsExpr = `${argName}: { ${mergeArgsExpr} }`;\n                        }\n                    }\n                    const typeNames = mergeDirective['types'];\n                    forEachConcreteTypeName(namedType, schema, typeNames, function generateResolveInfo(typeName) {\n                        const parsedMergeArgsExpr = (0,_parseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_8__.parseMergeArgsExpr)(mergeArgsExpr, allSelectionSetsByType[typeName] == null\n                            ? undefined\n                            : mergeSelectionSets(...allSelectionSetsByType[typeName]));\n                        const additionalArgs = mergeDirective['additionalArgs'];\n                        if (additionalArgs != null) {\n                            parsedMergeArgsExpr.args = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.mergeDeep)([\n                                parsedMergeArgsExpr.args,\n                                (0,graphql__WEBPACK_IMPORTED_MODULE_10__.valueFromASTUntyped)((0,graphql__WEBPACK_IMPORTED_MODULE_11__.parseValue)(`{ ${additionalArgs} }`, { noLocation: true })),\n                            ]);\n                        }\n                        mergedTypesResolversInfo[typeName] = {\n                            fieldName,\n                            returnsList,\n                            ...parsedMergeArgsExpr,\n                        };\n                    });\n                }\n                return undefined;\n            },\n        });\n        for (const typeName in selectionSetsByType) {\n            const selectionSet = selectionSetsByType[typeName];\n            const mergeConfig = (_b = newSubschemaConfig.merge) !== null && _b !== void 0 ? _b : Object.create(null);\n            newSubschemaConfig.merge = mergeConfig;\n            if (mergeConfig[typeName] == null) {\n                newSubschemaConfig.merge[typeName] = Object.create(null);\n            }\n            const mergeTypeConfig = mergeConfig[typeName];\n            mergeTypeConfig.selectionSet = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.print)(selectionSet);\n        }\n        for (const typeName in computedFieldSelectionSets) {\n            const selectionSets = computedFieldSelectionSets[typeName];\n            const mergeConfig = (_c = newSubschemaConfig.merge) !== null && _c !== void 0 ? _c : Object.create(null);\n            newSubschemaConfig.merge = mergeConfig;\n            if (mergeConfig[typeName] == null) {\n                mergeConfig[typeName] = Object.create(null);\n            }\n            const mergeTypeConfig = newSubschemaConfig.merge[typeName];\n            const mergeTypeConfigFields = (_d = mergeTypeConfig.fields) !== null && _d !== void 0 ? _d : Object.create(null);\n            mergeTypeConfig.fields = mergeTypeConfigFields;\n            for (const fieldName in selectionSets) {\n                const selectionSet = selectionSets[fieldName];\n                const fieldConfig = (_e = mergeTypeConfigFields[fieldName]) !== null && _e !== void 0 ? _e : Object.create(null);\n                mergeTypeConfigFields[fieldName] = fieldConfig;\n                fieldConfig.selectionSet = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.print)(selectionSet);\n                fieldConfig.computed = true;\n            }\n        }\n        for (const typeName in mergedTypesResolversInfo) {\n            const mergedTypeResolverInfo = mergedTypesResolversInfo[typeName];\n            const mergeConfig = (_f = newSubschemaConfig.merge) !== null && _f !== void 0 ? _f : Object.create(null);\n            newSubschemaConfig.merge = mergeConfig;\n            if (newSubschemaConfig.merge[typeName] == null) {\n                newSubschemaConfig.merge[typeName] = Object.create(null);\n            }\n            const mergeTypeConfig = newSubschemaConfig.merge[typeName];\n            mergeTypeConfig.fieldName = mergedTypeResolverInfo.fieldName;\n            if (mergedTypeResolverInfo.returnsList) {\n                mergeTypeConfig.key = generateKeyFn(mergedTypeResolverInfo);\n                mergeTypeConfig.argsFromKeys = generateArgsFromKeysFn(mergedTypeResolverInfo);\n            }\n            else {\n                mergeTypeConfig.args = generateArgsFn(mergedTypeResolverInfo);\n            }\n        }\n        for (const typeName in canonicalTypesInfo) {\n            const canonicalTypeInfo = canonicalTypesInfo[typeName];\n            const mergeConfig = (_g = newSubschemaConfig.merge) !== null && _g !== void 0 ? _g : Object.create(null);\n            newSubschemaConfig.merge = mergeConfig;\n            if (newSubschemaConfig.merge[typeName] == null) {\n                newSubschemaConfig.merge[typeName] = Object.create(null);\n            }\n            const mergeTypeConfig = newSubschemaConfig.merge[typeName];\n            if (canonicalTypeInfo.canonical) {\n                mergeTypeConfig.canonical = true;\n            }\n            if (canonicalTypeInfo.fields) {\n                const mergeTypeConfigFields = (_h = mergeTypeConfig.fields) !== null && _h !== void 0 ? _h : Object.create(null);\n                mergeTypeConfig.fields = mergeTypeConfigFields;\n                for (const fieldName in canonicalTypeInfo.fields) {\n                    if (mergeTypeConfigFields[fieldName] == null) {\n                        mergeTypeConfigFields[fieldName] = Object.create(null);\n                    }\n                    mergeTypeConfigFields[fieldName].canonical = true;\n                }\n            }\n        }\n        return newSubschemaConfig;\n    };\n}\nfunction forEachConcreteType(schema, type, typeNames, fn) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_7__.isInterfaceType)(type)) {\n        for (const typeName of (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_13__.getImplementingTypes)(type.name, schema)) {\n            if (typeNames == null || typeNames.includes(typeName)) {\n                fn(typeName);\n            }\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_7__.isUnionType)(type)) {\n        for (const { name: typeName } of type.getTypes()) {\n            if (typeNames == null || typeNames.includes(typeName)) {\n                fn(typeName);\n            }\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_7__.isObjectType)(type)) {\n        fn(type.name);\n    }\n}\nfunction generateKeyFn(mergedTypeResolverInfo) {\n    return function keyFn(originalResult) {\n        return (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.getProperties)(originalResult, mergedTypeResolverInfo.usedProperties);\n    };\n}\nfunction generateArgsFromKeysFn(mergedTypeResolverInfo) {\n    const { expansions, args } = mergedTypeResolverInfo;\n    return function generateArgsFromKeys(keys) {\n        const newArgs = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.mergeDeep)([{}, args]);\n        if (expansions) {\n            for (const expansion of expansions) {\n                const mappingInstructions = expansion.mappingInstructions;\n                const expanded = [];\n                for (const key of keys) {\n                    let newValue = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.mergeDeep)([{}, expansion.valuePath]);\n                    for (const { destinationPath, sourcePath } of mappingInstructions) {\n                        if (destinationPath.length) {\n                            (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.addProperty)(newValue, destinationPath, (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.getProperty)(key, sourcePath));\n                        }\n                        else {\n                            newValue = (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.getProperty)(key, sourcePath);\n                        }\n                    }\n                    expanded.push(newValue);\n                }\n                (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.addProperty)(newArgs, expansion.valuePath, expanded);\n            }\n        }\n        return newArgs;\n    };\n}\nfunction generateArgsFn(mergedTypeResolverInfo) {\n    const { mappingInstructions, args, usedProperties } = mergedTypeResolverInfo;\n    return function generateArgs(originalResult) {\n        const newArgs = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.mergeDeep)([{}, args]);\n        const filteredResult = (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.getProperties)(originalResult, usedProperties);\n        if (mappingInstructions) {\n            for (const mappingInstruction of mappingInstructions) {\n                const { destinationPath, sourcePath } = mappingInstruction;\n                (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.addProperty)(newArgs, destinationPath, (0,_properties_js__WEBPACK_IMPORTED_MODULE_14__.getProperty)(filteredResult, sourcePath));\n            }\n        }\n        return newArgs;\n    };\n}\nfunction buildKeyExpr(key) {\n    let mergedObject = {};\n    for (const keyDef of key) {\n        let [aliasOrKeyPath, keyPath] = keyDef.split(':');\n        let aliasPath;\n        if (keyPath == null) {\n            keyPath = aliasPath = aliasOrKeyPath;\n        }\n        else {\n            aliasPath = aliasOrKeyPath;\n        }\n        const aliasParts = aliasPath.split('.');\n        const lastAliasPart = aliasParts.pop();\n        if (lastAliasPart == null) {\n            throw new Error(`Key \"${key}\" is invalid, no path provided.`);\n        }\n        let object = { [lastAliasPart]: `$key.${keyPath}` };\n        for (const aliasPart of aliasParts.reverse()) {\n            object = { [aliasPart]: object };\n        }\n        mergedObject = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.mergeDeep)([mergedObject, object]);\n    }\n    return JSON.stringify(mergedObject).replace(/\"/g, '');\n}\nfunction mergeSelectionSets(...selectionSets) {\n    const normalizedSelections = Object.create(null);\n    for (const selectionSet of selectionSets) {\n        for (const selection of selectionSet.selections) {\n            const normalizedSelection = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.print)(selection);\n            normalizedSelections[normalizedSelection] = selection;\n        }\n    }\n    const newSelectionSet = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_15__.Kind.SELECTION_SET,\n        selections: Object.values(normalizedSelections),\n    };\n    return newSelectionSet;\n}\nfunction forEachConcreteTypeName(returnType, schema, typeNames, fn) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_7__.isInterfaceType)(returnType)) {\n        for (const typeName of (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_13__.getImplementingTypes)(returnType.name, schema)) {\n            if (typeNames == null || typeNames.includes(typeName)) {\n                fn(typeName);\n            }\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_7__.isUnionType)(returnType)) {\n        for (const type of returnType.getTypes()) {\n            if (typeNames == null || typeNames.includes(type.name)) {\n                fn(type.name);\n            }\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_7__.isObjectType)(returnType) && (typeNames == null || typeNames.includes(returnType.name))) {\n        fn(returnType.name);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoaW5nLWRpcmVjdGl2ZXMvZXNtL3N0aXRjaGluZ0RpcmVjdGl2ZXNUcmFuc2Zvcm1lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUErSjtBQUNoRztBQUNpRTtBQUN2QztBQUM1QjtBQUNhO0FBQ087QUFDMUUsb0RBQW9EO0FBQzNELFlBQVkscUhBQXFIO0FBQ2pJLFdBQVcsa0dBQWdDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLDZFQUFvQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhGQUE0QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLCtEQUFTO0FBQ2pCLGFBQWEsNERBQVU7QUFDdkI7QUFDQSwyQ0FBMkMsa0VBQVk7QUFDdkQ7QUFDQSx5Q0FBeUMsdUVBQWlCLGlDQUFpQyxrQkFBa0I7QUFDN0c7QUFDQTtBQUNBLGlEQUFpRCxrRUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixhQUFhLDREQUFVO0FBQ3ZCO0FBQ0EsZ0RBQWdELGtFQUFZO0FBQzVEO0FBQ0EseUNBQXlDLHVFQUFpQixzQ0FBc0Msa0JBQWtCO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsa0VBQVk7QUFDekQ7QUFDQTtBQUNBLHlDQUF5Qyx1RUFBaUIsSUFBSSxFQUFFLHdCQUF3QixLQUFLLGtCQUFrQjtBQUMvRztBQUNBLHVDQUF1QyxxREFBWTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLGlEQUFpRCxrRUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixhQUFhLDREQUFVO0FBQ3ZCO0FBQ0EsaURBQWlELGtFQUFZO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGFBQWEsNERBQVU7QUFDdkI7QUFDQSxpREFBaUQsa0VBQVk7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsYUFBYSw0REFBVTtBQUN2QjtBQUNBLGlEQUFpRCxrRUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixhQUFhLDREQUFVO0FBQ3ZCO0FBQ0EsaURBQWlELGtFQUFZO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGFBQWEsNERBQVU7QUFDdkI7QUFDQSxpREFBaUQsa0VBQVk7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsYUFBYSw0REFBVTtBQUN2QjtBQUNBLGlEQUFpRCxrRUFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixhQUFhLDREQUFVO0FBQ3ZCO0FBQ0EsaURBQWlELGtFQUFZO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx1RUFBaUIsa0NBQWtDLGtCQUFrQjtBQUM5RztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLHVFQUFpQiw2QkFBNkIsa0JBQWtCO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLCtEQUFTO0FBQ2pCLGFBQWEsNERBQVU7QUFDdkI7QUFDQSw2Q0FBNkMsa0VBQVk7QUFDekQ7QUFDQSx1Q0FBdUMsd0RBQWU7QUFDdEQsd0NBQXdDLG1EQUFVO0FBQ2xELHNDQUFzQyxxREFBWTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFHQUFxRyxTQUFTO0FBQzlHO0FBQ0Esa0lBQWtJO0FBQ2xJO0FBQ0EseURBQXlELFlBQVksTUFBTSxRQUFRLFNBQVMsWUFBWSxJQUFJLFFBQVE7QUFDcEg7QUFDQSwrQ0FBK0MsUUFBUSxJQUFJLEVBQUUsZ0JBQWdCO0FBQzdFO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELDBFQUFrQjtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCwrREFBUztBQUNoRTtBQUNBLGdDQUFnQyw2REFBbUIsQ0FBQyxvREFBVSxJQUFJLEVBQUUsaUJBQWlCLEtBQUssa0JBQWtCO0FBQzVHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsK0NBQUs7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDLCtDQUFLO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3REFBZTtBQUN2QiwrQkFBK0IsMkVBQW9CO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG9EQUFXO0FBQ3hCLHFCQUFxQixpQkFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscURBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsOERBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtQkFBbUI7QUFDL0I7QUFDQSx3QkFBd0IsK0RBQVMsSUFBSTtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLCtEQUFTLElBQUk7QUFDaEQsaUNBQWlDLDhCQUE4QjtBQUMvRDtBQUNBLDRCQUE0Qiw0REFBVyw0QkFBNEIsNERBQVc7QUFDOUU7QUFDQTtBQUNBLHVDQUF1Qyw0REFBVztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw0REFBVztBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDRDQUE0QztBQUN4RDtBQUNBLHdCQUF3QiwrREFBUyxJQUFJO0FBQ3JDLCtCQUErQiw4REFBYTtBQUM1QztBQUNBO0FBQ0Esd0JBQXdCLDhCQUE4QjtBQUN0RCxnQkFBZ0IsNERBQVcsMkJBQTJCLDREQUFXO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLElBQUk7QUFDeEM7QUFDQSx1QkFBdUIseUJBQXlCLFFBQVE7QUFDeEQ7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQSx1QkFBdUIsK0RBQVM7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsK0NBQUs7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDBDQUFJO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdEQUFlO0FBQ3ZCLCtCQUErQiwyRUFBb0I7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsb0RBQVc7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxREFBWTtBQUN6QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaGluZy1kaXJlY3RpdmVzL2VzbS9zdGl0Y2hpbmdEaXJlY3RpdmVzVHJhbnNmb3JtZXIuanM/ZDA5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW1lZFR5cGUsIGdldE51bGxhYmxlVHlwZSwgaXNJbnRlcmZhY2VUeXBlLCBpc0xpc3RUeXBlLCBpc09iamVjdFR5cGUsIGlzVW5pb25UeXBlLCBLaW5kLCBwYXJzZVZhbHVlLCBwcmludCwgdmFsdWVGcm9tQVNUVW50eXBlZCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGNsb25lU3Vic2NoZW1hQ29uZmlnIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUnO1xuaW1wb3J0IHsgZ2V0RGlyZWN0aXZlLCBnZXRJbXBsZW1lbnRpbmdUeXBlcywgTWFwcGVyS2luZCwgbWFwU2NoZW1hLCBtZXJnZURlZXAsIHBhcnNlU2VsZWN0aW9uU2V0LCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IGRlZmF1bHRTdGl0Y2hpbmdEaXJlY3RpdmVPcHRpb25zIH0gZnJvbSAnLi9kZWZhdWx0U3RpdGNoaW5nRGlyZWN0aXZlT3B0aW9ucy5qcyc7XG5pbXBvcnQgeyBwYXJzZU1lcmdlQXJnc0V4cHIgfSBmcm9tICcuL3BhcnNlTWVyZ2VBcmdzRXhwci5qcyc7XG5pbXBvcnQgeyBhZGRQcm9wZXJ0eSwgZ2V0UHJvcGVydHksIGdldFByb3BlcnRpZXMgfSBmcm9tICcuL3Byb3BlcnRpZXMuanMnO1xuaW1wb3J0IHsgc3RpdGNoaW5nRGlyZWN0aXZlc1ZhbGlkYXRvciB9IGZyb20gJy4vc3RpdGNoaW5nRGlyZWN0aXZlc1ZhbGlkYXRvci5qcyc7XG5leHBvcnQgZnVuY3Rpb24gc3RpdGNoaW5nRGlyZWN0aXZlc1RyYW5zZm9ybWVyKG9wdGlvbnMgPSB7fSkge1xuICAgIGNvbnN0IHsga2V5RGlyZWN0aXZlTmFtZSwgY29tcHV0ZWREaXJlY3RpdmVOYW1lLCBtZXJnZURpcmVjdGl2ZU5hbWUsIGNhbm9uaWNhbERpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMsIH0gPSB7XG4gICAgICAgIC4uLmRlZmF1bHRTdGl0Y2hpbmdEaXJlY3RpdmVPcHRpb25zLFxuICAgICAgICAuLi5vcHRpb25zLFxuICAgIH07XG4gICAgcmV0dXJuIChzdWJzY2hlbWFDb25maWcpID0+IHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2MsIF9kLCBfZSwgX2YsIF9nLCBfaDtcbiAgICAgICAgY29uc3QgbmV3U3Vic2NoZW1hQ29uZmlnID0gY2xvbmVTdWJzY2hlbWFDb25maWcoc3Vic2NoZW1hQ29uZmlnKTtcbiAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0c0J5VHlwZSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgIGNvbnN0IGNvbXB1dGVkRmllbGRTZWxlY3Rpb25TZXRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgY29uc3QgbWVyZ2VkVHlwZXNSZXNvbHZlcnNJbmZvID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgY29uc3QgY2Fub25pY2FsVHlwZXNJbmZvID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgY29uc3Qgc2NoZW1hID0gc3Vic2NoZW1hQ29uZmlnLnNjaGVtYTtcbiAgICAgICAgLy8gZ2F0ZXdheSBzaG91bGQgYWxzbyBydW4gdmFsaWRhdGlvblxuICAgICAgICBzdGl0Y2hpbmdEaXJlY3RpdmVzVmFsaWRhdG9yKG9wdGlvbnMpKHNjaGVtYSk7XG4gICAgICAgIGZ1bmN0aW9uIHNldENhbm9uaWNhbERlZmluaXRpb24odHlwZU5hbWUsIGZpZWxkTmFtZSkge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgY2Fub25pY2FsVHlwZXNJbmZvW3R5cGVOYW1lXSA9IGNhbm9uaWNhbFR5cGVzSW5mb1t0eXBlTmFtZV0gfHwgT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgIGlmIChmaWVsZE5hbWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSAoX2EgPSBjYW5vbmljYWxUeXBlc0luZm9bdHlwZU5hbWVdLmZpZWxkcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgICAgICBjYW5vbmljYWxUeXBlc0luZm9bdHlwZU5hbWVdLmZpZWxkcyA9IGZpZWxkcztcbiAgICAgICAgICAgICAgICBmaWVsZHNbZmllbGROYW1lXSA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjYW5vbmljYWxUeXBlc0luZm9bdHlwZU5hbWVdLmNhbm9uaWNhbCA9IHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgbWFwU2NoZW1hKHNjaGVtYSwge1xuICAgICAgICAgICAgW01hcHBlcktpbmQuT0JKRUNUX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgIGNvbnN0IGtleURpcmVjdGl2ZSA9IChfYSA9IGdldERpcmVjdGl2ZShzY2hlbWEsIHR5cGUsIGtleURpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbMF07XG4gICAgICAgICAgICAgICAgaWYgKGtleURpcmVjdGl2ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGlvblNldCA9IHBhcnNlU2VsZWN0aW9uU2V0KGtleURpcmVjdGl2ZVsnc2VsZWN0aW9uU2V0J10sIHsgbm9Mb2NhdGlvbjogdHJ1ZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0c0J5VHlwZVt0eXBlLm5hbWVdID0gc2VsZWN0aW9uU2V0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBjYW5vbmljYWxEaXJlY3RpdmUgPSAoX2IgPSBnZXREaXJlY3RpdmUoc2NoZW1hLCB0eXBlLCBjYW5vbmljYWxEaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iWzBdO1xuICAgICAgICAgICAgICAgIGlmIChjYW5vbmljYWxEaXJlY3RpdmUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDYW5vbmljYWxEZWZpbml0aW9uKHR5cGUubmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW01hcHBlcktpbmQuT0JKRUNUX0ZJRUxEXTogKGZpZWxkQ29uZmlnLCBmaWVsZE5hbWUsIHR5cGVOYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgICAgICAgICAgICAgY29uc3QgY29tcHV0ZWREaXJlY3RpdmUgPSAoX2EgPSBnZXREaXJlY3RpdmUoc2NoZW1hLCBmaWVsZENvbmZpZywgY29tcHV0ZWREaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzBdO1xuICAgICAgICAgICAgICAgIGlmIChjb21wdXRlZERpcmVjdGl2ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGlvblNldCA9IHBhcnNlU2VsZWN0aW9uU2V0KGNvbXB1dGVkRGlyZWN0aXZlWydzZWxlY3Rpb25TZXQnXSwgeyBub0xvY2F0aW9uOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWNvbXB1dGVkRmllbGRTZWxlY3Rpb25TZXRzW3R5cGVOYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tcHV0ZWRGaWVsZFNlbGVjdGlvblNldHNbdHlwZU5hbWVdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb21wdXRlZEZpZWxkU2VsZWN0aW9uU2V0c1t0eXBlTmFtZV1bZmllbGROYW1lXSA9IHNlbGVjdGlvblNldDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgbWVyZ2VEaXJlY3RpdmUgPSAoX2IgPSBnZXREaXJlY3RpdmUoc2NoZW1hLCBmaWVsZENvbmZpZywgbWVyZ2VEaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iWzBdO1xuICAgICAgICAgICAgICAgIGlmICgobWVyZ2VEaXJlY3RpdmUgPT09IG51bGwgfHwgbWVyZ2VEaXJlY3RpdmUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG1lcmdlRGlyZWN0aXZlWydrZXlGaWVsZCddKSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG1lcmdlRGlyZWN0aXZlS2V5RmllbGQgPSBtZXJnZURpcmVjdGl2ZVsna2V5RmllbGQnXTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0ID0gcGFyc2VTZWxlY3Rpb25TZXQoYHsgJHttZXJnZURpcmVjdGl2ZUtleUZpZWxkfX1gLCB7IG5vTG9jYXRpb246IHRydWUgfSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVOYW1lcyA9IG1lcmdlRGlyZWN0aXZlWyd0eXBlcyddO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXR1cm5UeXBlID0gZ2V0TmFtZWRUeXBlKGZpZWxkQ29uZmlnLnR5cGUpO1xuICAgICAgICAgICAgICAgICAgICBmb3JFYWNoQ29uY3JldGVUeXBlKHNjaGVtYSwgcmV0dXJuVHlwZSwgdHlwZU5hbWVzLCB0eXBlTmFtZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZU5hbWVzID09IG51bGwgfHwgdHlwZU5hbWVzLmluY2x1ZGVzKHR5cGVOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nU2VsZWN0aW9uU2V0ID0gc2VsZWN0aW9uU2V0c0J5VHlwZVt0eXBlTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0c0J5VHlwZVt0eXBlTmFtZV0gPSBleGlzdGluZ1NlbGVjdGlvblNldFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IG1lcmdlU2VsZWN0aW9uU2V0cyhleGlzdGluZ1NlbGVjdGlvblNldCwgc2VsZWN0aW9uU2V0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IHNlbGVjdGlvblNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGNhbm9uaWNhbERpcmVjdGl2ZSA9IChfYyA9IGdldERpcmVjdGl2ZShzY2hlbWEsIGZpZWxkQ29uZmlnLCBjYW5vbmljYWxEaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2MgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9jWzBdO1xuICAgICAgICAgICAgICAgIGlmIChjYW5vbmljYWxEaXJlY3RpdmUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDYW5vbmljYWxEZWZpbml0aW9uKHR5cGVOYW1lLCBmaWVsZE5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtNYXBwZXJLaW5kLklOVEVSRkFDRV9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbm9uaWNhbERpcmVjdGl2ZSA9IChfYSA9IGdldERpcmVjdGl2ZShzY2hlbWEsIHR5cGUsIGNhbm9uaWNhbERpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbMF07XG4gICAgICAgICAgICAgICAgaWYgKGNhbm9uaWNhbERpcmVjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDYW5vbmljYWxEZWZpbml0aW9uKHR5cGUubmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW01hcHBlcktpbmQuSU5URVJGQUNFX0ZJRUxEXTogKGZpZWxkQ29uZmlnLCBmaWVsZE5hbWUsIHR5cGVOYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbm9uaWNhbERpcmVjdGl2ZSA9IChfYSA9IGdldERpcmVjdGl2ZShzY2hlbWEsIGZpZWxkQ29uZmlnLCBjYW5vbmljYWxEaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzBdO1xuICAgICAgICAgICAgICAgIGlmIChjYW5vbmljYWxEaXJlY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2Fub25pY2FsRGVmaW5pdGlvbih0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBbTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBjb25zdCBjYW5vbmljYWxEaXJlY3RpdmUgPSAoX2EgPSBnZXREaXJlY3RpdmUoc2NoZW1hLCB0eXBlLCBjYW5vbmljYWxEaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzBdO1xuICAgICAgICAgICAgICAgIGlmIChjYW5vbmljYWxEaXJlY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q2Fub25pY2FsRGVmaW5pdGlvbih0eXBlLm5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9GSUVMRF06IChpbnB1dEZpZWxkQ29uZmlnLCBmaWVsZE5hbWUsIHR5cGVOYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbm9uaWNhbERpcmVjdGl2ZSA9IChfYSA9IGdldERpcmVjdGl2ZShzY2hlbWEsIGlucHV0RmllbGRDb25maWcsIGNhbm9uaWNhbERpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbMF07XG4gICAgICAgICAgICAgICAgaWYgKGNhbm9uaWNhbERpcmVjdGl2ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldENhbm9uaWNhbERlZmluaXRpb24odHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW01hcHBlcktpbmQuVU5JT05fVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBjb25zdCBjYW5vbmljYWxEaXJlY3RpdmUgPSAoX2EgPSBnZXREaXJlY3RpdmUoc2NoZW1hLCB0eXBlLCBjYW5vbmljYWxEaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzBdO1xuICAgICAgICAgICAgICAgIGlmIChjYW5vbmljYWxEaXJlY3RpdmUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDYW5vbmljYWxEZWZpbml0aW9uKHR5cGUubmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW01hcHBlcktpbmQuRU5VTV9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbm9uaWNhbERpcmVjdGl2ZSA9IChfYSA9IGdldERpcmVjdGl2ZShzY2hlbWEsIHR5cGUsIGNhbm9uaWNhbERpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2FbMF07XG4gICAgICAgICAgICAgICAgaWYgKGNhbm9uaWNhbERpcmVjdGl2ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldENhbm9uaWNhbERlZmluaXRpb24odHlwZS5uYW1lKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBbTWFwcGVyS2luZC5TQ0FMQVJfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgICAgIHZhciBfYTtcbiAgICAgICAgICAgICAgICBjb25zdCBjYW5vbmljYWxEaXJlY3RpdmUgPSAoX2EgPSBnZXREaXJlY3RpdmUoc2NoZW1hLCB0eXBlLCBjYW5vbmljYWxEaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWzBdO1xuICAgICAgICAgICAgICAgIGlmIChjYW5vbmljYWxEaXJlY3RpdmUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBzZXRDYW5vbmljYWxEZWZpbml0aW9uKHR5cGUubmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHN1YnNjaGVtYUNvbmZpZy5tZXJnZSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBzdWJzY2hlbWFDb25maWcubWVyZ2UpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtZXJnZWRUeXBlQ29uZmlnID0gc3Vic2NoZW1hQ29uZmlnLm1lcmdlW3R5cGVOYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAobWVyZ2VkVHlwZUNvbmZpZy5zZWxlY3Rpb25TZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0ID0gcGFyc2VTZWxlY3Rpb25TZXQobWVyZ2VkVHlwZUNvbmZpZy5zZWxlY3Rpb25TZXQsIHsgbm9Mb2NhdGlvbjogdHJ1ZSB9KTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGlvblNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGlvblNldHNCeVR5cGVbdHlwZU5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0c0J5VHlwZVt0eXBlTmFtZV0gPSBtZXJnZVNlbGVjdGlvblNldHMoc2VsZWN0aW9uU2V0c0J5VHlwZVt0eXBlTmFtZV0sIHNlbGVjdGlvblNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb25TZXRzQnlUeXBlW3R5cGVOYW1lXSA9IHNlbGVjdGlvblNldDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAobWVyZ2VkVHlwZUNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gbWVyZ2VkVHlwZUNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkQ29uZmlnID0gbWVyZ2VkVHlwZUNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZmllbGRDb25maWcuc2VsZWN0aW9uU2V0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0ID0gcGFyc2VTZWxlY3Rpb25TZXQoZmllbGRDb25maWcuc2VsZWN0aW9uU2V0LCB7IG5vTG9jYXRpb246IHRydWUgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0aW9uU2V0KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChfYSA9IGNvbXB1dGVkRmllbGRTZWxlY3Rpb25TZXRzW3R5cGVOYW1lXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2ZpZWxkTmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcHV0ZWRGaWVsZFNlbGVjdGlvblNldHNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gPSBtZXJnZVNlbGVjdGlvblNldHMoY29tcHV0ZWRGaWVsZFNlbGVjdGlvblNldHNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0sIHNlbGVjdGlvblNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoY29tcHV0ZWRGaWVsZFNlbGVjdGlvblNldHNbdHlwZU5hbWVdID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbXB1dGVkRmllbGRTZWxlY3Rpb25TZXRzW3R5cGVOYW1lXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29tcHV0ZWRGaWVsZFNlbGVjdGlvblNldHNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gPSBzZWxlY3Rpb25TZXQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFsbFNlbGVjdGlvblNldHNCeVR5cGUgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIHNlbGVjdGlvblNldHNCeVR5cGUpIHtcbiAgICAgICAgICAgIGFsbFNlbGVjdGlvblNldHNCeVR5cGVbdHlwZU5hbWVdID0gYWxsU2VsZWN0aW9uU2V0c0J5VHlwZVt0eXBlTmFtZV0gfHwgW107XG4gICAgICAgICAgICBjb25zdCBzZWxlY3Rpb25TZXQgPSBzZWxlY3Rpb25TZXRzQnlUeXBlW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGFsbFNlbGVjdGlvblNldHNCeVR5cGVbdHlwZU5hbWVdLnB1c2goc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIGNvbXB1dGVkRmllbGRTZWxlY3Rpb25TZXRzKSB7XG4gICAgICAgICAgICBjb25zdCBzZWxlY3Rpb25TZXRzID0gY29tcHV0ZWRGaWVsZFNlbGVjdGlvblNldHNbdHlwZU5hbWVdO1xuICAgICAgICAgICAgZm9yIChjb25zdCBpIGluIHNlbGVjdGlvblNldHMpIHtcbiAgICAgICAgICAgICAgICBhbGxTZWxlY3Rpb25TZXRzQnlUeXBlW3R5cGVOYW1lXSA9IGFsbFNlbGVjdGlvblNldHNCeVR5cGVbdHlwZU5hbWVdIHx8IFtdO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNlbGVjdGlvblNldCA9IHNlbGVjdGlvblNldHNbaV07XG4gICAgICAgICAgICAgICAgYWxsU2VsZWN0aW9uU2V0c0J5VHlwZVt0eXBlTmFtZV0ucHVzaChzZWxlY3Rpb25TZXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIG1hcFNjaGVtYShzY2hlbWEsIHtcbiAgICAgICAgICAgIFtNYXBwZXJLaW5kLk9CSkVDVF9GSUVMRF06IGZ1bmN0aW9uIG9iamVjdEZpZWxkTWFwcGVyKGZpZWxkQ29uZmlnLCBmaWVsZE5hbWUpIHtcbiAgICAgICAgICAgICAgICB2YXIgX2EsIF9iO1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lcmdlRGlyZWN0aXZlID0gKF9hID0gZ2V0RGlyZWN0aXZlKHNjaGVtYSwgZmllbGRDb25maWcsIG1lcmdlRGlyZWN0aXZlTmFtZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucykpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVswXTtcbiAgICAgICAgICAgICAgICBpZiAobWVyZ2VEaXJlY3RpdmUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXR1cm5UeXBlID0gZ2V0TnVsbGFibGVUeXBlKGZpZWxkQ29uZmlnLnR5cGUpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXR1cm5zTGlzdCA9IGlzTGlzdFR5cGUocmV0dXJuVHlwZSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5hbWVkVHlwZSA9IGdldE5hbWVkVHlwZShyZXR1cm5UeXBlKTtcbiAgICAgICAgICAgICAgICAgICAgbGV0IG1lcmdlQXJnc0V4cHIgPSBtZXJnZURpcmVjdGl2ZVsnYXJnc0V4cHInXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lcmdlQXJnc0V4cHIgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qga2V5ID0gbWVyZ2VEaXJlY3RpdmVbJ2tleSddO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qga2V5RmllbGQgPSBtZXJnZURpcmVjdGl2ZVsna2V5RmllbGQnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGtleUV4cHIgPSBrZXkgIT0gbnVsbCA/IGJ1aWxkS2V5RXhwcihrZXkpIDoga2V5RmllbGQgIT0gbnVsbCA/IGAka2V5LiR7a2V5RmllbGR9YCA6ICcka2V5JztcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGtleUFyZyA9IG1lcmdlRGlyZWN0aXZlWydrZXlBcmcnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFyZ05hbWVzID0ga2V5QXJnID09IG51bGwgPyBbT2JqZWN0LmtleXMoKF9iID0gZmllbGRDb25maWcuYXJncykgIT09IG51bGwgJiYgX2IgIT09IHZvaWQgMCA/IF9iIDoge30pWzBdXSA6IGtleUFyZy5zcGxpdCgnLicpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbGFzdEFyZ05hbWUgPSBhcmdOYW1lcy5wb3AoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlQXJnc0V4cHIgPSByZXR1cm5zTGlzdCA/IGAke2xhc3RBcmdOYW1lfTogW1ske2tleUV4cHJ9XV1gIDogYCR7bGFzdEFyZ05hbWV9OiAke2tleUV4cHJ9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYXJnTmFtZSBvZiBhcmdOYW1lcy5yZXZlcnNlKCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXJnZUFyZ3NFeHByID0gYCR7YXJnTmFtZX06IHsgJHttZXJnZUFyZ3NFeHByfSB9YDtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCB0eXBlTmFtZXMgPSBtZXJnZURpcmVjdGl2ZVsndHlwZXMnXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yRWFjaENvbmNyZXRlVHlwZU5hbWUobmFtZWRUeXBlLCBzY2hlbWEsIHR5cGVOYW1lcywgZnVuY3Rpb24gZ2VuZXJhdGVSZXNvbHZlSW5mbyh0eXBlTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkTWVyZ2VBcmdzRXhwciA9IHBhcnNlTWVyZ2VBcmdzRXhwcihtZXJnZUFyZ3NFeHByLCBhbGxTZWxlY3Rpb25TZXRzQnlUeXBlW3R5cGVOYW1lXSA9PSBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IG1lcmdlU2VsZWN0aW9uU2V0cyguLi5hbGxTZWxlY3Rpb25TZXRzQnlUeXBlW3R5cGVOYW1lXSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYWRkaXRpb25hbEFyZ3MgPSBtZXJnZURpcmVjdGl2ZVsnYWRkaXRpb25hbEFyZ3MnXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhZGRpdGlvbmFsQXJncyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkTWVyZ2VBcmdzRXhwci5hcmdzID0gbWVyZ2VEZWVwKFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFyc2VkTWVyZ2VBcmdzRXhwci5hcmdzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZUZyb21BU1RVbnR5cGVkKHBhcnNlVmFsdWUoYHsgJHthZGRpdGlvbmFsQXJnc30gfWAsIHsgbm9Mb2NhdGlvbjogdHJ1ZSB9KSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRUeXBlc1Jlc29sdmVyc0luZm9bdHlwZU5hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm5zTGlzdCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5wYXJzZWRNZXJnZUFyZ3NFeHByLFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBzZWxlY3Rpb25TZXRzQnlUeXBlKSB7XG4gICAgICAgICAgICBjb25zdCBzZWxlY3Rpb25TZXQgPSBzZWxlY3Rpb25TZXRzQnlUeXBlW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGNvbnN0IG1lcmdlQ29uZmlnID0gKF9iID0gbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgICAgbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlID0gbWVyZ2VDb25maWc7XG4gICAgICAgICAgICBpZiAobWVyZ2VDb25maWdbdHlwZU5hbWVdID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBuZXdTdWJzY2hlbWFDb25maWcubWVyZ2VbdHlwZU5hbWVdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG1lcmdlVHlwZUNvbmZpZyA9IG1lcmdlQ29uZmlnW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIG1lcmdlVHlwZUNvbmZpZy5zZWxlY3Rpb25TZXQgPSBwcmludChzZWxlY3Rpb25TZXQpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gY29tcHV0ZWRGaWVsZFNlbGVjdGlvblNldHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHNlbGVjdGlvblNldHMgPSBjb21wdXRlZEZpZWxkU2VsZWN0aW9uU2V0c1t0eXBlTmFtZV07XG4gICAgICAgICAgICBjb25zdCBtZXJnZUNvbmZpZyA9IChfYyA9IG5ld1N1YnNjaGVtYUNvbmZpZy5tZXJnZSkgIT09IG51bGwgJiYgX2MgIT09IHZvaWQgMCA/IF9jIDogT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgIG5ld1N1YnNjaGVtYUNvbmZpZy5tZXJnZSA9IG1lcmdlQ29uZmlnO1xuICAgICAgICAgICAgaWYgKG1lcmdlQ29uZmlnW3R5cGVOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbWVyZ2VDb25maWdbdHlwZU5hbWVdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG1lcmdlVHlwZUNvbmZpZyA9IG5ld1N1YnNjaGVtYUNvbmZpZy5tZXJnZVt0eXBlTmFtZV07XG4gICAgICAgICAgICBjb25zdCBtZXJnZVR5cGVDb25maWdGaWVsZHMgPSAoX2QgPSBtZXJnZVR5cGVDb25maWcuZmllbGRzKSAhPT0gbnVsbCAmJiBfZCAhPT0gdm9pZCAwID8gX2QgOiBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgICAgbWVyZ2VUeXBlQ29uZmlnLmZpZWxkcyA9IG1lcmdlVHlwZUNvbmZpZ0ZpZWxkcztcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHNlbGVjdGlvblNldHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3Rpb25TZXQgPSBzZWxlY3Rpb25TZXRzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRDb25maWcgPSAoX2UgPSBtZXJnZVR5cGVDb25maWdGaWVsZHNbZmllbGROYW1lXSkgIT09IG51bGwgJiYgX2UgIT09IHZvaWQgMCA/IF9lIDogT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgICAgICBtZXJnZVR5cGVDb25maWdGaWVsZHNbZmllbGROYW1lXSA9IGZpZWxkQ29uZmlnO1xuICAgICAgICAgICAgICAgIGZpZWxkQ29uZmlnLnNlbGVjdGlvblNldCA9IHByaW50KHNlbGVjdGlvblNldCk7XG4gICAgICAgICAgICAgICAgZmllbGRDb25maWcuY29tcHV0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gbWVyZ2VkVHlwZXNSZXNvbHZlcnNJbmZvKSB7XG4gICAgICAgICAgICBjb25zdCBtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvID0gbWVyZ2VkVHlwZXNSZXNvbHZlcnNJbmZvW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGNvbnN0IG1lcmdlQ29uZmlnID0gKF9mID0gbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlKSAhPT0gbnVsbCAmJiBfZiAhPT0gdm9pZCAwID8gX2YgOiBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgICAgbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlID0gbWVyZ2VDb25maWc7XG4gICAgICAgICAgICBpZiAobmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlW3R5cGVOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlW3R5cGVOYW1lXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBtZXJnZVR5cGVDb25maWcgPSBuZXdTdWJzY2hlbWFDb25maWcubWVyZ2VbdHlwZU5hbWVdO1xuICAgICAgICAgICAgbWVyZ2VUeXBlQ29uZmlnLmZpZWxkTmFtZSA9IG1lcmdlZFR5cGVSZXNvbHZlckluZm8uZmllbGROYW1lO1xuICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVSZXNvbHZlckluZm8ucmV0dXJuc0xpc3QpIHtcbiAgICAgICAgICAgICAgICBtZXJnZVR5cGVDb25maWcua2V5ID0gZ2VuZXJhdGVLZXlGbihtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvKTtcbiAgICAgICAgICAgICAgICBtZXJnZVR5cGVDb25maWcuYXJnc0Zyb21LZXlzID0gZ2VuZXJhdGVBcmdzRnJvbUtleXNGbihtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG1lcmdlVHlwZUNvbmZpZy5hcmdzID0gZ2VuZXJhdGVBcmdzRm4obWVyZ2VkVHlwZVJlc29sdmVySW5mbyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBjYW5vbmljYWxUeXBlc0luZm8pIHtcbiAgICAgICAgICAgIGNvbnN0IGNhbm9uaWNhbFR5cGVJbmZvID0gY2Fub25pY2FsVHlwZXNJbmZvW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGNvbnN0IG1lcmdlQ29uZmlnID0gKF9nID0gbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlKSAhPT0gbnVsbCAmJiBfZyAhPT0gdm9pZCAwID8gX2cgOiBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICAgICAgbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlID0gbWVyZ2VDb25maWc7XG4gICAgICAgICAgICBpZiAobmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlW3R5cGVOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlW3R5cGVOYW1lXSA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBtZXJnZVR5cGVDb25maWcgPSBuZXdTdWJzY2hlbWFDb25maWcubWVyZ2VbdHlwZU5hbWVdO1xuICAgICAgICAgICAgaWYgKGNhbm9uaWNhbFR5cGVJbmZvLmNhbm9uaWNhbCkge1xuICAgICAgICAgICAgICAgIG1lcmdlVHlwZUNvbmZpZy5jYW5vbmljYWwgPSB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGNhbm9uaWNhbFR5cGVJbmZvLmZpZWxkcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lcmdlVHlwZUNvbmZpZ0ZpZWxkcyA9IChfaCA9IG1lcmdlVHlwZUNvbmZpZy5maWVsZHMpICE9PSBudWxsICYmIF9oICE9PSB2b2lkIDAgPyBfaCA6IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgICAgICAgICAgICAgbWVyZ2VUeXBlQ29uZmlnLmZpZWxkcyA9IG1lcmdlVHlwZUNvbmZpZ0ZpZWxkcztcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBjYW5vbmljYWxUeXBlSW5mby5maWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lcmdlVHlwZUNvbmZpZ0ZpZWxkc1tmaWVsZE5hbWVdID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlVHlwZUNvbmZpZ0ZpZWxkc1tmaWVsZE5hbWVdID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBtZXJnZVR5cGVDb25maWdGaWVsZHNbZmllbGROYW1lXS5jYW5vbmljYWwgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3U3Vic2NoZW1hQ29uZmlnO1xuICAgIH07XG59XG5mdW5jdGlvbiBmb3JFYWNoQ29uY3JldGVUeXBlKHNjaGVtYSwgdHlwZSwgdHlwZU5hbWVzLCBmbikge1xuICAgIGlmIChpc0ludGVyZmFjZVR5cGUodHlwZSkpIHtcbiAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBvZiBnZXRJbXBsZW1lbnRpbmdUeXBlcyh0eXBlLm5hbWUsIHNjaGVtYSkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlTmFtZXMgPT0gbnVsbCB8fCB0eXBlTmFtZXMuaW5jbHVkZXModHlwZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgZm4odHlwZU5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzVW5pb25UeXBlKHR5cGUpKSB7XG4gICAgICAgIGZvciAoY29uc3QgeyBuYW1lOiB0eXBlTmFtZSB9IG9mIHR5cGUuZ2V0VHlwZXMoKSkge1xuICAgICAgICAgICAgaWYgKHR5cGVOYW1lcyA9PSBudWxsIHx8IHR5cGVOYW1lcy5pbmNsdWRlcyh0eXBlTmFtZSkpIHtcbiAgICAgICAgICAgICAgICBmbih0eXBlTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaXNPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIGZuKHR5cGUubmFtZSk7XG4gICAgfVxufVxuZnVuY3Rpb24gZ2VuZXJhdGVLZXlGbihtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGtleUZuKG9yaWdpbmFsUmVzdWx0KSB7XG4gICAgICAgIHJldHVybiBnZXRQcm9wZXJ0aWVzKG9yaWdpbmFsUmVzdWx0LCBtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvLnVzZWRQcm9wZXJ0aWVzKTtcbiAgICB9O1xufVxuZnVuY3Rpb24gZ2VuZXJhdGVBcmdzRnJvbUtleXNGbihtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvKSB7XG4gICAgY29uc3QgeyBleHBhbnNpb25zLCBhcmdzIH0gPSBtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvO1xuICAgIHJldHVybiBmdW5jdGlvbiBnZW5lcmF0ZUFyZ3NGcm9tS2V5cyhrZXlzKSB7XG4gICAgICAgIGNvbnN0IG5ld0FyZ3MgPSBtZXJnZURlZXAoW3t9LCBhcmdzXSk7XG4gICAgICAgIGlmIChleHBhbnNpb25zKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGV4cGFuc2lvbiBvZiBleHBhbnNpb25zKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbWFwcGluZ0luc3RydWN0aW9ucyA9IGV4cGFuc2lvbi5tYXBwaW5nSW5zdHJ1Y3Rpb25zO1xuICAgICAgICAgICAgICAgIGNvbnN0IGV4cGFuZGVkID0gW107XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xuICAgICAgICAgICAgICAgICAgICBsZXQgbmV3VmFsdWUgPSBtZXJnZURlZXAoW3t9LCBleHBhbnNpb24udmFsdWVQYXRoXSk7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgeyBkZXN0aW5hdGlvblBhdGgsIHNvdXJjZVBhdGggfSBvZiBtYXBwaW5nSW5zdHJ1Y3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVzdGluYXRpb25QYXRoLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkZFByb3BlcnR5KG5ld1ZhbHVlLCBkZXN0aW5hdGlvblBhdGgsIGdldFByb3BlcnR5KGtleSwgc291cmNlUGF0aCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3VmFsdWUgPSBnZXRQcm9wZXJ0eShrZXksIHNvdXJjZVBhdGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGV4cGFuZGVkLnB1c2gobmV3VmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBhZGRQcm9wZXJ0eShuZXdBcmdzLCBleHBhbnNpb24udmFsdWVQYXRoLCBleHBhbmRlZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ld0FyZ3M7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGdlbmVyYXRlQXJnc0ZuKG1lcmdlZFR5cGVSZXNvbHZlckluZm8pIHtcbiAgICBjb25zdCB7IG1hcHBpbmdJbnN0cnVjdGlvbnMsIGFyZ3MsIHVzZWRQcm9wZXJ0aWVzIH0gPSBtZXJnZWRUeXBlUmVzb2x2ZXJJbmZvO1xuICAgIHJldHVybiBmdW5jdGlvbiBnZW5lcmF0ZUFyZ3Mob3JpZ2luYWxSZXN1bHQpIHtcbiAgICAgICAgY29uc3QgbmV3QXJncyA9IG1lcmdlRGVlcChbe30sIGFyZ3NdKTtcbiAgICAgICAgY29uc3QgZmlsdGVyZWRSZXN1bHQgPSBnZXRQcm9wZXJ0aWVzKG9yaWdpbmFsUmVzdWx0LCB1c2VkUHJvcGVydGllcyk7XG4gICAgICAgIGlmIChtYXBwaW5nSW5zdHJ1Y3Rpb25zKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IG1hcHBpbmdJbnN0cnVjdGlvbiBvZiBtYXBwaW5nSW5zdHJ1Y3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgeyBkZXN0aW5hdGlvblBhdGgsIHNvdXJjZVBhdGggfSA9IG1hcHBpbmdJbnN0cnVjdGlvbjtcbiAgICAgICAgICAgICAgICBhZGRQcm9wZXJ0eShuZXdBcmdzLCBkZXN0aW5hdGlvblBhdGgsIGdldFByb3BlcnR5KGZpbHRlcmVkUmVzdWx0LCBzb3VyY2VQYXRoKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ld0FyZ3M7XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGJ1aWxkS2V5RXhwcihrZXkpIHtcbiAgICBsZXQgbWVyZ2VkT2JqZWN0ID0ge307XG4gICAgZm9yIChjb25zdCBrZXlEZWYgb2Yga2V5KSB7XG4gICAgICAgIGxldCBbYWxpYXNPcktleVBhdGgsIGtleVBhdGhdID0ga2V5RGVmLnNwbGl0KCc6Jyk7XG4gICAgICAgIGxldCBhbGlhc1BhdGg7XG4gICAgICAgIGlmIChrZXlQYXRoID09IG51bGwpIHtcbiAgICAgICAgICAgIGtleVBhdGggPSBhbGlhc1BhdGggPSBhbGlhc09yS2V5UGF0aDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGFsaWFzUGF0aCA9IGFsaWFzT3JLZXlQYXRoO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGFsaWFzUGFydHMgPSBhbGlhc1BhdGguc3BsaXQoJy4nKTtcbiAgICAgICAgY29uc3QgbGFzdEFsaWFzUGFydCA9IGFsaWFzUGFydHMucG9wKCk7XG4gICAgICAgIGlmIChsYXN0QWxpYXNQYXJ0ID09IG51bGwpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5IFwiJHtrZXl9XCIgaXMgaW52YWxpZCwgbm8gcGF0aCBwcm92aWRlZC5gKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgb2JqZWN0ID0geyBbbGFzdEFsaWFzUGFydF06IGAka2V5LiR7a2V5UGF0aH1gIH07XG4gICAgICAgIGZvciAoY29uc3QgYWxpYXNQYXJ0IG9mIGFsaWFzUGFydHMucmV2ZXJzZSgpKSB7XG4gICAgICAgICAgICBvYmplY3QgPSB7IFthbGlhc1BhcnRdOiBvYmplY3QgfTtcbiAgICAgICAgfVxuICAgICAgICBtZXJnZWRPYmplY3QgPSBtZXJnZURlZXAoW21lcmdlZE9iamVjdCwgb2JqZWN0XSk7XG4gICAgfVxuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShtZXJnZWRPYmplY3QpLnJlcGxhY2UoL1wiL2csICcnKTtcbn1cbmZ1bmN0aW9uIG1lcmdlU2VsZWN0aW9uU2V0cyguLi5zZWxlY3Rpb25TZXRzKSB7XG4gICAgY29uc3Qgbm9ybWFsaXplZFNlbGVjdGlvbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvciAoY29uc3Qgc2VsZWN0aW9uU2V0IG9mIHNlbGVjdGlvblNldHMpIHtcbiAgICAgICAgZm9yIChjb25zdCBzZWxlY3Rpb24gb2Ygc2VsZWN0aW9uU2V0LnNlbGVjdGlvbnMpIHtcbiAgICAgICAgICAgIGNvbnN0IG5vcm1hbGl6ZWRTZWxlY3Rpb24gPSBwcmludChzZWxlY3Rpb24pO1xuICAgICAgICAgICAgbm9ybWFsaXplZFNlbGVjdGlvbnNbbm9ybWFsaXplZFNlbGVjdGlvbl0gPSBzZWxlY3Rpb247XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgbmV3U2VsZWN0aW9uU2V0ID0ge1xuICAgICAgICBraW5kOiBLaW5kLlNFTEVDVElPTl9TRVQsXG4gICAgICAgIHNlbGVjdGlvbnM6IE9iamVjdC52YWx1ZXMobm9ybWFsaXplZFNlbGVjdGlvbnMpLFxuICAgIH07XG4gICAgcmV0dXJuIG5ld1NlbGVjdGlvblNldDtcbn1cbmZ1bmN0aW9uIGZvckVhY2hDb25jcmV0ZVR5cGVOYW1lKHJldHVyblR5cGUsIHNjaGVtYSwgdHlwZU5hbWVzLCBmbikge1xuICAgIGlmIChpc0ludGVyZmFjZVR5cGUocmV0dXJuVHlwZSkpIHtcbiAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBvZiBnZXRJbXBsZW1lbnRpbmdUeXBlcyhyZXR1cm5UeXBlLm5hbWUsIHNjaGVtYSkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlTmFtZXMgPT0gbnVsbCB8fCB0eXBlTmFtZXMuaW5jbHVkZXModHlwZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgZm4odHlwZU5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzVW5pb25UeXBlKHJldHVyblR5cGUpKSB7XG4gICAgICAgIGZvciAoY29uc3QgdHlwZSBvZiByZXR1cm5UeXBlLmdldFR5cGVzKCkpIHtcbiAgICAgICAgICAgIGlmICh0eXBlTmFtZXMgPT0gbnVsbCB8fCB0eXBlTmFtZXMuaW5jbHVkZXModHlwZS5uYW1lKSkge1xuICAgICAgICAgICAgICAgIGZuKHR5cGUubmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaXNPYmplY3RUeXBlKHJldHVyblR5cGUpICYmICh0eXBlTmFtZXMgPT0gbnVsbCB8fCB0eXBlTmFtZXMuaW5jbHVkZXMocmV0dXJuVHlwZS5uYW1lKSkpIHtcbiAgICAgICAgZm4ocmV0dXJuVHlwZS5uYW1lKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesTransformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesValidator.js":
/*!*******************************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesValidator.js ***!
  \*******************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stitchingDirectivesValidator: () => (/* binding */ stitchingDirectivesValidator)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/get-directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/selectionSets.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/get-implementing-types.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _defaultStitchingDirectiveOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./defaultStitchingDirectiveOptions.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/defaultStitchingDirectiveOptions.js\");\n/* harmony import */ var _parseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./parseMergeArgsExpr.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/parseMergeArgsExpr.js\");\n\n\n\n\nconst dottedNameRegEx = /^[_A-Za-z][_0-9A-Za-z]*(.[_A-Za-z][_0-9A-Za-z]*)*$/;\nfunction stitchingDirectivesValidator(options = {}) {\n    const { keyDirectiveName, computedDirectiveName, mergeDirectiveName, pathToDirectivesInExtensions } = {\n        ..._defaultStitchingDirectiveOptions_js__WEBPACK_IMPORTED_MODULE_0__.defaultStitchingDirectiveOptions,\n        ...options,\n    };\n    return (schema) => {\n        var _a;\n        const queryTypeName = (_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name;\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mapSchema)(schema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.MapperKind.OBJECT_TYPE]: type => {\n                var _a;\n                const keyDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getDirective)(schema, type, keyDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (keyDirective != null) {\n                    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.parseSelectionSet)(keyDirective['selectionSet']);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.MapperKind.OBJECT_FIELD]: (fieldConfig, _fieldName, typeName) => {\n                var _a, _b, _c;\n                const computedDirective = (_a = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getDirective)(schema, fieldConfig, computedDirectiveName, pathToDirectivesInExtensions)) === null || _a === void 0 ? void 0 : _a[0];\n                if (computedDirective != null) {\n                    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.parseSelectionSet)(computedDirective['selectionSet']);\n                }\n                const mergeDirective = (_b = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getDirective)(schema, fieldConfig, mergeDirectiveName, pathToDirectivesInExtensions)) === null || _b === void 0 ? void 0 : _b[0];\n                if (mergeDirective != null) {\n                    if (typeName !== queryTypeName) {\n                        throw new Error('@merge directive may be used only for root fields of the root Query type.');\n                    }\n                    let returnType = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.getNullableType)(fieldConfig.type);\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_5__.isListType)(returnType)) {\n                        returnType = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.getNullableType)(returnType.ofType);\n                    }\n                    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_5__.isNamedType)(returnType)) {\n                        throw new Error('@merge directive must be used on a field that returns an object or a list of objects.');\n                    }\n                    const mergeArgsExpr = mergeDirective['argsExpr'];\n                    if (mergeArgsExpr != null) {\n                        (0,_parseMergeArgsExpr_js__WEBPACK_IMPORTED_MODULE_6__.parseMergeArgsExpr)(mergeArgsExpr);\n                    }\n                    const args = Object.keys((_c = fieldConfig.args) !== null && _c !== void 0 ? _c : {});\n                    const keyArg = mergeDirective['keyArg'];\n                    if (keyArg == null) {\n                        if (!mergeArgsExpr && args.length !== 1) {\n                            throw new Error('Cannot use @merge directive without `keyArg` argument if resolver takes more than one argument.');\n                        }\n                    }\n                    else if (!keyArg.match(dottedNameRegEx)) {\n                        throw new Error('`keyArg` argument for @merge directive must be a set of valid GraphQL SDL names separated by periods.');\n                        // TODO: ideally we should check that the arg exists for the resolver\n                    }\n                    const keyField = mergeDirective['keyField'];\n                    if (keyField != null && !keyField.match(dottedNameRegEx)) {\n                        throw new Error('`keyField` argument for @merge directive must be a set of valid GraphQL SDL names separated by periods.');\n                        // TODO: ideally we should check that it is part of the key\n                    }\n                    const key = mergeDirective['key'];\n                    if (key != null) {\n                        if (keyField != null) {\n                            throw new Error('Cannot use @merge directive with both `keyField` and `key` arguments.');\n                        }\n                        for (const keyDef of key) {\n                            let [aliasOrKeyPath, keyPath] = keyDef.split(':');\n                            let aliasPath;\n                            if (keyPath == null) {\n                                keyPath = aliasPath = aliasOrKeyPath;\n                            }\n                            else {\n                                aliasPath = aliasOrKeyPath;\n                            }\n                            if (keyPath != null && !keyPath.match(dottedNameRegEx)) {\n                                throw new Error('Each partial key within the `key` argument for @merge directive must be a set of valid GraphQL SDL names separated by periods.');\n                                // TODO: ideally we should check that it is part of the key\n                            }\n                            if (aliasPath != null && !aliasOrKeyPath.match(dottedNameRegEx)) {\n                                throw new Error('Each alias within the `key` argument for @merge directive must be a set of valid GraphQL SDL names separated by periods.');\n                                // TODO: ideally we should check that the arg exists within the resolver\n                            }\n                        }\n                    }\n                    const additionalArgs = mergeDirective['additionalArgs'];\n                    if (additionalArgs != null) {\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_7__.parseValue)(`{ ${additionalArgs} }`, { noLocation: true });\n                    }\n                    if (mergeArgsExpr != null && (keyArg != null || additionalArgs != null)) {\n                        throw new Error('Cannot use @merge directive with both `argsExpr` argument and any additional argument.');\n                    }\n                    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_5__.isInterfaceType)(returnType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_5__.isUnionType)(returnType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_5__.isObjectType)(returnType)) {\n                        throw new Error('@merge directive may be used only with resolver that return an object, interface, or union.');\n                    }\n                    const typeNames = mergeDirective['types'];\n                    if (typeNames != null) {\n                        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_5__.isAbstractType)(returnType)) {\n                            throw new Error('Types argument can only be used with a field that returns an abstract type.');\n                        }\n                        const implementingTypes = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.isInterfaceType)(returnType)\n                            ? (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.getImplementingTypes)(returnType.name, schema).map(typeName => schema.getType(typeName))\n                            : returnType.getTypes();\n                        const implementingTypeNames = implementingTypes.map(type => type === null || type === void 0 ? void 0 : type.name).filter(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.isSome);\n                        for (const typeName of typeNames) {\n                            if (!implementingTypeNames.includes(typeName)) {\n                                throw new Error(`Types argument can only include only type names that implement the field return type's abstract type.`);\n                            }\n                        }\n                    }\n                }\n                return undefined;\n            },\n        });\n        return schema;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/stitching-directives/esm/stitchingDirectivesValidator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultCreateProxyingResolver: () => (/* binding */ defaultCreateProxyingResolver),\n/* harmony export */   generateProxyingResolvers: () => (/* binding */ generateProxyingResolvers)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n\n\nfunction generateProxyingResolvers(subschemaConfig) {\n    var _a;\n    const targetSchema = subschemaConfig.schema;\n    const createProxyingResolver = (_a = subschemaConfig.createProxyingResolver) !== null && _a !== void 0 ? _a : defaultCreateProxyingResolver;\n    const rootTypeMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getRootTypeMap)(targetSchema);\n    const resolvers = {};\n    for (const [operation, rootType] of rootTypeMap.entries()) {\n        const typeName = rootType.name;\n        const fields = rootType.getFields();\n        resolvers[typeName] = {};\n        for (const fieldName in fields) {\n            const proxyingResolver = createProxyingResolver({\n                subschemaConfig,\n                operation,\n                fieldName,\n            });\n            const finalResolver = createPossiblyNestedProxyingResolver(subschemaConfig, proxyingResolver);\n            if (operation === 'subscription') {\n                resolvers[typeName][fieldName] = {\n                    subscribe: finalResolver,\n                    resolve: identical,\n                };\n            }\n            else {\n                resolvers[typeName][fieldName] = {\n                    resolve: finalResolver,\n                };\n            }\n        }\n    }\n    return resolvers;\n}\nfunction identical(value) {\n    return value;\n}\nfunction createPossiblyNestedProxyingResolver(subschemaConfig, proxyingResolver) {\n    return function possiblyNestedProxyingResolver(parent, args, context, info) {\n        if (parent != null) {\n            const responseKey = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getResponseKeyFromInfo)(info);\n            // Check to see if the parent contains a proxied result\n            if ((0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.isExternalObject)(parent)) {\n                const unpathedErrors = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.getUnpathedErrors)(parent);\n                const subschema = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.getSubschema)(parent, responseKey);\n                // If there is a proxied result from this subschema, return it\n                // This can happen even for a root field when the root type ia\n                // also nested as a field within a different type.\n                if (subschemaConfig === subschema && parent[responseKey] !== undefined) {\n                    return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_3__.resolveExternalValue)(parent[responseKey], unpathedErrors, subschema, context, info);\n                }\n            }\n        }\n        return proxyingResolver(parent, args, context, info);\n    };\n}\nfunction defaultCreateProxyingResolver({ subschemaConfig, operation, }) {\n    return function proxyingResolver(_parent, _args, context, info) {\n        return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_4__.delegateToSchema)({\n            schema: subschemaConfig,\n            operation,\n            context,\n            info,\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9lc20vZ2VuZXJhdGVQcm94eWluZ1Jlc29sdmVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQThFO0FBQ3VEO0FBQzlIO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9FQUFjO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLDRFQUFzQjtBQUN0RDtBQUNBLGdCQUFnQix5RUFBZ0I7QUFDaEMsdUNBQXVDLDBFQUFpQjtBQUN4RCxrQ0FBa0MscUVBQVk7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsNkVBQW9CO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlDQUF5Qyw2QkFBNkI7QUFDN0U7QUFDQSxlQUFlLHlFQUFnQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9tZXJnZXItc3RpdGNoaW5nL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL2VzbS9nZW5lcmF0ZVByb3h5aW5nUmVzb2x2ZXJzLmpzPzc0MTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbywgZ2V0Um9vdFR5cGVNYXAgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBkZWxlZ2F0ZVRvU2NoZW1hLCBnZXRTdWJzY2hlbWEsIHJlc29sdmVFeHRlcm5hbFZhbHVlLCBpc0V4dGVybmFsT2JqZWN0LCBnZXRVbnBhdGhlZEVycm9ycywgfSBmcm9tICdAZ3JhcGhxbC10b29scy9kZWxlZ2F0ZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVQcm94eWluZ1Jlc29sdmVycyhzdWJzY2hlbWFDb25maWcpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgdGFyZ2V0U2NoZW1hID0gc3Vic2NoZW1hQ29uZmlnLnNjaGVtYTtcbiAgICBjb25zdCBjcmVhdGVQcm94eWluZ1Jlc29sdmVyID0gKF9hID0gc3Vic2NoZW1hQ29uZmlnLmNyZWF0ZVByb3h5aW5nUmVzb2x2ZXIpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGRlZmF1bHRDcmVhdGVQcm94eWluZ1Jlc29sdmVyO1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gZ2V0Um9vdFR5cGVNYXAodGFyZ2V0U2NoZW1hKTtcbiAgICBjb25zdCByZXNvbHZlcnMgPSB7fTtcbiAgICBmb3IgKGNvbnN0IFtvcGVyYXRpb24sIHJvb3RUeXBlXSBvZiByb290VHlwZU1hcC5lbnRyaWVzKCkpIHtcbiAgICAgICAgY29uc3QgdHlwZU5hbWUgPSByb290VHlwZS5uYW1lO1xuICAgICAgICBjb25zdCBmaWVsZHMgPSByb290VHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IHByb3h5aW5nUmVzb2x2ZXIgPSBjcmVhdGVQcm94eWluZ1Jlc29sdmVyKHtcbiAgICAgICAgICAgICAgICBzdWJzY2hlbWFDb25maWcsXG4gICAgICAgICAgICAgICAgb3BlcmF0aW9uLFxuICAgICAgICAgICAgICAgIGZpZWxkTmFtZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3QgZmluYWxSZXNvbHZlciA9IGNyZWF0ZVBvc3NpYmx5TmVzdGVkUHJveHlpbmdSZXNvbHZlcihzdWJzY2hlbWFDb25maWcsIHByb3h5aW5nUmVzb2x2ZXIpO1xuICAgICAgICAgICAgaWYgKG9wZXJhdGlvbiA9PT0gJ3N1YnNjcmlwdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YnNjcmliZTogZmluYWxSZXNvbHZlcixcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZTogaWRlbnRpY2FsLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmU6IGZpbmFsUmVzb2x2ZXIsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzb2x2ZXJzO1xufVxuZnVuY3Rpb24gaWRlbnRpY2FsKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlO1xufVxuZnVuY3Rpb24gY3JlYXRlUG9zc2libHlOZXN0ZWRQcm94eWluZ1Jlc29sdmVyKHN1YnNjaGVtYUNvbmZpZywgcHJveHlpbmdSZXNvbHZlcikge1xuICAgIHJldHVybiBmdW5jdGlvbiBwb3NzaWJseU5lc3RlZFByb3h5aW5nUmVzb2x2ZXIocGFyZW50LCBhcmdzLCBjb250ZXh0LCBpbmZvKSB7XG4gICAgICAgIGlmIChwYXJlbnQgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgcmVzcG9uc2VLZXkgPSBnZXRSZXNwb25zZUtleUZyb21JbmZvKGluZm8pO1xuICAgICAgICAgICAgLy8gQ2hlY2sgdG8gc2VlIGlmIHRoZSBwYXJlbnQgY29udGFpbnMgYSBwcm94aWVkIHJlc3VsdFxuICAgICAgICAgICAgaWYgKGlzRXh0ZXJuYWxPYmplY3QocGFyZW50KSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHVucGF0aGVkRXJyb3JzID0gZ2V0VW5wYXRoZWRFcnJvcnMocGFyZW50KTtcbiAgICAgICAgICAgICAgICBjb25zdCBzdWJzY2hlbWEgPSBnZXRTdWJzY2hlbWEocGFyZW50LCByZXNwb25zZUtleSk7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlcmUgaXMgYSBwcm94aWVkIHJlc3VsdCBmcm9tIHRoaXMgc3Vic2NoZW1hLCByZXR1cm4gaXRcbiAgICAgICAgICAgICAgICAvLyBUaGlzIGNhbiBoYXBwZW4gZXZlbiBmb3IgYSByb290IGZpZWxkIHdoZW4gdGhlIHJvb3QgdHlwZSBpYVxuICAgICAgICAgICAgICAgIC8vIGFsc28gbmVzdGVkIGFzIGEgZmllbGQgd2l0aGluIGEgZGlmZmVyZW50IHR5cGUuXG4gICAgICAgICAgICAgICAgaWYgKHN1YnNjaGVtYUNvbmZpZyA9PT0gc3Vic2NoZW1hICYmIHBhcmVudFtyZXNwb25zZUtleV0gIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZUV4dGVybmFsVmFsdWUocGFyZW50W3Jlc3BvbnNlS2V5XSwgdW5wYXRoZWRFcnJvcnMsIHN1YnNjaGVtYSwgY29udGV4dCwgaW5mbyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcm94eWluZ1Jlc29sdmVyKHBhcmVudCwgYXJncywgY29udGV4dCwgaW5mbyk7XG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkZWZhdWx0Q3JlYXRlUHJveHlpbmdSZXNvbHZlcih7IHN1YnNjaGVtYUNvbmZpZywgb3BlcmF0aW9uLCB9KSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHByb3h5aW5nUmVzb2x2ZXIoX3BhcmVudCwgX2FyZ3MsIGNvbnRleHQsIGluZm8pIHtcbiAgICAgICAgcmV0dXJuIGRlbGVnYXRlVG9TY2hlbWEoe1xuICAgICAgICAgICAgc2NoZW1hOiBzdWJzY2hlbWFDb25maWcsXG4gICAgICAgICAgICBvcGVyYXRpb24sXG4gICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgaW5mbyxcbiAgICAgICAgfSk7XG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js":
/*!**********************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js ***!
  \**********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransformCompositeFields)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/visitResult.js\");\n\n\nclass TransformCompositeFields {\n    constructor(fieldTransformer, fieldNodeTransformer, dataTransformer, errorsTransformer) {\n        this.fieldTransformer = fieldTransformer;\n        this.fieldNodeTransformer = fieldNodeTransformer;\n        this.dataTransformer = dataTransformer;\n        this.errorsTransformer = errorsTransformer;\n        this.mapping = {};\n    }\n    _getTypeInfo() {\n        const typeInfo = this.typeInfo;\n        if (typeInfo === undefined) {\n            throw new Error(`The TransformCompositeFields transform's  \"transformRequest\" and \"transformResult\" methods cannot be used without first calling \"transformSchema\".`);\n        }\n        return typeInfo;\n    }\n    transformSchema(originalWrappingSchema, _subschemaConfig) {\n        var _a;\n        this.transformedSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(originalWrappingSchema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n                const transformedField = this.fieldTransformer(typeName, fieldName, fieldConfig);\n                if (Array.isArray(transformedField)) {\n                    const newFieldName = transformedField[0];\n                    if (newFieldName !== fieldName) {\n                        if (!(typeName in this.mapping)) {\n                            this.mapping[typeName] = {};\n                        }\n                        this.mapping[typeName][newFieldName] = fieldName;\n                    }\n                }\n                return transformedField;\n            },\n        });\n        this.typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_2__.TypeInfo(this.transformedSchema);\n        this.subscriptionTypeName = (_a = originalWrappingSchema.getSubscriptionType()) === null || _a === void 0 ? void 0 : _a.name;\n        return this.transformedSchema;\n    }\n    transformRequest(originalRequest, _delegationContext, transformationContext) {\n        const document = originalRequest.document;\n        return {\n            ...originalRequest,\n            document: this.transformDocument(document, transformationContext),\n        };\n    }\n    transformResult(result, _delegationContext, transformationContext) {\n        const dataTransformer = this.dataTransformer;\n        if (dataTransformer != null) {\n            result.data = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.visitData)(result.data, value => dataTransformer(value, transformationContext));\n        }\n        if (this.errorsTransformer != null && Array.isArray(result.errors)) {\n            result.errors = this.errorsTransformer(result.errors, transformationContext);\n        }\n        return result;\n    }\n    transformDocument(document, transformationContext) {\n        const fragments = Object.create(null);\n        for (const def of document.definitions) {\n            if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FRAGMENT_DEFINITION) {\n                fragments[def.name.value] = def;\n            }\n        }\n        return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(document, (0,graphql__WEBPACK_IMPORTED_MODULE_2__.visitWithTypeInfo)(this._getTypeInfo(), {\n            [graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SELECTION_SET]: {\n                leave: node => this.transformSelectionSet(node, this._getTypeInfo(), fragments, transformationContext),\n            },\n        }));\n    }\n    transformSelectionSet(node, typeInfo, fragments, transformationContext) {\n        var _a, _b;\n        const parentType = typeInfo.getParentType();\n        if (parentType == null) {\n            return undefined;\n        }\n        const parentTypeName = parentType.name;\n        let newSelections = [];\n        let typeNameExists = node.selections.some(selection => selection.kind === graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD && selection.name.value === '__typename');\n        for (const selection of node.selections) {\n            if (selection.kind !== graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD || selection.name.value === '__typename') {\n                newSelections.push(selection);\n                continue;\n            }\n            const newName = selection.name.value;\n            // See https://github.com/ardatan/graphql-tools/issues/2282\n            if (!typeNameExists &&\n                (this.dataTransformer != null || this.errorsTransformer != null) &&\n                (this.subscriptionTypeName == null || parentTypeName !== this.subscriptionTypeName)) {\n                newSelections.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                        value: '__typename',\n                    },\n                });\n                typeNameExists = true;\n            }\n            let transformedSelection;\n            if (this.fieldNodeTransformer == null) {\n                transformedSelection = selection;\n            }\n            else {\n                transformedSelection = this.fieldNodeTransformer(parentTypeName, newName, selection, fragments, transformationContext);\n                transformedSelection = transformedSelection === undefined ? selection : transformedSelection;\n            }\n            if (transformedSelection == null) {\n                continue;\n            }\n            else if (Array.isArray(transformedSelection)) {\n                newSelections = newSelections.concat(transformedSelection);\n                continue;\n            }\n            else if (transformedSelection.kind !== graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD) {\n                newSelections.push(transformedSelection);\n                continue;\n            }\n            const typeMapping = this.mapping[parentTypeName];\n            if (typeMapping == null) {\n                newSelections.push(transformedSelection);\n                continue;\n            }\n            const oldName = this.mapping[parentTypeName][newName];\n            if (oldName == null) {\n                newSelections.push(transformedSelection);\n                continue;\n            }\n            newSelections.push({\n                ...transformedSelection,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: oldName,\n                },\n                alias: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: (_b = (_a = transformedSelection.alias) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : newName,\n                },\n            });\n        }\n        return {\n            ...node,\n            selections: newSelections,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/wrapSchema.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/wrapSchema.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapSchema: () => (/* binding */ wrapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js\");\n/* harmony import */ var _generateProxyingResolvers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generateProxyingResolvers.js */ \"(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js\");\n\n\n\n\nconst wrapSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize1)(function wrapSchema(subschemaConfig) {\n    const targetSchema = subschemaConfig.schema;\n    const proxyingResolvers = (0,_generateProxyingResolvers_js__WEBPACK_IMPORTED_MODULE_1__.generateProxyingResolvers)(subschemaConfig);\n    const schema = createWrappingSchema(targetSchema, proxyingResolvers);\n    const transformed = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.applySchemaTransforms)(schema, subschemaConfig);\n    return transformed;\n});\nfunction createWrappingSchema(schema, proxyingResolvers) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.ROOT_FIELD]: (fieldConfig, fieldName, typeName) => {\n            var _a;\n            return {\n                ...fieldConfig,\n                ...(_a = proxyingResolvers[typeName]) === null || _a === void 0 ? void 0 : _a[fieldName],\n            };\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.OBJECT_FIELD]: fieldConfig => {\n            return {\n                ...fieldConfig,\n                resolve: _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_5__.defaultMergedResolver,\n                subscribe: undefined,\n            };\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.OBJECT_TYPE]: type => {\n            const config = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLObjectType({\n                ...config,\n                isTypeOf: undefined,\n            });\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.INTERFACE_TYPE]: type => {\n            const config = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLInterfaceType({\n                ...config,\n                resolveType: undefined,\n            });\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.UNION_TYPE]: type => {\n            const config = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLUnionType({\n                ...config,\n                resolveType: undefined,\n            });\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.ENUM_VALUE]: valueConfig => {\n            return {\n                ...valueConfig,\n                value: undefined,\n            };\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvbWVyZ2VyLXN0aXRjaGluZy9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9lc20vd3JhcFNjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFxRjtBQUNkO0FBQ2dCO0FBQ1o7QUFDcEUsbUJBQW1CLDhEQUFRO0FBQ2xDO0FBQ0EsOEJBQThCLHdGQUF5QjtBQUN2RDtBQUNBLHdCQUF3Qiw4RUFBcUI7QUFDN0M7QUFDQSxDQUFDO0FBQ0Q7QUFDQSxXQUFXLCtEQUFTO0FBQ3BCLFNBQVMsNERBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTLDREQUFVO0FBQ25CO0FBQ0E7QUFDQSx5QkFBeUIsMEVBQXFCO0FBQzlDO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsU0FBUyw0REFBVTtBQUNuQjtBQUNBLHVCQUF1QixzREFBaUI7QUFDeEM7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsU0FBUyw0REFBVTtBQUNuQjtBQUNBLHVCQUF1Qix5REFBb0I7QUFDM0M7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsU0FBUyw0REFBVTtBQUNuQjtBQUNBLHVCQUF1QixxREFBZ0I7QUFDdkM7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsU0FBUyw0REFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL21lcmdlci1zdGl0Y2hpbmcvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3dyYXBTY2hlbWEuanM/MjBiMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTEludGVyZmFjZVR5cGUsIEdyYXBoUUxVbmlvblR5cGUsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBNYXBwZXJLaW5kLCBtYXBTY2hlbWEsIG1lbW9pemUxIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgZGVmYXVsdE1lcmdlZFJlc29sdmVyLCBhcHBseVNjaGVtYVRyYW5zZm9ybXMgfSBmcm9tICdAZ3JhcGhxbC10b29scy9kZWxlZ2F0ZSc7XG5pbXBvcnQgeyBnZW5lcmF0ZVByb3h5aW5nUmVzb2x2ZXJzIH0gZnJvbSAnLi9nZW5lcmF0ZVByb3h5aW5nUmVzb2x2ZXJzLmpzJztcbmV4cG9ydCBjb25zdCB3cmFwU2NoZW1hID0gbWVtb2l6ZTEoZnVuY3Rpb24gd3JhcFNjaGVtYShzdWJzY2hlbWFDb25maWcpIHtcbiAgICBjb25zdCB0YXJnZXRTY2hlbWEgPSBzdWJzY2hlbWFDb25maWcuc2NoZW1hO1xuICAgIGNvbnN0IHByb3h5aW5nUmVzb2x2ZXJzID0gZ2VuZXJhdGVQcm94eWluZ1Jlc29sdmVycyhzdWJzY2hlbWFDb25maWcpO1xuICAgIGNvbnN0IHNjaGVtYSA9IGNyZWF0ZVdyYXBwaW5nU2NoZW1hKHRhcmdldFNjaGVtYSwgcHJveHlpbmdSZXNvbHZlcnMpO1xuICAgIGNvbnN0IHRyYW5zZm9ybWVkID0gYXBwbHlTY2hlbWFUcmFuc2Zvcm1zKHNjaGVtYSwgc3Vic2NoZW1hQ29uZmlnKTtcbiAgICByZXR1cm4gdHJhbnNmb3JtZWQ7XG59KTtcbmZ1bmN0aW9uIGNyZWF0ZVdyYXBwaW5nU2NoZW1hKHNjaGVtYSwgcHJveHlpbmdSZXNvbHZlcnMpIHtcbiAgICByZXR1cm4gbWFwU2NoZW1hKHNjaGVtYSwge1xuICAgICAgICBbTWFwcGVyS2luZC5ST09UX0ZJRUxEXTogKGZpZWxkQ29uZmlnLCBmaWVsZE5hbWUsIHR5cGVOYW1lKSA9PiB7XG4gICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLmZpZWxkQ29uZmlnLFxuICAgICAgICAgICAgICAgIC4uLihfYSA9IHByb3h5aW5nUmVzb2x2ZXJzW3R5cGVOYW1lXSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2ZpZWxkTmFtZV0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5PQkpFQ1RfRklFTERdOiBmaWVsZENvbmZpZyA9PiB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLmZpZWxkQ29uZmlnLFxuICAgICAgICAgICAgICAgIHJlc29sdmU6IGRlZmF1bHRNZXJnZWRSZXNvbHZlcixcbiAgICAgICAgICAgICAgICBzdWJzY3JpYmU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgICAgIFtNYXBwZXJLaW5kLk9CSkVDVF9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICAgICAgICAgICAgICAuLi5jb25maWcsXG4gICAgICAgICAgICAgICAgaXNUeXBlT2Y6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5JTlRFUkZBQ0VfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMSW50ZXJmYWNlVHlwZSh7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgICAgIHJlc29sdmVUeXBlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuVU5JT05fVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMVW5pb25UeXBlKHtcbiAgICAgICAgICAgICAgICAuLi5jb25maWcsXG4gICAgICAgICAgICAgICAgcmVzb2x2ZVR5cGU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5FTlVNX1ZBTFVFXTogdmFsdWVDb25maWcgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi52YWx1ZUNvbmZpZyxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/merger-stitching/node_modules/@graphql-tools/wrap/esm/wrapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/esm/constants.js":
/*!**************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/esm/constants.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MESH_API_CONTEXT_SYMBOL: () => (/* binding */ MESH_API_CONTEXT_SYMBOL),\n/* harmony export */   MESH_CONTEXT_SYMBOL: () => (/* binding */ MESH_CONTEXT_SYMBOL)\n/* harmony export */ });\nconst MESH_CONTEXT_SYMBOL = Symbol('isMeshContext');\nconst MESH_API_CONTEXT_SYMBOL = Symbol('isMeshAPIContext');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9lc20vY29uc3RhbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9lc20vY29uc3RhbnRzLmpzPzY3MjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IE1FU0hfQ09OVEVYVF9TWU1CT0wgPSBTeW1ib2woJ2lzTWVzaENvbnRleHQnKTtcbmV4cG9ydCBjb25zdCBNRVNIX0FQSV9DT05URVhUX1NZTUJPTCA9IFN5bWJvbCgnaXNNZXNoQVBJQ29udGV4dCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/esm/constants.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/esm/get-mesh.js":
/*!*************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/esm/get-mesh.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMesh: () => (/* binding */ getMesh),\n/* harmony export */   wrapFetchWithPlugins: () => (/* binding */ wrapFetchWithPlugins)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/validation/validate.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/validation/specifiedRules.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/create.js\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/plugins/use-extend-context.js\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/plugins/use-engine.js\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/plugins/use-schema.js\");\n/* harmony import */ var _envelop_graphql_jit__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @envelop/graphql-jit */ \"(ssr)/../node_modules/@envelop/graphql-jit/esm/index.js\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"process\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/wrapFetchWithHooks.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/pubsub.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/logger.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/getHeadersObj.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/group-transforms.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/apply-transforms.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/parseAndPrintWithCache.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/disposable.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/Subschema.js\");\n/* harmony import */ var _graphql_tools_executor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @graphql-tools/executor */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/esm/constants.js\");\n/* harmony import */ var _in_context_sdk_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./in-context-sdk.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/esm/in-context-sdk.js\");\n/* harmony import */ var _useSubschema_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./useSubschema.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/esm/useSubschema.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/esm/utils.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst memoizedGetEnvelopedFactory = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize1)(function getEnvelopedFactory(plugins) {\n    return (0,_envelop_core__WEBPACK_IMPORTED_MODULE_1__.envelop)({\n        plugins,\n    });\n});\nfunction wrapFetchWithPlugins(plugins) {\n    const onFetchHooks = [];\n    for (const plugin of plugins) {\n        if (plugin?.onFetch != null) {\n            onFetchHooks.push(plugin.onFetch);\n        }\n    }\n    return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_2__.wrapFetchWithHooks)(onFetchHooks);\n}\n// Use in-context-sdk for tracing\nfunction createProxyingResolverFactory(apiName, rootTypeMap) {\n    return function createProxyingResolver({ operation }) {\n        const rootType = rootTypeMap.get(operation);\n        return function proxyingResolver(root, args, context, info) {\n            if (!context?.[apiName]?.[rootType.name]?.[info.fieldName]) {\n                throw new Error(`${info.fieldName} couldn't find in ${rootType.name} of ${apiName} as a ${operation}`);\n            }\n            return context[apiName][rootType.name][info.fieldName]({ root, args, context, info });\n        };\n    };\n}\nasync function getMesh(options) {\n    const rawSources = [];\n    const { pubsub = new _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_3__.PubSub(), cache, logger = new _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_4__.DefaultLogger('🕸️  Mesh'), additionalEnvelopPlugins = [], sources, merger, additionalResolvers = [], additionalTypeDefs = [], transforms = [], fetchFn = _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_5__.fetch, } = options;\n    const getMeshLogger = logger.child('GetMesh');\n    getMeshLogger.debug(`Getting subschemas from source handlers`);\n    let failed = false;\n    const initialPluginList = [\n        // TODO: Not a good practise to expect users to be a Yoga user\n        (0,_envelop_core__WEBPACK_IMPORTED_MODULE_6__.useExtendContext)(({ request, req, connectionParams, }) => {\n            // Maybe Node-like environment\n            if (req?.headers) {\n                return {\n                    headers: (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__.getHeadersObj)(req.headers),\n                    connectionParams,\n                };\n            }\n            // Fetch environment\n            if (request?.headers) {\n                return {\n                    headers: (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__.getHeadersObj)(request.headers),\n                    connectionParams,\n                };\n            }\n            return {};\n        }),\n        (0,_envelop_core__WEBPACK_IMPORTED_MODULE_6__.useExtendContext)(() => ({\n            pubsub,\n            cache,\n            logger,\n            fetch: wrappedFetchFn,\n            [_constants_js__WEBPACK_IMPORTED_MODULE_8__.MESH_CONTEXT_SYMBOL]: true,\n        })),\n        {\n            onFetch({ setFetchFn }) {\n                setFetchFn(fetchFn);\n            },\n        },\n        ...additionalEnvelopPlugins,\n    ];\n    const wrappedFetchFn = wrapFetchWithPlugins(initialPluginList);\n    await Promise.allSettled(sources.map(async (apiSource, index) => {\n        const apiName = apiSource.name;\n        const sourceLogger = logger.child(apiName);\n        sourceLogger.debug(`Generating the schema`);\n        try {\n            const source = await apiSource.handler.getMeshSource({\n                fetchFn: wrappedFetchFn,\n            });\n            sourceLogger.debug(`The schema has been generated successfully`);\n            let apiSchema = source.schema;\n            sourceLogger.debug(`Analyzing transforms`);\n            let transforms;\n            const { wrapTransforms, noWrapTransforms } = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_9__.groupTransforms)(apiSource.transforms);\n            if (!wrapTransforms?.length && noWrapTransforms?.length) {\n                sourceLogger.debug(`${noWrapTransforms.length} bare transforms found and applying`);\n                apiSchema = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__.applySchemaTransforms)(apiSchema, source, null, noWrapTransforms);\n            }\n            else {\n                transforms = apiSource.transforms;\n            }\n            const rootTypeMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.getRootTypeMap)(apiSchema);\n            rawSources[index] = {\n                name: apiName,\n                schema: apiSchema,\n                executor: source.executor,\n                transforms,\n                contextVariables: source.contextVariables || {},\n                handler: apiSource.handler,\n                batch: 'batch' in source ? source.batch : true,\n                merge: source.merge,\n                createProxyingResolver: createProxyingResolverFactory(apiName, rootTypeMap),\n            };\n        }\n        catch (e) {\n            sourceLogger.error(`Failed to generate the schema for the source \"${apiName}\"\\n ${e.message}`);\n            failed = true;\n        }\n    }));\n    if (failed) {\n        throw new Error(`Schemas couldn't be generated successfully. Check for the logs by running Mesh${_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_12__.env.DEBUG == null\n            ? ' with DEBUG=1 environmental variable to get more verbose output'\n            : ''}.`);\n    }\n    getMeshLogger.debug(`Schemas have been generated by the source handlers`);\n    getMeshLogger.debug(`Merging schemas using the defined merging strategy.`);\n    const unifiedSubschema = await merger.getUnifiedSchema({\n        rawSources,\n        typeDefs: additionalTypeDefs,\n        resolvers: additionalResolvers,\n    });\n    unifiedSubschema.transforms = unifiedSubschema.transforms || [];\n    for (const rootLevelTransform of transforms) {\n        if (rootLevelTransform.noWrap) {\n            if (rootLevelTransform.transformSchema) {\n                unifiedSubschema.schema = rootLevelTransform.transformSchema(unifiedSubschema.schema, unifiedSubschema);\n            }\n        }\n        else {\n            unifiedSubschema.transforms.push(rootLevelTransform);\n        }\n    }\n    let inContextSDK;\n    let subschema;\n    if (unifiedSubschema.executor != null || unifiedSubschema.transforms?.length) {\n        subschema = new _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__.Subschema(unifiedSubschema);\n    }\n    const plugins = [\n        (0,_envelop_core__WEBPACK_IMPORTED_MODULE_14__.useEngine)({\n            execute: _graphql_tools_executor__WEBPACK_IMPORTED_MODULE_15__.normalizedExecutor,\n            validate: graphql__WEBPACK_IMPORTED_MODULE_16__.validate,\n            parse: _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_17__.parseWithCache,\n            specifiedRules: graphql__WEBPACK_IMPORTED_MODULE_18__.specifiedRules,\n        }),\n        ...(subschema\n            ? [(0,_useSubschema_js__WEBPACK_IMPORTED_MODULE_19__.useSubschema)(new _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__.Subschema(unifiedSubschema))]\n            : [\n                (0,_envelop_core__WEBPACK_IMPORTED_MODULE_20__.useSchema)(unifiedSubschema.schema),\n                (0,_envelop_graphql_jit__WEBPACK_IMPORTED_MODULE_21__.useGraphQlJit)({\n                    // TODO: Disable for now\n                    customJSONSerializer: false,\n                    disableLeafSerialization: true,\n                }, {\n                    enableIf(args) {\n                        return (0,_utils_js__WEBPACK_IMPORTED_MODULE_22__.isGraphQLJitCompatible)(args.schema) && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_22__.isStreamOperation)(args.document);\n                    },\n                }),\n            ]),\n        (0,_envelop_core__WEBPACK_IMPORTED_MODULE_6__.useExtendContext)(() => {\n            if (!inContextSDK) {\n                const onDelegateHooks = [];\n                for (const plugin of initialPluginList) {\n                    if (plugin?.onDelegate != null) {\n                        onDelegateHooks.push(plugin.onDelegate);\n                    }\n                }\n                inContextSDK = (0,_in_context_sdk_js__WEBPACK_IMPORTED_MODULE_23__.getInContextSDK)(subschema ? subschema.transformedSchema : unifiedSubschema.schema, rawSources, logger, onDelegateHooks);\n            }\n            return inContextSDK;\n        }),\n        {\n            onExecute() {\n                return {\n                    onExecuteDone({ result, setResult }) {\n                        if (result.errors) {\n                            // Print errors with stack trace in development\n                            if (false) {}\n                            else {\n                                setResult({\n                                    ...result,\n                                    errors: result.errors.map(error => {\n                                        const origError = (0,_utils_js__WEBPACK_IMPORTED_MODULE_22__.getOriginalError)(error);\n                                        if (origError) {\n                                            return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_24__.createGraphQLError)(error.message, {\n                                                ...error,\n                                                extensions: {\n                                                    ...error.extensions,\n                                                    originalError: {\n                                                        name: origError.name,\n                                                        message: origError.message,\n                                                        stack: origError.stack,\n                                                    },\n                                                },\n                                            });\n                                        }\n                                        return error;\n                                    }),\n                                });\n                            }\n                        }\n                    },\n                };\n            },\n        },\n        ...initialPluginList,\n    ];\n    const EMPTY_ROOT_VALUE = {};\n    const EMPTY_CONTEXT_VALUE = {};\n    const EMPTY_VARIABLES_VALUE = {};\n    function createExecutor(globalContext = EMPTY_CONTEXT_VALUE) {\n        const getEnveloped = memoizedGetEnvelopedFactory(plugins);\n        const { schema, parse, execute, subscribe, contextFactory } = getEnveloped(globalContext);\n        return function meshExecutor(documentOrSDL, variableValues = EMPTY_VARIABLES_VALUE, contextValue = EMPTY_CONTEXT_VALUE, rootValue = EMPTY_ROOT_VALUE, operationName) {\n            const document = typeof documentOrSDL === 'string' ? parse(documentOrSDL) : documentOrSDL;\n            const operationAST = (0,graphql__WEBPACK_IMPORTED_MODULE_25__.getOperationAST)(document, operationName);\n            if (!operationAST) {\n                throw new Error(`Cannot execute a request without a valid operation.`);\n            }\n            const isSubscription = operationAST.operation === 'subscription';\n            const executeFn = isSubscription ? subscribe : execute;\n            return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_26__.mapMaybePromise)(contextFactory(contextValue), contextValue => executeFn({\n                schema,\n                document,\n                contextValue,\n                rootValue,\n                variableValues,\n                operationName,\n            }));\n        };\n    }\n    function sdkRequesterFactory(globalContext) {\n        const executor = createExecutor(globalContext);\n        return function sdkRequester(...args) {\n            return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_26__.mapMaybePromise)(executor(...args), function handleExecutorResultForSdk(result) {\n                if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_27__.isAsyncIterable)(result)) {\n                    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_28__.mapAsyncIterator)(result, extractDataOrThrowErrors);\n                }\n                return extractDataOrThrowErrors(result);\n            });\n        };\n    }\n    function meshDestroy() {\n        return pubsub.publish('destroy', undefined);\n    }\n    return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_29__.makeDisposable)({\n        get schema() {\n            return subschema ? subschema.transformedSchema : unifiedSubschema.schema;\n        },\n        rawSources,\n        cache,\n        pubsub,\n        destroy: meshDestroy,\n        logger,\n        plugins,\n        get getEnveloped() {\n            return memoizedGetEnvelopedFactory(plugins);\n        },\n        createExecutor,\n        get execute() {\n            return createExecutor();\n        },\n        get subscribe() {\n            return createExecutor();\n        },\n        sdkRequesterFactory,\n    }, meshDestroy);\n}\nfunction extractDataOrThrowErrors(result) {\n    if (result.errors) {\n        if (result.errors.length === 1) {\n            throw result.errors[0];\n        }\n        throw new AggregateError(result.errors);\n    }\n    return result.data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/esm/get-mesh.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/esm/in-context-sdk.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/esm/in-context-sdk.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInContextSDK: () => (/* binding */ getInContextSDK)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/iterateAsync.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/parseAndPrintWithCache.js\");\n/* harmony import */ var _graphql_tools_batch_delegate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/batch-delegate */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/build-operation-for-field.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isDocumentNode.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/WrapQuery.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/esm/constants.js\");\n\n\n\n\n\n\n\nfunction getInContextSDK(unifiedSchema, rawSources, logger, onDelegateHooks) {\n    const inContextSDK = {};\n    const sourceMap = unifiedSchema.extensions.sourceMap;\n    for (const rawSource of rawSources) {\n        const rawSourceLogger = logger?.child(`${rawSource.name}`);\n        const rawSourceContext = {\n            rawSource,\n            [_constants_js__WEBPACK_IMPORTED_MODULE_0__.MESH_API_CONTEXT_SYMBOL]: true,\n        };\n        // TODO: Somehow rawSource reference got lost in somewhere\n        let rawSourceSubSchemaConfig = rawSource;\n        const stitchingInfo = unifiedSchema.extensions.stitchingInfo;\n        if (stitchingInfo) {\n            for (const [subschemaConfig, subschema] of stitchingInfo.subschemaMap) {\n                if (subschemaConfig.name === rawSource.name) {\n                    rawSourceSubSchemaConfig = subschema;\n                    break;\n                }\n            }\n        }\n        // If there is a single source, there is no unifiedSchema\n        const transformedSchema = sourceMap?.get(rawSource) || rawSource.schema;\n        const rootTypes = {\n            query: transformedSchema.getQueryType(),\n            mutation: transformedSchema.getMutationType(),\n            subscription: transformedSchema.getSubscriptionType(),\n        };\n        rawSourceLogger?.debug(`Generating In Context SDK`);\n        for (const operationType in rootTypes) {\n            const rootType = rootTypes[operationType];\n            if (rootType) {\n                rawSourceContext[rootType.name] = {};\n                const rootTypeFieldMap = rootType.getFields();\n                for (const fieldName in rootTypeFieldMap) {\n                    const rootTypeField = rootTypeFieldMap[fieldName];\n                    const inContextSdkLogger = rawSourceLogger?.child(`InContextSDK.${rootType.name}.${fieldName}`);\n                    const namedReturnType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(rootTypeField.type);\n                    const shouldHaveSelectionSet = !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(namedReturnType);\n                    rawSourceContext[rootType.name][fieldName] = ({ root, args, context, info = {\n                        fieldName,\n                        fieldNodes: [],\n                        returnType: namedReturnType,\n                        parentType: rootType,\n                        path: {\n                            typename: rootType.name,\n                            key: fieldName,\n                            prev: undefined,\n                        },\n                        schema: transformedSchema,\n                        fragments: {},\n                        rootValue: root,\n                        operation: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION,\n                            operation: operationType,\n                            selectionSet: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                                selections: [],\n                            },\n                        },\n                        variableValues: {},\n                    }, selectionSet, key, argsFromKeys, valuesFromResults, autoSelectionSetWithDepth, }) => {\n                        inContextSdkLogger?.debug(`Called with`, {\n                            args,\n                            key,\n                        });\n                        const commonDelegateOptions = {\n                            schema: rawSourceSubSchemaConfig,\n                            rootValue: root,\n                            operation: operationType,\n                            fieldName,\n                            context,\n                            transformedSchema,\n                            info,\n                            transforms: [],\n                        };\n                        // If there isn't an extraction of a value\n                        if (typeof selectionSet !== 'function') {\n                            commonDelegateOptions.returnType = rootTypeField.type;\n                        }\n                        if (shouldHaveSelectionSet) {\n                            let selectionCount = 0;\n                            for (const fieldNode of info.fieldNodes) {\n                                if (fieldNode.selectionSet != null) {\n                                    selectionCount += fieldNode.selectionSet.selections.length;\n                                }\n                            }\n                            if (selectionCount === 0) {\n                                if (!selectionSet) {\n                                    if (autoSelectionSetWithDepth) {\n                                        const operationNode = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.buildOperationNodeForField)({\n                                            schema: transformedSchema,\n                                            kind: operationType,\n                                            depthLimit: autoSelectionSetWithDepth,\n                                            field: fieldName,\n                                        });\n                                        selectionSet = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.print)(operationNode.selectionSet.selections[0].selectionSet);\n                                    }\n                                    else {\n                                        throw new Error(`You have to provide 'selectionSet' for context.${rawSource.name}.${rootType.name}.${fieldName}`);\n                                    }\n                                }\n                                commonDelegateOptions.info = {\n                                    ...info,\n                                    fieldNodes: [\n                                        {\n                                            ...info.fieldNodes[0],\n                                            selectionSet: {\n                                                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                                                selections: [\n                                                    {\n                                                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD,\n                                                        name: {\n                                                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                                                            value: '__typename',\n                                                        },\n                                                    },\n                                                ],\n                                            },\n                                        },\n                                        ...info.fieldNodes.slice(1),\n                                    ],\n                                };\n                            }\n                        }\n                        if (key && argsFromKeys) {\n                            const batchDelegationOptions = {\n                                ...commonDelegateOptions,\n                                key,\n                                argsFromKeys,\n                                valuesFromResults,\n                            };\n                            if (selectionSet) {\n                                const selectionSetFactory = normalizeSelectionSetParamOrFactory(selectionSet);\n                                const path = [fieldName];\n                                const wrapQueryTransform = new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_5__[\"default\"](path, selectionSetFactory, identical);\n                                batchDelegationOptions.transforms = [wrapQueryTransform];\n                            }\n                            const onDelegateHookDones = [];\n                            const onDelegatePayload = {\n                                ...batchDelegationOptions,\n                                sourceName: rawSource.name,\n                                typeName: rootType.name,\n                                fieldName,\n                            };\n                            const onDelegateResult$ = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_6__.iterateAsync)(onDelegateHooks, onDelegateHook => onDelegateHook(onDelegatePayload), onDelegateHookDones);\n                            return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__.mapMaybePromise)(onDelegateResult$, () => handleIterationResult(_graphql_tools_batch_delegate__WEBPACK_IMPORTED_MODULE_8__.batchDelegateToSchema, batchDelegationOptions, onDelegateHookDones));\n                        }\n                        else {\n                            const regularDelegateOptions = {\n                                ...commonDelegateOptions,\n                                args,\n                            };\n                            if (selectionSet) {\n                                const selectionSetFactory = normalizeSelectionSetParamOrFactory(selectionSet);\n                                const path = [fieldName];\n                                const wrapQueryTransform = new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_5__[\"default\"](path, selectionSetFactory, valuesFromResults || identical);\n                                regularDelegateOptions.transforms = [wrapQueryTransform];\n                            }\n                            const onDelegateHookDones = [];\n                            const onDelegatePayload = {\n                                ...regularDelegateOptions,\n                                sourceName: rawSource.name,\n                                typeName: rootType.name,\n                                fieldName,\n                            };\n                            const onDelegateResult$ = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_6__.iterateAsync)(onDelegateHooks, onDelegateHook => onDelegateHook(onDelegatePayload), onDelegateHookDones);\n                            return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__.mapMaybePromise)(onDelegateResult$, () => handleIterationResult(_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_9__.delegateToSchema, regularDelegateOptions, onDelegateHookDones));\n                        }\n                    };\n                }\n            }\n        }\n        inContextSDK[rawSource.name] = rawSourceContext;\n    }\n    return inContextSDK;\n}\nfunction getSelectionSetFromDocumentNode(documentNode) {\n    const operationDefinition = documentNode.definitions.find(definition => definition.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION);\n    if (!operationDefinition) {\n        throw new Error('DocumentNode must contain an OperationDefinitionNode');\n    }\n    return operationDefinition.selectionSet;\n}\nfunction normalizeSelectionSetParam(selectionSetParam) {\n    if (typeof selectionSetParam === 'string') {\n        const documentNode = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__.parseWithCache)(selectionSetParam);\n        return getSelectionSetFromDocumentNode(documentNode);\n    }\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.isDocumentNode)(selectionSetParam)) {\n        return getSelectionSetFromDocumentNode(selectionSetParam);\n    }\n    return selectionSetParam;\n}\nconst normalizeSelectionSetParamFactory = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__.memoize1)(function normalizeSelectionSetParamFactory(selectionSetParamFactory) {\n    const memoizedSelectionSetFactory = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__.memoize1)(selectionSetParamFactory);\n    return function selectionSetFactory(subtree) {\n        const selectionSetParam = memoizedSelectionSetFactory(subtree);\n        return normalizeSelectionSetParam(selectionSetParam);\n    };\n});\nfunction normalizeSelectionSetParamOrFactory(selectionSetParamOrFactory) {\n    if (typeof selectionSetParamOrFactory === 'function') {\n        return normalizeSelectionSetParamFactory(selectionSetParamOrFactory);\n    }\n    return () => normalizeSelectionSetParam(selectionSetParamOrFactory);\n}\nfunction identical(val) {\n    return val;\n}\nfunction handleIterationResult(delegateFn, delegateOptions, onDelegateHookDones) {\n    const delegationResult$ = delegateFn(delegateOptions);\n    return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__.mapMaybePromise)(delegationResult$, function handleOnDelegateDone(delegationResult) {\n        function setResult(newResult) {\n            delegationResult = newResult;\n        }\n        const onDelegateDoneResult$ = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_6__.iterateAsync)(onDelegateHookDones, onDelegateHookDone => onDelegateHookDone({\n            result: delegationResult,\n            setResult,\n        }));\n        return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_7__.mapMaybePromise)(onDelegateDoneResult$, () => delegationResult);\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9lc20vaW4tY29udGV4dC1zZGsuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0U7QUFDb0I7QUFDZDtBQUNYO0FBQ2lDO0FBQzVDO0FBQ1M7QUFDbEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsZUFBZTtBQUNoRTtBQUNBO0FBQ0EsYUFBYSxrRUFBdUI7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLGNBQWMsR0FBRyxVQUFVO0FBQ2pILDRDQUE0QyxxREFBWTtBQUN4RCxvREFBb0QsbURBQVU7QUFDOUQsb0VBQW9FO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLGtDQUFrQyx5Q0FBSTtBQUN0QztBQUNBO0FBQ0Esc0NBQXNDLHlDQUFJO0FBQzFDO0FBQ0EsNkJBQTZCO0FBQzdCLHlCQUF5QjtBQUN6QiwwQ0FBMEM7QUFDMUMscUJBQXFCLGtGQUFrRjtBQUN2RztBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGdGQUEwQjtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QztBQUN6Qyx1REFBdUQsOENBQUs7QUFDNUQ7QUFDQTtBQUNBLDBHQUEwRyxlQUFlLEdBQUcsY0FBYyxHQUFHLFVBQVU7QUFDdko7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCx5Q0FBSTtBQUMxRDtBQUNBO0FBQ0EsOERBQThELHlDQUFJO0FBQ2xFO0FBQ0Esa0VBQWtFLHlDQUFJO0FBQ3RFO0FBQ0EseURBQXlEO0FBQ3pELHFEQUFxRDtBQUNyRDtBQUNBLDZDQUE2QztBQUM3Qyx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0RBQStELDJEQUFTO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxpRUFBWTtBQUNsRSxtQ0FBbUMsb0VBQWUsZ0RBQWdELGdGQUFxQjtBQUN2SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrREFBK0QsMkRBQVM7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELGlFQUFZO0FBQ2xFLG1DQUFtQyxvRUFBZSxnREFBZ0QscUVBQWdCO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0dBQWdHLHlDQUFJO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG9FQUFjO0FBQzNDO0FBQ0E7QUFDQSxRQUFRLHFFQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLCtEQUFRO0FBQ2xELHdDQUF3QywrREFBUTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvRUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MsaUVBQVk7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7QUFDVCxlQUFlLG9FQUFlO0FBQzlCLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9lc20vaW4tY29udGV4dC1zZGsuanM/YmIyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW1lZFR5cGUsIGlzTGVhZlR5cGUsIEtpbmQsIHByaW50IH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBpdGVyYXRlQXN5bmMsIG1hcE1heWJlUHJvbWlzZSwgcGFyc2VXaXRoQ2FjaGUgfSBmcm9tICdAZ3JhcGhxbC1tZXNoL3V0aWxzJztcbmltcG9ydCB7IGJhdGNoRGVsZWdhdGVUb1NjaGVtYSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlJztcbmltcG9ydCB7IGRlbGVnYXRlVG9TY2hlbWEgfSBmcm9tICdAZ3JhcGhxbC10b29scy9kZWxlZ2F0ZSc7XG5pbXBvcnQgeyBidWlsZE9wZXJhdGlvbk5vZGVGb3JGaWVsZCwgaXNEb2N1bWVudE5vZGUsIG1lbW9pemUxIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgV3JhcFF1ZXJ5IH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvd3JhcCc7XG5pbXBvcnQgeyBNRVNIX0FQSV9DT05URVhUX1NZTUJPTCB9IGZyb20gJy4vY29uc3RhbnRzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRJbkNvbnRleHRTREsodW5pZmllZFNjaGVtYSwgcmF3U291cmNlcywgbG9nZ2VyLCBvbkRlbGVnYXRlSG9va3MpIHtcbiAgICBjb25zdCBpbkNvbnRleHRTREsgPSB7fTtcbiAgICBjb25zdCBzb3VyY2VNYXAgPSB1bmlmaWVkU2NoZW1hLmV4dGVuc2lvbnMuc291cmNlTWFwO1xuICAgIGZvciAoY29uc3QgcmF3U291cmNlIG9mIHJhd1NvdXJjZXMpIHtcbiAgICAgICAgY29uc3QgcmF3U291cmNlTG9nZ2VyID0gbG9nZ2VyPy5jaGlsZChgJHtyYXdTb3VyY2UubmFtZX1gKTtcbiAgICAgICAgY29uc3QgcmF3U291cmNlQ29udGV4dCA9IHtcbiAgICAgICAgICAgIHJhd1NvdXJjZSxcbiAgICAgICAgICAgIFtNRVNIX0FQSV9DT05URVhUX1NZTUJPTF06IHRydWUsXG4gICAgICAgIH07XG4gICAgICAgIC8vIFRPRE86IFNvbWVob3cgcmF3U291cmNlIHJlZmVyZW5jZSBnb3QgbG9zdCBpbiBzb21ld2hlcmVcbiAgICAgICAgbGV0IHJhd1NvdXJjZVN1YlNjaGVtYUNvbmZpZyA9IHJhd1NvdXJjZTtcbiAgICAgICAgY29uc3Qgc3RpdGNoaW5nSW5mbyA9IHVuaWZpZWRTY2hlbWEuZXh0ZW5zaW9ucy5zdGl0Y2hpbmdJbmZvO1xuICAgICAgICBpZiAoc3RpdGNoaW5nSW5mbykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBbc3Vic2NoZW1hQ29uZmlnLCBzdWJzY2hlbWFdIG9mIHN0aXRjaGluZ0luZm8uc3Vic2NoZW1hTWFwKSB7XG4gICAgICAgICAgICAgICAgaWYgKHN1YnNjaGVtYUNvbmZpZy5uYW1lID09PSByYXdTb3VyY2UubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICByYXdTb3VyY2VTdWJTY2hlbWFDb25maWcgPSBzdWJzY2hlbWE7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBJZiB0aGVyZSBpcyBhIHNpbmdsZSBzb3VyY2UsIHRoZXJlIGlzIG5vIHVuaWZpZWRTY2hlbWFcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtZWRTY2hlbWEgPSBzb3VyY2VNYXA/LmdldChyYXdTb3VyY2UpIHx8IHJhd1NvdXJjZS5zY2hlbWE7XG4gICAgICAgIGNvbnN0IHJvb3RUeXBlcyA9IHtcbiAgICAgICAgICAgIHF1ZXJ5OiB0cmFuc2Zvcm1lZFNjaGVtYS5nZXRRdWVyeVR5cGUoKSxcbiAgICAgICAgICAgIG11dGF0aW9uOiB0cmFuc2Zvcm1lZFNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKSxcbiAgICAgICAgICAgIHN1YnNjcmlwdGlvbjogdHJhbnNmb3JtZWRTY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpLFxuICAgICAgICB9O1xuICAgICAgICByYXdTb3VyY2VMb2dnZXI/LmRlYnVnKGBHZW5lcmF0aW5nIEluIENvbnRleHQgU0RLYCk7XG4gICAgICAgIGZvciAoY29uc3Qgb3BlcmF0aW9uVHlwZSBpbiByb290VHlwZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHJvb3RUeXBlID0gcm9vdFR5cGVzW29wZXJhdGlvblR5cGVdO1xuICAgICAgICAgICAgaWYgKHJvb3RUeXBlKSB7XG4gICAgICAgICAgICAgICAgcmF3U291cmNlQ29udGV4dFtyb290VHlwZS5uYW1lXSA9IHt9O1xuICAgICAgICAgICAgICAgIGNvbnN0IHJvb3RUeXBlRmllbGRNYXAgPSByb290VHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiByb290VHlwZUZpZWxkTWFwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJvb3RUeXBlRmllbGQgPSByb290VHlwZUZpZWxkTWFwW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGluQ29udGV4dFNka0xvZ2dlciA9IHJhd1NvdXJjZUxvZ2dlcj8uY2hpbGQoYEluQ29udGV4dFNESy4ke3Jvb3RUeXBlLm5hbWV9LiR7ZmllbGROYW1lfWApO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lZFJldHVyblR5cGUgPSBnZXROYW1lZFR5cGUocm9vdFR5cGVGaWVsZC50eXBlKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2hvdWxkSGF2ZVNlbGVjdGlvblNldCA9ICFpc0xlYWZUeXBlKG5hbWVkUmV0dXJuVHlwZSk7XG4gICAgICAgICAgICAgICAgICAgIHJhd1NvdXJjZUNvbnRleHRbcm9vdFR5cGUubmFtZV1bZmllbGROYW1lXSA9ICh7IHJvb3QsIGFyZ3MsIGNvbnRleHQsIGluZm8gPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZE5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWVsZE5vZGVzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVyblR5cGU6IG5hbWVkUmV0dXJuVHlwZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmVudFR5cGU6IHJvb3RUeXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgcGF0aDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGVuYW1lOiByb290VHlwZS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogZmllbGROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXY6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE6IHRyYW5zZm9ybWVkU2NoZW1hLFxuICAgICAgICAgICAgICAgICAgICAgICAgZnJhZ21lbnRzOiB7fSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHJvb3RWYWx1ZTogcm9vdCxcbiAgICAgICAgICAgICAgICAgICAgICAgIG9wZXJhdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuT1BFUkFUSU9OX0RFRklOSVRJT04sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uOiBvcGVyYXRpb25UeXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvblNldDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLlNFTEVDVElPTl9TRVQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbnM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgdmFyaWFibGVWYWx1ZXM6IHt9LFxuICAgICAgICAgICAgICAgICAgICB9LCBzZWxlY3Rpb25TZXQsIGtleSwgYXJnc0Zyb21LZXlzLCB2YWx1ZXNGcm9tUmVzdWx0cywgYXV0b1NlbGVjdGlvblNldFdpdGhEZXB0aCwgfSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaW5Db250ZXh0U2RrTG9nZ2VyPy5kZWJ1ZyhgQ2FsbGVkIHdpdGhgLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJncyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbW1vbkRlbGVnYXRlT3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE6IHJhd1NvdXJjZVN1YlNjaGVtYUNvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByb290VmFsdWU6IHJvb3QsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uOiBvcGVyYXRpb25UeXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybWVkU2NoZW1hLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtczogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlcmUgaXNuJ3QgYW4gZXh0cmFjdGlvbiBvZiBhIHZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHNlbGVjdGlvblNldCAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1vbkRlbGVnYXRlT3B0aW9ucy5yZXR1cm5UeXBlID0gcm9vdFR5cGVGaWVsZC50eXBlO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNob3VsZEhhdmVTZWxlY3Rpb25TZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsZXQgc2VsZWN0aW9uQ291bnQgPSAwO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROb2RlIG9mIGluZm8uZmllbGROb2Rlcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGROb2RlLnNlbGVjdGlvblNldCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb25Db3VudCArPSBmaWVsZE5vZGUuc2VsZWN0aW9uU2V0LnNlbGVjdGlvbnMubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb25Db3VudCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXNlbGVjdGlvblNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGF1dG9TZWxlY3Rpb25TZXRXaXRoRGVwdGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBvcGVyYXRpb25Ob2RlID0gYnVpbGRPcGVyYXRpb25Ob2RlRm9yRmllbGQoe1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2hlbWE6IHRyYW5zZm9ybWVkU2NoZW1hLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBvcGVyYXRpb25UeXBlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZXB0aExpbWl0OiBhdXRvU2VsZWN0aW9uU2V0V2l0aERlcHRoLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWVsZDogZmllbGROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvblNldCA9IHByaW50KG9wZXJhdGlvbk5vZGUuc2VsZWN0aW9uU2V0LnNlbGVjdGlvbnNbMF0uc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgWW91IGhhdmUgdG8gcHJvdmlkZSAnc2VsZWN0aW9uU2V0JyBmb3IgY29udGV4dC4ke3Jhd1NvdXJjZS5uYW1lfS4ke3Jvb3RUeXBlLm5hbWV9LiR7ZmllbGROYW1lfWApO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbW1vbkRlbGVnYXRlT3B0aW9ucy5pbmZvID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uaW5mbyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkTm9kZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLmluZm8uZmllbGROb2Rlc1swXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0OiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLlNFTEVDVElPTl9TRVQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb25zOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLkZJRUxELFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk5BTUUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ19fdHlwZW5hbWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uaW5mby5maWVsZE5vZGVzLnNsaWNlKDEpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoa2V5ICYmIGFyZ3NGcm9tS2V5cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGJhdGNoRGVsZWdhdGlvbk9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLmNvbW1vbkRlbGVnYXRlT3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcmdzRnJvbUtleXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlc0Zyb21SZXN1bHRzLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdGlvblNldCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBzZWxlY3Rpb25TZXRGYWN0b3J5ID0gbm9ybWFsaXplU2VsZWN0aW9uU2V0UGFyYW1PckZhY3Rvcnkoc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgcGF0aCA9IFtmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCB3cmFwUXVlcnlUcmFuc2Zvcm0gPSBuZXcgV3JhcFF1ZXJ5KHBhdGgsIHNlbGVjdGlvblNldEZhY3RvcnksIGlkZW50aWNhbCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhdGNoRGVsZWdhdGlvbk9wdGlvbnMudHJhbnNmb3JtcyA9IFt3cmFwUXVlcnlUcmFuc2Zvcm1dO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBvbkRlbGVnYXRlSG9va0RvbmVzID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb25EZWxlZ2F0ZVBheWxvYWQgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLmJhdGNoRGVsZWdhdGlvbk9wdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNvdXJjZU5hbWU6IHJhd1NvdXJjZS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlTmFtZTogcm9vdFR5cGUubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZmllbGROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb25EZWxlZ2F0ZVJlc3VsdCQgPSBpdGVyYXRlQXN5bmMob25EZWxlZ2F0ZUhvb2tzLCBvbkRlbGVnYXRlSG9vayA9PiBvbkRlbGVnYXRlSG9vayhvbkRlbGVnYXRlUGF5bG9hZCksIG9uRGVsZWdhdGVIb29rRG9uZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtYXBNYXliZVByb21pc2Uob25EZWxlZ2F0ZVJlc3VsdCQsICgpID0+IGhhbmRsZUl0ZXJhdGlvblJlc3VsdChiYXRjaERlbGVnYXRlVG9TY2hlbWEsIGJhdGNoRGVsZWdhdGlvbk9wdGlvbnMsIG9uRGVsZWdhdGVIb29rRG9uZXMpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlZ3VsYXJEZWxlZ2F0ZU9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLmNvbW1vbkRlbGVnYXRlT3B0aW9ucyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXJncyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChzZWxlY3Rpb25TZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0RmFjdG9yeSA9IG5vcm1hbGl6ZVNlbGVjdGlvblNldFBhcmFtT3JGYWN0b3J5KHNlbGVjdGlvblNldCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhdGggPSBbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgd3JhcFF1ZXJ5VHJhbnNmb3JtID0gbmV3IFdyYXBRdWVyeShwYXRoLCBzZWxlY3Rpb25TZXRGYWN0b3J5LCB2YWx1ZXNGcm9tUmVzdWx0cyB8fCBpZGVudGljYWwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWd1bGFyRGVsZWdhdGVPcHRpb25zLnRyYW5zZm9ybXMgPSBbd3JhcFF1ZXJ5VHJhbnNmb3JtXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgb25EZWxlZ2F0ZUhvb2tEb25lcyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9uRGVsZWdhdGVQYXlsb2FkID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5yZWd1bGFyRGVsZWdhdGVPcHRpb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzb3VyY2VOYW1lOiByYXdTb3VyY2UubmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZU5hbWU6IHJvb3RUeXBlLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IG9uRGVsZWdhdGVSZXN1bHQkID0gaXRlcmF0ZUFzeW5jKG9uRGVsZWdhdGVIb29rcywgb25EZWxlZ2F0ZUhvb2sgPT4gb25EZWxlZ2F0ZUhvb2sob25EZWxlZ2F0ZVBheWxvYWQpLCBvbkRlbGVnYXRlSG9va0RvbmVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWFwTWF5YmVQcm9taXNlKG9uRGVsZWdhdGVSZXN1bHQkLCAoKSA9PiBoYW5kbGVJdGVyYXRpb25SZXN1bHQoZGVsZWdhdGVUb1NjaGVtYSwgcmVndWxhckRlbGVnYXRlT3B0aW9ucywgb25EZWxlZ2F0ZUhvb2tEb25lcykpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpbkNvbnRleHRTREtbcmF3U291cmNlLm5hbWVdID0gcmF3U291cmNlQ29udGV4dDtcbiAgICB9XG4gICAgcmV0dXJuIGluQ29udGV4dFNESztcbn1cbmZ1bmN0aW9uIGdldFNlbGVjdGlvblNldEZyb21Eb2N1bWVudE5vZGUoZG9jdW1lbnROb2RlKSB7XG4gICAgY29uc3Qgb3BlcmF0aW9uRGVmaW5pdGlvbiA9IGRvY3VtZW50Tm9kZS5kZWZpbml0aW9ucy5maW5kKGRlZmluaXRpb24gPT4gZGVmaW5pdGlvbi5raW5kID09PSBLaW5kLk9QRVJBVElPTl9ERUZJTklUSU9OKTtcbiAgICBpZiAoIW9wZXJhdGlvbkRlZmluaXRpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdEb2N1bWVudE5vZGUgbXVzdCBjb250YWluIGFuIE9wZXJhdGlvbkRlZmluaXRpb25Ob2RlJyk7XG4gICAgfVxuICAgIHJldHVybiBvcGVyYXRpb25EZWZpbml0aW9uLnNlbGVjdGlvblNldDtcbn1cbmZ1bmN0aW9uIG5vcm1hbGl6ZVNlbGVjdGlvblNldFBhcmFtKHNlbGVjdGlvblNldFBhcmFtKSB7XG4gICAgaWYgKHR5cGVvZiBzZWxlY3Rpb25TZXRQYXJhbSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgZG9jdW1lbnROb2RlID0gcGFyc2VXaXRoQ2FjaGUoc2VsZWN0aW9uU2V0UGFyYW0pO1xuICAgICAgICByZXR1cm4gZ2V0U2VsZWN0aW9uU2V0RnJvbURvY3VtZW50Tm9kZShkb2N1bWVudE5vZGUpO1xuICAgIH1cbiAgICBpZiAoaXNEb2N1bWVudE5vZGUoc2VsZWN0aW9uU2V0UGFyYW0pKSB7XG4gICAgICAgIHJldHVybiBnZXRTZWxlY3Rpb25TZXRGcm9tRG9jdW1lbnROb2RlKHNlbGVjdGlvblNldFBhcmFtKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlbGVjdGlvblNldFBhcmFtO1xufVxuY29uc3Qgbm9ybWFsaXplU2VsZWN0aW9uU2V0UGFyYW1GYWN0b3J5ID0gbWVtb2l6ZTEoZnVuY3Rpb24gbm9ybWFsaXplU2VsZWN0aW9uU2V0UGFyYW1GYWN0b3J5KHNlbGVjdGlvblNldFBhcmFtRmFjdG9yeSkge1xuICAgIGNvbnN0IG1lbW9pemVkU2VsZWN0aW9uU2V0RmFjdG9yeSA9IG1lbW9pemUxKHNlbGVjdGlvblNldFBhcmFtRmFjdG9yeSk7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHNlbGVjdGlvblNldEZhY3Rvcnkoc3VidHJlZSkge1xuICAgICAgICBjb25zdCBzZWxlY3Rpb25TZXRQYXJhbSA9IG1lbW9pemVkU2VsZWN0aW9uU2V0RmFjdG9yeShzdWJ0cmVlKTtcbiAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZVNlbGVjdGlvblNldFBhcmFtKHNlbGVjdGlvblNldFBhcmFtKTtcbiAgICB9O1xufSk7XG5mdW5jdGlvbiBub3JtYWxpemVTZWxlY3Rpb25TZXRQYXJhbU9yRmFjdG9yeShzZWxlY3Rpb25TZXRQYXJhbU9yRmFjdG9yeSkge1xuICAgIGlmICh0eXBlb2Ygc2VsZWN0aW9uU2V0UGFyYW1PckZhY3RvcnkgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIG5vcm1hbGl6ZVNlbGVjdGlvblNldFBhcmFtRmFjdG9yeShzZWxlY3Rpb25TZXRQYXJhbU9yRmFjdG9yeSk7XG4gICAgfVxuICAgIHJldHVybiAoKSA9PiBub3JtYWxpemVTZWxlY3Rpb25TZXRQYXJhbShzZWxlY3Rpb25TZXRQYXJhbU9yRmFjdG9yeSk7XG59XG5mdW5jdGlvbiBpZGVudGljYWwodmFsKSB7XG4gICAgcmV0dXJuIHZhbDtcbn1cbmZ1bmN0aW9uIGhhbmRsZUl0ZXJhdGlvblJlc3VsdChkZWxlZ2F0ZUZuLCBkZWxlZ2F0ZU9wdGlvbnMsIG9uRGVsZWdhdGVIb29rRG9uZXMpIHtcbiAgICBjb25zdCBkZWxlZ2F0aW9uUmVzdWx0JCA9IGRlbGVnYXRlRm4oZGVsZWdhdGVPcHRpb25zKTtcbiAgICByZXR1cm4gbWFwTWF5YmVQcm9taXNlKGRlbGVnYXRpb25SZXN1bHQkLCBmdW5jdGlvbiBoYW5kbGVPbkRlbGVnYXRlRG9uZShkZWxlZ2F0aW9uUmVzdWx0KSB7XG4gICAgICAgIGZ1bmN0aW9uIHNldFJlc3VsdChuZXdSZXN1bHQpIHtcbiAgICAgICAgICAgIGRlbGVnYXRpb25SZXN1bHQgPSBuZXdSZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgb25EZWxlZ2F0ZURvbmVSZXN1bHQkID0gaXRlcmF0ZUFzeW5jKG9uRGVsZWdhdGVIb29rRG9uZXMsIG9uRGVsZWdhdGVIb29rRG9uZSA9PiBvbkRlbGVnYXRlSG9va0RvbmUoe1xuICAgICAgICAgICAgcmVzdWx0OiBkZWxlZ2F0aW9uUmVzdWx0LFxuICAgICAgICAgICAgc2V0UmVzdWx0LFxuICAgICAgICB9KSk7XG4gICAgICAgIHJldHVybiBtYXBNYXliZVByb21pc2Uob25EZWxlZ2F0ZURvbmVSZXN1bHQkLCAoKSA9PiBkZWxlZ2F0aW9uUmVzdWx0KTtcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/esm/in-context-sdk.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/esm/useSubschema.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/esm/useSubschema.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useSubschema: () => (/* binding */ useSubschema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql_jit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql-jit */ \"(ssr)/../node_modules/graphql-jit/dist/esm/index.js\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/utils.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/apply-transforms.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n/* harmony import */ var _graphql_tools_executor__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/executor */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/esm/utils.js\");\n\n\n\n\n\n\n\n\nvar IntrospectionQueryType;\n(function (IntrospectionQueryType) {\n    IntrospectionQueryType[\"FEDERATION\"] = \"FEDERATION\";\n    IntrospectionQueryType[\"REGULAR\"] = \"REGULAR\";\n    IntrospectionQueryType[\"STREAM\"] = \"STREAM\";\n})(IntrospectionQueryType || (IntrospectionQueryType = {}));\nconst getIntrospectionOperationType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getIntrospectionOperationType(operationAST) {\n    let introspectionQueryType = null;\n    if (operationAST.operation === 'query' && operationAST.selectionSet.selections.length === 1) {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_2__.visit)(operationAST, {\n            Field: (node) => {\n                if (node.name.value === '__schema' || node.name.value === '__type') {\n                    introspectionQueryType = IntrospectionQueryType.REGULAR;\n                    return graphql__WEBPACK_IMPORTED_MODULE_2__.BREAK;\n                }\n                if (node.name.value === '_service') {\n                    introspectionQueryType = IntrospectionQueryType.FEDERATION;\n                    return graphql__WEBPACK_IMPORTED_MODULE_2__.BREAK;\n                }\n                if (node.directives?.some(d => d.name.value === 'stream')) {\n                    introspectionQueryType = IntrospectionQueryType.STREAM;\n                    return graphql__WEBPACK_IMPORTED_MODULE_2__.BREAK;\n                }\n            },\n        });\n    }\n    return introspectionQueryType;\n});\nfunction getExecuteFn(subschema) {\n    const compiledQueryCache = new WeakMap();\n    return function subschemaExecute(args) {\n        const originalRequest = {\n            document: args.document,\n            variables: args.variableValues,\n            operationName: args.operationName ?? undefined,\n            rootValue: args.rootValue,\n            context: args.contextValue,\n        };\n        const operationAST = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getOperationASTFromRequest)(originalRequest);\n        // TODO: We need more elegant solution\n        const introspectionQueryType = getIntrospectionOperationType(operationAST);\n        if (introspectionQueryType === IntrospectionQueryType.FEDERATION) {\n            const executionResult = {\n                data: {\n                    _service: {\n                        sdl: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.printSchemaWithDirectives)(args.schema),\n                    },\n                },\n            };\n            return executionResult;\n        }\n        else if (introspectionQueryType === IntrospectionQueryType.REGULAR) {\n            return (0,_graphql_tools_executor__WEBPACK_IMPORTED_MODULE_5__.normalizedExecutor)(args);\n        }\n        const isStream = introspectionQueryType === IntrospectionQueryType.STREAM;\n        const delegationContext = {\n            subschema,\n            subschemaConfig: subschema,\n            targetSchema: args.schema,\n            operation: operationAST.operation,\n            fieldName: '', // Might not work\n            context: args.contextValue,\n            rootValue: args.rootValue,\n            transforms: subschema.transforms,\n            transformedSchema: subschema.transformedSchema,\n            skipTypeMerging: true,\n            returnType: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.getDefinedRootType)(args.schema, operationAST.operation),\n        };\n        let executor = subschema.executor;\n        if (executor == null) {\n            if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isGraphQLJitCompatible)(subschema.schema) ||\n                isStream ||\n                operationAST.operation === 'subscription') {\n                executor = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_8__.createDefaultExecutor)(subschema.schema);\n            }\n            else {\n                executor = function subschemaExecutor(request) {\n                    let compiledQuery = compiledQueryCache.get(request.document);\n                    if (!compiledQuery) {\n                        const compilationResult = (0,graphql_jit__WEBPACK_IMPORTED_MODULE_0__.compileQuery)(subschema.schema, request.document, request.operationName, {\n                            // TODO: Disable for now\n                            customJSONSerializer: false,\n                            disableLeafSerialization: true,\n                        });\n                        if (!(0,graphql_jit__WEBPACK_IMPORTED_MODULE_0__.isCompiledQuery)(compilationResult)) {\n                            return compilationResult;\n                        }\n                        compiledQuery = compilationResult;\n                        compiledQueryCache.set(request.document, compiledQuery);\n                    }\n                    if (operationAST.operation === 'subscription') {\n                        return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_9__.mapMaybePromise)(compiledQuery.subscribe(request.rootValue, request.context, request.variables), result => {\n                            result.stringify = compiledQuery.stringify;\n                            return result;\n                        });\n                    }\n                    return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_9__.mapMaybePromise)(compiledQuery.query(request.rootValue, request.context, request.variables), result => {\n                        result.stringify = compiledQuery.stringify;\n                        return result;\n                    });\n                };\n            }\n        }\n        /*\n        if (subschema.batch) {\n          executor = createBatchingExecutor(executor);\n        }\n        */\n        const transformationContext = {};\n        const transformedRequest = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__.applyRequestTransforms)(originalRequest, delegationContext, transformationContext, subschema.transforms);\n        return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_9__.mapMaybePromise)(executor(transformedRequest), function handleResult(originalResult) {\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.isAsyncIterable)(originalResult)) {\n                return (0,_envelop_core__WEBPACK_IMPORTED_MODULE_12__.mapAsyncIterator)(originalResult, singleResult => (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__.applyResultTransforms)(singleResult, delegationContext, transformationContext, subschema.transforms));\n            }\n            const transformedResult = (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_10__.applyResultTransforms)(originalResult, delegationContext, transformationContext, subschema.transforms);\n            return transformedResult;\n        });\n    };\n}\n// Creates an envelop plugin to execute a subschema inside Envelop\nfunction useSubschema(subschema) {\n    const executeFn = getExecuteFn(subschema);\n    const plugin = {\n        onPluginInit({ setSchema }) {\n            // To prevent unwanted warnings from stitching\n            if (!('_transformedSchema' in subschema)) {\n                subschema.transformedSchema = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__.applySchemaTransforms)(subschema.schema, subschema);\n            }\n            subschema.transformedSchema.extensions =\n                subschema.transformedSchema.extensions || subschema.schema.extensions || {};\n            Object.assign(subschema.transformedSchema.extensions, subschema.schema.extensions);\n            setSchema(subschema.transformedSchema);\n        },\n        onExecute({ setExecuteFn }) {\n            setExecuteFn(\n            // @ts-expect-error the typed execution args dont match regular execution types\n            executeFn);\n        },\n        onSubscribe({ setSubscribeFn }) {\n            setSubscribeFn(\n            // @ts-expect-error the typed execution args dont match regular execution types\n            executeFn);\n        },\n    };\n    return plugin;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/esm/useSubschema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/esm/utils.js":
/*!**********************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/esm/utils.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOriginalError: () => (/* binding */ getOriginalError),\n/* harmony export */   isGraphQLJitCompatible: () => (/* binding */ isGraphQLJitCompatible),\n/* harmony export */   isStreamOperation: () => (/* binding */ isStreamOperation)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/document-string-map.js\");\n/* harmony import */ var _envelop_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @envelop/core */ \"(ssr)/../node_modules/@envelop/core/esm/plugins/use-masked-errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n\n\n\nconst isStreamOperation = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize1)(function isStreamOperation(astNode) {\n    if (globalThis.process?.env?.DISABLE_JIT) {\n        return true;\n    }\n    const documentStr = (0,_envelop_core__WEBPACK_IMPORTED_MODULE_1__.getDocumentString)(astNode);\n    let isStream = false;\n    if (!documentStr || documentStr.includes('@stream')) {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_2__.visit)(astNode, {\n            Field: {\n                enter(node) {\n                    if (node.directives?.some(d => d.name.value === 'stream')) {\n                        isStream = true;\n                        return graphql__WEBPACK_IMPORTED_MODULE_2__.BREAK;\n                    }\n                    return undefined;\n                },\n            },\n        });\n    }\n    return isStream;\n});\nconst isGraphQLJitCompatible = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize1)(function isGraphQLJitCompatible(schema) {\n    if (globalThis.process?.env?.DISABLE_JIT) {\n        return false;\n    }\n    let compatibleSchema = true;\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.INPUT_OBJECT_TYPE]: type => {\n            const seenTypes = new Set();\n            function visitInputType(type) {\n                if (seenTypes.has(type.toString())) {\n                    compatibleSchema = false;\n                    return false;\n                }\n                seenTypes.add(type.toString());\n                const fields = type.getFields();\n                for (const field of Object.values(fields)) {\n                    const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.getNamedType)(field.type);\n                    if (fieldType instanceof graphql__WEBPACK_IMPORTED_MODULE_5__.GraphQLInputObjectType) {\n                        if (!visitInputType(fieldType)) {\n                            return false;\n                        }\n                    }\n                }\n                return true;\n            }\n            visitInputType(type);\n            return type;\n        },\n    });\n    if (compatibleSchema) {\n        try {\n            // eslint-disable-next-line no-new-func\n            const a = new Function('return true');\n            return a();\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    return false;\n});\nfunction getOriginalError(error) {\n    if ((0,_envelop_core__WEBPACK_IMPORTED_MODULE_6__.isGraphQLError)(error)) {\n        return getOriginalError(error.originalError);\n    }\n    return error;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9lc20vdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztBQUE2RTtBQUNYO0FBQ0s7QUFDaEUsMEJBQTBCLDhEQUFRO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnRUFBaUI7QUFDekM7QUFDQTtBQUNBLFFBQVEsOENBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiwwQ0FBSztBQUNwQztBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLENBQUM7QUFDTSwrQkFBK0IsOERBQVE7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLCtEQUFTO0FBQ2IsU0FBUyw0REFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0MscURBQVk7QUFDbEQsNkNBQTZDLDJEQUFzQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ007QUFDUCxRQUFRLDZEQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL2VzbS91dGlscy5qcz83NzI0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJSRUFLLCBnZXROYW1lZFR5cGUsIEdyYXBoUUxJbnB1dE9iamVjdFR5cGUsIHZpc2l0IH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBnZXREb2N1bWVudFN0cmluZywgaXNHcmFwaFFMRXJyb3IgfSBmcm9tICdAZW52ZWxvcC9jb3JlJztcbmltcG9ydCB7IE1hcHBlcktpbmQsIG1hcFNjaGVtYSwgbWVtb2l6ZTEgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5leHBvcnQgY29uc3QgaXNTdHJlYW1PcGVyYXRpb24gPSBtZW1vaXplMShmdW5jdGlvbiBpc1N0cmVhbU9wZXJhdGlvbihhc3ROb2RlKSB7XG4gICAgaWYgKGdsb2JhbFRoaXMucHJvY2Vzcz8uZW52Py5ESVNBQkxFX0pJVCkge1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY29uc3QgZG9jdW1lbnRTdHIgPSBnZXREb2N1bWVudFN0cmluZyhhc3ROb2RlKTtcbiAgICBsZXQgaXNTdHJlYW0gPSBmYWxzZTtcbiAgICBpZiAoIWRvY3VtZW50U3RyIHx8IGRvY3VtZW50U3RyLmluY2x1ZGVzKCdAc3RyZWFtJykpIHtcbiAgICAgICAgdmlzaXQoYXN0Tm9kZSwge1xuICAgICAgICAgICAgRmllbGQ6IHtcbiAgICAgICAgICAgICAgICBlbnRlcihub2RlKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLmRpcmVjdGl2ZXM/LnNvbWUoZCA9PiBkLm5hbWUudmFsdWUgPT09ICdzdHJlYW0nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaXNTdHJlYW0gPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEJSRUFLO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gaXNTdHJlYW07XG59KTtcbmV4cG9ydCBjb25zdCBpc0dyYXBoUUxKaXRDb21wYXRpYmxlID0gbWVtb2l6ZTEoZnVuY3Rpb24gaXNHcmFwaFFMSml0Q29tcGF0aWJsZShzY2hlbWEpIHtcbiAgICBpZiAoZ2xvYmFsVGhpcy5wcm9jZXNzPy5lbnY/LkRJU0FCTEVfSklUKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgbGV0IGNvbXBhdGlibGVTY2hlbWEgPSB0cnVlO1xuICAgIG1hcFNjaGVtYShzY2hlbWEsIHtcbiAgICAgICAgW01hcHBlcktpbmQuSU5QVVRfT0JKRUNUX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHNlZW5UeXBlcyA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgIGZ1bmN0aW9uIHZpc2l0SW5wdXRUeXBlKHR5cGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoc2VlblR5cGVzLmhhcyh0eXBlLnRvU3RyaW5nKCkpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbXBhdGlibGVTY2hlbWEgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBzZWVuVHlwZXMuYWRkKHR5cGUudG9TdHJpbmcoKSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkIG9mIE9iamVjdC52YWx1ZXMoZmllbGRzKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZFR5cGUgPSBnZXROYW1lZFR5cGUoZmllbGQudHlwZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZFR5cGUgaW5zdGFuY2VvZiBHcmFwaFFMSW5wdXRPYmplY3RUeXBlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXZpc2l0SW5wdXRUeXBlKGZpZWxkVHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB2aXNpdElucHV0VHlwZSh0eXBlKTtcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGlmIChjb21wYXRpYmxlU2NoZW1hKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tbmV3LWZ1bmNcbiAgICAgICAgICAgIGNvbnN0IGEgPSBuZXcgRnVuY3Rpb24oJ3JldHVybiB0cnVlJyk7XG4gICAgICAgICAgICByZXR1cm4gYSgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufSk7XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3JpZ2luYWxFcnJvcihlcnJvcikge1xuICAgIGlmIChpc0dyYXBoUUxFcnJvcihlcnJvcikpIHtcbiAgICAgICAgcmV0dXJuIGdldE9yaWdpbmFsRXJyb3IoZXJyb3Iub3JpZ2luYWxFcnJvcik7XG4gICAgfVxuICAgIHJldHVybiBlcnJvcjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/apply-transforms.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/apply-transforms.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyRequestTransforms: () => (/* binding */ applyRequestTransforms),\n/* harmony export */   applyResultTransforms: () => (/* binding */ applyResultTransforms),\n/* harmony export */   applySchemaTransforms: () => (/* binding */ applySchemaTransforms)\n/* harmony export */ });\nfunction applySchemaTransforms(originalWrappingSchema, subschemaConfig, transformedSchema, transforms) {\n    if (transforms?.length) {\n        return transforms.reduce((schema, transform) => 'transformSchema' in transform\n            ? transform.transformSchema(schema, subschemaConfig)\n            : schema, originalWrappingSchema);\n    }\n    return originalWrappingSchema;\n}\nfunction applyRequestTransforms(originalRequest, delegationContext, transformationContext, transforms) {\n    transformationContext.contextMap = transformationContext.contextMap || new WeakMap();\n    const contextMap = transformationContext.contextMap;\n    transforms?.forEach(transform => {\n        if (!contextMap.has(transform)) {\n            contextMap.set(transform, {\n                nextIndex: 0,\n                paths: {},\n            });\n        }\n    });\n    return transforms.reduceRight((request, transform) => 'transformRequest' in transform\n        ? transform.transformRequest(request, delegationContext, contextMap.get(transform))\n        : request, originalRequest);\n}\nfunction applyResultTransforms(originalResult, delegationContext, transformationContext, transforms) {\n    const contextMap = transformationContext.contextMap;\n    return transforms.reduce((result, transform) => 'transformResult' in transform\n        ? transform.transformResult(result, delegationContext, contextMap.get(transform))\n        : result, originalResult);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vYXBwbHktdHJhbnNmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsYUFBYTtBQUNiO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3V0aWxzL2VzbS9hcHBseS10cmFuc2Zvcm1zLmpzP2JmNzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFwcGx5U2NoZW1hVHJhbnNmb3JtcyhvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCBzdWJzY2hlbWFDb25maWcsIHRyYW5zZm9ybWVkU2NoZW1hLCB0cmFuc2Zvcm1zKSB7XG4gICAgaWYgKHRyYW5zZm9ybXM/Lmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gdHJhbnNmb3Jtcy5yZWR1Y2UoKHNjaGVtYSwgdHJhbnNmb3JtKSA9PiAndHJhbnNmb3JtU2NoZW1hJyBpbiB0cmFuc2Zvcm1cbiAgICAgICAgICAgID8gdHJhbnNmb3JtLnRyYW5zZm9ybVNjaGVtYShzY2hlbWEsIHN1YnNjaGVtYUNvbmZpZylcbiAgICAgICAgICAgIDogc2NoZW1hLCBvcmlnaW5hbFdyYXBwaW5nU2NoZW1hKTtcbiAgICB9XG4gICAgcmV0dXJuIG9yaWdpbmFsV3JhcHBpbmdTY2hlbWE7XG59XG5leHBvcnQgZnVuY3Rpb24gYXBwbHlSZXF1ZXN0VHJhbnNmb3JtcyhvcmlnaW5hbFJlcXVlc3QsIGRlbGVnYXRpb25Db250ZXh0LCB0cmFuc2Zvcm1hdGlvbkNvbnRleHQsIHRyYW5zZm9ybXMpIHtcbiAgICB0cmFuc2Zvcm1hdGlvbkNvbnRleHQuY29udGV4dE1hcCA9IHRyYW5zZm9ybWF0aW9uQ29udGV4dC5jb250ZXh0TWFwIHx8IG5ldyBXZWFrTWFwKCk7XG4gICAgY29uc3QgY29udGV4dE1hcCA9IHRyYW5zZm9ybWF0aW9uQ29udGV4dC5jb250ZXh0TWFwO1xuICAgIHRyYW5zZm9ybXM/LmZvckVhY2godHJhbnNmb3JtID0+IHtcbiAgICAgICAgaWYgKCFjb250ZXh0TWFwLmhhcyh0cmFuc2Zvcm0pKSB7XG4gICAgICAgICAgICBjb250ZXh0TWFwLnNldCh0cmFuc2Zvcm0sIHtcbiAgICAgICAgICAgICAgICBuZXh0SW5kZXg6IDAsXG4gICAgICAgICAgICAgICAgcGF0aHM6IHt9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gdHJhbnNmb3Jtcy5yZWR1Y2VSaWdodCgocmVxdWVzdCwgdHJhbnNmb3JtKSA9PiAndHJhbnNmb3JtUmVxdWVzdCcgaW4gdHJhbnNmb3JtXG4gICAgICAgID8gdHJhbnNmb3JtLnRyYW5zZm9ybVJlcXVlc3QocmVxdWVzdCwgZGVsZWdhdGlvbkNvbnRleHQsIGNvbnRleHRNYXAuZ2V0KHRyYW5zZm9ybSkpXG4gICAgICAgIDogcmVxdWVzdCwgb3JpZ2luYWxSZXF1ZXN0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhcHBseVJlc3VsdFRyYW5zZm9ybXMob3JpZ2luYWxSZXN1bHQsIGRlbGVnYXRpb25Db250ZXh0LCB0cmFuc2Zvcm1hdGlvbkNvbnRleHQsIHRyYW5zZm9ybXMpIHtcbiAgICBjb25zdCBjb250ZXh0TWFwID0gdHJhbnNmb3JtYXRpb25Db250ZXh0LmNvbnRleHRNYXA7XG4gICAgcmV0dXJuIHRyYW5zZm9ybXMucmVkdWNlKChyZXN1bHQsIHRyYW5zZm9ybSkgPT4gJ3RyYW5zZm9ybVJlc3VsdCcgaW4gdHJhbnNmb3JtXG4gICAgICAgID8gdHJhbnNmb3JtLnRyYW5zZm9ybVJlc3VsdChyZXN1bHQsIGRlbGVnYXRpb25Db250ZXh0LCBjb250ZXh0TWFwLmdldCh0cmFuc2Zvcm0pKVxuICAgICAgICA6IHJlc3VsdCwgb3JpZ2luYWxSZXN1bHQpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/apply-transforms.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/disposable.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/disposable.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAsyncDisposable: () => (/* binding */ createAsyncDisposable),\n/* harmony export */   createDisposable: () => (/* binding */ createDisposable),\n/* harmony export */   dispose: () => (/* binding */ dispose),\n/* harmony export */   isDisposable: () => (/* binding */ isDisposable),\n/* harmony export */   makeAsyncDisposable: () => (/* binding */ makeAsyncDisposable),\n/* harmony export */   makeDisposable: () => (/* binding */ makeDisposable)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/disposablestack */ \"(ssr)/../node_modules/@whatwg-node/disposablestack/esm/symbols.js\");\n\nfunction isDisposable(obj) {\n    return obj?.[_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.dispose] || obj?.[_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.asyncDispose];\n}\nfunction dispose(disposable) {\n    if (_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.dispose in disposable) {\n        return disposable[_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.dispose]();\n    }\n    if (_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.asyncDispose in disposable) {\n        return disposable[_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.asyncDispose]();\n    }\n}\nfunction createDisposable(disposeFn) {\n    return {\n        [_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.dispose]: disposeFn,\n    };\n}\nfunction createAsyncDisposable(disposeFn) {\n    return {\n        [_whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.asyncDispose]: disposeFn,\n    };\n}\nfunction makeDisposable(obj, disposeFn) {\n    Object.defineProperty(obj, _whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.dispose, {\n        value: disposeFn,\n        configurable: true,\n    });\n    return obj;\n}\nfunction makeAsyncDisposable(obj, disposeFn) {\n    Object.defineProperty(obj, _whatwg_node_disposablestack__WEBPACK_IMPORTED_MODULE_0__.DisposableSymbols.asyncDispose, {\n        value: disposeFn,\n        configurable: true,\n    });\n    return obj;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZGlzcG9zYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWlFO0FBQzFEO0FBQ1AsaUJBQWlCLDJFQUFpQixtQkFBbUIsMkVBQWlCO0FBQ3RFO0FBQ087QUFDUCxRQUFRLDJFQUFpQjtBQUN6QiwwQkFBMEIsMkVBQWlCO0FBQzNDO0FBQ0EsUUFBUSwyRUFBaUI7QUFDekIsMEJBQTBCLDJFQUFpQjtBQUMzQztBQUNBO0FBQ087QUFDUDtBQUNBLFNBQVMsMkVBQWlCO0FBQzFCO0FBQ0E7QUFDTztBQUNQO0FBQ0EsU0FBUywyRUFBaUI7QUFDMUI7QUFDQTtBQUNPO0FBQ1AsK0JBQStCLDJFQUFpQjtBQUNoRDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDTztBQUNQLCtCQUErQiwyRUFBaUI7QUFDaEQ7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3V0aWxzL2VzbS9kaXNwb3NhYmxlLmpzPzdlYTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlzcG9zYWJsZVN5bWJvbHMgfSBmcm9tICdAd2hhdHdnLW5vZGUvZGlzcG9zYWJsZXN0YWNrJztcbmV4cG9ydCBmdW5jdGlvbiBpc0Rpc3Bvc2FibGUob2JqKSB7XG4gICAgcmV0dXJuIG9iaj8uW0Rpc3Bvc2FibGVTeW1ib2xzLmRpc3Bvc2VdIHx8IG9iaj8uW0Rpc3Bvc2FibGVTeW1ib2xzLmFzeW5jRGlzcG9zZV07XG59XG5leHBvcnQgZnVuY3Rpb24gZGlzcG9zZShkaXNwb3NhYmxlKSB7XG4gICAgaWYgKERpc3Bvc2FibGVTeW1ib2xzLmRpc3Bvc2UgaW4gZGlzcG9zYWJsZSkge1xuICAgICAgICByZXR1cm4gZGlzcG9zYWJsZVtEaXNwb3NhYmxlU3ltYm9scy5kaXNwb3NlXSgpO1xuICAgIH1cbiAgICBpZiAoRGlzcG9zYWJsZVN5bWJvbHMuYXN5bmNEaXNwb3NlIGluIGRpc3Bvc2FibGUpIHtcbiAgICAgICAgcmV0dXJuIGRpc3Bvc2FibGVbRGlzcG9zYWJsZVN5bWJvbHMuYXN5bmNEaXNwb3NlXSgpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVEaXNwb3NhYmxlKGRpc3Bvc2VGbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIFtEaXNwb3NhYmxlU3ltYm9scy5kaXNwb3NlXTogZGlzcG9zZUZuLFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQXN5bmNEaXNwb3NhYmxlKGRpc3Bvc2VGbikge1xuICAgIHJldHVybiB7XG4gICAgICAgIFtEaXNwb3NhYmxlU3ltYm9scy5hc3luY0Rpc3Bvc2VdOiBkaXNwb3NlRm4sXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtYWtlRGlzcG9zYWJsZShvYmosIGRpc3Bvc2VGbikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIERpc3Bvc2FibGVTeW1ib2xzLmRpc3Bvc2UsIHtcbiAgICAgICAgdmFsdWU6IGRpc3Bvc2VGbixcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgIH0pO1xuICAgIHJldHVybiBvYmo7XG59XG5leHBvcnQgZnVuY3Rpb24gbWFrZUFzeW5jRGlzcG9zYWJsZShvYmosIGRpc3Bvc2VGbikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIERpc3Bvc2FibGVTeW1ib2xzLmFzeW5jRGlzcG9zZSwge1xuICAgICAgICB2YWx1ZTogZGlzcG9zZUZuLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgfSk7XG4gICAgcmV0dXJuIG9iajtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/disposable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/getHeadersObj.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/getHeadersObj.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getHeadersObj: () => (/* binding */ getHeadersObj)\n/* harmony export */ });\nfunction headersToJSON(headers) {\n    return Object.fromEntries(headers.entries());\n}\nfunction isHeaders(headers) {\n    return headers != null && 'get' in headers && typeof headers.get === 'function';\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeaders(headers)) {\n        return headers;\n    }\n    return new Proxy({}, {\n        get(_target, name) {\n            if (name === 'toJSON') {\n                return () => headersToJSON(headers);\n            }\n            return headers.get(name.toString().toLowerCase()) || undefined;\n        },\n        has(_target, name) {\n            if (name === 'toJSON') {\n                return true;\n            }\n            return headers.has(name.toString().toLowerCase());\n        },\n        ownKeys(_target) {\n            return [...new Set(headers.keys())];\n        },\n        set(_target, name, value) {\n            headers.set(name.toString().toLowerCase(), value);\n            return true;\n        },\n        defineProperty(_target, name, descriptor) {\n            if (descriptor.value != null) {\n                headers.set(name.toString().toLowerCase(), descriptor.value);\n            }\n            return true;\n        },\n        getOwnPropertyDescriptor(_target, name) {\n            const value = headers.get(name.toString().toLowerCase());\n            if (value == null) {\n                return undefined;\n            }\n            return {\n                configurable: true,\n                enumerable: true,\n                value,\n                writable: true,\n            };\n        },\n        deleteProperty(_target, name) {\n            headers.delete(name.toString().toLowerCase());\n            return true;\n        },\n        preventExtensions() {\n            return true;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZ2V0SGVhZGVyc09iai5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2dldEhlYWRlcnNPYmouanM/MmY5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBoZWFkZXJzVG9KU09OKGhlYWRlcnMpIHtcbiAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKGhlYWRlcnMuZW50cmllcygpKTtcbn1cbmZ1bmN0aW9uIGlzSGVhZGVycyhoZWFkZXJzKSB7XG4gICAgcmV0dXJuIGhlYWRlcnMgIT0gbnVsbCAmJiAnZ2V0JyBpbiBoZWFkZXJzICYmIHR5cGVvZiBoZWFkZXJzLmdldCA9PT0gJ2Z1bmN0aW9uJztcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRIZWFkZXJzT2JqKGhlYWRlcnMpIHtcbiAgICBpZiAoaGVhZGVycyA9PSBudWxsIHx8ICFpc0hlYWRlcnMoaGVhZGVycykpIHtcbiAgICAgICAgcmV0dXJuIGhlYWRlcnM7XG4gICAgfVxuICAgIHJldHVybiBuZXcgUHJveHkoe30sIHtcbiAgICAgICAgZ2V0KF90YXJnZXQsIG5hbWUpIHtcbiAgICAgICAgICAgIGlmIChuYW1lID09PSAndG9KU09OJykge1xuICAgICAgICAgICAgICAgIHJldHVybiAoKSA9PiBoZWFkZXJzVG9KU09OKGhlYWRlcnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGhlYWRlcnMuZ2V0KG5hbWUudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKSB8fCB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgICAgIGhhcyhfdGFyZ2V0LCBuYW1lKSB7XG4gICAgICAgICAgICBpZiAobmFtZSA9PT0gJ3RvSlNPTicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBoZWFkZXJzLmhhcyhuYW1lLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgIH0sXG4gICAgICAgIG93bktleXMoX3RhcmdldCkge1xuICAgICAgICAgICAgcmV0dXJuIFsuLi5uZXcgU2V0KGhlYWRlcnMua2V5cygpKV07XG4gICAgICAgIH0sXG4gICAgICAgIHNldChfdGFyZ2V0LCBuYW1lLCB2YWx1ZSkge1xuICAgICAgICAgICAgaGVhZGVycy5zZXQobmFtZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCksIHZhbHVlKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9LFxuICAgICAgICBkZWZpbmVQcm9wZXJ0eShfdGFyZ2V0LCBuYW1lLCBkZXNjcmlwdG9yKSB7XG4gICAgICAgICAgICBpZiAoZGVzY3JpcHRvci52YWx1ZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgaGVhZGVycy5zZXQobmFtZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCksIGRlc2NyaXB0b3IudmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgICAgIGdldE93blByb3BlcnR5RGVzY3JpcHRvcihfdGFyZ2V0LCBuYW1lKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZSA9IGhlYWRlcnMuZ2V0KG5hbWUudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgICAgICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBkZWxldGVQcm9wZXJ0eShfdGFyZ2V0LCBuYW1lKSB7XG4gICAgICAgICAgICBoZWFkZXJzLmRlbGV0ZShuYW1lLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKSk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgcHJldmVudEV4dGVuc2lvbnMoKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/getHeadersObj.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/global-lru-cache.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/global-lru-cache.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLruCache: () => (/* binding */ createLruCache)\n/* harmony export */ });\n/* harmony import */ var tiny_lru__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-lru */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/tiny-lru/dist/tiny-lru.js\");\n\nfunction createLruCache(max, ttl) {\n    return (0,tiny_lru__WEBPACK_IMPORTED_MODULE_0__.lru)(max, ttl);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZ2xvYmFsLWxydS1jYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUN4QjtBQUNQLFdBQVcsNkNBQUc7QUFDZCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZ2xvYmFsLWxydS1jYWNoZS5qcz8zNTQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxydSB9IGZyb20gJ3RpbnktbHJ1JztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVMcnVDYWNoZShtYXgsIHR0bCkge1xuICAgIHJldHVybiBscnUobWF4LCB0dGwpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/global-lru-cache.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/group-transforms.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/group-transforms.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   groupTransforms: () => (/* binding */ groupTransforms)\n/* harmony export */ });\nfunction groupTransforms(transforms) {\n    const wrapTransforms = [];\n    const noWrapTransforms = [];\n    transforms?.forEach(transform => {\n        if (transform.noWrap) {\n            noWrapTransforms.push(transform);\n        }\n        else {\n            wrapTransforms.push(transform);\n        }\n    });\n    return { wrapTransforms, noWrapTransforms };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZ3JvdXAtdHJhbnNmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3V0aWxzL2VzbS9ncm91cC10cmFuc2Zvcm1zLmpzPzFkMWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdyb3VwVHJhbnNmb3Jtcyh0cmFuc2Zvcm1zKSB7XG4gICAgY29uc3Qgd3JhcFRyYW5zZm9ybXMgPSBbXTtcbiAgICBjb25zdCBub1dyYXBUcmFuc2Zvcm1zID0gW107XG4gICAgdHJhbnNmb3Jtcz8uZm9yRWFjaCh0cmFuc2Zvcm0gPT4ge1xuICAgICAgICBpZiAodHJhbnNmb3JtLm5vV3JhcCkge1xuICAgICAgICAgICAgbm9XcmFwVHJhbnNmb3Jtcy5wdXNoKHRyYW5zZm9ybSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB3cmFwVHJhbnNmb3Jtcy5wdXNoKHRyYW5zZm9ybSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4geyB3cmFwVHJhbnNmb3Jtcywgbm9XcmFwVHJhbnNmb3JtcyB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/group-transforms.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/iterateAsync.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/iterateAsync.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   iterateAsync: () => (/* binding */ iterateAsync)\n/* harmony export */ });\n/* harmony import */ var _map_maybe_promise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map-maybe-promise.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js\");\n\nfunction iterateAsync(iterable, callback, results) {\n    const iterator = iterable[Symbol.iterator]();\n    function iterate() {\n        const { done: endOfIterator, value } = iterator.next();\n        if (endOfIterator) {\n            return;\n        }\n        return (0,_map_maybe_promise_js__WEBPACK_IMPORTED_MODULE_0__.mapMaybePromise)(callback(value), result => {\n            if (result) {\n                results?.push(result);\n            }\n            return iterate();\n        });\n    }\n    return iterate();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vaXRlcmF0ZUFzeW5jLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBQ2xEO0FBQ1A7QUFDQTtBQUNBLGdCQUFnQiw2QkFBNkI7QUFDN0M7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZTtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2l0ZXJhdGVBc3luYy5qcz82OGY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1hcE1heWJlUHJvbWlzZSB9IGZyb20gJy4vbWFwLW1heWJlLXByb21pc2UuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGl0ZXJhdGVBc3luYyhpdGVyYWJsZSwgY2FsbGJhY2ssIHJlc3VsdHMpIHtcbiAgICBjb25zdCBpdGVyYXRvciA9IGl0ZXJhYmxlW1N5bWJvbC5pdGVyYXRvcl0oKTtcbiAgICBmdW5jdGlvbiBpdGVyYXRlKCkge1xuICAgICAgICBjb25zdCB7IGRvbmU6IGVuZE9mSXRlcmF0b3IsIHZhbHVlIH0gPSBpdGVyYXRvci5uZXh0KCk7XG4gICAgICAgIGlmIChlbmRPZkl0ZXJhdG9yKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG1hcE1heWJlUHJvbWlzZShjYWxsYmFjayh2YWx1ZSksIHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0cz8ucHVzaChyZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdGUoKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBpdGVyYXRlKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/iterateAsync.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/logger.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/logger.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache;\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultLogger: () => (/* binding */ DefaultLogger),\n/* harmony export */   LogLevel: () => (/* binding */ LogLevel),\n/* harmony export */   debugColor: () => (/* binding */ debugColor),\n/* harmony export */   errorColor: () => (/* binding */ errorColor),\n/* harmony export */   infoColor: () => (/* binding */ infoColor),\n/* harmony export */   titleBold: () => (/* binding */ titleBold),\n/* harmony export */   warnColor: () => (/* binding */ warnColor)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"process\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"util\");\n\nconst ANSI_CODES = {\n    black: '\\x1b[30m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m',\n    reset: '\\x1b[0m',\n    bold: '\\x1b[1m',\n    orange: '\\x1b[48:5:166m',\n};\nconst warnColor = msg => ANSI_CODES.orange + msg + ANSI_CODES.reset;\nconst infoColor = msg => ANSI_CODES.cyan + msg + ANSI_CODES.reset;\nconst errorColor = msg => ANSI_CODES.red + msg + ANSI_CODES.reset;\nconst debugColor = msg => ANSI_CODES.magenta + msg + ANSI_CODES.reset;\nconst titleBold = msg => ANSI_CODES.bold + msg + ANSI_CODES.reset;\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"debug\"] = 0] = \"debug\";\n    LogLevel[LogLevel[\"info\"] = 1] = \"info\";\n    LogLevel[LogLevel[\"warn\"] = 2] = \"warn\";\n    LogLevel[LogLevel[\"error\"] = 3] = \"error\";\n    LogLevel[LogLevel[\"silent\"] = 4] = \"silent\";\n})(LogLevel || (LogLevel = {}));\nconst noop = () => { };\nfunction truthy(str) {\n    return str === true || str === 1 || ['1', 't', 'true', 'y', 'yes'].includes(String(str));\n}\nfunction getTimestamp() {\n    return new Date().toISOString();\n}\nclass DefaultLogger {\n    constructor(name, logLevel = truthy(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG) ? LogLevel.debug : LogLevel.info, trim) {\n        this.name = name;\n        this.logLevel = logLevel;\n        this.trim = trim;\n    }\n    getLoggerMessage({ args = [] }) {\n        return args\n            .flat(Infinity)\n            .map(arg => {\n            if (typeof arg === 'string') {\n                if (this.trim && arg.length > this.trim) {\n                    return (arg.slice(0, this.trim) +\n                        '...' +\n                        '<Message is trimmed. Enable DEBUG=1 to see the full message.>');\n                }\n                return arg;\n            }\n            else if (typeof arg === 'object' && arg?.stack != null) {\n                return arg.stack;\n            }\n            return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.inspect(arg);\n        })\n            .join(' ');\n    }\n    handleLazyMessage({ lazyArgs }) {\n        const flattenedArgs = lazyArgs.flat(Infinity).flatMap(arg => {\n            if (typeof arg === 'function') {\n                return arg();\n            }\n            return arg;\n        });\n        return this.getLoggerMessage({ args: flattenedArgs });\n    }\n    get isDebug() {\n        if (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG) {\n            return (truthy(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG) ||\n                truthy(globalThis.DEBUG) ||\n                this.name.includes(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.env.DEBUG || globalThis.DEBUG));\n        }\n        return false;\n    }\n    get prefix() {\n        return this.name ? titleBold(this.name) : ``;\n    }\n    log(...args) {\n        if (this.logLevel > LogLevel.info) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({ args });\n        const fullMessage = `[${getTimestamp()}] ${this.prefix} ${message}`;\n        if (/*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write(fullMessage + '\\n')) {\n            return;\n        }\n        console.log(fullMessage);\n    }\n    warn(...args) {\n        if (this.logLevel > LogLevel.warn) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({ args });\n        const fullMessage = `[${getTimestamp()}] ${this.prefix} WARN  ${warnColor(message)}`;\n        if (/*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write(fullMessage + '\\n')) {\n            return;\n        }\n        console.warn(fullMessage);\n    }\n    info(...args) {\n        if (this.logLevel > LogLevel.info) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({\n            args,\n        });\n        const fullMessage = `[${getTimestamp()}] INFO  ${this.prefix} ${infoColor(message)}`;\n        if (typeof /*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write === 'function') {\n            _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.stderr.write(fullMessage + '\\n');\n            return;\n        }\n        console.info(fullMessage);\n    }\n    error(...args) {\n        if (this.logLevel > LogLevel.error) {\n            return noop;\n        }\n        const message = this.getLoggerMessage({ args });\n        const fullMessage = `[${getTimestamp()}] ERROR ${this.prefix} ${errorColor(message)}`;\n        if (typeof /*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write === 'function') {\n            _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.stderr.write(fullMessage + '\\n');\n            return;\n        }\n        console.error(fullMessage);\n    }\n    debug(...lazyArgs) {\n        if (this.logLevel > LogLevel.debug) {\n            return noop;\n        }\n        if (this.isDebug) {\n            const message = this.handleLazyMessage({\n                lazyArgs,\n            });\n            const fullMessage = `[${getTimestamp()}] DEBUG ${this.prefix} ${debugColor(message)}`;\n            if (typeof /*#__PURE__*/ (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache || (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0___namespace_cache = __webpack_require__.t(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__, 2)))?.stderr?.write === 'function') {\n                _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.stderr.write(fullMessage + '\\n');\n                return;\n            }\n            console.debug(fullMessage);\n        }\n    }\n    child(name) {\n        if (this.name?.includes(name)) {\n            return this;\n        }\n        return new DefaultLogger(this.name ? `${this.name} - ${name}` : name, this.logLevel);\n    }\n    addPrefix(prefix) {\n        if (!this.name?.includes(prefix)) {\n            this.name = this.name ? `${this.name} - ${prefix}` : prefix;\n        }\n        return this;\n    }\n    toJSON() {\n        return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/logger.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapMaybePromise: () => (/* binding */ mapMaybePromise)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\nfunction mapMaybePromise(value, mapper, errorMapper) {\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.isPromise)(value)) {\n        if (errorMapper) {\n            try {\n                return value.then(mapper, errorMapper);\n            }\n            catch (e) {\n                return errorMapper(e);\n            }\n        }\n        return value.then(mapper);\n    }\n    if (errorMapper) {\n        try {\n            return mapper(value);\n        }\n        catch (e) {\n            return errorMapper(e);\n        }\n    }\n    return mapper(value);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vbWFwLW1heWJlLXByb21pc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFDMUM7QUFDUCxRQUFRLCtEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL21hcC1tYXliZS1wcm9taXNlLmpzPzkwYTIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNQcm9taXNlIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1hcE1heWJlUHJvbWlzZSh2YWx1ZSwgbWFwcGVyLCBlcnJvck1hcHBlcikge1xuICAgIGlmIChpc1Byb21pc2UodmFsdWUpKSB7XG4gICAgICAgIGlmIChlcnJvck1hcHBlcikge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdmFsdWUudGhlbihtYXBwZXIsIGVycm9yTWFwcGVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGVycm9yTWFwcGVyKGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZS50aGVuKG1hcHBlcik7XG4gICAgfVxuICAgIGlmIChlcnJvck1hcHBlcikge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIG1hcHBlcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBlcnJvck1hcHBlcihlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWFwcGVyKHZhbHVlKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/parseAndPrintWithCache.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/parseAndPrintWithCache.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   gql: () => (/* binding */ gql),\n/* harmony export */   parseWithCache: () => (/* binding */ parseWithCache),\n/* harmony export */   printWithCache: () => (/* binding */ printWithCache)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _global_lru_cache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global-lru-cache.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/global-lru-cache.js\");\n\n\n\nconst parseCache = (0,_global_lru_cache_js__WEBPACK_IMPORTED_MODULE_0__.createLruCache)(1000, 3600);\nconst printCache = (0,_global_lru_cache_js__WEBPACK_IMPORTED_MODULE_0__.createLruCache)(1000, 3600);\nfunction parseWithCache(sdl) {\n    const trimmedSdl = sdl.trim();\n    let document = parseCache.get(trimmedSdl);\n    if (!document) {\n        document = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.parse)(trimmedSdl, { noLocation: true });\n        parseCache.set(trimmedSdl, document);\n        printCache.set(JSON.stringify(document), trimmedSdl);\n    }\n    return document;\n}\nconst printWithCache = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.memoize1)(function printWithCache(document) {\n    const stringifedDocumentJson = JSON.stringify(document);\n    let sdl = printCache.get(stringifedDocumentJson);\n    if (!sdl) {\n        sdl = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.print)(document).trim();\n        printCache.set(stringifedDocumentJson, sdl);\n        parseCache.set(sdl, document);\n    }\n    return sdl;\n});\nfunction gql([sdl], ...args) {\n    let result = sdl;\n    for (const arg of args || []) {\n        if (typeof arg === 'string') {\n            result += arg;\n        }\n        else {\n            result += printWithCache(arg);\n        }\n    }\n    return parseWithCache(result);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vcGFyc2VBbmRQcmludFdpdGhDYWNoZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXVDO0FBQ1M7QUFDTztBQUN2RCxtQkFBbUIsb0VBQWM7QUFDakMsbUJBQW1CLG9FQUFjO0FBQzFCO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDhDQUFLLGVBQWUsa0JBQWtCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1QkFBdUIsOERBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0EsY0FBYyw4Q0FBSztBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDTTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL3BhcnNlQW5kUHJpbnRXaXRoQ2FjaGUuanM/ZGUwYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSwgcHJpbnQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlTHJ1Q2FjaGUgfSBmcm9tICcuL2dsb2JhbC1scnUtY2FjaGUuanMnO1xuY29uc3QgcGFyc2VDYWNoZSA9IGNyZWF0ZUxydUNhY2hlKDEwMDAsIDM2MDApO1xuY29uc3QgcHJpbnRDYWNoZSA9IGNyZWF0ZUxydUNhY2hlKDEwMDAsIDM2MDApO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlV2l0aENhY2hlKHNkbCkge1xuICAgIGNvbnN0IHRyaW1tZWRTZGwgPSBzZGwudHJpbSgpO1xuICAgIGxldCBkb2N1bWVudCA9IHBhcnNlQ2FjaGUuZ2V0KHRyaW1tZWRTZGwpO1xuICAgIGlmICghZG9jdW1lbnQpIHtcbiAgICAgICAgZG9jdW1lbnQgPSBwYXJzZSh0cmltbWVkU2RsLCB7IG5vTG9jYXRpb246IHRydWUgfSk7XG4gICAgICAgIHBhcnNlQ2FjaGUuc2V0KHRyaW1tZWRTZGwsIGRvY3VtZW50KTtcbiAgICAgICAgcHJpbnRDYWNoZS5zZXQoSlNPTi5zdHJpbmdpZnkoZG9jdW1lbnQpLCB0cmltbWVkU2RsKTtcbiAgICB9XG4gICAgcmV0dXJuIGRvY3VtZW50O1xufVxuZXhwb3J0IGNvbnN0IHByaW50V2l0aENhY2hlID0gbWVtb2l6ZTEoZnVuY3Rpb24gcHJpbnRXaXRoQ2FjaGUoZG9jdW1lbnQpIHtcbiAgICBjb25zdCBzdHJpbmdpZmVkRG9jdW1lbnRKc29uID0gSlNPTi5zdHJpbmdpZnkoZG9jdW1lbnQpO1xuICAgIGxldCBzZGwgPSBwcmludENhY2hlLmdldChzdHJpbmdpZmVkRG9jdW1lbnRKc29uKTtcbiAgICBpZiAoIXNkbCkge1xuICAgICAgICBzZGwgPSBwcmludChkb2N1bWVudCkudHJpbSgpO1xuICAgICAgICBwcmludENhY2hlLnNldChzdHJpbmdpZmVkRG9jdW1lbnRKc29uLCBzZGwpO1xuICAgICAgICBwYXJzZUNhY2hlLnNldChzZGwsIGRvY3VtZW50KTtcbiAgICB9XG4gICAgcmV0dXJuIHNkbDtcbn0pO1xuZXhwb3J0IGZ1bmN0aW9uIGdxbChbc2RsXSwgLi4uYXJncykge1xuICAgIGxldCByZXN1bHQgPSBzZGw7XG4gICAgZm9yIChjb25zdCBhcmcgb2YgYXJncyB8fCBbXSkge1xuICAgICAgICBpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJlc3VsdCArPSBhcmc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQgKz0gcHJpbnRXaXRoQ2FjaGUoYXJnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcGFyc2VXaXRoQ2FjaGUocmVzdWx0KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/parseAndPrintWithCache.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/pubsub.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/pubsub.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PubSub: () => (/* binding */ PubSub)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js\");\n\nclass PubSub {\n    constructor() {\n        this.subIdListenerMap = new Map();\n        this.listenerEventMap = new Map();\n        this.eventNameListenersMap = new Map();\n    }\n    getEventNames() {\n        return this.eventNameListenersMap.keys();\n    }\n    publish(triggerName, detail) {\n        const eventNameListeners = this.eventNameListenersMap.get(triggerName);\n        if (eventNameListeners) {\n            Promise.allSettled([...eventNameListeners].map(listener => listener(detail))).catch(e => console.error(e));\n        }\n    }\n    subscribe(triggerName, onMessage) {\n        let eventNameListeners = this.eventNameListenersMap.get(triggerName);\n        if (!eventNameListeners) {\n            eventNameListeners = new Set();\n            this.eventNameListenersMap.set(triggerName, eventNameListeners);\n        }\n        const subId = Date.now();\n        eventNameListeners.add(onMessage);\n        this.subIdListenerMap.set(subId, onMessage);\n        this.listenerEventMap.set(onMessage, triggerName);\n        return subId;\n    }\n    unsubscribe(subId) {\n        const listener = this.subIdListenerMap.get(subId);\n        if (listener) {\n            this.subIdListenerMap.delete(subId);\n            const eventName = this.listenerEventMap.get(listener);\n            if (eventName) {\n                const eventNameListeners = this.eventNameListenersMap.get(eventName);\n                if (eventNameListeners) {\n                    eventNameListeners.delete(listener);\n                }\n            }\n        }\n        this.listenerEventMap.delete(listener);\n    }\n    asyncIterator(triggerName) {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.observableToAsyncIterable)({\n            subscribe: observer => {\n                const subId = this.subscribe(triggerName, data => observer.next(data));\n                return {\n                    unsubscribe: () => this.unsubscribe(subId),\n                };\n            },\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vcHVic3ViLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWlFO0FBQzFEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0VBQXlCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL3B1YnN1Yi5qcz8xNmFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9ic2VydmFibGVUb0FzeW5jSXRlcmFibGUgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5leHBvcnQgY2xhc3MgUHViU3ViIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5zdWJJZExpc3RlbmVyTWFwID0gbmV3IE1hcCgpO1xuICAgICAgICB0aGlzLmxpc3RlbmVyRXZlbnRNYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMuZXZlbnROYW1lTGlzdGVuZXJzTWFwID0gbmV3IE1hcCgpO1xuICAgIH1cbiAgICBnZXRFdmVudE5hbWVzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ldmVudE5hbWVMaXN0ZW5lcnNNYXAua2V5cygpO1xuICAgIH1cbiAgICBwdWJsaXNoKHRyaWdnZXJOYW1lLCBkZXRhaWwpIHtcbiAgICAgICAgY29uc3QgZXZlbnROYW1lTGlzdGVuZXJzID0gdGhpcy5ldmVudE5hbWVMaXN0ZW5lcnNNYXAuZ2V0KHRyaWdnZXJOYW1lKTtcbiAgICAgICAgaWYgKGV2ZW50TmFtZUxpc3RlbmVycykge1xuICAgICAgICAgICAgUHJvbWlzZS5hbGxTZXR0bGVkKFsuLi5ldmVudE5hbWVMaXN0ZW5lcnNdLm1hcChsaXN0ZW5lciA9PiBsaXN0ZW5lcihkZXRhaWwpKSkuY2F0Y2goZSA9PiBjb25zb2xlLmVycm9yKGUpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBzdWJzY3JpYmUodHJpZ2dlck5hbWUsIG9uTWVzc2FnZSkge1xuICAgICAgICBsZXQgZXZlbnROYW1lTGlzdGVuZXJzID0gdGhpcy5ldmVudE5hbWVMaXN0ZW5lcnNNYXAuZ2V0KHRyaWdnZXJOYW1lKTtcbiAgICAgICAgaWYgKCFldmVudE5hbWVMaXN0ZW5lcnMpIHtcbiAgICAgICAgICAgIGV2ZW50TmFtZUxpc3RlbmVycyA9IG5ldyBTZXQoKTtcbiAgICAgICAgICAgIHRoaXMuZXZlbnROYW1lTGlzdGVuZXJzTWFwLnNldCh0cmlnZ2VyTmFtZSwgZXZlbnROYW1lTGlzdGVuZXJzKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBzdWJJZCA9IERhdGUubm93KCk7XG4gICAgICAgIGV2ZW50TmFtZUxpc3RlbmVycy5hZGQob25NZXNzYWdlKTtcbiAgICAgICAgdGhpcy5zdWJJZExpc3RlbmVyTWFwLnNldChzdWJJZCwgb25NZXNzYWdlKTtcbiAgICAgICAgdGhpcy5saXN0ZW5lckV2ZW50TWFwLnNldChvbk1lc3NhZ2UsIHRyaWdnZXJOYW1lKTtcbiAgICAgICAgcmV0dXJuIHN1YklkO1xuICAgIH1cbiAgICB1bnN1YnNjcmliZShzdWJJZCkge1xuICAgICAgICBjb25zdCBsaXN0ZW5lciA9IHRoaXMuc3ViSWRMaXN0ZW5lck1hcC5nZXQoc3ViSWQpO1xuICAgICAgICBpZiAobGlzdGVuZXIpIHtcbiAgICAgICAgICAgIHRoaXMuc3ViSWRMaXN0ZW5lck1hcC5kZWxldGUoc3ViSWQpO1xuICAgICAgICAgICAgY29uc3QgZXZlbnROYW1lID0gdGhpcy5saXN0ZW5lckV2ZW50TWFwLmdldChsaXN0ZW5lcik7XG4gICAgICAgICAgICBpZiAoZXZlbnROYW1lKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXZlbnROYW1lTGlzdGVuZXJzID0gdGhpcy5ldmVudE5hbWVMaXN0ZW5lcnNNYXAuZ2V0KGV2ZW50TmFtZSk7XG4gICAgICAgICAgICAgICAgaWYgKGV2ZW50TmFtZUxpc3RlbmVycykge1xuICAgICAgICAgICAgICAgICAgICBldmVudE5hbWVMaXN0ZW5lcnMuZGVsZXRlKGxpc3RlbmVyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5saXN0ZW5lckV2ZW50TWFwLmRlbGV0ZShsaXN0ZW5lcik7XG4gICAgfVxuICAgIGFzeW5jSXRlcmF0b3IodHJpZ2dlck5hbWUpIHtcbiAgICAgICAgcmV0dXJuIG9ic2VydmFibGVUb0FzeW5jSXRlcmFibGUoe1xuICAgICAgICAgICAgc3Vic2NyaWJlOiBvYnNlcnZlciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3ViSWQgPSB0aGlzLnN1YnNjcmliZSh0cmlnZ2VyTmFtZSwgZGF0YSA9PiBvYnNlcnZlci5uZXh0KGRhdGEpKTtcbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICB1bnN1YnNjcmliZTogKCkgPT4gdGhpcy51bnN1YnNjcmliZShzdWJJZCksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/pubsub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/wrapFetchWithHooks.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/wrapFetchWithHooks.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loggerForExecutionRequest: () => (/* binding */ loggerForExecutionRequest),\n/* harmony export */   requestIdByRequest: () => (/* binding */ requestIdByRequest),\n/* harmony export */   wrapFetchWithHooks: () => (/* binding */ wrapFetchWithHooks)\n/* harmony export */ });\n/* harmony import */ var _iterateAsync_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iterateAsync.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/iterateAsync.js\");\n/* harmony import */ var _logger_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./logger.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/logger.js\");\n/* harmony import */ var _map_maybe_promise_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./map-maybe-promise.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/map-maybe-promise.js\");\n\n\n\nconst requestIdByRequest = new WeakMap();\nconst loggerForExecutionRequest = new WeakMap();\nfunction wrapFetchWithHooks(onFetchHooks) {\n    return function wrappedFetchFn(url, options, context, info) {\n        let fetchFn;\n        const onFetchDoneHooks = [];\n        return (0,_map_maybe_promise_js__WEBPACK_IMPORTED_MODULE_0__.mapMaybePromise)((0,_iterateAsync_js__WEBPACK_IMPORTED_MODULE_1__.iterateAsync)(onFetchHooks, onFetch => onFetch({\n            fetchFn,\n            setFetchFn(newFetchFn) {\n                fetchFn = newFetchFn;\n            },\n            url,\n            setURL(newUrl) {\n                url = String(newUrl);\n            },\n            options,\n            setOptions(newOptions) {\n                options = newOptions;\n            },\n            context,\n            info,\n            get executionRequest() {\n                return info?.executionRequest;\n            },\n            get requestId() {\n                if (context?.request) {\n                    return requestIdByRequest.get(context.request);\n                }\n            },\n            get logger() {\n                let logger;\n                if (info?.executionRequest) {\n                    logger = loggerForExecutionRequest.get(info.executionRequest);\n                }\n                if (!logger) {\n                    logger = new _logger_js__WEBPACK_IMPORTED_MODULE_2__.DefaultLogger('fetch');\n                }\n                if (context?.request) {\n                    const requestId = requestIdByRequest.get(context.request);\n                    if (requestId) {\n                        logger = logger.child(requestId);\n                    }\n                }\n                if (info?.executionRequest) {\n                    loggerForExecutionRequest.set(info.executionRequest, logger);\n                }\n                return logger;\n            },\n        }), onFetchDoneHooks), function handleIterationResult() {\n            const res$ = fetchFn(url, options, context, info);\n            if (onFetchDoneHooks.length === 0) {\n                return res$;\n            }\n            return (0,_map_maybe_promise_js__WEBPACK_IMPORTED_MODULE_0__.mapMaybePromise)(res$, function (response) {\n                return (0,_map_maybe_promise_js__WEBPACK_IMPORTED_MODULE_0__.mapMaybePromise)((0,_iterateAsync_js__WEBPACK_IMPORTED_MODULE_1__.iterateAsync)(onFetchDoneHooks, onFetchDone => onFetchDone({\n                    response,\n                    setResponse(newResponse) {\n                        response = newResponse;\n                    },\n                })), function handleOnFetchDone() {\n                    return response;\n                });\n            });\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vd3JhcEZldGNoV2l0aEhvb2tzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRDtBQUNMO0FBQ2E7QUFDbEQ7QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzRUFBZSxDQUFDLDhEQUFZO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxxREFBYTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzRUFBZTtBQUNsQyx1QkFBdUIsc0VBQWUsQ0FBQyw4REFBWTtBQUNuRDtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsaUJBQWlCO0FBQ2pCO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vd3JhcEZldGNoV2l0aEhvb2tzLmpzPzI3YTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXRlcmF0ZUFzeW5jIH0gZnJvbSAnLi9pdGVyYXRlQXN5bmMuanMnO1xuaW1wb3J0IHsgRGVmYXVsdExvZ2dlciB9IGZyb20gJy4vbG9nZ2VyLmpzJztcbmltcG9ydCB7IG1hcE1heWJlUHJvbWlzZSB9IGZyb20gJy4vbWFwLW1heWJlLXByb21pc2UuanMnO1xuZXhwb3J0IGNvbnN0IHJlcXVlc3RJZEJ5UmVxdWVzdCA9IG5ldyBXZWFrTWFwKCk7XG5leHBvcnQgY29uc3QgbG9nZ2VyRm9yRXhlY3V0aW9uUmVxdWVzdCA9IG5ldyBXZWFrTWFwKCk7XG5leHBvcnQgZnVuY3Rpb24gd3JhcEZldGNoV2l0aEhvb2tzKG9uRmV0Y2hIb29rcykge1xuICAgIHJldHVybiBmdW5jdGlvbiB3cmFwcGVkRmV0Y2hGbih1cmwsIG9wdGlvbnMsIGNvbnRleHQsIGluZm8pIHtcbiAgICAgICAgbGV0IGZldGNoRm47XG4gICAgICAgIGNvbnN0IG9uRmV0Y2hEb25lSG9va3MgPSBbXTtcbiAgICAgICAgcmV0dXJuIG1hcE1heWJlUHJvbWlzZShpdGVyYXRlQXN5bmMob25GZXRjaEhvb2tzLCBvbkZldGNoID0+IG9uRmV0Y2goe1xuICAgICAgICAgICAgZmV0Y2hGbixcbiAgICAgICAgICAgIHNldEZldGNoRm4obmV3RmV0Y2hGbikge1xuICAgICAgICAgICAgICAgIGZldGNoRm4gPSBuZXdGZXRjaEZuO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHVybCxcbiAgICAgICAgICAgIHNldFVSTChuZXdVcmwpIHtcbiAgICAgICAgICAgICAgICB1cmwgPSBTdHJpbmcobmV3VXJsKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBvcHRpb25zLFxuICAgICAgICAgICAgc2V0T3B0aW9ucyhuZXdPcHRpb25zKSB7XG4gICAgICAgICAgICAgICAgb3B0aW9ucyA9IG5ld09wdGlvbnM7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICBnZXQgZXhlY3V0aW9uUmVxdWVzdCgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5mbz8uZXhlY3V0aW9uUmVxdWVzdDtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBnZXQgcmVxdWVzdElkKCkge1xuICAgICAgICAgICAgICAgIGlmIChjb250ZXh0Py5yZXF1ZXN0KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0SWRCeVJlcXVlc3QuZ2V0KGNvbnRleHQucmVxdWVzdCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGdldCBsb2dnZXIoKSB7XG4gICAgICAgICAgICAgICAgbGV0IGxvZ2dlcjtcbiAgICAgICAgICAgICAgICBpZiAoaW5mbz8uZXhlY3V0aW9uUmVxdWVzdCkge1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIgPSBsb2dnZXJGb3JFeGVjdXRpb25SZXF1ZXN0LmdldChpbmZvLmV4ZWN1dGlvblJlcXVlc3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoIWxvZ2dlcikge1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXIgPSBuZXcgRGVmYXVsdExvZ2dlcignZmV0Y2gnKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNvbnRleHQ/LnJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVxdWVzdElkID0gcmVxdWVzdElkQnlSZXF1ZXN0LmdldChjb250ZXh0LnJlcXVlc3QpO1xuICAgICAgICAgICAgICAgICAgICBpZiAocmVxdWVzdElkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsb2dnZXIgPSBsb2dnZXIuY2hpbGQocmVxdWVzdElkKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoaW5mbz8uZXhlY3V0aW9uUmVxdWVzdCkge1xuICAgICAgICAgICAgICAgICAgICBsb2dnZXJGb3JFeGVjdXRpb25SZXF1ZXN0LnNldChpbmZvLmV4ZWN1dGlvblJlcXVlc3QsIGxvZ2dlcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBsb2dnZXI7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KSwgb25GZXRjaERvbmVIb29rcyksIGZ1bmN0aW9uIGhhbmRsZUl0ZXJhdGlvblJlc3VsdCgpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyQgPSBmZXRjaEZuKHVybCwgb3B0aW9ucywgY29udGV4dCwgaW5mbyk7XG4gICAgICAgICAgICBpZiAob25GZXRjaERvbmVIb29rcy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzJDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBtYXBNYXliZVByb21pc2UocmVzJCwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIG1hcE1heWJlUHJvbWlzZShpdGVyYXRlQXN5bmMob25GZXRjaERvbmVIb29rcywgb25GZXRjaERvbmUgPT4gb25GZXRjaERvbmUoe1xuICAgICAgICAgICAgICAgICAgICByZXNwb25zZSxcbiAgICAgICAgICAgICAgICAgICAgc2V0UmVzcG9uc2UobmV3UmVzcG9uc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gbmV3UmVzcG9uc2U7XG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgfSkpLCBmdW5jdGlvbiBoYW5kbGVPbkZldGNoRG9uZSgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-mesh/utils/esm/wrapFetchWithHooks.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batchDelegateToSchema: () => (/* binding */ batchDelegateToSchema)\n/* harmony export */ });\n/* harmony import */ var _getLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getLoader.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js\");\n\nfunction batchDelegateToSchema(options) {\n    const key = options.key;\n    if (key == null) {\n        return null;\n    }\n    else if (Array.isArray(key) && !key.length) {\n        return [];\n    }\n    const loader = (0,_getLoader_js__WEBPACK_IMPORTED_MODULE_0__.getLoader)(options);\n    return Array.isArray(key) ? loader.loadMany(key) : loader.load(key);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvYmF0Y2gtZGVsZWdhdGUvZXNtL2JhdGNoRGVsZWdhdGVUb1NjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUNwQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFTO0FBQzVCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL2VzbS9iYXRjaERlbGVnYXRlVG9TY2hlbWEuanM/YzhhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2FkZXIgfSBmcm9tICcuL2dldExvYWRlci5qcyc7XG5leHBvcnQgZnVuY3Rpb24gYmF0Y2hEZWxlZ2F0ZVRvU2NoZW1hKG9wdGlvbnMpIHtcbiAgICBjb25zdCBrZXkgPSBvcHRpb25zLmtleTtcbiAgICBpZiAoa2V5ID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoa2V5KSAmJiAha2V5Lmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGNvbnN0IGxvYWRlciA9IGdldExvYWRlcihvcHRpb25zKTtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShrZXkpID8gbG9hZGVyLmxvYWRNYW55KGtleSkgOiBsb2FkZXIubG9hZChrZXkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoader: () => (/* binding */ getLoader)\n/* harmony export */ });\n/* harmony import */ var dataloader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dataloader */ \"(ssr)/../node_modules/dataloader/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\n\n\nfunction createBatchFn(options) {\n    const argsFromKeys = options.argsFromKeys ?? ((keys) => ({ ids: keys }));\n    const fieldName = options.fieldName ?? options.info.fieldName;\n    const { valuesFromResults, lazyOptionsFn } = options;\n    return function batchFn(keys) {\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.delegateToSchema)({\n            returnType: new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLList((0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(options.returnType || options.info.returnType)),\n            onLocatedError: originalError => {\n                if (originalError.path == null) {\n                    return originalError;\n                }\n                const [pathFieldName, pathNumber] = originalError.path;\n                if (pathFieldName !== fieldName) {\n                    return originalError;\n                }\n                const pathNumberType = typeof pathNumber;\n                if (pathNumberType !== 'number') {\n                    return originalError;\n                }\n                return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.relocatedError)(originalError, originalError.path.slice(0, 0).concat(originalError.path.slice(2)));\n            },\n            args: argsFromKeys(keys),\n            ...(lazyOptionsFn == null ? options : lazyOptionsFn(options, keys)),\n        })).then(results => {\n            if (results instanceof Error) {\n                return keys.map(() => results);\n            }\n            const values = valuesFromResults == null ? results : valuesFromResults(results, keys);\n            return Array.isArray(values) ? values : keys.map(() => values);\n        });\n    };\n}\nconst getLoadersMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize2)(function getLoadersMap(_context, _schema) {\n    return new Map();\n});\nconst GLOBAL_CONTEXT = {};\nconst memoizedJsonStringify = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize1)(function jsonStringify(value) {\n    return JSON.stringify(value);\n});\nconst memoizedPrint = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize1)(graphql__WEBPACK_IMPORTED_MODULE_6__.print);\nfunction defaultCacheKeyFn(key) {\n    if (typeof key === 'object') {\n        return memoizedJsonStringify(key);\n    }\n    return key;\n}\nfunction getLoader(options) {\n    const { schema, context, info, fieldName = info.fieldName, dataLoaderOptions, fieldNodes = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_7__.getActualFieldNodes)(info.fieldNodes[0]), selectionSet = fieldNodes[0].selectionSet, returnType = info.returnType, } = options;\n    const loaders = getLoadersMap(context ?? GLOBAL_CONTEXT, schema);\n    let cacheKey = fieldName;\n    if (returnType) {\n        const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(returnType);\n        cacheKey += '@' + namedType.name;\n    }\n    if (selectionSet != null) {\n        cacheKey += memoizedPrint(selectionSet);\n    }\n    let loader = loaders.get(cacheKey);\n    if (loader === undefined) {\n        const batchFn = createBatchFn(options);\n        loader = new dataloader__WEBPACK_IMPORTED_MODULE_0__(batchFn, {\n            // Prevents the keys to be passed with the same structure\n            cacheKeyFn: defaultCacheKeyFn,\n            ...dataLoaderOptions,\n        });\n        loaders.set(cacheKey, loader);\n    }\n    return loader;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvYmF0Y2gtZGVsZWdhdGUvZXNtL2dldExvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBb0M7QUFDdUI7QUFDVDtBQUM4QjtBQUNOO0FBQzFFO0FBQ0EsK0RBQStELFdBQVc7QUFDMUU7QUFDQSxZQUFZLG1DQUFtQztBQUMvQztBQUNBLG1CQUFtQiw0REFBYyxPQUFPLHlFQUFnQjtBQUN4RCw0QkFBNEIsZ0RBQVcsQ0FBQyxxREFBWTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0VBQWM7QUFDckMsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esc0JBQXNCLDhEQUFRO0FBQzlCO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsOEJBQThCLDhEQUFRO0FBQ3RDO0FBQ0EsQ0FBQztBQUNELHNCQUFzQiw4REFBUSxDQUFDLDBDQUFLO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxtRkFBbUYsNEVBQW1CLGlHQUFpRztBQUNuTjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQVk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1Q0FBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL2VzbS9nZXRMb2FkZXIuanM/NzVjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF0YUxvYWRlciBmcm9tICdkYXRhbG9hZGVyJztcbmltcG9ydCB7IGdldE5hbWVkVHlwZSwgR3JhcGhRTExpc3QsIHByaW50IH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuaW1wb3J0IHsgZGVsZWdhdGVUb1NjaGVtYSwgZ2V0QWN0dWFsRmllbGROb2RlcyB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlJztcbmltcG9ydCB7IG1lbW9pemUxLCBtZW1vaXplMiwgcmVsb2NhdGVkRXJyb3IgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5mdW5jdGlvbiBjcmVhdGVCYXRjaEZuKG9wdGlvbnMpIHtcbiAgICBjb25zdCBhcmdzRnJvbUtleXMgPSBvcHRpb25zLmFyZ3NGcm9tS2V5cyA/PyAoKGtleXMpID0+ICh7IGlkczoga2V5cyB9KSk7XG4gICAgY29uc3QgZmllbGROYW1lID0gb3B0aW9ucy5maWVsZE5hbWUgPz8gb3B0aW9ucy5pbmZvLmZpZWxkTmFtZTtcbiAgICBjb25zdCB7IHZhbHVlc0Zyb21SZXN1bHRzLCBsYXp5T3B0aW9uc0ZuIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBmdW5jdGlvbiBiYXRjaEZuKGtleXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiBkZWxlZ2F0ZVRvU2NoZW1hKHtcbiAgICAgICAgICAgIHJldHVyblR5cGU6IG5ldyBHcmFwaFFMTGlzdChnZXROYW1lZFR5cGUob3B0aW9ucy5yZXR1cm5UeXBlIHx8IG9wdGlvbnMuaW5mby5yZXR1cm5UeXBlKSksXG4gICAgICAgICAgICBvbkxvY2F0ZWRFcnJvcjogb3JpZ2luYWxFcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG9yaWdpbmFsRXJyb3IucGF0aCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBbcGF0aEZpZWxkTmFtZSwgcGF0aE51bWJlcl0gPSBvcmlnaW5hbEVycm9yLnBhdGg7XG4gICAgICAgICAgICAgICAgaWYgKHBhdGhGaWVsZE5hbWUgIT09IGZpZWxkTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxFcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aE51bWJlclR5cGUgPSB0eXBlb2YgcGF0aE51bWJlcjtcbiAgICAgICAgICAgICAgICBpZiAocGF0aE51bWJlclR5cGUgIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVsb2NhdGVkRXJyb3Iob3JpZ2luYWxFcnJvciwgb3JpZ2luYWxFcnJvci5wYXRoLnNsaWNlKDAsIDApLmNvbmNhdChvcmlnaW5hbEVycm9yLnBhdGguc2xpY2UoMikpKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhcmdzOiBhcmdzRnJvbUtleXMoa2V5cyksXG4gICAgICAgICAgICAuLi4obGF6eU9wdGlvbnNGbiA9PSBudWxsID8gb3B0aW9ucyA6IGxhenlPcHRpb25zRm4ob3B0aW9ucywga2V5cykpLFxuICAgICAgICB9KSkudGhlbihyZXN1bHRzID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHRzIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ga2V5cy5tYXAoKCkgPT4gcmVzdWx0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSB2YWx1ZXNGcm9tUmVzdWx0cyA9PSBudWxsID8gcmVzdWx0cyA6IHZhbHVlc0Zyb21SZXN1bHRzKHJlc3VsdHMsIGtleXMpO1xuICAgICAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWVzKSA/IHZhbHVlcyA6IGtleXMubWFwKCgpID0+IHZhbHVlcyk7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5jb25zdCBnZXRMb2FkZXJzTWFwID0gbWVtb2l6ZTIoZnVuY3Rpb24gZ2V0TG9hZGVyc01hcChfY29udGV4dCwgX3NjaGVtYSkge1xuICAgIHJldHVybiBuZXcgTWFwKCk7XG59KTtcbmNvbnN0IEdMT0JBTF9DT05URVhUID0ge307XG5jb25zdCBtZW1vaXplZEpzb25TdHJpbmdpZnkgPSBtZW1vaXplMShmdW5jdGlvbiBqc29uU3RyaW5naWZ5KHZhbHVlKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbn0pO1xuY29uc3QgbWVtb2l6ZWRQcmludCA9IG1lbW9pemUxKHByaW50KTtcbmZ1bmN0aW9uIGRlZmF1bHRDYWNoZUtleUZuKGtleSkge1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbWVtb2l6ZWRKc29uU3RyaW5naWZ5KGtleSk7XG4gICAgfVxuICAgIHJldHVybiBrZXk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9hZGVyKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHNjaGVtYSwgY29udGV4dCwgaW5mbywgZmllbGROYW1lID0gaW5mby5maWVsZE5hbWUsIGRhdGFMb2FkZXJPcHRpb25zLCBmaWVsZE5vZGVzID0gZ2V0QWN0dWFsRmllbGROb2RlcyhpbmZvLmZpZWxkTm9kZXNbMF0pLCBzZWxlY3Rpb25TZXQgPSBmaWVsZE5vZGVzWzBdLnNlbGVjdGlvblNldCwgcmV0dXJuVHlwZSA9IGluZm8ucmV0dXJuVHlwZSwgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgbG9hZGVycyA9IGdldExvYWRlcnNNYXAoY29udGV4dCA/PyBHTE9CQUxfQ09OVEVYVCwgc2NoZW1hKTtcbiAgICBsZXQgY2FjaGVLZXkgPSBmaWVsZE5hbWU7XG4gICAgaWYgKHJldHVyblR5cGUpIHtcbiAgICAgICAgY29uc3QgbmFtZWRUeXBlID0gZ2V0TmFtZWRUeXBlKHJldHVyblR5cGUpO1xuICAgICAgICBjYWNoZUtleSArPSAnQCcgKyBuYW1lZFR5cGUubmFtZTtcbiAgICB9XG4gICAgaWYgKHNlbGVjdGlvblNldCAhPSBudWxsKSB7XG4gICAgICAgIGNhY2hlS2V5ICs9IG1lbW9pemVkUHJpbnQoc2VsZWN0aW9uU2V0KTtcbiAgICB9XG4gICAgbGV0IGxvYWRlciA9IGxvYWRlcnMuZ2V0KGNhY2hlS2V5KTtcbiAgICBpZiAobG9hZGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc3QgYmF0Y2hGbiA9IGNyZWF0ZUJhdGNoRm4ob3B0aW9ucyk7XG4gICAgICAgIGxvYWRlciA9IG5ldyBEYXRhTG9hZGVyKGJhdGNoRm4sIHtcbiAgICAgICAgICAgIC8vIFByZXZlbnRzIHRoZSBrZXlzIHRvIGJlIHBhc3NlZCB3aXRoIHRoZSBzYW1lIHN0cnVjdHVyZVxuICAgICAgICAgICAgY2FjaGVLZXlGbjogZGVmYXVsdENhY2hlS2V5Rm4sXG4gICAgICAgICAgICAuLi5kYXRhTG9hZGVyT3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgICAgIGxvYWRlcnMuc2V0KGNhY2hlS2V5LCBsb2FkZXIpO1xuICAgIH1cbiAgICByZXR1cm4gbG9hZGVyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/Interfaces.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/Interfaces.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperKind: () => (/* binding */ MapperKind)\n/* harmony export */ });\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind || (MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0ludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vSW50ZXJmYWNlcy5qcz8wOTUwIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgTWFwcGVyS2luZDtcbihmdW5jdGlvbiAoTWFwcGVyS2luZCkge1xuICAgIE1hcHBlcktpbmRbXCJUWVBFXCJdID0gXCJNYXBwZXJLaW5kLlRZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiU0NBTEFSX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuU0NBTEFSX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiRU5VTV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkVOVU1fVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJDT01QT1NJVEVfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5DT01QT1NJVEVfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJPQkpFQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5PQkpFQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlBVVF9PQkpFQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJBQlNUUkFDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkFCU1RSQUNUX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiVU5JT05fVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5VTklPTl9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIklOVEVSRkFDRV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLklOVEVSRkFDRV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIlJPT1RfT0JKRUNUXCJdID0gXCJNYXBwZXJLaW5kLlJPT1RfT0JKRUNUXCI7XG4gICAgTWFwcGVyS2luZFtcIlFVRVJZXCJdID0gXCJNYXBwZXJLaW5kLlFVRVJZXCI7XG4gICAgTWFwcGVyS2luZFtcIk1VVEFUSU9OXCJdID0gXCJNYXBwZXJLaW5kLk1VVEFUSU9OXCI7XG4gICAgTWFwcGVyS2luZFtcIlNVQlNDUklQVElPTlwiXSA9IFwiTWFwcGVyS2luZC5TVUJTQ1JJUFRJT05cIjtcbiAgICBNYXBwZXJLaW5kW1wiRElSRUNUSVZFXCJdID0gXCJNYXBwZXJLaW5kLkRJUkVDVElWRVwiO1xuICAgIE1hcHBlcktpbmRbXCJGSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJDT01QT1NJVEVfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuQ09NUE9TSVRFX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIk9CSkVDVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5PQkpFQ1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIlFVRVJZX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuUVVFUllfUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJNVVRBVElPTl9ST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLk1VVEFUSU9OX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiU1VCU0NSSVBUSU9OX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuU1VCU0NSSVBUSU9OX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5URVJGQUNFX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLklOVEVSRkFDRV9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlBVVF9PQkpFQ1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuSU5QVVRfT0JKRUNUX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIkFSR1VNRU5UXCJdID0gXCJNYXBwZXJLaW5kLkFSR1VNRU5UXCI7XG4gICAgTWFwcGVyS2luZFtcIkVOVU1fVkFMVUVcIl0gPSBcIk1hcHBlcktpbmQuRU5VTV9WQUxVRVwiO1xufSkoTWFwcGVyS2luZCB8fCAoTWFwcGVyS2luZCA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/Interfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromType.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromType.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromType: () => (/* binding */ astFromType)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n\nfunction astFromType(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21UeXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBd0M7QUFDa0I7QUFDbkQ7QUFDUCxRQUFRLHNEQUFhO0FBQ3JCO0FBQ0EsK0JBQStCLHlDQUFJO0FBQ25DLGlEQUFpRCxzREFBTyxPQUFPO0FBQy9EO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtREFBVTtBQUN2QjtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMseUNBQUk7QUFDbEI7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21UeXBlLmpzPzRhZjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdCB9IGZyb20gJ2Nyb3NzLWluc3BlY3QnO1xuaW1wb3J0IHsgaXNMaXN0VHlwZSwgaXNOb25OdWxsVHlwZSwgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGFzdEZyb21UeXBlKHR5cGUpIHtcbiAgICBpZiAoaXNOb25OdWxsVHlwZSh0eXBlKSkge1xuICAgICAgICBjb25zdCBpbm5lclR5cGUgPSBhc3RGcm9tVHlwZSh0eXBlLm9mVHlwZSk7XG4gICAgICAgIGlmIChpbm5lclR5cGUua2luZCA9PT0gS2luZC5OT05fTlVMTF9UWVBFKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgdHlwZSBub2RlICR7aW5zcGVjdCh0eXBlKX0uIElubmVyIHR5cGUgb2Ygbm9uLW51bGwgdHlwZSBjYW5ub3QgYmUgYSBub24tbnVsbCB0eXBlLmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLk5PTl9OVUxMX1RZUEUsXG4gICAgICAgICAgICB0eXBlOiBpbm5lclR5cGUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzTGlzdFR5cGUodHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuTElTVF9UWVBFLFxuICAgICAgICAgICAgdHlwZTogYXN0RnJvbVR5cGUodHlwZS5vZlR5cGUpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBraW5kOiBLaW5kLk5BTUVEX1RZUEUsXG4gICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRSxcbiAgICAgICAgICAgIHZhbHVlOiB0eXBlLm5hbWUsXG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValue.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValue.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValue: () => (/* binding */ astFromValue)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const astValue = astFromValue(value, type.ofType);\n        if (astValue?.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL) {\n            return null;\n        }\n        return astValue;\n    }\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        const itemType = type.ofType;\n        if ((0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isIterableObject)(value)) {\n            const valuesNodes = [];\n            for (const item of value) {\n                const itemNode = astFromValue(item, itemType);\n                if (itemNode != null) {\n                    valuesNodes.push(itemNode);\n                }\n            }\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST, values: valuesNodes };\n        }\n        return astFromValue(value, itemType);\n    }\n    // Populate the fields of the input object by creating ASTs from each value\n    // in the JavaScript object according to the fields in the input type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n        if (!(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isObjectLike)(value)) {\n            return null;\n        }\n        const fieldNodes = [];\n        for (const field of Object.values(type.getFields())) {\n            const fieldValue = astFromValue(value[field.name], field.type);\n            if (fieldValue) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME, value: field.name },\n                    value: fieldValue,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT, fields: fieldNodes };\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n        // Since value is an internally represented value, it must be serialized\n        // to an externally represented value before converting into an AST.\n        const serialized = type.serialize(value);\n        if (serialized == null) {\n            return null;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM, value: serialized };\n        }\n        // ID types can use Int literals.\n        if (type.name === 'ID' &&\n            typeof serialized === 'string' &&\n            integerStringRegExp.test(serialized)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INT, value: serialized };\n        }\n        return (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__.astFromValueUntyped)(serialized);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n    console.assert(false, 'Unexpected input type: ' + (0,cross_inspect__WEBPACK_IMPORTED_MODULE_4__.inspect)(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21WYWx1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBd0M7QUFDOEQ7QUFDdkM7QUFDRDtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsUUFBUSxzREFBYTtBQUNyQjtBQUNBLCtCQUErQix5Q0FBSTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsbURBQVU7QUFDbEI7QUFDQSxZQUFZLDZEQUFnQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUFNLHlDQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDBEQUFpQjtBQUN6QixhQUFhLHlEQUFZO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlDQUFJO0FBQzlCLDRCQUE0QixNQUFNLHlDQUFJLDBCQUEwQjtBQUNoRTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQSxRQUFRLG1EQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbURBQVU7QUFDdEIscUJBQXFCLE1BQU0seUNBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixNQUFNLHlDQUFJO0FBQy9CO0FBQ0EsZUFBZSw0RUFBbUI7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELHNEQUFPO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVZhbHVlLmpzPzJkMzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdCB9IGZyb20gJ2Nyb3NzLWluc3BlY3QnO1xuaW1wb3J0IHsgaXNFbnVtVHlwZSwgaXNJbnB1dE9iamVjdFR5cGUsIGlzTGVhZlR5cGUsIGlzTGlzdFR5cGUsIGlzTm9uTnVsbFR5cGUsIEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBhc3RGcm9tVmFsdWVVbnR5cGVkIH0gZnJvbSAnLi9hc3RGcm9tVmFsdWVVbnR5cGVkLmpzJztcbmltcG9ydCB7IGlzSXRlcmFibGVPYmplY3QsIGlzT2JqZWN0TGlrZSB9IGZyb20gJy4vanN1dGlscy5qcyc7XG4vKipcbiAqIFByb2R1Y2VzIGEgR3JhcGhRTCBWYWx1ZSBBU1QgZ2l2ZW4gYSBKYXZhU2NyaXB0IG9iamVjdC5cbiAqIEZ1bmN0aW9uIHdpbGwgbWF0Y2ggSmF2YVNjcmlwdC9KU09OIHZhbHVlcyB0byBHcmFwaFFMIEFTVCBzY2hlbWEgZm9ybWF0XG4gKiBieSB1c2luZyBzdWdnZXN0ZWQgR3JhcGhRTElucHV0VHlwZS4gRm9yIGV4YW1wbGU6XG4gKlxuICogICAgIGFzdEZyb21WYWx1ZShcInZhbHVlXCIsIEdyYXBoUUxTdHJpbmcpXG4gKlxuICogQSBHcmFwaFFMIHR5cGUgbXVzdCBiZSBwcm92aWRlZCwgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIGludGVycHJldCBkaWZmZXJlbnRcbiAqIEphdmFTY3JpcHQgdmFsdWVzLlxuICpcbiAqIHwgSlNPTiBWYWx1ZSAgICB8IEdyYXBoUUwgVmFsdWUgICAgICAgIHxcbiAqIHwgLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgT2JqZWN0ICAgICAgICB8IElucHV0IE9iamVjdCAgICAgICAgIHxcbiAqIHwgQXJyYXkgICAgICAgICB8IExpc3QgICAgICAgICAgICAgICAgIHxcbiAqIHwgQm9vbGVhbiAgICAgICB8IEJvb2xlYW4gICAgICAgICAgICAgIHxcbiAqIHwgU3RyaW5nICAgICAgICB8IFN0cmluZyAvIEVudW0gVmFsdWUgIHxcbiAqIHwgTnVtYmVyICAgICAgICB8IEludCAvIEZsb2F0ICAgICAgICAgIHxcbiAqIHwgQmlnSW50ICAgICAgICB8IEludCAgICAgICAgICAgICAgICAgIHxcbiAqIHwgVW5rbm93biAgICAgICB8IEVudW0gVmFsdWUgICAgICAgICAgIHxcbiAqIHwgbnVsbCAgICAgICAgICB8IE51bGxWYWx1ZSAgICAgICAgICAgIHxcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3RGcm9tVmFsdWUodmFsdWUsIHR5cGUpIHtcbiAgICBpZiAoaXNOb25OdWxsVHlwZSh0eXBlKSkge1xuICAgICAgICBjb25zdCBhc3RWYWx1ZSA9IGFzdEZyb21WYWx1ZSh2YWx1ZSwgdHlwZS5vZlR5cGUpO1xuICAgICAgICBpZiAoYXN0VmFsdWU/LmtpbmQgPT09IEtpbmQuTlVMTCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzdFZhbHVlO1xuICAgIH1cbiAgICAvLyBvbmx5IGV4cGxpY2l0IG51bGwsIG5vdCB1bmRlZmluZWQsIE5hTlxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLk5VTEwgfTtcbiAgICB9XG4gICAgLy8gdW5kZWZpbmVkXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIENvbnZlcnQgSmF2YVNjcmlwdCBhcnJheSB0byBHcmFwaFFMIGxpc3QuIElmIHRoZSBHcmFwaFFMVHlwZSBpcyBhIGxpc3QsIGJ1dFxuICAgIC8vIHRoZSB2YWx1ZSBpcyBub3QgYW4gYXJyYXksIGNvbnZlcnQgdGhlIHZhbHVlIHVzaW5nIHRoZSBsaXN0J3MgaXRlbSB0eXBlLlxuICAgIGlmIChpc0xpc3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGl0ZW1UeXBlID0gdHlwZS5vZlR5cGU7XG4gICAgICAgIGlmIChpc0l0ZXJhYmxlT2JqZWN0KHZhbHVlKSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWVzTm9kZXMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGl0ZW1Ob2RlID0gYXN0RnJvbVZhbHVlKGl0ZW0sIGl0ZW1UeXBlKTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbU5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZXNOb2Rlcy5wdXNoKGl0ZW1Ob2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkxJU1QsIHZhbHVlczogdmFsdWVzTm9kZXMgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXN0RnJvbVZhbHVlKHZhbHVlLCBpdGVtVHlwZSk7XG4gICAgfVxuICAgIC8vIFBvcHVsYXRlIHRoZSBmaWVsZHMgb2YgdGhlIGlucHV0IG9iamVjdCBieSBjcmVhdGluZyBBU1RzIGZyb20gZWFjaCB2YWx1ZVxuICAgIC8vIGluIHRoZSBKYXZhU2NyaXB0IG9iamVjdCBhY2NvcmRpbmcgdG8gdGhlIGZpZWxkcyBpbiB0aGUgaW5wdXQgdHlwZS5cbiAgICBpZiAoaXNJbnB1dE9iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgaWYgKCFpc09iamVjdExpa2UodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmaWVsZE5vZGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgZmllbGQgb2YgT2JqZWN0LnZhbHVlcyh0eXBlLmdldEZpZWxkcygpKSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZSA9IGFzdEZyb21WYWx1ZSh2YWx1ZVtmaWVsZC5uYW1lXSwgZmllbGQudHlwZSk7XG4gICAgICAgICAgICBpZiAoZmllbGRWYWx1ZSkge1xuICAgICAgICAgICAgICAgIGZpZWxkTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuT0JKRUNUX0ZJRUxELFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB7IGtpbmQ6IEtpbmQuTkFNRSwgdmFsdWU6IGZpZWxkLm5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZpZWxkVmFsdWUsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5PQkpFQ1QsIGZpZWxkczogZmllbGROb2RlcyB9O1xuICAgIH1cbiAgICBpZiAoaXNMZWFmVHlwZSh0eXBlKSkge1xuICAgICAgICAvLyBTaW5jZSB2YWx1ZSBpcyBhbiBpbnRlcm5hbGx5IHJlcHJlc2VudGVkIHZhbHVlLCBpdCBtdXN0IGJlIHNlcmlhbGl6ZWRcbiAgICAgICAgLy8gdG8gYW4gZXh0ZXJuYWxseSByZXByZXNlbnRlZCB2YWx1ZSBiZWZvcmUgY29udmVydGluZyBpbnRvIGFuIEFTVC5cbiAgICAgICAgY29uc3Qgc2VyaWFsaXplZCA9IHR5cGUuc2VyaWFsaXplKHZhbHVlKTtcbiAgICAgICAgaWYgKHNlcmlhbGl6ZWQgPT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzRW51bVR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuRU5VTSwgdmFsdWU6IHNlcmlhbGl6ZWQgfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBJRCB0eXBlcyBjYW4gdXNlIEludCBsaXRlcmFscy5cbiAgICAgICAgaWYgKHR5cGUubmFtZSA9PT0gJ0lEJyAmJlxuICAgICAgICAgICAgdHlwZW9mIHNlcmlhbGl6ZWQgPT09ICdzdHJpbmcnICYmXG4gICAgICAgICAgICBpbnRlZ2VyU3RyaW5nUmVnRXhwLnRlc3Qoc2VyaWFsaXplZCkpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuSU5ULCB2YWx1ZTogc2VyaWFsaXplZCB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhc3RGcm9tVmFsdWVVbnR5cGVkKHNlcmlhbGl6ZWQpO1xuICAgIH1cbiAgICAvKiBjOCBpZ25vcmUgbmV4dCAzICovXG4gICAgLy8gTm90IHJlYWNoYWJsZSwgYWxsIHBvc3NpYmxlIHR5cGVzIGhhdmUgYmVlbiBjb25zaWRlcmVkLlxuICAgIGNvbnNvbGUuYXNzZXJ0KGZhbHNlLCAnVW5leHBlY3RlZCBpbnB1dCB0eXBlOiAnICsgaW5zcGVjdCh0eXBlKSk7XG59XG4vKipcbiAqIEludFZhbHVlOlxuICogICAtIE5lZ2F0aXZlU2lnbj8gMFxuICogICAtIE5lZ2F0aXZlU2lnbj8gTm9uWmVyb0RpZ2l0ICggRGlnaXQrICk/XG4gKi9cbmNvbnN0IGludGVnZXJTdHJpbmdSZWdFeHAgPSAvXi0/KD86MHxbMS05XVswLTldKikkLztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValueUntyped: () => (/* binding */ astFromValueUntyped)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        if (value?.toJSON) {\n            return astFromValueUntyped(value.toJSON());\n        }\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN, value };\n    }\n    if (typeof value === 'bigint') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: String(value) };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: stringNum }\n            : { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21WYWx1ZVVudHlwZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLHlDQUFJO0FBQzlCLDRCQUE0QixNQUFNLHlDQUFJLHlCQUF5QjtBQUMvRDtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsTUFBTSx5Q0FBSTtBQUMxQixnQkFBZ0IsTUFBTSx5Q0FBSTtBQUMxQjtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQSx3REFBd0QsTUFBTTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21WYWx1ZVVudHlwZWQuanM/Mjk0OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG4vKipcbiAqIFByb2R1Y2VzIGEgR3JhcGhRTCBWYWx1ZSBBU1QgZ2l2ZW4gYSBKYXZhU2NyaXB0IG9iamVjdC5cbiAqIEZ1bmN0aW9uIHdpbGwgbWF0Y2ggSmF2YVNjcmlwdC9KU09OIHZhbHVlcyB0byBHcmFwaFFMIEFTVCBzY2hlbWEgZm9ybWF0XG4gKiBieSB1c2luZyB0aGUgZm9sbG93aW5nIG1hcHBpbmcuXG4gKlxuICogfCBKU09OIFZhbHVlICAgIHwgR3JhcGhRTCBWYWx1ZSAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBPYmplY3QgICAgICAgIHwgSW5wdXQgT2JqZWN0ICAgICAgICAgfFxuICogfCBBcnJheSAgICAgICAgIHwgTGlzdCAgICAgICAgICAgICAgICAgfFxuICogfCBCb29sZWFuICAgICAgIHwgQm9vbGVhbiAgICAgICAgICAgICAgfFxuICogfCBTdHJpbmcgICAgICAgIHwgU3RyaW5nICAgICAgICAgICAgICAgfFxuICogfCBOdW1iZXIgICAgICAgIHwgSW50IC8gRmxvYXQgICAgICAgICAgfFxuICogfCBCaWdJbnQgICAgICAgIHwgSW50ICAgICAgICAgICAgICAgICAgfFxuICogfCBudWxsICAgICAgICAgIHwgTnVsbFZhbHVlICAgICAgICAgICAgfFxuICpcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzdEZyb21WYWx1ZVVudHlwZWQodmFsdWUpIHtcbiAgICAvLyBvbmx5IGV4cGxpY2l0IG51bGwsIG5vdCB1bmRlZmluZWQsIE5hTlxuICAgIGlmICh2YWx1ZSA9PT0gbnVsbCkge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLk5VTEwgfTtcbiAgICB9XG4gICAgLy8gdW5kZWZpbmVkXG4gICAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIC8vIENvbnZlcnQgSmF2YVNjcmlwdCBhcnJheSB0byBHcmFwaFFMIGxpc3QuIElmIHRoZSBHcmFwaFFMVHlwZSBpcyBhIGxpc3QsIGJ1dFxuICAgIC8vIHRoZSB2YWx1ZSBpcyBub3QgYW4gYXJyYXksIGNvbnZlcnQgdGhlIHZhbHVlIHVzaW5nIHRoZSBsaXN0J3MgaXRlbSB0eXBlLlxuICAgIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkge1xuICAgICAgICBjb25zdCB2YWx1ZXNOb2RlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1Ob2RlID0gYXN0RnJvbVZhbHVlVW50eXBlZChpdGVtKTtcbiAgICAgICAgICAgIGlmIChpdGVtTm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzTm9kZXMucHVzaChpdGVtTm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5MSVNULCB2YWx1ZXM6IHZhbHVlc05vZGVzIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGlmICh2YWx1ZT8udG9KU09OKSB7XG4gICAgICAgICAgICByZXR1cm4gYXN0RnJvbVZhbHVlVW50eXBlZCh2YWx1ZS50b0pTT04oKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmllbGROb2RlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZSA9IHZhbHVlW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICBjb25zdCBhc3QgPSBhc3RGcm9tVmFsdWVVbnR5cGVkKGZpZWxkVmFsdWUpO1xuICAgICAgICAgICAgaWYgKGFzdCkge1xuICAgICAgICAgICAgICAgIGZpZWxkTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuT0JKRUNUX0ZJRUxELFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB7IGtpbmQ6IEtpbmQuTkFNRSwgdmFsdWU6IGZpZWxkTmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYXN0LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuT0JKRUNULCBmaWVsZHM6IGZpZWxkTm9kZXMgfTtcbiAgICB9XG4gICAgLy8gT3RoZXJzIHNlcmlhbGl6ZSBiYXNlZCBvbiB0aGVpciBjb3JyZXNwb25kaW5nIEphdmFTY3JpcHQgc2NhbGFyIHR5cGVzLlxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJykge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkJPT0xFQU4sIHZhbHVlIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdiaWdpbnQnKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuSU5ULCB2YWx1ZTogU3RyaW5nKHZhbHVlKSB9O1xuICAgIH1cbiAgICAvLyBKYXZhU2NyaXB0IG51bWJlcnMgY2FuIGJlIEludCBvciBGbG9hdCB2YWx1ZXMuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ251bWJlcicgJiYgaXNGaW5pdGUodmFsdWUpKSB7XG4gICAgICAgIGNvbnN0IHN0cmluZ051bSA9IFN0cmluZyh2YWx1ZSk7XG4gICAgICAgIHJldHVybiBpbnRlZ2VyU3RyaW5nUmVnRXhwLnRlc3Qoc3RyaW5nTnVtKVxuICAgICAgICAgICAgPyB7IGtpbmQ6IEtpbmQuSU5ULCB2YWx1ZTogc3RyaW5nTnVtIH1cbiAgICAgICAgICAgIDogeyBraW5kOiBLaW5kLkZMT0FULCB2YWx1ZTogc3RyaW5nTnVtIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuU1RSSU5HLCB2YWx1ZSB9O1xuICAgIH1cbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBDYW5ub3QgY29udmVydCB2YWx1ZSB0byBBU1Q6ICR7dmFsdWV9LmApO1xufVxuLyoqXG4gKiBJbnRWYWx1ZTpcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IDBcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IE5vblplcm9EaWdpdCAoIERpZ2l0KyApP1xuICovXG5jb25zdCBpbnRlZ2VyU3RyaW5nUmVnRXhwID0gL14tPyg/OjB8WzEtOV1bMC05XSopJC87XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/build-operation-for-field.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/build-operation-for-field.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildOperationNodeForField: () => (/* binding */ buildOperationNodeForField)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n\n\nlet operationVariables = [];\nlet fieldTypeMap = new Map();\nfunction addOperationVariable(variable) {\n    operationVariables.push(variable);\n}\nfunction resetOperationVariables() {\n    operationVariables = [];\n}\nfunction resetFieldMap() {\n    fieldTypeMap = new Map();\n}\nfunction buildOperationNodeForField({ schema, kind, field, models, ignore = [], depthLimit, circularReferenceDepth, argNames, selectedFields = true, }) {\n    resetOperationVariables();\n    resetFieldMap();\n    const rootTypeNames = (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_0__.getRootTypeNames)(schema);\n    const operationNode = buildOperationAndCollectVariables({\n        schema,\n        fieldName: field,\n        kind,\n        models: models || [],\n        ignore,\n        depthLimit: depthLimit || Infinity,\n        circularReferenceDepth: circularReferenceDepth || 1,\n        argNames,\n        selectedFields,\n        rootTypeNames,\n    });\n    // attach variables\n    operationNode.variableDefinitions = [...operationVariables];\n    resetOperationVariables();\n    resetFieldMap();\n    return operationNode;\n}\nfunction buildOperationAndCollectVariables({ schema, fieldName, kind, models, ignore, depthLimit, circularReferenceDepth, argNames, selectedFields, rootTypeNames, }) {\n    const type = (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_0__.getDefinedRootType)(schema, kind);\n    const field = type.getFields()[fieldName];\n    const operationName = `${fieldName}_${kind}`;\n    if (field.args) {\n        for (const arg of field.args) {\n            const argName = arg.name;\n            if (!argNames || argNames.includes(argName)) {\n                addOperationVariable(resolveVariable(arg, argName));\n            }\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION,\n        operation: kind,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: operationName,\n        },\n        variableDefinitions: [],\n        selectionSet: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n            selections: [\n                resolveField({\n                    type,\n                    field,\n                    models,\n                    firstCall: true,\n                    path: [],\n                    ancestors: [],\n                    ignore,\n                    depthLimit,\n                    circularReferenceDepth,\n                    schema,\n                    depth: 0,\n                    argNames,\n                    selectedFields,\n                    rootTypeNames,\n                }),\n            ],\n        },\n    };\n}\nfunction resolveSelectionSet({ parent, type, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    if (typeof selectedFields === 'boolean' && depth > depthLimit) {\n        return;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n        const types = type.getTypes();\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => fragmentNode?.selectionSet?.selections?.length > 0),\n        };\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n        const types = Object.values(schema.getTypeMap()).filter((t) => (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(t) && t.getInterfaces().includes(type));\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n            selections: types\n                .filter(t => !hasCircularRef([...ancestors, t], {\n                depth: circularReferenceDepth,\n            }))\n                .map(t => {\n                return {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT,\n                    typeCondition: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                            value: t.name,\n                        },\n                    },\n                    selectionSet: resolveSelectionSet({\n                        parent: type,\n                        type: t,\n                        models,\n                        path,\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields,\n                        rootTypeNames,\n                    }),\n                };\n            })\n                .filter(fragmentNode => fragmentNode?.selectionSet?.selections?.length > 0),\n        };\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) && !rootTypeNames.has(type.name)) {\n        const isIgnored = ignore.includes(type.name) || ignore.includes(`${parent.name}.${path[path.length - 1]}`);\n        const isModel = models.includes(type.name);\n        if (!firstCall && isModel && !isIgnored) {\n            return {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n                selections: [\n                    {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                            value: 'id',\n                        },\n                    },\n                ],\n            };\n        }\n        const fields = type.getFields();\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n            selections: Object.keys(fields)\n                .filter(fieldName => {\n                return !hasCircularRef([...ancestors, (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getNamedType)(fields[fieldName].type)], {\n                    depth: circularReferenceDepth,\n                });\n            })\n                .map(fieldName => {\n                const selectedSubFields = typeof selectedFields === 'object' ? selectedFields[fieldName] : true;\n                if (selectedSubFields) {\n                    return resolveField({\n                        type,\n                        field: fields[fieldName],\n                        models,\n                        path: [...path, fieldName],\n                        ancestors,\n                        ignore,\n                        depthLimit,\n                        circularReferenceDepth,\n                        schema,\n                        depth,\n                        argNames,\n                        selectedFields: selectedSubFields,\n                        rootTypeNames,\n                    });\n                }\n                return null;\n            })\n                .filter((f) => {\n                if (f == null) {\n                    return false;\n                }\n                else if ('selectionSet' in f) {\n                    return !!f.selectionSet?.selections?.length;\n                }\n                return true;\n            }),\n        };\n    }\n}\nfunction resolveVariable(arg, name) {\n    function resolveVariableType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isListType)(type)) {\n            return {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE,\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(type)) {\n            return {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE,\n                // for v16 compatibility\n                type: resolveVariableType(type.ofType),\n            };\n        }\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                value: type.name,\n            },\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                value: name || arg.name,\n            },\n        },\n        type: resolveVariableType(arg.type),\n    };\n}\nfunction getArgumentName(name, path) {\n    return [...path, name].join('_');\n}\nfunction resolveField({ type, field, models, firstCall, path, ancestors, ignore, depthLimit, circularReferenceDepth, schema, depth, argNames, selectedFields, rootTypeNames, }) {\n    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getNamedType)(field.type);\n    let args = [];\n    let removeField = false;\n    if (field.args && field.args.length) {\n        args = field.args\n            .map(arg => {\n            const argumentName = getArgumentName(arg.name, path);\n            if (argNames && !argNames.includes(argumentName)) {\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(arg.type)) {\n                    removeField = true;\n                }\n                return null;\n            }\n            if (!firstCall) {\n                addOperationVariable(resolveVariable(arg, argumentName));\n            }\n            return {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ARGUMENT,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                    value: arg.name,\n                },\n                value: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                        value: getArgumentName(arg.name, path),\n                    },\n                },\n            };\n        })\n            .filter(Boolean);\n    }\n    if (removeField) {\n        return null;\n    }\n    const fieldPath = [...path, field.name];\n    const fieldPathStr = fieldPath.join('.');\n    let fieldName = field.name;\n    if (fieldTypeMap.has(fieldPathStr) && fieldTypeMap.get(fieldPathStr) !== field.type.toString()) {\n        fieldName += field.type\n            .toString()\n            .replace('!', 'NonNull')\n            .replace('[', 'List')\n            .replace(']', '');\n    }\n    fieldTypeMap.set(fieldPathStr, field.type.toString());\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isScalarType)(namedType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(namedType)) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                value: field.name,\n            },\n            ...(fieldName !== field.name && { alias: { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME, value: fieldName } }),\n            selectionSet: resolveSelectionSet({\n                parent: type,\n                type: namedType,\n                models,\n                firstCall,\n                path: fieldPath,\n                ancestors: [...ancestors, type],\n                ignore,\n                depthLimit,\n                circularReferenceDepth,\n                schema,\n                depth: depth + 1,\n                argNames,\n                selectedFields,\n                rootTypeNames,\n            }) || undefined,\n            arguments: args,\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: field.name,\n        },\n        ...(fieldName !== field.name && { alias: { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME, value: fieldName } }),\n        arguments: args,\n    };\n}\nfunction hasCircularRef(types, config = {\n    depth: 1,\n}) {\n    const type = types[types.length - 1];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isScalarType)(type)) {\n        return false;\n    }\n    const size = types.filter(t => t.name === type.name).length;\n    return size > config.depth;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/build-operation-for-field.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDescriptionNode: () => (/* binding */ getDescriptionNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction getDescriptionNode(obj) {\n    if (obj.astNode?.description) {\n        return {\n            ...obj.astNode.description,\n            block: true,\n        };\n    }\n    if (obj.description) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING,\n            value: obj.description,\n            block: true,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Rlc2NyaXB0aW9uRnJvbU9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUN4QjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Rlc2NyaXB0aW9uRnJvbU9iamVjdC5qcz8zZmRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREZXNjcmlwdGlvbk5vZGUob2JqKSB7XG4gICAgaWYgKG9iai5hc3ROb2RlPy5kZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ub2JqLmFzdE5vZGUuZGVzY3JpcHRpb24sXG4gICAgICAgICAgICBibG9jazogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKG9iai5kZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogS2luZC5TVFJJTkcsXG4gICAgICAgICAgICB2YWx1ZTogb2JqLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgYmxvY2s6IHRydWUsXG4gICAgICAgIH07XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/errors.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGdEQUFXO0FBQ25CLG1CQUFtQixpREFBWTtBQUMvQjtBQUNBLGVBQWUsaURBQVk7QUFDM0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXJyb3JzLmpzPzQ0NzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTEVycm9yLCB2ZXJzaW9uSW5mbyB9IGZyb20gJ2dyYXBocWwnO1xuY29uc3QgcG9zc2libGVHcmFwaFFMRXJyb3JQcm9wZXJ0aWVzID0gW1xuICAgICdtZXNzYWdlJyxcbiAgICAnbG9jYXRpb25zJyxcbiAgICAncGF0aCcsXG4gICAgJ25vZGVzJyxcbiAgICAnc291cmNlJyxcbiAgICAncG9zaXRpb25zJyxcbiAgICAnb3JpZ2luYWxFcnJvcicsXG4gICAgJ25hbWUnLFxuICAgICdzdGFjaycsXG4gICAgJ2V4dGVuc2lvbnMnLFxuXTtcbmZ1bmN0aW9uIGlzR3JhcGhRTEVycm9yTGlrZShlcnJvcikge1xuICAgIHJldHVybiAoZXJyb3IgIT0gbnVsbCAmJlxuICAgICAgICB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmXG4gICAgICAgIE9iamVjdC5rZXlzKGVycm9yKS5ldmVyeShrZXkgPT4gcG9zc2libGVHcmFwaFFMRXJyb3JQcm9wZXJ0aWVzLmluY2x1ZGVzKGtleSkpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zPy5vcmlnaW5hbEVycm9yICYmXG4gICAgICAgICEob3B0aW9ucy5vcmlnaW5hbEVycm9yIGluc3RhbmNlb2YgRXJyb3IpICYmXG4gICAgICAgIGlzR3JhcGhRTEVycm9yTGlrZShvcHRpb25zLm9yaWdpbmFsRXJyb3IpKSB7XG4gICAgICAgIG9wdGlvbnMub3JpZ2luYWxFcnJvciA9IGNyZWF0ZUdyYXBoUUxFcnJvcihvcHRpb25zLm9yaWdpbmFsRXJyb3IubWVzc2FnZSwgb3B0aW9ucy5vcmlnaW5hbEVycm9yKTtcbiAgICB9XG4gICAgaWYgKHZlcnNpb25JbmZvLm1ham9yID49IDE3KSB7XG4gICAgICAgIHJldHVybiBuZXcgR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zPy5ub2Rlcywgb3B0aW9ucz8uc291cmNlLCBvcHRpb25zPy5wb3NpdGlvbnMsIG9wdGlvbnM/LnBhdGgsIG9wdGlvbnM/Lm9yaWdpbmFsRXJyb3IsIG9wdGlvbnM/LmV4dGVuc2lvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9jYXRlZEVycm9yKG9yaWdpbmFsRXJyb3IsIHBhdGgpIHtcbiAgICByZXR1cm4gY3JlYXRlR3JhcGhRTEVycm9yKG9yaWdpbmFsRXJyb3IubWVzc2FnZSwge1xuICAgICAgICBub2Rlczogb3JpZ2luYWxFcnJvci5ub2RlcyxcbiAgICAgICAgc291cmNlOiBvcmlnaW5hbEVycm9yLnNvdXJjZSxcbiAgICAgICAgcG9zaXRpb25zOiBvcmlnaW5hbEVycm9yLnBvc2l0aW9ucyxcbiAgICAgICAgcGF0aDogcGF0aCA9PSBudWxsID8gb3JpZ2luYWxFcnJvci5wYXRoIDogcGF0aCxcbiAgICAgICAgb3JpZ2luYWxFcnJvcixcbiAgICAgICAgZXh0ZW5zaW9uczogb3JpZ2luYWxFcnJvci5leHRlbnNpb25zLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/get-directives.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/get-directives.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirective: () => (/* binding */ getDirective),\n/* harmony export */   getDirectiveInExtensions: () => (/* binding */ getDirectiveInExtensions),\n/* harmony export */   getDirectives: () => (/* binding */ getDirectives),\n/* harmony export */   getDirectivesInExtensions: () => (/* binding */ getDirectivesInExtensions)\n/* harmony export */ });\n/* harmony import */ var _getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDirectiveExtensions.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\");\n\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldC1kaXJlY3RpdmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXFFO0FBQzlEO0FBQ1AsZ0NBQWdDLGtGQUFzQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyxrRkFBc0I7QUFDdEQ7QUFDQTtBQUNPO0FBQ1AsZ0NBQWdDLGtGQUFzQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyxrRkFBc0I7QUFDdEQ7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldC1kaXJlY3RpdmVzLmpzPzExMDUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyB9IGZyb20gJy4vZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlc0luRXh0ZW5zaW9ucyhub2RlLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gWydkaXJlY3RpdmVzJ10pIHtcbiAgICBjb25zdCBkaXJlY3RpdmVFeHRlbnNpb25zID0gZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyhub2RlLCB1bmRlZmluZWQsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpO1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhkaXJlY3RpdmVFeHRlbnNpb25zKVxuICAgICAgICAubWFwKChbZGlyZWN0aXZlTmFtZSwgZGlyZWN0aXZlQXJnc0Fycl0pID0+IGRpcmVjdGl2ZUFyZ3NBcnI/Lm1hcChkaXJlY3RpdmVBcmdzID0+ICh7XG4gICAgICAgIG5hbWU6IGRpcmVjdGl2ZU5hbWUsXG4gICAgICAgIGFyZ3M6IGRpcmVjdGl2ZUFyZ3MsXG4gICAgfSkpKVxuICAgICAgICAuZmxhdChJbmZpbml0eSlcbiAgICAgICAgLmZpbHRlcihCb29sZWFuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVJbkV4dGVuc2lvbnMobm9kZSwgZGlyZWN0aXZlTmFtZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMobm9kZSwgdW5kZWZpbmVkLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKTtcbiAgICByZXR1cm4gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVzKHNjaGVtYSwgbm9kZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMobm9kZSwgc2NoZW1hLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKTtcbiAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMoZGlyZWN0aXZlRXh0ZW5zaW9ucylcbiAgICAgICAgLm1hcCgoW2RpcmVjdGl2ZU5hbWUsIGRpcmVjdGl2ZUFyZ3NBcnJdKSA9PiBkaXJlY3RpdmVBcmdzQXJyPy5tYXAoZGlyZWN0aXZlQXJncyA9PiAoe1xuICAgICAgICBuYW1lOiBkaXJlY3RpdmVOYW1lLFxuICAgICAgICBhcmdzOiBkaXJlY3RpdmVBcmdzLFxuICAgIH0pKSlcbiAgICAgICAgLmZsYXQoSW5maW5pdHkpXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbik7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlKHNjaGVtYSwgbm9kZSwgZGlyZWN0aXZlTmFtZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMobm9kZSwgc2NoZW1hLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKTtcbiAgICByZXR1cm4gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/get-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getArgumentValues.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getArgumentValues.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArgumentValues: () => (/* binding */ getArgumentValues)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    const coercedValues = {};\n    const argumentNodes = node.arguments ?? [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL;\n        if (valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(variableValues, variableName)) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0,graphql__WEBPACK_IMPORTED_MODULE_6__.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldEFyZ3VtZW50VmFsdWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXdDO0FBQzRCO0FBQ25CO0FBQ0g7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlEQUF5RDtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxLQUFLO0FBQ1YsaUJBQWlCLG9DQUFvQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFhO0FBQ2xDLHNCQUFzQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQixzREFBTyxVQUFVO0FBQ2xHO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHlDQUFJO0FBQzVDLCtCQUErQix5Q0FBSTtBQUNuQztBQUNBLDJDQUEyQywyREFBYztBQUN6RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0RBQWE7QUFDdEMsMEJBQTBCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLHNEQUFPLFVBQVU7QUFDdEcsdURBQXVELGFBQWE7QUFDcEU7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzREFBYTtBQUNuQyxrQkFBa0IsOERBQWtCLGNBQWMsS0FBSyxzQkFBc0Isc0RBQU8sVUFBVTtBQUM5RjtBQUNBLGFBQWE7QUFDYjtBQUNBLDZCQUE2QixxREFBWTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQiw4Q0FBSyxZQUFZO0FBQzlGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRBcmd1bWVudFZhbHVlcy5qcz85MGNlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3BlY3QgfSBmcm9tICdjcm9zcy1pbnNwZWN0JztcbmltcG9ydCB7IGlzTm9uTnVsbFR5cGUsIEtpbmQsIHByaW50LCB2YWx1ZUZyb21BU1QsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBjcmVhdGVHcmFwaFFMRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBoYXNPd25Qcm9wZXJ0eSB9IGZyb20gJy4vanN1dGlscy5qcyc7XG4vKipcbiAqIFByZXBhcmVzIGFuIG9iamVjdCBtYXAgb2YgYXJndW1lbnQgdmFsdWVzIGdpdmVuIGEgbGlzdCBvZiBhcmd1bWVudFxuICogZGVmaW5pdGlvbnMgYW5kIGxpc3Qgb2YgYXJndW1lbnQgQVNUIG5vZGVzLlxuICpcbiAqIE5vdGU6IFRoZSByZXR1cm5lZCB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdCB3aXRoIGEgcHJvdG90eXBlLCBzaW5jZSBpdCBpc1xuICogZXhwb3NlZCB0byB1c2VyIGNvZGUuIENhcmUgc2hvdWxkIGJlIHRha2VuIHRvIG5vdCBwdWxsIHZhbHVlcyBmcm9tIHRoZVxuICogT2JqZWN0IHByb3RvdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFyZ3VtZW50VmFsdWVzKGRlZiwgbm9kZSwgdmFyaWFibGVWYWx1ZXMgPSB7fSkge1xuICAgIGNvbnN0IGNvZXJjZWRWYWx1ZXMgPSB7fTtcbiAgICBjb25zdCBhcmd1bWVudE5vZGVzID0gbm9kZS5hcmd1bWVudHMgPz8gW107XG4gICAgY29uc3QgYXJnTm9kZU1hcCA9IGFyZ3VtZW50Tm9kZXMucmVkdWNlKChwcmV2LCBhcmcpID0+ICh7XG4gICAgICAgIC4uLnByZXYsXG4gICAgICAgIFthcmcubmFtZS52YWx1ZV06IGFyZyxcbiAgICB9KSwge30pO1xuICAgIGZvciAoY29uc3QgeyBuYW1lLCB0eXBlOiBhcmdUeXBlLCBkZWZhdWx0VmFsdWUgfSBvZiBkZWYuYXJncykge1xuICAgICAgICBjb25zdCBhcmd1bWVudE5vZGUgPSBhcmdOb2RlTWFwW25hbWVdO1xuICAgICAgICBpZiAoIWFyZ3VtZW50Tm9kZSkge1xuICAgICAgICAgICAgaWYgKGRlZmF1bHRWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgY29lcmNlZFZhbHVlc1tuYW1lXSA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUoYXJnVHlwZSkpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIG9mIHJlcXVpcmVkIHR5cGUgXCIke2luc3BlY3QoYXJnVHlwZSl9XCIgYCArICd3YXMgbm90IHByb3ZpZGVkLicsIHtcbiAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFtub2RlXSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlTm9kZSA9IGFyZ3VtZW50Tm9kZS52YWx1ZTtcbiAgICAgICAgbGV0IGlzTnVsbCA9IHZhbHVlTm9kZS5raW5kID09PSBLaW5kLk5VTEw7XG4gICAgICAgIGlmICh2YWx1ZU5vZGUua2luZCA9PT0gS2luZC5WQVJJQUJMRSkge1xuICAgICAgICAgICAgY29uc3QgdmFyaWFibGVOYW1lID0gdmFsdWVOb2RlLm5hbWUudmFsdWU7XG4gICAgICAgICAgICBpZiAodmFyaWFibGVWYWx1ZXMgPT0gbnVsbCB8fCAhaGFzT3duUHJvcGVydHkodmFyaWFibGVWYWx1ZXMsIHZhcmlhYmxlTmFtZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29lcmNlZFZhbHVlc1tuYW1lXSA9IGRlZmF1bHRWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoaXNOb25OdWxsVHlwZShhcmdUeXBlKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIG9mIHJlcXVpcmVkIHR5cGUgXCIke2luc3BlY3QoYXJnVHlwZSl9XCIgYCArXG4gICAgICAgICAgICAgICAgICAgICAgICBgd2FzIHByb3ZpZGVkIHRoZSB2YXJpYWJsZSBcIiQke3ZhcmlhYmxlTmFtZX1cIiB3aGljaCB3YXMgbm90IHByb3ZpZGVkIGEgcnVudGltZSB2YWx1ZS5gLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBub2RlczogW3ZhbHVlTm9kZV0sXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlzTnVsbCA9IHZhcmlhYmxlVmFsdWVzW3ZhcmlhYmxlTmFtZV0gPT0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNOdWxsICYmIGlzTm9uTnVsbFR5cGUoYXJnVHlwZSkpIHtcbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgb2Ygbm9uLW51bGwgdHlwZSBcIiR7aW5zcGVjdChhcmdUeXBlKX1cIiBgICsgJ211c3Qgbm90IGJlIG51bGwuJywge1xuICAgICAgICAgICAgICAgIG5vZGVzOiBbdmFsdWVOb2RlXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvZXJjZWRWYWx1ZSA9IHZhbHVlRnJvbUFTVCh2YWx1ZU5vZGUsIGFyZ1R5cGUsIHZhcmlhYmxlVmFsdWVzKTtcbiAgICAgICAgaWYgKGNvZXJjZWRWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAvLyBOb3RlOiBWYWx1ZXNPZkNvcnJlY3RUeXBlUnVsZSB2YWxpZGF0aW9uIHNob3VsZCBjYXRjaCB0aGlzIGJlZm9yZVxuICAgICAgICAgICAgLy8gZXhlY3V0aW9uLiBUaGlzIGlzIGEgcnVudGltZSBjaGVjayB0byBlbnN1cmUgZXhlY3V0aW9uIGRvZXMgbm90XG4gICAgICAgICAgICAvLyBjb250aW51ZSB3aXRoIGFuIGludmFsaWQgYXJndW1lbnQgdmFsdWUuXG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIGhhcyBpbnZhbGlkIHZhbHVlICR7cHJpbnQodmFsdWVOb2RlKX0uYCwge1xuICAgICAgICAgICAgICAgIG5vZGVzOiBbdmFsdWVOb2RlXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIGNvZXJjZWRWYWx1ZXNbbmFtZV0gPSBjb2VyY2VkVmFsdWU7XG4gICAgfVxuICAgIHJldHVybiBjb2VyY2VkVmFsdWVzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirectiveExtensions: () => (/* binding */ getDirectiveExtensions)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var _getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getArgumentValues.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\nfunction getDirectiveExtensions(directableObj, schema, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = {};\n    if (directableObj.extensions) {\n        let directivesInExtensions = directableObj.extensions;\n        for (const pathSegment of pathToDirectivesInExtensions) {\n            directivesInExtensions = directivesInExtensions?.[pathSegment];\n        }\n        if (directivesInExtensions != null) {\n            for (const directiveNameProp in directivesInExtensions) {\n                const directiveObjs = directivesInExtensions[directiveNameProp];\n                const directiveName = directiveNameProp;\n                if (Array.isArray(directiveObjs)) {\n                    for (const directiveObj of directiveObjs) {\n                        let existingDirectiveExtensions = directiveExtensions[directiveName];\n                        if (!existingDirectiveExtensions) {\n                            existingDirectiveExtensions = [];\n                            directiveExtensions[directiveName] = existingDirectiveExtensions;\n                        }\n                        existingDirectiveExtensions.push(directiveObj);\n                    }\n                }\n                else {\n                    let existingDirectiveExtensions = directiveExtensions[directiveName];\n                    if (!existingDirectiveExtensions) {\n                        existingDirectiveExtensions = [];\n                        directiveExtensions[directiveName] = existingDirectiveExtensions;\n                    }\n                    existingDirectiveExtensions.push(directiveObjs);\n                }\n            }\n        }\n    }\n    const memoizedStringify = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_0__.memoize1)(obj => JSON.stringify(obj));\n    const astNodes = [];\n    if (directableObj.astNode) {\n        astNodes.push(directableObj.astNode);\n    }\n    if (directableObj.extensionASTNodes) {\n        astNodes.push(...directableObj.extensionASTNodes);\n    }\n    for (const astNode of astNodes) {\n        if (astNode.directives?.length) {\n            for (const directive of astNode.directives) {\n                const directiveName = directive.name.value;\n                let existingDirectiveExtensions = directiveExtensions[directiveName];\n                if (!existingDirectiveExtensions) {\n                    existingDirectiveExtensions = [];\n                    directiveExtensions[directiveName] = existingDirectiveExtensions;\n                }\n                const directiveInSchema = schema?.getDirective(directiveName);\n                let value = {};\n                if (directiveInSchema) {\n                    value = (0,_getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__.getArgumentValues)(directiveInSchema, directive);\n                }\n                if (directive.arguments) {\n                    for (const argNode of directive.arguments) {\n                        const argName = argNode.name.value;\n                        if (value[argName] == null) {\n                            const argInDirective = directiveInSchema?.args.find(arg => arg.name === argName);\n                            if (argInDirective) {\n                                value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.valueFromAST)(argNode.value, argInDirective.type);\n                            }\n                        }\n                        if (value[argName] == null) {\n                            value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.valueFromASTUntyped)(argNode.value);\n                        }\n                    }\n                }\n                if (astNodes.length > 0 && existingDirectiveExtensions.length > 0) {\n                    const valStr = memoizedStringify(value);\n                    if (existingDirectiveExtensions.some(val => memoizedStringify(val) === valStr)) {\n                        continue;\n                    }\n                }\n                existingDirectiveExtensions.push(value);\n            }\n        }\n    }\n    return directiveExtensions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldERpcmVjdGl2ZUV4dGVuc2lvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNEQ7QUFDRDtBQUNuQjtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHFEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHdFQUFpQjtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxxREFBWTtBQUM3RDtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsNERBQW1CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldERpcmVjdGl2ZUV4dGVuc2lvbnMuanM/ODNjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB2YWx1ZUZyb21BU1QsIHZhbHVlRnJvbUFTVFVudHlwZWQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGdldEFyZ3VtZW50VmFsdWVzIH0gZnJvbSAnLi9nZXRBcmd1bWVudFZhbHVlcy5qcyc7XG5pbXBvcnQgeyBtZW1vaXplMSB9IGZyb20gJy4vbWVtb2l6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyhkaXJlY3RhYmxlT2JqLCBzY2hlbWEsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBbJ2RpcmVjdGl2ZXMnXSkge1xuICAgIGNvbnN0IGRpcmVjdGl2ZUV4dGVuc2lvbnMgPSB7fTtcbiAgICBpZiAoZGlyZWN0YWJsZU9iai5leHRlbnNpb25zKSB7XG4gICAgICAgIGxldCBkaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gZGlyZWN0YWJsZU9iai5leHRlbnNpb25zO1xuICAgICAgICBmb3IgKGNvbnN0IHBhdGhTZWdtZW50IG9mIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpIHtcbiAgICAgICAgICAgIGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBkaXJlY3RpdmVzSW5FeHRlbnNpb25zPy5bcGF0aFNlZ21lbnRdO1xuICAgICAgICB9XG4gICAgICAgIGlmIChkaXJlY3RpdmVzSW5FeHRlbnNpb25zICE9IG51bGwpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZGlyZWN0aXZlTmFtZVByb3AgaW4gZGlyZWN0aXZlc0luRXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRpcmVjdGl2ZU9ianMgPSBkaXJlY3RpdmVzSW5FeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVQcm9wXTtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVOYW1lID0gZGlyZWN0aXZlTmFtZVByb3A7XG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoZGlyZWN0aXZlT2JqcykpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlY3RpdmVPYmogb2YgZGlyZWN0aXZlT2Jqcykge1xuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV0gPSBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnM7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMucHVzaChkaXJlY3RpdmVPYmopO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zID0gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXSA9IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMucHVzaChkaXJlY3RpdmVPYmpzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgbWVtb2l6ZWRTdHJpbmdpZnkgPSBtZW1vaXplMShvYmogPT4gSlNPTi5zdHJpbmdpZnkob2JqKSk7XG4gICAgY29uc3QgYXN0Tm9kZXMgPSBbXTtcbiAgICBpZiAoZGlyZWN0YWJsZU9iai5hc3ROb2RlKSB7XG4gICAgICAgIGFzdE5vZGVzLnB1c2goZGlyZWN0YWJsZU9iai5hc3ROb2RlKTtcbiAgICB9XG4gICAgaWYgKGRpcmVjdGFibGVPYmouZXh0ZW5zaW9uQVNUTm9kZXMpIHtcbiAgICAgICAgYXN0Tm9kZXMucHVzaCguLi5kaXJlY3RhYmxlT2JqLmV4dGVuc2lvbkFTVE5vZGVzKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBhc3ROb2RlIG9mIGFzdE5vZGVzKSB7XG4gICAgICAgIGlmIChhc3ROb2RlLmRpcmVjdGl2ZXM/Lmxlbmd0aCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlY3RpdmUgb2YgYXN0Tm9kZS5kaXJlY3RpdmVzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlyZWN0aXZlTmFtZSA9IGRpcmVjdGl2ZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgICAgIGxldCBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMgPSBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdO1xuICAgICAgICAgICAgICAgIGlmICghZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdID0gZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVJblNjaGVtYSA9IHNjaGVtYT8uZ2V0RGlyZWN0aXZlKGRpcmVjdGl2ZU5hbWUpO1xuICAgICAgICAgICAgICAgIGxldCB2YWx1ZSA9IHt9O1xuICAgICAgICAgICAgICAgIGlmIChkaXJlY3RpdmVJblNjaGVtYSkge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZSA9IGdldEFyZ3VtZW50VmFsdWVzKGRpcmVjdGl2ZUluU2NoZW1hLCBkaXJlY3RpdmUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZGlyZWN0aXZlLmFyZ3VtZW50cykge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZ05vZGUgb2YgZGlyZWN0aXZlLmFyZ3VtZW50cykge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJnTmFtZSA9IGFyZ05vZGUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZVthcmdOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgYXJnSW5EaXJlY3RpdmUgPSBkaXJlY3RpdmVJblNjaGVtYT8uYXJncy5maW5kKGFyZyA9PiBhcmcubmFtZSA9PT0gYXJnTmFtZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ0luRGlyZWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW2FyZ05hbWVdID0gdmFsdWVGcm9tQVNUKGFyZ05vZGUudmFsdWUsIGFyZ0luRGlyZWN0aXZlLnR5cGUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZVthcmdOYW1lXSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVbYXJnTmFtZV0gPSB2YWx1ZUZyb21BU1RVbnR5cGVkKGFyZ05vZGUudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChhc3ROb2Rlcy5sZW5ndGggPiAwICYmIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbFN0ciA9IG1lbW9pemVkU3RyaW5naWZ5KHZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucy5zb21lKHZhbCA9PiBtZW1vaXplZFN0cmluZ2lmeSh2YWwpID09PSB2YWxTdHIpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMucHVzaCh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRpcmVjdGl2ZUV4dGVuc2lvbnM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getObjectTypeFromTypeMap: () => (/* binding */ getObjectTypeFromTypeMap)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9iamVjdFR5cGVGcm9tVHlwZU1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUNoQztBQUNQO0FBQ0E7QUFDQSxZQUFZLHFEQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwLmpzP2E4MjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPYmplY3RUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwKHR5cGVNYXAsIHR5cGUpIHtcbiAgICBpZiAodHlwZSkge1xuICAgICAgICBjb25zdCBtYXliZU9iamVjdFR5cGUgPSB0eXBlTWFwW3R5cGUubmFtZV07XG4gICAgICAgIGlmIChpc09iamVjdFR5cGUobWF5YmVPYmplY3RUeXBlKSkge1xuICAgICAgICAgICAgcmV0dXJuIG1heWJlT2JqZWN0VHlwZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationASTFromDocument: () => (/* binding */ getOperationASTFromDocument),\n/* harmony export */   getOperationASTFromRequest: () => (/* binding */ getOperationASTFromRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nconst getOperationASTFromRequest = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDRjtBQUNqQztBQUNQLGdCQUFnQix3REFBZTtBQUMvQjtBQUNBLGtEQUFrRCxvQkFBb0I7QUFDdEU7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLHFEQUFRO0FBQ2xEO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0LmpzPzk5NzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0T3BlcmF0aW9uQVNUIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZW1vaXplMSB9IGZyb20gJy4vbWVtb2l6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0T3BlcmF0aW9uQVNURnJvbURvY3VtZW50KGRvY3VtZW50Tm9kZSwgb3BlcmF0aW9uTmFtZSkge1xuICAgIGNvbnN0IGRvYyA9IGdldE9wZXJhdGlvbkFTVChkb2N1bWVudE5vZGUsIG9wZXJhdGlvbk5hbWUpO1xuICAgIGlmICghZG9jKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGluZmVyIG9wZXJhdGlvbiAke29wZXJhdGlvbk5hbWUgfHwgJyd9YCk7XG4gICAgfVxuICAgIHJldHVybiBkb2M7XG59XG5leHBvcnQgY29uc3QgZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdChyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIGdldE9wZXJhdGlvbkFTVEZyb21Eb2N1bWVudChyZXF1ZXN0LmRvY3VtZW50LCByZXF1ZXN0Lm9wZXJhdGlvbk5hbWUpO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ3pCO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOENBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanM/NWIwMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGNvbnN0IGFzQXJyYXkgPSAoZm5zKSA9PiAoQXJyYXkuaXNBcnJheShmbnMpID8gZm5zIDogZm5zID8gW2Zuc10gOiBbXSk7XG5jb25zdCBpbnZhbGlkRG9jUmVnZXggPSAvXFwuW2EtejAtOV0rJC9pO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9jdW1lbnRTdHJpbmcoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gWFhYOiBpcy12YWxpZC1wYXRoIG9yIGlzLWdsb2IgdHJlYXQgU0RMIGFzIGEgdmFsaWQgcGF0aFxuICAgIC8vIChgc2NhbGFyIERhdGVgIGZvciBleGFtcGxlKVxuICAgIC8vIHRoaXMgd2h5IGNoZWNraW5nIHRoZSBleHRlbnNpb24gaXMgZmFzdCBlbm91Z2hcbiAgICAvLyBhbmQgcHJldmVudCBmcm9tIHBhcnNpbmcgdGhlIHN0cmluZyBpbiBvcmRlciB0byBmaW5kIG91dFxuICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgYSBTRExcbiAgICBpZiAoaW52YWxpZERvY1JlZ2V4LnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHBhcnNlKHN0cik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkgeyB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuY29uc3QgaW52YWxpZFBhdGhSZWdleCA9IC9b4oCY4oCcISVePD5gXFxuXS87XG4vKipcbiAqIENoZWNrZXMgd2hldGhlciB0aGUgYHN0cmAgY29udGFpbnMgYW55IHBhdGggaWxsZWdhbCBjaGFyYWN0ZXJzLlxuICpcbiAqIEEgc3RyaW5nIG1heSBzb21ldGltZXMgbG9vayBsaWtlIGEgcGF0aCBidXQgaXMgbm90IChsaWtlIGFuIFNETCBvZiBhIHNpbXBsZVxuICogR3JhcGhRTCBzY2hlbWEpLiBUbyBtYWtlIHN1cmUgd2UgZG9uJ3QgeWllbGQgZmFsc2UtcG9zaXRpdmVzIGluIHN1Y2ggY2FzZXMsXG4gKiB3ZSBkaXNhbGxvdyBuZXcgbGluZXMgaW4gcGF0aHMgKGV2ZW4gdGhvdWdoIG1vc3QgVW5peCBzeXN0ZW1zIHN1cHBvcnQgbmV3XG4gKiBsaW5lcyBpbiBmaWxlIG5hbWVzKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRQYXRoKHN0cikge1xuICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJiAhaW52YWxpZFBhdGhSZWdleC50ZXN0KHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVN0cmluZ3MoYSwgYikge1xuICAgIGlmIChTdHJpbmcoYSkgPCBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBpZiAoU3RyaW5nKGEpID4gU3RyaW5nKGIpKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBub2RlVG9TdHJpbmcoYSkge1xuICAgIGxldCBuYW1lO1xuICAgIGlmICgnYWxpYXMnIGluIGEpIHtcbiAgICAgICAgbmFtZSA9IGEuYWxpYXM/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsICYmICduYW1lJyBpbiBhKSB7XG4gICAgICAgIG5hbWUgPSBhLm5hbWU/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIG5hbWUgPSBhLmtpbmQ7XG4gICAgfVxuICAgIHJldHVybiBuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVOb2RlcyhhLCBiLCBjdXN0b21Gbikge1xuICAgIGNvbnN0IGFTdHIgPSBub2RlVG9TdHJpbmcoYSk7XG4gICAgY29uc3QgYlN0ciA9IG5vZGVUb1N0cmluZyhiKTtcbiAgICBpZiAodHlwZW9mIGN1c3RvbUZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21GbihhU3RyLCBiU3RyKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBhcmVTdHJpbmdzKGFTdHIsIGJTdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU29tZShpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dCAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFNvbWUoaW5wdXQsIG1lc3NhZ2UgPSAnVmFsdWUgc2hvdWxkIGJlIHNvbWV0aGluZycpIHtcbiAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nfunction isAsyncIterable(value) {\n    return value?.[Symbol.asyncIterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2lzQXN5bmNJdGVyYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaXNBc3luY0l0ZXJhYmxlLmpzPzc2ZWMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzQXN5bmNJdGVyYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8uW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSAhPSBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isDocumentNode.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isDocumentNode.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDocumentNode: () => (/* binding */ isDocumentNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2lzRG9jdW1lbnROb2RlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBQ3hCO0FBQ1AsdUZBQXVGLHlDQUFJO0FBQzNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaXNEb2N1bWVudE5vZGUuanM/YjY0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudE5vZGUob2JqZWN0KSB7XG4gICAgcmV0dXJuIG9iamVjdCAmJiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiAna2luZCcgaW4gb2JqZWN0ICYmIG9iamVjdC5raW5kID09PSBLaW5kLkRPQ1VNRU5UO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/isDocumentNode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2pzdXRpbHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9qc3V0aWxzLmpzPzZkNWYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzSXRlcmFibGVPYmplY3QodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIFN5bWJvbC5pdGVyYXRvciBpbiB2YWx1ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc09iamVjdExpa2UodmFsdWUpIHtcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAhPT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1Byb21pc2UodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWU/LnRoZW4gIT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwcm9taXNlUmVkdWNlKHZhbHVlcywgY2FsbGJhY2tGbiwgaW5pdGlhbFZhbHVlKSB7XG4gICAgbGV0IGFjY3VtdWxhdG9yID0gaW5pdGlhbFZhbHVlO1xuICAgIGZvciAoY29uc3QgdmFsdWUgb2YgdmFsdWVzKSB7XG4gICAgICAgIGFjY3VtdWxhdG9yID0gaXNQcm9taXNlKGFjY3VtdWxhdG9yKVxuICAgICAgICAgICAgPyBhY2N1bXVsYXRvci50aGVuKHJlc29sdmVkID0+IGNhbGxiYWNrRm4ocmVzb2x2ZWQsIHZhbHVlKSlcbiAgICAgICAgICAgIDogY2FsbGJhY2tGbihhY2N1bXVsYXRvciwgdmFsdWUpO1xuICAgIH1cbiAgICByZXR1cm4gYWNjdW11bGF0b3I7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFzT3duUHJvcGVydHkob2JqLCBwcm9wKSB7XG4gICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapAsyncIterator: () => (/* binding */ mapAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, onNext, onError, onEnd) {\n    if (Symbol.asyncIterator in iterator) {\n        iterator = iterator[Symbol.asyncIterator]();\n    }\n    let $return;\n    let abruptClose;\n    let onEndWithValue;\n    if (onEnd) {\n        onEndWithValue = value => {\n            const onEnd$ = onEnd();\n            return (0,_jsutils_js__WEBPACK_IMPORTED_MODULE_0__.isPromise)(onEnd$) ? onEnd$.then(() => value) : value;\n        };\n    }\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        if (result.done) {\n            return onEndWithValue ? onEndWithValue(result) : result;\n        }\n        return asyncMapValue(result.value, onNext).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (onError) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = onError;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            const res$ = $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n            return onEndWithValue ? res$.then(onEndWithValue) : res$;\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL21hcEFzeW5jSXRlcmF0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzREFBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLDhCQUE4QjtBQUNsRTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWFwQXN5bmNJdGVyYXRvci5qcz84ODMyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzUHJvbWlzZSB9IGZyb20gJy4vanN1dGlscy5qcyc7XG4vKipcbiAqIEdpdmVuIGFuIEFzeW5jSXRlcmFibGUgYW5kIGEgY2FsbGJhY2sgZnVuY3Rpb24sIHJldHVybiBhbiBBc3luY0l0ZXJhdG9yXG4gKiB3aGljaCBwcm9kdWNlcyB2YWx1ZXMgbWFwcGVkIHZpYSBjYWxsaW5nIHRoZSBjYWxsYmFjayBmdW5jdGlvbi5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hcEFzeW5jSXRlcmF0b3IoaXRlcmF0b3IsIG9uTmV4dCwgb25FcnJvciwgb25FbmQpIHtcbiAgICBpZiAoU3ltYm9sLmFzeW5jSXRlcmF0b3IgaW4gaXRlcmF0b3IpIHtcbiAgICAgICAgaXRlcmF0b3IgPSBpdGVyYXRvcltTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICB9XG4gICAgbGV0ICRyZXR1cm47XG4gICAgbGV0IGFicnVwdENsb3NlO1xuICAgIGxldCBvbkVuZFdpdGhWYWx1ZTtcbiAgICBpZiAob25FbmQpIHtcbiAgICAgICAgb25FbmRXaXRoVmFsdWUgPSB2YWx1ZSA9PiB7XG4gICAgICAgICAgICBjb25zdCBvbkVuZCQgPSBvbkVuZCgpO1xuICAgICAgICAgICAgcmV0dXJuIGlzUHJvbWlzZShvbkVuZCQpID8gb25FbmQkLnRoZW4oKCkgPT4gdmFsdWUpIDogdmFsdWU7XG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmICh0eXBlb2YgaXRlcmF0b3IucmV0dXJuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICRyZXR1cm4gPSBpdGVyYXRvci5yZXR1cm47XG4gICAgICAgIGFicnVwdENsb3NlID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXRocm93ID0gKCkgPT4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuICRyZXR1cm4uY2FsbChpdGVyYXRvcikudGhlbihyZXRocm93LCByZXRocm93KTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbWFwUmVzdWx0KHJlc3VsdCkge1xuICAgICAgICBpZiAocmVzdWx0LmRvbmUpIHtcbiAgICAgICAgICAgIHJldHVybiBvbkVuZFdpdGhWYWx1ZSA/IG9uRW5kV2l0aFZhbHVlKHJlc3VsdCkgOiByZXN1bHQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzeW5jTWFwVmFsdWUocmVzdWx0LnZhbHVlLCBvbk5leHQpLnRoZW4oaXRlcmF0b3JSZXN1bHQsIGFicnVwdENsb3NlKTtcbiAgICB9XG4gICAgbGV0IG1hcFJlamVjdDtcbiAgICBpZiAob25FcnJvcikge1xuICAgICAgICAvLyBDYXB0dXJlIHJlamVjdENhbGxiYWNrIHRvIGVuc3VyZSBpdCBjYW5ub3QgYmUgbnVsbC5cbiAgICAgICAgY29uc3QgcmVqZWN0ID0gb25FcnJvcjtcbiAgICAgICAgbWFwUmVqZWN0ID0gKGVycm9yKSA9PiBhc3luY01hcFZhbHVlKGVycm9yLCByZWplY3QpLnRoZW4oaXRlcmF0b3JSZXN1bHQsIGFicnVwdENsb3NlKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmV4dCgpIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVyYXRvci5uZXh0KCkudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdCk7XG4gICAgICAgIH0sXG4gICAgICAgIHJldHVybigpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlcyQgPSAkcmV0dXJuXG4gICAgICAgICAgICAgICAgPyAkcmV0dXJuLmNhbGwoaXRlcmF0b3IpLnRoZW4obWFwUmVzdWx0LCBtYXBSZWplY3QpXG4gICAgICAgICAgICAgICAgOiBQcm9taXNlLnJlc29sdmUoeyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH0pO1xuICAgICAgICAgICAgcmV0dXJuIG9uRW5kV2l0aFZhbHVlID8gcmVzJC50aGVuKG9uRW5kV2l0aFZhbHVlKSA6IHJlcyQ7XG4gICAgICAgIH0sXG4gICAgICAgIHRocm93KGVycm9yKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGl0ZXJhdG9yLnRocm93ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLnRocm93KGVycm9yKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcikuY2F0Y2goYWJydXB0Q2xvc2UpO1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGFzeW5jTWFwVmFsdWUodmFsdWUsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gcmVzb2x2ZShjYWxsYmFjayh2YWx1ZSkpKTtcbn1cbmZ1bmN0aW9uIGl0ZXJhdG9yUmVzdWx0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHsgdmFsdWUsIGRvbmU6IGZhbHNlIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapSchema.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapSchema.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correctASTNodes: () => (/* binding */ correctASTNodes),\n/* harmony export */   mapSchema: () => (/* binding */ mapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rewire_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rewire.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformInputValue.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n\n\n\n\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.serializeInputValue), schema, schemaMapper, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.parseInputValue), schema, schemaMapper, type => !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0,_rewire_js__WEBPACK_IMPORTED_MODULE_2__.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] =\n                        newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.TYPE];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_TYPE);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.UNION_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.FIELD];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_FIELD);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper ?? null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/mapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   observableToAsyncIterable: () => (/* binding */ observableToAsyncIterable)\n/* harmony export */ });\nfunction observableToAsyncIterable(observable) {\n    const pullQueue = [];\n    const pushQueue = [];\n    let listening = true;\n    const pushValue = (value) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value, done: false });\n        }\n        else {\n            pushQueue.push({ value, done: false });\n        }\n    };\n    const pushError = (error) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] }, done: false });\n        }\n    };\n    const pushDone = () => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ done: true });\n        }\n        else {\n            pushQueue.push({ done: true });\n        }\n    };\n    const pullValue = () => new Promise(resolve => {\n        if (pushQueue.length !== 0) {\n            const element = pushQueue.shift();\n            // either {value: {errors: [...]}} or {value: ...}\n            resolve(element);\n        }\n        else {\n            pullQueue.push(resolve);\n        }\n    });\n    const subscription = observable.subscribe({\n        next(value) {\n            pushValue(value);\n        },\n        error(err) {\n            pushError(err);\n        },\n        complete() {\n            pushDone();\n        },\n    });\n    const emptyQueue = () => {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            for (const resolve of pullQueue) {\n                resolve({ value: undefined, done: true });\n            }\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return {\n        next() {\n            // return is a defined method, so it is safe to call it.\n            return listening ? pullValue() : this.return();\n        },\n        return() {\n            emptyQueue();\n            return Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            emptyQueue();\n            return Promise.reject(error);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL29ic2VydmFibGVUb0FzeW5jSXRlcmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLG9CQUFvQjtBQUNwRDtBQUNBO0FBQ0EsNkJBQTZCLG9CQUFvQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFNBQVMsaUJBQWlCLGVBQWU7QUFDekU7QUFDQTtBQUNBLDZCQUE2QixTQUFTLGlCQUFpQixlQUFlO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsWUFBWTtBQUM1QztBQUNBO0FBQ0EsNkJBQTZCLFlBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixRQUFRLGdCQUFnQixJQUFJO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiw4QkFBOEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxxQ0FBcUMsOEJBQThCO0FBQ25FLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZS5qcz9mZWNmIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBvYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlKG9ic2VydmFibGUpIHtcbiAgICBjb25zdCBwdWxsUXVldWUgPSBbXTtcbiAgICBjb25zdCBwdXNoUXVldWUgPSBbXTtcbiAgICBsZXQgbGlzdGVuaW5nID0gdHJ1ZTtcbiAgICBjb25zdCBwdXNoVmFsdWUgPSAodmFsdWUpID0+IHtcbiAgICAgICAgaWYgKHB1bGxRdWV1ZS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIC8vIEl0IGlzIHNhZmUgdG8gdXNlIHRoZSAhIG9wZXJhdG9yIGhlcmUgYXMgd2UgY2hlY2sgdGhlIGxlbmd0aC5cbiAgICAgICAgICAgIHB1bGxRdWV1ZS5zaGlmdCgpKHsgdmFsdWUsIGRvbmU6IGZhbHNlIH0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcHVzaFF1ZXVlLnB1c2goeyB2YWx1ZSwgZG9uZTogZmFsc2UgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHB1c2hFcnJvciA9IChlcnJvcikgPT4ge1xuICAgICAgICBpZiAocHVsbFF1ZXVlLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgLy8gSXQgaXMgc2FmZSB0byB1c2UgdGhlICEgb3BlcmF0b3IgaGVyZSBhcyB3ZSBjaGVjayB0aGUgbGVuZ3RoLlxuICAgICAgICAgICAgcHVsbFF1ZXVlLnNoaWZ0KCkoeyB2YWx1ZTogeyBlcnJvcnM6IFtlcnJvcl0gfSwgZG9uZTogZmFsc2UgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwdXNoUXVldWUucHVzaCh7IHZhbHVlOiB7IGVycm9yczogW2Vycm9yXSB9LCBkb25lOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgcHVzaERvbmUgPSAoKSA9PiB7XG4gICAgICAgIGlmIChwdWxsUXVldWUubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAvLyBJdCBpcyBzYWZlIHRvIHVzZSB0aGUgISBvcGVyYXRvciBoZXJlIGFzIHdlIGNoZWNrIHRoZSBsZW5ndGguXG4gICAgICAgICAgICBwdWxsUXVldWUuc2hpZnQoKSh7IGRvbmU6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwdXNoUXVldWUucHVzaCh7IGRvbmU6IHRydWUgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIGNvbnN0IHB1bGxWYWx1ZSA9ICgpID0+IG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBpZiAocHVzaFF1ZXVlLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IHB1c2hRdWV1ZS5zaGlmdCgpO1xuICAgICAgICAgICAgLy8gZWl0aGVyIHt2YWx1ZToge2Vycm9yczogWy4uLl19fSBvciB7dmFsdWU6IC4uLn1cbiAgICAgICAgICAgIHJlc29sdmUoZWxlbWVudCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwdWxsUXVldWUucHVzaChyZXNvbHZlKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIGNvbnN0IHN1YnNjcmlwdGlvbiA9IG9ic2VydmFibGUuc3Vic2NyaWJlKHtcbiAgICAgICAgbmV4dCh2YWx1ZSkge1xuICAgICAgICAgICAgcHVzaFZhbHVlKHZhbHVlKTtcbiAgICAgICAgfSxcbiAgICAgICAgZXJyb3IoZXJyKSB7XG4gICAgICAgICAgICBwdXNoRXJyb3IoZXJyKTtcbiAgICAgICAgfSxcbiAgICAgICAgY29tcGxldGUoKSB7XG4gICAgICAgICAgICBwdXNoRG9uZSgpO1xuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGVtcHR5UXVldWUgPSAoKSA9PiB7XG4gICAgICAgIGlmIChsaXN0ZW5pbmcpIHtcbiAgICAgICAgICAgIGxpc3RlbmluZyA9IGZhbHNlO1xuICAgICAgICAgICAgc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IHJlc29sdmUgb2YgcHVsbFF1ZXVlKSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwdWxsUXVldWUubGVuZ3RoID0gMDtcbiAgICAgICAgICAgIHB1c2hRdWV1ZS5sZW5ndGggPSAwO1xuICAgICAgICB9XG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuZXh0KCkge1xuICAgICAgICAgICAgLy8gcmV0dXJuIGlzIGEgZGVmaW5lZCBtZXRob2QsIHNvIGl0IGlzIHNhZmUgdG8gY2FsbCBpdC5cbiAgICAgICAgICAgIHJldHVybiBsaXN0ZW5pbmcgPyBwdWxsVmFsdWUoKSA6IHRoaXMucmV0dXJuKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHJldHVybigpIHtcbiAgICAgICAgICAgIGVtcHR5UXVldWUoKTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoeyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH0pO1xuICAgICAgICB9LFxuICAgICAgICB0aHJvdyhlcnJvcikge1xuICAgICAgICAgICAgZW1wdHlRdWV1ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromArg: () => (/* binding */ astFromArg),\n/* harmony export */   astFromDirective: () => (/* binding */ astFromDirective),\n/* harmony export */   astFromEnumType: () => (/* binding */ astFromEnumType),\n/* harmony export */   astFromEnumValue: () => (/* binding */ astFromEnumValue),\n/* harmony export */   astFromField: () => (/* binding */ astFromField),\n/* harmony export */   astFromInputField: () => (/* binding */ astFromInputField),\n/* harmony export */   astFromInputObjectType: () => (/* binding */ astFromInputObjectType),\n/* harmony export */   astFromInterfaceType: () => (/* binding */ astFromInterfaceType),\n/* harmony export */   astFromObjectType: () => (/* binding */ astFromObjectType),\n/* harmony export */   astFromScalarType: () => (/* binding */ astFromScalarType),\n/* harmony export */   astFromSchema: () => (/* binding */ astFromSchema),\n/* harmony export */   astFromUnionType: () => (/* binding */ astFromUnionType),\n/* harmony export */   getDirectiveNodes: () => (/* binding */ getDirectiveNodes),\n/* harmony export */   getDocumentNodeFromSchema: () => (/* binding */ getDocumentNodeFromSchema),\n/* harmony export */   makeDeprecatedDirective: () => (/* binding */ makeDeprecatedDirective),\n/* harmony export */   makeDirectiveNode: () => (/* binding */ makeDirectiveNode),\n/* harmony export */   makeDirectiveNodes: () => (/* binding */ makeDirectiveNodes),\n/* harmony export */   printSchemaWithDirectives: () => (/* binding */ printSchemaWithDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _astFromType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astFromType.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromType.js\");\n/* harmony import */ var _astFromValue_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astFromValue.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValue.js\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./descriptionFromObject.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\");\n/* harmony import */ var _get_directives_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./get-directives.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/get-directives.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n\n\n\n\n\n\n\n\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type);\n        const isIntrospection = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DOCUMENT,\n        definitions,\n    };\n}\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.print)(documentNode);\n}\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_6__.getRootTypeMap)(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_DEFINITION : graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    const descriptionNode = (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(schema);\n    if (descriptionNode) {\n        schemaNode.description = descriptionNode;\n    }\n    return schemaNode;\n}\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(directive),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: directive.args?.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: directive.locations?.map(location => ({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: location,\n        })) || [],\n    };\n}\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    let directiveNodesBesidesDeprecatedAndSpecifiedBy = [];\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    let deprecatedDirectiveNode = null;\n    let specifiedByDirectiveNode = null;\n    if (directives != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy = directives.filter(directive => directive.name.value !== 'deprecated' && directive.name.value !== 'specifiedBy');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = directives.filter(directive => directive.name.value === 'deprecated')?.[0];\n        }\n        if (entity.specifiedByUrl != null || entity.specifiedByURL != null) {\n            specifiedByDirectiveNode = directives.filter(directive => directive.name.value === 'specifiedBy')?.[0];\n        }\n    }\n    if (entity.deprecationReason != null && deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    if (entity.specifiedByUrl != null ||\n        (entity.specifiedByURL != null && specifiedByDirectiveNode == null)) {\n        const specifiedByValue = entity.specifiedByUrl || entity.specifiedByURL;\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        specifiedByDirectiveNode = makeDirectiveNode('specifiedBy', specifiedByArgs);\n    }\n    if (deprecatedDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(deprecatedDirectiveNode);\n    }\n    if (specifiedByDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(specifiedByDirectiveNode);\n    }\n    return directiveNodesBesidesDeprecatedAndSpecifiedBy;\n}\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(arg),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: arg.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined\n            ? ((0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(arg.defaultValue, arg.type) ?? undefined)\n            : undefined,\n        directives: getDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    const node = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace));\n    }\n    return node;\n}\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(type)),\n    };\n}\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(type, pathToDirectivesInExtensions);\n    const directives = makeDirectiveNodes(schema, directivesInExtensions);\n    const specifiedByValue = (type['specifiedByUrl'] ||\n        type['specifiedByURL']);\n    if (specifiedByValue &&\n        !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(field.defaultValue, field.type) ?? undefined,\n    };\n}\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(value),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: value.name,\n        },\n        directives: getDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDeprecatedDirective);\n}\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    for (const argName in args) {\n        const argValue = args[argName];\n        let value;\n        if (directive != null) {\n            const arg = directive.args.find(arg => arg.name === argName);\n            if (arg) {\n                value = (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(argValue, arg.type);\n            }\n        }\n        if (value == null) {\n            value = (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__.astFromValueUntyped)(argValue);\n        }\n        if (value != null) {\n            directiveArguments.push({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ARGUMENT,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: argName,\n                },\n                value,\n            });\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const { name, args } of directiveValues) {\n        const directive = schema?.getDirective(name);\n        directiveNodes.push(makeDirectiveNode(name, args, directive));\n    }\n    return directiveNodes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rewire.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rewire.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewireTypes: () => (/* binding */ rewireTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _stub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stub.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLUnionType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(enumConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.isNamedStub)(type) ? (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rewire.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3Jvb3RUeXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUQ7QUFDVDtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQWtCLHdDQUF3QyxXQUFXO0FBQ25GO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QixxREFBUTtBQUN4QztBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixxREFBUTtBQUNwQztBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixxREFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3Jvb3RUeXBlcy5qcz9jNGJjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUdyYXBoUUxFcnJvciB9IGZyb20gJy4vZXJyb3JzLmpzJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnLi9tZW1vaXplLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZpbmVkUm9vdFR5cGUoc2NoZW1hLCBvcGVyYXRpb24sIG5vZGVzKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBnZXRSb290VHlwZU1hcChzY2hlbWEpO1xuICAgIGNvbnN0IHJvb3RUeXBlID0gcm9vdFR5cGVNYXAuZ2V0KG9wZXJhdGlvbik7XG4gICAgaWYgKHJvb3RUeXBlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBTY2hlbWEgaXMgbm90IGNvbmZpZ3VyZWQgdG8gZXhlY3V0ZSAke29wZXJhdGlvbn0gb3BlcmF0aW9uLmAsIHtcbiAgICAgICAgICAgIG5vZGVzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RUeXBlO1xufVxuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlTmFtZXMgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZU5hbWVzKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlcyA9IGdldFJvb3RUeXBlcyhzY2hlbWEpO1xuICAgIHJldHVybiBuZXcgU2V0KFsuLi5yb290VHlwZXNdLm1hcCh0eXBlID0+IHR5cGUubmFtZSkpO1xufSk7XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVzID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVzKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKTtcbiAgICByZXR1cm4gbmV3IFNldChyb290VHlwZU1hcC52YWx1ZXMoKSk7XG59KTtcbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZU1hcCA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlTWFwKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IHF1ZXJ5VHlwZSA9IHNjaGVtYS5nZXRRdWVyeVR5cGUoKTtcbiAgICBpZiAocXVlcnlUeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgncXVlcnknLCBxdWVyeVR5cGUpO1xuICAgIH1cbiAgICBjb25zdCBtdXRhdGlvblR5cGUgPSBzY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk7XG4gICAgaWYgKG11dGF0aW9uVHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ211dGF0aW9uJywgbXV0YXRpb25UeXBlKTtcbiAgICB9XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uVHlwZSA9IHNjaGVtYS5nZXRTdWJzY3JpcHRpb25UeXBlKCk7XG4gICAgaWYgKHN1YnNjcmlwdGlvblR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdzdWJzY3JpcHRpb24nLCBzdWJzY3JpcHRpb25UeXBlKTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RUeXBlTWFwO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/stub.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/stub.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamedStub: () => (/* binding */ createNamedStub),\n/* harmony export */   createStub: () => (/* binding */ createStub),\n/* harmony export */   getBuiltInForStub: () => (/* binding */ getBuiltInForStub),\n/* harmony export */   isNamedStub: () => (/* binding */ isNamedStub)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.LIST_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(createStub(node.type, type));\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NON_NULL_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID;\n        default:\n            return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3N0dWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrTTtBQUMzTDtBQUNQO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQWlCO0FBQ3ZDO0FBQ0E7QUFDQSxzQkFBc0IseURBQW9CO0FBQzFDO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQXNCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWE7QUFDbkMsYUFBYTtBQUNiLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0EsYUFBYSx5Q0FBSTtBQUNqQix1QkFBdUIsZ0RBQVc7QUFDbEMsYUFBYSx5Q0FBSTtBQUNqQix1QkFBdUIsbURBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsK0NBQVU7QUFDdkIsbUJBQW1CLCtDQUFVO0FBQzdCLGFBQWEsaURBQVk7QUFDekIsbUJBQW1CLGlEQUFZO0FBQy9CLGFBQWEsa0RBQWE7QUFDMUIsbUJBQW1CLGtEQUFhO0FBQ2hDLGFBQWEsbURBQWM7QUFDM0IsbUJBQW1CLG1EQUFjO0FBQ2pDLGFBQWEsOENBQVM7QUFDdEIsbUJBQW1CLDhDQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC9ydW50aW1lL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vc3R1Yi5qcz84NTZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxCb29sZWFuLCBHcmFwaFFMRmxvYXQsIEdyYXBoUUxJRCwgR3JhcGhRTElucHV0T2JqZWN0VHlwZSwgR3JhcGhRTEludCwgR3JhcGhRTEludGVyZmFjZVR5cGUsIEdyYXBoUUxMaXN0LCBHcmFwaFFMTm9uTnVsbCwgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxTdHJpbmcsIEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTmFtZWRTdHViKG5hbWUsIHR5cGUpIHtcbiAgICBsZXQgY29uc3RydWN0b3I7XG4gICAgaWYgKHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTE9iamVjdFR5cGU7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgPT09ICdpbnRlcmZhY2UnKSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTEludGVyZmFjZVR5cGU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdHJ1Y3RvciA9IEdyYXBoUUxJbnB1dE9iamVjdFR5cGU7XG4gICAgfVxuICAgIHJldHVybiBuZXcgY29uc3RydWN0b3Ioe1xuICAgICAgICBuYW1lLFxuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICAgIF9mYWtlOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3R1Yihub2RlLCB0eXBlKSB7XG4gICAgc3dpdGNoIChub2RlLmtpbmQpIHtcbiAgICAgICAgY2FzZSBLaW5kLkxJU1RfVFlQRTpcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTExpc3QoY3JlYXRlU3R1Yihub2RlLnR5cGUsIHR5cGUpKTtcbiAgICAgICAgY2FzZSBLaW5kLk5PTl9OVUxMX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxOb25OdWxsKGNyZWF0ZVN0dWIobm9kZS50eXBlLCB0eXBlKSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ291dHB1dCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTmFtZWRTdHViKG5vZGUubmFtZS52YWx1ZSwgJ29iamVjdCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5hbWVkU3R1Yihub2RlLm5hbWUudmFsdWUsICdpbnB1dCcpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc05hbWVkU3R1Yih0eXBlKSB7XG4gICAgaWYgKCdnZXRGaWVsZHMnIGluIHR5cGUpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVucmVhY2hhYmxlLWxvb3BcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgcmV0dXJuIGZpZWxkLm5hbWUgPT09ICdfZmFrZSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1aWx0SW5Gb3JTdHViKHR5cGUpIHtcbiAgICBzd2l0Y2ggKHR5cGUubmFtZSkge1xuICAgICAgICBjYXNlIEdyYXBoUUxJbnQubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMSW50O1xuICAgICAgICBjYXNlIEdyYXBoUUxGbG9hdC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxGbG9hdDtcbiAgICAgICAgY2FzZSBHcmFwaFFMU3RyaW5nLm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTFN0cmluZztcbiAgICAgICAgY2FzZSBHcmFwaFFMQm9vbGVhbi5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxCb29sZWFuO1xuICAgICAgICBjYXNlIEdyYXBoUUxJRC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxJRDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/stub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null\n            ? inputLeafValueTransformer(nullableType, value)\n            : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null\n            ? inputObjectValueTransformer(nullableType, newValue)\n            : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3RyYW5zZm9ybUlucHV0VmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNGO0FBQy9DO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFlO0FBQ3hDLFFBQVEsbURBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1EQUFVO0FBQ3ZCLGVBQWUsb0RBQU87QUFDdEI7QUFDQSxhQUFhLDBEQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQLDBFQUEwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3RyYW5zZm9ybUlucHV0VmFsdWUuanM/ODMwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROdWxsYWJsZVR5cGUsIGlzSW5wdXRPYmplY3RUeXBlLCBpc0xlYWZUeXBlLCBpc0xpc3RUeXBlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgYXNBcnJheSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciA9IG51bGwsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lciA9IG51bGwpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IG51bGxhYmxlVHlwZSA9IGdldE51bGxhYmxlVHlwZSh0eXBlKTtcbiAgICBpZiAoaXNMZWFmVHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGxcbiAgICAgICAgICAgID8gaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lcihudWxsYWJsZVR5cGUsIHZhbHVlKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNMaXN0VHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBhc0FycmF5KHZhbHVlKS5tYXAoKGxpc3RNZW1iZXIpID0+IHRyYW5zZm9ybUlucHV0VmFsdWUobnVsbGFibGVUeXBlLm9mVHlwZSwgbGlzdE1lbWJlciwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzSW5wdXRPYmplY3RUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gbnVsbGFibGVUeXBlLmdldEZpZWxkcygpO1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNba2V5XTtcbiAgICAgICAgICAgIGlmIChmaWVsZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWVba2V5XSA9IHRyYW5zZm9ybUlucHV0VmFsdWUoZmllbGQudHlwZSwgdmFsdWVba2V5XSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGxcbiAgICAgICAgICAgID8gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKG51bGxhYmxlVHlwZSwgbmV3VmFsdWUpXG4gICAgICAgICAgICA6IG5ld1ZhbHVlO1xuICAgIH1cbiAgICAvLyB1bnJlYWNoYWJsZSwgbm8gb3RoZXIgcG9zc2libGUgcmV0dXJuIHZhbHVlXG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHQuc2VyaWFsaXplKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnB1dFZhbHVlKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdC5wYXJzZVZhbHVlKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnB1dFZhbHVlTGl0ZXJhbCh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4gdC5wYXJzZUxpdGVyYWwodiwge30pKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/tiny-lru/dist/tiny-lru.js":
/*!************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/runtime/node_modules/tiny-lru/dist/tiny-lru.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LRU: () => (/* binding */ LRU),\n/* harmony export */   lru: () => (/* binding */ lru)\n/* harmony export */ });\n/**\n * tiny-lru\n *\n * @copyright 2024 Jason Mulligan <jason.mulligan@avoidwork.com>\n * @license BSD-3-Clause\n * @version 11.2.11\n */\nclass LRU {\r\n\tconstructor (max = 0, ttl = 0, resetTtl = false) {\r\n\t\tthis.first = null;\r\n\t\tthis.items = Object.create(null);\r\n\t\tthis.last = null;\r\n\t\tthis.max = max;\r\n\t\tthis.resetTtl = resetTtl;\r\n\t\tthis.size = 0;\r\n\t\tthis.ttl = ttl;\r\n\t}\r\n\r\n\tclear () {\r\n\t\tthis.first = null;\r\n\t\tthis.items = Object.create(null);\r\n\t\tthis.last = null;\r\n\t\tthis.size = 0;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tdelete (key) {\r\n\t\tif (this.has(key)) {\r\n\t\t\tconst item = this.items[key];\r\n\r\n\t\t\tdelete this.items[key];\r\n\t\t\tthis.size--;\r\n\r\n\t\t\tif (item.prev !== null) {\r\n\t\t\t\titem.prev.next = item.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (item.next !== null) {\r\n\t\t\t\titem.next.prev = item.prev;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.first === item) {\r\n\t\t\t\tthis.first = item.next;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.last === item) {\r\n\t\t\t\tthis.last = item.prev;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tentries (keys = this.keys()) {\r\n\t\treturn keys.map(key => [key, this.get(key)]);\r\n\t}\r\n\r\n\tevict (bypass = false) {\r\n\t\tif (bypass || this.size > 0) {\r\n\t\t\tconst item = this.first;\r\n\r\n\t\t\tdelete this.items[item.key];\r\n\r\n\t\t\tif (--this.size === 0) {\r\n\t\t\t\tthis.first = null;\r\n\t\t\t\tthis.last = null;\r\n\t\t\t} else {\r\n\t\t\t\tthis.first = item.next;\r\n\t\t\t\tthis.first.prev = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\texpiresAt (key) {\r\n\t\tlet result;\r\n\r\n\t\tif (this.has(key)) {\r\n\t\t\tresult = this.items[key].expiry;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tget (key) {\r\n\t\tlet result;\r\n\r\n\t\tif (this.has(key)) {\r\n\t\t\tconst item = this.items[key];\r\n\r\n\t\t\tif (this.ttl > 0 && item.expiry <= Date.now()) {\r\n\t\t\t\tthis.delete(key);\r\n\t\t\t} else {\r\n\t\t\t\tresult = item.value;\r\n\t\t\t\tthis.set(key, result, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\thas (key) {\r\n\t\treturn key in this.items;\r\n\t}\r\n\r\n\tkeys () {\r\n\t\tconst result = [];\r\n\t\tlet x = this.first;\r\n\r\n\t\twhile (x !== null) {\r\n\t\t\tresult.push(x.key);\r\n\t\t\tx = x.next;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tset (key, value, bypass = false, resetTtl = this.resetTtl) {\r\n\t\tlet item;\r\n\r\n\t\tif (bypass || this.has(key)) {\r\n\t\t\titem = this.items[key];\r\n\t\t\titem.value = value;\r\n\r\n\t\t\tif (bypass === false && resetTtl) {\r\n\t\t\t\titem.expiry = this.ttl > 0 ? Date.now() + this.ttl : this.ttl;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.last !== item) {\r\n\t\t\t\tconst last = this.last,\r\n\t\t\t\t\tnext = item.next,\r\n\t\t\t\t\tprev = item.prev;\r\n\r\n\t\t\t\tif (this.first === item) {\r\n\t\t\t\t\tthis.first = item.next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\titem.next = null;\r\n\t\t\t\titem.prev = this.last;\r\n\t\t\t\tlast.next = item;\r\n\r\n\t\t\t\tif (prev !== null) {\r\n\t\t\t\t\tprev.next = next;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (next !== null) {\r\n\t\t\t\t\tnext.prev = prev;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (this.max > 0 && this.size === this.max) {\r\n\t\t\t\tthis.evict(true);\r\n\t\t\t}\r\n\r\n\t\t\titem = this.items[key] = {\r\n\t\t\t\texpiry: this.ttl > 0 ? Date.now() + this.ttl : this.ttl,\r\n\t\t\t\tkey: key,\r\n\t\t\t\tprev: this.last,\r\n\t\t\t\tnext: null,\r\n\t\t\t\tvalue\r\n\t\t\t};\r\n\r\n\t\t\tif (++this.size === 1) {\r\n\t\t\t\tthis.first = item;\r\n\t\t\t} else {\r\n\t\t\t\tthis.last.next = item;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.last = item;\r\n\r\n\t\treturn this;\r\n\t}\r\n\r\n\tvalues (keys = this.keys()) {\r\n\t\treturn keys.map(key => this.get(key));\r\n\t}\r\n}\r\n\r\nfunction lru (max = 1000, ttl = 0, resetTtl = false) {\r\n\tif (isNaN(max) || max < 0) {\r\n\t\tthrow new TypeError(\"Invalid max value\");\r\n\t}\r\n\r\n\tif (isNaN(ttl) || ttl < 0) {\r\n\t\tthrow new TypeError(\"Invalid ttl value\");\r\n\t}\r\n\r\n\tif (typeof resetTtl !== \"boolean\") {\r\n\t\tthrow new TypeError(\"Invalid resetTtl value\");\r\n\t}\r\n\r\n\treturn new LRU(max, ttl, resetTtl);\r\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvcnVudGltZS9ub2RlX21vZHVsZXMvdGlueS1scnUvZGlzdC90aW55LWxydS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3J1bnRpbWUvbm9kZV9tb2R1bGVzL3RpbnktbHJ1L2Rpc3QvdGlueS1scnUuanM/YmY2MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIHRpbnktbHJ1XG4gKlxuICogQGNvcHlyaWdodCAyMDI0IEphc29uIE11bGxpZ2FuIDxqYXNvbi5tdWxsaWdhbkBhdm9pZHdvcmsuY29tPlxuICogQGxpY2Vuc2UgQlNELTMtQ2xhdXNlXG4gKiBAdmVyc2lvbiAxMS4yLjExXG4gKi9cbmNsYXNzIExSVSB7XHJcblx0Y29uc3RydWN0b3IgKG1heCA9IDAsIHR0bCA9IDAsIHJlc2V0VHRsID0gZmFsc2UpIHtcclxuXHRcdHRoaXMuZmlyc3QgPSBudWxsO1xyXG5cdFx0dGhpcy5pdGVtcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XHJcblx0XHR0aGlzLmxhc3QgPSBudWxsO1xyXG5cdFx0dGhpcy5tYXggPSBtYXg7XHJcblx0XHR0aGlzLnJlc2V0VHRsID0gcmVzZXRUdGw7XHJcblx0XHR0aGlzLnNpemUgPSAwO1xyXG5cdFx0dGhpcy50dGwgPSB0dGw7XHJcblx0fVxyXG5cclxuXHRjbGVhciAoKSB7XHJcblx0XHR0aGlzLmZpcnN0ID0gbnVsbDtcclxuXHRcdHRoaXMuaXRlbXMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG5cdFx0dGhpcy5sYXN0ID0gbnVsbDtcclxuXHRcdHRoaXMuc2l6ZSA9IDA7XHJcblxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fVxyXG5cclxuXHRkZWxldGUgKGtleSkge1xyXG5cdFx0aWYgKHRoaXMuaGFzKGtleSkpIHtcclxuXHRcdFx0Y29uc3QgaXRlbSA9IHRoaXMuaXRlbXNba2V5XTtcclxuXHJcblx0XHRcdGRlbGV0ZSB0aGlzLml0ZW1zW2tleV07XHJcblx0XHRcdHRoaXMuc2l6ZS0tO1xyXG5cclxuXHRcdFx0aWYgKGl0ZW0ucHJldiAhPT0gbnVsbCkge1xyXG5cdFx0XHRcdGl0ZW0ucHJldi5uZXh0ID0gaXRlbS5uZXh0O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoaXRlbS5uZXh0ICE9PSBudWxsKSB7XHJcblx0XHRcdFx0aXRlbS5uZXh0LnByZXYgPSBpdGVtLnByZXY7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICh0aGlzLmZpcnN0ID09PSBpdGVtKSB7XHJcblx0XHRcdFx0dGhpcy5maXJzdCA9IGl0ZW0ubmV4dDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aWYgKHRoaXMubGFzdCA9PT0gaXRlbSkge1xyXG5cdFx0XHRcdHRoaXMubGFzdCA9IGl0ZW0ucHJldjtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH1cclxuXHJcblx0ZW50cmllcyAoa2V5cyA9IHRoaXMua2V5cygpKSB7XHJcblx0XHRyZXR1cm4ga2V5cy5tYXAoa2V5ID0+IFtrZXksIHRoaXMuZ2V0KGtleSldKTtcclxuXHR9XHJcblxyXG5cdGV2aWN0IChieXBhc3MgPSBmYWxzZSkge1xyXG5cdFx0aWYgKGJ5cGFzcyB8fCB0aGlzLnNpemUgPiAwKSB7XHJcblx0XHRcdGNvbnN0IGl0ZW0gPSB0aGlzLmZpcnN0O1xyXG5cclxuXHRcdFx0ZGVsZXRlIHRoaXMuaXRlbXNbaXRlbS5rZXldO1xyXG5cclxuXHRcdFx0aWYgKC0tdGhpcy5zaXplID09PSAwKSB7XHJcblx0XHRcdFx0dGhpcy5maXJzdCA9IG51bGw7XHJcblx0XHRcdFx0dGhpcy5sYXN0ID0gbnVsbDtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0aGlzLmZpcnN0ID0gaXRlbS5uZXh0O1xyXG5cdFx0XHRcdHRoaXMuZmlyc3QucHJldiA9IG51bGw7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcztcclxuXHR9XHJcblxyXG5cdGV4cGlyZXNBdCAoa2V5KSB7XHJcblx0XHRsZXQgcmVzdWx0O1xyXG5cclxuXHRcdGlmICh0aGlzLmhhcyhrZXkpKSB7XHJcblx0XHRcdHJlc3VsdCA9IHRoaXMuaXRlbXNba2V5XS5leHBpcnk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHJlc3VsdDtcclxuXHR9XHJcblxyXG5cdGdldCAoa2V5KSB7XHJcblx0XHRsZXQgcmVzdWx0O1xyXG5cclxuXHRcdGlmICh0aGlzLmhhcyhrZXkpKSB7XHJcblx0XHRcdGNvbnN0IGl0ZW0gPSB0aGlzLml0ZW1zW2tleV07XHJcblxyXG5cdFx0XHRpZiAodGhpcy50dGwgPiAwICYmIGl0ZW0uZXhwaXJ5IDw9IERhdGUubm93KCkpIHtcclxuXHRcdFx0XHR0aGlzLmRlbGV0ZShrZXkpO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHJlc3VsdCA9IGl0ZW0udmFsdWU7XHJcblx0XHRcdFx0dGhpcy5zZXQoa2V5LCByZXN1bHQsIHRydWUpO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHJlc3VsdDtcclxuXHR9XHJcblxyXG5cdGhhcyAoa2V5KSB7XHJcblx0XHRyZXR1cm4ga2V5IGluIHRoaXMuaXRlbXM7XHJcblx0fVxyXG5cclxuXHRrZXlzICgpIHtcclxuXHRcdGNvbnN0IHJlc3VsdCA9IFtdO1xyXG5cdFx0bGV0IHggPSB0aGlzLmZpcnN0O1xyXG5cclxuXHRcdHdoaWxlICh4ICE9PSBudWxsKSB7XHJcblx0XHRcdHJlc3VsdC5wdXNoKHgua2V5KTtcclxuXHRcdFx0eCA9IHgubmV4dDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gcmVzdWx0O1xyXG5cdH1cclxuXHJcblx0c2V0IChrZXksIHZhbHVlLCBieXBhc3MgPSBmYWxzZSwgcmVzZXRUdGwgPSB0aGlzLnJlc2V0VHRsKSB7XHJcblx0XHRsZXQgaXRlbTtcclxuXHJcblx0XHRpZiAoYnlwYXNzIHx8IHRoaXMuaGFzKGtleSkpIHtcclxuXHRcdFx0aXRlbSA9IHRoaXMuaXRlbXNba2V5XTtcclxuXHRcdFx0aXRlbS52YWx1ZSA9IHZhbHVlO1xyXG5cclxuXHRcdFx0aWYgKGJ5cGFzcyA9PT0gZmFsc2UgJiYgcmVzZXRUdGwpIHtcclxuXHRcdFx0XHRpdGVtLmV4cGlyeSA9IHRoaXMudHRsID4gMCA/IERhdGUubm93KCkgKyB0aGlzLnR0bCA6IHRoaXMudHRsO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAodGhpcy5sYXN0ICE9PSBpdGVtKSB7XHJcblx0XHRcdFx0Y29uc3QgbGFzdCA9IHRoaXMubGFzdCxcclxuXHRcdFx0XHRcdG5leHQgPSBpdGVtLm5leHQsXHJcblx0XHRcdFx0XHRwcmV2ID0gaXRlbS5wcmV2O1xyXG5cclxuXHRcdFx0XHRpZiAodGhpcy5maXJzdCA9PT0gaXRlbSkge1xyXG5cdFx0XHRcdFx0dGhpcy5maXJzdCA9IGl0ZW0ubmV4dDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGl0ZW0ubmV4dCA9IG51bGw7XHJcblx0XHRcdFx0aXRlbS5wcmV2ID0gdGhpcy5sYXN0O1xyXG5cdFx0XHRcdGxhc3QubmV4dCA9IGl0ZW07XHJcblxyXG5cdFx0XHRcdGlmIChwcmV2ICE9PSBudWxsKSB7XHJcblx0XHRcdFx0XHRwcmV2Lm5leHQgPSBuZXh0O1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0aWYgKG5leHQgIT09IG51bGwpIHtcclxuXHRcdFx0XHRcdG5leHQucHJldiA9IHByZXY7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRpZiAodGhpcy5tYXggPiAwICYmIHRoaXMuc2l6ZSA9PT0gdGhpcy5tYXgpIHtcclxuXHRcdFx0XHR0aGlzLmV2aWN0KHRydWUpO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpdGVtID0gdGhpcy5pdGVtc1trZXldID0ge1xyXG5cdFx0XHRcdGV4cGlyeTogdGhpcy50dGwgPiAwID8gRGF0ZS5ub3coKSArIHRoaXMudHRsIDogdGhpcy50dGwsXHJcblx0XHRcdFx0a2V5OiBrZXksXHJcblx0XHRcdFx0cHJldjogdGhpcy5sYXN0LFxyXG5cdFx0XHRcdG5leHQ6IG51bGwsXHJcblx0XHRcdFx0dmFsdWVcclxuXHRcdFx0fTtcclxuXHJcblx0XHRcdGlmICgrK3RoaXMuc2l6ZSA9PT0gMSkge1xyXG5cdFx0XHRcdHRoaXMuZmlyc3QgPSBpdGVtO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHRoaXMubGFzdC5uZXh0ID0gaXRlbTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXMubGFzdCA9IGl0ZW07XHJcblxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fVxyXG5cclxuXHR2YWx1ZXMgKGtleXMgPSB0aGlzLmtleXMoKSkge1xyXG5cdFx0cmV0dXJuIGtleXMubWFwKGtleSA9PiB0aGlzLmdldChrZXkpKTtcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGxydSAobWF4ID0gMTAwMCwgdHRsID0gMCwgcmVzZXRUdGwgPSBmYWxzZSkge1xyXG5cdGlmIChpc05hTihtYXgpIHx8IG1heCA8IDApIHtcclxuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIG1heCB2YWx1ZVwiKTtcclxuXHR9XHJcblxyXG5cdGlmIChpc05hTih0dGwpIHx8IHR0bCA8IDApIHtcclxuXHRcdHRocm93IG5ldyBUeXBlRXJyb3IoXCJJbnZhbGlkIHR0bCB2YWx1ZVwiKTtcclxuXHR9XHJcblxyXG5cdGlmICh0eXBlb2YgcmVzZXRUdGwgIT09IFwiYm9vbGVhblwiKSB7XHJcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCByZXNldFR0bCB2YWx1ZVwiKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBuZXcgTFJVKG1heCwgdHRsLCByZXNldFR0bCk7XHJcbn1leHBvcnR7TFJVLGxydX07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/runtime/node_modules/tiny-lru/dist/tiny-lru.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/store/esm/index.js":
/*!********************************************************!*\
  !*** ../node_modules/@graphql-mesh/store/esm/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FsStoreStorageAdapter: () => (/* binding */ FsStoreStorageAdapter),\n/* harmony export */   InMemoryStoreStorageAdapter: () => (/* binding */ InMemoryStoreStorageAdapter),\n/* harmony export */   MeshStore: () => (/* binding */ MeshStore),\n/* harmony export */   PredefinedProxyOptions: () => (/* binding */ PredefinedProxyOptions),\n/* harmony export */   PredefinedProxyOptionsName: () => (/* binding */ PredefinedProxyOptionsName),\n/* harmony export */   ReadonlyStoreError: () => (/* binding */ ReadonlyStoreError),\n/* harmony export */   ValidationError: () => (/* binding */ ValidationError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var _graphql_inspector_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-inspector/core */ \"(ssr)/../node_modules/@graphql-inspector/core/index.mjs\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"fs\");\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/utils/esm/fs-operations.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n\n\n\n\n\nclass ReadonlyStoreError extends Error {\n}\nclass ValidationError extends Error {\n}\nclass InMemoryStoreStorageAdapter {\n    constructor() {\n        this.data = new Map();\n    }\n    async read(key, options) {\n        return this.data.get(key);\n    }\n    async write(key, data, options) {\n        this.data.set(key, data);\n    }\n    async delete(key) {\n        this.data.delete(key);\n    }\n    clear() {\n        this.data.clear();\n    }\n}\nclass FsStoreStorageAdapter {\n    constructor(options) {\n        this.options = options;\n    }\n    getAbsolutePath(jsFileName) {\n        return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.isAbsolute(jsFileName)\n            ? jsFileName\n            : _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.join(this.options.cwd, jsFileName);\n    }\n    async read(key, options) {\n        let absoluteModulePath = this.getAbsolutePath(key);\n        if (this.options.fileType !== 'ts') {\n            absoluteModulePath += '.' + this.options.fileType;\n        }\n        try {\n            const importedData = await this.options\n                .importFn(absoluteModulePath)\n                .then(m => m.default || m);\n            if (this.options.fileType === 'json') {\n                return await options.fromJSON(importedData, key);\n            }\n            return importedData;\n        }\n        catch (e) {\n            if (e.message.startsWith('Cannot find module')) {\n                return undefined;\n            }\n            throw e;\n        }\n    }\n    async write(key, data, options) {\n        const asString = this.options.fileType === 'json'\n            ? JSON.stringify(await options.toJSON(data, key))\n            : `// @ts-nocheck\\n` + (await options.codify(data, key));\n        const modulePath = this.getAbsolutePath(key);\n        const filePath = modulePath + '.' + this.options.fileType;\n        await (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_1__.writeFile)(filePath, asString);\n        await this.options.importFn(this.options.fileType !== 'ts' ? filePath : modulePath);\n    }\n    async delete(key) {\n        const filePath = this.getAbsolutePath(key) + '.' + this.options.fileType;\n        return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_2__.promises.unlink(filePath);\n    }\n}\nvar PredefinedProxyOptionsName;\n(function (PredefinedProxyOptionsName) {\n    PredefinedProxyOptionsName[\"JsonWithoutValidation\"] = \"JsonWithoutValidation\";\n    PredefinedProxyOptionsName[\"StringWithoutValidation\"] = \"StringWithoutValidation\";\n    PredefinedProxyOptionsName[\"GraphQLSchemaWithDiffing\"] = \"GraphQLSchemaWithDiffing\";\n})(PredefinedProxyOptionsName || (PredefinedProxyOptionsName = {}));\nconst PredefinedProxyOptions = {\n    JsonWithoutValidation: {\n        codify: v => `export default ${JSON.stringify(v, null, 2)}`,\n        fromJSON: v => v,\n        toJSON: v => v,\n        validate: () => null,\n    },\n    StringWithoutValidation: {\n        codify: v => `export default ${JSON.stringify(v, null, 2)}`,\n        fromJSON: v => v,\n        toJSON: v => v,\n        validate: () => null,\n    },\n    GraphQLSchemaWithDiffing: {\n        codify: schema => `\nimport { buildASTSchema } from 'graphql';\n\nconst schemaAST = ${JSON.stringify((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getDocumentNodeFromSchema)(schema), null, 2)};\n\nexport default buildASTSchema(schemaAST, {\n  assumeValid: true,\n  assumeValidSDL: true\n});\n    `.trim(),\n        fromJSON: schemaAST => (0,graphql__WEBPACK_IMPORTED_MODULE_4__.buildASTSchema)(schemaAST, { assumeValid: true, assumeValidSDL: true }),\n        toJSON: schema => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getDocumentNodeFromSchema)(schema),\n        validate: async (oldSchema, newSchema) => {\n            const changes = await (0,_graphql_inspector_core__WEBPACK_IMPORTED_MODULE_5__.diff)(oldSchema, newSchema);\n            const errors = [];\n            for (const change of changes) {\n                if ((change.criticality.level === _graphql_inspector_core__WEBPACK_IMPORTED_MODULE_5__.CriticalityLevel.Breaking ||\n                    change.criticality.level === _graphql_inspector_core__WEBPACK_IMPORTED_MODULE_5__.CriticalityLevel.Dangerous) &&\n                    !change.message.includes('@specifiedBy') &&\n                    !change.message.includes('@deprecated')) {\n                    errors.push(change.message);\n                }\n            }\n            if (errors.length) {\n                if (errors.length === 1) {\n                    throw errors[0];\n                }\n                else {\n                    throw new Error(`Breaking changes found; \\n${errors.map(error => `- ${error}`).join('\\n')}`);\n                }\n            }\n        },\n    },\n};\nclass MeshStore {\n    constructor(identifier, storage, flags) {\n        this.identifier = identifier;\n        this.storage = storage;\n        this.flags = flags;\n    }\n    child(childIdentifier, flags) {\n        return new MeshStore(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.join(this.identifier, childIdentifier), this.storage, {\n            ...this.flags,\n            ...flags,\n        });\n    }\n    proxy(id, options) {\n        const path = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.join(this.identifier, id);\n        let value;\n        let isValueCached = false;\n        const ensureValueCached = async () => {\n            if (!isValueCached) {\n                value = await this.storage.read(path, options);\n                isValueCached = true;\n            }\n        };\n        const doValidation = async (newValue) => {\n            await ensureValueCached();\n            if (value && newValue) {\n                try {\n                    await options.validate(value, newValue, id);\n                }\n                catch (e) {\n                    throw new ValidationError(`Validation failed for \"${id}\" under \"${this.identifier}\": ${e.message}`);\n                }\n            }\n        };\n        const proxy = {\n            getWithSet: async (setterFn) => {\n                await ensureValueCached();\n                if (this.flags.validate || !value) {\n                    const newValue = await setterFn();\n                    if (this.flags.validate && this.flags.readonly) {\n                        await doValidation(newValue);\n                    }\n                    if (!this.flags.readonly) {\n                        await proxy.set(newValue);\n                    }\n                }\n                return value;\n            },\n            get: async () => {\n                await ensureValueCached();\n                return value;\n            },\n            set: async (newValue) => {\n                if (this.flags.readonly) {\n                    throw new ReadonlyStoreError(`Unable to set value for \"${id}\" under \"${this.identifier}\" because the store is in read-only mode.`);\n                }\n                if (this.flags.validate) {\n                    await doValidation(newValue);\n                }\n                value = newValue;\n                isValueCached = true;\n                await this.storage.write(path, value, options);\n            },\n            delete: () => this.storage.delete(path),\n        };\n        return proxy;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/store/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/barePrefix.js":
/*!************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/esm/barePrefix.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BarePrefix)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/renameType.js\");\n/* harmony import */ var _shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/shared.js\");\n\n\n\nconst rootOperations = new Set(['Query', 'Mutation', 'Subscription']);\nclass BarePrefix {\n    constructor(options) {\n        this.noWrap = true;\n        const { apiName, config } = options;\n        this.ignoreList = [...(config.ignore || []), ..._shared_js__WEBPACK_IMPORTED_MODULE_0__.ignoreList];\n        this.includeRootOperations = config.includeRootOperations === true;\n        this.includeTypes = config.includeTypes !== false;\n        this.prefix = null;\n        if (config.value) {\n            this.prefix = config.value;\n        }\n        else if (apiName) {\n            this.prefix = `${apiName}_`;\n        }\n        if (!this.prefix) {\n            throw new Error(`Transform 'prefix' has missing config: prefix`);\n        }\n    }\n    transformSchema(schema) {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mapSchema)(schema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.MapperKind.TYPE]: (type) => {\n                if (this.includeTypes && !(0,graphql__WEBPACK_IMPORTED_MODULE_3__.isSpecifiedScalarType)(type)) {\n                    const currentName = type.name;\n                    if (!this.ignoreList.includes(currentName)) {\n                        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.renameType)(type, this.prefix + currentName);\n                    }\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.MapperKind.ABSTRACT_TYPE]: type => {\n                if (this.includeTypes && !(0,graphql__WEBPACK_IMPORTED_MODULE_3__.isSpecifiedScalarType)(type)) {\n                    const existingResolver = type.resolveType;\n                    type.resolveType = async (data, context, info, abstractType) => {\n                        const typeName = await existingResolver(data, context, info, abstractType);\n                        return this.prefix + typeName;\n                    };\n                    const currentName = type.name;\n                    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.renameType)(type, this.prefix + currentName);\n                }\n                return undefined;\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.MapperKind.ROOT_OBJECT]() {\n                return undefined;\n            },\n            ...(this.includeRootOperations && {\n                [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n                    return !rootOperations.has(typeName) || // check we're in a root Type\n                        this.ignoreList.includes(typeName) || // check if type is to be ignored\n                        this.ignoreList.includes(`${typeName}.${fieldName}`) // check if field in type is to be ignored\n                        ? undefined // do not perform any change\n                        : [`${this.prefix}${fieldName}`, fieldConfig]; // apply prefix\n                },\n            }),\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9lc20vYmFyZVByZWZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBZ0Q7QUFDeUI7QUFDWDtBQUM5RDtBQUNlO0FBQ2Y7QUFDQTtBQUNBLGdCQUFnQixrQkFBa0I7QUFDbEMsd0RBQXdELGtEQUFpQjtBQUN6RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixRQUFRO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0RBQVM7QUFDeEIsYUFBYSw0REFBVTtBQUN2QiwwQ0FBMEMsOERBQXFCO0FBQy9EO0FBQ0E7QUFDQSwrQkFBK0IsZ0VBQVU7QUFDekM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLGFBQWEsNERBQVU7QUFDdkIsMENBQTBDLDhEQUFxQjtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZ0VBQVU7QUFDckM7QUFDQTtBQUNBLGFBQWE7QUFDYixhQUFhLDREQUFVO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsaUJBQWlCLDREQUFVO0FBQzNCO0FBQ0E7QUFDQSxvREFBb0QsU0FBUyxHQUFHLFVBQVU7QUFDMUU7QUFDQSw4QkFBOEIsWUFBWSxFQUFFLFVBQVUsaUJBQWlCO0FBQ3ZFLGlCQUFpQjtBQUNqQixhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3RyYW5zZm9ybS1wcmVmaXgvZXNtL2JhcmVQcmVmaXguanM/MGM0MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1NwZWNpZmllZFNjYWxhclR5cGUgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IE1hcHBlcktpbmQsIG1hcFNjaGVtYSwgcmVuYW1lVHlwZSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IGlnbm9yZUxpc3QgYXMgZGVmYXVsdElnbm9yZUxpc3QgfSBmcm9tICcuL3NoYXJlZC5qcyc7XG5jb25zdCByb290T3BlcmF0aW9ucyA9IG5ldyBTZXQoWydRdWVyeScsICdNdXRhdGlvbicsICdTdWJzY3JpcHRpb24nXSk7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXJlUHJlZml4IHtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zKSB7XG4gICAgICAgIHRoaXMubm9XcmFwID0gdHJ1ZTtcbiAgICAgICAgY29uc3QgeyBhcGlOYW1lLCBjb25maWcgfSA9IG9wdGlvbnM7XG4gICAgICAgIHRoaXMuaWdub3JlTGlzdCA9IFsuLi4oY29uZmlnLmlnbm9yZSB8fCBbXSksIC4uLmRlZmF1bHRJZ25vcmVMaXN0XTtcbiAgICAgICAgdGhpcy5pbmNsdWRlUm9vdE9wZXJhdGlvbnMgPSBjb25maWcuaW5jbHVkZVJvb3RPcGVyYXRpb25zID09PSB0cnVlO1xuICAgICAgICB0aGlzLmluY2x1ZGVUeXBlcyA9IGNvbmZpZy5pbmNsdWRlVHlwZXMgIT09IGZhbHNlO1xuICAgICAgICB0aGlzLnByZWZpeCA9IG51bGw7XG4gICAgICAgIGlmIChjb25maWcudmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMucHJlZml4ID0gY29uZmlnLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGFwaU5hbWUpIHtcbiAgICAgICAgICAgIHRoaXMucHJlZml4ID0gYCR7YXBpTmFtZX1fYDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMucHJlZml4KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRyYW5zZm9ybSAncHJlZml4JyBoYXMgbWlzc2luZyBjb25maWc6IHByZWZpeGApO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyYW5zZm9ybVNjaGVtYShzY2hlbWEpIHtcbiAgICAgICAgcmV0dXJuIG1hcFNjaGVtYShzY2hlbWEsIHtcbiAgICAgICAgICAgIFtNYXBwZXJLaW5kLlRZUEVdOiAodHlwZSkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmluY2x1ZGVUeXBlcyAmJiAhaXNTcGVjaWZpZWRTY2FsYXJUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnROYW1lID0gdHlwZS5uYW1lO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuaWdub3JlTGlzdC5pbmNsdWRlcyhjdXJyZW50TmFtZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZW5hbWVUeXBlKHR5cGUsIHRoaXMucHJlZml4ICsgY3VycmVudE5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgW01hcHBlcktpbmQuQUJTVFJBQ1RfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgICAgIGlmICh0aGlzLmluY2x1ZGVUeXBlcyAmJiAhaXNTcGVjaWZpZWRTY2FsYXJUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nUmVzb2x2ZXIgPSB0eXBlLnJlc29sdmVUeXBlO1xuICAgICAgICAgICAgICAgICAgICB0eXBlLnJlc29sdmVUeXBlID0gYXN5bmMgKGRhdGEsIGNvbnRleHQsIGluZm8sIGFic3RyYWN0VHlwZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgdHlwZU5hbWUgPSBhd2FpdCBleGlzdGluZ1Jlc29sdmVyKGRhdGEsIGNvbnRleHQsIGluZm8sIGFic3RyYWN0VHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5wcmVmaXggKyB0eXBlTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3VycmVudE5hbWUgPSB0eXBlLm5hbWU7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZW5hbWVUeXBlKHR5cGUsIHRoaXMucHJlZml4ICsgY3VycmVudE5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtNYXBwZXJLaW5kLlJPT1RfT0JKRUNUXSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIC4uLih0aGlzLmluY2x1ZGVSb290T3BlcmF0aW9ucyAmJiB7XG4gICAgICAgICAgICAgICAgW01hcHBlcktpbmQuQ09NUE9TSVRFX0ZJRUxEXTogKGZpZWxkQ29uZmlnLCBmaWVsZE5hbWUsIHR5cGVOYW1lKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAhcm9vdE9wZXJhdGlvbnMuaGFzKHR5cGVOYW1lKSB8fCAvLyBjaGVjayB3ZSdyZSBpbiBhIHJvb3QgVHlwZVxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pZ25vcmVMaXN0LmluY2x1ZGVzKHR5cGVOYW1lKSB8fCAvLyBjaGVjayBpZiB0eXBlIGlzIHRvIGJlIGlnbm9yZWRcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaWdub3JlTGlzdC5pbmNsdWRlcyhgJHt0eXBlTmFtZX0uJHtmaWVsZE5hbWV9YCkgLy8gY2hlY2sgaWYgZmllbGQgaW4gdHlwZSBpcyB0byBiZSBpZ25vcmVkXG4gICAgICAgICAgICAgICAgICAgICAgICA/IHVuZGVmaW5lZCAvLyBkbyBub3QgcGVyZm9ybSBhbnkgY2hhbmdlXG4gICAgICAgICAgICAgICAgICAgICAgICA6IFtgJHt0aGlzLnByZWZpeH0ke2ZpZWxkTmFtZX1gLCBmaWVsZENvbmZpZ107IC8vIGFwcGx5IHByZWZpeFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/barePrefix.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/esm/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _barePrefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./barePrefix.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/barePrefix.js\");\n/* harmony import */ var _wrapPrefix_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./wrapPrefix.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/wrapPrefix.js\");\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (function PrefixTransform(options) {\n    return options.config.mode === 'bare' ? new _barePrefix_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](options) : new _wrapPrefix_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](options);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXlDO0FBQ0E7QUFDekMsaUVBQWdCO0FBQ2hCLGdEQUFnRCxzREFBVSxnQkFBZ0Isc0RBQVU7QUFDcEYsQ0FBQyxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC90cmFuc2Zvcm0tcHJlZml4L2VzbS9pbmRleC5qcz82ZTkxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBCYXJlUHJlZml4IGZyb20gJy4vYmFyZVByZWZpeC5qcyc7XG5pbXBvcnQgV3JhcFByZWZpeCBmcm9tICcuL3dyYXBQcmVmaXguanMnO1xuZXhwb3J0IGRlZmF1bHQgKGZ1bmN0aW9uIFByZWZpeFRyYW5zZm9ybShvcHRpb25zKSB7XG4gICAgcmV0dXJuIG9wdGlvbnMuY29uZmlnLm1vZGUgPT09ICdiYXJlJyA/IG5ldyBCYXJlUHJlZml4KG9wdGlvbnMpIDogbmV3IFdyYXBQcmVmaXgob3B0aW9ucyk7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/shared.js":
/*!********************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/esm/shared.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ignoreList: () => (/* binding */ ignoreList)\n/* harmony export */ });\n/* harmony import */ var graphql_scalars__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql-scalars */ \"(ssr)/../node_modules/graphql-scalars/esm/index.js\");\n\nconst ignoreList = [\n    'Int',\n    'Float',\n    'String',\n    'Boolean',\n    'ID',\n    'date',\n    'hostname',\n    'regex',\n    'json-pointer',\n    'relative-json-pointer',\n    'uri-reference',\n    'uri-template',\n    'ObjMap',\n    'HttpMethod',\n    ...Object.keys(graphql_scalars__WEBPACK_IMPORTED_MODULE_0__.resolvers),\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9lc20vc2hhcmVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1FO0FBQzVEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixzREFBbUI7QUFDdEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3RyYW5zZm9ybS1wcmVmaXgvZXNtL3NoYXJlZC5qcz85MDJiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlc29sdmVycyBhcyBzY2FsYXJzUmVzb2x2ZXJzTWFwIH0gZnJvbSAnZ3JhcGhxbC1zY2FsYXJzJztcbmV4cG9ydCBjb25zdCBpZ25vcmVMaXN0ID0gW1xuICAgICdJbnQnLFxuICAgICdGbG9hdCcsXG4gICAgJ1N0cmluZycsXG4gICAgJ0Jvb2xlYW4nLFxuICAgICdJRCcsXG4gICAgJ2RhdGUnLFxuICAgICdob3N0bmFtZScsXG4gICAgJ3JlZ2V4JyxcbiAgICAnanNvbi1wb2ludGVyJyxcbiAgICAncmVsYXRpdmUtanNvbi1wb2ludGVyJyxcbiAgICAndXJpLXJlZmVyZW5jZScsXG4gICAgJ3VyaS10ZW1wbGF0ZScsXG4gICAgJ09iak1hcCcsXG4gICAgJ0h0dHBNZXRob2QnLFxuICAgIC4uLk9iamVjdC5rZXlzKHNjYWxhcnNSZXNvbHZlcnNNYXApLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/shared.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/wrapPrefix.js":
/*!************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/esm/wrapPrefix.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WrapPrefix)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-mesh/utils */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-mesh/utils/esm/apply-transforms.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/RenameTypes.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/RenameRootFields.js\");\n/* harmony import */ var _shared_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./shared.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/shared.js\");\n\n\n\nclass WrapPrefix {\n    constructor(options) {\n        this.transforms = [];\n        const { apiName, config } = options;\n        let prefix = null;\n        if (config.value) {\n            prefix = config.value;\n        }\n        else if (apiName) {\n            prefix = `${apiName}_`;\n        }\n        if (!prefix) {\n            throw new Error(`Transform 'prefix' has missing config: prefix`);\n        }\n        const ignoreList = [...(config.ignore || []), ..._shared_js__WEBPACK_IMPORTED_MODULE_0__.ignoreList];\n        const includeTypes = config.includeTypes !== false;\n        if (includeTypes) {\n            this.transforms.push(new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_1__[\"default\"](typeName => ignoreList.includes(typeName) ? typeName : `${prefix}${typeName}`));\n        }\n        const includeRootOperations = config.includeRootOperations === true;\n        if (includeRootOperations) {\n            this.transforms.push(new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_2__[\"default\"]((typeName, fieldName) => ignoreList.includes(typeName) || ignoreList.includes(`${typeName}.${fieldName}`)\n                ? fieldName\n                : `${prefix}${fieldName}`));\n        }\n    }\n    transformSchema(originalWrappingSchema, subschemaConfig, transformedSchema) {\n        return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_3__.applySchemaTransforms)(originalWrappingSchema, subschemaConfig, transformedSchema, this.transforms);\n    }\n    transformRequest(originalRequest, delegationContext, transformationContext) {\n        return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_3__.applyRequestTransforms)(originalRequest, delegationContext, transformationContext, this.transforms);\n    }\n    transformResult(originalResult, delegationContext, transformationContext) {\n        return (0,_graphql_mesh_utils__WEBPACK_IMPORTED_MODULE_3__.applyResultTransforms)(originalResult, delegationContext, transformationContext, this.transforms);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9lc20vd3JhcFByZWZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RztBQUN4QztBQUNOO0FBQy9DO0FBQ2Y7QUFDQTtBQUNBLGdCQUFnQixrQkFBa0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixRQUFRO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELGtEQUFpQjtBQUMxRTtBQUNBO0FBQ0EscUNBQXFDLDJEQUFXLDJEQUEyRCxPQUFPLEVBQUUsU0FBUztBQUM3SDtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsMkRBQWdCLGtGQUFrRixTQUFTLEdBQUcsVUFBVTtBQUM3SjtBQUNBLHFCQUFxQixPQUFPLEVBQUUsVUFBVTtBQUN4QztBQUNBO0FBQ0E7QUFDQSxlQUFlLDBFQUFxQjtBQUNwQztBQUNBO0FBQ0EsZUFBZSwyRUFBc0I7QUFDckM7QUFDQTtBQUNBLGVBQWUsMEVBQXFCO0FBQ3BDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3RyYW5zZm9ybS1wcmVmaXgvZXNtL3dyYXBQcmVmaXguanM/YjlkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcHBseVJlcXVlc3RUcmFuc2Zvcm1zLCBhcHBseVJlc3VsdFRyYW5zZm9ybXMsIGFwcGx5U2NoZW1hVHJhbnNmb3JtcywgfSBmcm9tICdAZ3JhcGhxbC1tZXNoL3V0aWxzJztcbmltcG9ydCB7IFJlbmFtZVJvb3RGaWVsZHMsIFJlbmFtZVR5cGVzIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvd3JhcCc7XG5pbXBvcnQgeyBpZ25vcmVMaXN0IGFzIGRlZmF1bHRJZ25vcmVMaXN0IH0gZnJvbSAnLi9zaGFyZWQuanMnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV3JhcFByZWZpeCB7XG4gICAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgICAgICB0aGlzLnRyYW5zZm9ybXMgPSBbXTtcbiAgICAgICAgY29uc3QgeyBhcGlOYW1lLCBjb25maWcgfSA9IG9wdGlvbnM7XG4gICAgICAgIGxldCBwcmVmaXggPSBudWxsO1xuICAgICAgICBpZiAoY29uZmlnLnZhbHVlKSB7XG4gICAgICAgICAgICBwcmVmaXggPSBjb25maWcudmFsdWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYXBpTmFtZSkge1xuICAgICAgICAgICAgcHJlZml4ID0gYCR7YXBpTmFtZX1fYDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXByZWZpeCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUcmFuc2Zvcm0gJ3ByZWZpeCcgaGFzIG1pc3NpbmcgY29uZmlnOiBwcmVmaXhgKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpZ25vcmVMaXN0ID0gWy4uLihjb25maWcuaWdub3JlIHx8IFtdKSwgLi4uZGVmYXVsdElnbm9yZUxpc3RdO1xuICAgICAgICBjb25zdCBpbmNsdWRlVHlwZXMgPSBjb25maWcuaW5jbHVkZVR5cGVzICE9PSBmYWxzZTtcbiAgICAgICAgaWYgKGluY2x1ZGVUeXBlcykge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1zLnB1c2gobmV3IFJlbmFtZVR5cGVzKHR5cGVOYW1lID0+IGlnbm9yZUxpc3QuaW5jbHVkZXModHlwZU5hbWUpID8gdHlwZU5hbWUgOiBgJHtwcmVmaXh9JHt0eXBlTmFtZX1gKSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgaW5jbHVkZVJvb3RPcGVyYXRpb25zID0gY29uZmlnLmluY2x1ZGVSb290T3BlcmF0aW9ucyA9PT0gdHJ1ZTtcbiAgICAgICAgaWYgKGluY2x1ZGVSb290T3BlcmF0aW9ucykge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm1zLnB1c2gobmV3IFJlbmFtZVJvb3RGaWVsZHMoKHR5cGVOYW1lLCBmaWVsZE5hbWUpID0+IGlnbm9yZUxpc3QuaW5jbHVkZXModHlwZU5hbWUpIHx8IGlnbm9yZUxpc3QuaW5jbHVkZXMoYCR7dHlwZU5hbWV9LiR7ZmllbGROYW1lfWApXG4gICAgICAgICAgICAgICAgPyBmaWVsZE5hbWVcbiAgICAgICAgICAgICAgICA6IGAke3ByZWZpeH0ke2ZpZWxkTmFtZX1gKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdHJhbnNmb3JtU2NoZW1hKG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEsIHN1YnNjaGVtYUNvbmZpZywgdHJhbnNmb3JtZWRTY2hlbWEpIHtcbiAgICAgICAgcmV0dXJuIGFwcGx5U2NoZW1hVHJhbnNmb3JtcyhvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCBzdWJzY2hlbWFDb25maWcsIHRyYW5zZm9ybWVkU2NoZW1hLCB0aGlzLnRyYW5zZm9ybXMpO1xuICAgIH1cbiAgICB0cmFuc2Zvcm1SZXF1ZXN0KG9yaWdpbmFsUmVxdWVzdCwgZGVsZWdhdGlvbkNvbnRleHQsIHRyYW5zZm9ybWF0aW9uQ29udGV4dCkge1xuICAgICAgICByZXR1cm4gYXBwbHlSZXF1ZXN0VHJhbnNmb3JtcyhvcmlnaW5hbFJlcXVlc3QsIGRlbGVnYXRpb25Db250ZXh0LCB0cmFuc2Zvcm1hdGlvbkNvbnRleHQsIHRoaXMudHJhbnNmb3Jtcyk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlc3VsdChvcmlnaW5hbFJlc3VsdCwgZGVsZWdhdGlvbkNvbnRleHQsIHRyYW5zZm9ybWF0aW9uQ29udGV4dCkge1xuICAgICAgICByZXR1cm4gYXBwbHlSZXN1bHRUcmFuc2Zvcm1zKG9yaWdpbmFsUmVzdWx0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0LCB0aGlzLnRyYW5zZm9ybXMpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/esm/wrapPrefix.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-mesh/utils/esm/apply-transforms.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-mesh/utils/esm/apply-transforms.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyRequestTransforms: () => (/* binding */ applyRequestTransforms),\n/* harmony export */   applyResultTransforms: () => (/* binding */ applyResultTransforms),\n/* harmony export */   applySchemaTransforms: () => (/* binding */ applySchemaTransforms)\n/* harmony export */ });\nfunction applySchemaTransforms(originalWrappingSchema, subschemaConfig, transformedSchema, transforms) {\n    if (transforms?.length) {\n        return transforms.reduce((schema, transform) => 'transformSchema' in transform\n            ? transform.transformSchema(schema, subschemaConfig)\n            : schema, originalWrappingSchema);\n    }\n    return originalWrappingSchema;\n}\nfunction applyRequestTransforms(originalRequest, delegationContext, transformationContext, transforms) {\n    transformationContext.contextMap = transformationContext.contextMap || new WeakMap();\n    const contextMap = transformationContext.contextMap;\n    transforms?.forEach(transform => {\n        if (!contextMap.has(transform)) {\n            contextMap.set(transform, {\n                nextIndex: 0,\n                paths: {},\n            });\n        }\n    });\n    return transforms.reduceRight((request, transform) => 'transformRequest' in transform\n        ? transform.transformRequest(request, delegationContext, contextMap.get(transform))\n        : request, originalRequest);\n}\nfunction applyResultTransforms(originalResult, delegationContext, transformationContext, transforms) {\n    const contextMap = transformationContext.contextMap;\n    return transforms.reduce((result, transform) => 'transformResult' in transform\n        ? transform.transformResult(result, delegationContext, contextMap.get(transform))\n        : result, originalResult);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vYXBwbHktdHJhbnNmb3Jtcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIsYUFBYTtBQUNiO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC90cmFuc2Zvcm0tcHJlZml4L25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3V0aWxzL2VzbS9hcHBseS10cmFuc2Zvcm1zLmpzPzkwMDEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGFwcGx5U2NoZW1hVHJhbnNmb3JtcyhvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCBzdWJzY2hlbWFDb25maWcsIHRyYW5zZm9ybWVkU2NoZW1hLCB0cmFuc2Zvcm1zKSB7XG4gICAgaWYgKHRyYW5zZm9ybXM/Lmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gdHJhbnNmb3Jtcy5yZWR1Y2UoKHNjaGVtYSwgdHJhbnNmb3JtKSA9PiAndHJhbnNmb3JtU2NoZW1hJyBpbiB0cmFuc2Zvcm1cbiAgICAgICAgICAgID8gdHJhbnNmb3JtLnRyYW5zZm9ybVNjaGVtYShzY2hlbWEsIHN1YnNjaGVtYUNvbmZpZylcbiAgICAgICAgICAgIDogc2NoZW1hLCBvcmlnaW5hbFdyYXBwaW5nU2NoZW1hKTtcbiAgICB9XG4gICAgcmV0dXJuIG9yaWdpbmFsV3JhcHBpbmdTY2hlbWE7XG59XG5leHBvcnQgZnVuY3Rpb24gYXBwbHlSZXF1ZXN0VHJhbnNmb3JtcyhvcmlnaW5hbFJlcXVlc3QsIGRlbGVnYXRpb25Db250ZXh0LCB0cmFuc2Zvcm1hdGlvbkNvbnRleHQsIHRyYW5zZm9ybXMpIHtcbiAgICB0cmFuc2Zvcm1hdGlvbkNvbnRleHQuY29udGV4dE1hcCA9IHRyYW5zZm9ybWF0aW9uQ29udGV4dC5jb250ZXh0TWFwIHx8IG5ldyBXZWFrTWFwKCk7XG4gICAgY29uc3QgY29udGV4dE1hcCA9IHRyYW5zZm9ybWF0aW9uQ29udGV4dC5jb250ZXh0TWFwO1xuICAgIHRyYW5zZm9ybXM/LmZvckVhY2godHJhbnNmb3JtID0+IHtcbiAgICAgICAgaWYgKCFjb250ZXh0TWFwLmhhcyh0cmFuc2Zvcm0pKSB7XG4gICAgICAgICAgICBjb250ZXh0TWFwLnNldCh0cmFuc2Zvcm0sIHtcbiAgICAgICAgICAgICAgICBuZXh0SW5kZXg6IDAsXG4gICAgICAgICAgICAgICAgcGF0aHM6IHt9LFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gdHJhbnNmb3Jtcy5yZWR1Y2VSaWdodCgocmVxdWVzdCwgdHJhbnNmb3JtKSA9PiAndHJhbnNmb3JtUmVxdWVzdCcgaW4gdHJhbnNmb3JtXG4gICAgICAgID8gdHJhbnNmb3JtLnRyYW5zZm9ybVJlcXVlc3QocmVxdWVzdCwgZGVsZWdhdGlvbkNvbnRleHQsIGNvbnRleHRNYXAuZ2V0KHRyYW5zZm9ybSkpXG4gICAgICAgIDogcmVxdWVzdCwgb3JpZ2luYWxSZXF1ZXN0KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhcHBseVJlc3VsdFRyYW5zZm9ybXMob3JpZ2luYWxSZXN1bHQsIGRlbGVnYXRpb25Db250ZXh0LCB0cmFuc2Zvcm1hdGlvbkNvbnRleHQsIHRyYW5zZm9ybXMpIHtcbiAgICBjb25zdCBjb250ZXh0TWFwID0gdHJhbnNmb3JtYXRpb25Db250ZXh0LmNvbnRleHRNYXA7XG4gICAgcmV0dXJuIHRyYW5zZm9ybXMucmVkdWNlKChyZXN1bHQsIHRyYW5zZm9ybSkgPT4gJ3RyYW5zZm9ybVJlc3VsdCcgaW4gdHJhbnNmb3JtXG4gICAgICAgID8gdHJhbnNmb3JtLnRyYW5zZm9ybVJlc3VsdChyZXN1bHQsIGRlbGVnYXRpb25Db250ZXh0LCBjb250ZXh0TWFwLmdldCh0cmFuc2Zvcm0pKVxuICAgICAgICA6IHJlc3VsdCwgb3JpZ2luYWxSZXN1bHQpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-mesh/utils/esm/apply-transforms.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/Interfaces.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/Interfaces.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperKind: () => (/* binding */ MapperKind)\n/* harmony export */ });\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind || (MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0ludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC90cmFuc2Zvcm0tcHJlZml4L25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vSW50ZXJmYWNlcy5qcz9kMzI0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgTWFwcGVyS2luZDtcbihmdW5jdGlvbiAoTWFwcGVyS2luZCkge1xuICAgIE1hcHBlcktpbmRbXCJUWVBFXCJdID0gXCJNYXBwZXJLaW5kLlRZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiU0NBTEFSX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuU0NBTEFSX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiRU5VTV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkVOVU1fVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJDT01QT1NJVEVfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5DT01QT1NJVEVfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJPQkpFQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5PQkpFQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlBVVF9PQkpFQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJBQlNUUkFDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkFCU1RSQUNUX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiVU5JT05fVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5VTklPTl9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIklOVEVSRkFDRV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLklOVEVSRkFDRV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIlJPT1RfT0JKRUNUXCJdID0gXCJNYXBwZXJLaW5kLlJPT1RfT0JKRUNUXCI7XG4gICAgTWFwcGVyS2luZFtcIlFVRVJZXCJdID0gXCJNYXBwZXJLaW5kLlFVRVJZXCI7XG4gICAgTWFwcGVyS2luZFtcIk1VVEFUSU9OXCJdID0gXCJNYXBwZXJLaW5kLk1VVEFUSU9OXCI7XG4gICAgTWFwcGVyS2luZFtcIlNVQlNDUklQVElPTlwiXSA9IFwiTWFwcGVyS2luZC5TVUJTQ1JJUFRJT05cIjtcbiAgICBNYXBwZXJLaW5kW1wiRElSRUNUSVZFXCJdID0gXCJNYXBwZXJLaW5kLkRJUkVDVElWRVwiO1xuICAgIE1hcHBlcktpbmRbXCJGSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJDT01QT1NJVEVfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuQ09NUE9TSVRFX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIk9CSkVDVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5PQkpFQ1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIlFVRVJZX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuUVVFUllfUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJNVVRBVElPTl9ST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLk1VVEFUSU9OX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiU1VCU0NSSVBUSU9OX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuU1VCU0NSSVBUSU9OX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5URVJGQUNFX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLklOVEVSRkFDRV9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlBVVF9PQkpFQ1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuSU5QVVRfT0JKRUNUX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIkFSR1VNRU5UXCJdID0gXCJNYXBwZXJLaW5kLkFSR1VNRU5UXCI7XG4gICAgTWFwcGVyS2luZFtcIkVOVU1fVkFMVUVcIl0gPSBcIk1hcHBlcktpbmQuRU5VTV9WQUxVRVwiO1xufSkoTWFwcGVyS2luZCB8fCAoTWFwcGVyS2luZCA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/Interfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getObjectTypeFromTypeMap: () => (/* binding */ getObjectTypeFromTypeMap)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9iamVjdFR5cGVGcm9tVHlwZU1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUNoQztBQUNQO0FBQ0E7QUFDQSxZQUFZLHFEQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC90cmFuc2Zvcm0tcHJlZml4L25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwLmpzPzBmMTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPYmplY3RUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwKHR5cGVNYXAsIHR5cGUpIHtcbiAgICBpZiAodHlwZSkge1xuICAgICAgICBjb25zdCBtYXliZU9iamVjdFR5cGUgPSB0eXBlTWFwW3R5cGUubmFtZV07XG4gICAgICAgIGlmIChpc09iamVjdFR5cGUobWF5YmVPYmplY3RUeXBlKSkge1xuICAgICAgICAgICAgcmV0dXJuIG1heWJlT2JqZWN0VHlwZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ3pCO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOENBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanM/MTcwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGNvbnN0IGFzQXJyYXkgPSAoZm5zKSA9PiAoQXJyYXkuaXNBcnJheShmbnMpID8gZm5zIDogZm5zID8gW2Zuc10gOiBbXSk7XG5jb25zdCBpbnZhbGlkRG9jUmVnZXggPSAvXFwuW2EtejAtOV0rJC9pO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9jdW1lbnRTdHJpbmcoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gWFhYOiBpcy12YWxpZC1wYXRoIG9yIGlzLWdsb2IgdHJlYXQgU0RMIGFzIGEgdmFsaWQgcGF0aFxuICAgIC8vIChgc2NhbGFyIERhdGVgIGZvciBleGFtcGxlKVxuICAgIC8vIHRoaXMgd2h5IGNoZWNraW5nIHRoZSBleHRlbnNpb24gaXMgZmFzdCBlbm91Z2hcbiAgICAvLyBhbmQgcHJldmVudCBmcm9tIHBhcnNpbmcgdGhlIHN0cmluZyBpbiBvcmRlciB0byBmaW5kIG91dFxuICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgYSBTRExcbiAgICBpZiAoaW52YWxpZERvY1JlZ2V4LnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHBhcnNlKHN0cik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkgeyB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuY29uc3QgaW52YWxpZFBhdGhSZWdleCA9IC9b4oCY4oCcISVePD5gXFxuXS87XG4vKipcbiAqIENoZWNrZXMgd2hldGhlciB0aGUgYHN0cmAgY29udGFpbnMgYW55IHBhdGggaWxsZWdhbCBjaGFyYWN0ZXJzLlxuICpcbiAqIEEgc3RyaW5nIG1heSBzb21ldGltZXMgbG9vayBsaWtlIGEgcGF0aCBidXQgaXMgbm90IChsaWtlIGFuIFNETCBvZiBhIHNpbXBsZVxuICogR3JhcGhRTCBzY2hlbWEpLiBUbyBtYWtlIHN1cmUgd2UgZG9uJ3QgeWllbGQgZmFsc2UtcG9zaXRpdmVzIGluIHN1Y2ggY2FzZXMsXG4gKiB3ZSBkaXNhbGxvdyBuZXcgbGluZXMgaW4gcGF0aHMgKGV2ZW4gdGhvdWdoIG1vc3QgVW5peCBzeXN0ZW1zIHN1cHBvcnQgbmV3XG4gKiBsaW5lcyBpbiBmaWxlIG5hbWVzKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRQYXRoKHN0cikge1xuICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJiAhaW52YWxpZFBhdGhSZWdleC50ZXN0KHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVN0cmluZ3MoYSwgYikge1xuICAgIGlmIChTdHJpbmcoYSkgPCBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBpZiAoU3RyaW5nKGEpID4gU3RyaW5nKGIpKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBub2RlVG9TdHJpbmcoYSkge1xuICAgIGxldCBuYW1lO1xuICAgIGlmICgnYWxpYXMnIGluIGEpIHtcbiAgICAgICAgbmFtZSA9IGEuYWxpYXM/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsICYmICduYW1lJyBpbiBhKSB7XG4gICAgICAgIG5hbWUgPSBhLm5hbWU/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIG5hbWUgPSBhLmtpbmQ7XG4gICAgfVxuICAgIHJldHVybiBuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVOb2RlcyhhLCBiLCBjdXN0b21Gbikge1xuICAgIGNvbnN0IGFTdHIgPSBub2RlVG9TdHJpbmcoYSk7XG4gICAgY29uc3QgYlN0ciA9IG5vZGVUb1N0cmluZyhiKTtcbiAgICBpZiAodHlwZW9mIGN1c3RvbUZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21GbihhU3RyLCBiU3RyKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBhcmVTdHJpbmdzKGFTdHIsIGJTdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU29tZShpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dCAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFNvbWUoaW5wdXQsIG1lc3NhZ2UgPSAnVmFsdWUgc2hvdWxkIGJlIHNvbWV0aGluZycpIHtcbiAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/mapSchema.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/mapSchema.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correctASTNodes: () => (/* binding */ correctASTNodes),\n/* harmony export */   mapSchema: () => (/* binding */ mapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rewire_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rewire.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformInputValue.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n\n\n\n\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.serializeInputValue), schema, schemaMapper, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.parseInputValue), schema, schemaMapper, type => !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0,_rewire_js__WEBPACK_IMPORTED_MODULE_2__.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] =\n                        newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.TYPE];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_TYPE);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.UNION_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.FIELD];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_FIELD);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper ?? null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/mapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/renameType.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/renameType.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renameType: () => (/* binding */ renameType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction renameType(type, newTypeName) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    throw new Error(`Unknown type ${type}.`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/renameType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/rewire.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/rewire.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewireTypes: () => (/* binding */ rewireTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _stub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stub.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLUnionType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(enumConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.isNamedStub)(type) ? (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/rewire.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/stub.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/stub.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamedStub: () => (/* binding */ createNamedStub),\n/* harmony export */   createStub: () => (/* binding */ createStub),\n/* harmony export */   getBuiltInForStub: () => (/* binding */ getBuiltInForStub),\n/* harmony export */   isNamedStub: () => (/* binding */ isNamedStub)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.LIST_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(createStub(node.type, type));\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NON_NULL_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID;\n        default:\n            return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3N0dWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrTTtBQUMzTDtBQUNQO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQWlCO0FBQ3ZDO0FBQ0E7QUFDQSxzQkFBc0IseURBQW9CO0FBQzFDO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQXNCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWE7QUFDbkMsYUFBYTtBQUNiLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0EsYUFBYSx5Q0FBSTtBQUNqQix1QkFBdUIsZ0RBQVc7QUFDbEMsYUFBYSx5Q0FBSTtBQUNqQix1QkFBdUIsbURBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsK0NBQVU7QUFDdkIsbUJBQW1CLCtDQUFVO0FBQzdCLGFBQWEsaURBQVk7QUFDekIsbUJBQW1CLGlEQUFZO0FBQy9CLGFBQWEsa0RBQWE7QUFDMUIsbUJBQW1CLGtEQUFhO0FBQ2hDLGFBQWEsbURBQWM7QUFDM0IsbUJBQW1CLG1EQUFjO0FBQ2pDLGFBQWEsOENBQVM7QUFDdEIsbUJBQW1CLDhDQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC90cmFuc2Zvcm0tcHJlZml4L25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vc3R1Yi5qcz83MzEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxCb29sZWFuLCBHcmFwaFFMRmxvYXQsIEdyYXBoUUxJRCwgR3JhcGhRTElucHV0T2JqZWN0VHlwZSwgR3JhcGhRTEludCwgR3JhcGhRTEludGVyZmFjZVR5cGUsIEdyYXBoUUxMaXN0LCBHcmFwaFFMTm9uTnVsbCwgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxTdHJpbmcsIEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTmFtZWRTdHViKG5hbWUsIHR5cGUpIHtcbiAgICBsZXQgY29uc3RydWN0b3I7XG4gICAgaWYgKHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTE9iamVjdFR5cGU7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgPT09ICdpbnRlcmZhY2UnKSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTEludGVyZmFjZVR5cGU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdHJ1Y3RvciA9IEdyYXBoUUxJbnB1dE9iamVjdFR5cGU7XG4gICAgfVxuICAgIHJldHVybiBuZXcgY29uc3RydWN0b3Ioe1xuICAgICAgICBuYW1lLFxuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICAgIF9mYWtlOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3R1Yihub2RlLCB0eXBlKSB7XG4gICAgc3dpdGNoIChub2RlLmtpbmQpIHtcbiAgICAgICAgY2FzZSBLaW5kLkxJU1RfVFlQRTpcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTExpc3QoY3JlYXRlU3R1Yihub2RlLnR5cGUsIHR5cGUpKTtcbiAgICAgICAgY2FzZSBLaW5kLk5PTl9OVUxMX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxOb25OdWxsKGNyZWF0ZVN0dWIobm9kZS50eXBlLCB0eXBlKSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ291dHB1dCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTmFtZWRTdHViKG5vZGUubmFtZS52YWx1ZSwgJ29iamVjdCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5hbWVkU3R1Yihub2RlLm5hbWUudmFsdWUsICdpbnB1dCcpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc05hbWVkU3R1Yih0eXBlKSB7XG4gICAgaWYgKCdnZXRGaWVsZHMnIGluIHR5cGUpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVucmVhY2hhYmxlLWxvb3BcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgcmV0dXJuIGZpZWxkLm5hbWUgPT09ICdfZmFrZSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1aWx0SW5Gb3JTdHViKHR5cGUpIHtcbiAgICBzd2l0Y2ggKHR5cGUubmFtZSkge1xuICAgICAgICBjYXNlIEdyYXBoUUxJbnQubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMSW50O1xuICAgICAgICBjYXNlIEdyYXBoUUxGbG9hdC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxGbG9hdDtcbiAgICAgICAgY2FzZSBHcmFwaFFMU3RyaW5nLm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTFN0cmluZztcbiAgICAgICAgY2FzZSBHcmFwaFFMQm9vbGVhbi5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxCb29sZWFuO1xuICAgICAgICBjYXNlIEdyYXBoUUxJRC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxJRDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/stub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null\n            ? inputLeafValueTransformer(nullableType, value)\n            : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null\n            ? inputObjectValueTransformer(nullableType, newValue)\n            : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3RyYW5zZm9ybUlucHV0VmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNGO0FBQy9DO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFlO0FBQ3hDLFFBQVEsbURBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1EQUFVO0FBQ3ZCLGVBQWUsb0RBQU87QUFDdEI7QUFDQSxhQUFhLDBEQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQLDBFQUEwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdHJhbnNmb3JtLXByZWZpeC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3RyYW5zZm9ybUlucHV0VmFsdWUuanM/OTFlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROdWxsYWJsZVR5cGUsIGlzSW5wdXRPYmplY3RUeXBlLCBpc0xlYWZUeXBlLCBpc0xpc3RUeXBlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgYXNBcnJheSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciA9IG51bGwsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lciA9IG51bGwpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IG51bGxhYmxlVHlwZSA9IGdldE51bGxhYmxlVHlwZSh0eXBlKTtcbiAgICBpZiAoaXNMZWFmVHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGxcbiAgICAgICAgICAgID8gaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lcihudWxsYWJsZVR5cGUsIHZhbHVlKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNMaXN0VHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBhc0FycmF5KHZhbHVlKS5tYXAoKGxpc3RNZW1iZXIpID0+IHRyYW5zZm9ybUlucHV0VmFsdWUobnVsbGFibGVUeXBlLm9mVHlwZSwgbGlzdE1lbWJlciwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzSW5wdXRPYmplY3RUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gbnVsbGFibGVUeXBlLmdldEZpZWxkcygpO1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNba2V5XTtcbiAgICAgICAgICAgIGlmIChmaWVsZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWVba2V5XSA9IHRyYW5zZm9ybUlucHV0VmFsdWUoZmllbGQudHlwZSwgdmFsdWVba2V5XSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGxcbiAgICAgICAgICAgID8gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKG51bGxhYmxlVHlwZSwgbmV3VmFsdWUpXG4gICAgICAgICAgICA6IG5ld1ZhbHVlO1xuICAgIH1cbiAgICAvLyB1bnJlYWNoYWJsZSwgbm8gb3RoZXIgcG9zc2libGUgcmV0dXJuIHZhbHVlXG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHQuc2VyaWFsaXplKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnB1dFZhbHVlKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdC5wYXJzZVZhbHVlKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnB1dFZhbHVlTGl0ZXJhbCh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4gdC5wYXJzZUxpdGVyYWwodiwge30pKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/transform-prefix/node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/utils/esm/extract-resolvers.js":
/*!********************************************************************!*\
  !*** ../node_modules/@graphql-mesh/utils/esm/extract-resolvers.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractResolvers: () => (/* binding */ extractResolvers)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getResolversFromSchema.js\");\n\nfunction extractResolvers(schema) {\n    const allResolvers = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getResolversFromSchema)(schema);\n    const filteredResolvers = {};\n    for (const prop in allResolvers) {\n        if (!prop.startsWith('_')) {\n            filteredResolvers[prop] = allResolvers[prop];\n        }\n        if (typeof filteredResolvers === 'object') {\n            for (const fieldName in filteredResolvers[prop]) {\n                if (!prop.startsWith('_resolveType')) {\n                    filteredResolvers[prop][fieldName] =\n                        allResolvers[prop][fieldName];\n                }\n            }\n        }\n    }\n    return filteredResolvers;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2V4dHJhY3QtcmVzb2x2ZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThEO0FBQ3ZEO0FBQ1AseUJBQXlCLDRFQUFzQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2V4dHJhY3QtcmVzb2x2ZXJzLmpzP2MxZjciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0UmVzb2x2ZXJzRnJvbVNjaGVtYSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0UmVzb2x2ZXJzKHNjaGVtYSkge1xuICAgIGNvbnN0IGFsbFJlc29sdmVycyA9IGdldFJlc29sdmVyc0Zyb21TY2hlbWEoc2NoZW1hKTtcbiAgICBjb25zdCBmaWx0ZXJlZFJlc29sdmVycyA9IHt9O1xuICAgIGZvciAoY29uc3QgcHJvcCBpbiBhbGxSZXNvbHZlcnMpIHtcbiAgICAgICAgaWYgKCFwcm9wLnN0YXJ0c1dpdGgoJ18nKSkge1xuICAgICAgICAgICAgZmlsdGVyZWRSZXNvbHZlcnNbcHJvcF0gPSBhbGxSZXNvbHZlcnNbcHJvcF07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBmaWx0ZXJlZFJlc29sdmVycyA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpbHRlcmVkUmVzb2x2ZXJzW3Byb3BdKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFwcm9wLnN0YXJ0c1dpdGgoJ19yZXNvbHZlVHlwZScpKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpbHRlcmVkUmVzb2x2ZXJzW3Byb3BdW2ZpZWxkTmFtZV0gPVxuICAgICAgICAgICAgICAgICAgICAgICAgYWxsUmVzb2x2ZXJzW3Byb3BdW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmaWx0ZXJlZFJlc29sdmVycztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/utils/esm/extract-resolvers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/utils/esm/fileURLToPath.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-mesh/utils/esm/fileURLToPath.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fileURLToPath: () => (/* binding */ fileURLToPath)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n\nfunction fileUriToPath(uri) {\n    if (typeof uri !== 'string' || uri.length <= 7 || uri.substring(0, 7) !== 'file://') {\n        throw new TypeError('must pass in a file:// URI to convert to a file path');\n    }\n    const rest = decodeURI(uri.substring(7));\n    const firstSlash = rest.indexOf('/');\n    let host = rest.substring(0, firstSlash);\n    let path = rest.substring(firstSlash + 1);\n    // 2.  Scheme Definition\n    // As a special case, <host> can be the string \"localhost\" or the empty\n    // string; this is interpreted as \"the machine from which the URL is\n    // being interpreted\".\n    if (host === 'localhost') {\n        host = '';\n    }\n    if (host) {\n        host = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.sep + _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.sep + host;\n    }\n    // 3.2  Drives, drive letters, mount points, file system root\n    // Drive letters are mapped into the top of a file URI in various ways,\n    // depending on the implementation; some applications substitute\n    // vertical bar (\"|\") for the colon after the drive letter, yielding\n    // \"file:///c|/tmp/test.txt\".  In some cases, the colon is left\n    // unchanged, as in \"file:///c:/tmp/test.txt\".  In other cases, the\n    // colon is simply omitted, as in \"file:///c/tmp/test.txt\".\n    path = path.replace(/^(.+)\\|/, '$1:');\n    // for Windows, we need to invert the path separators from what a URI uses\n    if (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.sep === '\\\\') {\n        path = path.replace(/\\//g, '\\\\');\n    }\n    if (/^.+:/.test(path)) {\n        // has Windows drive at beginning of path\n    }\n    else {\n        // unix path…\n        path = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.sep + path;\n    }\n    return host + path;\n}\nfunction fileURLToPath(url) {\n    if (url === null || url === void 0 ? void 0 : url.startsWith('file://')) {\n        return fileUriToPath(url);\n    }\n    return url || '';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2ZpbGVVUkxUb1BhdGguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUU7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQWMsR0FBRyw0REFBYztBQUM5QztBQUNBO0FBQ0E7QUFDQSx3Q0FBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw0REFBYztBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQWM7QUFDN0I7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vZmlsZVVSTFRvUGF0aC5qcz9mNDc0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhdGggYXMgcGF0aE1vZHVsZSB9IGZyb20gJ0BncmFwaHFsLW1lc2gvY3Jvc3MtaGVscGVycyc7XG5mdW5jdGlvbiBmaWxlVXJpVG9QYXRoKHVyaSkge1xuICAgIGlmICh0eXBlb2YgdXJpICE9PSAnc3RyaW5nJyB8fCB1cmkubGVuZ3RoIDw9IDcgfHwgdXJpLnN1YnN0cmluZygwLCA3KSAhPT0gJ2ZpbGU6Ly8nKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ211c3QgcGFzcyBpbiBhIGZpbGU6Ly8gVVJJIHRvIGNvbnZlcnQgdG8gYSBmaWxlIHBhdGgnKTtcbiAgICB9XG4gICAgY29uc3QgcmVzdCA9IGRlY29kZVVSSSh1cmkuc3Vic3RyaW5nKDcpKTtcbiAgICBjb25zdCBmaXJzdFNsYXNoID0gcmVzdC5pbmRleE9mKCcvJyk7XG4gICAgbGV0IGhvc3QgPSByZXN0LnN1YnN0cmluZygwLCBmaXJzdFNsYXNoKTtcbiAgICBsZXQgcGF0aCA9IHJlc3Quc3Vic3RyaW5nKGZpcnN0U2xhc2ggKyAxKTtcbiAgICAvLyAyLiAgU2NoZW1lIERlZmluaXRpb25cbiAgICAvLyBBcyBhIHNwZWNpYWwgY2FzZSwgPGhvc3Q+IGNhbiBiZSB0aGUgc3RyaW5nIFwibG9jYWxob3N0XCIgb3IgdGhlIGVtcHR5XG4gICAgLy8gc3RyaW5nOyB0aGlzIGlzIGludGVycHJldGVkIGFzIFwidGhlIG1hY2hpbmUgZnJvbSB3aGljaCB0aGUgVVJMIGlzXG4gICAgLy8gYmVpbmcgaW50ZXJwcmV0ZWRcIi5cbiAgICBpZiAoaG9zdCA9PT0gJ2xvY2FsaG9zdCcpIHtcbiAgICAgICAgaG9zdCA9ICcnO1xuICAgIH1cbiAgICBpZiAoaG9zdCkge1xuICAgICAgICBob3N0ID0gcGF0aE1vZHVsZS5zZXAgKyBwYXRoTW9kdWxlLnNlcCArIGhvc3Q7XG4gICAgfVxuICAgIC8vIDMuMiAgRHJpdmVzLCBkcml2ZSBsZXR0ZXJzLCBtb3VudCBwb2ludHMsIGZpbGUgc3lzdGVtIHJvb3RcbiAgICAvLyBEcml2ZSBsZXR0ZXJzIGFyZSBtYXBwZWQgaW50byB0aGUgdG9wIG9mIGEgZmlsZSBVUkkgaW4gdmFyaW91cyB3YXlzLFxuICAgIC8vIGRlcGVuZGluZyBvbiB0aGUgaW1wbGVtZW50YXRpb247IHNvbWUgYXBwbGljYXRpb25zIHN1YnN0aXR1dGVcbiAgICAvLyB2ZXJ0aWNhbCBiYXIgKFwifFwiKSBmb3IgdGhlIGNvbG9uIGFmdGVyIHRoZSBkcml2ZSBsZXR0ZXIsIHlpZWxkaW5nXG4gICAgLy8gXCJmaWxlOi8vL2N8L3RtcC90ZXN0LnR4dFwiLiAgSW4gc29tZSBjYXNlcywgdGhlIGNvbG9uIGlzIGxlZnRcbiAgICAvLyB1bmNoYW5nZWQsIGFzIGluIFwiZmlsZTovLy9jOi90bXAvdGVzdC50eHRcIi4gIEluIG90aGVyIGNhc2VzLCB0aGVcbiAgICAvLyBjb2xvbiBpcyBzaW1wbHkgb21pdHRlZCwgYXMgaW4gXCJmaWxlOi8vL2MvdG1wL3Rlc3QudHh0XCIuXG4gICAgcGF0aCA9IHBhdGgucmVwbGFjZSgvXiguKylcXHwvLCAnJDE6Jyk7XG4gICAgLy8gZm9yIFdpbmRvd3MsIHdlIG5lZWQgdG8gaW52ZXJ0IHRoZSBwYXRoIHNlcGFyYXRvcnMgZnJvbSB3aGF0IGEgVVJJIHVzZXNcbiAgICBpZiAocGF0aE1vZHVsZS5zZXAgPT09ICdcXFxcJykge1xuICAgICAgICBwYXRoID0gcGF0aC5yZXBsYWNlKC9cXC8vZywgJ1xcXFwnKTtcbiAgICB9XG4gICAgaWYgKC9eLis6Ly50ZXN0KHBhdGgpKSB7XG4gICAgICAgIC8vIGhhcyBXaW5kb3dzIGRyaXZlIGF0IGJlZ2lubmluZyBvZiBwYXRoXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyB1bml4IHBhdGjigKZcbiAgICAgICAgcGF0aCA9IHBhdGhNb2R1bGUuc2VwICsgcGF0aDtcbiAgICB9XG4gICAgcmV0dXJuIGhvc3QgKyBwYXRoO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZpbGVVUkxUb1BhdGgodXJsKSB7XG4gICAgaWYgKHVybCA9PT0gbnVsbCB8fCB1cmwgPT09IHZvaWQgMCA/IHZvaWQgMCA6IHVybC5zdGFydHNXaXRoKCdmaWxlOi8vJykpIHtcbiAgICAgICAgcmV0dXJuIGZpbGVVcmlUb1BhdGgodXJsKTtcbiAgICB9XG4gICAgcmV0dXJuIHVybCB8fCAnJztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/utils/esm/fileURLToPath.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/utils/esm/fs-operations.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-mesh/utils/esm/fs-operations.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mkdir: () => (/* binding */ mkdir),\n/* harmony export */   pathExists: () => (/* binding */ pathExists),\n/* harmony export */   rmdirs: () => (/* binding */ rmdirs),\n/* harmony export */   writeFile: () => (/* binding */ writeFile),\n/* harmony export */   writeJSON: () => (/* binding */ writeJSON)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"fs\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"path\");\n\nasync function pathExists(path) {\n    if (!path) {\n        return false;\n    }\n    try {\n        await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.stat(path);\n        return true;\n    }\n    catch (e) {\n        if (e.toString().includes('ENOENT')) {\n            return false;\n        }\n        else {\n            throw e;\n        }\n    }\n}\nfunction writeJSON(path, data, replacer, space) {\n    const stringified = JSON.stringify(data, replacer, space);\n    return writeFile(path, stringified, 'utf-8');\n}\nconst writeFile = async (path, ...args) => {\n    if (typeof path === 'string') {\n        const containingDir = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.dirname(path);\n        if (!(await pathExists(containingDir))) {\n            await mkdir(containingDir);\n        }\n    }\n    return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.writeFile(path, ...args);\n};\nasync function mkdir(path, options = { recursive: true }) {\n    const ifExists = await pathExists(path);\n    if (!ifExists) {\n        await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.mkdir(path, options);\n    }\n}\nasync function rmdirs(dir) {\n    if (await pathExists(dir)) {\n        const entries = await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.readdir(dir, { withFileTypes: true });\n        const results = await Promise.allSettled(entries.map(entry => {\n            const fullPath = _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.join(dir, entry.name);\n            if (entry.isDirectory()) {\n                return rmdirs(fullPath);\n            }\n            else {\n                return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.unlink(fullPath);\n            }\n        }));\n        for (const result of results) {\n            if (result.status === 'rejected' && result.reason.code !== 'ENOENT') {\n                throw result.reason;\n            }\n        }\n        await _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.promises.rmdir(dir);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2ZzLW9wZXJhdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFxRTtBQUM5RDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxpRUFBVztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsOEJBQThCLGdFQUFrQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUVBQVc7QUFDdEI7QUFDTyx1Q0FBdUMsaUJBQWlCO0FBQy9EO0FBQ0E7QUFDQSxjQUFjLGlFQUFXO0FBQ3pCO0FBQ0E7QUFDTztBQUNQO0FBQ0EsOEJBQThCLGlFQUFXLGdCQUFnQixxQkFBcUI7QUFDOUU7QUFDQSw2QkFBNkIsNkRBQWU7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsaUVBQVc7QUFDbEM7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsaUVBQVc7QUFDekI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2ZzLW9wZXJhdGlvbnMuanM/ODRkMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcywgcGF0aCBhcyBwYXRoTW9kdWxlIH0gZnJvbSAnQGdyYXBocWwtbWVzaC9jcm9zcy1oZWxwZXJzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwYXRoRXhpc3RzKHBhdGgpIHtcbiAgICBpZiAoIXBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBhd2FpdCBmcy5wcm9taXNlcy5zdGF0KHBhdGgpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgaWYgKGUudG9TdHJpbmcoKS5pbmNsdWRlcygnRU5PRU5UJykpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IGU7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gd3JpdGVKU09OKHBhdGgsIGRhdGEsIHJlcGxhY2VyLCBzcGFjZSkge1xuICAgIGNvbnN0IHN0cmluZ2lmaWVkID0gSlNPTi5zdHJpbmdpZnkoZGF0YSwgcmVwbGFjZXIsIHNwYWNlKTtcbiAgICByZXR1cm4gd3JpdGVGaWxlKHBhdGgsIHN0cmluZ2lmaWVkLCAndXRmLTgnKTtcbn1cbmV4cG9ydCBjb25zdCB3cml0ZUZpbGUgPSBhc3luYyAocGF0aCwgLi4uYXJncykgPT4ge1xuICAgIGlmICh0eXBlb2YgcGF0aCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgY29uc3QgY29udGFpbmluZ0RpciA9IHBhdGhNb2R1bGUuZGlybmFtZShwYXRoKTtcbiAgICAgICAgaWYgKCEoYXdhaXQgcGF0aEV4aXN0cyhjb250YWluaW5nRGlyKSkpIHtcbiAgICAgICAgICAgIGF3YWl0IG1rZGlyKGNvbnRhaW5pbmdEaXIpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmcy5wcm9taXNlcy53cml0ZUZpbGUocGF0aCwgLi4uYXJncyk7XG59O1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIG1rZGlyKHBhdGgsIG9wdGlvbnMgPSB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KSB7XG4gICAgY29uc3QgaWZFeGlzdHMgPSBhd2FpdCBwYXRoRXhpc3RzKHBhdGgpO1xuICAgIGlmICghaWZFeGlzdHMpIHtcbiAgICAgICAgYXdhaXQgZnMucHJvbWlzZXMubWtkaXIocGF0aCwgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHJtZGlycyhkaXIpIHtcbiAgICBpZiAoYXdhaXQgcGF0aEV4aXN0cyhkaXIpKSB7XG4gICAgICAgIGNvbnN0IGVudHJpZXMgPSBhd2FpdCBmcy5wcm9taXNlcy5yZWFkZGlyKGRpciwgeyB3aXRoRmlsZVR5cGVzOiB0cnVlIH0pO1xuICAgICAgICBjb25zdCByZXN1bHRzID0gYXdhaXQgUHJvbWlzZS5hbGxTZXR0bGVkKGVudHJpZXMubWFwKGVudHJ5ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGZ1bGxQYXRoID0gcGF0aE1vZHVsZS5qb2luKGRpciwgZW50cnkubmFtZSk7XG4gICAgICAgICAgICBpZiAoZW50cnkuaXNEaXJlY3RvcnkoKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBybWRpcnMoZnVsbFBhdGgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZzLnByb21pc2VzLnVubGluayhmdWxsUGF0aCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pKTtcbiAgICAgICAgZm9yIChjb25zdCByZXN1bHQgb2YgcmVzdWx0cykge1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5zdGF0dXMgPT09ICdyZWplY3RlZCcgJiYgcmVzdWx0LnJlYXNvbi5jb2RlICE9PSAnRU5PRU5UJykge1xuICAgICAgICAgICAgICAgIHRocm93IHJlc3VsdC5yZWFzb247XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgZnMucHJvbWlzZXMucm1kaXIoZGlyKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/utils/esm/fs-operations.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/utils/esm/global-lru-cache.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@graphql-mesh/utils/esm/global-lru-cache.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLruCache: () => (/* binding */ createLruCache)\n/* harmony export */ });\n/* harmony import */ var tiny_lru__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tiny-lru */ \"(ssr)/../node_modules/tiny-lru/lib/tiny-lru.esm.js\");\n\nfunction createLruCache(max, ttl) {\n    return (0,tiny_lru__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(max, ttl);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2dsb2JhbC1scnUtY2FjaGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkI7QUFDcEI7QUFDUCxXQUFXLG9EQUFHO0FBQ2QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3V0aWxzL2VzbS9nbG9iYWwtbHJ1LWNhY2hlLmpzPzVjMDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGxydSBmcm9tICd0aW55LWxydSc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTHJ1Q2FjaGUobWF4LCB0dGwpIHtcbiAgICByZXR1cm4gbHJ1KG1heCwgdHRsKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/utils/esm/global-lru-cache.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/utils/esm/logger.js":
/*!*********************************************************!*\
  !*** ../node_modules/@graphql-mesh/utils/esm/logger.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DefaultLogger: () => (/* binding */ DefaultLogger),\n/* harmony export */   debugColor: () => (/* binding */ debugColor),\n/* harmony export */   errorColor: () => (/* binding */ errorColor),\n/* harmony export */   infoColor: () => (/* binding */ infoColor),\n/* harmony export */   titleBold: () => (/* binding */ titleBold),\n/* harmony export */   warnColor: () => (/* binding */ warnColor)\n/* harmony export */ });\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"util\");\n/* harmony import */ var _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-mesh/cross-helpers */ \"process\");\n\nconst ANSI_CODES = {\n    black: '\\x1b[30m',\n    red: '\\x1b[31m',\n    green: '\\x1b[32m',\n    yellow: '\\x1b[33m',\n    blue: '\\x1b[34m',\n    magenta: '\\x1b[35m',\n    cyan: '\\x1b[36m',\n    white: '\\x1b[37m',\n    reset: '\\x1b[0m',\n    bold: '\\x1b[1m',\n    orange: '\\x1b[48:5:166m',\n};\nconst warnColor = msg => ANSI_CODES.orange + msg + ANSI_CODES.reset;\nconst infoColor = msg => ANSI_CODES.cyan + msg + ANSI_CODES.reset;\nconst errorColor = msg => ANSI_CODES.red + msg + ANSI_CODES.reset;\nconst debugColor = msg => ANSI_CODES.magenta + msg + ANSI_CODES.reset;\nconst titleBold = msg => ANSI_CODES.bold + msg + ANSI_CODES.reset;\nclass DefaultLogger {\n    constructor(name) {\n        this.name = name;\n    }\n    getLoggerMessage({ args = [], trim = !this.isDebug }) {\n        return args\n            .flat(Infinity)\n            .map(arg => {\n            if (typeof arg === 'string') {\n                if (trim && arg.length > 100) {\n                    return (arg.slice(0, 100) +\n                        '...' +\n                        '<Error message is too long. Enable DEBUG=1 to see the full message.>');\n                }\n                return arg;\n            }\n            else if (typeof arg === 'object' && (arg === null || arg === void 0 ? void 0 : arg.stack) != null) {\n                return arg.stack;\n            }\n            return _graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_0__.inspect(arg);\n        })\n            .join(` `);\n    }\n    handleLazyMessage({ lazyArgs, trim }) {\n        const flattenedArgs = lazyArgs.flat(Infinity).flatMap(arg => {\n            if (typeof arg === 'function') {\n                return arg();\n            }\n            return arg;\n        });\n        return this.getLoggerMessage({\n            args: flattenedArgs,\n            trim,\n        });\n    }\n    get isDebug() {\n        return (_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.env.DEBUG === '1' ||\n            globalThis.DEBUG === '1' ||\n            this.name.includes(_graphql_mesh_cross_helpers__WEBPACK_IMPORTED_MODULE_1__.env.DEBUG || globalThis.DEBUG));\n    }\n    get prefix() {\n        return this.name ? titleBold(this.name) : ``;\n    }\n    log(...args) {\n        const message = this.getLoggerMessage({\n            args,\n        });\n        return console.log(`${this.prefix} ${message}`);\n    }\n    warn(...args) {\n        const message = this.getLoggerMessage({\n            args,\n        });\n        const fullMessage = `⚠️ ${this.prefix} ${warnColor(message)}`;\n        if (console.warn) {\n            console.warn(fullMessage);\n        }\n        else {\n            console.log(fullMessage);\n        }\n    }\n    info(...args) {\n        const message = this.getLoggerMessage({\n            args,\n        });\n        const fullMessage = `💡 ${this.prefix} ${infoColor(message)}`;\n        if (console.info) {\n            console.info(fullMessage);\n        }\n        else {\n            console.log(fullMessage);\n        }\n    }\n    error(...args) {\n        const message = this.getLoggerMessage({\n            args,\n            trim: false,\n        });\n        const fullMessage = `💥 ${this.prefix} ${errorColor(message)}`;\n        console.log(fullMessage);\n    }\n    debug(...lazyArgs) {\n        if (this.isDebug) {\n            const message = this.handleLazyMessage({\n                lazyArgs,\n            });\n            const fullMessage = `🐛 ${this.prefix} ${debugColor(message)}`;\n            if (console.debug) {\n                console.debug(fullMessage);\n            }\n            else {\n                console.log(fullMessage);\n            }\n        }\n    }\n    child(name) {\n        return new DefaultLogger(this.name ? `${this.name} - ${name}` : name);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL2xvZ2dlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE0RDtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNQO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixpQ0FBaUM7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnRUFBWTtBQUMvQixTQUFTO0FBQ1Q7QUFDQTtBQUNBLHdCQUF3QixnQkFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGdCQUFnQiw0REFBVztBQUMzQjtBQUNBLCtCQUErQiw0REFBVztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCw4QkFBOEIsYUFBYSxFQUFFLFFBQVE7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0NBQWtDLGFBQWEsRUFBRSxtQkFBbUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Qsa0NBQWtDLGFBQWEsRUFBRSxtQkFBbUI7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxrQ0FBa0MsYUFBYSxFQUFFLG9CQUFvQjtBQUNyRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2Isc0NBQXNDLGFBQWEsRUFBRSxvQkFBb0I7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELFdBQVcsSUFBSSxLQUFLO0FBQ3BFO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC1tZXNoL3V0aWxzL2VzbS9sb2dnZXIuanM/MmY5OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwcm9jZXNzLCB1dGlsIH0gZnJvbSAnQGdyYXBocWwtbWVzaC9jcm9zcy1oZWxwZXJzJztcbmNvbnN0IEFOU0lfQ09ERVMgPSB7XG4gICAgYmxhY2s6ICdcXHgxYlszMG0nLFxuICAgIHJlZDogJ1xceDFiWzMxbScsXG4gICAgZ3JlZW46ICdcXHgxYlszMm0nLFxuICAgIHllbGxvdzogJ1xceDFiWzMzbScsXG4gICAgYmx1ZTogJ1xceDFiWzM0bScsXG4gICAgbWFnZW50YTogJ1xceDFiWzM1bScsXG4gICAgY3lhbjogJ1xceDFiWzM2bScsXG4gICAgd2hpdGU6ICdcXHgxYlszN20nLFxuICAgIHJlc2V0OiAnXFx4MWJbMG0nLFxuICAgIGJvbGQ6ICdcXHgxYlsxbScsXG4gICAgb3JhbmdlOiAnXFx4MWJbNDg6NToxNjZtJyxcbn07XG5leHBvcnQgY29uc3Qgd2FybkNvbG9yID0gbXNnID0+IEFOU0lfQ09ERVMub3JhbmdlICsgbXNnICsgQU5TSV9DT0RFUy5yZXNldDtcbmV4cG9ydCBjb25zdCBpbmZvQ29sb3IgPSBtc2cgPT4gQU5TSV9DT0RFUy5jeWFuICsgbXNnICsgQU5TSV9DT0RFUy5yZXNldDtcbmV4cG9ydCBjb25zdCBlcnJvckNvbG9yID0gbXNnID0+IEFOU0lfQ09ERVMucmVkICsgbXNnICsgQU5TSV9DT0RFUy5yZXNldDtcbmV4cG9ydCBjb25zdCBkZWJ1Z0NvbG9yID0gbXNnID0+IEFOU0lfQ09ERVMubWFnZW50YSArIG1zZyArIEFOU0lfQ09ERVMucmVzZXQ7XG5leHBvcnQgY29uc3QgdGl0bGVCb2xkID0gbXNnID0+IEFOU0lfQ09ERVMuYm9sZCArIG1zZyArIEFOU0lfQ09ERVMucmVzZXQ7XG5leHBvcnQgY2xhc3MgRGVmYXVsdExvZ2dlciB7XG4gICAgY29uc3RydWN0b3IobmFtZSkge1xuICAgICAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIH1cbiAgICBnZXRMb2dnZXJNZXNzYWdlKHsgYXJncyA9IFtdLCB0cmltID0gIXRoaXMuaXNEZWJ1ZyB9KSB7XG4gICAgICAgIHJldHVybiBhcmdzXG4gICAgICAgICAgICAuZmxhdChJbmZpbml0eSlcbiAgICAgICAgICAgIC5tYXAoYXJnID0+IHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgYXJnID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGlmICh0cmltICYmIGFyZy5sZW5ndGggPiAxMDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChhcmcuc2xpY2UoMCwgMTAwKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAnLi4uJyArXG4gICAgICAgICAgICAgICAgICAgICAgICAnPEVycm9yIG1lc3NhZ2UgaXMgdG9vIGxvbmcuIEVuYWJsZSBERUJVRz0xIHRvIHNlZSB0aGUgZnVsbCBtZXNzYWdlLj4nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIGFyZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHR5cGVvZiBhcmcgPT09ICdvYmplY3QnICYmIChhcmcgPT09IG51bGwgfHwgYXJnID09PSB2b2lkIDAgPyB2b2lkIDAgOiBhcmcuc3RhY2spICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYXJnLnN0YWNrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHV0aWwuaW5zcGVjdChhcmcpO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmpvaW4oYCBgKTtcbiAgICB9XG4gICAgaGFuZGxlTGF6eU1lc3NhZ2UoeyBsYXp5QXJncywgdHJpbSB9KSB7XG4gICAgICAgIGNvbnN0IGZsYXR0ZW5lZEFyZ3MgPSBsYXp5QXJncy5mbGF0KEluZmluaXR5KS5mbGF0TWFwKGFyZyA9PiB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGFyZyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcmcoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBhcmc7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gdGhpcy5nZXRMb2dnZXJNZXNzYWdlKHtcbiAgICAgICAgICAgIGFyZ3M6IGZsYXR0ZW5lZEFyZ3MsXG4gICAgICAgICAgICB0cmltLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZ2V0IGlzRGVidWcoKSB7XG4gICAgICAgIHJldHVybiAocHJvY2Vzcy5lbnYuREVCVUcgPT09ICcxJyB8fFxuICAgICAgICAgICAgZ2xvYmFsVGhpcy5ERUJVRyA9PT0gJzEnIHx8XG4gICAgICAgICAgICB0aGlzLm5hbWUuaW5jbHVkZXMocHJvY2Vzcy5lbnYuREVCVUcgfHwgZ2xvYmFsVGhpcy5ERUJVRykpO1xuICAgIH1cbiAgICBnZXQgcHJlZml4KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5uYW1lID8gdGl0bGVCb2xkKHRoaXMubmFtZSkgOiBgYDtcbiAgICB9XG4gICAgbG9nKC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMuZ2V0TG9nZ2VyTWVzc2FnZSh7XG4gICAgICAgICAgICBhcmdzLFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGAke3RoaXMucHJlZml4fSAke21lc3NhZ2V9YCk7XG4gICAgfVxuICAgIHdhcm4oLi4uYXJncykge1xuICAgICAgICBjb25zdCBtZXNzYWdlID0gdGhpcy5nZXRMb2dnZXJNZXNzYWdlKHtcbiAgICAgICAgICAgIGFyZ3MsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBmdWxsTWVzc2FnZSA9IGDimqDvuI8gJHt0aGlzLnByZWZpeH0gJHt3YXJuQ29sb3IobWVzc2FnZSl9YDtcbiAgICAgICAgaWYgKGNvbnNvbGUud2Fybikge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGZ1bGxNZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGZ1bGxNZXNzYWdlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpbmZvKC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMuZ2V0TG9nZ2VyTWVzc2FnZSh7XG4gICAgICAgICAgICBhcmdzLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgZnVsbE1lc3NhZ2UgPSBg8J+SoSAke3RoaXMucHJlZml4fSAke2luZm9Db2xvcihtZXNzYWdlKX1gO1xuICAgICAgICBpZiAoY29uc29sZS5pbmZvKSB7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oZnVsbE1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZnVsbE1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVycm9yKC4uLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IHRoaXMuZ2V0TG9nZ2VyTWVzc2FnZSh7XG4gICAgICAgICAgICBhcmdzLFxuICAgICAgICAgICAgdHJpbTogZmFsc2UsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBmdWxsTWVzc2FnZSA9IGDwn5KlICR7dGhpcy5wcmVmaXh9ICR7ZXJyb3JDb2xvcihtZXNzYWdlKX1gO1xuICAgICAgICBjb25zb2xlLmxvZyhmdWxsTWVzc2FnZSk7XG4gICAgfVxuICAgIGRlYnVnKC4uLmxhenlBcmdzKSB7XG4gICAgICAgIGlmICh0aGlzLmlzRGVidWcpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSB0aGlzLmhhbmRsZUxhenlNZXNzYWdlKHtcbiAgICAgICAgICAgICAgICBsYXp5QXJncyxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY29uc3QgZnVsbE1lc3NhZ2UgPSBg8J+QmyAke3RoaXMucHJlZml4fSAke2RlYnVnQ29sb3IobWVzc2FnZSl9YDtcbiAgICAgICAgICAgIGlmIChjb25zb2xlLmRlYnVnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5kZWJ1ZyhmdWxsTWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhmdWxsTWVzc2FnZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2hpbGQobmFtZSkge1xuICAgICAgICByZXR1cm4gbmV3IERlZmF1bHRMb2dnZXIodGhpcy5uYW1lID8gYCR7dGhpcy5uYW1lfSAtICR7bmFtZX1gIDogbmFtZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/utils/esm/logger.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-mesh/utils/esm/pubsub.js":
/*!*********************************************************!*\
  !*** ../node_modules/@graphql-mesh/utils/esm/pubsub.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PubSub: () => (/* binding */ PubSub)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js\");\n\nclass PubSub {\n    constructor() {\n        this.subIdListenerMap = new Map();\n        this.listenerEventMap = new Map();\n        this.eventNameListenersMap = new Map();\n    }\n    getEventNames() {\n        return this.eventNameListenersMap.keys();\n    }\n    publish(triggerName, detail) {\n        const eventNameListeners = this.eventNameListenersMap.get(triggerName);\n        if (eventNameListeners) {\n            Promise.allSettled([...eventNameListeners].map(listener => listener(detail))).catch(e => console.error(e));\n        }\n    }\n    subscribe(triggerName, onMessage) {\n        let eventNameListeners = this.eventNameListenersMap.get(triggerName);\n        if (!eventNameListeners) {\n            eventNameListeners = new Set();\n            this.eventNameListenersMap.set(triggerName, eventNameListeners);\n        }\n        const subId = Date.now();\n        eventNameListeners.add(onMessage);\n        this.subIdListenerMap.set(subId, onMessage);\n        this.listenerEventMap.set(onMessage, triggerName);\n        return subId;\n    }\n    unsubscribe(subId) {\n        const listener = this.subIdListenerMap.get(subId);\n        if (listener) {\n            this.subIdListenerMap.delete(subId);\n            const eventName = this.listenerEventMap.get(listener);\n            if (eventName) {\n                const eventNameListeners = this.eventNameListenersMap.get(eventName);\n                if (eventNameListeners) {\n                    eventNameListeners.delete(listener);\n                }\n            }\n        }\n        this.listenerEventMap.delete(listener);\n    }\n    asyncIterator(triggerName) {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.observableToAsyncIterable)({\n            subscribe: observer => {\n                const subId = this.subscribe(triggerName, data => observer.next(data));\n                return {\n                    unsubscribe: () => this.unsubscribe(subId),\n                };\n            },\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLW1lc2gvdXRpbHMvZXNtL3B1YnN1Yi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRTtBQUMxRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtFQUF5QjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtbWVzaC91dGlscy9lc20vcHVic3ViLmpzPzAxYjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCBjbGFzcyBQdWJTdWIge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnN1YklkTGlzdGVuZXJNYXAgPSBuZXcgTWFwKCk7XG4gICAgICAgIHRoaXMubGlzdGVuZXJFdmVudE1hcCA9IG5ldyBNYXAoKTtcbiAgICAgICAgdGhpcy5ldmVudE5hbWVMaXN0ZW5lcnNNYXAgPSBuZXcgTWFwKCk7XG4gICAgfVxuICAgIGdldEV2ZW50TmFtZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50TmFtZUxpc3RlbmVyc01hcC5rZXlzKCk7XG4gICAgfVxuICAgIHB1Ymxpc2godHJpZ2dlck5hbWUsIGRldGFpbCkge1xuICAgICAgICBjb25zdCBldmVudE5hbWVMaXN0ZW5lcnMgPSB0aGlzLmV2ZW50TmFtZUxpc3RlbmVyc01hcC5nZXQodHJpZ2dlck5hbWUpO1xuICAgICAgICBpZiAoZXZlbnROYW1lTGlzdGVuZXJzKSB7XG4gICAgICAgICAgICBQcm9taXNlLmFsbFNldHRsZWQoWy4uLmV2ZW50TmFtZUxpc3RlbmVyc10ubWFwKGxpc3RlbmVyID0+IGxpc3RlbmVyKGRldGFpbCkpKS5jYXRjaChlID0+IGNvbnNvbGUuZXJyb3IoZSkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHN1YnNjcmliZSh0cmlnZ2VyTmFtZSwgb25NZXNzYWdlKSB7XG4gICAgICAgIGxldCBldmVudE5hbWVMaXN0ZW5lcnMgPSB0aGlzLmV2ZW50TmFtZUxpc3RlbmVyc01hcC5nZXQodHJpZ2dlck5hbWUpO1xuICAgICAgICBpZiAoIWV2ZW50TmFtZUxpc3RlbmVycykge1xuICAgICAgICAgICAgZXZlbnROYW1lTGlzdGVuZXJzID0gbmV3IFNldCgpO1xuICAgICAgICAgICAgdGhpcy5ldmVudE5hbWVMaXN0ZW5lcnNNYXAuc2V0KHRyaWdnZXJOYW1lLCBldmVudE5hbWVMaXN0ZW5lcnMpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHN1YklkID0gRGF0ZS5ub3coKTtcbiAgICAgICAgZXZlbnROYW1lTGlzdGVuZXJzLmFkZChvbk1lc3NhZ2UpO1xuICAgICAgICB0aGlzLnN1YklkTGlzdGVuZXJNYXAuc2V0KHN1YklkLCBvbk1lc3NhZ2UpO1xuICAgICAgICB0aGlzLmxpc3RlbmVyRXZlbnRNYXAuc2V0KG9uTWVzc2FnZSwgdHJpZ2dlck5hbWUpO1xuICAgICAgICByZXR1cm4gc3ViSWQ7XG4gICAgfVxuICAgIHVuc3Vic2NyaWJlKHN1YklkKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gdGhpcy5zdWJJZExpc3RlbmVyTWFwLmdldChzdWJJZCk7XG4gICAgICAgIGlmIChsaXN0ZW5lcikge1xuICAgICAgICAgICAgdGhpcy5zdWJJZExpc3RlbmVyTWFwLmRlbGV0ZShzdWJJZCk7XG4gICAgICAgICAgICBjb25zdCBldmVudE5hbWUgPSB0aGlzLmxpc3RlbmVyRXZlbnRNYXAuZ2V0KGxpc3RlbmVyKTtcbiAgICAgICAgICAgIGlmIChldmVudE5hbWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBldmVudE5hbWVMaXN0ZW5lcnMgPSB0aGlzLmV2ZW50TmFtZUxpc3RlbmVyc01hcC5nZXQoZXZlbnROYW1lKTtcbiAgICAgICAgICAgICAgICBpZiAoZXZlbnROYW1lTGlzdGVuZXJzKSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50TmFtZUxpc3RlbmVycy5kZWxldGUobGlzdGVuZXIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0aGlzLmxpc3RlbmVyRXZlbnRNYXAuZGVsZXRlKGxpc3RlbmVyKTtcbiAgICB9XG4gICAgYXN5bmNJdGVyYXRvcih0cmlnZ2VyTmFtZSkge1xuICAgICAgICByZXR1cm4gb2JzZXJ2YWJsZVRvQXN5bmNJdGVyYWJsZSh7XG4gICAgICAgICAgICBzdWJzY3JpYmU6IG9ic2VydmVyID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBzdWJJZCA9IHRoaXMuc3Vic2NyaWJlKHRyaWdnZXJOYW1lLCBkYXRhID0+IG9ic2VydmVyLm5leHQoZGF0YSkpO1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHVuc3Vic2NyaWJlOiAoKSA9PiB0aGlzLnVuc3Vic2NyaWJlKHN1YklkKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-mesh/utils/esm/pubsub.js\n");

/***/ })

};
;