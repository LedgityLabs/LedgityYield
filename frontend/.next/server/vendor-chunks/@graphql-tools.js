/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@graphql-tools";
exports.ids = ["vendor-chunks/@graphql-tools"];
exports.modules = {

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js ***!
  \*****************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\n\nmodule.exports = function createNodePonyfill(opts = {}) {\n  const ponyfills = {};\n  \n  ponyfills.URLPattern = globalThis.URLPattern;\n\n  // We call this previously to patch `Bun`\n  if (!ponyfills.URLPattern) {\n    const urlPatternModule = __webpack_require__(/*! urlpattern-polyfill */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/index.cjs\");\n    ponyfills.URLPattern = urlPatternModule.URLPattern;\n  }\n\n  if (opts.skipPonyfill || shouldSkipPonyfill()) {\n    return {\n      fetch: globalThis.fetch,\n      Headers: globalThis.Headers,\n      Request: globalThis.Request,\n      Response: globalThis.Response,\n      FormData: globalThis.FormData,\n      ReadableStream: globalThis.ReadableStream,\n      WritableStream: globalThis.WritableStream,\n      TransformStream: globalThis.TransformStream,\n      CompressionStream: globalThis.CompressionStream,\n      DecompressionStream: globalThis.DecompressionStream,\n      Blob: globalThis.Blob,\n      File: globalThis.File,\n      crypto: globalThis.crypto,\n      btoa: globalThis.btoa,\n      TextEncoder: globalThis.TextEncoder,\n      TextDecoder: globalThis.TextDecoder,\n      URLPattern: ponyfills.URLPattern,\n      URL: globalThis.URL,\n      URLSearchParams: globalThis.URLSearchParams\n    };\n  }\n\n  const newNodeFetch = __webpack_require__(/*! @whatwg-node/node-fetch */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/index.js\");\n\n  ponyfills.fetch = newNodeFetch.fetch;\n  ponyfills.Request = newNodeFetch.Request;\n  ponyfills.Response = newNodeFetch.Response;\n  ponyfills.Headers = newNodeFetch.Headers;\n  ponyfills.FormData = newNodeFetch.FormData;\n  ponyfills.ReadableStream = newNodeFetch.ReadableStream;\n\n  ponyfills.URL = newNodeFetch.URL;\n  ponyfills.URLSearchParams = newNodeFetch.URLSearchParams;\n\n  ponyfills.WritableStream = newNodeFetch.WritableStream;\n  ponyfills.TransformStream = newNodeFetch.TransformStream;\n  ponyfills.CompressionStream = newNodeFetch.CompressionStream;\n  ponyfills.DecompressionStream = newNodeFetch.DecompressionStream;\n\n  ponyfills.Blob = newNodeFetch.Blob;\n  ponyfills.File = newNodeFetch.File;\n  ponyfills.crypto = globalThis.crypto;\n  ponyfills.btoa = newNodeFetch.btoa;\n  ponyfills.TextEncoder = newNodeFetch.TextEncoder;\n  ponyfills.TextDecoder = newNodeFetch.TextDecoder;\n\n  if (opts.formDataLimits) {\n    ponyfills.Body = class Body extends newNodeFetch.Body {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Request = class Request extends newNodeFetch.Request {\n      constructor(input, userOpts) {\n        super(input, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n    ponyfills.Response = class Response extends newNodeFetch.Response {\n      constructor(body, userOpts) {\n        super(body, {\n          formDataLimits: opts.formDataLimits,\n          ...userOpts,\n        });\n      }\n    }\n  }\n\n  if (!ponyfills.crypto) {\n    const cryptoModule = __webpack_require__(/*! crypto */ \"crypto\");\n    ponyfills.crypto = cryptoModule.webcrypto;\n  }\n\n  return ponyfills;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L2NyZWF0ZS1ub2RlLXBvbnlmaWxsLmpzIiwibWFwcGluZ3MiOiJBQUFBLDJCQUEyQixtQkFBTyxDQUFDLDJJQUFzQjs7QUFFekQsc0RBQXNEO0FBQ3REO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNkJBQTZCLG1CQUFPLENBQUMsMEhBQXFCO0FBQzFEO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSx1QkFBdUIsbUJBQU8sQ0FBQyxxSUFBeUI7O0FBRXhEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBOztBQUVBO0FBQ0EseUJBQXlCLG1CQUFPLENBQUMsc0JBQVE7QUFDekM7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3QvY3JlYXRlLW5vZGUtcG9ueWZpbGwuanM/M2FkZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzaG91bGRTa2lwUG9ueWZpbGwgPSByZXF1aXJlKCcuL3Nob3VsZFNraXBQb255ZmlsbCcpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGNyZWF0ZU5vZGVQb255ZmlsbChvcHRzID0ge30pIHtcbiAgY29uc3QgcG9ueWZpbGxzID0ge307XG4gIFxuICBwb255ZmlsbHMuVVJMUGF0dGVybiA9IGdsb2JhbFRoaXMuVVJMUGF0dGVybjtcblxuICAvLyBXZSBjYWxsIHRoaXMgcHJldmlvdXNseSB0byBwYXRjaCBgQnVuYFxuICBpZiAoIXBvbnlmaWxscy5VUkxQYXR0ZXJuKSB7XG4gICAgY29uc3QgdXJsUGF0dGVybk1vZHVsZSA9IHJlcXVpcmUoJ3VybHBhdHRlcm4tcG9seWZpbGwnKTtcbiAgICBwb255ZmlsbHMuVVJMUGF0dGVybiA9IHVybFBhdHRlcm5Nb2R1bGUuVVJMUGF0dGVybjtcbiAgfVxuXG4gIGlmIChvcHRzLnNraXBQb255ZmlsbCB8fCBzaG91bGRTa2lwUG9ueWZpbGwoKSkge1xuICAgIHJldHVybiB7XG4gICAgICBmZXRjaDogZ2xvYmFsVGhpcy5mZXRjaCxcbiAgICAgIEhlYWRlcnM6IGdsb2JhbFRoaXMuSGVhZGVycyxcbiAgICAgIFJlcXVlc3Q6IGdsb2JhbFRoaXMuUmVxdWVzdCxcbiAgICAgIFJlc3BvbnNlOiBnbG9iYWxUaGlzLlJlc3BvbnNlLFxuICAgICAgRm9ybURhdGE6IGdsb2JhbFRoaXMuRm9ybURhdGEsXG4gICAgICBSZWFkYWJsZVN0cmVhbTogZ2xvYmFsVGhpcy5SZWFkYWJsZVN0cmVhbSxcbiAgICAgIFdyaXRhYmxlU3RyZWFtOiBnbG9iYWxUaGlzLldyaXRhYmxlU3RyZWFtLFxuICAgICAgVHJhbnNmb3JtU3RyZWFtOiBnbG9iYWxUaGlzLlRyYW5zZm9ybVN0cmVhbSxcbiAgICAgIENvbXByZXNzaW9uU3RyZWFtOiBnbG9iYWxUaGlzLkNvbXByZXNzaW9uU3RyZWFtLFxuICAgICAgRGVjb21wcmVzc2lvblN0cmVhbTogZ2xvYmFsVGhpcy5EZWNvbXByZXNzaW9uU3RyZWFtLFxuICAgICAgQmxvYjogZ2xvYmFsVGhpcy5CbG9iLFxuICAgICAgRmlsZTogZ2xvYmFsVGhpcy5GaWxlLFxuICAgICAgY3J5cHRvOiBnbG9iYWxUaGlzLmNyeXB0byxcbiAgICAgIGJ0b2E6IGdsb2JhbFRoaXMuYnRvYSxcbiAgICAgIFRleHRFbmNvZGVyOiBnbG9iYWxUaGlzLlRleHRFbmNvZGVyLFxuICAgICAgVGV4dERlY29kZXI6IGdsb2JhbFRoaXMuVGV4dERlY29kZXIsXG4gICAgICBVUkxQYXR0ZXJuOiBwb255ZmlsbHMuVVJMUGF0dGVybixcbiAgICAgIFVSTDogZ2xvYmFsVGhpcy5VUkwsXG4gICAgICBVUkxTZWFyY2hQYXJhbXM6IGdsb2JhbFRoaXMuVVJMU2VhcmNoUGFyYW1zXG4gICAgfTtcbiAgfVxuXG4gIGNvbnN0IG5ld05vZGVGZXRjaCA9IHJlcXVpcmUoJ0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoJyk7XG5cbiAgcG9ueWZpbGxzLmZldGNoID0gbmV3Tm9kZUZldGNoLmZldGNoO1xuICBwb255ZmlsbHMuUmVxdWVzdCA9IG5ld05vZGVGZXRjaC5SZXF1ZXN0O1xuICBwb255ZmlsbHMuUmVzcG9uc2UgPSBuZXdOb2RlRmV0Y2guUmVzcG9uc2U7XG4gIHBvbnlmaWxscy5IZWFkZXJzID0gbmV3Tm9kZUZldGNoLkhlYWRlcnM7XG4gIHBvbnlmaWxscy5Gb3JtRGF0YSA9IG5ld05vZGVGZXRjaC5Gb3JtRGF0YTtcbiAgcG9ueWZpbGxzLlJlYWRhYmxlU3RyZWFtID0gbmV3Tm9kZUZldGNoLlJlYWRhYmxlU3RyZWFtO1xuXG4gIHBvbnlmaWxscy5VUkwgPSBuZXdOb2RlRmV0Y2guVVJMO1xuICBwb255ZmlsbHMuVVJMU2VhcmNoUGFyYW1zID0gbmV3Tm9kZUZldGNoLlVSTFNlYXJjaFBhcmFtcztcblxuICBwb255ZmlsbHMuV3JpdGFibGVTdHJlYW0gPSBuZXdOb2RlRmV0Y2guV3JpdGFibGVTdHJlYW07XG4gIHBvbnlmaWxscy5UcmFuc2Zvcm1TdHJlYW0gPSBuZXdOb2RlRmV0Y2guVHJhbnNmb3JtU3RyZWFtO1xuICBwb255ZmlsbHMuQ29tcHJlc3Npb25TdHJlYW0gPSBuZXdOb2RlRmV0Y2guQ29tcHJlc3Npb25TdHJlYW07XG4gIHBvbnlmaWxscy5EZWNvbXByZXNzaW9uU3RyZWFtID0gbmV3Tm9kZUZldGNoLkRlY29tcHJlc3Npb25TdHJlYW07XG5cbiAgcG9ueWZpbGxzLkJsb2IgPSBuZXdOb2RlRmV0Y2guQmxvYjtcbiAgcG9ueWZpbGxzLkZpbGUgPSBuZXdOb2RlRmV0Y2guRmlsZTtcbiAgcG9ueWZpbGxzLmNyeXB0byA9IGdsb2JhbFRoaXMuY3J5cHRvO1xuICBwb255ZmlsbHMuYnRvYSA9IG5ld05vZGVGZXRjaC5idG9hO1xuICBwb255ZmlsbHMuVGV4dEVuY29kZXIgPSBuZXdOb2RlRmV0Y2guVGV4dEVuY29kZXI7XG4gIHBvbnlmaWxscy5UZXh0RGVjb2RlciA9IG5ld05vZGVGZXRjaC5UZXh0RGVjb2RlcjtcblxuICBpZiAob3B0cy5mb3JtRGF0YUxpbWl0cykge1xuICAgIHBvbnlmaWxscy5Cb2R5ID0gY2xhc3MgQm9keSBleHRlbmRzIG5ld05vZGVGZXRjaC5Cb2R5IHtcbiAgICAgIGNvbnN0cnVjdG9yKGJvZHksIHVzZXJPcHRzKSB7XG4gICAgICAgIHN1cGVyKGJvZHksIHtcbiAgICAgICAgICBmb3JtRGF0YUxpbWl0czogb3B0cy5mb3JtRGF0YUxpbWl0cyxcbiAgICAgICAgICAuLi51c2VyT3B0cyxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIHBvbnlmaWxscy5SZXF1ZXN0ID0gY2xhc3MgUmVxdWVzdCBleHRlbmRzIG5ld05vZGVGZXRjaC5SZXF1ZXN0IHtcbiAgICAgIGNvbnN0cnVjdG9yKGlucHV0LCB1c2VyT3B0cykge1xuICAgICAgICBzdXBlcihpbnB1dCwge1xuICAgICAgICAgIGZvcm1EYXRhTGltaXRzOiBvcHRzLmZvcm1EYXRhTGltaXRzLFxuICAgICAgICAgIC4uLnVzZXJPcHRzLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgcG9ueWZpbGxzLlJlc3BvbnNlID0gY2xhc3MgUmVzcG9uc2UgZXh0ZW5kcyBuZXdOb2RlRmV0Y2guUmVzcG9uc2Uge1xuICAgICAgY29uc3RydWN0b3IoYm9keSwgdXNlck9wdHMpIHtcbiAgICAgICAgc3VwZXIoYm9keSwge1xuICAgICAgICAgIGZvcm1EYXRhTGltaXRzOiBvcHRzLmZvcm1EYXRhTGltaXRzLFxuICAgICAgICAgIC4uLnVzZXJPcHRzLFxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBpZiAoIXBvbnlmaWxscy5jcnlwdG8pIHtcbiAgICBjb25zdCBjcnlwdG9Nb2R1bGUgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuICAgIHBvbnlmaWxscy5jcnlwdG8gPSBjcnlwdG9Nb2R1bGUud2ViY3J5cHRvO1xuICB9XG5cbiAgcmV0dXJuIHBvbnlmaWxscztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js ***!
  \**********************************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("\nconst createNodePonyfill = __webpack_require__(/*! ./create-node-ponyfill */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/create-node-ponyfill.js\");\nconst shouldSkipPonyfill = __webpack_require__(/*! ./shouldSkipPonyfill */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\");\nconst ponyfills = createNodePonyfill();\n\nif (!shouldSkipPonyfill()) {\n  try {\n    const nodelibcurlName = 'node-libcurl'\n    globalThis.libcurl = globalThis.libcurl || __webpack_require__(\"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist sync recursive\")(nodelibcurlName);\n  } catch (e) { }\n}\n\nmodule.exports.fetch = ponyfills.fetch;\nmodule.exports.Headers = ponyfills.Headers;\nmodule.exports.Request = ponyfills.Request;\nmodule.exports.Response = ponyfills.Response;\nmodule.exports.FormData = ponyfills.FormData;\nmodule.exports.ReadableStream = ponyfills.ReadableStream;\nmodule.exports.WritableStream = ponyfills.WritableStream;\nmodule.exports.TransformStream = ponyfills.TransformStream;\nmodule.exports.CompressionStream = ponyfills.CompressionStream;\nmodule.exports.DecompressionStream = ponyfills.DecompressionStream;\nmodule.exports.Blob = ponyfills.Blob;\nmodule.exports.File = ponyfills.File;\nmodule.exports.crypto = ponyfills.crypto;\nmodule.exports.btoa = ponyfills.btoa;\nmodule.exports.TextEncoder = ponyfills.TextEncoder;\nmodule.exports.TextDecoder = ponyfills.TextDecoder;\nmodule.exports.URLPattern = ponyfills.URLPattern;\nmodule.exports.URL = ponyfills.URL;\nmodule.exports.URLSearchParams = ponyfills.URLSearchParams;\n\nexports.createFetch = createNodePonyfill;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L25vZGUtcG9ueWZpbGwuanMiLCJtYXBwaW5ncyI6IjtBQUNBLDJCQUEyQixtQkFBTyxDQUFDLCtJQUF3QjtBQUMzRCwyQkFBMkIsbUJBQU8sQ0FBQywySUFBc0I7QUFDekQ7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLDhIQUFRLGVBQWUsQ0FBQztBQUN2RSxJQUFJO0FBQ0o7O0FBRUEsb0JBQW9CO0FBQ3BCLHNCQUFzQjtBQUN0QixzQkFBc0I7QUFDdEIsdUJBQXVCO0FBQ3ZCLHVCQUF1QjtBQUN2Qiw2QkFBNkI7QUFDN0IsNkJBQTZCO0FBQzdCLDhCQUE4QjtBQUM5QixnQ0FBZ0M7QUFDaEMsa0NBQWtDO0FBQ2xDLG1CQUFtQjtBQUNuQixtQkFBbUI7QUFDbkIscUJBQXFCO0FBQ3JCLG1CQUFtQjtBQUNuQiwwQkFBMEI7QUFDMUIsMEJBQTBCO0FBQzFCLHlCQUF5QjtBQUN6QixrQkFBa0I7QUFDbEIsOEJBQThCOztBQUU5QixtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvZmV0Y2gvZGlzdC9ub2RlLXBvbnlmaWxsLmpzP2VjNWQiXSwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBjcmVhdGVOb2RlUG9ueWZpbGwgPSByZXF1aXJlKCcuL2NyZWF0ZS1ub2RlLXBvbnlmaWxsJyk7XG5jb25zdCBzaG91bGRTa2lwUG9ueWZpbGwgPSByZXF1aXJlKCcuL3Nob3VsZFNraXBQb255ZmlsbCcpO1xuY29uc3QgcG9ueWZpbGxzID0gY3JlYXRlTm9kZVBvbnlmaWxsKCk7XG5cbmlmICghc2hvdWxkU2tpcFBvbnlmaWxsKCkpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBub2RlbGliY3VybE5hbWUgPSAnbm9kZS1saWJjdXJsJ1xuICAgIGdsb2JhbFRoaXMubGliY3VybCA9IGdsb2JhbFRoaXMubGliY3VybCB8fCByZXF1aXJlKG5vZGVsaWJjdXJsTmFtZSk7XG4gIH0gY2F0Y2ggKGUpIHsgfVxufVxuXG5tb2R1bGUuZXhwb3J0cy5mZXRjaCA9IHBvbnlmaWxscy5mZXRjaDtcbm1vZHVsZS5leHBvcnRzLkhlYWRlcnMgPSBwb255ZmlsbHMuSGVhZGVycztcbm1vZHVsZS5leHBvcnRzLlJlcXVlc3QgPSBwb255ZmlsbHMuUmVxdWVzdDtcbm1vZHVsZS5leHBvcnRzLlJlc3BvbnNlID0gcG9ueWZpbGxzLlJlc3BvbnNlO1xubW9kdWxlLmV4cG9ydHMuRm9ybURhdGEgPSBwb255ZmlsbHMuRm9ybURhdGE7XG5tb2R1bGUuZXhwb3J0cy5SZWFkYWJsZVN0cmVhbSA9IHBvbnlmaWxscy5SZWFkYWJsZVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLldyaXRhYmxlU3RyZWFtID0gcG9ueWZpbGxzLldyaXRhYmxlU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuVHJhbnNmb3JtU3RyZWFtID0gcG9ueWZpbGxzLlRyYW5zZm9ybVN0cmVhbTtcbm1vZHVsZS5leHBvcnRzLkNvbXByZXNzaW9uU3RyZWFtID0gcG9ueWZpbGxzLkNvbXByZXNzaW9uU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuRGVjb21wcmVzc2lvblN0cmVhbSA9IHBvbnlmaWxscy5EZWNvbXByZXNzaW9uU3RyZWFtO1xubW9kdWxlLmV4cG9ydHMuQmxvYiA9IHBvbnlmaWxscy5CbG9iO1xubW9kdWxlLmV4cG9ydHMuRmlsZSA9IHBvbnlmaWxscy5GaWxlO1xubW9kdWxlLmV4cG9ydHMuY3J5cHRvID0gcG9ueWZpbGxzLmNyeXB0bztcbm1vZHVsZS5leHBvcnRzLmJ0b2EgPSBwb255ZmlsbHMuYnRvYTtcbm1vZHVsZS5leHBvcnRzLlRleHRFbmNvZGVyID0gcG9ueWZpbGxzLlRleHRFbmNvZGVyO1xubW9kdWxlLmV4cG9ydHMuVGV4dERlY29kZXIgPSBwb255ZmlsbHMuVGV4dERlY29kZXI7XG5tb2R1bGUuZXhwb3J0cy5VUkxQYXR0ZXJuID0gcG9ueWZpbGxzLlVSTFBhdHRlcm47XG5tb2R1bGUuZXhwb3J0cy5VUkwgPSBwb255ZmlsbHMuVVJMO1xubW9kdWxlLmV4cG9ydHMuVVJMU2VhcmNoUGFyYW1zID0gcG9ueWZpbGxzLlVSTFNlYXJjaFBhcmFtcztcblxuZXhwb3J0cy5jcmVhdGVGZXRjaCA9IGNyZWF0ZU5vZGVQb255ZmlsbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js ***!
  \***************************************************************************************************************/
/***/ ((module) => {

eval("\nfunction isNextJs() {\n  return Object.keys(globalThis).some(key => key.startsWith('__NEXT'))\n}\n\nmodule.exports = function shouldSkipPonyfill() {\n  // Bun and Deno already have a Fetch API\n  if (globalThis.Deno) {\n    return true\n  }\n  if (process.versions.bun) {\n    return true\n  }\n  if (isNextJs()) {\n    return true\n  }\n  return false\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9mZXRjaC9kaXN0L3Nob3VsZFNraXBQb255ZmlsbC5qcyIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL2ZldGNoL2Rpc3Qvc2hvdWxkU2tpcFBvbnlmaWxsLmpzPzJiNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXG5mdW5jdGlvbiBpc05leHRKcygpIHtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKGdsb2JhbFRoaXMpLnNvbWUoa2V5ID0+IGtleS5zdGFydHNXaXRoKCdfX05FWFQnKSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBzaG91bGRTa2lwUG9ueWZpbGwoKSB7XG4gIC8vIEJ1biBhbmQgRGVubyBhbHJlYWR5IGhhdmUgYSBGZXRjaCBBUElcbiAgaWYgKGdsb2JhbFRoaXMuRGVubykge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgaWYgKHByb2Nlc3MudmVyc2lvbnMuYnVuKSB7XG4gICAgcmV0dXJuIHRydWVcbiAgfVxuICBpZiAoaXNOZXh0SnMoKSkge1xuICAgIHJldHVybiB0cnVlXG4gIH1cbiAgcmV0dXJuIGZhbHNlXG59Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/shouldSkipPonyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBlob = void 0;\nexports.hasBufferMethod = hasBufferMethod;\nexports.hasArrayBufferMethod = hasArrayBufferMethod;\nexports.hasBytesMethod = hasBytesMethod;\nexports.hasTextMethod = hasTextMethod;\nexports.hasSizeProperty = hasSizeProperty;\nexports.hasStreamMethod = hasStreamMethod;\nexports.hasBlobSignature = hasBlobSignature;\nexports.isArrayBuffer = isArrayBuffer;\n/* eslint-disable @typescript-eslint/no-unsafe-declaration-merging */\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getBlobPartAsBuffer(blobPart) {\n    if (typeof blobPart === 'string') {\n        return Buffer.from(blobPart);\n    }\n    else if (Buffer.isBuffer(blobPart)) {\n        return blobPart;\n    }\n    else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n        return Buffer.from(blobPart.buffer, blobPart.byteOffset, blobPart.byteLength);\n    }\n    else {\n        return Buffer.from(blobPart);\n    }\n}\nfunction hasBufferMethod(obj) {\n    return obj != null && obj.buffer != null && typeof obj.buffer === 'function';\n}\nfunction hasArrayBufferMethod(obj) {\n    return obj != null && obj.arrayBuffer != null && typeof obj.arrayBuffer === 'function';\n}\nfunction hasBytesMethod(obj) {\n    return obj != null && obj.bytes != null && typeof obj.bytes === 'function';\n}\nfunction hasTextMethod(obj) {\n    return obj != null && obj.text != null && typeof obj.text === 'function';\n}\nfunction hasSizeProperty(obj) {\n    return obj != null && typeof obj.size === 'number';\n}\nfunction hasStreamMethod(obj) {\n    return obj != null && obj.stream != null && typeof obj.stream === 'function';\n}\nfunction hasBlobSignature(obj) {\n    return obj != null && obj[Symbol.toStringTag] === 'Blob';\n}\nfunction isArrayBuffer(obj) {\n    return obj != null && obj.byteLength != null && obj.slice != null;\n}\n// Will be removed after v14 reaches EOL\n// Needed because v14 doesn't have .stream() implemented\nclass PonyfillBlob {\n    blobParts;\n    type;\n    encoding;\n    _size = null;\n    constructor(blobParts = [], options) {\n        this.blobParts = blobParts;\n        this.type = options?.type || 'application/octet-stream';\n        this.encoding = options?.encoding || 'utf8';\n        this._size = options?.size || null;\n        if (blobParts.length === 1 && hasBlobSignature(blobParts[0])) {\n            return blobParts[0];\n        }\n    }\n    _buffer = null;\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasBufferMethod(blobPart)) {\n                return blobPart.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if (hasBytesMethod(blobPart)) {\n                return blobPart.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if (hasArrayBufferMethod(blobPart)) {\n                return blobPart.arrayBuffer().then(arrayBuf => {\n                    this._buffer = Buffer.from(arrayBuf, undefined, blobPart.size);\n                    return this._buffer;\n                });\n            }\n            this._buffer = getBlobPartAsBuffer(blobPart);\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        const jobs = [];\n        const bufferChunks = this.blobParts.map((blobPart, i) => {\n            if (hasBufferMethod(blobPart)) {\n                jobs.push(blobPart.buffer().then(buf => {\n                    bufferChunks[i] = buf;\n                }));\n                return undefined;\n            }\n            else if (hasArrayBufferMethod(blobPart)) {\n                jobs.push(blobPart.arrayBuffer().then(arrayBuf => {\n                    bufferChunks[i] = Buffer.from(arrayBuf, undefined, blobPart.size);\n                }));\n                return undefined;\n            }\n            else if (hasBytesMethod(blobPart)) {\n                jobs.push(blobPart.bytes().then(bytes => {\n                    bufferChunks[i] = Buffer.from(bytes);\n                }));\n                return undefined;\n            }\n            else {\n                return getBlobPartAsBuffer(blobPart);\n            }\n        });\n        if (jobs.length > 0) {\n            return Promise.all(jobs).then(() => Buffer.concat(bufferChunks, this._size || undefined));\n        }\n        return (0, utils_js_1.fakePromise)(Buffer.concat(bufferChunks, this._size || undefined));\n    }\n    arrayBuffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (isArrayBuffer(this.blobParts[0])) {\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasArrayBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].arrayBuffer();\n            }\n        }\n        return this.buffer();\n    }\n    bytes() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.blobParts.length === 1) {\n            if (Buffer.isBuffer(this.blobParts[0])) {\n                this._buffer = this.blobParts[0];\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (this.blobParts[0] instanceof Uint8Array) {\n                this._buffer = Buffer.from(this.blobParts[0]);\n                return (0, utils_js_1.fakePromise)(this.blobParts[0]);\n            }\n            if (hasBytesMethod(this.blobParts[0])) {\n                return this.blobParts[0].bytes();\n            }\n            if (hasBufferMethod(this.blobParts[0])) {\n                return this.blobParts[0].buffer();\n            }\n        }\n        return this.buffer();\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (typeof blobPart === 'string') {\n                this._text = blobPart;\n                return (0, utils_js_1.fakePromise)(this._text);\n            }\n            if (hasTextMethod(blobPart)) {\n                return blobPart.text().then(text => {\n                    this._text = text;\n                    return this._text;\n                });\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            this._text = buf.toString(this.encoding);\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buf => {\n            this._text = buf.toString(this.encoding);\n            return this._text;\n        });\n    }\n    get size() {\n        if (this._size == null) {\n            this._size = 0;\n            for (const blobPart of this.blobParts) {\n                if (typeof blobPart === 'string') {\n                    this._size += Buffer.byteLength(blobPart);\n                }\n                else if (hasSizeProperty(blobPart)) {\n                    this._size += blobPart.size;\n                }\n                else if ((0, utils_js_1.isArrayBufferView)(blobPart)) {\n                    this._size += blobPart.byteLength;\n                }\n            }\n        }\n        return this._size;\n    }\n    stream() {\n        if (this.blobParts.length === 1) {\n            const blobPart = this.blobParts[0];\n            if (hasStreamMethod(blobPart)) {\n                return blobPart.stream();\n            }\n            const buf = getBlobPartAsBuffer(blobPart);\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(buf);\n                    controller.close();\n                },\n            });\n        }\n        if (this._buffer != null) {\n            return new ReadableStream_js_1.PonyfillReadableStream({\n                start: controller => {\n                    controller.enqueue(this._buffer);\n                    controller.close();\n                },\n            });\n        }\n        let blobPartIterator;\n        return new ReadableStream_js_1.PonyfillReadableStream({\n            start: controller => {\n                if (this.blobParts.length === 0) {\n                    controller.close();\n                    return;\n                }\n                blobPartIterator = this.blobParts[Symbol.iterator]();\n            },\n            pull: controller => {\n                const { value: blobPart, done } = blobPartIterator.next();\n                if (done) {\n                    controller.close();\n                    return;\n                }\n                if (blobPart) {\n                    if (hasBufferMethod(blobPart)) {\n                        return blobPart.buffer().then(buf => {\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasBytesMethod(blobPart)) {\n                        return blobPart.bytes().then(bytes => {\n                            const buf = Buffer.from(bytes);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    if (hasArrayBufferMethod(blobPart)) {\n                        return blobPart.arrayBuffer().then(arrayBuffer => {\n                            const buf = Buffer.from(arrayBuffer, undefined, blobPart.size);\n                            controller.enqueue(buf);\n                        });\n                    }\n                    const buf = getBlobPartAsBuffer(blobPart);\n                    controller.enqueue(buf);\n                }\n            },\n        });\n    }\n    slice() {\n        throw new Error('Not implemented');\n    }\n}\nexports.PonyfillBlob = PonyfillBlob;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Body.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Body.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillBody = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst busboy_1 = tslib_1.__importDefault(__webpack_require__(/*! busboy */ \"(ssr)/../node_modules/busboy/lib/index.js\"));\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nconst File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nconst FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nvar BodyInitType;\n(function (BodyInitType) {\n    BodyInitType[\"ReadableStream\"] = \"ReadableStream\";\n    BodyInitType[\"Blob\"] = \"Blob\";\n    BodyInitType[\"FormData\"] = \"FormData\";\n    BodyInitType[\"String\"] = \"String\";\n    BodyInitType[\"Readable\"] = \"Readable\";\n    BodyInitType[\"Buffer\"] = \"Buffer\";\n})(BodyInitType || (BodyInitType = {}));\nclass PonyfillBody {\n    bodyInit;\n    options;\n    bodyUsed = false;\n    contentType = null;\n    contentLength = null;\n    constructor(bodyInit, options = {}) {\n        this.bodyInit = bodyInit;\n        this.options = options;\n        const { bodyFactory, contentType, contentLength, bodyType, buffer } = processBodyInit(bodyInit);\n        this._bodyFactory = bodyFactory;\n        this.contentType = contentType;\n        this.contentLength = contentLength;\n        this.bodyType = bodyType;\n        this._buffer = buffer;\n    }\n    bodyType;\n    _bodyFactory = () => null;\n    _generatedBody = null;\n    _buffer;\n    generateBody() {\n        if (this._generatedBody?.readable?.destroyed && this._buffer) {\n            this._generatedBody.readable = stream_1.Readable.from(this._buffer);\n        }\n        if (this._generatedBody) {\n            return this._generatedBody;\n        }\n        const body = this._bodyFactory();\n        this._generatedBody = body;\n        return body;\n    }\n    handleContentLengthHeader(forceSet = false) {\n        const contentTypeInHeaders = this.headers.get('content-type');\n        if (!contentTypeInHeaders) {\n            if (this.contentType) {\n                this.headers.set('content-type', this.contentType);\n            }\n        }\n        else {\n            this.contentType = contentTypeInHeaders;\n        }\n        const contentLengthInHeaders = this.headers.get('content-length');\n        if (forceSet && this.bodyInit == null && !contentLengthInHeaders) {\n            this.contentLength = 0;\n            this.headers.set('content-length', '0');\n        }\n        if (!contentLengthInHeaders) {\n            if (this.contentLength) {\n                this.headers.set('content-length', this.contentLength.toString());\n            }\n        }\n        else {\n            this.contentLength = parseInt(contentLengthInHeaders, 10);\n        }\n    }\n    get body() {\n        const _body = this.generateBody();\n        if (_body != null) {\n            const ponyfillReadableStream = _body;\n            const readable = _body.readable;\n            return new Proxy(_body.readable, {\n                get(_, prop) {\n                    if (prop in ponyfillReadableStream) {\n                        const ponyfillReadableStreamProp = ponyfillReadableStream[prop];\n                        if (typeof ponyfillReadableStreamProp === 'function') {\n                            return ponyfillReadableStreamProp.bind(ponyfillReadableStream);\n                        }\n                        return ponyfillReadableStreamProp;\n                    }\n                    if (prop in readable) {\n                        const readableProp = readable[prop];\n                        if (typeof readableProp === 'function') {\n                            return readableProp.bind(readable);\n                        }\n                        return readableProp;\n                    }\n                },\n            });\n        }\n        return null;\n    }\n    _chunks = null;\n    _collectChunksFromReadable() {\n        if (this._chunks) {\n            return (0, utils_js_1.fakePromise)(this._chunks);\n        }\n        const _body = this.generateBody();\n        if (!_body) {\n            return (0, utils_js_1.fakePromise)([]);\n        }\n        this._chunks = [];\n        _body.readable.on('data', chunk => {\n            this._chunks.push(chunk);\n        });\n        return new Promise((resolve, reject) => {\n            _body.readable.once('end', () => {\n                resolve(this._chunks);\n            });\n            _body.readable.once('error', e => {\n                reject(e);\n            });\n        });\n    }\n    _blob = null;\n    blob() {\n        if (this._blob) {\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            this._blob = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        if (this._buffer) {\n            this._blob = new Blob_js_1.PonyfillBlob([this._buffer], {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return (0, utils_js_1.fakePromise)(this._blob);\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            this._blob = new Blob_js_1.PonyfillBlob(chunks, {\n                type: this.contentType || '',\n                size: this.contentLength,\n            });\n            return this._blob;\n        });\n    }\n    _formData = null;\n    formData(opts) {\n        if (this._formData) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        if (this.bodyType === BodyInitType.FormData) {\n            this._formData = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        this._formData = new FormData_js_1.PonyfillFormData();\n        const _body = this.generateBody();\n        if (_body == null) {\n            return (0, utils_js_1.fakePromise)(this._formData);\n        }\n        const formDataLimits = {\n            ...this.options.formDataLimits,\n            ...opts?.formDataLimits,\n        };\n        return new Promise((resolve, reject) => {\n            const bb = (0, busboy_1.default)({\n                headers: {\n                    'content-type': this.contentType || '',\n                },\n                limits: formDataLimits,\n                defParamCharset: 'utf-8',\n            });\n            bb.on('field', (name, value, { nameTruncated, valueTruncated }) => {\n                if (nameTruncated) {\n                    reject(new Error(`Field name size exceeded: ${formDataLimits?.fieldNameSize} bytes`));\n                }\n                if (valueTruncated) {\n                    reject(new Error(`Field value size exceeded: ${formDataLimits?.fieldSize} bytes`));\n                }\n                this._formData.set(name, value);\n            });\n            bb.on('fieldsLimit', () => {\n                reject(new Error(`Fields limit exceeded: ${formDataLimits?.fields}`));\n            });\n            bb.on('file', (name, fileStream, { filename, mimeType }) => {\n                const chunks = [];\n                fileStream.on('limit', () => {\n                    reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                });\n                fileStream.on('data', chunk => {\n                    chunks.push(chunk);\n                });\n                fileStream.on('close', () => {\n                    if (fileStream.truncated) {\n                        reject(new Error(`File size limit exceeded: ${formDataLimits?.fileSize} bytes`));\n                    }\n                    const file = new File_js_1.PonyfillFile(chunks, filename, { type: mimeType });\n                    this._formData.set(name, file);\n                });\n            });\n            bb.on('filesLimit', () => {\n                reject(new Error(`Files limit exceeded: ${formDataLimits?.files}`));\n            });\n            bb.on('partsLimit', () => {\n                reject(new Error(`Parts limit exceeded: ${formDataLimits?.parts}`));\n            });\n            bb.on('close', () => {\n                resolve(this._formData);\n            });\n            bb.on('error', (err = 'An error occurred while parsing the form data') => {\n                const errMessage = err.message || err.toString();\n                reject(new TypeError(errMessage, err.cause));\n            });\n            _body?.readable.pipe(bb);\n        });\n    }\n    buffer() {\n        if (this._buffer) {\n            return (0, utils_js_1.fakePromise)(this._buffer);\n        }\n        if (this.bodyType === BodyInitType.Blob) {\n            if ((0, Blob_js_1.hasBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.buffer().then(buf => {\n                    this._buffer = buf;\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasBytesMethod)(this.bodyInit)) {\n                return this.bodyInit.bytes().then(bytes => {\n                    this._buffer = Buffer.from(bytes);\n                    return this._buffer;\n                });\n            }\n            if ((0, Blob_js_1.hasArrayBufferMethod)(this.bodyInit)) {\n                return this.bodyInit.arrayBuffer().then(buf => {\n                    this._buffer = Buffer.from(buf, undefined, buf.byteLength);\n                    return this._buffer;\n                });\n            }\n        }\n        return this._collectChunksFromReadable().then(chunks => {\n            if (chunks.length === 1) {\n                this._buffer = chunks[0];\n                return this._buffer;\n            }\n            this._buffer = Buffer.concat(chunks);\n            return this._buffer;\n        });\n    }\n    bytes() {\n        return this.buffer();\n    }\n    arrayBuffer() {\n        return this.buffer();\n    }\n    _json = null;\n    json() {\n        if (this._json) {\n            return (0, utils_js_1.fakePromise)(this._json);\n        }\n        return this.text().then(text => {\n            try {\n                this._json = JSON.parse(text);\n            }\n            catch (e) {\n                if (e instanceof SyntaxError) {\n                    e.message += `, \"${text}\" is not valid JSON`;\n                }\n                throw e;\n            }\n            return this._json;\n        });\n    }\n    _text = null;\n    text() {\n        if (this._text) {\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        if (this.bodyType === BodyInitType.String) {\n            this._text = this.bodyInit;\n            return (0, utils_js_1.fakePromise)(this._text);\n        }\n        return this.buffer().then(buffer => {\n            this._text = buffer.toString('utf-8');\n            return this._text;\n        });\n    }\n}\nexports.PonyfillBody = PonyfillBody;\nfunction processBodyInit(bodyInit) {\n    if (bodyInit == null) {\n        return {\n            bodyFactory: () => null,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (typeof bodyInit === 'string') {\n        const buffer = Buffer.from(bodyInit);\n        const contentLength = buffer.byteLength;\n        return {\n            bodyType: BodyInitType.String,\n            contentType: 'text/plain;charset=UTF-8',\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    if (Buffer.isBuffer(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength: bodyInit.length,\n            buffer: bodyInit,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if ((0, utils_js_1.isArrayBufferView)(bodyInit)) {\n        const buffer = Buffer.from(bodyInit.buffer, bodyInit.byteOffset, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentLength: bodyInit.byteLength,\n            contentType: null,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof ReadableStream_js_1.PonyfillReadableStream && bodyInit.readable != null) {\n        return {\n            bodyType: BodyInitType.ReadableStream,\n            bodyFactory: () => bodyInit,\n            contentType: null,\n            contentLength: null,\n        };\n    }\n    if (isBlob(bodyInit)) {\n        return {\n            bodyType: BodyInitType.Blob,\n            contentType: bodyInit.type,\n            contentLength: bodyInit.size,\n            bodyFactory() {\n                return bodyInit.stream();\n            },\n        };\n    }\n    if (bodyInit instanceof ArrayBuffer) {\n        const contentLength = bodyInit.byteLength;\n        const buffer = Buffer.from(bodyInit, undefined, bodyInit.byteLength);\n        return {\n            bodyType: BodyInitType.Buffer,\n            contentType: null,\n            contentLength,\n            buffer,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(buffer);\n                const body = new ReadableStream_js_1.PonyfillReadableStream(readable);\n                return body;\n            },\n        };\n    }\n    if (bodyInit instanceof stream_1.Readable) {\n        return {\n            bodyType: BodyInitType.Readable,\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n                return body;\n            },\n        };\n    }\n    if (isURLSearchParams(bodyInit)) {\n        const contentType = 'application/x-www-form-urlencoded;charset=UTF-8';\n        return {\n            bodyType: BodyInitType.String,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                const body = new ReadableStream_js_1.PonyfillReadableStream(stream_1.Readable.from(bodyInit.toString()));\n                return body;\n            },\n        };\n    }\n    if (isFormData(bodyInit)) {\n        const boundary = Math.random().toString(36).substr(2);\n        const contentType = `multipart/form-data; boundary=${boundary}`;\n        return {\n            bodyType: BodyInitType.FormData,\n            contentType,\n            contentLength: null,\n            bodyFactory() {\n                return (0, FormData_js_1.getStreamFromFormData)(bodyInit, boundary);\n            },\n        };\n    }\n    if (isReadableStream(bodyInit)) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                return new ReadableStream_js_1.PonyfillReadableStream(bodyInit);\n            },\n        };\n    }\n    if (bodyInit[Symbol.iterator] || bodyInit[Symbol.asyncIterator]) {\n        return {\n            contentType: null,\n            contentLength: null,\n            bodyFactory() {\n                const readable = stream_1.Readable.from(bodyInit);\n                return new ReadableStream_js_1.PonyfillReadableStream(readable);\n            },\n        };\n    }\n    throw new Error('Unknown body type');\n}\nfunction isFormData(value) {\n    return value?.forEach != null;\n}\nfunction isBlob(value) {\n    return value?.stream != null;\n}\nfunction isURLSearchParams(value) {\n    return value?.sort != null;\n}\nfunction isReadableStream(value) {\n    return value?.getReader != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js":
/*!******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillCompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillCompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createDeflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createDeflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliCompress)());\n                break;\n            default:\n                throw new Error(`Unsupported compression format: ${compressionFormat}`);\n        }\n    }\n}\nexports.PonyfillCompressionStream = PonyfillCompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Db21wcmVzc2lvblN0cmVhbS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQ0FBaUM7QUFDakMsb0JBQW9CLG1CQUFPLENBQUMsNEJBQVc7QUFDdkMsNkJBQTZCLG1CQUFPLENBQUMsNElBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1FQUFtRSxrQkFBa0I7QUFDckY7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0NvbXByZXNzaW9uU3RyZWFtLmpzPzgxZTYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3psaWJfMSA9IHJlcXVpcmUoXCJub2RlOnpsaWJcIik7XG5jb25zdCBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gZXh0ZW5kcyBUcmFuc2Zvcm1TdHJlYW1fanNfMS5Qb255ZmlsbFRyYW5zZm9ybVN0cmVhbSB7XG4gICAgc3RhdGljIHN1cHBvcnRlZEZvcm1hdHMgPSBnbG9iYWxUaGlzLnByb2Nlc3M/LnZlcnNpb24/LnN0YXJ0c1dpdGgoJ3YyJylcbiAgICAgICAgPyBbJ2d6aXAnLCAnZGVmbGF0ZScsICdiciddXG4gICAgICAgIDogWydnemlwJywgJ2RlZmxhdGUnLCAnZGVmbGF0ZS1yYXcnLCAnYnInXTtcbiAgICBjb25zdHJ1Y3Rvcihjb21wcmVzc2lvbkZvcm1hdCkge1xuICAgICAgICBzd2l0Y2ggKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgICAgICBjYXNlICd4LWd6aXAnOlxuICAgICAgICAgICAgY2FzZSAnZ3ppcCc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUd6aXApKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAneC1kZWZsYXRlJzpcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUnOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVEZWZsYXRlKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ2RlZmxhdGUtcmF3JzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlRGVmbGF0ZVJhdykoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdicic6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUJyb3RsaUNvbXByZXNzKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBjb21wcmVzc2lvbiBmb3JtYXQ6ICR7Y29tcHJlc3Npb25Gb3JtYXR9YCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW0gPSBQb255ZmlsbENvbXByZXNzaW9uU3RyZWFtO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillDecompressionStream = void 0;\nconst node_zlib_1 = __webpack_require__(/*! node:zlib */ \"node:zlib\");\nconst TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nclass PonyfillDecompressionStream extends TransformStream_js_1.PonyfillTransformStream {\n    static supportedFormats = globalThis.process?.version?.startsWith('v2')\n        ? ['gzip', 'deflate', 'br']\n        : ['gzip', 'deflate', 'deflate-raw', 'br'];\n    constructor(compressionFormat) {\n        switch (compressionFormat) {\n            case 'x-gzip':\n            case 'gzip':\n                super((0, node_zlib_1.createGunzip)());\n                break;\n            case 'x-deflate':\n            case 'deflate':\n                super((0, node_zlib_1.createInflate)());\n                break;\n            case 'deflate-raw':\n                super((0, node_zlib_1.createInflateRaw)());\n                break;\n            case 'br':\n                super((0, node_zlib_1.createBrotliDecompress)());\n                break;\n            default:\n                throw new TypeError(`Unsupported compression format: '${compressionFormat}'`);\n        }\n    }\n}\nexports.PonyfillDecompressionStream = PonyfillDecompressionStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9EZWNvbXByZXNzaW9uU3RyZWFtLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1DQUFtQztBQUNuQyxvQkFBb0IsbUJBQU8sQ0FBQyw0QkFBVztBQUN2Qyw2QkFBNkIsbUJBQU8sQ0FBQyw0SUFBc0I7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLGtCQUFrQjtBQUMxRjtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvRGVjb21wcmVzc2lvblN0cmVhbS5qcz8yNjA1Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3psaWJfMSA9IHJlcXVpcmUoXCJub2RlOnpsaWJcIik7XG5jb25zdCBUcmFuc2Zvcm1TdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1RyYW5zZm9ybVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtIHtcbiAgICBzdGF0aWMgc3VwcG9ydGVkRm9ybWF0cyA9IGdsb2JhbFRoaXMucHJvY2Vzcz8udmVyc2lvbj8uc3RhcnRzV2l0aCgndjInKVxuICAgICAgICA/IFsnZ3ppcCcsICdkZWZsYXRlJywgJ2JyJ11cbiAgICAgICAgOiBbJ2d6aXAnLCAnZGVmbGF0ZScsICdkZWZsYXRlLXJhdycsICdiciddO1xuICAgIGNvbnN0cnVjdG9yKGNvbXByZXNzaW9uRm9ybWF0KSB7XG4gICAgICAgIHN3aXRjaCAoY29tcHJlc3Npb25Gb3JtYXQpIHtcbiAgICAgICAgICAgIGNhc2UgJ3gtZ3ppcCc6XG4gICAgICAgICAgICBjYXNlICdnemlwJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlR3VuemlwKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgJ3gtZGVmbGF0ZSc6XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlJzpcbiAgICAgICAgICAgICAgICBzdXBlcigoMCwgbm9kZV96bGliXzEuY3JlYXRlSW5mbGF0ZSkoKSk7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlICdkZWZsYXRlLXJhdyc6XG4gICAgICAgICAgICAgICAgc3VwZXIoKDAsIG5vZGVfemxpYl8xLmNyZWF0ZUluZmxhdGVSYXcpKCkpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSAnYnInOlxuICAgICAgICAgICAgICAgIHN1cGVyKCgwLCBub2RlX3psaWJfMS5jcmVhdGVCcm90bGlEZWNvbXByZXNzKSgpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgVW5zdXBwb3J0ZWQgY29tcHJlc3Npb24gZm9ybWF0OiAnJHtjb21wcmVzc2lvbkZvcm1hdH0nYCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbSA9IFBvbnlmaWxsRGVjb21wcmVzc2lvblN0cmVhbTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/File.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/File.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFile = void 0;\nconst Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nclass PonyfillFile extends Blob_js_1.PonyfillBlob {\n    name;\n    lastModified;\n    constructor(fileBits, name, options) {\n        super(fileBits, options);\n        this.name = name;\n        this.lastModified = options?.lastModified || Date.now();\n    }\n    webkitRelativePath = '';\n}\nexports.PonyfillFile = PonyfillFile;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9GaWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG9CQUFvQjtBQUNwQixrQkFBa0IsbUJBQU8sQ0FBQyxzSEFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9GaWxlLmpzPzEzOTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsRmlsZSA9IHZvaWQgMDtcbmNvbnN0IEJsb2JfanNfMSA9IHJlcXVpcmUoXCIuL0Jsb2IuanNcIik7XG5jbGFzcyBQb255ZmlsbEZpbGUgZXh0ZW5kcyBCbG9iX2pzXzEuUG9ueWZpbGxCbG9iIHtcbiAgICBuYW1lO1xuICAgIGxhc3RNb2RpZmllZDtcbiAgICBjb25zdHJ1Y3RvcihmaWxlQml0cywgbmFtZSwgb3B0aW9ucykge1xuICAgICAgICBzdXBlcihmaWxlQml0cywgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMubGFzdE1vZGlmaWVkID0gb3B0aW9ucz8ubGFzdE1vZGlmaWVkIHx8IERhdGUubm93KCk7XG4gICAgfVxuICAgIHdlYmtpdFJlbGF0aXZlUGF0aCA9ICcnO1xufVxuZXhwb3J0cy5Qb255ZmlsbEZpbGUgPSBQb255ZmlsbEZpbGU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/File.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillFormData = void 0;\nexports.getStreamFromFormData = getStreamFromFormData;\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nclass PonyfillFormData {\n    map = new Map();\n    append(name, value, fileName) {\n        let values = this.map.get(name);\n        if (!values) {\n            values = [];\n            this.map.set(name, values);\n        }\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        values.push(entry);\n    }\n    delete(name) {\n        this.map.delete(name);\n    }\n    get(name) {\n        const values = this.map.get(name);\n        return values ? values[0] : null;\n    }\n    getAll(name) {\n        return this.map.get(name) || [];\n    }\n    has(name) {\n        return this.map.has(name);\n    }\n    set(name, value, fileName) {\n        const entry = isBlob(value)\n            ? getNormalizedFile(name, value, fileName)\n            : value;\n        this.map.set(name, [entry]);\n    }\n    *[Symbol.iterator]() {\n        for (const [key, values] of this.map) {\n            for (const value of values) {\n                yield [key, value];\n            }\n        }\n    }\n    entries() {\n        return this[Symbol.iterator]();\n    }\n    keys() {\n        return this.map.keys();\n    }\n    *values() {\n        for (const values of this.map.values()) {\n            for (const value of values) {\n                yield value;\n            }\n        }\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n}\nexports.PonyfillFormData = PonyfillFormData;\nfunction getStreamFromFormData(formData, boundary = '---') {\n    const entries = [];\n    let sentInitialHeader = false;\n    return new ReadableStream_js_1.PonyfillReadableStream({\n        start: controller => {\n            formData.forEach((value, key) => {\n                if (!sentInitialHeader) {\n                    controller.enqueue(Buffer.from(`--${boundary}\\r\\n`));\n                    sentInitialHeader = true;\n                }\n                entries.push([key, value]);\n            });\n            if (!sentInitialHeader) {\n                controller.enqueue(Buffer.from(`--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n        pull: async (controller) => {\n            const entry = entries.shift();\n            if (entry) {\n                const [key, value] = entry;\n                if (typeof value === 'string') {\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"\\r\\n\\r\\n`));\n                    controller.enqueue(Buffer.from(value));\n                }\n                else {\n                    let filenamePart = '';\n                    if (value.name) {\n                        filenamePart = `; filename=\"${value.name}\"`;\n                    }\n                    controller.enqueue(Buffer.from(`Content-Disposition: form-data; name=\"${key}\"${filenamePart}\\r\\n`));\n                    controller.enqueue(Buffer.from(`Content-Type: ${value.type || 'application/octet-stream'}\\r\\n\\r\\n`));\n                    const entryStream = value.stream();\n                    for await (const chunk of entryStream) {\n                        controller.enqueue(chunk);\n                    }\n                }\n                if (entries.length === 0) {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                    controller.close();\n                }\n                else {\n                    controller.enqueue(Buffer.from(`\\r\\n--${boundary}\\r\\n`));\n                }\n            }\n            else {\n                controller.enqueue(Buffer.from(`\\r\\n--${boundary}--\\r\\n`));\n                controller.close();\n            }\n        },\n    });\n}\nfunction getNormalizedFile(name, blob, fileName) {\n    Object.defineProperty(blob, 'name', {\n        configurable: true,\n        enumerable: true,\n        value: fileName || blob.name || name,\n    });\n    return blob;\n}\nfunction isBlob(value) {\n    return value?.arrayBuffer != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9Gb3JtRGF0YS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsNkJBQTZCO0FBQzdCLDRCQUE0QixtQkFBTyxDQUFDLDBJQUFxQjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxTQUFTO0FBQ2pFO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLG9EQUFvRCxTQUFTO0FBQzdEO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRixRQUFRLElBQUk7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQyxZQUFZLFdBQVc7QUFDakU7QUFDQSxvRkFBb0YsUUFBUSxJQUFJLEdBQUcsYUFBYTtBQUNoSCxvRUFBb0UseUNBQXlDO0FBQzdHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxTQUFTO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxTQUFTO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxTQUFTO0FBQ2pFO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL0Zvcm1EYXRhLmpzPzliYjEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsRm9ybURhdGEgPSB2b2lkIDA7XG5leHBvcnRzLmdldFN0cmVhbUZyb21Gb3JtRGF0YSA9IGdldFN0cmVhbUZyb21Gb3JtRGF0YTtcbmNvbnN0IFJlYWRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9SZWFkYWJsZVN0cmVhbS5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsRm9ybURhdGEge1xuICAgIG1hcCA9IG5ldyBNYXAoKTtcbiAgICBhcHBlbmQobmFtZSwgdmFsdWUsIGZpbGVOYW1lKSB7XG4gICAgICAgIGxldCB2YWx1ZXMgPSB0aGlzLm1hcC5nZXQobmFtZSk7XG4gICAgICAgIGlmICghdmFsdWVzKSB7XG4gICAgICAgICAgICB2YWx1ZXMgPSBbXTtcbiAgICAgICAgICAgIHRoaXMubWFwLnNldChuYW1lLCB2YWx1ZXMpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGVudHJ5ID0gaXNCbG9iKHZhbHVlKVxuICAgICAgICAgICAgPyBnZXROb3JtYWxpemVkRmlsZShuYW1lLCB2YWx1ZSwgZmlsZU5hbWUpXG4gICAgICAgICAgICA6IHZhbHVlO1xuICAgICAgICB2YWx1ZXMucHVzaChlbnRyeSk7XG4gICAgfVxuICAgIGRlbGV0ZShuYW1lKSB7XG4gICAgICAgIHRoaXMubWFwLmRlbGV0ZShuYW1lKTtcbiAgICB9XG4gICAgZ2V0KG5hbWUpIHtcbiAgICAgICAgY29uc3QgdmFsdWVzID0gdGhpcy5tYXAuZ2V0KG5hbWUpO1xuICAgICAgICByZXR1cm4gdmFsdWVzID8gdmFsdWVzWzBdIDogbnVsbDtcbiAgICB9XG4gICAgZ2V0QWxsKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmdldChuYW1lKSB8fCBbXTtcbiAgICB9XG4gICAgaGFzKG5hbWUpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubWFwLmhhcyhuYW1lKTtcbiAgICB9XG4gICAgc2V0KG5hbWUsIHZhbHVlLCBmaWxlTmFtZSkge1xuICAgICAgICBjb25zdCBlbnRyeSA9IGlzQmxvYih2YWx1ZSlcbiAgICAgICAgICAgID8gZ2V0Tm9ybWFsaXplZEZpbGUobmFtZSwgdmFsdWUsIGZpbGVOYW1lKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICAgICAgdGhpcy5tYXAuc2V0KG5hbWUsIFtlbnRyeV0pO1xuICAgIH1cbiAgICAqW1N5bWJvbC5pdGVyYXRvcl0oKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVzXSBvZiB0aGlzLm1hcCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBba2V5LCB2YWx1ZV07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZW50cmllcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXNbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgIH1cbiAgICBrZXlzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5tYXAua2V5cygpO1xuICAgIH1cbiAgICAqdmFsdWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IHZhbHVlcyBvZiB0aGlzLm1hcC52YWx1ZXMoKSkge1xuICAgICAgICAgICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCB2YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHRoaXMpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKHZhbHVlLCBrZXksIHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbEZvcm1EYXRhID0gUG9ueWZpbGxGb3JtRGF0YTtcbmZ1bmN0aW9uIGdldFN0cmVhbUZyb21Gb3JtRGF0YShmb3JtRGF0YSwgYm91bmRhcnkgPSAnLS0tJykge1xuICAgIGNvbnN0IGVudHJpZXMgPSBbXTtcbiAgICBsZXQgc2VudEluaXRpYWxIZWFkZXIgPSBmYWxzZTtcbiAgICByZXR1cm4gbmV3IFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbSh7XG4gICAgICAgIHN0YXJ0OiBjb250cm9sbGVyID0+IHtcbiAgICAgICAgICAgIGZvcm1EYXRhLmZvckVhY2goKHZhbHVlLCBrZXkpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXNlbnRJbml0aWFsSGVhZGVyKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgLS0ke2JvdW5kYXJ5fVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgc2VudEluaXRpYWxIZWFkZXIgPSB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbnRyaWVzLnB1c2goW2tleSwgdmFsdWVdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKCFzZW50SW5pdGlhbEhlYWRlcikge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgLS0ke2JvdW5kYXJ5fS0tXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuY2xvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgcHVsbDogYXN5bmMgKGNvbnRyb2xsZXIpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGVudHJ5ID0gZW50cmllcy5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKGVudHJ5KSB7XG4gICAgICAgICAgICAgICAgY29uc3QgW2tleSwgdmFsdWVdID0gZW50cnk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9XCIke2tleX1cIlxcclxcblxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKHZhbHVlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBsZXQgZmlsZW5hbWVQYXJ0ID0gJyc7XG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWx1ZS5uYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxlbmFtZVBhcnQgPSBgOyBmaWxlbmFtZT1cIiR7dmFsdWUubmFtZX1cImA7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBDb250ZW50LURpc3Bvc2l0aW9uOiBmb3JtLWRhdGE7IG5hbWU9XCIke2tleX1cIiR7ZmlsZW5hbWVQYXJ0fVxcclxcbmApKTtcbiAgICAgICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBDb250ZW50LVR5cGU6ICR7dmFsdWUudHlwZSB8fCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ31cXHJcXG5cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVudHJ5U3RyZWFtID0gdmFsdWUuc3RyZWFtKCk7XG4gICAgICAgICAgICAgICAgICAgIGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2YgZW50cnlTdHJlYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShjaHVuayk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGVudHJpZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xsZXIuZW5xdWV1ZShCdWZmZXIuZnJvbShgXFxyXFxuLS0ke2JvdW5kYXJ5fS0tXFxyXFxuYCkpO1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBjb250cm9sbGVyLmVucXVldWUoQnVmZmVyLmZyb20oYFxcclxcbi0tJHtib3VuZGFyeX1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKEJ1ZmZlci5mcm9tKGBcXHJcXG4tLSR7Ym91bmRhcnl9LS1cXHJcXG5gKSk7XG4gICAgICAgICAgICAgICAgY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gZ2V0Tm9ybWFsaXplZEZpbGUobmFtZSwgYmxvYiwgZmlsZU5hbWUpIHtcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkoYmxvYiwgJ25hbWUnLCB7XG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgdmFsdWU6IGZpbGVOYW1lIHx8IGJsb2IubmFtZSB8fCBuYW1lLFxuICAgIH0pO1xuICAgIHJldHVybiBibG9iO1xufVxuZnVuY3Rpb24gaXNCbG9iKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5hcnJheUJ1ZmZlciAhPSBudWxsO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillHeaders = void 0;\nexports.isHeadersLike = isHeadersLike;\nconst util_1 = __webpack_require__(/*! util */ \"util\");\nfunction isHeadersLike(headers) {\n    return headers?.get && headers?.forEach;\n}\nclass PonyfillHeaders {\n    headersInit;\n    _map;\n    objectNormalizedKeysOfHeadersInit = [];\n    objectOriginalKeysOfHeadersInit = [];\n    _setCookies = [];\n    constructor(headersInit) {\n        this.headersInit = headersInit;\n    }\n    // perf: we don't need to build `this.map` for Requests, as we can access the headers directly\n    _get(key) {\n        const normalized = key.toLowerCase();\n        if (normalized === 'set-cookie') {\n            return this._setCookies.join(', ');\n        }\n        // If the map is built, reuse it\n        if (this._map) {\n            return this._map.get(normalized) || null;\n        }\n        // If the map is not built, try to get the value from the this.headersInit\n        if (this.headersInit == null) {\n            return null;\n        }\n        if (Array.isArray(this.headersInit)) {\n            return this.headersInit.find(header => header[0].toLowerCase() === normalized)?.[1] || null;\n        }\n        else if (isHeadersLike(this.headersInit)) {\n            return this.headersInit.get(normalized);\n        }\n        else {\n            const initValue = this.headersInit[key] || this.headersInit[normalized];\n            if (initValue != null) {\n                return initValue;\n            }\n            if (!this.objectNormalizedKeysOfHeadersInit.length) {\n                Object.keys(this.headersInit).forEach(k => {\n                    this.objectOriginalKeysOfHeadersInit.push(k);\n                    this.objectNormalizedKeysOfHeadersInit.push(k.toLowerCase());\n                });\n            }\n            const index = this.objectNormalizedKeysOfHeadersInit.indexOf(normalized);\n            if (index === -1) {\n                return null;\n            }\n            const originalKey = this.objectOriginalKeysOfHeadersInit[index];\n            return this.headersInit[originalKey];\n        }\n    }\n    // perf: Build the map of headers lazily, only when we need to access all headers or write to it.\n    // I could do a getter here, but I'm too lazy to type `getter`.\n    getMap() {\n        if (!this._map) {\n            if (this.headersInit != null) {\n                if (Array.isArray(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach(([key, value]) => {\n                        const normalizedKey = key.toLowerCase();\n                        if (normalizedKey === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(normalizedKey, value);\n                    });\n                }\n                else if (isHeadersLike(this.headersInit)) {\n                    this._map = new Map();\n                    this.headersInit.forEach((value, key) => {\n                        if (key === 'set-cookie') {\n                            this._setCookies.push(value);\n                            return;\n                        }\n                        this._map.set(key, value);\n                    });\n                }\n                else {\n                    this._map = new Map();\n                    for (const initKey in this.headersInit) {\n                        const initValue = this.headersInit[initKey];\n                        if (initValue != null) {\n                            const normalizedKey = initKey.toLowerCase();\n                            if (normalizedKey === 'set-cookie') {\n                                this._setCookies.push(initValue);\n                                continue;\n                            }\n                            this._map.set(normalizedKey, initValue);\n                        }\n                    }\n                }\n            }\n            else {\n                this._map = new Map();\n            }\n        }\n        return this._map;\n    }\n    append(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies.push(value);\n            return;\n        }\n        const existingValue = this.getMap().get(key);\n        const finalValue = existingValue ? `${existingValue}, ${value}` : value;\n        this.getMap().set(key, finalValue);\n    }\n    get(name) {\n        const value = this._get(name);\n        if (value == null) {\n            return null;\n        }\n        return value;\n    }\n    has(name) {\n        if (name === 'set-cookie') {\n            return this._setCookies.length > 0;\n        }\n        return !!this._get(name); // we might need to check if header exists and not just check if it's not nullable\n    }\n    set(name, value) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [value];\n            return;\n        }\n        this.getMap().set(key, value);\n    }\n    delete(name) {\n        const key = name.toLowerCase();\n        if (key === 'set-cookie') {\n            this._setCookies = [];\n            return;\n        }\n        this.getMap().delete(key);\n    }\n    forEach(callback) {\n        this._setCookies.forEach(setCookie => {\n            callback(setCookie, 'set-cookie', this);\n        });\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    this.headersInit.forEach(([key, value]) => {\n                        callback(value, key, this);\n                    });\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    this.headersInit.forEach(callback);\n                    return;\n                }\n                Object.entries(this.headersInit).forEach(([key, value]) => {\n                    if (value != null) {\n                        callback(value, key, this);\n                    }\n                });\n            }\n            return;\n        }\n        this.getMap().forEach((value, key) => {\n            callback(value, key, this);\n        });\n    }\n    *keys() {\n        if (this._setCookies.length) {\n            yield 'set-cookie';\n        }\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([key]) => key)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.keys();\n                    return;\n                }\n                yield* Object.keys(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().keys();\n    }\n    *values() {\n        yield* this._setCookies;\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit.map(([, value]) => value)[Symbol.iterator]();\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.values();\n                    return;\n                }\n                yield* Object.values(this.headersInit)[Symbol.iterator]();\n                return;\n            }\n        }\n        yield* this.getMap().values();\n    }\n    *entries() {\n        yield* this._setCookies.map(cookie => ['set-cookie', cookie]);\n        if (!this._map) {\n            if (this.headersInit) {\n                if (Array.isArray(this.headersInit)) {\n                    yield* this.headersInit;\n                    return;\n                }\n                if (isHeadersLike(this.headersInit)) {\n                    yield* this.headersInit.entries();\n                    return;\n                }\n                yield* Object.entries(this.headersInit);\n                return;\n            }\n        }\n        yield* this.getMap().entries();\n    }\n    getSetCookie() {\n        return this._setCookies;\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    [Symbol.for('nodejs.util.inspect.custom')]() {\n        const record = {};\n        this.forEach((value, key) => {\n            if (key === 'set-cookie') {\n                record['set-cookie'] = this._setCookies;\n            }\n            else {\n                record[key] = value.includes(',') ? value.split(',').map(el => el.trim()) : value;\n            }\n        });\n        return `Headers ${(0, util_1.inspect)(record)}`;\n    }\n}\nexports.PonyfillHeaders = PonyfillHeaders;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillReadableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction createController(desiredSize, readable) {\n    let chunks = [];\n    let _closed = false;\n    let flushed = false;\n    return {\n        desiredSize,\n        enqueue(chunk) {\n            const buf = typeof chunk === 'string' ? Buffer.from(chunk) : chunk;\n            if (!flushed) {\n                chunks.push(buf);\n            }\n            else {\n                readable.push(buf);\n            }\n        },\n        close() {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.push(null);\n            _closed = true;\n        },\n        error(error) {\n            if (chunks.length > 0) {\n                this._flush();\n            }\n            readable.destroy(error);\n        },\n        get _closed() {\n            return _closed;\n        },\n        _flush() {\n            flushed = true;\n            if (chunks.length > 0) {\n                const concatenated = chunks.length > 1 ? Buffer.concat(chunks) : chunks[0];\n                readable.push(concatenated);\n                chunks = [];\n            }\n        },\n    };\n}\nfunction isNodeReadable(obj) {\n    return obj?.read != null;\n}\nfunction isReadableStream(obj) {\n    return obj?.getReader != null;\n}\nclass PonyfillReadableStream {\n    readable;\n    constructor(underlyingSource) {\n        if (underlyingSource instanceof PonyfillReadableStream && underlyingSource.readable != null) {\n            this.readable = underlyingSource.readable;\n        }\n        else if (isNodeReadable(underlyingSource)) {\n            this.readable = underlyingSource;\n        }\n        else if (isReadableStream(underlyingSource)) {\n            this.readable = stream_1.Readable.fromWeb(underlyingSource);\n        }\n        else {\n            let started = false;\n            let ongoing = false;\n            this.readable = new stream_1.Readable({\n                read(desiredSize) {\n                    if (ongoing) {\n                        return;\n                    }\n                    ongoing = true;\n                    return Promise.resolve().then(async () => {\n                        if (!started) {\n                            const controller = createController(desiredSize, this);\n                            started = true;\n                            await underlyingSource?.start?.(controller);\n                            controller._flush();\n                            if (controller._closed) {\n                                return;\n                            }\n                        }\n                        const controller = createController(desiredSize, this);\n                        await underlyingSource?.pull?.(controller);\n                        controller._flush();\n                        ongoing = false;\n                    });\n                },\n                destroy(err, callback) {\n                    if (underlyingSource?.cancel) {\n                        try {\n                            const res$ = underlyingSource.cancel(err);\n                            if (res$?.then) {\n                                return res$.then(() => {\n                                    callback(null);\n                                }, err => {\n                                    callback(err);\n                                });\n                            }\n                        }\n                        catch (err) {\n                            callback(err);\n                            return;\n                        }\n                    }\n                    callback(null);\n                },\n            });\n        }\n    }\n    cancel(reason) {\n        this.readable.destroy(reason);\n        return new Promise(resolve => this.readable.once('end', resolve));\n    }\n    locked = false;\n    getReader(_options) {\n        const iterator = this.readable[Symbol.asyncIterator]();\n        this.locked = true;\n        return {\n            read() {\n                return iterator.next();\n            },\n            releaseLock: () => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return();\n                    if (retResult$.then) {\n                        retResult$.then(() => {\n                            this.locked = false;\n                        });\n                        return;\n                    }\n                }\n                this.locked = false;\n            },\n            cancel: reason => {\n                if (iterator.return) {\n                    const retResult$ = iterator.return(reason);\n                    if (retResult$.then) {\n                        return retResult$.then(() => {\n                            this.locked = false;\n                        });\n                    }\n                }\n                this.locked = false;\n                return (0, utils_js_1.fakePromise)(undefined);\n            },\n            closed: new Promise((resolve, reject) => {\n                this.readable.once('end', resolve);\n                this.readable.once('error', reject);\n            }),\n        };\n    }\n    [Symbol.asyncIterator]() {\n        return this.readable[Symbol.asyncIterator]();\n    }\n    tee() {\n        throw new Error('Not implemented');\n    }\n    pipeTo(destination) {\n        if (isPonyfillWritableStream(destination)) {\n            return new Promise((resolve, reject) => {\n                this.readable.pipe(destination.writable);\n                destination.writable.once('finish', resolve);\n                destination.writable.once('error', reject);\n            });\n        }\n        else {\n            const writer = destination.getWriter();\n            return Promise.resolve().then(async () => {\n                try {\n                    for await (const chunk of this) {\n                        await writer.write(chunk);\n                    }\n                    await writer.close();\n                }\n                catch (err) {\n                    await writer.abort(err);\n                }\n            });\n        }\n    }\n    pipeThrough({ writable, readable, }) {\n        this.pipeTo(writable);\n        return readable;\n    }\n    static [Symbol.hasInstance](instance) {\n        return isReadableStream(instance);\n    }\n}\nexports.PonyfillReadableStream = PonyfillReadableStream;\nfunction isPonyfillWritableStream(obj) {\n    return obj?.writable != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Request.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Request.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillRequest = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nfunction isRequest(input) {\n    return input[Symbol.toStringTag] === 'Request';\n}\nfunction isURL(obj) {\n    return obj?.href != null;\n}\nclass PonyfillRequest extends Body_js_1.PonyfillBody {\n    constructor(input, options) {\n        let url;\n        let bodyInit = null;\n        let requestInit;\n        if (typeof input === 'string') {\n            url = input;\n        }\n        else if (isURL(input)) {\n            url = input.toString();\n        }\n        else if (isRequest(input)) {\n            url = input.url;\n            bodyInit = input.body;\n            requestInit = input;\n        }\n        if (options != null) {\n            bodyInit = options.body || null;\n            requestInit = options;\n        }\n        super(bodyInit, options);\n        this.cache = requestInit?.cache || 'default';\n        this.credentials = requestInit?.credentials || 'same-origin';\n        this.headers =\n            requestInit?.headers && (0, Headers_js_1.isHeadersLike)(requestInit.headers)\n                ? requestInit.headers\n                : new Headers_js_1.PonyfillHeaders(requestInit?.headers);\n        this.integrity = requestInit?.integrity || '';\n        this.keepalive = requestInit?.keepalive != null ? requestInit?.keepalive : false;\n        this.method = requestInit?.method?.toUpperCase() || 'GET';\n        this.mode = requestInit?.mode || 'cors';\n        this.redirect = requestInit?.redirect || 'follow';\n        this.referrer = requestInit?.referrer || 'about:client';\n        this.referrerPolicy = requestInit?.referrerPolicy || 'no-referrer';\n        this._signal = requestInit?.signal;\n        this.headersSerializer = requestInit?.headersSerializer;\n        this.duplex = requestInit?.duplex || 'half';\n        this.url = url || '';\n        this.destination = 'document';\n        this.priority = 'auto';\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.handleContentLengthHeader(true);\n        }\n        if (requestInit?.agent != null) {\n            if (requestInit.agent === false) {\n                this.agent = false;\n            }\n            else if (this.url.startsWith('http:/') && requestInit.agent instanceof http_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n            else if (this.url.startsWith('https:/') && requestInit.agent instanceof https_1.Agent) {\n                this.agent = requestInit.agent;\n            }\n        }\n    }\n    headersSerializer;\n    cache;\n    credentials;\n    destination;\n    headers;\n    integrity;\n    keepalive;\n    method;\n    mode;\n    priority;\n    redirect;\n    referrer;\n    referrerPolicy;\n    url;\n    duplex;\n    agent;\n    _signal;\n    get signal() {\n        // Create a new signal only if needed\n        // Because the creation of signal is expensive\n        if (!this._signal) {\n            this._signal = new AbortController().signal;\n        }\n        return this._signal;\n    }\n    clone() {\n        return this;\n    }\n    [Symbol.toStringTag] = 'Request';\n}\nexports.PonyfillRequest = PonyfillRequest;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9SZXF1ZXN0LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELHVCQUF1QjtBQUN2QixlQUFlLG1CQUFPLENBQUMsa0JBQU07QUFDN0IsZ0JBQWdCLG1CQUFPLENBQUMsb0JBQU87QUFDL0Isa0JBQWtCLG1CQUFPLENBQUMsc0hBQVc7QUFDckMscUJBQXFCLG1CQUFPLENBQUMsNEhBQWM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvUmVxdWVzdC5qcz82OGEwIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlcXVlc3QgPSB2b2lkIDA7XG5jb25zdCBodHRwXzEgPSByZXF1aXJlKFwiaHR0cFwiKTtcbmNvbnN0IGh0dHBzXzEgPSByZXF1aXJlKFwiaHR0cHNcIik7XG5jb25zdCBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuY29uc3QgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbmZ1bmN0aW9uIGlzUmVxdWVzdChpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dFtTeW1ib2wudG9TdHJpbmdUYWddID09PSAnUmVxdWVzdCc7XG59XG5mdW5jdGlvbiBpc1VSTChvYmopIHtcbiAgICByZXR1cm4gb2JqPy5ocmVmICE9IG51bGw7XG59XG5jbGFzcyBQb255ZmlsbFJlcXVlc3QgZXh0ZW5kcyBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5IHtcbiAgICBjb25zdHJ1Y3RvcihpbnB1dCwgb3B0aW9ucykge1xuICAgICAgICBsZXQgdXJsO1xuICAgICAgICBsZXQgYm9keUluaXQgPSBudWxsO1xuICAgICAgICBsZXQgcmVxdWVzdEluaXQ7XG4gICAgICAgIGlmICh0eXBlb2YgaW5wdXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICB1cmwgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1VSTChpbnB1dCkpIHtcbiAgICAgICAgICAgIHVybCA9IGlucHV0LnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNSZXF1ZXN0KGlucHV0KSkge1xuICAgICAgICAgICAgdXJsID0gaW5wdXQudXJsO1xuICAgICAgICAgICAgYm9keUluaXQgPSBpbnB1dC5ib2R5O1xuICAgICAgICAgICAgcmVxdWVzdEluaXQgPSBpbnB1dDtcbiAgICAgICAgfVxuICAgICAgICBpZiAob3B0aW9ucyAhPSBudWxsKSB7XG4gICAgICAgICAgICBib2R5SW5pdCA9IG9wdGlvbnMuYm9keSB8fCBudWxsO1xuICAgICAgICAgICAgcmVxdWVzdEluaXQgPSBvcHRpb25zO1xuICAgICAgICB9XG4gICAgICAgIHN1cGVyKGJvZHlJbml0LCBvcHRpb25zKTtcbiAgICAgICAgdGhpcy5jYWNoZSA9IHJlcXVlc3RJbml0Py5jYWNoZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuY3JlZGVudGlhbHMgPSByZXF1ZXN0SW5pdD8uY3JlZGVudGlhbHMgfHwgJ3NhbWUtb3JpZ2luJztcbiAgICAgICAgdGhpcy5oZWFkZXJzID1cbiAgICAgICAgICAgIHJlcXVlc3RJbml0Py5oZWFkZXJzICYmICgwLCBIZWFkZXJzX2pzXzEuaXNIZWFkZXJzTGlrZSkocmVxdWVzdEluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IHJlcXVlc3RJbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKHJlcXVlc3RJbml0Py5oZWFkZXJzKTtcbiAgICAgICAgdGhpcy5pbnRlZ3JpdHkgPSByZXF1ZXN0SW5pdD8uaW50ZWdyaXR5IHx8ICcnO1xuICAgICAgICB0aGlzLmtlZXBhbGl2ZSA9IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgIT0gbnVsbCA/IHJlcXVlc3RJbml0Py5rZWVwYWxpdmUgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5tZXRob2QgPSByZXF1ZXN0SW5pdD8ubWV0aG9kPy50b1VwcGVyQ2FzZSgpIHx8ICdHRVQnO1xuICAgICAgICB0aGlzLm1vZGUgPSByZXF1ZXN0SW5pdD8ubW9kZSB8fCAnY29ycyc7XG4gICAgICAgIHRoaXMucmVkaXJlY3QgPSByZXF1ZXN0SW5pdD8ucmVkaXJlY3QgfHwgJ2ZvbGxvdyc7XG4gICAgICAgIHRoaXMucmVmZXJyZXIgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXIgfHwgJ2Fib3V0OmNsaWVudCc7XG4gICAgICAgIHRoaXMucmVmZXJyZXJQb2xpY3kgPSByZXF1ZXN0SW5pdD8ucmVmZXJyZXJQb2xpY3kgfHwgJ25vLXJlZmVycmVyJztcbiAgICAgICAgdGhpcy5fc2lnbmFsID0gcmVxdWVzdEluaXQ/LnNpZ25hbDtcbiAgICAgICAgdGhpcy5oZWFkZXJzU2VyaWFsaXplciA9IHJlcXVlc3RJbml0Py5oZWFkZXJzU2VyaWFsaXplcjtcbiAgICAgICAgdGhpcy5kdXBsZXggPSByZXF1ZXN0SW5pdD8uZHVwbGV4IHx8ICdoYWxmJztcbiAgICAgICAgdGhpcy51cmwgPSB1cmwgfHwgJyc7XG4gICAgICAgIHRoaXMuZGVzdGluYXRpb24gPSAnZG9jdW1lbnQnO1xuICAgICAgICB0aGlzLnByaW9yaXR5ID0gJ2F1dG8nO1xuICAgICAgICBpZiAodGhpcy5tZXRob2QgIT09ICdHRVQnICYmIHRoaXMubWV0aG9kICE9PSAnSEVBRCcpIHtcbiAgICAgICAgICAgIHRoaXMuaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcih0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocmVxdWVzdEluaXQ/LmFnZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmIChyZXF1ZXN0SW5pdC5hZ2VudCA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLnVybC5zdGFydHNXaXRoKCdodHRwOi8nKSAmJiByZXF1ZXN0SW5pdC5hZ2VudCBpbnN0YW5jZW9mIGh0dHBfMS5BZ2VudCkge1xuICAgICAgICAgICAgICAgIHRoaXMuYWdlbnQgPSByZXF1ZXN0SW5pdC5hZ2VudDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMudXJsLnN0YXJ0c1dpdGgoJ2h0dHBzOi8nKSAmJiByZXF1ZXN0SW5pdC5hZ2VudCBpbnN0YW5jZW9mIGh0dHBzXzEuQWdlbnQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmFnZW50ID0gcmVxdWVzdEluaXQuYWdlbnQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGVhZGVyc1NlcmlhbGl6ZXI7XG4gICAgY2FjaGU7XG4gICAgY3JlZGVudGlhbHM7XG4gICAgZGVzdGluYXRpb247XG4gICAgaGVhZGVycztcbiAgICBpbnRlZ3JpdHk7XG4gICAga2VlcGFsaXZlO1xuICAgIG1ldGhvZDtcbiAgICBtb2RlO1xuICAgIHByaW9yaXR5O1xuICAgIHJlZGlyZWN0O1xuICAgIHJlZmVycmVyO1xuICAgIHJlZmVycmVyUG9saWN5O1xuICAgIHVybDtcbiAgICBkdXBsZXg7XG4gICAgYWdlbnQ7XG4gICAgX3NpZ25hbDtcbiAgICBnZXQgc2lnbmFsKCkge1xuICAgICAgICAvLyBDcmVhdGUgYSBuZXcgc2lnbmFsIG9ubHkgaWYgbmVlZGVkXG4gICAgICAgIC8vIEJlY2F1c2UgdGhlIGNyZWF0aW9uIG9mIHNpZ25hbCBpcyBleHBlbnNpdmVcbiAgICAgICAgaWYgKCF0aGlzLl9zaWduYWwpIHtcbiAgICAgICAgICAgIHRoaXMuX3NpZ25hbCA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKS5zaWduYWw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3NpZ25hbDtcbiAgICB9XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBbU3ltYm9sLnRvU3RyaW5nVGFnXSA9ICdSZXF1ZXN0Jztcbn1cbmV4cG9ydHMuUG9ueWZpbGxSZXF1ZXN0ID0gUG9ueWZpbGxSZXF1ZXN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Response.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Response.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillResponse = void 0;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nconst Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nconst JSON_CONTENT_TYPE = 'application/json; charset=utf-8';\nclass PonyfillResponse extends Body_js_1.PonyfillBody {\n    headers;\n    constructor(body, init) {\n        super(body || null, init);\n        this.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        this.status = init?.status || 200;\n        this.statusText = init?.statusText || http_1.STATUS_CODES[this.status] || 'OK';\n        this.url = init?.url || '';\n        this.redirected = init?.redirected || false;\n        this.type = init?.type || 'default';\n        this.handleContentLengthHeader();\n    }\n    get ok() {\n        return this.status >= 200 && this.status < 300;\n    }\n    status;\n    statusText;\n    url;\n    redirected;\n    type;\n    clone() {\n        return this;\n    }\n    static error() {\n        return new PonyfillResponse(null, {\n            status: 500,\n            statusText: 'Internal Server Error',\n        });\n    }\n    static redirect(url, status = 302) {\n        if (status < 300 || status > 399) {\n            throw new RangeError('Invalid status code');\n        }\n        return new PonyfillResponse(null, {\n            headers: {\n                location: url,\n            },\n            status,\n        });\n    }\n    static json(data, init = {}) {\n        init.headers =\n            init?.headers && (0, Headers_js_1.isHeadersLike)(init.headers)\n                ? init.headers\n                : new Headers_js_1.PonyfillHeaders(init?.headers);\n        if (!init.headers.has('content-type')) {\n            init.headers.set('content-type', JSON_CONTENT_TYPE);\n        }\n        return new PonyfillResponse(JSON.stringify(data), init);\n    }\n}\nexports.PonyfillResponse = PonyfillResponse;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9SZXNwb25zZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCx3QkFBd0I7QUFDeEIsZUFBZSxtQkFBTyxDQUFDLGtCQUFNO0FBQzdCLGtCQUFrQixtQkFBTyxDQUFDLHNIQUFXO0FBQ3JDLHFCQUFxQixtQkFBTyxDQUFDLDRIQUFjO0FBQzNDLDZDQUE2QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBLFNBQVM7QUFDVDtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9SZXNwb25zZS5qcz80YmM4Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb255ZmlsbFJlc3BvbnNlID0gdm9pZCAwO1xuY29uc3QgaHR0cF8xID0gcmVxdWlyZShcImh0dHBcIik7XG5jb25zdCBCb2R5X2pzXzEgPSByZXF1aXJlKFwiLi9Cb2R5LmpzXCIpO1xuY29uc3QgSGVhZGVyc19qc18xID0gcmVxdWlyZShcIi4vSGVhZGVycy5qc1wiKTtcbmNvbnN0IEpTT05fQ09OVEVOVF9UWVBFID0gJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9dXRmLTgnO1xuY2xhc3MgUG9ueWZpbGxSZXNwb25zZSBleHRlbmRzIEJvZHlfanNfMS5Qb255ZmlsbEJvZHkge1xuICAgIGhlYWRlcnM7XG4gICAgY29uc3RydWN0b3IoYm9keSwgaW5pdCkge1xuICAgICAgICBzdXBlcihib2R5IHx8IG51bGwsIGluaXQpO1xuICAgICAgICB0aGlzLmhlYWRlcnMgPVxuICAgICAgICAgICAgaW5pdD8uaGVhZGVycyAmJiAoMCwgSGVhZGVyc19qc18xLmlzSGVhZGVyc0xpa2UpKGluaXQuaGVhZGVycylcbiAgICAgICAgICAgICAgICA/IGluaXQuaGVhZGVyc1xuICAgICAgICAgICAgICAgIDogbmV3IEhlYWRlcnNfanNfMS5Qb255ZmlsbEhlYWRlcnMoaW5pdD8uaGVhZGVycyk7XG4gICAgICAgIHRoaXMuc3RhdHVzID0gaW5pdD8uc3RhdHVzIHx8IDIwMDtcbiAgICAgICAgdGhpcy5zdGF0dXNUZXh0ID0gaW5pdD8uc3RhdHVzVGV4dCB8fCBodHRwXzEuU1RBVFVTX0NPREVTW3RoaXMuc3RhdHVzXSB8fCAnT0snO1xuICAgICAgICB0aGlzLnVybCA9IGluaXQ/LnVybCB8fCAnJztcbiAgICAgICAgdGhpcy5yZWRpcmVjdGVkID0gaW5pdD8ucmVkaXJlY3RlZCB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy50eXBlID0gaW5pdD8udHlwZSB8fCAnZGVmYXVsdCc7XG4gICAgICAgIHRoaXMuaGFuZGxlQ29udGVudExlbmd0aEhlYWRlcigpO1xuICAgIH1cbiAgICBnZXQgb2soKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnN0YXR1cyA+PSAyMDAgJiYgdGhpcy5zdGF0dXMgPCAzMDA7XG4gICAgfVxuICAgIHN0YXR1cztcbiAgICBzdGF0dXNUZXh0O1xuICAgIHVybDtcbiAgICByZWRpcmVjdGVkO1xuICAgIHR5cGU7XG4gICAgY2xvbmUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH1cbiAgICBzdGF0aWMgZXJyb3IoKSB7XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDUwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdJbnRlcm5hbCBTZXJ2ZXIgRXJyb3InLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RhdGljIHJlZGlyZWN0KHVybCwgc3RhdHVzID0gMzAyKSB7XG4gICAgICAgIGlmIChzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID4gMzk5KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgUmFuZ2VFcnJvcignSW52YWxpZCBzdGF0dXMgY29kZScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgUG9ueWZpbGxSZXNwb25zZShudWxsLCB7XG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgbG9jYXRpb246IHVybCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzdGF0dXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdGF0aWMganNvbihkYXRhLCBpbml0ID0ge30pIHtcbiAgICAgICAgaW5pdC5oZWFkZXJzID1cbiAgICAgICAgICAgIGluaXQ/LmhlYWRlcnMgJiYgKDAsIEhlYWRlcnNfanNfMS5pc0hlYWRlcnNMaWtlKShpbml0LmhlYWRlcnMpXG4gICAgICAgICAgICAgICAgPyBpbml0LmhlYWRlcnNcbiAgICAgICAgICAgICAgICA6IG5ldyBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzKGluaXQ/LmhlYWRlcnMpO1xuICAgICAgICBpZiAoIWluaXQuaGVhZGVycy5oYXMoJ2NvbnRlbnQtdHlwZScpKSB7XG4gICAgICAgICAgICBpbml0LmhlYWRlcnMuc2V0KCdjb250ZW50LXR5cGUnLCBKU09OX0NPTlRFTlRfVFlQRSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBQb255ZmlsbFJlc3BvbnNlKEpTT04uc3RyaW5naWZ5KGRhdGEpLCBpbml0KTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsUmVzcG9uc2UgPSBQb255ZmlsbFJlc3BvbnNlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTextDecoder = exports.PonyfillTextEncoder = void 0;\nexports.PonyfillBtoa = PonyfillBtoa;\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillTextEncoder {\n    encoding;\n    constructor(encoding = 'utf-8') {\n        this.encoding = encoding;\n    }\n    encode(input) {\n        return Buffer.from(input, this.encoding);\n    }\n    encodeInto(source, destination) {\n        const buffer = this.encode(source);\n        const copied = buffer.copy(destination);\n        return {\n            read: copied,\n            written: copied,\n        };\n    }\n}\nexports.PonyfillTextEncoder = PonyfillTextEncoder;\nclass PonyfillTextDecoder {\n    encoding;\n    fatal = false;\n    ignoreBOM = false;\n    constructor(encoding = 'utf-8', options) {\n        this.encoding = encoding;\n        if (options) {\n            this.fatal = options.fatal || false;\n            this.ignoreBOM = options.ignoreBOM || false;\n        }\n    }\n    decode(input) {\n        if (Buffer.isBuffer(input)) {\n            return input.toString(this.encoding);\n        }\n        if ((0, utils_js_1.isArrayBufferView)(input)) {\n            return Buffer.from(input.buffer, input.byteOffset, input.byteLength).toString(this.encoding);\n        }\n        return Buffer.from(input).toString(this.encoding);\n    }\n}\nexports.PonyfillTextDecoder = PonyfillTextDecoder;\nfunction PonyfillBtoa(input) {\n    return Buffer.from(input, 'binary').toString('base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9UZXh0RW5jb2RlckRlY29kZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsMkJBQTJCLEdBQUcsMkJBQTJCO0FBQ3pELG9CQUFvQjtBQUNwQixtQkFBbUIsbUJBQU8sQ0FBQyx3SEFBWTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVGV4dEVuY29kZXJEZWNvZGVyLmpzP2Q2MDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVGV4dERlY29kZXIgPSBleHBvcnRzLlBvbnlmaWxsVGV4dEVuY29kZXIgPSB2b2lkIDA7XG5leHBvcnRzLlBvbnlmaWxsQnRvYSA9IFBvbnlmaWxsQnRvYTtcbmNvbnN0IHV0aWxzX2pzXzEgPSByZXF1aXJlKFwiLi91dGlscy5qc1wiKTtcbmNsYXNzIFBvbnlmaWxsVGV4dEVuY29kZXIge1xuICAgIGVuY29kaW5nO1xuICAgIGNvbnN0cnVjdG9yKGVuY29kaW5nID0gJ3V0Zi04Jykge1xuICAgICAgICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7XG4gICAgfVxuICAgIGVuY29kZShpbnB1dCkge1xuICAgICAgICByZXR1cm4gQnVmZmVyLmZyb20oaW5wdXQsIHRoaXMuZW5jb2RpbmcpO1xuICAgIH1cbiAgICBlbmNvZGVJbnRvKHNvdXJjZSwgZGVzdGluYXRpb24pIHtcbiAgICAgICAgY29uc3QgYnVmZmVyID0gdGhpcy5lbmNvZGUoc291cmNlKTtcbiAgICAgICAgY29uc3QgY29waWVkID0gYnVmZmVyLmNvcHkoZGVzdGluYXRpb24pO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcmVhZDogY29waWVkLFxuICAgICAgICAgICAgd3JpdHRlbjogY29waWVkLFxuICAgICAgICB9O1xuICAgIH1cbn1cbmV4cG9ydHMuUG9ueWZpbGxUZXh0RW5jb2RlciA9IFBvbnlmaWxsVGV4dEVuY29kZXI7XG5jbGFzcyBQb255ZmlsbFRleHREZWNvZGVyIHtcbiAgICBlbmNvZGluZztcbiAgICBmYXRhbCA9IGZhbHNlO1xuICAgIGlnbm9yZUJPTSA9IGZhbHNlO1xuICAgIGNvbnN0cnVjdG9yKGVuY29kaW5nID0gJ3V0Zi04Jywgb3B0aW9ucykge1xuICAgICAgICB0aGlzLmVuY29kaW5nID0gZW5jb2Rpbmc7XG4gICAgICAgIGlmIChvcHRpb25zKSB7XG4gICAgICAgICAgICB0aGlzLmZhdGFsID0gb3B0aW9ucy5mYXRhbCB8fCBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuaWdub3JlQk9NID0gb3B0aW9ucy5pZ25vcmVCT00gfHwgZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGVjb2RlKGlucHV0KSB7XG4gICAgICAgIGlmIChCdWZmZXIuaXNCdWZmZXIoaW5wdXQpKSB7XG4gICAgICAgICAgICByZXR1cm4gaW5wdXQudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCgwLCB1dGlsc19qc18xLmlzQXJyYXlCdWZmZXJWaWV3KShpbnB1dCkpIHtcbiAgICAgICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dC5idWZmZXIsIGlucHV0LmJ5dGVPZmZzZXQsIGlucHV0LmJ5dGVMZW5ndGgpLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCkudG9TdHJpbmcodGhpcy5lbmNvZGluZyk7XG4gICAgfVxufVxuZXhwb3J0cy5Qb255ZmlsbFRleHREZWNvZGVyID0gUG9ueWZpbGxUZXh0RGVjb2RlcjtcbmZ1bmN0aW9uIFBvbnlmaWxsQnRvYShpbnB1dCkge1xuICAgIHJldHVybiBCdWZmZXIuZnJvbShpbnB1dCwgJ2JpbmFyeScpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillTransformStream = void 0;\nconst node_stream_1 = __webpack_require__(/*! node:stream */ \"node:stream\");\nconst ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nconst WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nclass PonyfillTransformStream {\n    transform;\n    writable;\n    readable;\n    constructor(transformer) {\n        if (transformer instanceof node_stream_1.Transform) {\n            this.transform = transformer;\n        }\n        else if (transformer) {\n            const controller = {\n                enqueue(chunk) {\n                    transform.push(chunk);\n                },\n                error(reason) {\n                    transform.destroy(reason);\n                },\n                terminate() {\n                    transform.end();\n                },\n                get desiredSize() {\n                    return transform.writableLength;\n                },\n            };\n            const transform = new node_stream_1.Transform({\n                read() { },\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = transformer.transform?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    try {\n                        const result = transformer.flush?.(controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n            });\n            this.transform = transform;\n        }\n        else {\n            this.transform = new node_stream_1.Transform();\n        }\n        this.writable = new WritableStream_js_1.PonyfillWritableStream(this.transform);\n        this.readable = new ReadableStream_js_1.PonyfillReadableStream(this.transform);\n    }\n}\nexports.PonyfillTransformStream = PonyfillTransformStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9UcmFuc2Zvcm1TdHJlYW0uanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLHNCQUFzQixtQkFBTyxDQUFDLGdDQUFhO0FBQzNDLDRCQUE0QixtQkFBTyxDQUFDLDBJQUFxQjtBQUN6RCw0QkFBNEIsbUJBQU8sQ0FBQywwSUFBcUI7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9UcmFuc2Zvcm1TdHJlYW0uanM/NmI3ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0gPSB2b2lkIDA7XG5jb25zdCBub2RlX3N0cmVhbV8xID0gcmVxdWlyZShcIm5vZGU6c3RyZWFtXCIpO1xuY29uc3QgUmVhZGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1JlYWRhYmxlU3RyZWFtLmpzXCIpO1xuY29uc3QgV3JpdGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1dyaXRhYmxlU3RyZWFtLmpzXCIpO1xuY2xhc3MgUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW0ge1xuICAgIHRyYW5zZm9ybTtcbiAgICB3cml0YWJsZTtcbiAgICByZWFkYWJsZTtcbiAgICBjb25zdHJ1Y3Rvcih0cmFuc2Zvcm1lcikge1xuICAgICAgICBpZiAodHJhbnNmb3JtZXIgaW5zdGFuY2VvZiBub2RlX3N0cmVhbV8xLlRyYW5zZm9ybSkge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1lcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0cmFuc2Zvcm1lcikge1xuICAgICAgICAgICAgY29uc3QgY29udHJvbGxlciA9IHtcbiAgICAgICAgICAgICAgICBlbnF1ZXVlKGNodW5rKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybS5wdXNoKGNodW5rKTtcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGVycm9yKHJlYXNvbikge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0uZGVzdHJveShyZWFzb24pO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgdGVybWluYXRlKCkge1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm0uZW5kKCk7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICBnZXQgZGVzaXJlZFNpemUoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cmFuc2Zvcm0ud3JpdGFibGVMZW5ndGg7XG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjb25zdCB0cmFuc2Zvcm0gPSBuZXcgbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0oe1xuICAgICAgICAgICAgICAgIHJlYWQoKSB7IH0sXG4gICAgICAgICAgICAgICAgd3JpdGUoY2h1bmssIF9lbmNvZGluZywgY2FsbGJhY2spIHtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHRyYW5zZm9ybWVyLnRyYW5zZm9ybT8uKGNodW5rLCBjb250cm9sbGVyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKGVycik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIGZpbmFsKGNhbGxiYWNrKSB7XG4gICAgICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHQgPSB0cmFuc2Zvcm1lci5mbHVzaD8uKGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgZXJyID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soZXJyKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMudHJhbnNmb3JtID0gdHJhbnNmb3JtO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy50cmFuc2Zvcm0gPSBuZXcgbm9kZV9zdHJlYW1fMS5UcmFuc2Zvcm0oKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLndyaXRhYmxlID0gbmV3IFdyaXRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxXcml0YWJsZVN0cmVhbSh0aGlzLnRyYW5zZm9ybSk7XG4gICAgICAgIHRoaXMucmVhZGFibGUgPSBuZXcgUmVhZGFibGVTdHJlYW1fanNfMS5Qb255ZmlsbFJlYWRhYmxlU3RyZWFtKHRoaXMudHJhbnNmb3JtKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtID0gUG9ueWZpbGxUcmFuc2Zvcm1TdHJlYW07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URL.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URL.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURL = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst buffer_1 = __webpack_require__(/*! buffer */ \"buffer\");\nconst crypto_1 = __webpack_require__(/*! crypto */ \"crypto\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nconst fast_url_parser_1 = tslib_1.__importDefault(__webpack_require__(/*! @kamilkisiela/fast-url-parser */ \"(ssr)/../node_modules/@kamilkisiela/fast-url-parser/src/urlparser.js\"));\nconst URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nfast_url_parser_1.default.queryString = fast_querystring_1.default;\nclass PonyfillURL extends fast_url_parser_1.default {\n    constructor(url, base) {\n        super();\n        if (url.startsWith('data:')) {\n            this.protocol = 'data:';\n            this.pathname = url.slice('data:'.length);\n            return;\n        }\n        this.parse(url, false);\n        if (base) {\n            const baseParsed = typeof base === 'string' ? new PonyfillURL(base) : base;\n            this.protocol = this.protocol || baseParsed.protocol;\n            this.host = this.host || baseParsed.host;\n            this.pathname = this.pathname || baseParsed.pathname;\n        }\n    }\n    get origin() {\n        return `${this.protocol}//${this.host}`;\n    }\n    _searchParams;\n    get searchParams() {\n        if (!this._searchParams) {\n            this._searchParams = new URLSearchParams_js_1.PonyfillURLSearchParams(this.query);\n        }\n        return this._searchParams;\n    }\n    get username() {\n        return this.auth?.split(':')[0] || '';\n    }\n    set username(value) {\n        this.auth = `${value}:${this.password}`;\n    }\n    get password() {\n        return this.auth?.split(':')[1] || '';\n    }\n    set password(value) {\n        this.auth = `${this.username}:${value}`;\n    }\n    toString() {\n        return this.format();\n    }\n    toJSON() {\n        return this.toString();\n    }\n    static blobRegistry = new Map();\n    static createObjectURL(blob) {\n        const blobUrl = `blob:whatwgnode:${(0, crypto_1.randomUUID)()}`;\n        this.blobRegistry.set(blobUrl, blob);\n        return blobUrl;\n    }\n    static resolveObjectURL(url) {\n        if (!this.blobRegistry.has(url)) {\n            URL.revokeObjectURL(url);\n        }\n        else {\n            this.blobRegistry.delete(url);\n        }\n    }\n    static getBlobFromURL(url) {\n        return (this.blobRegistry.get(url) || (0, buffer_1.resolveObjectURL)(url));\n    }\n}\nexports.PonyfillURL = PonyfillURL;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9VUkwuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsbUJBQW1CO0FBQ25CLGdCQUFnQixtQkFBTyxDQUFDLHdEQUFPO0FBQy9CLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLGlCQUFpQixtQkFBTyxDQUFDLHNCQUFRO0FBQ2pDLG1EQUFtRCxtQkFBTyxDQUFDLDZFQUFrQjtBQUM3RSxrREFBa0QsbUJBQU8sQ0FBQywyR0FBK0I7QUFDekYsNkJBQTZCLG1CQUFPLENBQUMsNElBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixjQUFjLElBQUksVUFBVTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsTUFBTSxHQUFHLGNBQWM7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixjQUFjLEdBQUcsTUFBTTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkMsMkJBQTJCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9VUkwuanM/MDkyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9ueWZpbGxVUkwgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgYnVmZmVyXzEgPSByZXF1aXJlKFwiYnVmZmVyXCIpO1xuY29uc3QgY3J5cHRvXzEgPSByZXF1aXJlKFwiY3J5cHRvXCIpO1xuY29uc3QgZmFzdF9xdWVyeXN0cmluZ18xID0gdHNsaWJfMS5fX2ltcG9ydERlZmF1bHQocmVxdWlyZShcImZhc3QtcXVlcnlzdHJpbmdcIikpO1xuY29uc3QgZmFzdF91cmxfcGFyc2VyXzEgPSB0c2xpYl8xLl9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiQGthbWlsa2lzaWVsYS9mYXN0LXVybC1wYXJzZXJcIikpO1xuY29uc3QgVVJMU2VhcmNoUGFyYW1zX2pzXzEgPSByZXF1aXJlKFwiLi9VUkxTZWFyY2hQYXJhbXMuanNcIik7XG5mYXN0X3VybF9wYXJzZXJfMS5kZWZhdWx0LnF1ZXJ5U3RyaW5nID0gZmFzdF9xdWVyeXN0cmluZ18xLmRlZmF1bHQ7XG5jbGFzcyBQb255ZmlsbFVSTCBleHRlbmRzIGZhc3RfdXJsX3BhcnNlcl8xLmRlZmF1bHQge1xuICAgIGNvbnN0cnVjdG9yKHVybCwgYmFzZSkge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICBpZiAodXJsLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgICAgIHRoaXMucHJvdG9jb2wgPSAnZGF0YTonO1xuICAgICAgICAgICAgdGhpcy5wYXRobmFtZSA9IHVybC5zbGljZSgnZGF0YTonLmxlbmd0aCk7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wYXJzZSh1cmwsIGZhbHNlKTtcbiAgICAgICAgaWYgKGJhc2UpIHtcbiAgICAgICAgICAgIGNvbnN0IGJhc2VQYXJzZWQgPSB0eXBlb2YgYmFzZSA9PT0gJ3N0cmluZycgPyBuZXcgUG9ueWZpbGxVUkwoYmFzZSkgOiBiYXNlO1xuICAgICAgICAgICAgdGhpcy5wcm90b2NvbCA9IHRoaXMucHJvdG9jb2wgfHwgYmFzZVBhcnNlZC5wcm90b2NvbDtcbiAgICAgICAgICAgIHRoaXMuaG9zdCA9IHRoaXMuaG9zdCB8fCBiYXNlUGFyc2VkLmhvc3Q7XG4gICAgICAgICAgICB0aGlzLnBhdGhuYW1lID0gdGhpcy5wYXRobmFtZSB8fCBiYXNlUGFyc2VkLnBhdGhuYW1lO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBvcmlnaW4oKSB7XG4gICAgICAgIHJldHVybiBgJHt0aGlzLnByb3RvY29sfS8vJHt0aGlzLmhvc3R9YDtcbiAgICB9XG4gICAgX3NlYXJjaFBhcmFtcztcbiAgICBnZXQgc2VhcmNoUGFyYW1zKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3NlYXJjaFBhcmFtcykge1xuICAgICAgICAgICAgdGhpcy5fc2VhcmNoUGFyYW1zID0gbmV3IFVSTFNlYXJjaFBhcmFtc19qc18xLlBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zKHRoaXMucXVlcnkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLl9zZWFyY2hQYXJhbXM7XG4gICAgfVxuICAgIGdldCB1c2VybmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXV0aD8uc3BsaXQoJzonKVswXSB8fCAnJztcbiAgICB9XG4gICAgc2V0IHVzZXJuYW1lKHZhbHVlKSB7XG4gICAgICAgIHRoaXMuYXV0aCA9IGAke3ZhbHVlfToke3RoaXMucGFzc3dvcmR9YDtcbiAgICB9XG4gICAgZ2V0IHBhc3N3b3JkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdXRoPy5zcGxpdCgnOicpWzFdIHx8ICcnO1xuICAgIH1cbiAgICBzZXQgcGFzc3dvcmQodmFsdWUpIHtcbiAgICAgICAgdGhpcy5hdXRoID0gYCR7dGhpcy51c2VybmFtZX06JHt2YWx1ZX1gO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0KCk7XG4gICAgfVxuICAgIHRvSlNPTigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudG9TdHJpbmcoKTtcbiAgICB9XG4gICAgc3RhdGljIGJsb2JSZWdpc3RyeSA9IG5ldyBNYXAoKTtcbiAgICBzdGF0aWMgY3JlYXRlT2JqZWN0VVJMKGJsb2IpIHtcbiAgICAgICAgY29uc3QgYmxvYlVybCA9IGBibG9iOndoYXR3Z25vZGU6JHsoMCwgY3J5cHRvXzEucmFuZG9tVVVJRCkoKX1gO1xuICAgICAgICB0aGlzLmJsb2JSZWdpc3RyeS5zZXQoYmxvYlVybCwgYmxvYik7XG4gICAgICAgIHJldHVybiBibG9iVXJsO1xuICAgIH1cbiAgICBzdGF0aWMgcmVzb2x2ZU9iamVjdFVSTCh1cmwpIHtcbiAgICAgICAgaWYgKCF0aGlzLmJsb2JSZWdpc3RyeS5oYXModXJsKSkge1xuICAgICAgICAgICAgVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5ibG9iUmVnaXN0cnkuZGVsZXRlKHVybCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGdldEJsb2JGcm9tVVJMKHVybCkge1xuICAgICAgICByZXR1cm4gKHRoaXMuYmxvYlJlZ2lzdHJ5LmdldCh1cmwpIHx8ICgwLCBidWZmZXJfMS5yZXNvbHZlT2JqZWN0VVJMKSh1cmwpKTtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVVJMID0gUG9ueWZpbGxVUkw7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillURLSearchParams = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../node_modules/tslib/tslib.es6.mjs\");\nconst fast_querystring_1 = tslib_1.__importDefault(__webpack_require__(/*! fast-querystring */ \"(ssr)/../node_modules/fast-querystring/lib/index.js\"));\nfunction isURLSearchParams(value) {\n    return value?.entries != null;\n}\nclass PonyfillURLSearchParams {\n    params;\n    constructor(init) {\n        if (init) {\n            if (typeof init === 'string') {\n                this.params = fast_querystring_1.default.parse(init);\n            }\n            else if (Array.isArray(init)) {\n                this.params = {};\n                for (const [key, value] of init) {\n                    this.params[key] = value;\n                }\n            }\n            else if (isURLSearchParams(init)) {\n                this.params = {};\n                for (const [key, value] of init.entries()) {\n                    this.params[key] = value;\n                }\n            }\n            else {\n                this.params = init;\n            }\n        }\n        else {\n            this.params = {};\n        }\n    }\n    append(name, value) {\n        const existingValue = this.params[name];\n        const finalValue = existingValue ? `${existingValue},${value}` : value;\n        this.params[name] = finalValue;\n    }\n    delete(name) {\n        delete this.params[name];\n    }\n    get(name) {\n        const value = this.params[name];\n        if (Array.isArray(value)) {\n            return value[0] || null;\n        }\n        return value || null;\n    }\n    getAll(name) {\n        const value = this.params[name];\n        if (!Array.isArray(value)) {\n            return value ? [value] : [];\n        }\n        return value;\n    }\n    has(name) {\n        return name in this.params;\n    }\n    set(name, value) {\n        this.params[name] = value;\n    }\n    sort() {\n        const sortedKeys = Object.keys(this.params).sort();\n        const sortedParams = {};\n        for (const key of sortedKeys) {\n            sortedParams[key] = this.params[key];\n        }\n        this.params = sortedParams;\n    }\n    toString() {\n        return fast_querystring_1.default.stringify(this.params);\n    }\n    *keys() {\n        for (const key in this.params) {\n            yield key;\n        }\n    }\n    *entries() {\n        for (const key of this.keys()) {\n            const value = this.params[key];\n            if (Array.isArray(value)) {\n                for (const item of value) {\n                    yield [key, item];\n                }\n            }\n            else {\n                yield [key, value];\n            }\n        }\n    }\n    *values() {\n        for (const [, value] of this) {\n            yield value;\n        }\n    }\n    [Symbol.iterator]() {\n        return this.entries();\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key, this);\n        }\n    }\n    get size() {\n        return Object.keys(this.params).length;\n    }\n}\nexports.PonyfillURLSearchParams = PonyfillURLSearchParams;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9VUkxTZWFyY2hQYXJhbXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsK0JBQStCO0FBQy9CLGdCQUFnQixtQkFBTyxDQUFDLHdEQUFPO0FBQy9CLG1EQUFtRCxtQkFBTyxDQUFDLDZFQUFrQjtBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOENBQThDLGNBQWMsR0FBRyxNQUFNO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL25vZGVfbW9kdWxlcy9Ad2hhdHdnLW5vZGUvbm9kZS1mZXRjaC9janMvVVJMU2VhcmNoUGFyYW1zLmpzPzRlNTEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLlBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGZhc3RfcXVlcnlzdHJpbmdfMSA9IHRzbGliXzEuX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJmYXN0LXF1ZXJ5c3RyaW5nXCIpKTtcbmZ1bmN0aW9uIGlzVVJMU2VhcmNoUGFyYW1zKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5lbnRyaWVzICE9IG51bGw7XG59XG5jbGFzcyBQb255ZmlsbFVSTFNlYXJjaFBhcmFtcyB7XG4gICAgcGFyYW1zO1xuICAgIGNvbnN0cnVjdG9yKGluaXQpIHtcbiAgICAgICAgaWYgKGluaXQpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaW5pdCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IGZhc3RfcXVlcnlzdHJpbmdfMS5kZWZhdWx0LnBhcnNlKGluaXQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShpbml0KSkge1xuICAgICAgICAgICAgICAgIHRoaXMucGFyYW1zID0ge307XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaW5pdCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnBhcmFtc1trZXldID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNVUkxTZWFyY2hQYXJhbXMoaW5pdCkpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIGluaXQuZW50cmllcygpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucGFyYW1zW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLnBhcmFtcyA9IGluaXQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnBhcmFtcyA9IHt9O1xuICAgICAgICB9XG4gICAgfVxuICAgIGFwcGVuZChuYW1lLCB2YWx1ZSkge1xuICAgICAgICBjb25zdCBleGlzdGluZ1ZhbHVlID0gdGhpcy5wYXJhbXNbbmFtZV07XG4gICAgICAgIGNvbnN0IGZpbmFsVmFsdWUgPSBleGlzdGluZ1ZhbHVlID8gYCR7ZXhpc3RpbmdWYWx1ZX0sJHt2YWx1ZX1gIDogdmFsdWU7XG4gICAgICAgIHRoaXMucGFyYW1zW25hbWVdID0gZmluYWxWYWx1ZTtcbiAgICB9XG4gICAgZGVsZXRlKG5hbWUpIHtcbiAgICAgICAgZGVsZXRlIHRoaXMucGFyYW1zW25hbWVdO1xuICAgIH1cbiAgICBnZXQobmFtZSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucGFyYW1zW25hbWVdO1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZVswXSB8fCBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB2YWx1ZSB8fCBudWxsO1xuICAgIH1cbiAgICBnZXRBbGwobmFtZSkge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHRoaXMucGFyYW1zW25hbWVdO1xuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICByZXR1cm4gdmFsdWUgPyBbdmFsdWVdIDogW107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBoYXMobmFtZSkge1xuICAgICAgICByZXR1cm4gbmFtZSBpbiB0aGlzLnBhcmFtcztcbiAgICB9XG4gICAgc2V0KG5hbWUsIHZhbHVlKSB7XG4gICAgICAgIHRoaXMucGFyYW1zW25hbWVdID0gdmFsdWU7XG4gICAgfVxuICAgIHNvcnQoKSB7XG4gICAgICAgIGNvbnN0IHNvcnRlZEtleXMgPSBPYmplY3Qua2V5cyh0aGlzLnBhcmFtcykuc29ydCgpO1xuICAgICAgICBjb25zdCBzb3J0ZWRQYXJhbXMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2Ygc29ydGVkS2V5cykge1xuICAgICAgICAgICAgc29ydGVkUGFyYW1zW2tleV0gPSB0aGlzLnBhcmFtc1trZXldO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucGFyYW1zID0gc29ydGVkUGFyYW1zO1xuICAgIH1cbiAgICB0b1N0cmluZygpIHtcbiAgICAgICAgcmV0dXJuIGZhc3RfcXVlcnlzdHJpbmdfMS5kZWZhdWx0LnN0cmluZ2lmeSh0aGlzLnBhcmFtcyk7XG4gICAgfVxuICAgICprZXlzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB0aGlzLnBhcmFtcykge1xuICAgICAgICAgICAgeWllbGQga2V5O1xuICAgICAgICB9XG4gICAgfVxuICAgICplbnRyaWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiB0aGlzLmtleXMoKSkge1xuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSB0aGlzLnBhcmFtc1trZXldO1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIGl0ZW1dO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHlpZWxkIFtrZXksIHZhbHVlXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAqdmFsdWVzKCkge1xuICAgICAgICBmb3IgKGNvbnN0IFssIHZhbHVlXSBvZiB0aGlzKSB7XG4gICAgICAgICAgICB5aWVsZCB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBbU3ltYm9sLml0ZXJhdG9yXSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZW50cmllcygpO1xuICAgIH1cbiAgICBmb3JFYWNoKGNhbGxiYWNrKSB7XG4gICAgICAgIGZvciAoY29uc3QgW2tleSwgdmFsdWVdIG9mIHRoaXMpIHtcbiAgICAgICAgICAgIGNhbGxiYWNrKHZhbHVlLCBrZXksIHRoaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGdldCBzaXplKCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmtleXModGhpcy5wYXJhbXMpLmxlbmd0aDtcbiAgICB9XG59XG5leHBvcnRzLlBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zID0gUG9ueWZpbGxVUkxTZWFyY2hQYXJhbXM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PonyfillWritableStream = void 0;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nclass PonyfillWritableStream {\n    writable;\n    constructor(underlyingSink) {\n        if (underlyingSink instanceof stream_1.Writable) {\n            this.writable = underlyingSink;\n        }\n        else if (underlyingSink) {\n            const writable = new stream_1.Writable({\n                write(chunk, _encoding, callback) {\n                    try {\n                        const result = underlyingSink.write?.(chunk, controller);\n                        if (result instanceof Promise) {\n                            result.then(() => {\n                                callback();\n                            }, err => {\n                                callback(err);\n                            });\n                        }\n                        else {\n                            callback();\n                        }\n                    }\n                    catch (err) {\n                        callback(err);\n                    }\n                },\n                final(callback) {\n                    const result = underlyingSink.close?.();\n                    if (result instanceof Promise) {\n                        result.then(() => {\n                            callback();\n                        }, err => {\n                            callback(err);\n                        });\n                    }\n                    else {\n                        callback();\n                    }\n                },\n            });\n            this.writable = writable;\n            let onabort;\n            let reason;\n            const controller = {\n                signal: {\n                    any(signals) {\n                        return AbortSignal.any([...signals]);\n                    },\n                    get reason() {\n                        return reason;\n                    },\n                    get aborted() {\n                        return writable.destroyed;\n                    },\n                    addEventListener: (_event, eventListener) => {\n                        writable.once('error', eventListener);\n                        writable.once('close', eventListener);\n                    },\n                    removeEventListener: (_event, eventListener) => {\n                        writable.off('error', eventListener);\n                        writable.off('close', eventListener);\n                    },\n                    dispatchEvent: (_event) => {\n                        return false;\n                    },\n                    get onabort() {\n                        return onabort;\n                    },\n                    set onabort(value) {\n                        if (onabort) {\n                            this.removeEventListener('abort', onabort);\n                        }\n                        onabort = value;\n                        if (onabort) {\n                            this.addEventListener('abort', onabort);\n                        }\n                    },\n                    throwIfAborted() {\n                        if (writable.destroyed) {\n                            throw reason;\n                        }\n                    },\n                },\n                error: e => {\n                    this.writable.destroy(e);\n                },\n            };\n            this.writable.once('error', err => {\n                reason = err;\n            });\n        }\n        else {\n            this.writable = new stream_1.Writable();\n        }\n    }\n    getWriter() {\n        const writable = this.writable;\n        return {\n            closed: new Promise(resolve => {\n                writable.once('close', () => {\n                    resolve(undefined);\n                });\n            }),\n            get desiredSize() {\n                return writable.writableLength;\n            },\n            ready: new Promise(resolve => {\n                writable.once('drain', () => {\n                    resolve(undefined);\n                });\n            }),\n            releaseLock() {\n                // no-op\n            },\n            write(chunk) {\n                if (chunk == null) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    writable.write(chunk, (err) => {\n                        if (err) {\n                            reject(err);\n                        }\n                        else {\n                            resolve();\n                        }\n                    });\n                });\n            },\n            close() {\n                if (!writable.errored && writable.closed) {\n                    return (0, utils_js_1.fakePromise)(undefined);\n                }\n                return new Promise((resolve, reject) => {\n                    if (writable.errored) {\n                        reject(writable.errored);\n                    }\n                    else {\n                        writable.end((err) => {\n                            if (err) {\n                                reject(err);\n                            }\n                            else {\n                                resolve();\n                            }\n                        });\n                    }\n                });\n            },\n            abort(reason) {\n                return new Promise(resolve => {\n                    writable.destroy(reason);\n                    writable.once('close', resolve);\n                });\n            },\n        };\n    }\n    close() {\n        if (!this.writable.errored && this.writable.closed) {\n            return (0, utils_js_1.fakePromise)(undefined);\n        }\n        return new Promise((resolve, reject) => {\n            if (this.writable.errored) {\n                reject(this.writable.errored);\n            }\n            else {\n                this.writable.end((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        resolve();\n                    }\n                });\n            }\n        });\n    }\n    abort(reason) {\n        return new Promise(resolve => {\n            this.writable.destroy(reason);\n            this.writable.once('close', resolve);\n        });\n    }\n    locked = false;\n}\nexports.PonyfillWritableStream = PonyfillWritableStream;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchPonyfill = fetchPonyfill;\nconst fs_1 = __webpack_require__(/*! fs */ \"fs\");\nconst url_1 = __webpack_require__(/*! url */ \"url\");\nconst fetchCurl_js_1 = __webpack_require__(/*! ./fetchCurl.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\");\nconst fetchNodeHttp_js_1 = __webpack_require__(/*! ./fetchNodeHttp.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nconst BASE64_SUFFIX = ';base64';\nfunction getResponseForFile(url) {\n    const path = (0, url_1.fileURLToPath)(url);\n    const readable = (0, fs_1.createReadStream)(path);\n    return new Response_js_1.PonyfillResponse(readable);\n}\nfunction getResponseForDataUri(url) {\n    const [mimeType = 'text/plain', ...datas] = url.substring(5).split(',');\n    const data = decodeURIComponent(datas.join(','));\n    if (mimeType.endsWith(BASE64_SUFFIX)) {\n        const buffer = Buffer.from(data, 'base64url');\n        const realMimeType = mimeType.slice(0, -BASE64_SUFFIX.length);\n        return new Response_js_1.PonyfillResponse(buffer, {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n                'content-type': realMimeType,\n            },\n        });\n    }\n    return new Response_js_1.PonyfillResponse(data, {\n        status: 200,\n        statusText: 'OK',\n        headers: {\n            'content-type': mimeType,\n        },\n    });\n}\nfunction getResponseForBlob(url) {\n    const blob = URL_js_1.PonyfillURL.getBlobFromURL(url);\n    if (!blob) {\n        throw new TypeError('Invalid Blob URL');\n    }\n    return new Response_js_1.PonyfillResponse(blob, {\n        status: 200,\n        headers: {\n            'content-type': blob.type,\n            'content-length': blob.size.toString(),\n        },\n    });\n}\nfunction isURL(obj) {\n    return obj != null && obj.href != null;\n}\nfunction fetchPonyfill(info, init) {\n    if (typeof info === 'string' || isURL(info)) {\n        const ponyfillRequest = new Request_js_1.PonyfillRequest(info, init);\n        return fetchPonyfill(ponyfillRequest);\n    }\n    const fetchRequest = info;\n    if (fetchRequest.url.startsWith('data:')) {\n        const response = getResponseForDataUri(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('file:')) {\n        const response = getResponseForFile(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (fetchRequest.url.startsWith('blob:')) {\n        const response = getResponseForBlob(fetchRequest.url);\n        return (0, utils_js_1.fakePromise)(response);\n    }\n    if (globalThis.libcurl && !fetchRequest.agent) {\n        return (0, fetchCurl_js_1.fetchCurl)(fetchRequest);\n    }\n    return (0, fetchNodeHttp_js_1.fetchNodeHttp)(fetchRequest);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9mZXRjaC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsYUFBYSxtQkFBTyxDQUFDLGNBQUk7QUFDekIsY0FBYyxtQkFBTyxDQUFDLGdCQUFLO0FBQzNCLHVCQUF1QixtQkFBTyxDQUFDLGdJQUFnQjtBQUMvQywyQkFBMkIsbUJBQU8sQ0FBQyx3SUFBb0I7QUFDdkQscUJBQXFCLG1CQUFPLENBQUMsNEhBQWM7QUFDM0Msc0JBQXNCLG1CQUFPLENBQUMsOEhBQWU7QUFDN0MsaUJBQWlCLG1CQUFPLENBQUMsb0hBQVU7QUFDbkMsbUJBQW1CLG1CQUFPLENBQUMsd0hBQVk7QUFDdkMsd0JBQXdCO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9mZXRjaC5qcz8wYWY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5mZXRjaFBvbnlmaWxsID0gZmV0Y2hQb255ZmlsbDtcbmNvbnN0IGZzXzEgPSByZXF1aXJlKFwiZnNcIik7XG5jb25zdCB1cmxfMSA9IHJlcXVpcmUoXCJ1cmxcIik7XG5jb25zdCBmZXRjaEN1cmxfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoQ3VybC5qc1wiKTtcbmNvbnN0IGZldGNoTm9kZUh0dHBfanNfMSA9IHJlcXVpcmUoXCIuL2ZldGNoTm9kZUh0dHAuanNcIik7XG5jb25zdCBSZXF1ZXN0X2pzXzEgPSByZXF1aXJlKFwiLi9SZXF1ZXN0LmpzXCIpO1xuY29uc3QgUmVzcG9uc2VfanNfMSA9IHJlcXVpcmUoXCIuL1Jlc3BvbnNlLmpzXCIpO1xuY29uc3QgVVJMX2pzXzEgPSByZXF1aXJlKFwiLi9VUkwuanNcIik7XG5jb25zdCB1dGlsc19qc18xID0gcmVxdWlyZShcIi4vdXRpbHMuanNcIik7XG5jb25zdCBCQVNFNjRfU1VGRklYID0gJztiYXNlNjQnO1xuZnVuY3Rpb24gZ2V0UmVzcG9uc2VGb3JGaWxlKHVybCkge1xuICAgIGNvbnN0IHBhdGggPSAoMCwgdXJsXzEuZmlsZVVSTFRvUGF0aCkodXJsKTtcbiAgICBjb25zdCByZWFkYWJsZSA9ICgwLCBmc18xLmNyZWF0ZVJlYWRTdHJlYW0pKHBhdGgpO1xuICAgIHJldHVybiBuZXcgUmVzcG9uc2VfanNfMS5Qb255ZmlsbFJlc3BvbnNlKHJlYWRhYmxlKTtcbn1cbmZ1bmN0aW9uIGdldFJlc3BvbnNlRm9yRGF0YVVyaSh1cmwpIHtcbiAgICBjb25zdCBbbWltZVR5cGUgPSAndGV4dC9wbGFpbicsIC4uLmRhdGFzXSA9IHVybC5zdWJzdHJpbmcoNSkuc3BsaXQoJywnKTtcbiAgICBjb25zdCBkYXRhID0gZGVjb2RlVVJJQ29tcG9uZW50KGRhdGFzLmpvaW4oJywnKSk7XG4gICAgaWYgKG1pbWVUeXBlLmVuZHNXaXRoKEJBU0U2NF9TVUZGSVgpKSB7XG4gICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGRhdGEsICdiYXNlNjR1cmwnKTtcbiAgICAgICAgY29uc3QgcmVhbE1pbWVUeXBlID0gbWltZVR5cGUuc2xpY2UoMCwgLUJBU0U2NF9TVUZGSVgubGVuZ3RoKTtcbiAgICAgICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYnVmZmVyLCB7XG4gICAgICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgICAgIHN0YXR1c1RleHQ6ICdPSycsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IHJlYWxNaW1lVHlwZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IFJlc3BvbnNlX2pzXzEuUG9ueWZpbGxSZXNwb25zZShkYXRhLCB7XG4gICAgICAgIHN0YXR1czogMjAwLFxuICAgICAgICBzdGF0dXNUZXh0OiAnT0snLFxuICAgICAgICBoZWFkZXJzOiB7XG4gICAgICAgICAgICAnY29udGVudC10eXBlJzogbWltZVR5cGUsXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXRSZXNwb25zZUZvckJsb2IodXJsKSB7XG4gICAgY29uc3QgYmxvYiA9IFVSTF9qc18xLlBvbnlmaWxsVVJMLmdldEJsb2JGcm9tVVJMKHVybCk7XG4gICAgaWYgKCFibG9iKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0ludmFsaWQgQmxvYiBVUkwnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2UoYmxvYiwge1xuICAgICAgICBzdGF0dXM6IDIwMCxcbiAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6IGJsb2IudHlwZSxcbiAgICAgICAgICAgICdjb250ZW50LWxlbmd0aCc6IGJsb2Iuc2l6ZS50b1N0cmluZygpLFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZnVuY3Rpb24gaXNVUkwob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5ocmVmICE9IG51bGw7XG59XG5mdW5jdGlvbiBmZXRjaFBvbnlmaWxsKGluZm8sIGluaXQpIHtcbiAgICBpZiAodHlwZW9mIGluZm8gPT09ICdzdHJpbmcnIHx8IGlzVVJMKGluZm8pKSB7XG4gICAgICAgIGNvbnN0IHBvbnlmaWxsUmVxdWVzdCA9IG5ldyBSZXF1ZXN0X2pzXzEuUG9ueWZpbGxSZXF1ZXN0KGluZm8sIGluaXQpO1xuICAgICAgICByZXR1cm4gZmV0Y2hQb255ZmlsbChwb255ZmlsbFJlcXVlc3QpO1xuICAgIH1cbiAgICBjb25zdCBmZXRjaFJlcXVlc3QgPSBpbmZvO1xuICAgIGlmIChmZXRjaFJlcXVlc3QudXJsLnN0YXJ0c1dpdGgoJ2RhdGE6JykpIHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBnZXRSZXNwb25zZUZvckRhdGFVcmkoZmV0Y2hSZXF1ZXN0LnVybCk7XG4gICAgICAgIHJldHVybiAoMCwgdXRpbHNfanNfMS5mYWtlUHJvbWlzZSkocmVzcG9uc2UpO1xuICAgIH1cbiAgICBpZiAoZmV0Y2hSZXF1ZXN0LnVybC5zdGFydHNXaXRoKCdmaWxlOicpKSB7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gZ2V0UmVzcG9uc2VGb3JGaWxlKGZldGNoUmVxdWVzdC51cmwpO1xuICAgICAgICByZXR1cm4gKDAsIHV0aWxzX2pzXzEuZmFrZVByb21pc2UpKHJlc3BvbnNlKTtcbiAgICB9XG4gICAgaWYgKGZldGNoUmVxdWVzdC51cmwuc3RhcnRzV2l0aCgnYmxvYjonKSkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGdldFJlc3BvbnNlRm9yQmxvYihmZXRjaFJlcXVlc3QudXJsKTtcbiAgICAgICAgcmV0dXJuICgwLCB1dGlsc19qc18xLmZha2VQcm9taXNlKShyZXNwb25zZSk7XG4gICAgfVxuICAgIGlmIChnbG9iYWxUaGlzLmxpYmN1cmwgJiYgIWZldGNoUmVxdWVzdC5hZ2VudCkge1xuICAgICAgICByZXR1cm4gKDAsIGZldGNoQ3VybF9qc18xLmZldGNoQ3VybCkoZmV0Y2hSZXF1ZXN0KTtcbiAgICB9XG4gICAgcmV0dXJuICgwLCBmZXRjaE5vZGVIdHRwX2pzXzEuZmV0Y2hOb2RlSHR0cCkoZmV0Y2hSZXF1ZXN0KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchCurl = fetchCurl;\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst tls_1 = __webpack_require__(/*! tls */ \"tls\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction fetchCurl(fetchRequest) {\n    const { Curl, CurlFeature, CurlPause, CurlProgressFunc } = globalThis['libcurl'];\n    const curlHandle = new Curl();\n    curlHandle.enable(CurlFeature.NoDataParsing);\n    curlHandle.setOpt('URL', fetchRequest.url);\n    if (process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0') {\n        curlHandle.setOpt('SSL_VERIFYPEER', false);\n    }\n    if (process.env.NODE_EXTRA_CA_CERTS) {\n        curlHandle.setOpt('CAINFO', process.env.NODE_EXTRA_CA_CERTS);\n    }\n    else {\n        curlHandle.setOpt('CAINFO_BLOB', tls_1.rootCertificates.join('\\n'));\n    }\n    curlHandle.enable(CurlFeature.StreamResponse);\n    curlHandle.setStreamProgressCallback(function () {\n        return fetchRequest['_signal']?.aborted\n            ? process.env.DEBUG\n                ? CurlProgressFunc.Continue\n                : 1\n            : 0;\n    });\n    if (fetchRequest['bodyType'] === 'String') {\n        curlHandle.setOpt('POSTFIELDS', fetchRequest['bodyInit']);\n    }\n    else {\n        const nodeReadable = (fetchRequest.body != null\n            ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                ? fetchRequest.body\n                : stream_1.Readable.from(fetchRequest.body)\n            : null);\n        if (nodeReadable) {\n            curlHandle.setOpt('UPLOAD', true);\n            curlHandle.setUploadStream(nodeReadable);\n        }\n    }\n    if (process.env.DEBUG) {\n        curlHandle.setOpt('VERBOSE', true);\n    }\n    curlHandle.setOpt('TRANSFER_ENCODING', false);\n    curlHandle.setOpt('HTTP_TRANSFER_DECODING', true);\n    curlHandle.setOpt('FOLLOWLOCATION', fetchRequest.redirect === 'follow');\n    curlHandle.setOpt('MAXREDIRS', 20);\n    curlHandle.setOpt('ACCEPT_ENCODING', '');\n    curlHandle.setOpt('CUSTOMREQUEST', fetchRequest.method);\n    const headersSerializer = fetchRequest.headersSerializer || utils_js_1.defaultHeadersSerializer;\n    let size;\n    const curlHeaders = headersSerializer(fetchRequest.headers, value => {\n        size = Number(value);\n    });\n    if (size != null) {\n        curlHandle.setOpt('INFILESIZE', size);\n    }\n    curlHandle.setOpt('HTTPHEADER', curlHeaders);\n    curlHandle.enable(CurlFeature.NoHeaderParsing);\n    const deferredPromise = (0, utils_js_1.createDeferredPromise)();\n    let streamResolved;\n    if (fetchRequest['_signal']) {\n        fetchRequest['_signal'].onabort = () => {\n            if (curlHandle.isOpen) {\n                try {\n                    curlHandle.pause(CurlPause.Recv);\n                }\n                catch (e) {\n                    deferredPromise.reject(e);\n                }\n            }\n        };\n    }\n    curlHandle.once('end', function endListener() {\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('error', function errorListener(error) {\n        if (streamResolved && !streamResolved.closed && !streamResolved.destroyed) {\n            streamResolved.destroy(error);\n        }\n        else {\n            if (error.message === 'Operation was aborted by an application callback') {\n                error.message = 'The operation was aborted.';\n            }\n            deferredPromise.reject(error);\n        }\n        try {\n            curlHandle.close();\n        }\n        catch (e) {\n            deferredPromise.reject(e);\n        }\n    });\n    curlHandle.once('stream', function streamListener(stream, status, headersBuf) {\n        const outputStream = new stream_1.PassThrough();\n        stream_1.promises\n            .pipeline(stream, outputStream, {\n            end: true,\n            signal: fetchRequest['_signal'] ?? undefined,\n        })\n            .then(() => {\n            if (!stream.destroyed) {\n                stream.resume();\n            }\n        })\n            .catch(deferredPromise.reject);\n        const headersFlat = headersBuf\n            .toString('utf8')\n            .split(/\\r?\\n|\\r/g)\n            .filter(headerFilter => {\n            if (headerFilter && !headerFilter.startsWith('HTTP/')) {\n                if (fetchRequest.redirect === 'error' &&\n                    (headerFilter.includes('location') || headerFilter.includes('Location'))) {\n                    if (!stream.destroyed) {\n                        stream.resume();\n                    }\n                    outputStream.destroy();\n                    deferredPromise.reject(new Error('redirect is not allowed'));\n                }\n                return true;\n            }\n            return false;\n        });\n        const headersInit = headersFlat.map(headerFlat => headerFlat.split(/:\\s(.+)/).slice(0, 2));\n        const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n            status,\n            headers: headersInit,\n            url: curlHandle.getInfo(Curl.info.REDIRECT_URL)?.toString() || fetchRequest.url,\n            redirected: Number(curlHandle.getInfo(Curl.info.REDIRECT_COUNT)) > 0,\n        });\n        deferredPromise.resolve(ponyfillResponse);\n        streamResolved = outputStream;\n    });\n    let count = 0;\n    try {\n        count = Curl.getCount();\n    }\n    catch { }\n    if (count > 0) {\n        setImmediate(() => {\n            curlHandle.perform();\n        });\n    }\n    else {\n        curlHandle.perform();\n    }\n    return deferredPromise.promise;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchCurl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.fetchNodeHttp = fetchNodeHttp;\nconst http_1 = __webpack_require__(/*! http */ \"http\");\nconst https_1 = __webpack_require__(/*! https */ \"https\");\nconst stream_1 = __webpack_require__(/*! stream */ \"stream\");\nconst zlib_1 = __webpack_require__(/*! zlib */ \"zlib\");\nconst Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nconst Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nconst URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nconst utils_js_1 = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\");\nfunction getRequestFnForProtocol(url) {\n    if (url.startsWith('http:')) {\n        return http_1.request;\n    }\n    else if (url.startsWith('https:')) {\n        return https_1.request;\n    }\n    throw new Error(`Unsupported protocol: ${url.split(':')[0] || url}`);\n}\nfunction fetchNodeHttp(fetchRequest) {\n    return new Promise((resolve, reject) => {\n        try {\n            const requestFn = getRequestFnForProtocol(fetchRequest.url);\n            const nodeReadable = (fetchRequest.body != null\n                ? (0, utils_js_1.isNodeReadable)(fetchRequest.body)\n                    ? fetchRequest.body\n                    : stream_1.Readable.from(fetchRequest.body)\n                : null);\n            const headersSerializer = fetchRequest.headersSerializer || utils_js_1.getHeadersObj;\n            const nodeHeaders = headersSerializer(fetchRequest.headers);\n            if (nodeHeaders['accept-encoding'] == null) {\n                nodeHeaders['accept-encoding'] = 'gzip, deflate, br';\n            }\n            const nodeRequest = requestFn(fetchRequest.url, {\n                method: fetchRequest.method,\n                headers: nodeHeaders,\n                signal: fetchRequest['_signal'] ?? undefined,\n                agent: fetchRequest.agent,\n            });\n            nodeRequest.once('response', nodeResponse => {\n                let outputStream;\n                const contentEncoding = nodeResponse.headers['content-encoding'];\n                switch (contentEncoding) {\n                    case 'x-gzip':\n                    case 'gzip':\n                        outputStream = (0, zlib_1.createGunzip)();\n                        break;\n                    case 'x-deflate':\n                    case 'deflate':\n                        outputStream = (0, zlib_1.createInflate)();\n                        break;\n                    case 'x-deflate-raw':\n                    case 'deflate-raw':\n                        outputStream = (0, zlib_1.createInflateRaw)();\n                        break;\n                    case 'br':\n                        outputStream = (0, zlib_1.createBrotliDecompress)();\n                        break;\n                    default:\n                        outputStream = new stream_1.PassThrough();\n                }\n                if (nodeResponse.headers.location) {\n                    if (fetchRequest.redirect === 'error') {\n                        const redirectError = new Error('Redirects are not allowed');\n                        reject(redirectError);\n                        nodeResponse.resume();\n                        return;\n                    }\n                    if (fetchRequest.redirect === 'follow') {\n                        const redirectedUrl = new URL_js_1.PonyfillURL(nodeResponse.headers.location, fetchRequest.url);\n                        const redirectResponse$ = fetchNodeHttp(new Request_js_1.PonyfillRequest(redirectedUrl, fetchRequest));\n                        resolve(redirectResponse$.then(redirectResponse => {\n                            redirectResponse.redirected = true;\n                            return redirectResponse;\n                        }));\n                        nodeResponse.resume();\n                        return;\n                    }\n                }\n                stream_1.promises\n                    .pipeline(nodeResponse, outputStream, {\n                    signal: fetchRequest['_signal'] ?? undefined,\n                    end: true,\n                })\n                    .then(() => {\n                    if (!nodeResponse.destroyed) {\n                        nodeResponse.resume();\n                    }\n                })\n                    .catch(reject);\n                const ponyfillResponse = new Response_js_1.PonyfillResponse(outputStream, {\n                    status: nodeResponse.statusCode,\n                    statusText: nodeResponse.statusMessage,\n                    headers: nodeResponse.headers,\n                    url: fetchRequest.url,\n                });\n                resolve(ponyfillResponse);\n            });\n            nodeRequest.once('error', reject);\n            if (nodeReadable) {\n                nodeReadable.pipe(nodeRequest);\n            }\n            else {\n                nodeRequest.end();\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetchNodeHttp.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/index.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/index.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.DecompressionStream = exports.CompressionStream = exports.TransformStream = exports.WritableStream = exports.URLSearchParams = exports.URL = exports.btoa = exports.TextDecoder = exports.TextEncoder = exports.Blob = exports.FormData = exports.File = exports.ReadableStream = exports.Response = exports.Request = exports.Body = exports.Headers = exports.fetch = void 0;\nvar fetch_js_1 = __webpack_require__(/*! ./fetch.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/fetch.js\");\nObject.defineProperty(exports, \"fetch\", ({ enumerable: true, get: function () { return fetch_js_1.fetchPonyfill; } }));\nvar Headers_js_1 = __webpack_require__(/*! ./Headers.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Headers.js\");\nObject.defineProperty(exports, \"Headers\", ({ enumerable: true, get: function () { return Headers_js_1.PonyfillHeaders; } }));\nvar Body_js_1 = __webpack_require__(/*! ./Body.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Body.js\");\nObject.defineProperty(exports, \"Body\", ({ enumerable: true, get: function () { return Body_js_1.PonyfillBody; } }));\nvar Request_js_1 = __webpack_require__(/*! ./Request.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Request.js\");\nObject.defineProperty(exports, \"Request\", ({ enumerable: true, get: function () { return Request_js_1.PonyfillRequest; } }));\nvar Response_js_1 = __webpack_require__(/*! ./Response.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Response.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return Response_js_1.PonyfillResponse; } }));\nvar ReadableStream_js_1 = __webpack_require__(/*! ./ReadableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/ReadableStream.js\");\nObject.defineProperty(exports, \"ReadableStream\", ({ enumerable: true, get: function () { return ReadableStream_js_1.PonyfillReadableStream; } }));\nvar File_js_1 = __webpack_require__(/*! ./File.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/File.js\");\nObject.defineProperty(exports, \"File\", ({ enumerable: true, get: function () { return File_js_1.PonyfillFile; } }));\nvar FormData_js_1 = __webpack_require__(/*! ./FormData.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/FormData.js\");\nObject.defineProperty(exports, \"FormData\", ({ enumerable: true, get: function () { return FormData_js_1.PonyfillFormData; } }));\nvar Blob_js_1 = __webpack_require__(/*! ./Blob.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/Blob.js\");\nObject.defineProperty(exports, \"Blob\", ({ enumerable: true, get: function () { return Blob_js_1.PonyfillBlob; } }));\nvar TextEncoderDecoder_js_1 = __webpack_require__(/*! ./TextEncoderDecoder.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TextEncoderDecoder.js\");\nObject.defineProperty(exports, \"TextEncoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextEncoder; } }));\nObject.defineProperty(exports, \"TextDecoder\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillTextDecoder; } }));\nObject.defineProperty(exports, \"btoa\", ({ enumerable: true, get: function () { return TextEncoderDecoder_js_1.PonyfillBtoa; } }));\nvar URL_js_1 = __webpack_require__(/*! ./URL.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URL.js\");\nObject.defineProperty(exports, \"URL\", ({ enumerable: true, get: function () { return URL_js_1.PonyfillURL; } }));\nvar URLSearchParams_js_1 = __webpack_require__(/*! ./URLSearchParams.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/URLSearchParams.js\");\nObject.defineProperty(exports, \"URLSearchParams\", ({ enumerable: true, get: function () { return URLSearchParams_js_1.PonyfillURLSearchParams; } }));\nvar WritableStream_js_1 = __webpack_require__(/*! ./WritableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/WritableStream.js\");\nObject.defineProperty(exports, \"WritableStream\", ({ enumerable: true, get: function () { return WritableStream_js_1.PonyfillWritableStream; } }));\nvar TransformStream_js_1 = __webpack_require__(/*! ./TransformStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/TransformStream.js\");\nObject.defineProperty(exports, \"TransformStream\", ({ enumerable: true, get: function () { return TransformStream_js_1.PonyfillTransformStream; } }));\nvar CompressionStream_js_1 = __webpack_require__(/*! ./CompressionStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/CompressionStream.js\");\nObject.defineProperty(exports, \"CompressionStream\", ({ enumerable: true, get: function () { return CompressionStream_js_1.PonyfillCompressionStream; } }));\nvar DecompressionStream_js_1 = __webpack_require__(/*! ./DecompressionStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/DecompressionStream.js\");\nObject.defineProperty(exports, \"DecompressionStream\", ({ enumerable: true, get: function () { return DecompressionStream_js_1.PonyfillDecompressionStream; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCwyQkFBMkIsR0FBRyx5QkFBeUIsR0FBRyx1QkFBdUIsR0FBRyxzQkFBc0IsR0FBRyx1QkFBdUIsR0FBRyxXQUFXLEdBQUcsWUFBWSxHQUFHLG1CQUFtQixHQUFHLG1CQUFtQixHQUFHLFlBQVksR0FBRyxnQkFBZ0IsR0FBRyxZQUFZLEdBQUcsc0JBQXNCLEdBQUcsZ0JBQWdCLEdBQUcsZUFBZSxHQUFHLFlBQVksR0FBRyxlQUFlLEdBQUcsYUFBYTtBQUM3VyxpQkFBaUIsbUJBQU8sQ0FBQyx3SEFBWTtBQUNyQyx5Q0FBd0MsRUFBRSxxQ0FBcUMsb0NBQW9DLEVBQUM7QUFDcEgsbUJBQW1CLG1CQUFPLENBQUMsNEhBQWM7QUFDekMsMkNBQTBDLEVBQUUscUNBQXFDLHdDQUF3QyxFQUFDO0FBQzFILGdCQUFnQixtQkFBTyxDQUFDLHNIQUFXO0FBQ25DLHdDQUF1QyxFQUFFLHFDQUFxQyxrQ0FBa0MsRUFBQztBQUNqSCxtQkFBbUIsbUJBQU8sQ0FBQyw0SEFBYztBQUN6QywyQ0FBMEMsRUFBRSxxQ0FBcUMsd0NBQXdDLEVBQUM7QUFDMUgsb0JBQW9CLG1CQUFPLENBQUMsOEhBQWU7QUFDM0MsNENBQTJDLEVBQUUscUNBQXFDLDBDQUEwQyxFQUFDO0FBQzdILDBCQUEwQixtQkFBTyxDQUFDLDBJQUFxQjtBQUN2RCxrREFBaUQsRUFBRSxxQ0FBcUMsc0RBQXNELEVBQUM7QUFDL0ksZ0JBQWdCLG1CQUFPLENBQUMsc0hBQVc7QUFDbkMsd0NBQXVDLEVBQUUscUNBQXFDLGtDQUFrQyxFQUFDO0FBQ2pILG9CQUFvQixtQkFBTyxDQUFDLDhIQUFlO0FBQzNDLDRDQUEyQyxFQUFFLHFDQUFxQywwQ0FBMEMsRUFBQztBQUM3SCxnQkFBZ0IsbUJBQU8sQ0FBQyxzSEFBVztBQUNuQyx3Q0FBdUMsRUFBRSxxQ0FBcUMsa0NBQWtDLEVBQUM7QUFDakgsOEJBQThCLG1CQUFPLENBQUMsa0pBQXlCO0FBQy9ELCtDQUE4QyxFQUFFLHFDQUFxQyx1REFBdUQsRUFBQztBQUM3SSwrQ0FBOEMsRUFBRSxxQ0FBcUMsdURBQXVELEVBQUM7QUFDN0ksd0NBQXVDLEVBQUUscUNBQXFDLGdEQUFnRCxFQUFDO0FBQy9ILGVBQWUsbUJBQU8sQ0FBQyxvSEFBVTtBQUNqQyx1Q0FBc0MsRUFBRSxxQ0FBcUMsZ0NBQWdDLEVBQUM7QUFDOUcsMkJBQTJCLG1CQUFPLENBQUMsNElBQXNCO0FBQ3pELG1EQUFrRCxFQUFFLHFDQUFxQyx3REFBd0QsRUFBQztBQUNsSiwwQkFBMEIsbUJBQU8sQ0FBQywwSUFBcUI7QUFDdkQsa0RBQWlELEVBQUUscUNBQXFDLHNEQUFzRCxFQUFDO0FBQy9JLDJCQUEyQixtQkFBTyxDQUFDLDRJQUFzQjtBQUN6RCxtREFBa0QsRUFBRSxxQ0FBcUMsd0RBQXdELEVBQUM7QUFDbEosNkJBQTZCLG1CQUFPLENBQUMsZ0pBQXdCO0FBQzdELHFEQUFvRCxFQUFFLHFDQUFxQyw0REFBNEQsRUFBQztBQUN4SiwrQkFBK0IsbUJBQU8sQ0FBQyxvSkFBMEI7QUFDakUsdURBQXNELEVBQUUscUNBQXFDLGdFQUFnRSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9ub2RlX21vZHVsZXMvQHdoYXR3Zy1ub2RlL25vZGUtZmV0Y2gvY2pzL2luZGV4LmpzPzhmZGMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLkRlY29tcHJlc3Npb25TdHJlYW0gPSBleHBvcnRzLkNvbXByZXNzaW9uU3RyZWFtID0gZXhwb3J0cy5UcmFuc2Zvcm1TdHJlYW0gPSBleHBvcnRzLldyaXRhYmxlU3RyZWFtID0gZXhwb3J0cy5VUkxTZWFyY2hQYXJhbXMgPSBleHBvcnRzLlVSTCA9IGV4cG9ydHMuYnRvYSA9IGV4cG9ydHMuVGV4dERlY29kZXIgPSBleHBvcnRzLlRleHRFbmNvZGVyID0gZXhwb3J0cy5CbG9iID0gZXhwb3J0cy5Gb3JtRGF0YSA9IGV4cG9ydHMuRmlsZSA9IGV4cG9ydHMuUmVhZGFibGVTdHJlYW0gPSBleHBvcnRzLlJlc3BvbnNlID0gZXhwb3J0cy5SZXF1ZXN0ID0gZXhwb3J0cy5Cb2R5ID0gZXhwb3J0cy5IZWFkZXJzID0gZXhwb3J0cy5mZXRjaCA9IHZvaWQgMDtcbnZhciBmZXRjaF9qc18xID0gcmVxdWlyZShcIi4vZmV0Y2guanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJmZXRjaFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gZmV0Y2hfanNfMS5mZXRjaFBvbnlmaWxsOyB9IH0pO1xudmFyIEhlYWRlcnNfanNfMSA9IHJlcXVpcmUoXCIuL0hlYWRlcnMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJIZWFkZXJzXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBIZWFkZXJzX2pzXzEuUG9ueWZpbGxIZWFkZXJzOyB9IH0pO1xudmFyIEJvZHlfanNfMSA9IHJlcXVpcmUoXCIuL0JvZHkuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCb2R5XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCb2R5X2pzXzEuUG9ueWZpbGxCb2R5OyB9IH0pO1xudmFyIFJlcXVlc3RfanNfMSA9IHJlcXVpcmUoXCIuL1JlcXVlc3QuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJSZXF1ZXN0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZXF1ZXN0X2pzXzEuUG9ueWZpbGxSZXF1ZXN0OyB9IH0pO1xudmFyIFJlc3BvbnNlX2pzXzEgPSByZXF1aXJlKFwiLi9SZXNwb25zZS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlJlc3BvbnNlXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBSZXNwb25zZV9qc18xLlBvbnlmaWxsUmVzcG9uc2U7IH0gfSk7XG52YXIgUmVhZGFibGVTdHJlYW1fanNfMSA9IHJlcXVpcmUoXCIuL1JlYWRhYmxlU3RyZWFtLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUmVhZGFibGVTdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFJlYWRhYmxlU3RyZWFtX2pzXzEuUG9ueWZpbGxSZWFkYWJsZVN0cmVhbTsgfSB9KTtcbnZhciBGaWxlX2pzXzEgPSByZXF1aXJlKFwiLi9GaWxlLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiRmlsZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRmlsZV9qc18xLlBvbnlmaWxsRmlsZTsgfSB9KTtcbnZhciBGb3JtRGF0YV9qc18xID0gcmVxdWlyZShcIi4vRm9ybURhdGEuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJGb3JtRGF0YVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gRm9ybURhdGFfanNfMS5Qb255ZmlsbEZvcm1EYXRhOyB9IH0pO1xudmFyIEJsb2JfanNfMSA9IHJlcXVpcmUoXCIuL0Jsb2IuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJCbG9iXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBCbG9iX2pzXzEuUG9ueWZpbGxCbG9iOyB9IH0pO1xudmFyIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xID0gcmVxdWlyZShcIi4vVGV4dEVuY29kZXJEZWNvZGVyLmpzXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiVGV4dEVuY29kZXJcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsVGV4dEVuY29kZXI7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUZXh0RGVjb2RlclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGV4dEVuY29kZXJEZWNvZGVyX2pzXzEuUG9ueWZpbGxUZXh0RGVjb2RlcjsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImJ0b2FcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRleHRFbmNvZGVyRGVjb2Rlcl9qc18xLlBvbnlmaWxsQnRvYTsgfSB9KTtcbnZhciBVUkxfanNfMSA9IHJlcXVpcmUoXCIuL1VSTC5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlVSTFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVVJMX2pzXzEuUG9ueWZpbGxVUkw7IH0gfSk7XG52YXIgVVJMU2VhcmNoUGFyYW1zX2pzXzEgPSByZXF1aXJlKFwiLi9VUkxTZWFyY2hQYXJhbXMuanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJVUkxTZWFyY2hQYXJhbXNcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFVSTFNlYXJjaFBhcmFtc19qc18xLlBvbnlmaWxsVVJMU2VhcmNoUGFyYW1zOyB9IH0pO1xudmFyIFdyaXRhYmxlU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9Xcml0YWJsZVN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIldyaXRhYmxlU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBXcml0YWJsZVN0cmVhbV9qc18xLlBvbnlmaWxsV3JpdGFibGVTdHJlYW07IH0gfSk7XG52YXIgVHJhbnNmb3JtU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9UcmFuc2Zvcm1TdHJlYW0uanNcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJUcmFuc2Zvcm1TdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIFRyYW5zZm9ybVN0cmVhbV9qc18xLlBvbnlmaWxsVHJhbnNmb3JtU3RyZWFtOyB9IH0pO1xudmFyIENvbXByZXNzaW9uU3RyZWFtX2pzXzEgPSByZXF1aXJlKFwiLi9Db21wcmVzc2lvblN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkNvbXByZXNzaW9uU3RyZWFtXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBDb21wcmVzc2lvblN0cmVhbV9qc18xLlBvbnlmaWxsQ29tcHJlc3Npb25TdHJlYW07IH0gfSk7XG52YXIgRGVjb21wcmVzc2lvblN0cmVhbV9qc18xID0gcmVxdWlyZShcIi4vRGVjb21wcmVzc2lvblN0cmVhbS5qc1wiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkRlY29tcHJlc3Npb25TdHJlYW1cIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIERlY29tcHJlc3Npb25TdHJlYW1fanNfMS5Qb255ZmlsbERlY29tcHJlc3Npb25TdHJlYW07IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getHeadersObj = getHeadersObj;\nexports.defaultHeadersSerializer = defaultHeadersSerializer;\nexports.fakePromise = fakePromise;\nexports.isArrayBufferView = isArrayBufferView;\nexports.isNodeReadable = isNodeReadable;\nexports.createDeferredPromise = createDeferredPromise;\nfunction isHeadersInstance(obj) {\n    return obj?.forEach != null;\n}\nfunction getHeadersObj(headers) {\n    if (headers == null || !isHeadersInstance(headers)) {\n        return headers;\n    }\n    const obj = {};\n    headers.forEach((value, key) => {\n        obj[key] = value;\n    });\n    return obj;\n}\nfunction defaultHeadersSerializer(headers, onContentLength) {\n    const headerArray = [];\n    headers.forEach((value, key) => {\n        if (onContentLength && key === 'content-length') {\n            onContentLength(value);\n        }\n        headerArray.push(`${key}: ${value}`);\n    });\n    return headerArray;\n}\nfunction isPromise(val) {\n    return val?.then != null;\n}\nfunction fakePromise(value) {\n    if (isPromise(value)) {\n        return value;\n    }\n    // Write a fake promise to avoid the promise constructor\n    // being called with `new Promise` in the browser.\n    return {\n        then(resolve) {\n            if (resolve) {\n                const callbackResult = resolve(value);\n                if (isPromise(callbackResult)) {\n                    return callbackResult;\n                }\n                return fakePromise(callbackResult);\n            }\n            return this;\n        },\n        catch() {\n            return this;\n        },\n        finally(cb) {\n            if (cb) {\n                const callbackResult = cb();\n                if (isPromise(callbackResult)) {\n                    return callbackResult.then(() => value);\n                }\n                return fakePromise(value);\n            }\n            return this;\n        },\n        [Symbol.toStringTag]: 'Promise',\n    };\n}\nfunction isArrayBufferView(obj) {\n    return obj != null && obj.buffer != null && obj.byteLength != null && obj.byteOffset != null;\n}\nfunction isNodeReadable(obj) {\n    return obj != null && obj.pipe != null;\n}\nfunction createDeferredPromise() {\n    let resolveFn;\n    let rejectFn;\n    const promise = new Promise(function deferredPromiseExecutor(resolve, reject) {\n        resolveFn = resolve;\n        rejectFn = reject;\n    });\n    return {\n        promise,\n        get resolve() {\n            return resolveFn;\n        },\n        get reject() {\n            return rejectFn;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy91dGlscy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxxQkFBcUI7QUFDckIsZ0NBQWdDO0FBQ2hDLG1CQUFtQjtBQUNuQix5QkFBeUI7QUFDekIsc0JBQXNCO0FBQ3RCLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUksSUFBSSxNQUFNO0FBQzFDLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0B3aGF0d2ctbm9kZS9ub2RlLWZldGNoL2Nqcy91dGlscy5qcz9hODczIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5nZXRIZWFkZXJzT2JqID0gZ2V0SGVhZGVyc09iajtcbmV4cG9ydHMuZGVmYXVsdEhlYWRlcnNTZXJpYWxpemVyID0gZGVmYXVsdEhlYWRlcnNTZXJpYWxpemVyO1xuZXhwb3J0cy5mYWtlUHJvbWlzZSA9IGZha2VQcm9taXNlO1xuZXhwb3J0cy5pc0FycmF5QnVmZmVyVmlldyA9IGlzQXJyYXlCdWZmZXJWaWV3O1xuZXhwb3J0cy5pc05vZGVSZWFkYWJsZSA9IGlzTm9kZVJlYWRhYmxlO1xuZXhwb3J0cy5jcmVhdGVEZWZlcnJlZFByb21pc2UgPSBjcmVhdGVEZWZlcnJlZFByb21pc2U7XG5mdW5jdGlvbiBpc0hlYWRlcnNJbnN0YW5jZShvYmopIHtcbiAgICByZXR1cm4gb2JqPy5mb3JFYWNoICE9IG51bGw7XG59XG5mdW5jdGlvbiBnZXRIZWFkZXJzT2JqKGhlYWRlcnMpIHtcbiAgICBpZiAoaGVhZGVycyA9PSBudWxsIHx8ICFpc0hlYWRlcnNJbnN0YW5jZShoZWFkZXJzKSkge1xuICAgICAgICByZXR1cm4gaGVhZGVycztcbiAgICB9XG4gICAgY29uc3Qgb2JqID0ge307XG4gICAgaGVhZGVycy5mb3JFYWNoKCh2YWx1ZSwga2V5KSA9PiB7XG4gICAgICAgIG9ialtrZXldID0gdmFsdWU7XG4gICAgfSk7XG4gICAgcmV0dXJuIG9iajtcbn1cbmZ1bmN0aW9uIGRlZmF1bHRIZWFkZXJzU2VyaWFsaXplcihoZWFkZXJzLCBvbkNvbnRlbnRMZW5ndGgpIHtcbiAgICBjb25zdCBoZWFkZXJBcnJheSA9IFtdO1xuICAgIGhlYWRlcnMuZm9yRWFjaCgodmFsdWUsIGtleSkgPT4ge1xuICAgICAgICBpZiAob25Db250ZW50TGVuZ3RoICYmIGtleSA9PT0gJ2NvbnRlbnQtbGVuZ3RoJykge1xuICAgICAgICAgICAgb25Db250ZW50TGVuZ3RoKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBoZWFkZXJBcnJheS5wdXNoKGAke2tleX06ICR7dmFsdWV9YCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGhlYWRlckFycmF5O1xufVxuZnVuY3Rpb24gaXNQcm9taXNlKHZhbCkge1xuICAgIHJldHVybiB2YWw/LnRoZW4gIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGZha2VQcm9taXNlKHZhbHVlKSB7XG4gICAgaWYgKGlzUHJvbWlzZSh2YWx1ZSkpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICAvLyBXcml0ZSBhIGZha2UgcHJvbWlzZSB0byBhdm9pZCB0aGUgcHJvbWlzZSBjb25zdHJ1Y3RvclxuICAgIC8vIGJlaW5nIGNhbGxlZCB3aXRoIGBuZXcgUHJvbWlzZWAgaW4gdGhlIGJyb3dzZXIuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgdGhlbihyZXNvbHZlKSB7XG4gICAgICAgICAgICBpZiAocmVzb2x2ZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrUmVzdWx0ID0gcmVzb2x2ZSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKGlzUHJvbWlzZShjYWxsYmFja1Jlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNhbGxiYWNrUmVzdWx0O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gZmFrZVByb21pc2UoY2FsbGJhY2tSZXN1bHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIGNhdGNoKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgICAgIGZpbmFsbHkoY2IpIHtcbiAgICAgICAgICAgIGlmIChjYikge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNhbGxiYWNrUmVzdWx0ID0gY2IoKTtcbiAgICAgICAgICAgICAgICBpZiAoaXNQcm9taXNlKGNhbGxiYWNrUmVzdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2tSZXN1bHQudGhlbigoKSA9PiB2YWx1ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBmYWtlUHJvbWlzZSh2YWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC50b1N0cmluZ1RhZ106ICdQcm9taXNlJyxcbiAgICB9O1xufVxuZnVuY3Rpb24gaXNBcnJheUJ1ZmZlclZpZXcob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5idWZmZXIgIT0gbnVsbCAmJiBvYmouYnl0ZUxlbmd0aCAhPSBudWxsICYmIG9iai5ieXRlT2Zmc2V0ICE9IG51bGw7XG59XG5mdW5jdGlvbiBpc05vZGVSZWFkYWJsZShvYmopIHtcbiAgICByZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqLnBpcGUgIT0gbnVsbDtcbn1cbmZ1bmN0aW9uIGNyZWF0ZURlZmVycmVkUHJvbWlzZSgpIHtcbiAgICBsZXQgcmVzb2x2ZUZuO1xuICAgIGxldCByZWplY3RGbjtcbiAgICBjb25zdCBwcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24gZGVmZXJyZWRQcm9taXNlRXhlY3V0b3IocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIHJlc29sdmVGbiA9IHJlc29sdmU7XG4gICAgICAgIHJlamVjdEZuID0gcmVqZWN0O1xuICAgIH0pO1xuICAgIHJldHVybiB7XG4gICAgICAgIHByb21pc2UsXG4gICAgICAgIGdldCByZXNvbHZlKCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVGbjtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0IHJlamVjdCgpIHtcbiAgICAgICAgICAgIHJldHVybiByZWplY3RGbjtcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/node-fetch/cjs/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs ***!
  \*********************************************************************************************************/
/***/ ((module) => {

"use strict";
eval("var M=Object.defineProperty;var Pe=Object.getOwnPropertyDescriptor;var Re=Object.getOwnPropertyNames;var Ee=Object.prototype.hasOwnProperty;var Oe=(e,t)=>{for(var r in t)M(e,r,{get:t[r],enumerable:!0})},ke=(e,t,r,n)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let a of Re(t))!Ee.call(e,a)&&a!==r&&M(e,a,{get:()=>t[a],enumerable:!(n=Pe(t,a))||n.enumerable});return e};var Te=e=>ke(M({},\"__esModule\",{value:!0}),e);var Ne={};Oe(Ne,{URLPattern:()=>Y});module.exports=Te(Ne);var R=class{type=3;name=\"\";prefix=\"\";value=\"\";suffix=\"\";modifier=3;constructor(t,r,n,a,c,l){this.type=t,this.name=r,this.prefix=n,this.value=a,this.suffix=c,this.modifier=l}hasCustomName(){return this.name!==\"\"&&typeof this.name!=\"number\"}},Ae=/[$_\\p{ID_Start}]/u,ye=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,v=\".*\";function we(e,t){return(t?/^[\\x00-\\xFF]*$/:/^[\\x00-\\x7F]*$/).test(e)}function D(e,t=!1){let r=[],n=0;for(;n<e.length;){let a=e[n],c=function(l){if(!t)throw new TypeError(l);r.push({type:\"INVALID_CHAR\",index:n,value:e[n++]})};if(a===\"*\"){r.push({type:\"ASTERISK\",index:n,value:e[n++]});continue}if(a===\"+\"||a===\"?\"){r.push({type:\"OTHER_MODIFIER\",index:n,value:e[n++]});continue}if(a===\"\\\\\"){r.push({type:\"ESCAPED_CHAR\",index:n++,value:e[n++]});continue}if(a===\"{\"){r.push({type:\"OPEN\",index:n,value:e[n++]});continue}if(a===\"}\"){r.push({type:\"CLOSE\",index:n,value:e[n++]});continue}if(a===\":\"){let l=\"\",s=n+1;for(;s<e.length;){let i=e.substr(s,1);if(s===n+1&&Ae.test(i)||s!==n+1&&ye.test(i)){l+=e[s++];continue}break}if(!l){c(`Missing parameter name at ${n}`);continue}r.push({type:\"NAME\",index:n,value:l}),n=s;continue}if(a===\"(\"){let l=1,s=\"\",i=n+1,o=!1;if(e[i]===\"?\"){c(`Pattern cannot start with \"?\" at ${i}`);continue}for(;i<e.length;){if(!we(e[i],!1)){c(`Invalid character '${e[i]}' at ${i}.`),o=!0;break}if(e[i]===\"\\\\\"){s+=e[i++]+e[i++];continue}if(e[i]===\")\"){if(l--,l===0){i++;break}}else if(e[i]===\"(\"&&(l++,e[i+1]!==\"?\")){c(`Capturing groups are not allowed at ${i}`),o=!0;break}s+=e[i++]}if(o)continue;if(l){c(`Unbalanced pattern at ${n}`);continue}if(!s){c(`Missing pattern at ${n}`);continue}r.push({type:\"REGEX\",index:n,value:s}),n=i;continue}r.push({type:\"CHAR\",index:n,value:e[n++]})}return r.push({type:\"END\",index:n,value:\"\"}),r}function F(e,t={}){let r=D(e);t.delimiter??=\"/#?\",t.prefixes??=\"./\";let n=`[^${S(t.delimiter)}]+?`,a=[],c=0,l=0,s=\"\",i=new Set,o=h=>{if(l<r.length&&r[l].type===h)return r[l++].value},f=()=>o(\"OTHER_MODIFIER\")??o(\"ASTERISK\"),d=h=>{let u=o(h);if(u!==void 0)return u;let{type:p,index:A}=r[l];throw new TypeError(`Unexpected ${p} at ${A}, expected ${h}`)},T=()=>{let h=\"\",u;for(;u=o(\"CHAR\")??o(\"ESCAPED_CHAR\");)h+=u;return h},xe=h=>h,L=t.encodePart||xe,I=\"\",U=h=>{I+=h},$=()=>{I.length&&(a.push(new R(3,\"\",\"\",L(I),\"\",3)),I=\"\")},X=(h,u,p,A,Z)=>{let g=3;switch(Z){case\"?\":g=1;break;case\"*\":g=0;break;case\"+\":g=2;break}if(!u&&!p&&g===3){U(h);return}if($(),!u&&!p){if(!h)return;a.push(new R(3,\"\",\"\",L(h),\"\",g));return}let m;p?p===\"*\"?m=v:m=p:m=n;let O=2;m===n?(O=1,m=\"\"):m===v&&(O=0,m=\"\");let P;if(u?P=u:p&&(P=c++),i.has(P))throw new TypeError(`Duplicate name '${P}'.`);i.add(P),a.push(new R(O,P,L(h),m,L(A),g))};for(;l<r.length;){let h=o(\"CHAR\"),u=o(\"NAME\"),p=o(\"REGEX\");if(!u&&!p&&(p=o(\"ASTERISK\")),u||p){let g=h??\"\";t.prefixes.indexOf(g)===-1&&(U(g),g=\"\"),$();let m=f();X(g,u,p,\"\",m);continue}let A=h??o(\"ESCAPED_CHAR\");if(A){U(A);continue}if(o(\"OPEN\")){let g=T(),m=o(\"NAME\"),O=o(\"REGEX\");!m&&!O&&(O=o(\"ASTERISK\"));let P=T();d(\"CLOSE\");let be=f();X(g,m,O,P,be);continue}$(),d(\"END\")}return a}function S(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function B(e){return e&&e.ignoreCase?\"ui\":\"u\"}function q(e,t,r){return W(F(e,r),t,r)}function k(e){switch(e){case 0:return\"*\";case 1:return\"?\";case 2:return\"+\";case 3:return\"\"}}function W(e,t,r={}){r.delimiter??=\"/#?\",r.prefixes??=\"./\",r.sensitive??=!1,r.strict??=!1,r.end??=!0,r.start??=!0,r.endsWith=\"\";let n=r.start?\"^\":\"\";for(let s of e){if(s.type===3){s.modifier===3?n+=S(s.value):n+=`(?:${S(s.value)})${k(s.modifier)}`;continue}t&&t.push(s.name);let i=`[^${S(r.delimiter)}]+?`,o=s.value;if(s.type===1?o=i:s.type===0&&(o=v),!s.prefix.length&&!s.suffix.length){s.modifier===3||s.modifier===1?n+=`(${o})${k(s.modifier)}`:n+=`((?:${o})${k(s.modifier)})`;continue}if(s.modifier===3||s.modifier===1){n+=`(?:${S(s.prefix)}(${o})${S(s.suffix)})`,n+=k(s.modifier);continue}n+=`(?:${S(s.prefix)}`,n+=`((?:${o})(?:`,n+=S(s.suffix),n+=S(s.prefix),n+=`(?:${o}))*)${S(s.suffix)})`,s.modifier===0&&(n+=\"?\")}let a=`[${S(r.endsWith)}]|$`,c=`[${S(r.delimiter)}]`;if(r.end)return r.strict||(n+=`${c}?`),r.endsWith.length?n+=`(?=${a})`:n+=\"$\",new RegExp(n,B(r));r.strict||(n+=`(?:${c}(?=${a}))?`);let l=!1;if(e.length){let s=e[e.length-1];s.type===3&&s.modifier===3&&(l=r.delimiter.indexOf(s)>-1)}return l||(n+=`(?=${c}|${a})`),new RegExp(n,B(r))}var x={delimiter:\"\",prefixes:\"\",sensitive:!0,strict:!0},J={delimiter:\".\",prefixes:\"\",sensitive:!0,strict:!0},Q={delimiter:\"/\",prefixes:\"/\",sensitive:!0,strict:!0};function ee(e,t){return e.length?e[0]===\"/\"?!0:!t||e.length<2?!1:(e[0]==\"\\\\\"||e[0]==\"{\")&&e[1]==\"/\":!1}function te(e,t){return e.startsWith(t)?e.substring(t.length,e.length):e}function Ce(e,t){return e.endsWith(t)?e.substr(0,e.length-t.length):e}function _(e){return!e||e.length<2?!1:e[0]===\"[\"||(e[0]===\"\\\\\"||e[0]===\"{\")&&e[1]===\"[\"}var re=[\"ftp\",\"file\",\"http\",\"https\",\"ws\",\"wss\"];function N(e){if(!e)return!0;for(let t of re)if(e.test(t))return!0;return!1}function ne(e,t){if(e=te(e,\"#\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.hash=e,r.hash?r.hash.substring(1,r.hash.length):\"\"}function se(e,t){if(e=te(e,\"?\"),t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.search=e,r.search?r.search.substring(1,r.search.length):\"\"}function ie(e,t){return t||e===\"\"?e:_(e)?K(e):j(e)}function ae(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.password=e,r.password}function oe(e,t){if(t||e===\"\")return e;let r=new URL(\"https://example.com\");return r.username=e,r.username}function ce(e,t,r){if(r||e===\"\")return e;if(t&&!re.includes(t))return new URL(`${t}:${e}`).pathname;let n=e[0]==\"/\";return e=new URL(n?e:\"/-\"+e,\"https://example.com\").pathname,n||(e=e.substring(2,e.length)),e}function le(e,t,r){return z(t)===e&&(e=\"\"),r||e===\"\"?e:G(e)}function fe(e,t){return e=Ce(e,\":\"),t||e===\"\"?e:y(e)}function z(e){switch(e){case\"ws\":case\"http\":return\"80\";case\"wws\":case\"https\":return\"443\";case\"ftp\":return\"21\";default:return\"\"}}function y(e){if(e===\"\")return e;if(/^[-+.A-Za-z0-9]*$/.test(e))return e.toLowerCase();throw new TypeError(`Invalid protocol '${e}'.`)}function he(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.username=e,t.username}function ue(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.password=e,t.password}function j(e){if(e===\"\")return e;if(/[\\t\\n\\r #%/:<>?@[\\]^\\\\|]/g.test(e))throw new TypeError(`Invalid hostname '${e}'`);let t=new URL(\"https://example.com\");return t.hostname=e,t.hostname}function K(e){if(e===\"\")return e;if(/[^0-9a-fA-F[\\]:]/g.test(e))throw new TypeError(`Invalid IPv6 hostname '${e}'`);return e.toLowerCase()}function G(e){if(e===\"\"||/^[0-9]*$/.test(e)&&parseInt(e)<=65535)return e;throw new TypeError(`Invalid port '${e}'.`)}function de(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.pathname=e[0]!==\"/\"?\"/-\"+e:e,e[0]!==\"/\"?t.pathname.substring(2,t.pathname.length):t.pathname}function pe(e){return e===\"\"?e:new URL(`data:${e}`).pathname}function ge(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.search=e,t.search.substring(1,t.search.length)}function me(e){if(e===\"\")return e;let t=new URL(\"https://example.com\");return t.hash=e,t.hash.substring(1,t.hash.length)}var H=class{#i;#n=[];#t={};#e=0;#s=1;#l=0;#o=0;#d=0;#p=0;#g=!1;constructor(t){this.#i=t}get result(){return this.#t}parse(){for(this.#n=D(this.#i,!0);this.#e<this.#n.length;this.#e+=this.#s){if(this.#s=1,this.#n[this.#e].type===\"END\"){if(this.#o===0){this.#b(),this.#f()?this.#r(9,1):this.#h()?this.#r(8,1):this.#r(7,0);continue}else if(this.#o===2){this.#u(5);continue}this.#r(10,0);break}if(this.#d>0)if(this.#A())this.#d-=1;else continue;if(this.#T()){this.#d+=1;continue}switch(this.#o){case 0:this.#P()&&this.#u(1);break;case 1:if(this.#P()){this.#C();let t=7,r=1;this.#E()?(t=2,r=3):this.#g&&(t=2),this.#r(t,r)}break;case 2:this.#S()?this.#u(3):(this.#x()||this.#h()||this.#f())&&this.#u(5);break;case 3:this.#O()?this.#r(4,1):this.#S()&&this.#r(5,1);break;case 4:this.#S()&&this.#r(5,1);break;case 5:this.#y()?this.#p+=1:this.#w()&&(this.#p-=1),this.#k()&&!this.#p?this.#r(6,1):this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 6:this.#x()?this.#r(7,0):this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 7:this.#h()?this.#r(8,1):this.#f()&&this.#r(9,1);break;case 8:this.#f()&&this.#r(9,1);break;case 9:break;case 10:break}}this.#t.hostname!==void 0&&this.#t.port===void 0&&(this.#t.port=\"\")}#r(t,r){switch(this.#o){case 0:break;case 1:this.#t.protocol=this.#c();break;case 2:break;case 3:this.#t.username=this.#c();break;case 4:this.#t.password=this.#c();break;case 5:this.#t.hostname=this.#c();break;case 6:this.#t.port=this.#c();break;case 7:this.#t.pathname=this.#c();break;case 8:this.#t.search=this.#c();break;case 9:this.#t.hash=this.#c();break;case 10:break}this.#o!==0&&t!==10&&([1,2,3,4].includes(this.#o)&&[6,7,8,9].includes(t)&&(this.#t.hostname??=\"\"),[1,2,3,4,5,6].includes(this.#o)&&[8,9].includes(t)&&(this.#t.pathname??=this.#g?\"/\":\"\"),[1,2,3,4,5,6,7].includes(this.#o)&&t===9&&(this.#t.search??=\"\")),this.#R(t,r)}#R(t,r){this.#o=t,this.#l=this.#e+r,this.#e+=r,this.#s=0}#b(){this.#e=this.#l,this.#s=0}#u(t){this.#b(),this.#o=t}#m(t){return t<0&&(t=this.#n.length-t),t<this.#n.length?this.#n[t]:this.#n[this.#n.length-1]}#a(t,r){let n=this.#m(t);return n.value===r&&(n.type===\"CHAR\"||n.type===\"ESCAPED_CHAR\"||n.type===\"INVALID_CHAR\")}#P(){return this.#a(this.#e,\":\")}#E(){return this.#a(this.#e+1,\"/\")&&this.#a(this.#e+2,\"/\")}#S(){return this.#a(this.#e,\"@\")}#O(){return this.#a(this.#e,\":\")}#k(){return this.#a(this.#e,\":\")}#x(){return this.#a(this.#e,\"/\")}#h(){if(this.#a(this.#e,\"?\"))return!0;if(this.#n[this.#e].value!==\"?\")return!1;let t=this.#m(this.#e-1);return t.type!==\"NAME\"&&t.type!==\"REGEX\"&&t.type!==\"CLOSE\"&&t.type!==\"ASTERISK\"}#f(){return this.#a(this.#e,\"#\")}#T(){return this.#n[this.#e].type==\"OPEN\"}#A(){return this.#n[this.#e].type==\"CLOSE\"}#y(){return this.#a(this.#e,\"[\")}#w(){return this.#a(this.#e,\"]\")}#c(){let t=this.#n[this.#e],r=this.#m(this.#l).index;return this.#i.substring(r,t.index)}#C(){let t={};Object.assign(t,x),t.encodePart=y;let r=q(this.#c(),void 0,t);this.#g=N(r)}};var V=[\"protocol\",\"username\",\"password\",\"hostname\",\"port\",\"pathname\",\"search\",\"hash\"],E=\"*\";function Se(e,t){if(typeof e!=\"string\")throw new TypeError(\"parameter 1 is not of type 'string'.\");let r=new URL(e,t);return{protocol:r.protocol.substring(0,r.protocol.length-1),username:r.username,password:r.password,hostname:r.hostname,port:r.port,pathname:r.pathname,search:r.search!==\"\"?r.search.substring(1,r.search.length):void 0,hash:r.hash!==\"\"?r.hash.substring(1,r.hash.length):void 0}}function b(e,t){return t?C(e):e}function w(e,t,r){let n;if(typeof t.baseURL==\"string\")try{n=new URL(t.baseURL),t.protocol===void 0&&(e.protocol=b(n.protocol.substring(0,n.protocol.length-1),r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&(e.username=b(n.username,r)),!r&&t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.username===void 0&&t.password===void 0&&(e.password=b(n.password,r)),t.protocol===void 0&&t.hostname===void 0&&(e.hostname=b(n.hostname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&(e.port=b(n.port,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&(e.pathname=b(n.pathname,r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&(e.search=b(n.search.substring(1,n.search.length),r)),t.protocol===void 0&&t.hostname===void 0&&t.port===void 0&&t.pathname===void 0&&t.search===void 0&&t.hash===void 0&&(e.hash=b(n.hash.substring(1,n.hash.length),r))}catch{throw new TypeError(`invalid baseURL '${t.baseURL}'.`)}if(typeof t.protocol==\"string\"&&(e.protocol=fe(t.protocol,r)),typeof t.username==\"string\"&&(e.username=oe(t.username,r)),typeof t.password==\"string\"&&(e.password=ae(t.password,r)),typeof t.hostname==\"string\"&&(e.hostname=ie(t.hostname,r)),typeof t.port==\"string\"&&(e.port=le(t.port,e.protocol,r)),typeof t.pathname==\"string\"){if(e.pathname=t.pathname,n&&!ee(e.pathname,r)){let a=n.pathname.lastIndexOf(\"/\");a>=0&&(e.pathname=b(n.pathname.substring(0,a+1),r)+e.pathname)}e.pathname=ce(e.pathname,e.protocol,r)}return typeof t.search==\"string\"&&(e.search=se(t.search,r)),typeof t.hash==\"string\"&&(e.hash=ne(t.hash,r)),e}function C(e){return e.replace(/([+*?:{}()\\\\])/g,\"\\\\$1\")}function Le(e){return e.replace(/([.+*?^${}()[\\]|/\\\\])/g,\"\\\\$1\")}function Ie(e,t){t.delimiter??=\"/#?\",t.prefixes??=\"./\",t.sensitive??=!1,t.strict??=!1,t.end??=!0,t.start??=!0,t.endsWith=\"\";let r=\".*\",n=`[^${Le(t.delimiter)}]+?`,a=/[$_\\u200C\\u200D\\p{ID_Continue}]/u,c=\"\";for(let l=0;l<e.length;++l){let s=e[l];if(s.type===3){if(s.modifier===3){c+=C(s.value);continue}c+=`{${C(s.value)}}${k(s.modifier)}`;continue}let i=s.hasCustomName(),o=!!s.suffix.length||!!s.prefix.length&&(s.prefix.length!==1||!t.prefixes.includes(s.prefix)),f=l>0?e[l-1]:null,d=l<e.length-1?e[l+1]:null;if(!o&&i&&s.type===1&&s.modifier===3&&d&&!d.prefix.length&&!d.suffix.length)if(d.type===3){let T=d.value.length>0?d.value[0]:\"\";o=a.test(T)}else o=!d.hasCustomName();if(!o&&!s.prefix.length&&f&&f.type===3){let T=f.value[f.value.length-1];o=t.prefixes.includes(T)}o&&(c+=\"{\"),c+=C(s.prefix),i&&(c+=`:${s.name}`),s.type===2?c+=`(${s.value})`:s.type===1?i||(c+=`(${n})`):s.type===0&&(!i&&(!f||f.type===3||f.modifier!==3||o||s.prefix!==\"\")?c+=\"*\":c+=`(${r})`),s.type===1&&i&&s.suffix.length&&a.test(s.suffix[0])&&(c+=\"\\\\\"),c+=C(s.suffix),o&&(c+=\"}\"),s.modifier!==3&&(c+=k(s.modifier))}return c}var Y=class{#i;#n={};#t={};#e={};#s={};#l=!1;constructor(t={},r,n){try{let a;if(typeof r==\"string\"?a=r:n=r,typeof t==\"string\"){let i=new H(t);if(i.parse(),t=i.result,a===void 0&&typeof t.protocol!=\"string\")throw new TypeError(\"A base URL must be provided for a relative constructor string.\");t.baseURL=a}else{if(!t||typeof t!=\"object\")throw new TypeError(\"parameter 1 is not of type 'string' and cannot convert to dictionary.\");if(a)throw new TypeError(\"parameter 1 is not of type 'string'.\")}typeof n>\"u\"&&(n={ignoreCase:!1});let c={ignoreCase:n.ignoreCase===!0},l={pathname:E,protocol:E,username:E,password:E,hostname:E,port:E,search:E,hash:E};this.#i=w(l,t,!0),z(this.#i.protocol)===this.#i.port&&(this.#i.port=\"\");let s;for(s of V){if(!(s in this.#i))continue;let i={},o=this.#i[s];switch(this.#t[s]=[],s){case\"protocol\":Object.assign(i,x),i.encodePart=y;break;case\"username\":Object.assign(i,x),i.encodePart=he;break;case\"password\":Object.assign(i,x),i.encodePart=ue;break;case\"hostname\":Object.assign(i,J),_(o)?i.encodePart=K:i.encodePart=j;break;case\"port\":Object.assign(i,x),i.encodePart=G;break;case\"pathname\":N(this.#n.protocol)?(Object.assign(i,Q,c),i.encodePart=de):(Object.assign(i,x,c),i.encodePart=pe);break;case\"search\":Object.assign(i,x,c),i.encodePart=ge;break;case\"hash\":Object.assign(i,x,c),i.encodePart=me;break}try{this.#s[s]=F(o,i),this.#n[s]=W(this.#s[s],this.#t[s],i),this.#e[s]=Ie(this.#s[s],i),this.#l=this.#l||this.#s[s].some(f=>f.type===2)}catch{throw new TypeError(`invalid ${s} pattern '${this.#i[s]}'.`)}}}catch(a){throw new TypeError(`Failed to construct 'URLPattern': ${a.message}`)}}test(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return!1;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return!1}let a;for(a of V)if(!this.#n[a].exec(n[a]))return!1;return!0}exec(t={},r){let n={pathname:\"\",protocol:\"\",username:\"\",password:\"\",hostname:\"\",port:\"\",search:\"\",hash:\"\"};if(typeof t!=\"string\"&&r)throw new TypeError(\"parameter 1 is not of type 'string'.\");if(typeof t>\"u\")return;try{typeof t==\"object\"?n=w(n,t,!1):n=w(n,Se(t,r),!1)}catch{return null}let a={};r?a.inputs=[t,r]:a.inputs=[t];let c;for(c of V){let l=this.#n[c].exec(n[c]);if(!l)return null;let s={};for(let[i,o]of this.#t[c].entries())if(typeof o==\"string\"||typeof o==\"number\"){let f=l[i+1];s[o]=f}a[c]={input:n[c]??\"\",groups:s}}return a}static compareComponent(t,r,n){let a=(i,o)=>{for(let f of[\"type\",\"modifier\",\"prefix\",\"value\",\"suffix\"]){if(i[f]<o[f])return-1;if(i[f]===o[f])continue;return 1}return 0},c=new R(3,\"\",\"\",\"\",\"\",3),l=new R(0,\"\",\"\",\"\",\"\",3),s=(i,o)=>{let f=0;for(;f<Math.min(i.length,o.length);++f){let d=a(i[f],o[f]);if(d)return d}return i.length===o.length?0:a(i[f]??c,o[f]??c)};return!r.#e[t]&&!n.#e[t]?0:r.#e[t]&&!n.#e[t]?s(r.#s[t],[l]):!r.#e[t]&&n.#e[t]?s([l],n.#s[t]):s(r.#s[t],n.#s[t])}get protocol(){return this.#e.protocol}get username(){return this.#e.username}get password(){return this.#e.password}get hostname(){return this.#e.hostname}get port(){return this.#e.port}get pathname(){return this.#e.pathname}get search(){return this.#e.search}get hash(){return this.#e.hash}get hasRegExpGroups(){return this.#l}};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/index.cjs":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/index.cjs ***!
  \***********************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { URLPattern } = __webpack_require__(/*! ./dist/urlpattern.cjs */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/dist/urlpattern.cjs\");\n\nmodule.exports = { URLPattern };\n\nif (!globalThis.URLPattern) {\n  globalThis.URLPattern = URLPattern;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL3VybHBhdHRlcm4tcG9seWZpbGwvaW5kZXguY2pzIiwibWFwcGluZ3MiOiJBQUFBLFFBQVEsYUFBYSxFQUFFLG1CQUFPLENBQUMsc0lBQXVCOztBQUV0RCxtQkFBbUI7O0FBRW5CO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL3VybHBhdHRlcm4tcG9seWZpbGwvaW5kZXguY2pzPzJjMDMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBVUkxQYXR0ZXJuIH0gPSByZXF1aXJlKFwiLi9kaXN0L3VybHBhdHRlcm4uY2pzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHsgVVJMUGF0dGVybiB9O1xuXG5pZiAoIWdsb2JhbFRoaXMuVVJMUGF0dGVybikge1xuICBnbG9iYWxUaGlzLlVSTFBhdHRlcm4gPSBVUkxQYXR0ZXJuO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/urlpattern-polyfill/index.cjs\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batchDelegateToSchema: () => (/* binding */ batchDelegateToSchema)\n/* harmony export */ });\n/* harmony import */ var _getLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getLoader.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/esm/getLoader.js\");\n\nfunction batchDelegateToSchema(options) {\n    const key = options.key;\n    if (key == null) {\n        return null;\n    }\n    else if (Array.isArray(key) && !key.length) {\n        return [];\n    }\n    const loader = (0,_getLoader_js__WEBPACK_IMPORTED_MODULE_0__.getLoader)(options);\n    return Array.isArray(key) ? loader.loadMany(key) : loader.load(key);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL2VzbS9iYXRjaERlbGVnYXRlVG9TY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkM7QUFDcEM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix3REFBUztBQUM1QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvYmF0Y2gtZGVsZWdhdGUvZXNtL2JhdGNoRGVsZWdhdGVUb1NjaGVtYS5qcz8wNWJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldExvYWRlciB9IGZyb20gJy4vZ2V0TG9hZGVyLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBiYXRjaERlbGVnYXRlVG9TY2hlbWEob3B0aW9ucykge1xuICAgIGNvbnN0IGtleSA9IG9wdGlvbnMua2V5O1xuICAgIGlmIChrZXkgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShrZXkpICYmICFrZXkubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gICAgY29uc3QgbG9hZGVyID0gZ2V0TG9hZGVyKG9wdGlvbnMpO1xuICAgIHJldHVybiBBcnJheS5pc0FycmF5KGtleSkgPyBsb2FkZXIubG9hZE1hbnkoa2V5KSA6IGxvYWRlci5sb2FkKGtleSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/esm/getLoader.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/esm/getLoader.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoader: () => (/* binding */ getLoader)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var dataloader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dataloader */ \"(ssr)/../node_modules/dataloader/index.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\n\n\nfunction createBatchFn(options) {\n    var _a, _b;\n    const argsFromKeys = (_a = options.argsFromKeys) !== null && _a !== void 0 ? _a : ((keys) => ({ ids: keys }));\n    const fieldName = (_b = options.fieldName) !== null && _b !== void 0 ? _b : options.info.fieldName;\n    const { valuesFromResults, lazyOptionsFn } = options;\n    return function batchFn(keys) {\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.delegateToSchema)({\n            returnType: new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLList((0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(options.info.returnType)),\n            onLocatedError: originalError => {\n                if (originalError.path == null) {\n                    return originalError;\n                }\n                const [pathFieldName, pathNumber] = originalError.path;\n                if (pathFieldName !== fieldName) {\n                    return originalError;\n                }\n                const pathNumberType = typeof pathNumber;\n                if (pathNumberType !== 'number') {\n                    return originalError;\n                }\n                return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.relocatedError)(originalError, originalError.path.slice(0, 0).concat(originalError.path.slice(2)));\n            },\n            args: argsFromKeys(keys),\n            ...(lazyOptionsFn == null ? options : lazyOptionsFn(options, keys)),\n        })).then(results => {\n            if (results instanceof Error) {\n                return keys.map(() => results);\n            }\n            const values = valuesFromResults == null ? results : valuesFromResults(results, keys);\n            return Array.isArray(values) ? values : keys.map(() => values);\n        });\n    };\n}\nconst getLoadersMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize2)(function getLoadersMap(_context, _schema) {\n    return new Map();\n});\nconst GLOBAL_CONTEXT = {};\nconst memoizedJsonStringify = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize1)(function jsonStringify(value) {\n    return JSON.stringify(value);\n});\nconst memoizedPrint = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize1)(graphql__WEBPACK_IMPORTED_MODULE_6__.print);\nfunction defaultCacheKeyFn(key) {\n    if (typeof key === 'object') {\n        return memoizedJsonStringify(key);\n    }\n    return key;\n}\nfunction getLoader(options) {\n    const { schema, context, info, fieldName = info.fieldName, dataLoaderOptions, fieldNodes = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_7__.getActualFieldNodes)(info.fieldNodes[0]), selectionSet = fieldNodes[0].selectionSet, } = options;\n    const loaders = getLoadersMap(context !== null && context !== void 0 ? context : GLOBAL_CONTEXT, schema);\n    let cacheKey = fieldName;\n    if (selectionSet != null) {\n        cacheKey += memoizedPrint(selectionSet);\n    }\n    let loader = loaders.get(cacheKey);\n    if (loader === undefined) {\n        const batchFn = createBatchFn(options);\n        loader = new dataloader__WEBPACK_IMPORTED_MODULE_0__(batchFn, {\n            // Prevents the keys to be passed with the same structure\n            cacheKeyFn: defaultCacheKeyFn,\n            ...dataLoaderOptions,\n        });\n        loaders.set(cacheKey, loader);\n    }\n    return loader;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL2VzbS9nZXRMb2FkZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJEO0FBQ3ZCO0FBQzRDO0FBQ047QUFDeEI7QUFDbEQ7QUFDQTtBQUNBLG9HQUFvRyxXQUFXO0FBQy9HO0FBQ0EsWUFBWSxtQ0FBbUM7QUFDL0M7QUFDQSxtQkFBbUIsNERBQWMsT0FBTyx5RUFBZ0I7QUFDeEQsNEJBQTRCLGdEQUFXLENBQUMscURBQVk7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9FQUFjO0FBQ3JDLGFBQWE7QUFDYjtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLHNCQUFzQiw4REFBUTtBQUM5QjtBQUNBLENBQUM7QUFDRDtBQUNBLDhCQUE4Qiw4REFBUTtBQUN0QztBQUNBLENBQUM7QUFDRCxzQkFBc0IsOERBQVEsQ0FBQywwQ0FBSztBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksbUZBQW1GLDRFQUFtQixtRUFBbUU7QUFDckw7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1Q0FBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZS9lc20vZ2V0TG9hZGVyLmpzPzk1YzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFtZWRUeXBlLCBHcmFwaFFMTGlzdCwgcHJpbnQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCBEYXRhTG9hZGVyIGZyb20gJ2RhdGFsb2FkZXInO1xuaW1wb3J0IHsgZGVsZWdhdGVUb1NjaGVtYSwgZ2V0QWN0dWFsRmllbGROb2RlcyB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlJztcbmltcG9ydCB7IG1lbW9pemUxLCBtZW1vaXplMiwgcmVsb2NhdGVkRXJyb3IgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuZnVuY3Rpb24gY3JlYXRlQmF0Y2hGbihvcHRpb25zKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCBhcmdzRnJvbUtleXMgPSAoX2EgPSBvcHRpb25zLmFyZ3NGcm9tS2V5cykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogKChrZXlzKSA9PiAoeyBpZHM6IGtleXMgfSkpO1xuICAgIGNvbnN0IGZpZWxkTmFtZSA9IChfYiA9IG9wdGlvbnMuZmllbGROYW1lKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBvcHRpb25zLmluZm8uZmllbGROYW1lO1xuICAgIGNvbnN0IHsgdmFsdWVzRnJvbVJlc3VsdHMsIGxhenlPcHRpb25zRm4gfSA9IG9wdGlvbnM7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGJhdGNoRm4oa2V5cykge1xuICAgICAgICByZXR1cm4gbmV3IFZhbHVlT3JQcm9taXNlKCgpID0+IGRlbGVnYXRlVG9TY2hlbWEoe1xuICAgICAgICAgICAgcmV0dXJuVHlwZTogbmV3IEdyYXBoUUxMaXN0KGdldE5hbWVkVHlwZShvcHRpb25zLmluZm8ucmV0dXJuVHlwZSkpLFxuICAgICAgICAgICAgb25Mb2NhdGVkRXJyb3I6IG9yaWdpbmFsRXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChvcmlnaW5hbEVycm9yLnBhdGggPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxFcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgW3BhdGhGaWVsZE5hbWUsIHBhdGhOdW1iZXJdID0gb3JpZ2luYWxFcnJvci5wYXRoO1xuICAgICAgICAgICAgICAgIGlmIChwYXRoRmllbGROYW1lICE9PSBmaWVsZE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9yaWdpbmFsRXJyb3I7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHBhdGhOdW1iZXJUeXBlID0gdHlwZW9mIHBhdGhOdW1iZXI7XG4gICAgICAgICAgICAgICAgaWYgKHBhdGhOdW1iZXJUeXBlICE9PSAnbnVtYmVyJykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxFcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlbG9jYXRlZEVycm9yKG9yaWdpbmFsRXJyb3IsIG9yaWdpbmFsRXJyb3IucGF0aC5zbGljZSgwLCAwKS5jb25jYXQob3JpZ2luYWxFcnJvci5wYXRoLnNsaWNlKDIpKSk7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgYXJnczogYXJnc0Zyb21LZXlzKGtleXMpLFxuICAgICAgICAgICAgLi4uKGxhenlPcHRpb25zRm4gPT0gbnVsbCA/IG9wdGlvbnMgOiBsYXp5T3B0aW9uc0ZuKG9wdGlvbnMsIGtleXMpKSxcbiAgICAgICAgfSkpLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0cyBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGtleXMubWFwKCgpID0+IHJlc3VsdHMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gdmFsdWVzRnJvbVJlc3VsdHMgPT0gbnVsbCA/IHJlc3VsdHMgOiB2YWx1ZXNGcm9tUmVzdWx0cyhyZXN1bHRzLCBrZXlzKTtcbiAgICAgICAgICAgIHJldHVybiBBcnJheS5pc0FycmF5KHZhbHVlcykgPyB2YWx1ZXMgOiBrZXlzLm1hcCgoKSA9PiB2YWx1ZXMpO1xuICAgICAgICB9KTtcbiAgICB9O1xufVxuY29uc3QgZ2V0TG9hZGVyc01hcCA9IG1lbW9pemUyKGZ1bmN0aW9uIGdldExvYWRlcnNNYXAoX2NvbnRleHQsIF9zY2hlbWEpIHtcbiAgICByZXR1cm4gbmV3IE1hcCgpO1xufSk7XG5jb25zdCBHTE9CQUxfQ09OVEVYVCA9IHt9O1xuY29uc3QgbWVtb2l6ZWRKc29uU3RyaW5naWZ5ID0gbWVtb2l6ZTEoZnVuY3Rpb24ganNvblN0cmluZ2lmeSh2YWx1ZSkge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG59KTtcbmNvbnN0IG1lbW9pemVkUHJpbnQgPSBtZW1vaXplMShwcmludCk7XG5mdW5jdGlvbiBkZWZhdWx0Q2FjaGVLZXlGbihrZXkpIHtcbiAgICBpZiAodHlwZW9mIGtleSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIG1lbW9pemVkSnNvblN0cmluZ2lmeShrZXkpO1xuICAgIH1cbiAgICByZXR1cm4ga2V5O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldExvYWRlcihvcHRpb25zKSB7XG4gICAgY29uc3QgeyBzY2hlbWEsIGNvbnRleHQsIGluZm8sIGZpZWxkTmFtZSA9IGluZm8uZmllbGROYW1lLCBkYXRhTG9hZGVyT3B0aW9ucywgZmllbGROb2RlcyA9IGdldEFjdHVhbEZpZWxkTm9kZXMoaW5mby5maWVsZE5vZGVzWzBdKSwgc2VsZWN0aW9uU2V0ID0gZmllbGROb2Rlc1swXS5zZWxlY3Rpb25TZXQsIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IGxvYWRlcnMgPSBnZXRMb2FkZXJzTWFwKGNvbnRleHQgIT09IG51bGwgJiYgY29udGV4dCAhPT0gdm9pZCAwID8gY29udGV4dCA6IEdMT0JBTF9DT05URVhULCBzY2hlbWEpO1xuICAgIGxldCBjYWNoZUtleSA9IGZpZWxkTmFtZTtcbiAgICBpZiAoc2VsZWN0aW9uU2V0ICE9IG51bGwpIHtcbiAgICAgICAgY2FjaGVLZXkgKz0gbWVtb2l6ZWRQcmludChzZWxlY3Rpb25TZXQpO1xuICAgIH1cbiAgICBsZXQgbG9hZGVyID0gbG9hZGVycy5nZXQoY2FjaGVLZXkpO1xuICAgIGlmIChsb2FkZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBjb25zdCBiYXRjaEZuID0gY3JlYXRlQmF0Y2hGbihvcHRpb25zKTtcbiAgICAgICAgbG9hZGVyID0gbmV3IERhdGFMb2FkZXIoYmF0Y2hGbiwge1xuICAgICAgICAgICAgLy8gUHJldmVudHMgdGhlIGtleXMgdG8gYmUgcGFzc2VkIHdpdGggdGhlIHNhbWUgc3RydWN0dXJlXG4gICAgICAgICAgICBjYWNoZUtleUZuOiBkZWZhdWx0Q2FjaGVLZXlGbixcbiAgICAgICAgICAgIC4uLmRhdGFMb2FkZXJPcHRpb25zLFxuICAgICAgICB9KTtcbiAgICAgICAgbG9hZGVycy5zZXQoY2FjaGVLZXksIGxvYWRlcik7XG4gICAgfVxuICAgIHJldHVybiBsb2FkZXI7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/esm/getLoader.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Subschema.js":
/*!***********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Subschema.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subschema: () => (/* binding */ Subschema),\n/* harmony export */   isSubschema: () => (/* binding */ isSubschema)\n/* harmony export */ });\n/* harmony import */ var _applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applySchemaTransforms.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n\nfunction isSubschema(value) {\n    return Boolean(value.transformedSchema);\n}\nclass Subschema {\n    constructor(config) {\n        var _a;\n        this.schema = config.schema;\n        this.executor = config.executor;\n        this.batch = config.batch;\n        this.batchingOptions = config.batchingOptions;\n        this.createProxyingResolver = config.createProxyingResolver;\n        this.transforms = (_a = config.transforms) !== null && _a !== void 0 ? _a : [];\n        this.merge = config.merge;\n    }\n    get transformedSchema() {\n        var _a, _b;\n        if (!this._transformedSchema) {\n            if (((_b = (_a = globalThis.process) === null || _a === void 0 ? void 0 : _a.env) === null || _b === void 0 ? void 0 : _b['DEBUG']) != null) {\n                console.warn('Transformed schema is not set yet. Returning a dummy one.');\n            }\n            this._transformedSchema = (0,_applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_0__.applySchemaTransforms)(this.schema, this);\n        }\n        return this._transformedSchema;\n    }\n    set transformedSchema(value) {\n        this._transformedSchema = value;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vU3Vic2NoZW1hLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRTtBQUM1RDtBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdGQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vU3Vic2NoZW1hLmpzP2RmMWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYXBwbHlTY2hlbWFUcmFuc2Zvcm1zIH0gZnJvbSAnLi9hcHBseVNjaGVtYVRyYW5zZm9ybXMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGlzU3Vic2NoZW1hKHZhbHVlKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odmFsdWUudHJhbnNmb3JtZWRTY2hlbWEpO1xufVxuZXhwb3J0IGNsYXNzIFN1YnNjaGVtYSB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgdGhpcy5zY2hlbWEgPSBjb25maWcuc2NoZW1hO1xuICAgICAgICB0aGlzLmV4ZWN1dG9yID0gY29uZmlnLmV4ZWN1dG9yO1xuICAgICAgICB0aGlzLmJhdGNoID0gY29uZmlnLmJhdGNoO1xuICAgICAgICB0aGlzLmJhdGNoaW5nT3B0aW9ucyA9IGNvbmZpZy5iYXRjaGluZ09wdGlvbnM7XG4gICAgICAgIHRoaXMuY3JlYXRlUHJveHlpbmdSZXNvbHZlciA9IGNvbmZpZy5jcmVhdGVQcm94eWluZ1Jlc29sdmVyO1xuICAgICAgICB0aGlzLnRyYW5zZm9ybXMgPSAoX2EgPSBjb25maWcudHJhbnNmb3JtcykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogW107XG4gICAgICAgIHRoaXMubWVyZ2UgPSBjb25maWcubWVyZ2U7XG4gICAgfVxuICAgIGdldCB0cmFuc2Zvcm1lZFNjaGVtYSgpIHtcbiAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgaWYgKCF0aGlzLl90cmFuc2Zvcm1lZFNjaGVtYSkge1xuICAgICAgICAgICAgaWYgKCgoX2IgPSAoX2EgPSBnbG9iYWxUaGlzLnByb2Nlc3MpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5lbnYpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYlsnREVCVUcnXSkgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignVHJhbnNmb3JtZWQgc2NoZW1hIGlzIG5vdCBzZXQgeWV0LiBSZXR1cm5pbmcgYSBkdW1teSBvbmUuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl90cmFuc2Zvcm1lZFNjaGVtYSA9IGFwcGx5U2NoZW1hVHJhbnNmb3Jtcyh0aGlzLnNjaGVtYSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYW5zZm9ybWVkU2NoZW1hO1xuICAgIH1cbiAgICBzZXQgdHJhbnNmb3JtZWRTY2hlbWEodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtZWRTY2hlbWEgPSB2YWx1ZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Subschema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Transformer.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Transformer.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transformer: () => (/* binding */ Transformer)\n/* harmony export */ });\n/* harmony import */ var _prepareGatewayDocument_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prepareGatewayDocument.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js\");\n/* harmony import */ var _finalizeGatewayRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./finalizeGatewayRequest.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js\");\n/* harmony import */ var _checkResultAndHandleErrors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./checkResultAndHandleErrors.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js\");\n\n\n\nclass Transformer {\n    constructor(context) {\n        this.transformations = [];\n        this.delegationContext = context;\n        const transforms = context.transforms;\n        const delegationTransforms = transforms.slice().reverse();\n        for (const transform of delegationTransforms) {\n            this.addTransform(transform, {});\n        }\n    }\n    addTransform(transform, context = {}) {\n        this.transformations.push({ transform, context });\n    }\n    transformRequest(originalRequest) {\n        var _a;\n        let request = {\n            ...originalRequest,\n            document: (0,_prepareGatewayDocument_js__WEBPACK_IMPORTED_MODULE_0__.prepareGatewayDocument)(originalRequest.document, this.delegationContext.transformedSchema, this.delegationContext.returnType, (_a = this.delegationContext.info) === null || _a === void 0 ? void 0 : _a.schema),\n        };\n        for (const transformation of this.transformations) {\n            if (transformation.transform.transformRequest) {\n                request = transformation.transform.transformRequest(request, this.delegationContext, transformation.context);\n            }\n        }\n        return (0,_finalizeGatewayRequest_js__WEBPACK_IMPORTED_MODULE_1__.finalizeGatewayRequest)(request, this.delegationContext);\n    }\n    transformResult(originalResult) {\n        let result = originalResult;\n        // from right to left\n        for (let i = this.transformations.length - 1; i >= 0; i--) {\n            const transformation = this.transformations[i];\n            if (transformation.transform.transformResult) {\n                result = transformation.transform.transformResult(result, this.delegationContext, transformation.context);\n            }\n        }\n        return (0,_checkResultAndHandleErrors_js__WEBPACK_IMPORTED_MODULE_2__.checkResultAndHandleErrors)(result, this.delegationContext);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vVHJhbnNmb3JtZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRTtBQUNBO0FBQ1E7QUFDdEU7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBLHdDQUF3QztBQUN4QyxvQ0FBb0Msb0JBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0ZBQXNCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsa0ZBQXNCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELFFBQVE7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsMEZBQTBCO0FBQ3pDO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL1RyYW5zZm9ybWVyLmpzPzg5YWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJlcGFyZUdhdGV3YXlEb2N1bWVudCB9IGZyb20gJy4vcHJlcGFyZUdhdGV3YXlEb2N1bWVudC5qcyc7XG5pbXBvcnQgeyBmaW5hbGl6ZUdhdGV3YXlSZXF1ZXN0IH0gZnJvbSAnLi9maW5hbGl6ZUdhdGV3YXlSZXF1ZXN0LmpzJztcbmltcG9ydCB7IGNoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzIH0gZnJvbSAnLi9jaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycy5qcyc7XG5leHBvcnQgY2xhc3MgVHJhbnNmb3JtZXIge1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1hdGlvbnMgPSBbXTtcbiAgICAgICAgdGhpcy5kZWxlZ2F0aW9uQ29udGV4dCA9IGNvbnRleHQ7XG4gICAgICAgIGNvbnN0IHRyYW5zZm9ybXMgPSBjb250ZXh0LnRyYW5zZm9ybXM7XG4gICAgICAgIGNvbnN0IGRlbGVnYXRpb25UcmFuc2Zvcm1zID0gdHJhbnNmb3Jtcy5zbGljZSgpLnJldmVyc2UoKTtcbiAgICAgICAgZm9yIChjb25zdCB0cmFuc2Zvcm0gb2YgZGVsZWdhdGlvblRyYW5zZm9ybXMpIHtcbiAgICAgICAgICAgIHRoaXMuYWRkVHJhbnNmb3JtKHRyYW5zZm9ybSwge30pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFkZFRyYW5zZm9ybSh0cmFuc2Zvcm0sIGNvbnRleHQgPSB7fSkge1xuICAgICAgICB0aGlzLnRyYW5zZm9ybWF0aW9ucy5wdXNoKHsgdHJhbnNmb3JtLCBjb250ZXh0IH0pO1xuICAgIH1cbiAgICB0cmFuc2Zvcm1SZXF1ZXN0KG9yaWdpbmFsUmVxdWVzdCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGxldCByZXF1ZXN0ID0ge1xuICAgICAgICAgICAgLi4ub3JpZ2luYWxSZXF1ZXN0LFxuICAgICAgICAgICAgZG9jdW1lbnQ6IHByZXBhcmVHYXRld2F5RG9jdW1lbnQob3JpZ2luYWxSZXF1ZXN0LmRvY3VtZW50LCB0aGlzLmRlbGVnYXRpb25Db250ZXh0LnRyYW5zZm9ybWVkU2NoZW1hLCB0aGlzLmRlbGVnYXRpb25Db250ZXh0LnJldHVyblR5cGUsIChfYSA9IHRoaXMuZGVsZWdhdGlvbkNvbnRleHQuaW5mbykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnNjaGVtYSksXG4gICAgICAgIH07XG4gICAgICAgIGZvciAoY29uc3QgdHJhbnNmb3JtYXRpb24gb2YgdGhpcy50cmFuc2Zvcm1hdGlvbnMpIHtcbiAgICAgICAgICAgIGlmICh0cmFuc2Zvcm1hdGlvbi50cmFuc2Zvcm0udHJhbnNmb3JtUmVxdWVzdCkge1xuICAgICAgICAgICAgICAgIHJlcXVlc3QgPSB0cmFuc2Zvcm1hdGlvbi50cmFuc2Zvcm0udHJhbnNmb3JtUmVxdWVzdChyZXF1ZXN0LCB0aGlzLmRlbGVnYXRpb25Db250ZXh0LCB0cmFuc2Zvcm1hdGlvbi5jb250ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmluYWxpemVHYXRld2F5UmVxdWVzdChyZXF1ZXN0LCB0aGlzLmRlbGVnYXRpb25Db250ZXh0KTtcbiAgICB9XG4gICAgdHJhbnNmb3JtUmVzdWx0KG9yaWdpbmFsUmVzdWx0KSB7XG4gICAgICAgIGxldCByZXN1bHQgPSBvcmlnaW5hbFJlc3VsdDtcbiAgICAgICAgLy8gZnJvbSByaWdodCB0byBsZWZ0XG4gICAgICAgIGZvciAobGV0IGkgPSB0aGlzLnRyYW5zZm9ybWF0aW9ucy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgICAgICAgY29uc3QgdHJhbnNmb3JtYXRpb24gPSB0aGlzLnRyYW5zZm9ybWF0aW9uc1tpXTtcbiAgICAgICAgICAgIGlmICh0cmFuc2Zvcm1hdGlvbi50cmFuc2Zvcm0udHJhbnNmb3JtUmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gdHJhbnNmb3JtYXRpb24udHJhbnNmb3JtLnRyYW5zZm9ybVJlc3VsdChyZXN1bHQsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQsIHRyYW5zZm9ybWF0aW9uLmNvbnRleHQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycyhyZXN1bHQsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Transformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySchemaTransforms: () => (/* binding */ applySchemaTransforms)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n// TODO: Instead of memoization, we can make sure that this isn't called multiple times\nconst applySchemaTransforms = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize2)(function applySchemaTransforms(originalWrappingSchema, subschemaConfig) {\n    const schemaTransforms = subschemaConfig.transforms;\n    if (schemaTransforms == null) {\n        return originalWrappingSchema;\n    }\n    return schemaTransforms.reduce((schema, transform) => { var _a; return ((_a = transform.transformSchema) === null || _a === void 0 ? void 0 : _a.call(transform, schema, subschemaConfig)) || schema; }, originalWrappingSchema);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vYXBwbHlTY2hlbWFUcmFuc2Zvcm1zLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdEO0FBQ2hEO0FBQ08sOEJBQThCLDhEQUFRO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNERBQTRELFFBQVEsdUlBQXVJO0FBQzNNLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL2FwcGx5U2NoZW1hVHJhbnNmb3Jtcy5qcz9jODY0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lbW9pemUyIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuLy8gVE9ETzogSW5zdGVhZCBvZiBtZW1vaXphdGlvbiwgd2UgY2FuIG1ha2Ugc3VyZSB0aGF0IHRoaXMgaXNuJ3QgY2FsbGVkIG11bHRpcGxlIHRpbWVzXG5leHBvcnQgY29uc3QgYXBwbHlTY2hlbWFUcmFuc2Zvcm1zID0gbWVtb2l6ZTIoZnVuY3Rpb24gYXBwbHlTY2hlbWFUcmFuc2Zvcm1zKG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEsIHN1YnNjaGVtYUNvbmZpZykge1xuICAgIGNvbnN0IHNjaGVtYVRyYW5zZm9ybXMgPSBzdWJzY2hlbWFDb25maWcudHJhbnNmb3JtcztcbiAgICBpZiAoc2NoZW1hVHJhbnNmb3JtcyA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBvcmlnaW5hbFdyYXBwaW5nU2NoZW1hO1xuICAgIH1cbiAgICByZXR1cm4gc2NoZW1hVHJhbnNmb3Jtcy5yZWR1Y2UoKHNjaGVtYSwgdHJhbnNmb3JtKSA9PiB7IHZhciBfYTsgcmV0dXJuICgoX2EgPSB0cmFuc2Zvcm0udHJhbnNmb3JtU2NoZW1hKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbCh0cmFuc2Zvcm0sIHNjaGVtYSwgc3Vic2NoZW1hQ29uZmlnKSkgfHwgc2NoZW1hOyB9LCBvcmlnaW5hbFdyYXBwaW5nU2NoZW1hKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkResultAndHandleErrors: () => (/* binding */ checkResultAndHandleErrors),\n/* harmony export */   mergeDataAndErrors: () => (/* binding */ mergeDataAndErrors)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/jsutils/Path.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\");\n/* harmony import */ var _resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resolveExternalValue.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\");\n\n\n\nfunction checkResultAndHandleErrors(result, delegationContext) {\n    const { context, info, fieldName: responseKey = getResponseKey(info), subschema, returnType = getReturnType(info), skipTypeMerging, onLocatedError, } = delegationContext;\n    const { data, unpathedErrors } = mergeDataAndErrors(result.data == null ? undefined : result.data[responseKey], result.errors == null ? [] : result.errors, info != null && info.path ? (0,graphql__WEBPACK_IMPORTED_MODULE_0__.pathToArray)(info.path) : undefined, onLocatedError);\n    return (0,_resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_1__.resolveExternalValue)(data, unpathedErrors, subschema, context, info, returnType, skipTypeMerging);\n}\nfunction mergeDataAndErrors(data, errors, path, onLocatedError, index = 1) {\n    var _a;\n    if (data == null) {\n        if (!errors.length) {\n            return { data: null, unpathedErrors: [] };\n        }\n        if (errors.length === 1) {\n            const error = onLocatedError ? onLocatedError(errors[0]) : errors[0];\n            const newPath = path === undefined ? error.path : !error.path ? path : path.concat(error.path.slice(1));\n            return { data: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.relocatedError)(errors[0], newPath), unpathedErrors: [] };\n        }\n        // We cast path as any for GraphQL.js 14 compat\n        // locatedError path argument must be defined, but it is just forwarded to a constructor that allows a undefined value\n        // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/locatedError.js#L25\n        // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/GraphQLError.js#L19\n        const combinedError = new _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.AggregateError(errors, errors.map(error => error.message).join(', \\n'));\n        const newError = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.locatedError)(combinedError, undefined, path);\n        return { data: newError, unpathedErrors: [] };\n    }\n    if (!errors.length) {\n        return { data, unpathedErrors: [] };\n    }\n    const unpathedErrors = [];\n    const errorMap = new Map();\n    for (const error of errors) {\n        const pathSegment = (_a = error.path) === null || _a === void 0 ? void 0 : _a[index];\n        if (pathSegment != null) {\n            let pathSegmentErrors = errorMap.get(pathSegment);\n            if (pathSegmentErrors === undefined) {\n                pathSegmentErrors = [error];\n                errorMap.set(pathSegment, pathSegmentErrors);\n            }\n            else {\n                pathSegmentErrors.push(error);\n            }\n        }\n        else {\n            unpathedErrors.push(error);\n        }\n    }\n    for (const [pathSegment, pathSegmentErrors] of errorMap) {\n        if (data[pathSegment] !== undefined) {\n            const { data: newData, unpathedErrors: newErrors } = mergeDataAndErrors(data[pathSegment], pathSegmentErrors, path, onLocatedError, index + 1);\n            data[pathSegment] = newData;\n            unpathedErrors.push(...newErrors);\n        }\n        else {\n            unpathedErrors.push(...pathSegmentErrors);\n        }\n    }\n    return { data, unpathedErrors };\n}\nfunction getResponseKey(info) {\n    if (info == null) {\n        throw new Error(`Data cannot be extracted from result without an explicit key or source schema.`);\n    }\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.getResponseKeyFromInfo)(info);\n}\nfunction getReturnType(info) {\n    if (info == null) {\n        throw new Error(`Return type cannot be inferred without a source schema.`);\n    }\n    return info.returnType;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBNEQ7QUFDa0M7QUFDN0I7QUFDMUQ7QUFDUCxZQUFZLDhJQUE4STtBQUMxSixZQUFZLHVCQUF1Qix5SkFBeUosb0RBQW1CO0FBQy9NLFdBQVcsOEVBQW9CO0FBQy9CO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBTSxvRUFBYztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLGdFQUFjO0FBQ2hELHlCQUF5QixxREFBWTtBQUNyQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkNBQTJDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRFQUFzQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMuanM/MjliYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXNwb25zZVBhdGhBc0FycmF5LCBsb2NhdGVkRXJyb3IgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IEFnZ3JlZ2F0ZUVycm9yLCBnZXRSZXNwb25zZUtleUZyb21JbmZvLCByZWxvY2F0ZWRFcnJvciB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IHJlc29sdmVFeHRlcm5hbFZhbHVlIH0gZnJvbSAnLi9yZXNvbHZlRXh0ZXJuYWxWYWx1ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMocmVzdWx0LCBkZWxlZ2F0aW9uQ29udGV4dCkge1xuICAgIGNvbnN0IHsgY29udGV4dCwgaW5mbywgZmllbGROYW1lOiByZXNwb25zZUtleSA9IGdldFJlc3BvbnNlS2V5KGluZm8pLCBzdWJzY2hlbWEsIHJldHVyblR5cGUgPSBnZXRSZXR1cm5UeXBlKGluZm8pLCBza2lwVHlwZU1lcmdpbmcsIG9uTG9jYXRlZEVycm9yLCB9ID0gZGVsZWdhdGlvbkNvbnRleHQ7XG4gICAgY29uc3QgeyBkYXRhLCB1bnBhdGhlZEVycm9ycyB9ID0gbWVyZ2VEYXRhQW5kRXJyb3JzKHJlc3VsdC5kYXRhID09IG51bGwgPyB1bmRlZmluZWQgOiByZXN1bHQuZGF0YVtyZXNwb25zZUtleV0sIHJlc3VsdC5lcnJvcnMgPT0gbnVsbCA/IFtdIDogcmVzdWx0LmVycm9ycywgaW5mbyAhPSBudWxsICYmIGluZm8ucGF0aCA/IHJlc3BvbnNlUGF0aEFzQXJyYXkoaW5mby5wYXRoKSA6IHVuZGVmaW5lZCwgb25Mb2NhdGVkRXJyb3IpO1xuICAgIHJldHVybiByZXNvbHZlRXh0ZXJuYWxWYWx1ZShkYXRhLCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCByZXR1cm5UeXBlLCBza2lwVHlwZU1lcmdpbmcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGF0YUFuZEVycm9ycyhkYXRhLCBlcnJvcnMsIHBhdGgsIG9uTG9jYXRlZEVycm9yLCBpbmRleCA9IDEpIHtcbiAgICB2YXIgX2E7XG4gICAgaWYgKGRhdGEgPT0gbnVsbCkge1xuICAgICAgICBpZiAoIWVycm9ycy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IG51bGwsIHVucGF0aGVkRXJyb3JzOiBbXSB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChlcnJvcnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICBjb25zdCBlcnJvciA9IG9uTG9jYXRlZEVycm9yID8gb25Mb2NhdGVkRXJyb3IoZXJyb3JzWzBdKSA6IGVycm9yc1swXTtcbiAgICAgICAgICAgIGNvbnN0IG5ld1BhdGggPSBwYXRoID09PSB1bmRlZmluZWQgPyBlcnJvci5wYXRoIDogIWVycm9yLnBhdGggPyBwYXRoIDogcGF0aC5jb25jYXQoZXJyb3IucGF0aC5zbGljZSgxKSk7XG4gICAgICAgICAgICByZXR1cm4geyBkYXRhOiByZWxvY2F0ZWRFcnJvcihlcnJvcnNbMF0sIG5ld1BhdGgpLCB1bnBhdGhlZEVycm9yczogW10gfTtcbiAgICAgICAgfVxuICAgICAgICAvLyBXZSBjYXN0IHBhdGggYXMgYW55IGZvciBHcmFwaFFMLmpzIDE0IGNvbXBhdFxuICAgICAgICAvLyBsb2NhdGVkRXJyb3IgcGF0aCBhcmd1bWVudCBtdXN0IGJlIGRlZmluZWQsIGJ1dCBpdCBpcyBqdXN0IGZvcndhcmRlZCB0byBhIGNvbnN0cnVjdG9yIHRoYXQgYWxsb3dzIGEgdW5kZWZpbmVkIHZhbHVlXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvYmxvYi9iNGJmZjBiYTljMTVjOWQ3MjQ1ZGQ2ODU1NmU3NTRjNDFmMjYzMjg5L3NyYy9lcnJvci9sb2NhdGVkRXJyb3IuanMjTDI1XG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvYmxvYi9iNGJmZjBiYTljMTVjOWQ3MjQ1ZGQ2ODU1NmU3NTRjNDFmMjYzMjg5L3NyYy9lcnJvci9HcmFwaFFMRXJyb3IuanMjTDE5XG4gICAgICAgIGNvbnN0IGNvbWJpbmVkRXJyb3IgPSBuZXcgQWdncmVnYXRlRXJyb3IoZXJyb3JzLCBlcnJvcnMubWFwKGVycm9yID0+IGVycm9yLm1lc3NhZ2UpLmpvaW4oJywgXFxuJykpO1xuICAgICAgICBjb25zdCBuZXdFcnJvciA9IGxvY2F0ZWRFcnJvcihjb21iaW5lZEVycm9yLCB1bmRlZmluZWQsIHBhdGgpO1xuICAgICAgICByZXR1cm4geyBkYXRhOiBuZXdFcnJvciwgdW5wYXRoZWRFcnJvcnM6IFtdIH07XG4gICAgfVxuICAgIGlmICghZXJyb3JzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4geyBkYXRhLCB1bnBhdGhlZEVycm9yczogW10gfTtcbiAgICB9XG4gICAgY29uc3QgdW5wYXRoZWRFcnJvcnMgPSBbXTtcbiAgICBjb25zdCBlcnJvck1hcCA9IG5ldyBNYXAoKTtcbiAgICBmb3IgKGNvbnN0IGVycm9yIG9mIGVycm9ycykge1xuICAgICAgICBjb25zdCBwYXRoU2VnbWVudCA9IChfYSA9IGVycm9yLnBhdGgpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVtpbmRleF07XG4gICAgICAgIGlmIChwYXRoU2VnbWVudCAhPSBudWxsKSB7XG4gICAgICAgICAgICBsZXQgcGF0aFNlZ21lbnRFcnJvcnMgPSBlcnJvck1hcC5nZXQocGF0aFNlZ21lbnQpO1xuICAgICAgICAgICAgaWYgKHBhdGhTZWdtZW50RXJyb3JzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBwYXRoU2VnbWVudEVycm9ycyA9IFtlcnJvcl07XG4gICAgICAgICAgICAgICAgZXJyb3JNYXAuc2V0KHBhdGhTZWdtZW50LCBwYXRoU2VnbWVudEVycm9ycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXRoU2VnbWVudEVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVucGF0aGVkRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgW3BhdGhTZWdtZW50LCBwYXRoU2VnbWVudEVycm9yc10gb2YgZXJyb3JNYXApIHtcbiAgICAgICAgaWYgKGRhdGFbcGF0aFNlZ21lbnRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZGF0YTogbmV3RGF0YSwgdW5wYXRoZWRFcnJvcnM6IG5ld0Vycm9ycyB9ID0gbWVyZ2VEYXRhQW5kRXJyb3JzKGRhdGFbcGF0aFNlZ21lbnRdLCBwYXRoU2VnbWVudEVycm9ycywgcGF0aCwgb25Mb2NhdGVkRXJyb3IsIGluZGV4ICsgMSk7XG4gICAgICAgICAgICBkYXRhW3BhdGhTZWdtZW50XSA9IG5ld0RhdGE7XG4gICAgICAgICAgICB1bnBhdGhlZEVycm9ycy5wdXNoKC4uLm5ld0Vycm9ycyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB1bnBhdGhlZEVycm9ycy5wdXNoKC4uLnBhdGhTZWdtZW50RXJyb3JzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBkYXRhLCB1bnBhdGhlZEVycm9ycyB9O1xufVxuZnVuY3Rpb24gZ2V0UmVzcG9uc2VLZXkoaW5mbykge1xuICAgIGlmIChpbmZvID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEYXRhIGNhbm5vdCBiZSBleHRyYWN0ZWQgZnJvbSByZXN1bHQgd2l0aG91dCBhbiBleHBsaWNpdCBrZXkgb3Igc291cmNlIHNjaGVtYS5gKTtcbiAgICB9XG4gICAgcmV0dXJuIGdldFJlc3BvbnNlS2V5RnJvbUluZm8oaW5mbyk7XG59XG5mdW5jdGlvbiBnZXRSZXR1cm5UeXBlKGluZm8pIHtcbiAgICBpZiAoaW5mbyA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUmV0dXJuIHR5cGUgY2Fubm90IGJlIGluZmVycmVkIHdpdGhvdXQgYSBzb3VyY2Ugc2NoZW1hLmApO1xuICAgIH1cbiAgICByZXR1cm4gaW5mby5yZXR1cm5UeXBlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/createRequest.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/createRequest.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRequest: () => (/* binding */ createRequest),\n/* harmony export */   getDelegatingOperation: () => (/* binding */ getDelegatingOperation)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/updateArgument.js\");\n\n\nfunction getDelegatingOperation(parentType, schema) {\n    if (parentType === schema.getMutationType()) {\n        return 'mutation';\n    }\n    else if (parentType === schema.getSubscriptionType()) {\n        return 'subscription';\n    }\n    return 'query';\n}\nfunction createRequest({ sourceSchema, sourceParentType, sourceFieldName, fragments, variableDefinitions, variableValues, targetRootValue, targetOperationName, targetOperation, targetFieldName, selectionSet, fieldNodes, context, info, }) {\n    var _a, _b;\n    let newSelectionSet;\n    const argumentNodeMap = Object.create(null);\n    if (selectionSet != null) {\n        newSelectionSet = selectionSet;\n    }\n    else {\n        const selections = [];\n        for (const fieldNode of fieldNodes || []) {\n            if (fieldNode.selectionSet) {\n                for (const selection of fieldNode.selectionSet.selections) {\n                    selections.push(selection);\n                }\n            }\n        }\n        newSelectionSet = selections.length\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                selections,\n            }\n            : undefined;\n        const args = (_a = fieldNodes === null || fieldNodes === void 0 ? void 0 : fieldNodes[0]) === null || _a === void 0 ? void 0 : _a.arguments;\n        if (args) {\n            for (const argNode of args) {\n                argumentNodeMap[argNode.name.value] = argNode;\n            }\n        }\n    }\n    const newVariables = Object.create(null);\n    const variableDefinitionMap = Object.create(null);\n    if (sourceSchema != null && variableDefinitions != null) {\n        for (const def of variableDefinitions) {\n            const varName = def.variable.name.value;\n            variableDefinitionMap[varName] = def;\n            const varType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.typeFromAST)(sourceSchema, def.type);\n            const serializedValue = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.serializeInputValue)(varType, variableValues === null || variableValues === void 0 ? void 0 : variableValues[varName]);\n            if (serializedValue !== undefined) {\n                newVariables[varName] = serializedValue;\n            }\n        }\n    }\n    if (sourceParentType != null && sourceFieldName != null) {\n        updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, newVariables);\n    }\n    const rootFieldName = targetFieldName !== null && targetFieldName !== void 0 ? targetFieldName : (_b = fieldNodes === null || fieldNodes === void 0 ? void 0 : fieldNodes[0]) === null || _b === void 0 ? void 0 : _b.name.value;\n    if (rootFieldName === undefined) {\n        throw new Error(`Either \"targetFieldName\" or a non empty \"fieldNodes\" array must be provided.`);\n    }\n    const rootfieldNode = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD,\n        arguments: Object.values(argumentNodeMap),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: rootFieldName,\n        },\n        selectionSet: newSelectionSet,\n    };\n    const operationName = targetOperationName\n        ? {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: targetOperationName,\n        }\n        : undefined;\n    const operationDefinition = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION,\n        name: operationName,\n        operation: targetOperation,\n        variableDefinitions: Object.values(variableDefinitionMap),\n        selectionSet: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n            selections: [rootfieldNode],\n        },\n    };\n    const definitions = [operationDefinition];\n    if (fragments != null) {\n        for (const fragmentName in fragments) {\n            const fragment = fragments[fragmentName];\n            definitions.push(fragment);\n        }\n    }\n    const document = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT,\n        definitions,\n    };\n    return {\n        document,\n        variables: newVariables,\n        rootValue: targetRootValue,\n        operationName: targetOperationName,\n        context,\n        info,\n        operationType: targetOperation,\n    };\n}\nfunction updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, variableValues) {\n    const generateVariableName = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.createVariableNameGenerator)(variableDefinitionMap);\n    const sourceField = sourceParentType.getFields()[sourceFieldName];\n    if (!sourceField) {\n        throw new Error(`Field \"${sourceFieldName}\" was not found in type \"${sourceParentType}\".`);\n    }\n    for (const argument of sourceField.args) {\n        const argName = argument.name;\n        const sourceArgType = argument.type;\n        if (argumentNodeMap[argName] === undefined) {\n            const defaultValue = argument.defaultValue;\n            if (defaultValue !== undefined) {\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.updateArgument)(argumentNodeMap, variableDefinitionMap, variableValues, argName, generateVariableName(argName), sourceArgType, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.serializeInputValue)(sourceArgType, defaultValue));\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/createRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js":
/*!******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultExecutor: () => (/* binding */ createDefaultExecutor),\n/* harmony export */   delegateRequest: () => (/* binding */ delegateRequest),\n/* harmony export */   delegateToSchema: () => (/* binding */ delegateToSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/validation/validate.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_batch_execute__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-tools/batch-execute */ \"(ssr)/../node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _subschemaConfig_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./subschemaConfig.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n/* harmony import */ var _Subschema_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Subschema.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Subschema.js\");\n/* harmony import */ var _createRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createRequest.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/createRequest.js\");\n/* harmony import */ var _Transformer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transformer.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/Transformer.js\");\n/* harmony import */ var _applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./applySchemaTransforms.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n/* harmony import */ var _graphql_tools_executor__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @graphql-tools/executor */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\");\n\n\n\n\n\n\n\n\n\n\nfunction delegateToSchema(options) {\n    var _a, _b;\n    const { info, schema, rootValue = (_a = schema.rootValue) !== null && _a !== void 0 ? _a : info.rootValue, operationName = (_b = info.operation.name) === null || _b === void 0 ? void 0 : _b.value, operation = (0,_createRequest_js__WEBPACK_IMPORTED_MODULE_1__.getDelegatingOperation)(info.parentType, info.schema), fieldName = info.fieldName, selectionSet, fieldNodes = info.fieldNodes, context, } = options;\n    const request = (0,_createRequest_js__WEBPACK_IMPORTED_MODULE_1__.createRequest)({\n        sourceSchema: info.schema,\n        sourceParentType: info.parentType,\n        sourceFieldName: info.fieldName,\n        fragments: info.fragments,\n        variableDefinitions: info.operation.variableDefinitions,\n        variableValues: info.variableValues,\n        targetRootValue: rootValue,\n        targetOperationName: operationName,\n        targetOperation: operation,\n        targetFieldName: fieldName,\n        selectionSet,\n        fieldNodes,\n        context,\n        info,\n    });\n    return delegateRequest({\n        ...options,\n        request,\n    });\n}\nfunction getDelegationReturnType(targetSchema, operation, fieldName) {\n    const rootType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getDefinedRootType)(targetSchema, operation);\n    const rootFieldType = rootType.getFields()[fieldName];\n    if (!rootFieldType) {\n        throw new Error(`Unable to find field '${fieldName}' in type '${rootType}'.`);\n    }\n    return rootFieldType.type;\n}\nfunction delegateRequest(options) {\n    const delegationContext = getDelegationContext(options);\n    const transformer = new _Transformer_js__WEBPACK_IMPORTED_MODULE_3__.Transformer(delegationContext);\n    const processedRequest = transformer.transformRequest(options.request);\n    if (options.validateRequest) {\n        validateRequest(delegationContext, processedRequest.document);\n    }\n    const executor = getExecutor(delegationContext);\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executor(processedRequest))\n        .then(originalResult => {\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.isAsyncIterable)(originalResult)) {\n            const iterator = originalResult[Symbol.asyncIterator]();\n            // \"subscribe\" to the subscription result and map the result through the transforms\n            return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.mapAsyncIterator)(iterator, result => transformer.transformResult(result));\n        }\n        return transformer.transformResult(originalResult);\n    })\n        .resolve();\n}\nfunction getDelegationContext({ request, schema, fieldName, returnType, args, info, transforms = [], transformedSchema, skipTypeMerging = false, }) {\n    var _a, _b, _c, _d;\n    const operationDefinition = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.getOperationASTFromRequest)(request);\n    let targetFieldName;\n    if (fieldName == null) {\n        targetFieldName = operationDefinition.selectionSet.selections[0].name.value;\n    }\n    else {\n        targetFieldName = fieldName;\n    }\n    const stitchingInfo = (_a = info === null || info === void 0 ? void 0 : info.schema.extensions) === null || _a === void 0 ? void 0 : _a['stitchingInfo'];\n    const subschemaOrSubschemaConfig = (_b = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.subschemaMap.get(schema)) !== null && _b !== void 0 ? _b : schema;\n    const operation = operationDefinition.operation;\n    if ((0,_subschemaConfig_js__WEBPACK_IMPORTED_MODULE_7__.isSubschemaConfig)(subschemaOrSubschemaConfig)) {\n        const targetSchema = subschemaOrSubschemaConfig.schema;\n        return {\n            subschema: schema,\n            subschemaConfig: subschemaOrSubschemaConfig,\n            targetSchema,\n            operation,\n            fieldName: targetFieldName,\n            args,\n            context: request.context,\n            info,\n            returnType: (_c = returnType !== null && returnType !== void 0 ? returnType : info === null || info === void 0 ? void 0 : info.returnType) !== null && _c !== void 0 ? _c : getDelegationReturnType(targetSchema, operation, targetFieldName),\n            transforms: subschemaOrSubschemaConfig.transforms != null\n                ? subschemaOrSubschemaConfig.transforms.concat(transforms)\n                : transforms,\n            transformedSchema: transformedSchema !== null && transformedSchema !== void 0 ? transformedSchema : (subschemaOrSubschemaConfig instanceof _Subschema_js__WEBPACK_IMPORTED_MODULE_8__.Subschema\n                ? subschemaOrSubschemaConfig.transformedSchema\n                : (0,_applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_9__.applySchemaTransforms)(targetSchema, subschemaOrSubschemaConfig)),\n            skipTypeMerging,\n        };\n    }\n    return {\n        subschema: schema,\n        subschemaConfig: undefined,\n        targetSchema: subschemaOrSubschemaConfig,\n        operation,\n        fieldName: targetFieldName,\n        args,\n        context: request.context,\n        info,\n        returnType: (_d = returnType !== null && returnType !== void 0 ? returnType : info === null || info === void 0 ? void 0 : info.returnType) !== null && _d !== void 0 ? _d : getDelegationReturnType(subschemaOrSubschemaConfig, operation, targetFieldName),\n        transforms,\n        transformedSchema: transformedSchema !== null && transformedSchema !== void 0 ? transformedSchema : subschemaOrSubschemaConfig,\n        skipTypeMerging,\n    };\n}\nfunction validateRequest(delegationContext, document) {\n    const errors = (0,graphql__WEBPACK_IMPORTED_MODULE_10__.validate)(delegationContext.targetSchema, document);\n    if (errors.length > 0) {\n        if (errors.length > 1) {\n            const combinedError = new _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.AggregateError(errors, errors.map(error => error.message).join(', \\n'));\n            throw combinedError;\n        }\n        const error = errors[0];\n        throw error.originalError || error;\n    }\n}\nconst GLOBAL_CONTEXT = {};\nfunction getExecutor(delegationContext) {\n    const { subschemaConfig, targetSchema, context } = delegationContext;\n    let executor = (subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.executor) || createDefaultExecutor(targetSchema);\n    if (subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.batch) {\n        const batchingOptions = subschemaConfig === null || subschemaConfig === void 0 ? void 0 : subschemaConfig.batchingOptions;\n        executor = (0,_graphql_tools_batch_execute__WEBPACK_IMPORTED_MODULE_12__.getBatchingExecutor)(context !== null && context !== void 0 ? context : GLOBAL_CONTEXT, executor, batchingOptions === null || batchingOptions === void 0 ? void 0 : batchingOptions.dataLoaderOptions, batchingOptions === null || batchingOptions === void 0 ? void 0 : batchingOptions.extensionsReducer);\n    }\n    return executor;\n}\nconst createDefaultExecutor = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_13__.memoize1)(function createDefaultExecutor(schema) {\n    return function defaultExecutor(request) {\n        return (0,_graphql_tools_executor__WEBPACK_IMPORTED_MODULE_14__.normalizedExecutor)({\n            schema,\n            document: request.document,\n            rootValue: request.rootValue,\n            contextValue: request.context,\n            variableValues: request.variables,\n            operationName: request.operationName,\n        });\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   finalizeGatewayRequest: () => (/* binding */ finalizeGatewayRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/updateArgument.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\");\n/* harmony import */ var _getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getDocumentMetadata.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\");\n\n\n\nfunction finalizeGatewayDocument(targetSchema, fragments, operations) {\n    var _a;\n    let usedVariables = [];\n    let usedFragments = [];\n    const newOperations = [];\n    let newFragments = [];\n    const validFragments = [];\n    const validFragmentsWithType = Object.create(null);\n    for (const fragment of fragments) {\n        const typeName = fragment.typeCondition.name.value;\n        const type = targetSchema.getType(typeName);\n        if (type != null) {\n            validFragments.push(fragment);\n            validFragmentsWithType[fragment.name.value] = type;\n        }\n    }\n    let fragmentSet = Object.create(null);\n    for (const operation of operations) {\n        const type = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getDefinedRootType)(targetSchema, operation.operation);\n        const { selectionSet, usedFragments: operationUsedFragments, usedVariables: operationUsedVariables, } = finalizeSelectionSet(targetSchema, type, validFragmentsWithType, operation.selectionSet);\n        usedFragments = union(usedFragments, operationUsedFragments);\n        const { usedVariables: collectedUsedVariables, newFragments: collectedNewFragments, fragmentSet: collectedFragmentSet, } = collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments);\n        const operationOrFragmentVariables = union(operationUsedVariables, collectedUsedVariables);\n        usedVariables = union(usedVariables, operationOrFragmentVariables);\n        newFragments = collectedNewFragments;\n        fragmentSet = collectedFragmentSet;\n        const variableDefinitions = ((_a = operation.variableDefinitions) !== null && _a !== void 0 ? _a : []).filter((variable) => operationOrFragmentVariables.indexOf(variable.variable.name.value) !== -1);\n        newOperations.push({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION,\n            operation: operation.operation,\n            name: operation.name,\n            directives: operation.directives,\n            variableDefinitions,\n            selectionSet,\n        });\n    }\n    const newDocument = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT,\n        definitions: [...newOperations, ...newFragments],\n    };\n    return {\n        usedVariables,\n        newDocument,\n    };\n}\nfunction finalizeGatewayRequest(originalRequest, delegationContext) {\n    let { document, variables } = originalRequest;\n    let { operations, fragments } = (0,_getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_2__.getDocumentMetadata)(document);\n    const { targetSchema, args } = delegationContext;\n    if (args) {\n        const requestWithNewVariables = addVariablesToRootFields(targetSchema, operations, args);\n        operations = requestWithNewVariables.newOperations;\n        variables = Object.assign({}, variables !== null && variables !== void 0 ? variables : {}, requestWithNewVariables.newVariables);\n    }\n    const { usedVariables, newDocument } = finalizeGatewayDocument(targetSchema, fragments, operations);\n    const newVariables = {};\n    if (variables != null) {\n        for (const variableName of usedVariables) {\n            const variableValue = variables[variableName];\n            if (variableValue !== undefined) {\n                newVariables[variableName] = variableValue;\n            }\n        }\n    }\n    return {\n        ...originalRequest,\n        document: newDocument,\n        variables: newVariables,\n    };\n}\nfunction addVariablesToRootFields(targetSchema, operations, args) {\n    const newVariables = Object.create(null);\n    const newOperations = operations.map((operation) => {\n        var _a, _b;\n        const variableDefinitionMap = ((_a = operation.variableDefinitions) !== null && _a !== void 0 ? _a : []).reduce((prev, def) => ({\n            ...prev,\n            [def.variable.name.value]: def,\n        }), {});\n        const type = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getDefinedRootType)(targetSchema, operation.operation);\n        const newSelections = [];\n        for (const selection of operation.selectionSet.selections) {\n            if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD) {\n                const argumentNodes = (_b = selection.arguments) !== null && _b !== void 0 ? _b : [];\n                const argumentNodeMap = argumentNodes.reduce((prev, argument) => ({\n                    ...prev,\n                    [argument.name.value]: argument,\n                }), {});\n                const targetField = type.getFields()[selection.name.value];\n                // excludes __typename\n                if (targetField != null) {\n                    updateArguments(targetField, argumentNodeMap, variableDefinitionMap, newVariables, args);\n                }\n                newSelections.push({\n                    ...selection,\n                    arguments: Object.values(argumentNodeMap),\n                });\n            }\n            else {\n                newSelections.push(selection);\n            }\n        }\n        const newSelectionSet = {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n            selections: newSelections,\n        };\n        return {\n            ...operation,\n            variableDefinitions: Object.values(variableDefinitionMap),\n            selectionSet: newSelectionSet,\n        };\n    });\n    return {\n        newOperations,\n        newVariables,\n    };\n}\nfunction updateArguments(targetField, argumentNodeMap, variableDefinitionMap, variableValues, newArgs) {\n    const generateVariableName = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.createVariableNameGenerator)(variableDefinitionMap);\n    for (const argument of targetField.args) {\n        const argName = argument.name;\n        const argType = argument.type;\n        if (argName in newArgs) {\n            (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.updateArgument)(argumentNodeMap, variableDefinitionMap, variableValues, argName, generateVariableName(argName), argType, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.serializeInputValue)(argType, newArgs[argName]));\n        }\n    }\n}\nfunction collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments) {\n    let remainingFragments = usedFragments.slice();\n    let usedVariables = [];\n    const newFragments = [];\n    while (remainingFragments.length !== 0) {\n        const nextFragmentName = remainingFragments.pop();\n        const fragment = validFragments.find(fr => fr.name.value === nextFragmentName);\n        if (fragment != null) {\n            const name = nextFragmentName;\n            const typeName = fragment.typeCondition.name.value;\n            const type = targetSchema.getType(typeName);\n            if (type == null) {\n                throw new Error(`Fragment reference type \"${typeName}\", but the type is not contained within the target schema.`);\n            }\n            const { selectionSet, usedFragments: fragmentUsedFragments, usedVariables: fragmentUsedVariables, } = finalizeSelectionSet(targetSchema, type, validFragmentsWithType, fragment.selectionSet);\n            remainingFragments = union(remainingFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            if (name && !(name in fragmentSet)) {\n                fragmentSet[name] = true;\n                newFragments.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: fragment.typeCondition,\n                    selectionSet,\n                });\n            }\n        }\n    }\n    return {\n        usedVariables,\n        newFragments,\n        fragmentSet,\n    };\n}\nconst filteredSelectionSetVisitorKeys = {\n    SelectionSet: ['selections'],\n    Field: ['selectionSet'],\n    InlineFragment: ['selectionSet'],\n    FragmentDefinition: ['selectionSet'],\n};\nconst variablesVisitorKeys = {\n    SelectionSet: ['selections'],\n    Field: ['arguments', 'directives', 'selectionSet'],\n    Argument: ['value'],\n    InlineFragment: ['directives', 'selectionSet'],\n    FragmentSpread: ['directives'],\n    FragmentDefinition: ['selectionSet'],\n    ObjectValue: ['fields'],\n    ObjectField: ['name', 'value'],\n    Directive: ['arguments'],\n    ListValue: ['values'],\n};\nfunction finalizeSelectionSet(schema, type, validFragments, selectionSet) {\n    const usedFragments = [];\n    const usedVariables = [];\n    const typeInfo = graphql__WEBPACK_IMPORTED_MODULE_5__.versionInfo.major < 16 ? new graphql__WEBPACK_IMPORTED_MODULE_6__.TypeInfo(schema, undefined, type) : new graphql__WEBPACK_IMPORTED_MODULE_6__.TypeInfo(schema, type);\n    const filteredSelectionSet = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.visit)(selectionSet, (0,graphql__WEBPACK_IMPORTED_MODULE_6__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD]: {\n            enter: node => {\n                const parentType = typeInfo.getParentType();\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isObjectType)(parentType) || (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isInterfaceType)(parentType)) {\n                    const fields = parentType.getFields();\n                    const field = node.name.value === '__typename' ? graphql__WEBPACK_IMPORTED_MODULE_9__.TypeNameMetaFieldDef : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    const args = field.args != null ? field.args : [];\n                    const argsMap = Object.create(null);\n                    for (const arg of args) {\n                        argsMap[arg.name] = arg;\n                    }\n                    if (node.arguments != null) {\n                        const newArgs = [];\n                        for (const arg of node.arguments) {\n                            if (arg.name.value in argsMap) {\n                                newArgs.push(arg);\n                            }\n                        }\n                        if (newArgs.length !== node.arguments.length) {\n                            return {\n                                ...node,\n                                arguments: newArgs,\n                            };\n                        }\n                    }\n                }\n            },\n            leave: node => {\n                const type = typeInfo.getType();\n                if (type == null) {\n                    throw new Error(`No type was found for field node ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_10__.inspect)(node)}.`);\n                }\n                const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_8__.getNamedType)(type);\n                if (!schema.getType(namedType.name) == null) {\n                    return null;\n                }\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_8__.isObjectType)(namedType) || (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isInterfaceType)(namedType)) {\n                    const selections = node.selectionSet != null ? node.selectionSet.selections : null;\n                    if (selections == null || selections.length === 0) {\n                        return null;\n                    }\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_SPREAD]: {\n            enter: node => {\n                if (!(node.name.value in validFragments)) {\n                    return null;\n                }\n                const parentType = typeInfo.getParentType();\n                const innerType = validFragments[node.name.value];\n                if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.implementsAbstractType)(schema, parentType, innerType)) {\n                    return null;\n                }\n                usedFragments.push(node.name.value);\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT]: {\n            enter: node => {\n                if (node.typeCondition != null) {\n                    const parentType = typeInfo.getParentType();\n                    const innerType = schema.getType(node.typeCondition.name.value);\n                    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.implementsAbstractType)(schema, parentType, innerType)) {\n                        return null;\n                    }\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET]: {\n            leave: node => {\n                const parentType = typeInfo.getParentType();\n                if (parentType != null && (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isAbstractType)(parentType)) {\n                    const selections = node.selections.concat([\n                        {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n                            name: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                value: '__typename',\n                            },\n                        },\n                    ]);\n                    return {\n                        ...node,\n                        selections,\n                    };\n                }\n            },\n        },\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    filteredSelectionSetVisitorKeys);\n    (0,graphql__WEBPACK_IMPORTED_MODULE_7__.visit)(filteredSelectionSet, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE]: variableNode => {\n            usedVariables.push(variableNode.name.value);\n        },\n    }, \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    variablesVisitorKeys);\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments,\n        usedVariables,\n    };\n}\nfunction union(...arrays) {\n    const cache = Object.create(null);\n    const result = [];\n    for (const array of arrays) {\n        for (const item of array) {\n            if (!(item in cache)) {\n                cache[item] = true;\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDocumentMetadata: () => (/* binding */ getDocumentMetadata)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction getDocumentMetadata(document) {\n    const operations = [];\n    const fragments = [];\n    const fragmentNames = new Set();\n    for (let i = 0; i < document.definitions.length; i++) {\n        const def = document.definitions[i];\n        if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION) {\n            fragments.push(def);\n            fragmentNames.add(def.name.value);\n        }\n        else if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION) {\n            operations.push(def);\n        }\n    }\n    return {\n        operations,\n        fragments,\n        fragmentNames,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vZ2V0RG9jdW1lbnRNZXRhZGF0YS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUN4QjtBQUNQO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpQ0FBaUM7QUFDckQ7QUFDQSx5QkFBeUIseUNBQUk7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHlDQUFJO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vZ2V0RG9jdW1lbnRNZXRhZGF0YS5qcz82NjYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREb2N1bWVudE1ldGFkYXRhKGRvY3VtZW50KSB7XG4gICAgY29uc3Qgb3BlcmF0aW9ucyA9IFtdO1xuICAgIGNvbnN0IGZyYWdtZW50cyA9IFtdO1xuICAgIGNvbnN0IGZyYWdtZW50TmFtZXMgPSBuZXcgU2V0KCk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkb2N1bWVudC5kZWZpbml0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBkZWYgPSBkb2N1bWVudC5kZWZpbml0aW9uc1tpXTtcbiAgICAgICAgaWYgKGRlZi5raW5kID09PSBLaW5kLkZSQUdNRU5UX0RFRklOSVRJT04pIHtcbiAgICAgICAgICAgIGZyYWdtZW50cy5wdXNoKGRlZik7XG4gICAgICAgICAgICBmcmFnbWVudE5hbWVzLmFkZChkZWYubmFtZS52YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoZGVmLmtpbmQgPT09IEtpbmQuT1BFUkFUSU9OX0RFRklOSVRJT04pIHtcbiAgICAgICAgICAgIG9wZXJhdGlvbnMucHVzaChkZWYpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG9wZXJhdGlvbnMsXG4gICAgICAgIGZyYWdtZW50cyxcbiAgICAgICAgZnJhZ21lbnROYW1lcyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/mergeFields.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/mergeFields.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   annotateExternalObject: () => (/* binding */ annotateExternalObject),\n/* harmony export */   getActualFieldNodes: () => (/* binding */ getActualFieldNodes),\n/* harmony export */   getSubschema: () => (/* binding */ getSubschema),\n/* harmony export */   getUnpathedErrors: () => (/* binding */ getUnpathedErrors),\n/* harmony export */   isExternalObject: () => (/* binding */ isExternalObject),\n/* harmony export */   mergeFields: () => (/* binding */ mergeFields)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/jsutils/Path.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _symbols_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbols.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/symbols.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\n\nfunction isExternalObject(data) {\n    return data[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL] !== undefined;\n}\nfunction annotateExternalObject(object, errors, subschema, subschemaMap) {\n    Object.defineProperties(object, {\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_SUBSCHEMA_SYMBOL]: { value: subschema },\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL]: { value: subschemaMap },\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL]: { value: errors },\n    });\n    return object;\n}\nfunction getSubschema(object, responseKey) {\n    var _a;\n    return (_a = object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL][responseKey]) !== null && _a !== void 0 ? _a : object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_SUBSCHEMA_SYMBOL];\n}\nfunction getUnpathedErrors(object) {\n    return object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL];\n}\nconst EMPTY_ARRAY = [];\nconst EMPTY_OBJECT = Object.create(null);\nfunction asyncForEach(array, fn) {\n    return array.reduce((prev, curr) => prev.then(() => fn(curr)), new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => { }));\n}\nconst getActualFieldNodes = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.memoize1)(function (fieldNode) {\n    return [fieldNode];\n});\nfunction mergeFields(mergedTypeInfo, object, sourceSubschema, context, info) {\n    var _a;\n    const delegationMaps = mergedTypeInfo.delegationPlanBuilder(info.schema, sourceSubschema, info.variableValues != null && Object.keys(info.variableValues).length > 0 ? info.variableValues : EMPTY_OBJECT, info.fragments != null && Object.keys(info.fragments).length > 0 ? info.fragments : EMPTY_OBJECT, ((_a = info.fieldNodes) === null || _a === void 0 ? void 0 : _a.length)\n        ? info.fieldNodes.length === 1\n            ? getActualFieldNodes(info.fieldNodes[0])\n            : info.fieldNodes\n        : EMPTY_ARRAY);\n    return asyncForEach(delegationMaps, delegationMap => executeDelegationStage(mergedTypeInfo, delegationMap, object, context, info)).then(() => object);\n}\nfunction executeDelegationStage(mergedTypeInfo, delegationMap, object, context, info) {\n    const combinedErrors = object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL];\n    const path = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.pathToArray)(info.path);\n    const combinedFieldSubschemaMap = object[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL];\n    function finallyFn(source, subschema, selectionSet) {\n        var _a;\n        if (source instanceof Error || source == null) {\n            const schema = subschema.transformedSchema || info.schema;\n            const type = schema.getType(object.__typename);\n            const { fields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.collectFields)(schema, EMPTY_OBJECT, EMPTY_OBJECT, type, selectionSet);\n            const nullResult = {};\n            for (const [responseKey, fieldNodes] of fields) {\n                const combinedPath = [...path, responseKey];\n                if (source instanceof graphql__WEBPACK_IMPORTED_MODULE_5__.GraphQLError) {\n                    nullResult[responseKey] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.relocatedError)(source, combinedPath);\n                }\n                else if (source instanceof Error) {\n                    nullResult[responseKey] = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.locatedError)(source, fieldNodes, combinedPath);\n                }\n                else {\n                    nullResult[responseKey] = null;\n                }\n            }\n            source = nullResult;\n        }\n        else {\n            if (source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL]) {\n                combinedErrors.push(...source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.UNPATHED_ERRORS_SYMBOL]);\n            }\n        }\n        const objectSubschema = source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.OBJECT_SUBSCHEMA_SYMBOL];\n        const fieldSubschemaMap = source[_symbols_js__WEBPACK_IMPORTED_MODULE_1__.FIELD_SUBSCHEMA_MAP_SYMBOL];\n        for (const responseKey in source) {\n            const existingPropValue = object[responseKey];\n            const sourcePropValue = source[responseKey];\n            if (sourcePropValue != null || existingPropValue == null) {\n                object[responseKey] = sourcePropValue;\n            }\n            combinedFieldSubschemaMap[responseKey] = (_a = fieldSubschemaMap === null || fieldSubschemaMap === void 0 ? void 0 : fieldSubschemaMap[responseKey]) !== null && _a !== void 0 ? _a : objectSubschema;\n        }\n    }\n    return value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise.all([...delegationMap.entries()].map(([subschema, selectionSet]) => new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => {\n        const schema = subschema.transformedSchema || info.schema;\n        const type = schema.getType(object.__typename);\n        const resolver = mergedTypeInfo.resolvers.get(subschema);\n        if (resolver) {\n            return resolver(object, context, info, subschema, selectionSet, undefined, type);\n        }\n    })\n        .then(source => finallyFn(source, subschema, selectionSet))\n        .catch(error => finallyFn(error, subschema, selectionSet)))).then(() => { });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/mergeFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareGatewayDocument: () => (/* binding */ prepareGatewayDocument)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDocumentMetadata.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\");\n\n\n\nfunction prepareGatewayDocument(originalDocument, transformedSchema, returnType, infoSchema) {\n    const wrappedConcreteTypesDocument = wrapConcreteTypes(returnType, transformedSchema, originalDocument);\n    if (infoSchema == null) {\n        return wrappedConcreteTypesDocument;\n    }\n    const { possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField, } = getSchemaMetaData(infoSchema, transformedSchema);\n    const { operations, fragments, fragmentNames } = (0,_getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_0__.getDocumentMetadata)(wrappedConcreteTypesDocument);\n    const { expandedFragments, fragmentReplacements } = getExpandedFragments(fragments, fragmentNames, possibleTypesMap);\n    const typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_1__.TypeInfo(transformedSchema);\n    const expandedDocument = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.DOCUMENT,\n        definitions: [...operations, ...fragments, ...expandedFragments],\n    };\n    const visitorKeyMap = {\n        Document: ['definitions'],\n        OperationDefinition: ['selectionSet'],\n        SelectionSet: ['selections'],\n        Field: ['selectionSet'],\n        InlineFragment: ['selectionSet'],\n        FragmentDefinition: ['selectionSet'],\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(expandedDocument, (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET]: node => visitSelectionSet(node, fragmentReplacements, transformedSchema, typeInfo, possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField),\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    visitorKeyMap);\n}\nfunction visitSelectionSet(node, fragmentReplacements, schema, typeInfo, possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField) {\n    var _a, _b;\n    const newSelections = new Set();\n    const maybeType = typeInfo.getParentType();\n    if (maybeType != null) {\n        const parentType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(maybeType);\n        const parentTypeName = parentType.name;\n        const fieldNodes = fieldNodesByType[parentTypeName];\n        if (fieldNodes) {\n            for (const fieldNode of fieldNodes) {\n                newSelections.add(fieldNode);\n            }\n        }\n        const interfaceExtensions = interfaceExtensionsMap[parentType.name];\n        const interfaceExtensionFields = [];\n        for (const selection of node.selections) {\n            if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT) {\n                if (selection.typeCondition != null) {\n                    const possibleTypes = possibleTypesMap[selection.typeCondition.name.value];\n                    if (possibleTypes == null) {\n                        newSelections.add(selection);\n                        continue;\n                    }\n                    for (const possibleTypeName of possibleTypes) {\n                        const maybePossibleType = schema.getType(possibleTypeName);\n                        if (maybePossibleType != null && (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.implementsAbstractType)(schema, parentType, maybePossibleType)) {\n                            newSelections.add(generateInlineFragment(possibleTypeName, selection.selectionSet));\n                        }\n                    }\n                }\n            }\n            else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD) {\n                const fragmentName = selection.name.value;\n                if (!fragmentReplacements[fragmentName]) {\n                    newSelections.add(selection);\n                    continue;\n                }\n                for (const replacement of fragmentReplacements[fragmentName]) {\n                    const typeName = replacement.typeName;\n                    const maybeReplacementType = schema.getType(typeName);\n                    if (maybeReplacementType != null && (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.implementsAbstractType)(schema, parentType, maybeType)) {\n                        newSelections.add({\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD,\n                            name: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                                value: replacement.fragmentName,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const fieldName = selection.name.value;\n                const fieldNodes = (_a = fieldNodesByField[parentTypeName]) === null || _a === void 0 ? void 0 : _a[fieldName];\n                if (fieldNodes != null) {\n                    for (const fieldNode of fieldNodes) {\n                        newSelections.add(fieldNode);\n                    }\n                }\n                const dynamicSelectionSets = (_b = dynamicSelectionSetsByField[parentTypeName]) === null || _b === void 0 ? void 0 : _b[fieldName];\n                if (dynamicSelectionSets != null) {\n                    for (const selectionSetFn of dynamicSelectionSets) {\n                        const selectionSet = selectionSetFn(selection);\n                        if (selectionSet != null) {\n                            for (const selection of selectionSet.selections) {\n                                newSelections.add(selection);\n                            }\n                        }\n                    }\n                }\n                if (interfaceExtensions === null || interfaceExtensions === void 0 ? void 0 : interfaceExtensions[fieldName]) {\n                    interfaceExtensionFields.push(selection);\n                }\n                else {\n                    newSelections.add(selection);\n                }\n            }\n        }\n        if (reversePossibleTypesMap[parentType.name]) {\n            newSelections.add({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                    value: '__typename',\n                },\n            });\n        }\n        if (interfaceExtensionFields.length) {\n            const possibleTypes = possibleTypesMap[parentType.name];\n            if (possibleTypes != null) {\n                for (const possibleType of possibleTypes) {\n                    newSelections.add(generateInlineFragment(possibleType, {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                        selections: interfaceExtensionFields,\n                    }));\n                }\n            }\n        }\n        return {\n            ...node,\n            selections: Array.from(newSelections),\n        };\n    }\n    return node;\n}\nfunction generateInlineFragment(typeName, selectionSet) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT,\n        typeCondition: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                value: typeName,\n            },\n        },\n        selectionSet,\n    };\n}\nconst getSchemaMetaData = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.memoize2)((sourceSchema, targetSchema) => {\n    var _a, _b, _c, _d;\n    const typeMap = sourceSchema.getTypeMap();\n    const targetTypeMap = targetSchema.getTypeMap();\n    const possibleTypesMap = Object.create(null);\n    const interfaceExtensionsMap = Object.create(null);\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(type)) {\n            const targetType = targetTypeMap[typeName];\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isInterfaceType)(type) && (0,graphql__WEBPACK_IMPORTED_MODULE_4__.isInterfaceType)(targetType)) {\n                const targetTypeFields = targetType.getFields();\n                const sourceTypeFields = type.getFields();\n                const extensionFields = Object.create(null);\n                let isExtensionFieldsEmpty = true;\n                for (const fieldName in sourceTypeFields) {\n                    if (!targetTypeFields[fieldName]) {\n                        extensionFields[fieldName] = true;\n                        isExtensionFieldsEmpty = false;\n                    }\n                }\n                if (!isExtensionFieldsEmpty) {\n                    interfaceExtensionsMap[typeName] = extensionFields;\n                }\n            }\n            if (interfaceExtensionsMap[typeName] || !(0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(targetType)) {\n                const implementations = sourceSchema.getPossibleTypes(type);\n                possibleTypesMap[typeName] = [];\n                for (const impl of implementations) {\n                    if (targetTypeMap[impl.name]) {\n                        possibleTypesMap[typeName].push(impl.name);\n                    }\n                }\n            }\n        }\n    }\n    const stitchingInfo = (_a = sourceSchema.extensions) === null || _a === void 0 ? void 0 : _a['stitchingInfo'];\n    return {\n        possibleTypesMap,\n        reversePossibleTypesMap: reversePossibleTypesMap(possibleTypesMap),\n        interfaceExtensionsMap,\n        fieldNodesByType: (_b = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.fieldNodesByType) !== null && _b !== void 0 ? _b : {},\n        fieldNodesByField: (_c = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.fieldNodesByField) !== null && _c !== void 0 ? _c : {},\n        dynamicSelectionSetsByField: (_d = stitchingInfo === null || stitchingInfo === void 0 ? void 0 : stitchingInfo.dynamicSelectionSetsByField) !== null && _d !== void 0 ? _d : {},\n    };\n});\nfunction reversePossibleTypesMap(possibleTypesMap) {\n    const result = Object.create(null);\n    for (const typeName in possibleTypesMap) {\n        const toTypeNames = possibleTypesMap[typeName];\n        for (const toTypeName of toTypeNames) {\n            if (!result[toTypeName]) {\n                result[toTypeName] = [];\n            }\n            result[toTypeName].push(typeName);\n        }\n    }\n    return result;\n}\nfunction getExpandedFragments(fragments, fragmentNames, possibleTypesMap) {\n    let fragmentCounter = 0;\n    function generateFragmentName(typeName) {\n        let fragmentName;\n        do {\n            fragmentName = `_${typeName}_Fragment${fragmentCounter.toString()}`;\n            fragmentCounter++;\n        } while (fragmentNames.has(fragmentName));\n        return fragmentName;\n    }\n    const expandedFragments = [];\n    const fragmentReplacements = Object.create(null);\n    for (const fragment of fragments) {\n        const possibleTypes = possibleTypesMap[fragment.typeCondition.name.value];\n        if (possibleTypes != null) {\n            const fragmentName = fragment.name.value;\n            fragmentReplacements[fragmentName] = [];\n            for (const possibleTypeName of possibleTypes) {\n                const name = generateFragmentName(possibleTypeName);\n                fragmentNames.add(name);\n                expandedFragments.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                            value: possibleTypeName,\n                        },\n                    },\n                    selectionSet: fragment.selectionSet,\n                });\n                fragmentReplacements[fragmentName].push({\n                    fragmentName: name,\n                    typeName: possibleTypeName,\n                });\n            }\n        }\n    }\n    return {\n        expandedFragments,\n        fragmentReplacements,\n    };\n}\nfunction wrapConcreteTypes(returnType, targetSchema, document) {\n    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(returnType);\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_4__.isCompositeType)(namedType)) {\n        return document;\n    }\n    const rootTypeNames = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.getRootTypeNames)(targetSchema);\n    const typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_1__.TypeInfo(targetSchema);\n    const visitorKeys = {\n        Document: ['definitions'],\n        OperationDefinition: ['selectionSet'],\n        SelectionSet: ['selections'],\n        InlineFragment: ['selectionSet'],\n        FragmentDefinition: ['selectionSet'],\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(document, (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION]: (node) => {\n            const typeName = node.typeCondition.name.value;\n            if (!rootTypeNames.has(typeName)) {\n                return false;\n            }\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD]: (node) => {\n            const type = typeInfo.getType();\n            if (type != null && (0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)((0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(type))) {\n                return {\n                    ...node,\n                    selectionSet: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                        selections: [\n                            {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT,\n                                typeCondition: {\n                                    kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAMED_TYPE,\n                                    name: {\n                                        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                                        value: namedType.name,\n                                    },\n                                },\n                                selectionSet: node.selectionSet,\n                            },\n                        ],\n                    },\n                };\n            }\n        },\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    visitorKeys);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js":
/*!**********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js ***!
  \**********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveExternalValue: () => (/* binding */ resolveExternalValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n/* harmony import */ var _mergeFields_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergeFields.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n\n\n\nfunction resolveExternalValue(result, unpathedErrors, subschema, context, info, returnType = getReturnType(info), skipTypeMerging) {\n    const type = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(returnType);\n    if (result instanceof Error) {\n        return result;\n    }\n    if (result == null) {\n        return reportUnpathedErrorsViaNull(unpathedErrors);\n    }\n    if ('parseValue' in type) {\n        return type.parseValue(result);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(type)) {\n        return resolveExternalObject(type, result, unpathedErrors, subschema, context, info, skipTypeMerging);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        if (Array.isArray(result)) {\n            return resolveExternalList(type, result, unpathedErrors, subschema, context, info, skipTypeMerging);\n        }\n        return resolveExternalValue(result, unpathedErrors, subschema, context, info, type.ofType, skipTypeMerging);\n    }\n}\nfunction resolveExternalObject(type, object, unpathedErrors, subschema, context, info, skipTypeMerging) {\n    var _a;\n    // if we have already resolved this object, for example, when the identical object appears twice\n    // in a list, see https://github.com/ardatan/graphql-tools/issues/2304\n    if (!(0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.isExternalObject)(object)) {\n        (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.annotateExternalObject)(object, unpathedErrors, subschema, Object.create(null));\n    }\n    if (skipTypeMerging || info == null) {\n        return object;\n    }\n    const stitchingInfo = (_a = info.schema.extensions) === null || _a === void 0 ? void 0 : _a['stitchingInfo'];\n    if (stitchingInfo == null) {\n        return object;\n    }\n    const typeName = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(type) ? object.__typename : type.name;\n    const mergedTypeInfo = stitchingInfo.mergedTypes[typeName];\n    let targetSubschemas;\n    // Within the stitching context, delegation to a stitched GraphQLSchema or SubschemaConfig\n    // will be redirected to the appropriate Subschema object, from which merge targets can be queried.\n    if (mergedTypeInfo != null) {\n        targetSubschemas = mergedTypeInfo.targetSubschemas.get(subschema);\n    }\n    // If there are no merge targets from the subschema, return.\n    if (!targetSubschemas || !targetSubschemas.length) {\n        return object;\n    }\n    return (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.mergeFields)(mergedTypeInfo, object, subschema, context, info).resolve();\n}\nfunction resolveExternalList(type, list, unpathedErrors, subschema, context, info, skipTypeMerging) {\n    return list.map(listMember => resolveExternalValue(listMember, unpathedErrors, subschema, context, info, type.ofType, skipTypeMerging));\n}\nconst reportedErrors = new WeakMap();\nfunction reportUnpathedErrorsViaNull(unpathedErrors) {\n    if (unpathedErrors.length) {\n        const unreportedErrors = [];\n        for (const error of unpathedErrors) {\n            if (!reportedErrors.has(error)) {\n                unreportedErrors.push(error);\n                reportedErrors.set(error, true);\n            }\n        }\n        if (unreportedErrors.length) {\n            if (unreportedErrors.length === 1) {\n                return unreportedErrors[0];\n            }\n            const combinedError = new _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.AggregateError(unreportedErrors, unreportedErrors.map(error => error.message).join(', \\n'));\n            // We cast path as any for GraphQL.js 14 compat\n            // locatedError path argument must be defined, but it is just forwarded to a constructor that allows a undefined value\n            // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/locatedError.js#L25\n            // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/GraphQLError.js#L19\n            return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.locatedError)(combinedError, undefined, unreportedErrors[0].path);\n        }\n    }\n    return null;\n}\nfunction getReturnType(info) {\n    if (info == null) {\n        throw new Error(`Return type cannot be inferred without a source schema.`);\n    }\n    return info.returnType;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vcmVzb2x2ZUV4dGVybmFsVmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBc0c7QUFDaEQ7QUFDbUM7QUFDbEY7QUFDUCxpQkFBaUIsd0RBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx3REFBZTtBQUM1QjtBQUNBO0FBQ0EsYUFBYSxtREFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsaUVBQWdCO0FBQ3pCLFFBQVEsdUVBQXNCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdURBQWM7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNERBQVc7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdFQUFjO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHFEQUFZO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvYmF0Y2gtZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9yZXNvbHZlRXh0ZXJuYWxWYWx1ZS5qcz9jMGZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE51bGxhYmxlVHlwZSwgaXNDb21wb3NpdGVUeXBlLCBpc0xpc3RUeXBlLCBpc0Fic3RyYWN0VHlwZSwgbG9jYXRlZEVycm9yLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgQWdncmVnYXRlRXJyb3IgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBhbm5vdGF0ZUV4dGVybmFsT2JqZWN0LCBpc0V4dGVybmFsT2JqZWN0LCBtZXJnZUZpZWxkcyB9IGZyb20gJy4vbWVyZ2VGaWVsZHMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVFeHRlcm5hbFZhbHVlKHJlc3VsdCwgdW5wYXRoZWRFcnJvcnMsIHN1YnNjaGVtYSwgY29udGV4dCwgaW5mbywgcmV0dXJuVHlwZSA9IGdldFJldHVyblR5cGUoaW5mbyksIHNraXBUeXBlTWVyZ2luZykge1xuICAgIGNvbnN0IHR5cGUgPSBnZXROdWxsYWJsZVR5cGUocmV0dXJuVHlwZSk7XG4gICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIGlmIChyZXN1bHQgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gcmVwb3J0VW5wYXRoZWRFcnJvcnNWaWFOdWxsKHVucGF0aGVkRXJyb3JzKTtcbiAgICB9XG4gICAgaWYgKCdwYXJzZVZhbHVlJyBpbiB0eXBlKSB7XG4gICAgICAgIHJldHVybiB0eXBlLnBhcnNlVmFsdWUocmVzdWx0KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDb21wb3NpdGVUeXBlKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlRXh0ZXJuYWxPYmplY3QodHlwZSwgcmVzdWx0LCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCBza2lwVHlwZU1lcmdpbmcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0xpc3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHJlc3VsdCkpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNvbHZlRXh0ZXJuYWxMaXN0KHR5cGUsIHJlc3VsdCwgdW5wYXRoZWRFcnJvcnMsIHN1YnNjaGVtYSwgY29udGV4dCwgaW5mbywgc2tpcFR5cGVNZXJnaW5nKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzb2x2ZUV4dGVybmFsVmFsdWUocmVzdWx0LCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCB0eXBlLm9mVHlwZSwgc2tpcFR5cGVNZXJnaW5nKTtcbiAgICB9XG59XG5mdW5jdGlvbiByZXNvbHZlRXh0ZXJuYWxPYmplY3QodHlwZSwgb2JqZWN0LCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCBza2lwVHlwZU1lcmdpbmcpIHtcbiAgICB2YXIgX2E7XG4gICAgLy8gaWYgd2UgaGF2ZSBhbHJlYWR5IHJlc29sdmVkIHRoaXMgb2JqZWN0LCBmb3IgZXhhbXBsZSwgd2hlbiB0aGUgaWRlbnRpY2FsIG9iamVjdCBhcHBlYXJzIHR3aWNlXG4gICAgLy8gaW4gYSBsaXN0LCBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2FyZGF0YW4vZ3JhcGhxbC10b29scy9pc3N1ZXMvMjMwNFxuICAgIGlmICghaXNFeHRlcm5hbE9iamVjdChvYmplY3QpKSB7XG4gICAgICAgIGFubm90YXRlRXh0ZXJuYWxPYmplY3Qob2JqZWN0LCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBPYmplY3QuY3JlYXRlKG51bGwpKTtcbiAgICB9XG4gICAgaWYgKHNraXBUeXBlTWVyZ2luZyB8fCBpbmZvID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG4gICAgY29uc3Qgc3RpdGNoaW5nSW5mbyA9IChfYSA9IGluZm8uc2NoZW1hLmV4dGVuc2lvbnMpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVsnc3RpdGNoaW5nSW5mbyddO1xuICAgIGlmIChzdGl0Y2hpbmdJbmZvID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG4gICAgY29uc3QgdHlwZU5hbWUgPSBpc0Fic3RyYWN0VHlwZSh0eXBlKSA/IG9iamVjdC5fX3R5cGVuYW1lIDogdHlwZS5uYW1lO1xuICAgIGNvbnN0IG1lcmdlZFR5cGVJbmZvID0gc3RpdGNoaW5nSW5mby5tZXJnZWRUeXBlc1t0eXBlTmFtZV07XG4gICAgbGV0IHRhcmdldFN1YnNjaGVtYXM7XG4gICAgLy8gV2l0aGluIHRoZSBzdGl0Y2hpbmcgY29udGV4dCwgZGVsZWdhdGlvbiB0byBhIHN0aXRjaGVkIEdyYXBoUUxTY2hlbWEgb3IgU3Vic2NoZW1hQ29uZmlnXG4gICAgLy8gd2lsbCBiZSByZWRpcmVjdGVkIHRvIHRoZSBhcHByb3ByaWF0ZSBTdWJzY2hlbWEgb2JqZWN0LCBmcm9tIHdoaWNoIG1lcmdlIHRhcmdldHMgY2FuIGJlIHF1ZXJpZWQuXG4gICAgaWYgKG1lcmdlZFR5cGVJbmZvICE9IG51bGwpIHtcbiAgICAgICAgdGFyZ2V0U3Vic2NoZW1hcyA9IG1lcmdlZFR5cGVJbmZvLnRhcmdldFN1YnNjaGVtYXMuZ2V0KHN1YnNjaGVtYSk7XG4gICAgfVxuICAgIC8vIElmIHRoZXJlIGFyZSBubyBtZXJnZSB0YXJnZXRzIGZyb20gdGhlIHN1YnNjaGVtYSwgcmV0dXJuLlxuICAgIGlmICghdGFyZ2V0U3Vic2NoZW1hcyB8fCAhdGFyZ2V0U3Vic2NoZW1hcy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlRmllbGRzKG1lcmdlZFR5cGVJbmZvLCBvYmplY3QsIHN1YnNjaGVtYSwgY29udGV4dCwgaW5mbykucmVzb2x2ZSgpO1xufVxuZnVuY3Rpb24gcmVzb2x2ZUV4dGVybmFsTGlzdCh0eXBlLCBsaXN0LCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCBza2lwVHlwZU1lcmdpbmcpIHtcbiAgICByZXR1cm4gbGlzdC5tYXAobGlzdE1lbWJlciA9PiByZXNvbHZlRXh0ZXJuYWxWYWx1ZShsaXN0TWVtYmVyLCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCB0eXBlLm9mVHlwZSwgc2tpcFR5cGVNZXJnaW5nKSk7XG59XG5jb25zdCByZXBvcnRlZEVycm9ycyA9IG5ldyBXZWFrTWFwKCk7XG5mdW5jdGlvbiByZXBvcnRVbnBhdGhlZEVycm9yc1ZpYU51bGwodW5wYXRoZWRFcnJvcnMpIHtcbiAgICBpZiAodW5wYXRoZWRFcnJvcnMubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IHVucmVwb3J0ZWRFcnJvcnMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBlcnJvciBvZiB1bnBhdGhlZEVycm9ycykge1xuICAgICAgICAgICAgaWYgKCFyZXBvcnRlZEVycm9ycy5oYXMoZXJyb3IpKSB7XG4gICAgICAgICAgICAgICAgdW5yZXBvcnRlZEVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgICAgICAgICByZXBvcnRlZEVycm9ycy5zZXQoZXJyb3IsIHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGlmICh1bnJlcG9ydGVkRXJyb3JzLmxlbmd0aCkge1xuICAgICAgICAgICAgaWYgKHVucmVwb3J0ZWRFcnJvcnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVucmVwb3J0ZWRFcnJvcnNbMF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjb21iaW5lZEVycm9yID0gbmV3IEFnZ3JlZ2F0ZUVycm9yKHVucmVwb3J0ZWRFcnJvcnMsIHVucmVwb3J0ZWRFcnJvcnMubWFwKGVycm9yID0+IGVycm9yLm1lc3NhZ2UpLmpvaW4oJywgXFxuJykpO1xuICAgICAgICAgICAgLy8gV2UgY2FzdCBwYXRoIGFzIGFueSBmb3IgR3JhcGhRTC5qcyAxNCBjb21wYXRcbiAgICAgICAgICAgIC8vIGxvY2F0ZWRFcnJvciBwYXRoIGFyZ3VtZW50IG11c3QgYmUgZGVmaW5lZCwgYnV0IGl0IGlzIGp1c3QgZm9yd2FyZGVkIHRvIGEgY29uc3RydWN0b3IgdGhhdCBhbGxvd3MgYSB1bmRlZmluZWQgdmFsdWVcbiAgICAgICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvYmxvYi9iNGJmZjBiYTljMTVjOWQ3MjQ1ZGQ2ODU1NmU3NTRjNDFmMjYzMjg5L3NyYy9lcnJvci9sb2NhdGVkRXJyb3IuanMjTDI1XG4gICAgICAgICAgICAvLyBodHRwczovL2dpdGh1Yi5jb20vZ3JhcGhxbC9ncmFwaHFsLWpzL2Jsb2IvYjRiZmYwYmE5YzE1YzlkNzI0NWRkNjg1NTZlNzU0YzQxZjI2MzI4OS9zcmMvZXJyb3IvR3JhcGhRTEVycm9yLmpzI0wxOVxuICAgICAgICAgICAgcmV0dXJuIGxvY2F0ZWRFcnJvcihjb21iaW5lZEVycm9yLCB1bmRlZmluZWQsIHVucmVwb3J0ZWRFcnJvcnNbMF0ucGF0aCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG51bGw7XG59XG5mdW5jdGlvbiBnZXRSZXR1cm5UeXBlKGluZm8pIHtcbiAgICBpZiAoaW5mbyA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUmV0dXJuIHR5cGUgY2Fubm90IGJlIGluZmVycmVkIHdpdGhvdXQgYSBzb3VyY2Ugc2NoZW1hLmApO1xuICAgIH1cbiAgICByZXR1cm4gaW5mby5yZXR1cm5UeXBlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneSubschemaConfig: () => (/* binding */ cloneSubschemaConfig),\n/* harmony export */   isSubschemaConfig: () => (/* binding */ isSubschemaConfig)\n/* harmony export */ });\nfunction isSubschemaConfig(value) {\n    return Boolean(value === null || value === void 0 ? void 0 : value.schema);\n}\nfunction cloneSubschemaConfig(subschemaConfig) {\n    var _a, _b;\n    const newSubschemaConfig = {\n        ...subschemaConfig,\n        transforms: subschemaConfig.transforms != null ? [...subschemaConfig.transforms] : undefined,\n    };\n    if (newSubschemaConfig.merge != null) {\n        newSubschemaConfig.merge = { ...subschemaConfig.merge };\n        for (const typeName in newSubschemaConfig.merge) {\n            const mergedTypeConfig = (newSubschemaConfig.merge[typeName] = { ...((_b = (_a = subschemaConfig.merge) === null || _a === void 0 ? void 0 : _a[typeName]) !== null && _b !== void 0 ? _b : {}) });\n            if (mergedTypeConfig.entryPoints != null) {\n                mergedTypeConfig.entryPoints = mergedTypeConfig.entryPoints.map(entryPoint => ({ ...entryPoint }));\n            }\n            if (mergedTypeConfig.fields != null) {\n                const fields = (mergedTypeConfig.fields = { ...mergedTypeConfig.fields });\n                for (const fieldName in fields) {\n                    fields[fieldName] = { ...fields[fieldName] };\n                }\n            }\n        }\n    }\n    return newSubschemaConfig;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vc3Vic2NoZW1hQ29uZmlnLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSw2RUFBNkUsNkhBQTZILEdBQUc7QUFDN007QUFDQSxpR0FBaUcsZUFBZTtBQUNoSDtBQUNBO0FBQ0EsNERBQTRELDRCQUE0QjtBQUN4RjtBQUNBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL3N1YnNjaGVtYUNvbmZpZy5qcz8xNWRjIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1N1YnNjaGVtYUNvbmZpZyh2YWx1ZSkge1xuICAgIHJldHVybiBCb29sZWFuKHZhbHVlID09PSBudWxsIHx8IHZhbHVlID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2YWx1ZS5zY2hlbWEpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsb25lU3Vic2NoZW1hQ29uZmlnKHN1YnNjaGVtYUNvbmZpZykge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgbmV3U3Vic2NoZW1hQ29uZmlnID0ge1xuICAgICAgICAuLi5zdWJzY2hlbWFDb25maWcsXG4gICAgICAgIHRyYW5zZm9ybXM6IHN1YnNjaGVtYUNvbmZpZy50cmFuc2Zvcm1zICE9IG51bGwgPyBbLi4uc3Vic2NoZW1hQ29uZmlnLnRyYW5zZm9ybXNdIDogdW5kZWZpbmVkLFxuICAgIH07XG4gICAgaWYgKG5ld1N1YnNjaGVtYUNvbmZpZy5tZXJnZSAhPSBudWxsKSB7XG4gICAgICAgIG5ld1N1YnNjaGVtYUNvbmZpZy5tZXJnZSA9IHsgLi4uc3Vic2NoZW1hQ29uZmlnLm1lcmdlIH07XG4gICAgICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlKSB7XG4gICAgICAgICAgICBjb25zdCBtZXJnZWRUeXBlQ29uZmlnID0gKG5ld1N1YnNjaGVtYUNvbmZpZy5tZXJnZVt0eXBlTmFtZV0gPSB7IC4uLigoX2IgPSAoX2EgPSBzdWJzY2hlbWFDb25maWcubWVyZ2UpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYVt0eXBlTmFtZV0pICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IHt9KSB9KTtcbiAgICAgICAgICAgIGlmIChtZXJnZWRUeXBlQ29uZmlnLmVudHJ5UG9pbnRzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBtZXJnZWRUeXBlQ29uZmlnLmVudHJ5UG9pbnRzID0gbWVyZ2VkVHlwZUNvbmZpZy5lbnRyeVBvaW50cy5tYXAoZW50cnlQb2ludCA9PiAoeyAuLi5lbnRyeVBvaW50IH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtZXJnZWRUeXBlQ29uZmlnLmZpZWxkcyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gKG1lcmdlZFR5cGVDb25maWcuZmllbGRzID0geyAuLi5tZXJnZWRUeXBlQ29uZmlnLmZpZWxkcyB9KTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzW2ZpZWxkTmFtZV0gPSB7IC4uLmZpZWxkc1tmaWVsZE5hbWVdIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXdTdWJzY2hlbWFDb25maWc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/symbols.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/symbols.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FIELD_SUBSCHEMA_MAP_SYMBOL: () => (/* binding */ FIELD_SUBSCHEMA_MAP_SYMBOL),\n/* harmony export */   OBJECT_SUBSCHEMA_SYMBOL: () => (/* binding */ OBJECT_SUBSCHEMA_SYMBOL),\n/* harmony export */   UNPATHED_ERRORS_SYMBOL: () => (/* binding */ UNPATHED_ERRORS_SYMBOL)\n/* harmony export */ });\nconst UNPATHED_ERRORS_SYMBOL = Symbol.for('subschemaErrors');\nconst OBJECT_SUBSCHEMA_SYMBOL = Symbol.for('initialSubschema');\nconst FIELD_SUBSCHEMA_MAP_SYMBOL = Symbol.for('subschemaMap');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vc3ltYm9scy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBTztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL3N5bWJvbHMuanM/OWQzMiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgVU5QQVRIRURfRVJST1JTX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ3N1YnNjaGVtYUVycm9ycycpO1xuZXhwb3J0IGNvbnN0IE9CSkVDVF9TVUJTQ0hFTUFfU1lNQk9MID0gU3ltYm9sLmZvcignaW5pdGlhbFN1YnNjaGVtYScpO1xuZXhwb3J0IGNvbnN0IEZJRUxEX1NVQlNDSEVNQV9NQVBfU1lNQk9MID0gU3ltYm9sLmZvcignc3Vic2NoZW1hTWFwJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/delegate/esm/symbols.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/execute.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/execute.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertValidExecutionArguments: () => (/* binding */ assertValidExecutionArguments),\n/* harmony export */   buildExecutionContext: () => (/* binding */ buildExecutionContext),\n/* harmony export */   buildResolveInfo: () => (/* binding */ buildResolveInfo),\n/* harmony export */   defaultFieldResolver: () => (/* binding */ defaultFieldResolver),\n/* harmony export */   defaultTypeResolver: () => (/* binding */ defaultTypeResolver),\n/* harmony export */   execute: () => (/* binding */ execute),\n/* harmony export */   executeSync: () => (/* binding */ executeSync),\n/* harmony export */   flattenIncrementalResults: () => (/* binding */ flattenIncrementalResults),\n/* harmony export */   getFieldDef: () => (/* binding */ getFieldDef),\n/* harmony export */   getFragmentsFromDocument: () => (/* binding */ getFragmentsFromDocument),\n/* harmony export */   isIncrementalResult: () => (/* binding */ isIncrementalResult),\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/validate.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Path.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./values.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/values.js\");\n/* harmony import */ var _promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./promiseForObject.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js\");\n/* harmony import */ var _flattenAsyncIterable_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./flattenAsyncIterable.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js\");\n/* harmony import */ var _invariant_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./invariant.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/invariant.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\n\n\n\n\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nconst collectSubfields = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize3)((exeContext, returnType, fieldNodes) => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectSubFields)(exeContext.schema, exeContext.fragments, exeContext.variableValues, returnType, fieldNodes));\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification,\n * including `@defer` and `@stream` as proposed in\n * https://github.com/graphql/graphql-spec/pull/742\n *\n * This function returns a Promise of an IncrementalExecutionResults\n * object. This object either consists of a single ExecutionResult, or an\n * object containing an `initialResult` and a stream of `subsequentResults`.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nfunction execute(args) {\n    // If a valid execution context cannot be created due to incorrect arguments,\n    // a \"Response\" with only errors is returned.\n    const exeContext = buildExecutionContext(args);\n    // Return early errors if execution context failed.\n    if (!('schema' in exeContext)) {\n        return {\n            errors: exeContext.map(e => {\n                var _a;\n                Object.defineProperty(e, 'extensions', {\n                    value: {\n                        ...e.extensions,\n                        http: {\n                            ...(_a = e.extensions) === null || _a === void 0 ? void 0 : _a['http'],\n                            status: 400,\n                        },\n                    },\n                });\n                return e;\n            }),\n        };\n    }\n    return executeImpl(exeContext);\n}\nfunction executeImpl(exeContext) {\n    // Return a Promise that will eventually resolve to the data described by\n    // The \"Response\" section of the GraphQL specification.\n    //\n    // If errors are encountered while executing a GraphQL field, only that\n    // field and its descendants will be omitted, and sibling fields will still\n    // be executed. An execution which encounters errors will still result in a\n    // resolved Promise.\n    //\n    // Errors from sub-fields of a NonNull type may propagate to the top level,\n    // at which point we still log the error and null the parent field, which\n    // in this case is the entire response.\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executeOperation(exeContext))\n        .then(data => {\n        const initialResult = buildResponse(data, exeContext.errors);\n        if (exeContext.subsequentPayloads.size > 0) {\n            return {\n                initialResult: {\n                    ...initialResult,\n                    hasNext: true,\n                },\n                subsequentResults: yieldSubsequentPayloads(exeContext),\n            };\n        }\n        return initialResult;\n    }, (error) => {\n        exeContext.errors.push(error);\n        return buildResponse(null, exeContext.errors);\n    })\n        .resolve();\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\nfunction executeSync(args) {\n    const result = execute(args);\n    // Assert that the execution was synchronous.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result) || 'initialResult' in result) {\n        throw new Error('GraphQL execution failed to complete synchronously.');\n    }\n    return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\nfunction buildResponse(data, errors) {\n    return errors.length === 0 ? { data } : { errors, data };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n    console.assert(!!document, 'Must provide document.');\n    // If the schema used for execution is invalid, throw an error.\n    (0,graphql__WEBPACK_IMPORTED_MODULE_4__.assertValidSchema)(schema);\n    // Variables, if provided, must be an object.\n    console.assert(rawVariableValues == null || (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(rawVariableValues), 'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.');\n}\nconst getFragmentsFromDocument = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getFragmentsFromDocument(document) {\n    const fragments = Object.create(null);\n    for (const definition of document.definitions) {\n        if (definition.kind === graphql__WEBPACK_IMPORTED_MODULE_5__.Kind.FRAGMENT_DEFINITION) {\n            fragments[definition.name.value] = definition;\n        }\n    }\n    return fragments;\n});\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * TODO: consider no longer exporting this function\n * @internal\n */\nfunction buildExecutionContext(args) {\n    var _a, _b;\n    const { schema, document, rootValue, contextValue, variableValues: rawVariableValues, operationName, fieldResolver, typeResolver, subscribeFieldResolver, } = args;\n    // If the schema used for execution is invalid, throw an error.\n    (0,graphql__WEBPACK_IMPORTED_MODULE_4__.assertValidSchema)(schema);\n    const fragments = getFragmentsFromDocument(document);\n    let operation;\n    for (const definition of document.definitions) {\n        switch (definition.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_5__.Kind.OPERATION_DEFINITION:\n                if (operationName == null) {\n                    if (operation !== undefined) {\n                        return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Must provide operation name if query contains multiple operations.')];\n                    }\n                    operation = definition;\n                }\n                else if (((_a = definition.name) === null || _a === void 0 ? void 0 : _a.value) === operationName) {\n                    operation = definition;\n                }\n                break;\n            default:\n            // ignore non-executable definitions\n        }\n    }\n    if (operation == null) {\n        if (operationName != null) {\n            return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Unknown operation named \"${operationName}\".`)];\n        }\n        return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Must provide an operation.')];\n    }\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    /* c8 ignore next */\n    const variableDefinitions = (_b = operation.variableDefinitions) !== null && _b !== void 0 ? _b : [];\n    const coercedVariableValues = (0,_values_js__WEBPACK_IMPORTED_MODULE_7__.getVariableValues)(schema, variableDefinitions, rawVariableValues !== null && rawVariableValues !== void 0 ? rawVariableValues : {}, {\n        maxErrors: 50,\n    });\n    if (coercedVariableValues.errors) {\n        return coercedVariableValues.errors;\n    }\n    return {\n        schema,\n        fragments,\n        rootValue,\n        contextValue,\n        operation,\n        variableValues: coercedVariableValues.coerced,\n        fieldResolver: fieldResolver !== null && fieldResolver !== void 0 ? fieldResolver : defaultFieldResolver,\n        typeResolver: typeResolver !== null && typeResolver !== void 0 ? typeResolver : defaultTypeResolver,\n        subscribeFieldResolver: subscribeFieldResolver !== null && subscribeFieldResolver !== void 0 ? subscribeFieldResolver : defaultFieldResolver,\n        subsequentPayloads: new Set(),\n        errors: [],\n    };\n}\nfunction buildPerEventExecutionContext(exeContext, payload) {\n    return {\n        ...exeContext,\n        rootValue: payload,\n        subsequentPayloads: new Set(),\n        errors: [],\n    };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\nfunction executeOperation(exeContext) {\n    const { operation, schema, fragments, variableValues, rootValue } = exeContext;\n    const rootType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.getDefinedRootType)(schema, operation.operation, [operation]);\n    if (rootType == null) {\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Schema is not configured to execute ${operation.operation} operation.`, {\n            nodes: operation,\n        });\n    }\n    const { fields: rootFields, patches } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, rootType, operation.selectionSet);\n    const path = undefined;\n    let result;\n    if (operation.operation === 'mutation') {\n        result = executeFieldsSerially(exeContext, rootType, rootValue, path, rootFields);\n    }\n    else {\n        result = executeFields(exeContext, rootType, rootValue, path, rootFields);\n    }\n    for (const patch of patches) {\n        const { label, fields: patchFields } = patch;\n        executeDeferredFragment(exeContext, rootType, rootValue, patchFields, label, path);\n    }\n    return result;\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.promiseReduce)(fields, (results, [responseName, fieldNodes]) => {\n        const fieldPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, responseName, parentType.name);\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath)).then(result => {\n            if (result === undefined) {\n                return results;\n            }\n            results[responseName] = result;\n            return results;\n        });\n    }, Object.create(null)).resolve();\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\nfunction executeFields(exeContext, parentType, sourceValue, path, fields, asyncPayloadRecord) {\n    const results = Object.create(null);\n    let containsPromise = false;\n    try {\n        for (const [responseName, fieldNodes] of fields) {\n            const fieldPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, responseName, parentType.name);\n            const result = executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath, asyncPayloadRecord);\n            if (result !== undefined) {\n                results[responseName] = result;\n                if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n                    containsPromise = true;\n                }\n            }\n        }\n    }\n    catch (error) {\n        if (containsPromise) {\n            // Ensure that any promises returned by other fields are handled, as they may also reject.\n            return (0,_promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__.promiseForObject)(results).finally(() => {\n                throw error;\n            });\n        }\n        throw error;\n    }\n    // If there are no promises, we can just return the object\n    if (!containsPromise) {\n        return results;\n    }\n    // Otherwise, results is a map from field name to the result of resolving that\n    // field, which is possibly a promise. Return a promise that will return this\n    // same map, but with any promises replaced with the values they resolved to.\n    return (0,_promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__.promiseForObject)(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\nfunction executeField(exeContext, parentType, source, fieldNodes, path, asyncPayloadRecord) {\n    var _a, _b;\n    const errors = (_a = asyncPayloadRecord === null || asyncPayloadRecord === void 0 ? void 0 : asyncPayloadRecord.errors) !== null && _a !== void 0 ? _a : exeContext.errors;\n    const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n    if (!fieldDef) {\n        return;\n    }\n    const returnType = fieldDef.type;\n    const resolveFn = (_b = fieldDef.resolve) !== null && _b !== void 0 ? _b : exeContext.fieldResolver;\n    const info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path);\n    // Get the resolve function, regardless of if its result is normal or abrupt (error).\n    try {\n        // Build a JS object of arguments from the field.arguments AST, using the\n        // variables scope to fulfill any variable references.\n        // TODO: find a way to memoize, in case this field is within a List type.\n        const args = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.getArgumentValues)(fieldDef, fieldNodes[0], exeContext.variableValues);\n        // The resolve function's optional third argument is a context value that\n        // is provided to every resolve function within an execution. It is commonly\n        // used to represent an authenticated user, or request-specific caches.\n        const contextValue = exeContext.contextValue;\n        const result = resolveFn(source, args, contextValue, info);\n        let completed;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n            completed = result.then(resolved => completeValue(exeContext, returnType, fieldNodes, info, path, resolved, asyncPayloadRecord));\n        }\n        else {\n            completed = completeValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n        }\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completed)) {\n            // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n            // to take a second callback for the error case.\n            return completed.then(undefined, rawError => {\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n                const handledError = handleFieldError(error, returnType, errors);\n                filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n                return handledError;\n            });\n        }\n        return completed;\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n        const handledError = handleFieldError(error, returnType, errors);\n        filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n        return handledError;\n    }\n}\n/**\n * TODO: consider no longer exporting this function\n * @internal\n */\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n    // The resolve function's optional fourth argument is a collection of\n    // information about the current execution state.\n    return {\n        fieldName: fieldDef.name,\n        fieldNodes,\n        returnType: fieldDef.type,\n        parentType,\n        path,\n        schema: exeContext.schema,\n        fragments: exeContext.fragments,\n        rootValue: exeContext.rootValue,\n        operation: exeContext.operation,\n        variableValues: exeContext.variableValues,\n    };\n}\nfunction handleFieldError(error, returnType, errors) {\n    // If the field type is non-nullable, then it is resolved without any\n    // protection from errors, however it still properly locates the error.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isNonNullType)(returnType)) {\n        throw error;\n    }\n    // Otherwise, error protection is applied, logging the error and resolving\n    // a null value for this field if one is encountered.\n    errors.push(error);\n    return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    // If result is an Error, throw a located error.\n    if (result instanceof Error) {\n        throw result;\n    }\n    // If field type is NonNull, complete for inner type, and throw field error\n    // if result is null.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isNonNullType)(returnType)) {\n        const completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result, asyncPayloadRecord);\n        if (completed === null) {\n            throw new Error(`Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`);\n        }\n        return completed;\n    }\n    // If result value is null or undefined then return null.\n    if (result == null) {\n        return null;\n    }\n    // If field type is List, complete each item in the list with the inner type\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isListType)(returnType)) {\n        return completeListValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n    // returning null if serialization is not possible.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isLeafType)(returnType)) {\n        return completeLeafValue(returnType, result);\n    }\n    // If field type is an abstract type, Interface or Union, determine the\n    // runtime Object type and complete for that type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isAbstractType)(returnType)) {\n        return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    // If field type is Object, execute and complete all sub-selections.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isObjectType)(returnType)) {\n        return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    /* c8 ignore next 6 */\n    // Not reachable, all possible output types have been considered.\n    console.assert(false, 'Cannot complete value of unexpected output type: ' + (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(returnType));\n}\n/**\n * Returns an object containing the `@stream` arguments if a field should be\n * streamed based on the experimental flag, stream directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getStreamValues(exeContext, fieldNodes, path) {\n    // do not stream inner lists of multi-dimensional lists\n    if (typeof path.key === 'number') {\n        return;\n    }\n    // validation only allows equivalent streams on multiple fields, so it is\n    // safe to only check the first fieldNode for the stream directive\n    const stream = (0,graphql__WEBPACK_IMPORTED_MODULE_15__.getDirectiveValues)(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_16__.GraphQLStreamDirective, fieldNodes[0], exeContext.variableValues);\n    if (!stream) {\n        return;\n    }\n    if (stream.if === false) {\n        return;\n    }\n    (0,_invariant_js__WEBPACK_IMPORTED_MODULE_17__.invariant)(typeof stream['initialCount'] === 'number', 'initialCount must be a number');\n    (0,_invariant_js__WEBPACK_IMPORTED_MODULE_17__.invariant)(stream['initialCount'] >= 0, 'initialCount must be a positive integer');\n    return {\n        initialCount: stream['initialCount'],\n        label: typeof stream['label'] === 'string' ? stream['label'] : undefined,\n    };\n}\n/**\n * Complete a async iterator value by completing the result and calling\n * recursively until all the results are completed.\n */\nasync function completeAsyncIteratorValue(exeContext, itemType, fieldNodes, info, path, iterator, asyncPayloadRecord) {\n    var _a;\n    const errors = (_a = asyncPayloadRecord === null || asyncPayloadRecord === void 0 ? void 0 : asyncPayloadRecord.errors) !== null && _a !== void 0 ? _a : exeContext.errors;\n    const stream = getStreamValues(exeContext, fieldNodes, path);\n    let containsPromise = false;\n    const completedResults = [];\n    let index = 0;\n    while (true) {\n        if (stream && typeof stream.initialCount === 'number' && index >= stream.initialCount) {\n            executeStreamIterator(index, iterator, exeContext, fieldNodes, info, itemType, path, stream.label, asyncPayloadRecord);\n            break;\n        }\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        let iteration;\n        try {\n            iteration = await iterator.next();\n            if (iteration.done) {\n                break;\n            }\n        }\n        catch (rawError) {\n            const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n            completedResults.push(handleFieldError(error, itemType, errors));\n            break;\n        }\n        if (completeListItemValue(iteration.value, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord)) {\n            containsPromise = true;\n        }\n        index += 1;\n    }\n    return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    var _a;\n    const itemType = returnType.ofType;\n    const errors = (_a = asyncPayloadRecord === null || asyncPayloadRecord === void 0 ? void 0 : asyncPayloadRecord.errors) !== null && _a !== void 0 ? _a : exeContext.errors;\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__.isAsyncIterable)(result)) {\n        const iterator = result[Symbol.asyncIterator]();\n        return completeAsyncIteratorValue(exeContext, itemType, fieldNodes, info, path, iterator, asyncPayloadRecord);\n    }\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isIterableObject)(result)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`);\n    }\n    const stream = getStreamValues(exeContext, fieldNodes, path);\n    // This is specified as a simple map, however we're optimizing the path\n    // where the list contains no Promises by avoiding creating another Promise.\n    let containsPromise = false;\n    let previousAsyncPayloadRecord = asyncPayloadRecord;\n    const completedResults = [];\n    let index = 0;\n    for (const item of result) {\n        // No need to modify the info object containing the path,\n        // since from here on it is not ever accessed by resolver functions.\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        if (stream && typeof stream.initialCount === 'number' && index >= stream.initialCount) {\n            previousAsyncPayloadRecord = executeStreamField(path, itemPath, item, exeContext, fieldNodes, info, itemType, stream.label, previousAsyncPayloadRecord);\n            index++;\n            continue;\n        }\n        if (completeListItemValue(item, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord)) {\n            containsPromise = true;\n        }\n        index++;\n    }\n    return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a list item value by adding it to the completed results.\n *\n * Returns true if the value is a Promise.\n */\nfunction completeListItemValue(item, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord) {\n    try {\n        let completedItem;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(item)) {\n            completedItem = item.then(resolved => completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved, asyncPayloadRecord));\n        }\n        else {\n            completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n        }\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n            // to take a second callback for the error case.\n            completedResults.push(completedItem.then(undefined, rawError => {\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                const handledError = handleFieldError(error, itemType, errors);\n                filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                return handledError;\n            }));\n            return true;\n        }\n        completedResults.push(completedItem);\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const handledError = handleFieldError(error, itemType, errors);\n        filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        completedResults.push(handledError);\n    }\n    return false;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\nfunction completeLeafValue(returnType, result) {\n    const serializedResult = returnType.serialize(result);\n    if (serializedResult == null) {\n        throw new Error(`Expected \\`${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(returnType)}.serialize(${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)})\\` to ` +\n            `return non-nullable value, returned: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(serializedResult)}`);\n    }\n    return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    var _a;\n    const resolveTypeFn = (_a = returnType.resolveType) !== null && _a !== void 0 ? _a : exeContext.typeResolver;\n    const contextValue = exeContext.contextValue;\n    const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(runtimeType)) {\n        return runtimeType.then(resolvedRuntimeType => completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result, asyncPayloadRecord));\n    }\n    return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result, asyncPayloadRecord);\n}\nfunction ensureValidRuntimeType(runtimeTypeName, exeContext, returnType, fieldNodes, info, result) {\n    if (runtimeTypeName == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`, { nodes: fieldNodes });\n    }\n    // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n    // TODO: remove in 17.0.0 release\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_13__.isObjectType)(runtimeTypeName)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.');\n    }\n    if (typeof runtimeTypeName !== 'string') {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n            `value ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)}, received \"${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(runtimeTypeName)}\".`);\n    }\n    const runtimeType = exeContext.schema.getType(runtimeTypeName);\n    if (runtimeType == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`, { nodes: fieldNodes });\n    }\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_13__.isObjectType)(runtimeType)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`, { nodes: fieldNodes });\n    }\n    if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`, { nodes: fieldNodes });\n    }\n    return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    // If there is an isTypeOf predicate function, call it with the\n    // current result. If isTypeOf returns false, then raise an error rather\n    // than continuing execution.\n    if (returnType.isTypeOf) {\n        const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOf)) {\n            return isTypeOf.then(resolvedIsTypeOf => {\n                if (!resolvedIsTypeOf) {\n                    throw invalidReturnTypeError(returnType, result, fieldNodes);\n                }\n                return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord);\n            });\n        }\n        if (!isTypeOf) {\n            throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n    }\n    return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord);\n}\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Expected value of type \"${returnType.name}\" but got: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)}.`, {\n        nodes: fieldNodes,\n    });\n}\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord) {\n    // Collect sub-fields to execute to complete this value.\n    const { fields: subFieldNodes, patches: subPatches } = collectSubfields(exeContext, returnType, fieldNodes);\n    const subFields = executeFields(exeContext, returnType, result, path, subFieldNodes, asyncPayloadRecord);\n    for (const subPatch of subPatches) {\n        const { label, fields: subPatchFieldNodes } = subPatch;\n        executeDeferredFragment(exeContext, returnType, result, subPatchFieldNodes, label, path, asyncPayloadRecord);\n    }\n    return subFields;\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\nconst defaultTypeResolver = function (value, contextValue, info, abstractType) {\n    // First, look for `__typename`.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(value) && typeof value['__typename'] === 'string') {\n        return value['__typename'];\n    }\n    // Otherwise, test each possible type.\n    const possibleTypes = info.schema.getPossibleTypes(abstractType);\n    const promisedIsTypeOfResults = [];\n    for (let i = 0; i < possibleTypes.length; i++) {\n        const type = possibleTypes[i];\n        if (type.isTypeOf) {\n            const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOfResult)) {\n                promisedIsTypeOfResults[i] = isTypeOfResult;\n            }\n            else if (isTypeOfResult) {\n                return type.name;\n            }\n        }\n    }\n    if (promisedIsTypeOfResults.length) {\n        return Promise.all(promisedIsTypeOfResults).then(isTypeOfResults => {\n            for (let i = 0; i < isTypeOfResults.length; i++) {\n                if (isTypeOfResults[i]) {\n                    return possibleTypes[i].name;\n                }\n            }\n        });\n    }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\nconst defaultFieldResolver = function (source, args, contextValue, info) {\n    // ensure source is a value for which property access is acceptable.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(source) || typeof source === 'function') {\n        const property = source[info.fieldName];\n        if (typeof property === 'function') {\n            return source[info.fieldName](args, contextValue, info);\n        }\n        return property;\n    }\n};\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification,\n * including `@defer` and `@stream` as proposed in\n * https://github.com/graphql/graphql-spec/pull/742\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with descriptive\n * errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription resolver\n * logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of result representing the response stream.\n *\n * Each result may be an ExecutionResult with no `hasNext` (if executing the\n * event did not use `@defer` or `@stream`), or an\n * `InitialIncrementalExecutionResult` or `SubsequentIncrementalExecutionResult`\n * (if executing the event used `@defer` or `@stream`). In the case of\n * incremental execution results, each event produces a single\n * `InitialIncrementalExecutionResult` followed by one or more\n * `SubsequentIncrementalExecutionResult`s; all but the last have `hasNext: true`,\n * and the last has `hasNext: false`. There is no interleaving between results\n * generated from the same original event.\n *\n * Accepts an object with named arguments.\n */\nfunction subscribe(args) {\n    // If a valid execution context cannot be created due to incorrect arguments,\n    // a \"Response\" with only errors is returned.\n    const exeContext = buildExecutionContext(args);\n    // Return early errors if execution context failed.\n    if (!('schema' in exeContext)) {\n        return {\n            errors: exeContext.map(e => {\n                var _a;\n                Object.defineProperty(e, 'extensions', {\n                    value: {\n                        ...e.extensions,\n                        http: {\n                            ...(_a = e.extensions) === null || _a === void 0 ? void 0 : _a['http'],\n                            status: 400,\n                        },\n                    },\n                });\n                return e;\n            }),\n        };\n    }\n    const resultOrStream = createSourceEventStreamImpl(exeContext);\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(resultOrStream)) {\n        return resultOrStream.then(resolvedResultOrStream => mapSourceToResponse(exeContext, resolvedResultOrStream));\n    }\n    return mapSourceToResponse(exeContext, resultOrStream);\n}\nfunction flattenIncrementalResults(incrementalResults) {\n    const subsequentIterator = incrementalResults.subsequentResults;\n    let initialResultSent = false;\n    let done = false;\n    return {\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        async next() {\n            if (done) {\n                return {\n                    value: undefined,\n                    done,\n                };\n            }\n            if (initialResultSent) {\n                return subsequentIterator.next();\n            }\n            initialResultSent = true;\n            return Promise.resolve({\n                value: incrementalResults.initialResult,\n                done,\n            });\n        },\n        return() {\n            done = true;\n            return subsequentIterator.return();\n        },\n        throw(error) {\n            done = true;\n            return subsequentIterator.throw(error);\n        },\n    };\n}\nasync function* ensureAsyncIterable(someExecutionResult) {\n    if ('initialResult' in someExecutionResult) {\n        yield* flattenIncrementalResults(someExecutionResult);\n    }\n    else {\n        yield someExecutionResult;\n    }\n}\nfunction mapSourceToResponse(exeContext, resultOrStream) {\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__.isAsyncIterable)(resultOrStream)) {\n        return resultOrStream;\n    }\n    // For each payload yielded from a subscription, map it over the normal\n    // GraphQL `execute` function, with `payload` as the rootValue.\n    // This implements the \"MapSourceToResponseEvent\" algorithm described in\n    // the GraphQL specification. The `execute` function provides the\n    // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n    // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n    return (0,_flattenAsyncIterable_js__WEBPACK_IMPORTED_MODULE_19__.flattenAsyncIterable)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_20__.mapAsyncIterator)(resultOrStream[Symbol.asyncIterator](), async (payload) => ensureAsyncIterable(await executeImpl(buildPerEventExecutionContext(exeContext, payload))), async function* (error) {\n        const wrappedError = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(error.message, {\n            originalError: error,\n            nodes: [exeContext.operation],\n        });\n        yield {\n            errors: [wrappedError],\n        };\n    }));\n}\nfunction createSourceEventStreamImpl(exeContext) {\n    try {\n        const eventStream = executeSubscription(exeContext);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(eventStream)) {\n            return eventStream.then(undefined, error => ({ errors: [error] }));\n        }\n        return eventStream;\n    }\n    catch (error) {\n        return { errors: [error] };\n    }\n}\nfunction executeSubscription(exeContext) {\n    var _a;\n    const { schema, fragments, operation, variableValues, rootValue } = exeContext;\n    const rootType = schema.getSubscriptionType();\n    if (rootType == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Schema is not configured to execute subscription operation.', { nodes: operation });\n    }\n    const { fields: rootFields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, rootType, operation.selectionSet);\n    const [responseName, fieldNodes] = [...rootFields.entries()][0];\n    const fieldName = fieldNodes[0].name.value;\n    const fieldDef = getFieldDef(schema, rootType, fieldNodes[0]);\n    if (!fieldDef) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`The subscription field \"${fieldName}\" is not defined.`, { nodes: fieldNodes });\n    }\n    const path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(undefined, responseName, rootType.name);\n    const info = buildResolveInfo(exeContext, fieldDef, fieldNodes, rootType, path);\n    try {\n        // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n        // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n        // Build a JS object of arguments from the field.arguments AST, using the\n        // variables scope to fulfill any variable references.\n        const args = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.getArgumentValues)(fieldDef, fieldNodes[0], variableValues);\n        // The resolve function's optional third argument is a context value that\n        // is provided to every resolve function within an execution. It is commonly\n        // used to represent an authenticated user, or request-specific caches.\n        const contextValue = exeContext.contextValue;\n        // Call the `subscribe()` resolver or the default resolver to produce an\n        // AsyncIterable yielding raw payloads.\n        const resolveFn = (_a = fieldDef.subscribe) !== null && _a !== void 0 ? _a : exeContext.subscribeFieldResolver;\n        const result = resolveFn(rootValue, args, contextValue, info);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n            return result.then(assertEventStream).then(undefined, error => {\n                throw (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(error, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n            });\n        }\n        return assertEventStream(result);\n    }\n    catch (error) {\n        throw (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(error, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n    }\n}\nfunction assertEventStream(result) {\n    if (result instanceof Error) {\n        throw result;\n    }\n    // Assert field returned an event stream, otherwise yield an error.\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_18__.isAsyncIterable)(result)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Subscription field must return Async Iterable. ' + `Received: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.inspect)(result)}.`);\n    }\n    return result;\n}\nfunction executeDeferredFragment(exeContext, parentType, sourceValue, fields, label, path, parentContext) {\n    const asyncPayloadRecord = new DeferredFragmentRecord({\n        label,\n        path,\n        parentContext,\n        exeContext,\n    });\n    let promiseOrData;\n    try {\n        promiseOrData = executeFields(exeContext, parentType, sourceValue, path, fields, asyncPayloadRecord);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(promiseOrData)) {\n            promiseOrData = promiseOrData.then(null, e => {\n                asyncPayloadRecord.errors.push(e);\n                return null;\n            });\n        }\n    }\n    catch (e) {\n        asyncPayloadRecord.errors.push(e);\n        promiseOrData = null;\n    }\n    asyncPayloadRecord.addData(promiseOrData);\n}\nfunction executeStreamField(path, itemPath, item, exeContext, fieldNodes, info, itemType, label, parentContext) {\n    const asyncPayloadRecord = new StreamRecord({\n        label,\n        path: itemPath,\n        parentContext,\n        exeContext,\n    });\n    let completedItem;\n    try {\n        try {\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(item)) {\n                completedItem = item.then(resolved => completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved, asyncPayloadRecord));\n            }\n            else {\n                completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n            }\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n                // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n                // to take a second callback for the error case.\n                completedItem = completedItem.then(undefined, rawError => {\n                    const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                    const handledError = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n                    filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                    return handledError;\n                });\n            }\n        }\n        catch (rawError) {\n            const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n            completedItem = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n            filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        }\n    }\n    catch (error) {\n        asyncPayloadRecord.errors.push(error);\n        filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n        asyncPayloadRecord.addItems(null);\n        return asyncPayloadRecord;\n    }\n    let completedItems;\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n        completedItems = completedItem.then(value => [value], error => {\n            asyncPayloadRecord.errors.push(error);\n            filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n            return null;\n        });\n    }\n    else {\n        completedItems = [completedItem];\n    }\n    asyncPayloadRecord.addItems(completedItems);\n    return asyncPayloadRecord;\n}\nasync function executeStreamIteratorItem(iterator, exeContext, fieldNodes, info, itemType, asyncPayloadRecord, itemPath) {\n    let item;\n    try {\n        const { value, done } = await iterator.next();\n        if (done) {\n            asyncPayloadRecord.setIsCompletedIterator();\n            return { done, value: undefined };\n        }\n        item = value;\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const value = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n        // don't continue if iterator throws\n        return { done: true, value };\n    }\n    let completedItem;\n    try {\n        completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            completedItem = completedItem.then(undefined, rawError => {\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                const handledError = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n                filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                return handledError;\n            });\n        }\n        return { done: false, value: completedItem };\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const value = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n        filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        return { done: false, value };\n    }\n}\nasync function executeStreamIterator(initialIndex, iterator, exeContext, fieldNodes, info, itemType, path, label, parentContext) {\n    let index = initialIndex;\n    let previousAsyncPayloadRecord = parentContext !== null && parentContext !== void 0 ? parentContext : undefined;\n    while (true) {\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        const asyncPayloadRecord = new StreamRecord({\n            label,\n            path: itemPath,\n            parentContext: previousAsyncPayloadRecord,\n            iterator,\n            exeContext,\n        });\n        let iteration;\n        try {\n            iteration = await executeStreamIteratorItem(iterator, exeContext, fieldNodes, info, itemType, asyncPayloadRecord, itemPath);\n        }\n        catch (error) {\n            asyncPayloadRecord.errors.push(error);\n            filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n            asyncPayloadRecord.addItems(null);\n            // entire stream has errored and bubbled upwards\n            if (iterator === null || iterator === void 0 ? void 0 : iterator.return) {\n                iterator.return().catch(() => {\n                    // ignore errors\n                });\n            }\n            return;\n        }\n        const { done, value: completedItem } = iteration;\n        let completedItems;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            completedItems = completedItem.then(value => [value], error => {\n                asyncPayloadRecord.errors.push(error);\n                filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n                return null;\n            });\n        }\n        else {\n            completedItems = [completedItem];\n        }\n        asyncPayloadRecord.addItems(completedItems);\n        if (done) {\n            break;\n        }\n        previousAsyncPayloadRecord = asyncPayloadRecord;\n        index++;\n    }\n}\nfunction filterSubsequentPayloads(exeContext, nullPath, currentAsyncRecord) {\n    const nullPathArray = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(nullPath);\n    exeContext.subsequentPayloads.forEach(asyncRecord => {\n        var _a;\n        if (asyncRecord === currentAsyncRecord) {\n            // don't remove payload from where error originates\n            return;\n        }\n        for (let i = 0; i < nullPathArray.length; i++) {\n            if (asyncRecord.path[i] !== nullPathArray[i]) {\n                // asyncRecord points to a path unaffected by this payload\n                return;\n            }\n        }\n        // asyncRecord path points to nulled error field\n        if (isStreamPayload(asyncRecord) && ((_a = asyncRecord.iterator) === null || _a === void 0 ? void 0 : _a.return)) {\n            asyncRecord.iterator.return().catch(() => {\n                // ignore error\n            });\n        }\n        exeContext.subsequentPayloads.delete(asyncRecord);\n    });\n}\nfunction getCompletedIncrementalResults(exeContext) {\n    const incrementalResults = [];\n    for (const asyncPayloadRecord of exeContext.subsequentPayloads) {\n        const incrementalResult = {};\n        if (!asyncPayloadRecord.isCompleted) {\n            continue;\n        }\n        exeContext.subsequentPayloads.delete(asyncPayloadRecord);\n        if (isStreamPayload(asyncPayloadRecord)) {\n            const items = asyncPayloadRecord.items;\n            if (asyncPayloadRecord.isCompletedIterator) {\n                // async iterable resolver just finished but there may be pending payloads\n                continue;\n            }\n            incrementalResult.items = items;\n        }\n        else {\n            const data = asyncPayloadRecord.data;\n            incrementalResult.data = data !== null && data !== void 0 ? data : null;\n        }\n        incrementalResult.path = asyncPayloadRecord.path;\n        if (asyncPayloadRecord.label) {\n            incrementalResult.label = asyncPayloadRecord.label;\n        }\n        if (asyncPayloadRecord.errors.length > 0) {\n            incrementalResult.errors = asyncPayloadRecord.errors;\n        }\n        incrementalResults.push(incrementalResult);\n    }\n    return incrementalResults;\n}\nfunction yieldSubsequentPayloads(exeContext) {\n    let isDone = false;\n    async function next() {\n        if (isDone) {\n            return { value: undefined, done: true };\n        }\n        await Promise.race(Array.from(exeContext.subsequentPayloads).map(p => p.promise));\n        if (isDone) {\n            // a different call to next has exhausted all payloads\n            return { value: undefined, done: true };\n        }\n        const incremental = getCompletedIncrementalResults(exeContext);\n        const hasNext = exeContext.subsequentPayloads.size > 0;\n        if (!incremental.length && hasNext) {\n            return next();\n        }\n        if (!hasNext) {\n            isDone = true;\n        }\n        return {\n            value: incremental.length ? { incremental, hasNext } : { hasNext },\n            done: false,\n        };\n    }\n    function returnStreamIterators() {\n        const promises = [];\n        exeContext.subsequentPayloads.forEach(asyncPayloadRecord => {\n            var _a;\n            if (isStreamPayload(asyncPayloadRecord) && ((_a = asyncPayloadRecord.iterator) === null || _a === void 0 ? void 0 : _a.return)) {\n                promises.push(asyncPayloadRecord.iterator.return());\n            }\n        });\n        return Promise.all(promises);\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        next,\n        async return() {\n            await returnStreamIterators();\n            isDone = true;\n            return { value: undefined, done: true };\n        },\n        async throw(error) {\n            await returnStreamIterators();\n            isDone = true;\n            return Promise.reject(error);\n        },\n    };\n}\nclass DeferredFragmentRecord {\n    constructor(opts) {\n        this.type = 'defer';\n        this.label = opts.label;\n        this.path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(opts.path);\n        this.parentContext = opts.parentContext;\n        this.errors = [];\n        this._exeContext = opts.exeContext;\n        this._exeContext.subsequentPayloads.add(this);\n        this.isCompleted = false;\n        this.data = null;\n        this.promise = new Promise(resolve => {\n            this._resolve = MaybePromise => {\n                resolve(MaybePromise);\n            };\n        }).then(data => {\n            this.data = data;\n            this.isCompleted = true;\n        });\n    }\n    addData(data) {\n        var _a, _b, _c;\n        const parentData = (_a = this.parentContext) === null || _a === void 0 ? void 0 : _a.promise;\n        if (parentData) {\n            (_b = this._resolve) === null || _b === void 0 ? void 0 : _b.call(this, parentData.then(() => data));\n            return;\n        }\n        (_c = this._resolve) === null || _c === void 0 ? void 0 : _c.call(this, data);\n    }\n}\nclass StreamRecord {\n    constructor(opts) {\n        this.type = 'stream';\n        this.items = null;\n        this.label = opts.label;\n        this.path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(opts.path);\n        this.parentContext = opts.parentContext;\n        this.iterator = opts.iterator;\n        this.errors = [];\n        this._exeContext = opts.exeContext;\n        this._exeContext.subsequentPayloads.add(this);\n        this.isCompleted = false;\n        this.items = null;\n        this.promise = new Promise(resolve => {\n            this._resolve = MaybePromise => {\n                resolve(MaybePromise);\n            };\n        }).then(items => {\n            this.items = items;\n            this.isCompleted = true;\n        });\n    }\n    addItems(items) {\n        var _a, _b, _c;\n        const parentData = (_a = this.parentContext) === null || _a === void 0 ? void 0 : _a.promise;\n        if (parentData) {\n            (_b = this._resolve) === null || _b === void 0 ? void 0 : _b.call(this, parentData.then(() => items));\n            return;\n        }\n        (_c = this._resolve) === null || _c === void 0 ? void 0 : _c.call(this, items);\n    }\n    setIsCompletedIterator() {\n        this.isCompletedIterator = true;\n    }\n}\nfunction isStreamPayload(asyncPayload) {\n    return asyncPayload.type === 'stream';\n}\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n    const fieldName = fieldNode.name.value;\n    if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_21__.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n        return graphql__WEBPACK_IMPORTED_MODULE_21__.SchemaMetaFieldDef;\n    }\n    else if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_21__.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n        return graphql__WEBPACK_IMPORTED_MODULE_21__.TypeMetaFieldDef;\n    }\n    else if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_21__.TypeNameMetaFieldDef.name) {\n        return graphql__WEBPACK_IMPORTED_MODULE_21__.TypeNameMetaFieldDef;\n    }\n    return parentType.getFields()[fieldName];\n}\nfunction isIncrementalResult(result) {\n    return 'incremental' in result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL2V4ZWN1dGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFzTjtBQUMwRztBQUNoUjtBQUNTO0FBQ1E7QUFDdEI7QUFDTztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDhEQUFRLHlDQUF5QyxzRUFBaUI7QUFDM0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDREQUFjO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxRQUFRLCtEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4REFBOEQsY0FBYztBQUM1RTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMsT0FBTyxJQUFJO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsSUFBSSwwREFBaUI7QUFDckI7QUFDQSxnREFBZ0Qsa0VBQVk7QUFDNUQ7QUFDTyxpQ0FBaUMsOERBQVE7QUFDaEQ7QUFDQTtBQUNBLGdDQUFnQyx5Q0FBSTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsWUFBWSxvSkFBb0o7QUFDaEs7QUFDQSxJQUFJLDBEQUFpQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix5Q0FBSTtBQUNyQjtBQUNBO0FBQ0EsZ0NBQWdDLHdFQUFrQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3RUFBa0IsNkJBQTZCLGNBQWM7QUFDakY7QUFDQSxnQkFBZ0Isd0VBQWtCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDZEQUFpQixpSEFBaUg7QUFDcEs7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQTBEO0FBQ3RFLHFCQUFxQix3RUFBa0I7QUFDdkM7QUFDQSxRQUFRLHdFQUFrQix3Q0FBd0MscUJBQXFCO0FBQ3ZGO0FBQ0EsU0FBUztBQUNUO0FBQ0EsWUFBWSw4QkFBOEIsRUFBRSxtRUFBYTtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsNkJBQTZCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbUVBQWE7QUFDeEIsMEJBQTBCLDZEQUFPO0FBQ2pDLG1CQUFtQiw0REFBYztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4Qiw2REFBTztBQUNyQztBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsK0RBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1RUFBZ0I7QUFDbkM7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHVFQUFnQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix3RUFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0RBQVksdUJBQXVCLGlFQUFXO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzREFBWSx1QkFBdUIsaUVBQVc7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFhO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVEQUFhO0FBQ3JCO0FBQ0E7QUFDQSx5RUFBeUUscUJBQXFCLEdBQUcsZUFBZTtBQUNoSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxvREFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsb0RBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdEQUFjO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRkFBZ0YsOERBQU87QUFDdkY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsNERBQWtCLENBQUMseUVBQXNCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkseURBQVM7QUFDYixJQUFJLHlEQUFTO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsc0RBQVksdUJBQXVCLGlFQUFXO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0VBQWU7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzRUFBZ0I7QUFDekIsY0FBYyx3RUFBa0IsdURBQXVELHFCQUFxQixHQUFHLGVBQWU7QUFDOUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qiw2REFBTztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsc0RBQVksdUJBQXVCLGlFQUFXO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFZLHVCQUF1QixpRUFBVztBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyw4REFBTyxhQUFhLGFBQWEsOERBQU8sU0FBUztBQUN2RixvREFBb0QsOERBQU8sbUJBQW1CO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsK0RBQVM7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx3RUFBa0IsbUJBQW1CLGdCQUFnQix5REFBeUQscUJBQXFCLEdBQUcsZUFBZSxpQkFBaUIsZ0JBQWdCLGdIQUFnSCxtQkFBbUI7QUFDdlU7QUFDQTtBQUNBO0FBQ0EsUUFBUSxzREFBWTtBQUNwQixjQUFjLHdFQUFrQjtBQUNoQztBQUNBO0FBQ0EsY0FBYyx3RUFBa0IsbUJBQW1CLGdCQUFnQix5REFBeUQscUJBQXFCLEdBQUcsZUFBZTtBQUNuSyxxQkFBcUIsOERBQU8sU0FBUyxjQUFjLDhEQUFPLGtCQUFrQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHdFQUFrQixtQkFBbUIsZ0JBQWdCLDRCQUE0QixnQkFBZ0IsNkNBQTZDLG1CQUFtQjtBQUMvSztBQUNBLFNBQVMsc0RBQVk7QUFDckIsY0FBYyx3RUFBa0IsbUJBQW1CLGdCQUFnQix1Q0FBdUMsZ0JBQWdCLE9BQU8sbUJBQW1CO0FBQ3BKO0FBQ0E7QUFDQSxjQUFjLHdFQUFrQix5QkFBeUIsaUJBQWlCLGdDQUFnQyxnQkFBZ0IsT0FBTyxtQkFBbUI7QUFDcEo7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBUztBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdFQUFrQiw0QkFBNEIsZ0JBQWdCLGFBQWEsOERBQU8sU0FBUztBQUN0RztBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZDQUE2QztBQUN6RDtBQUNBO0FBQ0EsZ0JBQWdCLG9DQUFvQztBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLFFBQVEsa0VBQVk7QUFDcEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiwwQkFBMEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtEQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qiw0QkFBNEI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxRQUFRLGtFQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekIscUJBQXFCO0FBQ3JCLGlCQUFpQjtBQUNqQjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxRQUFRLCtEQUFTO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzRUFBZTtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywrRUFBb0IsQ0FBQyx1RUFBZ0I7QUFDaEQsNkJBQTZCLHdFQUFrQjtBQUMvQztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksK0RBQVM7QUFDckIsMkRBQTJELGlCQUFpQjtBQUM1RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMERBQTBEO0FBQ3RFO0FBQ0E7QUFDQSxjQUFjLHdFQUFrQixrRUFBa0Usa0JBQWtCO0FBQ3BIO0FBQ0EsWUFBWSxxQkFBcUIsRUFBRSxtRUFBYTtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0VBQWtCLDRCQUE0QixVQUFVLHNCQUFzQixtQkFBbUI7QUFDL0c7QUFDQSxpQkFBaUIsNkRBQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHdFQUFpQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBUztBQUNyQjtBQUNBLHNCQUFzQixzREFBWSxvQkFBb0IsaUVBQVc7QUFDakUsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxzREFBWSxvQkFBb0IsaUVBQVc7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLHNFQUFlO0FBQ3hCLGNBQWMsd0VBQWtCLGtFQUFrRSw4REFBTyxTQUFTO0FBQ2xIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxZQUFZLCtEQUFTO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwrREFBUztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLCtEQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxzREFBWSx1QkFBdUIsaUVBQVc7QUFDaEY7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixzREFBWSx1QkFBdUIsaUVBQVc7QUFDeEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsK0RBQVM7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFZLHVCQUF1QixpRUFBVztBQUNwRTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSwrREFBUztBQUNyQjtBQUNBLDhCQUE4QixzREFBWSx1QkFBdUIsaUVBQVc7QUFDNUU7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQVksdUJBQXVCLGlFQUFXO0FBQ3BFO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLDZEQUFPO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZCQUE2QjtBQUM3QztBQUNBLFlBQVksK0RBQVM7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsaUVBQVc7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDBCQUEwQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQ0FBMEMsdUJBQXVCLElBQUksU0FBUztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUVBQVc7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixpRUFBVztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0Esc0JBQXNCLHdEQUFrQjtBQUN4QyxlQUFlLHdEQUFrQjtBQUNqQztBQUNBLDJCQUEyQixzREFBZ0I7QUFDM0MsZUFBZSxzREFBZ0I7QUFDL0I7QUFDQSwyQkFBMkIsMERBQW9CO0FBQy9DLGVBQWUsMERBQW9CO0FBQ25DO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL2V4ZWN1dGUuanM/MGQ0ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2NhdGVkRXJyb3IsIEtpbmQsIGlzQWJzdHJhY3RUeXBlLCBpc0xlYWZUeXBlLCBpc0xpc3RUeXBlLCBpc05vbk51bGxUeXBlLCBpc09iamVjdFR5cGUsIGFzc2VydFZhbGlkU2NoZW1hLCBnZXREaXJlY3RpdmVWYWx1ZXMsIFNjaGVtYU1ldGFGaWVsZERlZiwgVHlwZU1ldGFGaWVsZERlZiwgVHlwZU5hbWVNZXRhRmllbGREZWYsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBjcmVhdGVHcmFwaFFMRXJyb3IsIGluc3BlY3QsIGlzQXN5bmNJdGVyYWJsZSwgaXNJdGVyYWJsZU9iamVjdCwgaXNPYmplY3RMaWtlLCBpc1Byb21pc2UsIHBhdGhUb0FycmF5LCBhZGRQYXRoLCBnZXRBcmd1bWVudFZhbHVlcywgcHJvbWlzZVJlZHVjZSwgbWVtb2l6ZTMsIGdldERlZmluZWRSb290VHlwZSwgbWFwQXN5bmNJdGVyYXRvciwgR3JhcGhRTFN0cmVhbURpcmVjdGl2ZSwgY29sbGVjdEZpZWxkcywgY29sbGVjdFN1YkZpZWxkcyBhcyBfY29sbGVjdFN1YmZpZWxkcywgbWVtb2l6ZTEsIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgZ2V0VmFyaWFibGVWYWx1ZXMgfSBmcm9tICcuL3ZhbHVlcy5qcyc7XG5pbXBvcnQgeyBwcm9taXNlRm9yT2JqZWN0IH0gZnJvbSAnLi9wcm9taXNlRm9yT2JqZWN0LmpzJztcbmltcG9ydCB7IGZsYXR0ZW5Bc3luY0l0ZXJhYmxlIH0gZnJvbSAnLi9mbGF0dGVuQXN5bmNJdGVyYWJsZS5qcyc7XG5pbXBvcnQgeyBpbnZhcmlhbnQgfSBmcm9tICcuL2ludmFyaWFudC5qcyc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuLyoqXG4gKiBBIG1lbW9pemVkIGNvbGxlY3Rpb24gb2YgcmVsZXZhbnQgc3ViZmllbGRzIHdpdGggcmVnYXJkIHRvIHRoZSByZXR1cm5cbiAqIHR5cGUuIE1lbW9pemluZyBlbnN1cmVzIHRoZSBzdWJmaWVsZHMgYXJlIG5vdCByZXBlYXRlZGx5IGNhbGN1bGF0ZWQsIHdoaWNoXG4gKiBzYXZlcyBvdmVyaGVhZCB3aGVuIHJlc29sdmluZyBsaXN0cyBvZiB2YWx1ZXMuXG4gKi9cbmNvbnN0IGNvbGxlY3RTdWJmaWVsZHMgPSBtZW1vaXplMygoZXhlQ29udGV4dCwgcmV0dXJuVHlwZSwgZmllbGROb2RlcykgPT4gX2NvbGxlY3RTdWJmaWVsZHMoZXhlQ29udGV4dC5zY2hlbWEsIGV4ZUNvbnRleHQuZnJhZ21lbnRzLCBleGVDb250ZXh0LnZhcmlhYmxlVmFsdWVzLCByZXR1cm5UeXBlLCBmaWVsZE5vZGVzKSk7XG4vKipcbiAqIEltcGxlbWVudHMgdGhlIFwiRXhlY3V0aW5nIHJlcXVlc3RzXCIgc2VjdGlvbiBvZiB0aGUgR3JhcGhRTCBzcGVjaWZpY2F0aW9uLFxuICogaW5jbHVkaW5nIGBAZGVmZXJgIGFuZCBgQHN0cmVhbWAgYXMgcHJvcG9zZWQgaW5cbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtc3BlYy9wdWxsLzc0MlxuICpcbiAqIFRoaXMgZnVuY3Rpb24gcmV0dXJucyBhIFByb21pc2Ugb2YgYW4gSW5jcmVtZW50YWxFeGVjdXRpb25SZXN1bHRzXG4gKiBvYmplY3QuIFRoaXMgb2JqZWN0IGVpdGhlciBjb25zaXN0cyBvZiBhIHNpbmdsZSBFeGVjdXRpb25SZXN1bHQsIG9yIGFuXG4gKiBvYmplY3QgY29udGFpbmluZyBhbiBgaW5pdGlhbFJlc3VsdGAgYW5kIGEgc3RyZWFtIG9mIGBzdWJzZXF1ZW50UmVzdWx0c2AuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50cyB0byB0aGlzIGZ1bmN0aW9uIGRvIG5vdCByZXN1bHQgaW4gYSBsZWdhbCBleGVjdXRpb24gY29udGV4dCxcbiAqIGEgR3JhcGhRTEVycm9yIHdpbGwgYmUgdGhyb3duIGltbWVkaWF0ZWx5IGV4cGxhaW5pbmcgdGhlIGludmFsaWQgaW5wdXQuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleGVjdXRlKGFyZ3MpIHtcbiAgICAvLyBJZiBhIHZhbGlkIGV4ZWN1dGlvbiBjb250ZXh0IGNhbm5vdCBiZSBjcmVhdGVkIGR1ZSB0byBpbmNvcnJlY3QgYXJndW1lbnRzLFxuICAgIC8vIGEgXCJSZXNwb25zZVwiIHdpdGggb25seSBlcnJvcnMgaXMgcmV0dXJuZWQuXG4gICAgY29uc3QgZXhlQ29udGV4dCA9IGJ1aWxkRXhlY3V0aW9uQ29udGV4dChhcmdzKTtcbiAgICAvLyBSZXR1cm4gZWFybHkgZXJyb3JzIGlmIGV4ZWN1dGlvbiBjb250ZXh0IGZhaWxlZC5cbiAgICBpZiAoISgnc2NoZW1hJyBpbiBleGVDb250ZXh0KSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXJyb3JzOiBleGVDb250ZXh0Lm1hcChlID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsICdleHRlbnNpb25zJywge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uZS5leHRlbnNpb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHR0cDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLihfYSA9IGUuZXh0ZW5zaW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWydodHRwJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBlO1xuICAgICAgICAgICAgfSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBleGVjdXRlSW1wbChleGVDb250ZXh0KTtcbn1cbmZ1bmN0aW9uIGV4ZWN1dGVJbXBsKGV4ZUNvbnRleHQpIHtcbiAgICAvLyBSZXR1cm4gYSBQcm9taXNlIHRoYXQgd2lsbCBldmVudHVhbGx5IHJlc29sdmUgdG8gdGhlIGRhdGEgZGVzY3JpYmVkIGJ5XG4gICAgLy8gVGhlIFwiUmVzcG9uc2VcIiBzZWN0aW9uIG9mIHRoZSBHcmFwaFFMIHNwZWNpZmljYXRpb24uXG4gICAgLy9cbiAgICAvLyBJZiBlcnJvcnMgYXJlIGVuY291bnRlcmVkIHdoaWxlIGV4ZWN1dGluZyBhIEdyYXBoUUwgZmllbGQsIG9ubHkgdGhhdFxuICAgIC8vIGZpZWxkIGFuZCBpdHMgZGVzY2VuZGFudHMgd2lsbCBiZSBvbWl0dGVkLCBhbmQgc2libGluZyBmaWVsZHMgd2lsbCBzdGlsbFxuICAgIC8vIGJlIGV4ZWN1dGVkLiBBbiBleGVjdXRpb24gd2hpY2ggZW5jb3VudGVycyBlcnJvcnMgd2lsbCBzdGlsbCByZXN1bHQgaW4gYVxuICAgIC8vIHJlc29sdmVkIFByb21pc2UuXG4gICAgLy9cbiAgICAvLyBFcnJvcnMgZnJvbSBzdWItZmllbGRzIG9mIGEgTm9uTnVsbCB0eXBlIG1heSBwcm9wYWdhdGUgdG8gdGhlIHRvcCBsZXZlbCxcbiAgICAvLyBhdCB3aGljaCBwb2ludCB3ZSBzdGlsbCBsb2cgdGhlIGVycm9yIGFuZCBudWxsIHRoZSBwYXJlbnQgZmllbGQsIHdoaWNoXG4gICAgLy8gaW4gdGhpcyBjYXNlIGlzIHRoZSBlbnRpcmUgcmVzcG9uc2UuXG4gICAgcmV0dXJuIG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiBleGVjdXRlT3BlcmF0aW9uKGV4ZUNvbnRleHQpKVxuICAgICAgICAudGhlbihkYXRhID0+IHtcbiAgICAgICAgY29uc3QgaW5pdGlhbFJlc3VsdCA9IGJ1aWxkUmVzcG9uc2UoZGF0YSwgZXhlQ29udGV4dC5lcnJvcnMpO1xuICAgICAgICBpZiAoZXhlQ29udGV4dC5zdWJzZXF1ZW50UGF5bG9hZHMuc2l6ZSA+IDApIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgaW5pdGlhbFJlc3VsdDoge1xuICAgICAgICAgICAgICAgICAgICAuLi5pbml0aWFsUmVzdWx0LFxuICAgICAgICAgICAgICAgICAgICBoYXNOZXh0OiB0cnVlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgc3Vic2VxdWVudFJlc3VsdHM6IHlpZWxkU3Vic2VxdWVudFBheWxvYWRzKGV4ZUNvbnRleHQpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5pdGlhbFJlc3VsdDtcbiAgICB9LCAoZXJyb3IpID0+IHtcbiAgICAgICAgZXhlQ29udGV4dC5lcnJvcnMucHVzaChlcnJvcik7XG4gICAgICAgIHJldHVybiBidWlsZFJlc3BvbnNlKG51bGwsIGV4ZUNvbnRleHQuZXJyb3JzKTtcbiAgICB9KVxuICAgICAgICAucmVzb2x2ZSgpO1xufVxuLyoqXG4gKiBBbHNvIGltcGxlbWVudHMgdGhlIFwiRXhlY3V0aW5nIHJlcXVlc3RzXCIgc2VjdGlvbiBvZiB0aGUgR3JhcGhRTCBzcGVjaWZpY2F0aW9uLlxuICogSG93ZXZlciwgaXQgZ3VhcmFudGVlcyB0byBjb21wbGV0ZSBzeW5jaHJvbm91c2x5IChvciB0aHJvdyBhbiBlcnJvcikgYXNzdW1pbmdcbiAqIHRoYXQgYWxsIGZpZWxkIHJlc29sdmVycyBhcmUgYWxzbyBzeW5jaHJvbm91cy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGV4ZWN1dGVTeW5jKGFyZ3MpIHtcbiAgICBjb25zdCByZXN1bHQgPSBleGVjdXRlKGFyZ3MpO1xuICAgIC8vIEFzc2VydCB0aGF0IHRoZSBleGVjdXRpb24gd2FzIHN5bmNocm9ub3VzLlxuICAgIGlmIChpc1Byb21pc2UocmVzdWx0KSB8fCAnaW5pdGlhbFJlc3VsdCcgaW4gcmVzdWx0KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignR3JhcGhRTCBleGVjdXRpb24gZmFpbGVkIHRvIGNvbXBsZXRlIHN5bmNocm9ub3VzbHkuJyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIEdpdmVuIGEgY29tcGxldGVkIGV4ZWN1dGlvbiBjb250ZXh0IGFuZCBkYXRhLCBidWlsZCB0aGUgYHsgZXJyb3JzLCBkYXRhIH1gXG4gKiByZXNwb25zZSBkZWZpbmVkIGJ5IHRoZSBcIlJlc3BvbnNlXCIgc2VjdGlvbiBvZiB0aGUgR3JhcGhRTCBzcGVjaWZpY2F0aW9uLlxuICovXG5mdW5jdGlvbiBidWlsZFJlc3BvbnNlKGRhdGEsIGVycm9ycykge1xuICAgIHJldHVybiBlcnJvcnMubGVuZ3RoID09PSAwID8geyBkYXRhIH0gOiB7IGVycm9ycywgZGF0YSB9O1xufVxuLyoqXG4gKiBFc3NlbnRpYWwgYXNzZXJ0aW9ucyBiZWZvcmUgZXhlY3V0aW5nIHRvIHByb3ZpZGUgZGV2ZWxvcGVyIGZlZWRiYWNrIGZvclxuICogaW1wcm9wZXIgdXNlIG9mIHRoZSBHcmFwaFFMIGxpYnJhcnkuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRWYWxpZEV4ZWN1dGlvbkFyZ3VtZW50cyhzY2hlbWEsIGRvY3VtZW50LCByYXdWYXJpYWJsZVZhbHVlcykge1xuICAgIGNvbnNvbGUuYXNzZXJ0KCEhZG9jdW1lbnQsICdNdXN0IHByb3ZpZGUgZG9jdW1lbnQuJyk7XG4gICAgLy8gSWYgdGhlIHNjaGVtYSB1c2VkIGZvciBleGVjdXRpb24gaXMgaW52YWxpZCwgdGhyb3cgYW4gZXJyb3IuXG4gICAgYXNzZXJ0VmFsaWRTY2hlbWEoc2NoZW1hKTtcbiAgICAvLyBWYXJpYWJsZXMsIGlmIHByb3ZpZGVkLCBtdXN0IGJlIGFuIG9iamVjdC5cbiAgICBjb25zb2xlLmFzc2VydChyYXdWYXJpYWJsZVZhbHVlcyA9PSBudWxsIHx8IGlzT2JqZWN0TGlrZShyYXdWYXJpYWJsZVZhbHVlcyksICdWYXJpYWJsZXMgbXVzdCBiZSBwcm92aWRlZCBhcyBhbiBPYmplY3Qgd2hlcmUgZWFjaCBwcm9wZXJ0eSBpcyBhIHZhcmlhYmxlIHZhbHVlLiBQZXJoYXBzIGxvb2sgdG8gc2VlIGlmIGFuIHVucGFyc2VkIEpTT04gc3RyaW5nIHdhcyBwcm92aWRlZC4nKTtcbn1cbmV4cG9ydCBjb25zdCBnZXRGcmFnbWVudHNGcm9tRG9jdW1lbnQgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRGcmFnbWVudHNGcm9tRG9jdW1lbnQoZG9jdW1lbnQpIHtcbiAgICBjb25zdCBmcmFnbWVudHMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvciAoY29uc3QgZGVmaW5pdGlvbiBvZiBkb2N1bWVudC5kZWZpbml0aW9ucykge1xuICAgICAgICBpZiAoZGVmaW5pdGlvbi5raW5kID09PSBLaW5kLkZSQUdNRU5UX0RFRklOSVRJT04pIHtcbiAgICAgICAgICAgIGZyYWdtZW50c1tkZWZpbml0aW9uLm5hbWUudmFsdWVdID0gZGVmaW5pdGlvbjtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZnJhZ21lbnRzO1xufSk7XG4vKipcbiAqIENvbnN0cnVjdHMgYSBFeGVjdXRpb25Db250ZXh0IG9iamVjdCBmcm9tIHRoZSBhcmd1bWVudHMgcGFzc2VkIHRvXG4gKiBleGVjdXRlLCB3aGljaCB3ZSB3aWxsIHBhc3MgdGhyb3VnaG91dCB0aGUgb3RoZXIgZXhlY3V0aW9uIG1ldGhvZHMuXG4gKlxuICogVGhyb3dzIGEgR3JhcGhRTEVycm9yIGlmIGEgdmFsaWQgZXhlY3V0aW9uIGNvbnRleHQgY2Fubm90IGJlIGNyZWF0ZWQuXG4gKlxuICogVE9ETzogY29uc2lkZXIgbm8gbG9uZ2VyIGV4cG9ydGluZyB0aGlzIGZ1bmN0aW9uXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkRXhlY3V0aW9uQ29udGV4dChhcmdzKSB7XG4gICAgdmFyIF9hLCBfYjtcbiAgICBjb25zdCB7IHNjaGVtYSwgZG9jdW1lbnQsIHJvb3RWYWx1ZSwgY29udGV4dFZhbHVlLCB2YXJpYWJsZVZhbHVlczogcmF3VmFyaWFibGVWYWx1ZXMsIG9wZXJhdGlvbk5hbWUsIGZpZWxkUmVzb2x2ZXIsIHR5cGVSZXNvbHZlciwgc3Vic2NyaWJlRmllbGRSZXNvbHZlciwgfSA9IGFyZ3M7XG4gICAgLy8gSWYgdGhlIHNjaGVtYSB1c2VkIGZvciBleGVjdXRpb24gaXMgaW52YWxpZCwgdGhyb3cgYW4gZXJyb3IuXG4gICAgYXNzZXJ0VmFsaWRTY2hlbWEoc2NoZW1hKTtcbiAgICBjb25zdCBmcmFnbWVudHMgPSBnZXRGcmFnbWVudHNGcm9tRG9jdW1lbnQoZG9jdW1lbnQpO1xuICAgIGxldCBvcGVyYXRpb247XG4gICAgZm9yIChjb25zdCBkZWZpbml0aW9uIG9mIGRvY3VtZW50LmRlZmluaXRpb25zKSB7XG4gICAgICAgIHN3aXRjaCAoZGVmaW5pdGlvbi5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIEtpbmQuT1BFUkFUSU9OX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgaWYgKG9wZXJhdGlvbk5hbWUgPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAob3BlcmF0aW9uICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBbY3JlYXRlR3JhcGhRTEVycm9yKCdNdXN0IHByb3ZpZGUgb3BlcmF0aW9uIG5hbWUgaWYgcXVlcnkgY29udGFpbnMgbXVsdGlwbGUgb3BlcmF0aW9ucy4nKV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgb3BlcmF0aW9uID0gZGVmaW5pdGlvbjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoKChfYSA9IGRlZmluaXRpb24ubmFtZSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnZhbHVlKSA9PT0gb3BlcmF0aW9uTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb24gPSBkZWZpbml0aW9uO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAvLyBpZ25vcmUgbm9uLWV4ZWN1dGFibGUgZGVmaW5pdGlvbnNcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAob3BlcmF0aW9uID09IG51bGwpIHtcbiAgICAgICAgaWYgKG9wZXJhdGlvbk5hbWUgIT0gbnVsbCkge1xuICAgICAgICAgICAgcmV0dXJuIFtjcmVhdGVHcmFwaFFMRXJyb3IoYFVua25vd24gb3BlcmF0aW9uIG5hbWVkIFwiJHtvcGVyYXRpb25OYW1lfVwiLmApXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gW2NyZWF0ZUdyYXBoUUxFcnJvcignTXVzdCBwcm92aWRlIGFuIG9wZXJhdGlvbi4nKV07XG4gICAgfVxuICAgIC8vIEZJWE1FOiBodHRwczovL2dpdGh1Yi5jb20vZ3JhcGhxbC9ncmFwaHFsLWpzL2lzc3Vlcy8yMjAzXG4gICAgLyogYzggaWdub3JlIG5leHQgKi9cbiAgICBjb25zdCB2YXJpYWJsZURlZmluaXRpb25zID0gKF9iID0gb3BlcmF0aW9uLnZhcmlhYmxlRGVmaW5pdGlvbnMpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IFtdO1xuICAgIGNvbnN0IGNvZXJjZWRWYXJpYWJsZVZhbHVlcyA9IGdldFZhcmlhYmxlVmFsdWVzKHNjaGVtYSwgdmFyaWFibGVEZWZpbml0aW9ucywgcmF3VmFyaWFibGVWYWx1ZXMgIT09IG51bGwgJiYgcmF3VmFyaWFibGVWYWx1ZXMgIT09IHZvaWQgMCA/IHJhd1ZhcmlhYmxlVmFsdWVzIDoge30sIHtcbiAgICAgICAgbWF4RXJyb3JzOiA1MCxcbiAgICB9KTtcbiAgICBpZiAoY29lcmNlZFZhcmlhYmxlVmFsdWVzLmVycm9ycykge1xuICAgICAgICByZXR1cm4gY29lcmNlZFZhcmlhYmxlVmFsdWVzLmVycm9ycztcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2NoZW1hLFxuICAgICAgICBmcmFnbWVudHMsXG4gICAgICAgIHJvb3RWYWx1ZSxcbiAgICAgICAgY29udGV4dFZhbHVlLFxuICAgICAgICBvcGVyYXRpb24sXG4gICAgICAgIHZhcmlhYmxlVmFsdWVzOiBjb2VyY2VkVmFyaWFibGVWYWx1ZXMuY29lcmNlZCxcbiAgICAgICAgZmllbGRSZXNvbHZlcjogZmllbGRSZXNvbHZlciAhPT0gbnVsbCAmJiBmaWVsZFJlc29sdmVyICE9PSB2b2lkIDAgPyBmaWVsZFJlc29sdmVyIDogZGVmYXVsdEZpZWxkUmVzb2x2ZXIsXG4gICAgICAgIHR5cGVSZXNvbHZlcjogdHlwZVJlc29sdmVyICE9PSBudWxsICYmIHR5cGVSZXNvbHZlciAhPT0gdm9pZCAwID8gdHlwZVJlc29sdmVyIDogZGVmYXVsdFR5cGVSZXNvbHZlcixcbiAgICAgICAgc3Vic2NyaWJlRmllbGRSZXNvbHZlcjogc3Vic2NyaWJlRmllbGRSZXNvbHZlciAhPT0gbnVsbCAmJiBzdWJzY3JpYmVGaWVsZFJlc29sdmVyICE9PSB2b2lkIDAgPyBzdWJzY3JpYmVGaWVsZFJlc29sdmVyIDogZGVmYXVsdEZpZWxkUmVzb2x2ZXIsXG4gICAgICAgIHN1YnNlcXVlbnRQYXlsb2FkczogbmV3IFNldCgpLFxuICAgICAgICBlcnJvcnM6IFtdLFxuICAgIH07XG59XG5mdW5jdGlvbiBidWlsZFBlckV2ZW50RXhlY3V0aW9uQ29udGV4dChleGVDb250ZXh0LCBwYXlsb2FkKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLi4uZXhlQ29udGV4dCxcbiAgICAgICAgcm9vdFZhbHVlOiBwYXlsb2FkLFxuICAgICAgICBzdWJzZXF1ZW50UGF5bG9hZHM6IG5ldyBTZXQoKSxcbiAgICAgICAgZXJyb3JzOiBbXSxcbiAgICB9O1xufVxuLyoqXG4gKiBJbXBsZW1lbnRzIHRoZSBcIkV4ZWN1dGluZyBvcGVyYXRpb25zXCIgc2VjdGlvbiBvZiB0aGUgc3BlYy5cbiAqL1xuZnVuY3Rpb24gZXhlY3V0ZU9wZXJhdGlvbihleGVDb250ZXh0KSB7XG4gICAgY29uc3QgeyBvcGVyYXRpb24sIHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgcm9vdFZhbHVlIH0gPSBleGVDb250ZXh0O1xuICAgIGNvbnN0IHJvb3RUeXBlID0gZ2V0RGVmaW5lZFJvb3RUeXBlKHNjaGVtYSwgb3BlcmF0aW9uLm9wZXJhdGlvbiwgW29wZXJhdGlvbl0pO1xuICAgIGlmIChyb290VHlwZSA9PSBudWxsKSB7XG4gICAgICAgIGNyZWF0ZUdyYXBoUUxFcnJvcihgU2NoZW1hIGlzIG5vdCBjb25maWd1cmVkIHRvIGV4ZWN1dGUgJHtvcGVyYXRpb24ub3BlcmF0aW9ufSBvcGVyYXRpb24uYCwge1xuICAgICAgICAgICAgbm9kZXM6IG9wZXJhdGlvbixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbnN0IHsgZmllbGRzOiByb290RmllbGRzLCBwYXRjaGVzIH0gPSBjb2xsZWN0RmllbGRzKHNjaGVtYSwgZnJhZ21lbnRzLCB2YXJpYWJsZVZhbHVlcywgcm9vdFR5cGUsIG9wZXJhdGlvbi5zZWxlY3Rpb25TZXQpO1xuICAgIGNvbnN0IHBhdGggPSB1bmRlZmluZWQ7XG4gICAgbGV0IHJlc3VsdDtcbiAgICBpZiAob3BlcmF0aW9uLm9wZXJhdGlvbiA9PT0gJ211dGF0aW9uJykge1xuICAgICAgICByZXN1bHQgPSBleGVjdXRlRmllbGRzU2VyaWFsbHkoZXhlQ29udGV4dCwgcm9vdFR5cGUsIHJvb3RWYWx1ZSwgcGF0aCwgcm9vdEZpZWxkcyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXN1bHQgPSBleGVjdXRlRmllbGRzKGV4ZUNvbnRleHQsIHJvb3RUeXBlLCByb290VmFsdWUsIHBhdGgsIHJvb3RGaWVsZHMpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHBhdGNoIG9mIHBhdGNoZXMpIHtcbiAgICAgICAgY29uc3QgeyBsYWJlbCwgZmllbGRzOiBwYXRjaEZpZWxkcyB9ID0gcGF0Y2g7XG4gICAgICAgIGV4ZWN1dGVEZWZlcnJlZEZyYWdtZW50KGV4ZUNvbnRleHQsIHJvb3RUeXBlLCByb290VmFsdWUsIHBhdGNoRmllbGRzLCBsYWJlbCwgcGF0aCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4vKipcbiAqIEltcGxlbWVudHMgdGhlIFwiRXhlY3V0aW5nIHNlbGVjdGlvbiBzZXRzXCIgc2VjdGlvbiBvZiB0aGUgc3BlY1xuICogZm9yIGZpZWxkcyB0aGF0IG11c3QgYmUgZXhlY3V0ZWQgc2VyaWFsbHkuXG4gKi9cbmZ1bmN0aW9uIGV4ZWN1dGVGaWVsZHNTZXJpYWxseShleGVDb250ZXh0LCBwYXJlbnRUeXBlLCBzb3VyY2VWYWx1ZSwgcGF0aCwgZmllbGRzKSB7XG4gICAgcmV0dXJuIHByb21pc2VSZWR1Y2UoZmllbGRzLCAocmVzdWx0cywgW3Jlc3BvbnNlTmFtZSwgZmllbGROb2Rlc10pID0+IHtcbiAgICAgICAgY29uc3QgZmllbGRQYXRoID0gYWRkUGF0aChwYXRoLCByZXNwb25zZU5hbWUsIHBhcmVudFR5cGUubmFtZSk7XG4gICAgICAgIHJldHVybiBuZXcgVmFsdWVPclByb21pc2UoKCkgPT4gZXhlY3V0ZUZpZWxkKGV4ZUNvbnRleHQsIHBhcmVudFR5cGUsIHNvdXJjZVZhbHVlLCBmaWVsZE5vZGVzLCBmaWVsZFBhdGgpKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBpZiAocmVzdWx0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJlc3VsdHNbcmVzcG9uc2VOYW1lXSA9IHJlc3VsdDtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICB9KTtcbiAgICB9LCBPYmplY3QuY3JlYXRlKG51bGwpKS5yZXNvbHZlKCk7XG59XG4vKipcbiAqIEltcGxlbWVudHMgdGhlIFwiRXhlY3V0aW5nIHNlbGVjdGlvbiBzZXRzXCIgc2VjdGlvbiBvZiB0aGUgc3BlY1xuICogZm9yIGZpZWxkcyB0aGF0IG1heSBiZSBleGVjdXRlZCBpbiBwYXJhbGxlbC5cbiAqL1xuZnVuY3Rpb24gZXhlY3V0ZUZpZWxkcyhleGVDb250ZXh0LCBwYXJlbnRUeXBlLCBzb3VyY2VWYWx1ZSwgcGF0aCwgZmllbGRzLCBhc3luY1BheWxvYWRSZWNvcmQpIHtcbiAgICBjb25zdCByZXN1bHRzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBsZXQgY29udGFpbnNQcm9taXNlID0gZmFsc2U7XG4gICAgdHJ5IHtcbiAgICAgICAgZm9yIChjb25zdCBbcmVzcG9uc2VOYW1lLCBmaWVsZE5vZGVzXSBvZiBmaWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkUGF0aCA9IGFkZFBhdGgocGF0aCwgcmVzcG9uc2VOYW1lLCBwYXJlbnRUeXBlLm5hbWUpO1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZXhlY3V0ZUZpZWxkKGV4ZUNvbnRleHQsIHBhcmVudFR5cGUsIHNvdXJjZVZhbHVlLCBmaWVsZE5vZGVzLCBmaWVsZFBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgICAgICBpZiAocmVzdWx0ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXN1bHRzW3Jlc3BvbnNlTmFtZV0gPSByZXN1bHQ7XG4gICAgICAgICAgICAgICAgaWYgKGlzUHJvbWlzZShyZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRhaW5zUHJvbWlzZSA9IHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoY29udGFpbnNQcm9taXNlKSB7XG4gICAgICAgICAgICAvLyBFbnN1cmUgdGhhdCBhbnkgcHJvbWlzZXMgcmV0dXJuZWQgYnkgb3RoZXIgZmllbGRzIGFyZSBoYW5kbGVkLCBhcyB0aGV5IG1heSBhbHNvIHJlamVjdC5cbiAgICAgICAgICAgIHJldHVybiBwcm9taXNlRm9yT2JqZWN0KHJlc3VsdHMpLmZpbmFsbHkoKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICAgIC8vIElmIHRoZXJlIGFyZSBubyBwcm9taXNlcywgd2UgY2FuIGp1c3QgcmV0dXJuIHRoZSBvYmplY3RcbiAgICBpZiAoIWNvbnRhaW5zUHJvbWlzZSkge1xuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9XG4gICAgLy8gT3RoZXJ3aXNlLCByZXN1bHRzIGlzIGEgbWFwIGZyb20gZmllbGQgbmFtZSB0byB0aGUgcmVzdWx0IG9mIHJlc29sdmluZyB0aGF0XG4gICAgLy8gZmllbGQsIHdoaWNoIGlzIHBvc3NpYmx5IGEgcHJvbWlzZS4gUmV0dXJuIGEgcHJvbWlzZSB0aGF0IHdpbGwgcmV0dXJuIHRoaXNcbiAgICAvLyBzYW1lIG1hcCwgYnV0IHdpdGggYW55IHByb21pc2VzIHJlcGxhY2VkIHdpdGggdGhlIHZhbHVlcyB0aGV5IHJlc29sdmVkIHRvLlxuICAgIHJldHVybiBwcm9taXNlRm9yT2JqZWN0KHJlc3VsdHMpO1xufVxuLyoqXG4gKiBJbXBsZW1lbnRzIHRoZSBcIkV4ZWN1dGluZyBmaWVsZHNcIiBzZWN0aW9uIG9mIHRoZSBzcGVjXG4gKiBJbiBwYXJ0aWN1bGFyLCB0aGlzIGZ1bmN0aW9uIGZpZ3VyZXMgb3V0IHRoZSB2YWx1ZSB0aGF0IHRoZSBmaWVsZCByZXR1cm5zIGJ5XG4gKiBjYWxsaW5nIGl0cyByZXNvbHZlIGZ1bmN0aW9uLCB0aGVuIGNhbGxzIGNvbXBsZXRlVmFsdWUgdG8gY29tcGxldGUgcHJvbWlzZXMsXG4gKiBzZXJpYWxpemUgc2NhbGFycywgb3IgZXhlY3V0ZSB0aGUgc3ViLXNlbGVjdGlvbi1zZXQgZm9yIG9iamVjdHMuXG4gKi9cbmZ1bmN0aW9uIGV4ZWN1dGVGaWVsZChleGVDb250ZXh0LCBwYXJlbnRUeXBlLCBzb3VyY2UsIGZpZWxkTm9kZXMsIHBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgZXJyb3JzID0gKF9hID0gYXN5bmNQYXlsb2FkUmVjb3JkID09PSBudWxsIHx8IGFzeW5jUGF5bG9hZFJlY29yZCA9PT0gdm9pZCAwID8gdm9pZCAwIDogYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycykgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZXhlQ29udGV4dC5lcnJvcnM7XG4gICAgY29uc3QgZmllbGREZWYgPSBnZXRGaWVsZERlZihleGVDb250ZXh0LnNjaGVtYSwgcGFyZW50VHlwZSwgZmllbGROb2Rlc1swXSk7XG4gICAgaWYgKCFmaWVsZERlZikge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGNvbnN0IHJldHVyblR5cGUgPSBmaWVsZERlZi50eXBlO1xuICAgIGNvbnN0IHJlc29sdmVGbiA9IChfYiA9IGZpZWxkRGVmLnJlc29sdmUpICE9PSBudWxsICYmIF9iICE9PSB2b2lkIDAgPyBfYiA6IGV4ZUNvbnRleHQuZmllbGRSZXNvbHZlcjtcbiAgICBjb25zdCBpbmZvID0gYnVpbGRSZXNvbHZlSW5mbyhleGVDb250ZXh0LCBmaWVsZERlZiwgZmllbGROb2RlcywgcGFyZW50VHlwZSwgcGF0aCk7XG4gICAgLy8gR2V0IHRoZSByZXNvbHZlIGZ1bmN0aW9uLCByZWdhcmRsZXNzIG9mIGlmIGl0cyByZXN1bHQgaXMgbm9ybWFsIG9yIGFicnVwdCAoZXJyb3IpLlxuICAgIHRyeSB7XG4gICAgICAgIC8vIEJ1aWxkIGEgSlMgb2JqZWN0IG9mIGFyZ3VtZW50cyBmcm9tIHRoZSBmaWVsZC5hcmd1bWVudHMgQVNULCB1c2luZyB0aGVcbiAgICAgICAgLy8gdmFyaWFibGVzIHNjb3BlIHRvIGZ1bGZpbGwgYW55IHZhcmlhYmxlIHJlZmVyZW5jZXMuXG4gICAgICAgIC8vIFRPRE86IGZpbmQgYSB3YXkgdG8gbWVtb2l6ZSwgaW4gY2FzZSB0aGlzIGZpZWxkIGlzIHdpdGhpbiBhIExpc3QgdHlwZS5cbiAgICAgICAgY29uc3QgYXJncyA9IGdldEFyZ3VtZW50VmFsdWVzKGZpZWxkRGVmLCBmaWVsZE5vZGVzWzBdLCBleGVDb250ZXh0LnZhcmlhYmxlVmFsdWVzKTtcbiAgICAgICAgLy8gVGhlIHJlc29sdmUgZnVuY3Rpb24ncyBvcHRpb25hbCB0aGlyZCBhcmd1bWVudCBpcyBhIGNvbnRleHQgdmFsdWUgdGhhdFxuICAgICAgICAvLyBpcyBwcm92aWRlZCB0byBldmVyeSByZXNvbHZlIGZ1bmN0aW9uIHdpdGhpbiBhbiBleGVjdXRpb24uIEl0IGlzIGNvbW1vbmx5XG4gICAgICAgIC8vIHVzZWQgdG8gcmVwcmVzZW50IGFuIGF1dGhlbnRpY2F0ZWQgdXNlciwgb3IgcmVxdWVzdC1zcGVjaWZpYyBjYWNoZXMuXG4gICAgICAgIGNvbnN0IGNvbnRleHRWYWx1ZSA9IGV4ZUNvbnRleHQuY29udGV4dFZhbHVlO1xuICAgICAgICBjb25zdCByZXN1bHQgPSByZXNvbHZlRm4oc291cmNlLCBhcmdzLCBjb250ZXh0VmFsdWUsIGluZm8pO1xuICAgICAgICBsZXQgY29tcGxldGVkO1xuICAgICAgICBpZiAoaXNQcm9taXNlKHJlc3VsdCkpIHtcbiAgICAgICAgICAgIGNvbXBsZXRlZCA9IHJlc3VsdC50aGVuKHJlc29sdmVkID0+IGNvbXBsZXRlVmFsdWUoZXhlQ29udGV4dCwgcmV0dXJuVHlwZSwgZmllbGROb2RlcywgaW5mbywgcGF0aCwgcmVzb2x2ZWQsIGFzeW5jUGF5bG9hZFJlY29yZCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29tcGxldGVkID0gY29tcGxldGVWYWx1ZShleGVDb250ZXh0LCByZXR1cm5UeXBlLCBmaWVsZE5vZGVzLCBpbmZvLCBwYXRoLCByZXN1bHQsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzUHJvbWlzZShjb21wbGV0ZWQpKSB7XG4gICAgICAgICAgICAvLyBOb3RlOiB3ZSBkb24ndCByZWx5IG9uIGEgYGNhdGNoYCBtZXRob2QsIGJ1dCB3ZSBkbyBleHBlY3QgXCJ0aGVuYWJsZVwiXG4gICAgICAgICAgICAvLyB0byB0YWtlIGEgc2Vjb25kIGNhbGxiYWNrIGZvciB0aGUgZXJyb3IgY2FzZS5cbiAgICAgICAgICAgIHJldHVybiBjb21wbGV0ZWQudGhlbih1bmRlZmluZWQsIHJhd0Vycm9yID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IGxvY2F0ZWRFcnJvcihyYXdFcnJvciwgZmllbGROb2RlcywgcGF0aFRvQXJyYXkocGF0aCkpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGhhbmRsZWRFcnJvciA9IGhhbmRsZUZpZWxkRXJyb3IoZXJyb3IsIHJldHVyblR5cGUsIGVycm9ycyk7XG4gICAgICAgICAgICAgICAgZmlsdGVyU3Vic2VxdWVudFBheWxvYWRzKGV4ZUNvbnRleHQsIHBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZWRFcnJvcjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb21wbGV0ZWQ7XG4gICAgfVxuICAgIGNhdGNoIChyYXdFcnJvcikge1xuICAgICAgICBjb25zdCBlcnJvciA9IGxvY2F0ZWRFcnJvcihyYXdFcnJvciwgZmllbGROb2RlcywgcGF0aFRvQXJyYXkocGF0aCkpO1xuICAgICAgICBjb25zdCBoYW5kbGVkRXJyb3IgPSBoYW5kbGVGaWVsZEVycm9yKGVycm9yLCByZXR1cm5UeXBlLCBlcnJvcnMpO1xuICAgICAgICBmaWx0ZXJTdWJzZXF1ZW50UGF5bG9hZHMoZXhlQ29udGV4dCwgcGF0aCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICAgICAgcmV0dXJuIGhhbmRsZWRFcnJvcjtcbiAgICB9XG59XG4vKipcbiAqIFRPRE86IGNvbnNpZGVyIG5vIGxvbmdlciBleHBvcnRpbmcgdGhpcyBmdW5jdGlvblxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBidWlsZFJlc29sdmVJbmZvKGV4ZUNvbnRleHQsIGZpZWxkRGVmLCBmaWVsZE5vZGVzLCBwYXJlbnRUeXBlLCBwYXRoKSB7XG4gICAgLy8gVGhlIHJlc29sdmUgZnVuY3Rpb24ncyBvcHRpb25hbCBmb3VydGggYXJndW1lbnQgaXMgYSBjb2xsZWN0aW9uIG9mXG4gICAgLy8gaW5mb3JtYXRpb24gYWJvdXQgdGhlIGN1cnJlbnQgZXhlY3V0aW9uIHN0YXRlLlxuICAgIHJldHVybiB7XG4gICAgICAgIGZpZWxkTmFtZTogZmllbGREZWYubmFtZSxcbiAgICAgICAgZmllbGROb2RlcyxcbiAgICAgICAgcmV0dXJuVHlwZTogZmllbGREZWYudHlwZSxcbiAgICAgICAgcGFyZW50VHlwZSxcbiAgICAgICAgcGF0aCxcbiAgICAgICAgc2NoZW1hOiBleGVDb250ZXh0LnNjaGVtYSxcbiAgICAgICAgZnJhZ21lbnRzOiBleGVDb250ZXh0LmZyYWdtZW50cyxcbiAgICAgICAgcm9vdFZhbHVlOiBleGVDb250ZXh0LnJvb3RWYWx1ZSxcbiAgICAgICAgb3BlcmF0aW9uOiBleGVDb250ZXh0Lm9wZXJhdGlvbixcbiAgICAgICAgdmFyaWFibGVWYWx1ZXM6IGV4ZUNvbnRleHQudmFyaWFibGVWYWx1ZXMsXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGhhbmRsZUZpZWxkRXJyb3IoZXJyb3IsIHJldHVyblR5cGUsIGVycm9ycykge1xuICAgIC8vIElmIHRoZSBmaWVsZCB0eXBlIGlzIG5vbi1udWxsYWJsZSwgdGhlbiBpdCBpcyByZXNvbHZlZCB3aXRob3V0IGFueVxuICAgIC8vIHByb3RlY3Rpb24gZnJvbSBlcnJvcnMsIGhvd2V2ZXIgaXQgc3RpbGwgcHJvcGVybHkgbG9jYXRlcyB0aGUgZXJyb3IuXG4gICAgaWYgKGlzTm9uTnVsbFR5cGUocmV0dXJuVHlwZSkpIHtcbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgfVxuICAgIC8vIE90aGVyd2lzZSwgZXJyb3IgcHJvdGVjdGlvbiBpcyBhcHBsaWVkLCBsb2dnaW5nIHRoZSBlcnJvciBhbmQgcmVzb2x2aW5nXG4gICAgLy8gYSBudWxsIHZhbHVlIGZvciB0aGlzIGZpZWxkIGlmIG9uZSBpcyBlbmNvdW50ZXJlZC5cbiAgICBlcnJvcnMucHVzaChlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG59XG4vKipcbiAqIEltcGxlbWVudHMgdGhlIGluc3RydWN0aW9ucyBmb3IgY29tcGxldGVWYWx1ZSBhcyBkZWZpbmVkIGluIHRoZVxuICogXCJWYWx1ZSBDb21wbGV0aW9uXCIgc2VjdGlvbiBvZiB0aGUgc3BlYy5cbiAqXG4gKiBJZiB0aGUgZmllbGQgdHlwZSBpcyBOb24tTnVsbCwgdGhlbiB0aGlzIHJlY3Vyc2l2ZWx5IGNvbXBsZXRlcyB0aGUgdmFsdWVcbiAqIGZvciB0aGUgaW5uZXIgdHlwZS4gSXQgdGhyb3dzIGEgZmllbGQgZXJyb3IgaWYgdGhhdCBjb21wbGV0aW9uIHJldHVybnMgbnVsbCxcbiAqIGFzIHBlciB0aGUgXCJOdWxsYWJpbGl0eVwiIHNlY3Rpb24gb2YgdGhlIHNwZWMuXG4gKlxuICogSWYgdGhlIGZpZWxkIHR5cGUgaXMgYSBMaXN0LCB0aGVuIHRoaXMgcmVjdXJzaXZlbHkgY29tcGxldGVzIHRoZSB2YWx1ZVxuICogZm9yIHRoZSBpbm5lciB0eXBlIG9uIGVhY2ggaXRlbSBpbiB0aGUgbGlzdC5cbiAqXG4gKiBJZiB0aGUgZmllbGQgdHlwZSBpcyBhIFNjYWxhciBvciBFbnVtLCBlbnN1cmVzIHRoZSBjb21wbGV0ZWQgdmFsdWUgaXMgYSBsZWdhbFxuICogdmFsdWUgb2YgdGhlIHR5cGUgYnkgY2FsbGluZyB0aGUgYHNlcmlhbGl6ZWAgbWV0aG9kIG9mIEdyYXBoUUwgdHlwZVxuICogZGVmaW5pdGlvbi5cbiAqXG4gKiBJZiB0aGUgZmllbGQgaXMgYW4gYWJzdHJhY3QgdHlwZSwgZGV0ZXJtaW5lIHRoZSBydW50aW1lIHR5cGUgb2YgdGhlIHZhbHVlXG4gKiBhbmQgdGhlbiBjb21wbGV0ZSBiYXNlZCBvbiB0aGF0IHR5cGVcbiAqXG4gKiBPdGhlcndpc2UsIHRoZSBmaWVsZCB0eXBlIGV4cGVjdHMgYSBzdWItc2VsZWN0aW9uIHNldCwgYW5kIHdpbGwgY29tcGxldGUgdGhlXG4gKiB2YWx1ZSBieSBleGVjdXRpbmcgYWxsIHN1Yi1zZWxlY3Rpb25zLlxuICovXG5mdW5jdGlvbiBjb21wbGV0ZVZhbHVlKGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKSB7XG4gICAgLy8gSWYgcmVzdWx0IGlzIGFuIEVycm9yLCB0aHJvdyBhIGxvY2F0ZWQgZXJyb3IuXG4gICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIHRocm93IHJlc3VsdDtcbiAgICB9XG4gICAgLy8gSWYgZmllbGQgdHlwZSBpcyBOb25OdWxsLCBjb21wbGV0ZSBmb3IgaW5uZXIgdHlwZSwgYW5kIHRocm93IGZpZWxkIGVycm9yXG4gICAgLy8gaWYgcmVzdWx0IGlzIG51bGwuXG4gICAgaWYgKGlzTm9uTnVsbFR5cGUocmV0dXJuVHlwZSkpIHtcbiAgICAgICAgY29uc3QgY29tcGxldGVkID0gY29tcGxldGVWYWx1ZShleGVDb250ZXh0LCByZXR1cm5UeXBlLm9mVHlwZSwgZmllbGROb2RlcywgaW5mbywgcGF0aCwgcmVzdWx0LCBhc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICBpZiAoY29tcGxldGVkID09PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCByZXR1cm4gbnVsbCBmb3Igbm9uLW51bGxhYmxlIGZpZWxkICR7aW5mby5wYXJlbnRUeXBlLm5hbWV9LiR7aW5mby5maWVsZE5hbWV9LmApO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBjb21wbGV0ZWQ7XG4gICAgfVxuICAgIC8vIElmIHJlc3VsdCB2YWx1ZSBpcyBudWxsIG9yIHVuZGVmaW5lZCB0aGVuIHJldHVybiBudWxsLlxuICAgIGlmIChyZXN1bHQgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gSWYgZmllbGQgdHlwZSBpcyBMaXN0LCBjb21wbGV0ZSBlYWNoIGl0ZW0gaW4gdGhlIGxpc3Qgd2l0aCB0aGUgaW5uZXIgdHlwZVxuICAgIGlmIChpc0xpc3RUeXBlKHJldHVyblR5cGUpKSB7XG4gICAgICAgIHJldHVybiBjb21wbGV0ZUxpc3RWYWx1ZShleGVDb250ZXh0LCByZXR1cm5UeXBlLCBmaWVsZE5vZGVzLCBpbmZvLCBwYXRoLCByZXN1bHQsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgfVxuICAgIC8vIElmIGZpZWxkIHR5cGUgaXMgYSBsZWFmIHR5cGUsIFNjYWxhciBvciBFbnVtLCBzZXJpYWxpemUgdG8gYSB2YWxpZCB2YWx1ZSxcbiAgICAvLyByZXR1cm5pbmcgbnVsbCBpZiBzZXJpYWxpemF0aW9uIGlzIG5vdCBwb3NzaWJsZS5cbiAgICBpZiAoaXNMZWFmVHlwZShyZXR1cm5UeXBlKSkge1xuICAgICAgICByZXR1cm4gY29tcGxldGVMZWFmVmFsdWUocmV0dXJuVHlwZSwgcmVzdWx0KTtcbiAgICB9XG4gICAgLy8gSWYgZmllbGQgdHlwZSBpcyBhbiBhYnN0cmFjdCB0eXBlLCBJbnRlcmZhY2Ugb3IgVW5pb24sIGRldGVybWluZSB0aGVcbiAgICAvLyBydW50aW1lIE9iamVjdCB0eXBlIGFuZCBjb21wbGV0ZSBmb3IgdGhhdCB0eXBlLlxuICAgIGlmIChpc0Fic3RyYWN0VHlwZShyZXR1cm5UeXBlKSkge1xuICAgICAgICByZXR1cm4gY29tcGxldGVBYnN0cmFjdFZhbHVlKGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICB9XG4gICAgLy8gSWYgZmllbGQgdHlwZSBpcyBPYmplY3QsIGV4ZWN1dGUgYW5kIGNvbXBsZXRlIGFsbCBzdWItc2VsZWN0aW9ucy5cbiAgICBpZiAoaXNPYmplY3RUeXBlKHJldHVyblR5cGUpKSB7XG4gICAgICAgIHJldHVybiBjb21wbGV0ZU9iamVjdFZhbHVlKGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICB9XG4gICAgLyogYzggaWdub3JlIG5leHQgNiAqL1xuICAgIC8vIE5vdCByZWFjaGFibGUsIGFsbCBwb3NzaWJsZSBvdXRwdXQgdHlwZXMgaGF2ZSBiZWVuIGNvbnNpZGVyZWQuXG4gICAgY29uc29sZS5hc3NlcnQoZmFsc2UsICdDYW5ub3QgY29tcGxldGUgdmFsdWUgb2YgdW5leHBlY3RlZCBvdXRwdXQgdHlwZTogJyArIGluc3BlY3QocmV0dXJuVHlwZSkpO1xufVxuLyoqXG4gKiBSZXR1cm5zIGFuIG9iamVjdCBjb250YWluaW5nIHRoZSBgQHN0cmVhbWAgYXJndW1lbnRzIGlmIGEgZmllbGQgc2hvdWxkIGJlXG4gKiBzdHJlYW1lZCBiYXNlZCBvbiB0aGUgZXhwZXJpbWVudGFsIGZsYWcsIHN0cmVhbSBkaXJlY3RpdmUgcHJlc2VudCBhbmRcbiAqIG5vdCBkaXNhYmxlZCBieSB0aGUgXCJpZlwiIGFyZ3VtZW50LlxuICovXG5mdW5jdGlvbiBnZXRTdHJlYW1WYWx1ZXMoZXhlQ29udGV4dCwgZmllbGROb2RlcywgcGF0aCkge1xuICAgIC8vIGRvIG5vdCBzdHJlYW0gaW5uZXIgbGlzdHMgb2YgbXVsdGktZGltZW5zaW9uYWwgbGlzdHNcbiAgICBpZiAodHlwZW9mIHBhdGgua2V5ID09PSAnbnVtYmVyJykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIHZhbGlkYXRpb24gb25seSBhbGxvd3MgZXF1aXZhbGVudCBzdHJlYW1zIG9uIG11bHRpcGxlIGZpZWxkcywgc28gaXQgaXNcbiAgICAvLyBzYWZlIHRvIG9ubHkgY2hlY2sgdGhlIGZpcnN0IGZpZWxkTm9kZSBmb3IgdGhlIHN0cmVhbSBkaXJlY3RpdmVcbiAgICBjb25zdCBzdHJlYW0gPSBnZXREaXJlY3RpdmVWYWx1ZXMoR3JhcGhRTFN0cmVhbURpcmVjdGl2ZSwgZmllbGROb2Rlc1swXSwgZXhlQ29udGV4dC52YXJpYWJsZVZhbHVlcyk7XG4gICAgaWYgKCFzdHJlYW0pIHtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAoc3RyZWFtLmlmID09PSBmYWxzZSkge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGludmFyaWFudCh0eXBlb2Ygc3RyZWFtWydpbml0aWFsQ291bnQnXSA9PT0gJ251bWJlcicsICdpbml0aWFsQ291bnQgbXVzdCBiZSBhIG51bWJlcicpO1xuICAgIGludmFyaWFudChzdHJlYW1bJ2luaXRpYWxDb3VudCddID49IDAsICdpbml0aWFsQ291bnQgbXVzdCBiZSBhIHBvc2l0aXZlIGludGVnZXInKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBpbml0aWFsQ291bnQ6IHN0cmVhbVsnaW5pdGlhbENvdW50J10sXG4gICAgICAgIGxhYmVsOiB0eXBlb2Ygc3RyZWFtWydsYWJlbCddID09PSAnc3RyaW5nJyA/IHN0cmVhbVsnbGFiZWwnXSA6IHVuZGVmaW5lZCxcbiAgICB9O1xufVxuLyoqXG4gKiBDb21wbGV0ZSBhIGFzeW5jIGl0ZXJhdG9yIHZhbHVlIGJ5IGNvbXBsZXRpbmcgdGhlIHJlc3VsdCBhbmQgY2FsbGluZ1xuICogcmVjdXJzaXZlbHkgdW50aWwgYWxsIHRoZSByZXN1bHRzIGFyZSBjb21wbGV0ZWQuXG4gKi9cbmFzeW5jIGZ1bmN0aW9uIGNvbXBsZXRlQXN5bmNJdGVyYXRvclZhbHVlKGV4ZUNvbnRleHQsIGl0ZW1UeXBlLCBmaWVsZE5vZGVzLCBpbmZvLCBwYXRoLCBpdGVyYXRvciwgYXN5bmNQYXlsb2FkUmVjb3JkKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IGVycm9ycyA9IChfYSA9IGFzeW5jUGF5bG9hZFJlY29yZCA9PT0gbnVsbCB8fCBhc3luY1BheWxvYWRSZWNvcmQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFzeW5jUGF5bG9hZFJlY29yZC5lcnJvcnMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGV4ZUNvbnRleHQuZXJyb3JzO1xuICAgIGNvbnN0IHN0cmVhbSA9IGdldFN0cmVhbVZhbHVlcyhleGVDb250ZXh0LCBmaWVsZE5vZGVzLCBwYXRoKTtcbiAgICBsZXQgY29udGFpbnNQcm9taXNlID0gZmFsc2U7XG4gICAgY29uc3QgY29tcGxldGVkUmVzdWx0cyA9IFtdO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgaWYgKHN0cmVhbSAmJiB0eXBlb2Ygc3RyZWFtLmluaXRpYWxDb3VudCA9PT0gJ251bWJlcicgJiYgaW5kZXggPj0gc3RyZWFtLmluaXRpYWxDb3VudCkge1xuICAgICAgICAgICAgZXhlY3V0ZVN0cmVhbUl0ZXJhdG9yKGluZGV4LCBpdGVyYXRvciwgZXhlQ29udGV4dCwgZmllbGROb2RlcywgaW5mbywgaXRlbVR5cGUsIHBhdGgsIHN0cmVhbS5sYWJlbCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGl0ZW1QYXRoID0gYWRkUGF0aChwYXRoLCBpbmRleCwgdW5kZWZpbmVkKTtcbiAgICAgICAgbGV0IGl0ZXJhdGlvbjtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGl0ZXJhdGlvbiA9IGF3YWl0IGl0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgICAgIGlmIChpdGVyYXRpb24uZG9uZSkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChyYXdFcnJvcikge1xuICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBsb2NhdGVkRXJyb3IocmF3RXJyb3IsIGZpZWxkTm9kZXMsIHBhdGhUb0FycmF5KGl0ZW1QYXRoKSk7XG4gICAgICAgICAgICBjb21wbGV0ZWRSZXN1bHRzLnB1c2goaGFuZGxlRmllbGRFcnJvcihlcnJvciwgaXRlbVR5cGUsIGVycm9ycykpO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbXBsZXRlTGlzdEl0ZW1WYWx1ZShpdGVyYXRpb24udmFsdWUsIGNvbXBsZXRlZFJlc3VsdHMsIGVycm9ycywgZXhlQ29udGV4dCwgaXRlbVR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIGl0ZW1QYXRoLCBhc3luY1BheWxvYWRSZWNvcmQpKSB7XG4gICAgICAgICAgICBjb250YWluc1Byb21pc2UgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGluZGV4ICs9IDE7XG4gICAgfVxuICAgIHJldHVybiBjb250YWluc1Byb21pc2UgPyBQcm9taXNlLmFsbChjb21wbGV0ZWRSZXN1bHRzKSA6IGNvbXBsZXRlZFJlc3VsdHM7XG59XG4vKipcbiAqIENvbXBsZXRlIGEgbGlzdCB2YWx1ZSBieSBjb21wbGV0aW5nIGVhY2ggaXRlbSBpbiB0aGUgbGlzdCB3aXRoIHRoZVxuICogaW5uZXIgdHlwZVxuICovXG5mdW5jdGlvbiBjb21wbGV0ZUxpc3RWYWx1ZShleGVDb250ZXh0LCByZXR1cm5UeXBlLCBmaWVsZE5vZGVzLCBpbmZvLCBwYXRoLCByZXN1bHQsIGFzeW5jUGF5bG9hZFJlY29yZCkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBpdGVtVHlwZSA9IHJldHVyblR5cGUub2ZUeXBlO1xuICAgIGNvbnN0IGVycm9ycyA9IChfYSA9IGFzeW5jUGF5bG9hZFJlY29yZCA9PT0gbnVsbCB8fCBhc3luY1BheWxvYWRSZWNvcmQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGFzeW5jUGF5bG9hZFJlY29yZC5lcnJvcnMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGV4ZUNvbnRleHQuZXJyb3JzO1xuICAgIGlmIChpc0FzeW5jSXRlcmFibGUocmVzdWx0KSkge1xuICAgICAgICBjb25zdCBpdGVyYXRvciA9IHJlc3VsdFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKTtcbiAgICAgICAgcmV0dXJuIGNvbXBsZXRlQXN5bmNJdGVyYXRvclZhbHVlKGV4ZUNvbnRleHQsIGl0ZW1UeXBlLCBmaWVsZE5vZGVzLCBpbmZvLCBwYXRoLCBpdGVyYXRvciwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICB9XG4gICAgaWYgKCFpc0l0ZXJhYmxlT2JqZWN0KHJlc3VsdCkpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBFeHBlY3RlZCBJdGVyYWJsZSwgYnV0IGRpZCBub3QgZmluZCBvbmUgZm9yIGZpZWxkIFwiJHtpbmZvLnBhcmVudFR5cGUubmFtZX0uJHtpbmZvLmZpZWxkTmFtZX1cIi5gKTtcbiAgICB9XG4gICAgY29uc3Qgc3RyZWFtID0gZ2V0U3RyZWFtVmFsdWVzKGV4ZUNvbnRleHQsIGZpZWxkTm9kZXMsIHBhdGgpO1xuICAgIC8vIFRoaXMgaXMgc3BlY2lmaWVkIGFzIGEgc2ltcGxlIG1hcCwgaG93ZXZlciB3ZSdyZSBvcHRpbWl6aW5nIHRoZSBwYXRoXG4gICAgLy8gd2hlcmUgdGhlIGxpc3QgY29udGFpbnMgbm8gUHJvbWlzZXMgYnkgYXZvaWRpbmcgY3JlYXRpbmcgYW5vdGhlciBQcm9taXNlLlxuICAgIGxldCBjb250YWluc1Byb21pc2UgPSBmYWxzZTtcbiAgICBsZXQgcHJldmlvdXNBc3luY1BheWxvYWRSZWNvcmQgPSBhc3luY1BheWxvYWRSZWNvcmQ7XG4gICAgY29uc3QgY29tcGxldGVkUmVzdWx0cyA9IFtdO1xuICAgIGxldCBpbmRleCA9IDA7XG4gICAgZm9yIChjb25zdCBpdGVtIG9mIHJlc3VsdCkge1xuICAgICAgICAvLyBObyBuZWVkIHRvIG1vZGlmeSB0aGUgaW5mbyBvYmplY3QgY29udGFpbmluZyB0aGUgcGF0aCxcbiAgICAgICAgLy8gc2luY2UgZnJvbSBoZXJlIG9uIGl0IGlzIG5vdCBldmVyIGFjY2Vzc2VkIGJ5IHJlc29sdmVyIGZ1bmN0aW9ucy5cbiAgICAgICAgY29uc3QgaXRlbVBhdGggPSBhZGRQYXRoKHBhdGgsIGluZGV4LCB1bmRlZmluZWQpO1xuICAgICAgICBpZiAoc3RyZWFtICYmIHR5cGVvZiBzdHJlYW0uaW5pdGlhbENvdW50ID09PSAnbnVtYmVyJyAmJiBpbmRleCA+PSBzdHJlYW0uaW5pdGlhbENvdW50KSB7XG4gICAgICAgICAgICBwcmV2aW91c0FzeW5jUGF5bG9hZFJlY29yZCA9IGV4ZWN1dGVTdHJlYW1GaWVsZChwYXRoLCBpdGVtUGF0aCwgaXRlbSwgZXhlQ29udGV4dCwgZmllbGROb2RlcywgaW5mbywgaXRlbVR5cGUsIHN0cmVhbS5sYWJlbCwgcHJldmlvdXNBc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICAgICAgaW5kZXgrKztcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb21wbGV0ZUxpc3RJdGVtVmFsdWUoaXRlbSwgY29tcGxldGVkUmVzdWx0cywgZXJyb3JzLCBleGVDb250ZXh0LCBpdGVtVHlwZSwgZmllbGROb2RlcywgaW5mbywgaXRlbVBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCkpIHtcbiAgICAgICAgICAgIGNvbnRhaW5zUHJvbWlzZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaW5kZXgrKztcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRhaW5zUHJvbWlzZSA/IFByb21pc2UuYWxsKGNvbXBsZXRlZFJlc3VsdHMpIDogY29tcGxldGVkUmVzdWx0cztcbn1cbi8qKlxuICogQ29tcGxldGUgYSBsaXN0IGl0ZW0gdmFsdWUgYnkgYWRkaW5nIGl0IHRvIHRoZSBjb21wbGV0ZWQgcmVzdWx0cy5cbiAqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlIHZhbHVlIGlzIGEgUHJvbWlzZS5cbiAqL1xuZnVuY3Rpb24gY29tcGxldGVMaXN0SXRlbVZhbHVlKGl0ZW0sIGNvbXBsZXRlZFJlc3VsdHMsIGVycm9ycywgZXhlQ29udGV4dCwgaXRlbVR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIGl0ZW1QYXRoLCBhc3luY1BheWxvYWRSZWNvcmQpIHtcbiAgICB0cnkge1xuICAgICAgICBsZXQgY29tcGxldGVkSXRlbTtcbiAgICAgICAgaWYgKGlzUHJvbWlzZShpdGVtKSkge1xuICAgICAgICAgICAgY29tcGxldGVkSXRlbSA9IGl0ZW0udGhlbihyZXNvbHZlZCA9PiBjb21wbGV0ZVZhbHVlKGV4ZUNvbnRleHQsIGl0ZW1UeXBlLCBmaWVsZE5vZGVzLCBpbmZvLCBpdGVtUGF0aCwgcmVzb2x2ZWQsIGFzeW5jUGF5bG9hZFJlY29yZCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29tcGxldGVkSXRlbSA9IGNvbXBsZXRlVmFsdWUoZXhlQ29udGV4dCwgaXRlbVR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIGl0ZW1QYXRoLCBpdGVtLCBhc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1Byb21pc2UoY29tcGxldGVkSXRlbSkpIHtcbiAgICAgICAgICAgIC8vIE5vdGU6IHdlIGRvbid0IHJlbHkgb24gYSBgY2F0Y2hgIG1ldGhvZCwgYnV0IHdlIGRvIGV4cGVjdCBcInRoZW5hYmxlXCJcbiAgICAgICAgICAgIC8vIHRvIHRha2UgYSBzZWNvbmQgY2FsbGJhY2sgZm9yIHRoZSBlcnJvciBjYXNlLlxuICAgICAgICAgICAgY29tcGxldGVkUmVzdWx0cy5wdXNoKGNvbXBsZXRlZEl0ZW0udGhlbih1bmRlZmluZWQsIHJhd0Vycm9yID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IGxvY2F0ZWRFcnJvcihyYXdFcnJvciwgZmllbGROb2RlcywgcGF0aFRvQXJyYXkoaXRlbVBhdGgpKTtcbiAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVkRXJyb3IgPSBoYW5kbGVGaWVsZEVycm9yKGVycm9yLCBpdGVtVHlwZSwgZXJyb3JzKTtcbiAgICAgICAgICAgICAgICBmaWx0ZXJTdWJzZXF1ZW50UGF5bG9hZHMoZXhlQ29udGV4dCwgaXRlbVBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZWRFcnJvcjtcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbXBsZXRlZFJlc3VsdHMucHVzaChjb21wbGV0ZWRJdGVtKTtcbiAgICB9XG4gICAgY2F0Y2ggKHJhd0Vycm9yKSB7XG4gICAgICAgIGNvbnN0IGVycm9yID0gbG9jYXRlZEVycm9yKHJhd0Vycm9yLCBmaWVsZE5vZGVzLCBwYXRoVG9BcnJheShpdGVtUGF0aCkpO1xuICAgICAgICBjb25zdCBoYW5kbGVkRXJyb3IgPSBoYW5kbGVGaWVsZEVycm9yKGVycm9yLCBpdGVtVHlwZSwgZXJyb3JzKTtcbiAgICAgICAgZmlsdGVyU3Vic2VxdWVudFBheWxvYWRzKGV4ZUNvbnRleHQsIGl0ZW1QYXRoLCBhc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICBjb21wbGV0ZWRSZXN1bHRzLnB1c2goaGFuZGxlZEVycm9yKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuLyoqXG4gKiBDb21wbGV0ZSBhIFNjYWxhciBvciBFbnVtIGJ5IHNlcmlhbGl6aW5nIHRvIGEgdmFsaWQgdmFsdWUsIHJldHVybmluZ1xuICogbnVsbCBpZiBzZXJpYWxpemF0aW9uIGlzIG5vdCBwb3NzaWJsZS5cbiAqL1xuZnVuY3Rpb24gY29tcGxldGVMZWFmVmFsdWUocmV0dXJuVHlwZSwgcmVzdWx0KSB7XG4gICAgY29uc3Qgc2VyaWFsaXplZFJlc3VsdCA9IHJldHVyblR5cGUuc2VyaWFsaXplKHJlc3VsdCk7XG4gICAgaWYgKHNlcmlhbGl6ZWRSZXN1bHQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEV4cGVjdGVkIFxcYCR7aW5zcGVjdChyZXR1cm5UeXBlKX0uc2VyaWFsaXplKCR7aW5zcGVjdChyZXN1bHQpfSlcXGAgdG8gYCArXG4gICAgICAgICAgICBgcmV0dXJuIG5vbi1udWxsYWJsZSB2YWx1ZSwgcmV0dXJuZWQ6ICR7aW5zcGVjdChzZXJpYWxpemVkUmVzdWx0KX1gKTtcbiAgICB9XG4gICAgcmV0dXJuIHNlcmlhbGl6ZWRSZXN1bHQ7XG59XG4vKipcbiAqIENvbXBsZXRlIGEgdmFsdWUgb2YgYW4gYWJzdHJhY3QgdHlwZSBieSBkZXRlcm1pbmluZyB0aGUgcnVudGltZSBvYmplY3QgdHlwZVxuICogb2YgdGhhdCB2YWx1ZSwgdGhlbiBjb21wbGV0ZSB0aGUgdmFsdWUgZm9yIHRoYXQgdHlwZS5cbiAqL1xuZnVuY3Rpb24gY29tcGxldGVBYnN0cmFjdFZhbHVlKGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKSB7XG4gICAgdmFyIF9hO1xuICAgIGNvbnN0IHJlc29sdmVUeXBlRm4gPSAoX2EgPSByZXR1cm5UeXBlLnJlc29sdmVUeXBlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBleGVDb250ZXh0LnR5cGVSZXNvbHZlcjtcbiAgICBjb25zdCBjb250ZXh0VmFsdWUgPSBleGVDb250ZXh0LmNvbnRleHRWYWx1ZTtcbiAgICBjb25zdCBydW50aW1lVHlwZSA9IHJlc29sdmVUeXBlRm4ocmVzdWx0LCBjb250ZXh0VmFsdWUsIGluZm8sIHJldHVyblR5cGUpO1xuICAgIGlmIChpc1Byb21pc2UocnVudGltZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBydW50aW1lVHlwZS50aGVuKHJlc29sdmVkUnVudGltZVR5cGUgPT4gY29tcGxldGVPYmplY3RWYWx1ZShleGVDb250ZXh0LCBlbnN1cmVWYWxpZFJ1bnRpbWVUeXBlKHJlc29sdmVkUnVudGltZVR5cGUsIGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIHJlc3VsdCksIGZpZWxkTm9kZXMsIGluZm8sIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKSk7XG4gICAgfVxuICAgIHJldHVybiBjb21wbGV0ZU9iamVjdFZhbHVlKGV4ZUNvbnRleHQsIGVuc3VyZVZhbGlkUnVudGltZVR5cGUocnVudGltZVR5cGUsIGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIHJlc3VsdCksIGZpZWxkTm9kZXMsIGluZm8sIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbn1cbmZ1bmN0aW9uIGVuc3VyZVZhbGlkUnVudGltZVR5cGUocnVudGltZVR5cGVOYW1lLCBleGVDb250ZXh0LCByZXR1cm5UeXBlLCBmaWVsZE5vZGVzLCBpbmZvLCByZXN1bHQpIHtcbiAgICBpZiAocnVudGltZVR5cGVOYW1lID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBYnN0cmFjdCB0eXBlIFwiJHtyZXR1cm5UeXBlLm5hbWV9XCIgbXVzdCByZXNvbHZlIHRvIGFuIE9iamVjdCB0eXBlIGF0IHJ1bnRpbWUgZm9yIGZpZWxkIFwiJHtpbmZvLnBhcmVudFR5cGUubmFtZX0uJHtpbmZvLmZpZWxkTmFtZX1cIi4gRWl0aGVyIHRoZSBcIiR7cmV0dXJuVHlwZS5uYW1lfVwiIHR5cGUgc2hvdWxkIHByb3ZpZGUgYSBcInJlc29sdmVUeXBlXCIgZnVuY3Rpb24gb3IgZWFjaCBwb3NzaWJsZSB0eXBlIHNob3VsZCBwcm92aWRlIGFuIFwiaXNUeXBlT2ZcIiBmdW5jdGlvbi5gLCB7IG5vZGVzOiBmaWVsZE5vZGVzIH0pO1xuICAgIH1cbiAgICAvLyByZWxlYXNlcyBiZWZvcmUgMTYuMC4wIHN1cHBvcnRlZCByZXR1cm5pbmcgYEdyYXBoUUxPYmplY3RUeXBlYCBmcm9tIGByZXNvbHZlVHlwZWBcbiAgICAvLyBUT0RPOiByZW1vdmUgaW4gMTcuMC4wIHJlbGVhc2VcbiAgICBpZiAoaXNPYmplY3RUeXBlKHJ1bnRpbWVUeXBlTmFtZSkpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKCdTdXBwb3J0IGZvciByZXR1cm5pbmcgR3JhcGhRTE9iamVjdFR5cGUgZnJvbSByZXNvbHZlVHlwZSB3YXMgcmVtb3ZlZCBpbiBncmFwaHFsLWpzQDE2LjAuMCBwbGVhc2UgcmV0dXJuIHR5cGUgbmFtZSBpbnN0ZWFkLicpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHJ1bnRpbWVUeXBlTmFtZSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBYnN0cmFjdCB0eXBlIFwiJHtyZXR1cm5UeXBlLm5hbWV9XCIgbXVzdCByZXNvbHZlIHRvIGFuIE9iamVjdCB0eXBlIGF0IHJ1bnRpbWUgZm9yIGZpZWxkIFwiJHtpbmZvLnBhcmVudFR5cGUubmFtZX0uJHtpbmZvLmZpZWxkTmFtZX1cIiB3aXRoIGAgK1xuICAgICAgICAgICAgYHZhbHVlICR7aW5zcGVjdChyZXN1bHQpfSwgcmVjZWl2ZWQgXCIke2luc3BlY3QocnVudGltZVR5cGVOYW1lKX1cIi5gKTtcbiAgICB9XG4gICAgY29uc3QgcnVudGltZVR5cGUgPSBleGVDb250ZXh0LnNjaGVtYS5nZXRUeXBlKHJ1bnRpbWVUeXBlTmFtZSk7XG4gICAgaWYgKHJ1bnRpbWVUeXBlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBYnN0cmFjdCB0eXBlIFwiJHtyZXR1cm5UeXBlLm5hbWV9XCIgd2FzIHJlc29sdmVkIHRvIGEgdHlwZSBcIiR7cnVudGltZVR5cGVOYW1lfVwiIHRoYXQgZG9lcyBub3QgZXhpc3QgaW5zaWRlIHRoZSBzY2hlbWEuYCwgeyBub2RlczogZmllbGROb2RlcyB9KTtcbiAgICB9XG4gICAgaWYgKCFpc09iamVjdFR5cGUocnVudGltZVR5cGUpKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQWJzdHJhY3QgdHlwZSBcIiR7cmV0dXJuVHlwZS5uYW1lfVwiIHdhcyByZXNvbHZlZCB0byBhIG5vbi1vYmplY3QgdHlwZSBcIiR7cnVudGltZVR5cGVOYW1lfVwiLmAsIHsgbm9kZXM6IGZpZWxkTm9kZXMgfSk7XG4gICAgfVxuICAgIGlmICghZXhlQ29udGV4dC5zY2hlbWEuaXNTdWJUeXBlKHJldHVyblR5cGUsIHJ1bnRpbWVUeXBlKSkge1xuICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYFJ1bnRpbWUgT2JqZWN0IHR5cGUgXCIke3J1bnRpbWVUeXBlLm5hbWV9XCIgaXMgbm90IGEgcG9zc2libGUgdHlwZSBmb3IgXCIke3JldHVyblR5cGUubmFtZX1cIi5gLCB7IG5vZGVzOiBmaWVsZE5vZGVzIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcnVudGltZVR5cGU7XG59XG4vKipcbiAqIENvbXBsZXRlIGFuIE9iamVjdCB2YWx1ZSBieSBleGVjdXRpbmcgYWxsIHN1Yi1zZWxlY3Rpb25zLlxuICovXG5mdW5jdGlvbiBjb21wbGV0ZU9iamVjdFZhbHVlKGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKSB7XG4gICAgLy8gSWYgdGhlcmUgaXMgYW4gaXNUeXBlT2YgcHJlZGljYXRlIGZ1bmN0aW9uLCBjYWxsIGl0IHdpdGggdGhlXG4gICAgLy8gY3VycmVudCByZXN1bHQuIElmIGlzVHlwZU9mIHJldHVybnMgZmFsc2UsIHRoZW4gcmFpc2UgYW4gZXJyb3IgcmF0aGVyXG4gICAgLy8gdGhhbiBjb250aW51aW5nIGV4ZWN1dGlvbi5cbiAgICBpZiAocmV0dXJuVHlwZS5pc1R5cGVPZikge1xuICAgICAgICBjb25zdCBpc1R5cGVPZiA9IHJldHVyblR5cGUuaXNUeXBlT2YocmVzdWx0LCBleGVDb250ZXh0LmNvbnRleHRWYWx1ZSwgaW5mbyk7XG4gICAgICAgIGlmIChpc1Byb21pc2UoaXNUeXBlT2YpKSB7XG4gICAgICAgICAgICByZXR1cm4gaXNUeXBlT2YudGhlbihyZXNvbHZlZElzVHlwZU9mID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc29sdmVkSXNUeXBlT2YpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgaW52YWxpZFJldHVyblR5cGVFcnJvcihyZXR1cm5UeXBlLCByZXN1bHQsIGZpZWxkTm9kZXMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gY29sbGVjdEFuZEV4ZWN1dGVTdWJmaWVsZHMoZXhlQ29udGV4dCwgcmV0dXJuVHlwZSwgZmllbGROb2RlcywgcGF0aCwgcmVzdWx0LCBhc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc1R5cGVPZikge1xuICAgICAgICAgICAgdGhyb3cgaW52YWxpZFJldHVyblR5cGVFcnJvcihyZXR1cm5UeXBlLCByZXN1bHQsIGZpZWxkTm9kZXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBjb2xsZWN0QW5kRXhlY3V0ZVN1YmZpZWxkcyhleGVDb250ZXh0LCByZXR1cm5UeXBlLCBmaWVsZE5vZGVzLCBwYXRoLCByZXN1bHQsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG59XG5mdW5jdGlvbiBpbnZhbGlkUmV0dXJuVHlwZUVycm9yKHJldHVyblR5cGUsIHJlc3VsdCwgZmllbGROb2Rlcykge1xuICAgIHJldHVybiBjcmVhdGVHcmFwaFFMRXJyb3IoYEV4cGVjdGVkIHZhbHVlIG9mIHR5cGUgXCIke3JldHVyblR5cGUubmFtZX1cIiBidXQgZ290OiAke2luc3BlY3QocmVzdWx0KX0uYCwge1xuICAgICAgICBub2RlczogZmllbGROb2RlcyxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGNvbGxlY3RBbmRFeGVjdXRlU3ViZmllbGRzKGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIGZpZWxkTm9kZXMsIHBhdGgsIHJlc3VsdCwgYXN5bmNQYXlsb2FkUmVjb3JkKSB7XG4gICAgLy8gQ29sbGVjdCBzdWItZmllbGRzIHRvIGV4ZWN1dGUgdG8gY29tcGxldGUgdGhpcyB2YWx1ZS5cbiAgICBjb25zdCB7IGZpZWxkczogc3ViRmllbGROb2RlcywgcGF0Y2hlczogc3ViUGF0Y2hlcyB9ID0gY29sbGVjdFN1YmZpZWxkcyhleGVDb250ZXh0LCByZXR1cm5UeXBlLCBmaWVsZE5vZGVzKTtcbiAgICBjb25zdCBzdWJGaWVsZHMgPSBleGVjdXRlRmllbGRzKGV4ZUNvbnRleHQsIHJldHVyblR5cGUsIHJlc3VsdCwgcGF0aCwgc3ViRmllbGROb2RlcywgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICBmb3IgKGNvbnN0IHN1YlBhdGNoIG9mIHN1YlBhdGNoZXMpIHtcbiAgICAgICAgY29uc3QgeyBsYWJlbCwgZmllbGRzOiBzdWJQYXRjaEZpZWxkTm9kZXMgfSA9IHN1YlBhdGNoO1xuICAgICAgICBleGVjdXRlRGVmZXJyZWRGcmFnbWVudChleGVDb250ZXh0LCByZXR1cm5UeXBlLCByZXN1bHQsIHN1YlBhdGNoRmllbGROb2RlcywgbGFiZWwsIHBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgfVxuICAgIHJldHVybiBzdWJGaWVsZHM7XG59XG4vKipcbiAqIElmIGEgcmVzb2x2ZVR5cGUgZnVuY3Rpb24gaXMgbm90IGdpdmVuLCB0aGVuIGEgZGVmYXVsdCByZXNvbHZlIGJlaGF2aW9yIGlzXG4gKiB1c2VkIHdoaWNoIGF0dGVtcHRzIHR3byBzdHJhdGVnaWVzOlxuICpcbiAqIEZpcnN0LCBTZWUgaWYgdGhlIHByb3ZpZGVkIHZhbHVlIGhhcyBhIGBfX3R5cGVuYW1lYCBmaWVsZCBkZWZpbmVkLCBpZiBzbywgdXNlXG4gKiB0aGF0IHZhbHVlIGFzIG5hbWUgb2YgdGhlIHJlc29sdmVkIHR5cGUuXG4gKlxuICogT3RoZXJ3aXNlLCB0ZXN0IGVhY2ggcG9zc2libGUgdHlwZSBmb3IgdGhlIGFic3RyYWN0IHR5cGUgYnkgY2FsbGluZ1xuICogaXNUeXBlT2YgZm9yIHRoZSBvYmplY3QgYmVpbmcgY29lcmNlZCwgcmV0dXJuaW5nIHRoZSBmaXJzdCB0eXBlIHRoYXQgbWF0Y2hlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRUeXBlUmVzb2x2ZXIgPSBmdW5jdGlvbiAodmFsdWUsIGNvbnRleHRWYWx1ZSwgaW5mbywgYWJzdHJhY3RUeXBlKSB7XG4gICAgLy8gRmlyc3QsIGxvb2sgZm9yIGBfX3R5cGVuYW1lYC5cbiAgICBpZiAoaXNPYmplY3RMaWtlKHZhbHVlKSAmJiB0eXBlb2YgdmFsdWVbJ19fdHlwZW5hbWUnXSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlWydfX3R5cGVuYW1lJ107XG4gICAgfVxuICAgIC8vIE90aGVyd2lzZSwgdGVzdCBlYWNoIHBvc3NpYmxlIHR5cGUuXG4gICAgY29uc3QgcG9zc2libGVUeXBlcyA9IGluZm8uc2NoZW1hLmdldFBvc3NpYmxlVHlwZXMoYWJzdHJhY3RUeXBlKTtcbiAgICBjb25zdCBwcm9taXNlZElzVHlwZU9mUmVzdWx0cyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9zc2libGVUeXBlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCB0eXBlID0gcG9zc2libGVUeXBlc1tpXTtcbiAgICAgICAgaWYgKHR5cGUuaXNUeXBlT2YpIHtcbiAgICAgICAgICAgIGNvbnN0IGlzVHlwZU9mUmVzdWx0ID0gdHlwZS5pc1R5cGVPZih2YWx1ZSwgY29udGV4dFZhbHVlLCBpbmZvKTtcbiAgICAgICAgICAgIGlmIChpc1Byb21pc2UoaXNUeXBlT2ZSZXN1bHQpKSB7XG4gICAgICAgICAgICAgICAgcHJvbWlzZWRJc1R5cGVPZlJlc3VsdHNbaV0gPSBpc1R5cGVPZlJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzVHlwZU9mUmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHR5cGUubmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAocHJvbWlzZWRJc1R5cGVPZlJlc3VsdHMubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLmFsbChwcm9taXNlZElzVHlwZU9mUmVzdWx0cykudGhlbihpc1R5cGVPZlJlc3VsdHMgPT4ge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBpc1R5cGVPZlJlc3VsdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNUeXBlT2ZSZXN1bHRzW2ldKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwb3NzaWJsZVR5cGVzW2ldLm5hbWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG59O1xuLyoqXG4gKiBJZiBhIHJlc29sdmUgZnVuY3Rpb24gaXMgbm90IGdpdmVuLCB0aGVuIGEgZGVmYXVsdCByZXNvbHZlIGJlaGF2aW9yIGlzIHVzZWRcbiAqIHdoaWNoIHRha2VzIHRoZSBwcm9wZXJ0eSBvZiB0aGUgc291cmNlIG9iamVjdCBvZiB0aGUgc2FtZSBuYW1lIGFzIHRoZSBmaWVsZFxuICogYW5kIHJldHVybnMgaXQgYXMgdGhlIHJlc3VsdCwgb3IgaWYgaXQncyBhIGZ1bmN0aW9uLCByZXR1cm5zIHRoZSByZXN1bHRcbiAqIG9mIGNhbGxpbmcgdGhhdCBmdW5jdGlvbiB3aGlsZSBwYXNzaW5nIGFsb25nIGFyZ3MgYW5kIGNvbnRleHQgdmFsdWUuXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0RmllbGRSZXNvbHZlciA9IGZ1bmN0aW9uIChzb3VyY2UsIGFyZ3MsIGNvbnRleHRWYWx1ZSwgaW5mbykge1xuICAgIC8vIGVuc3VyZSBzb3VyY2UgaXMgYSB2YWx1ZSBmb3Igd2hpY2ggcHJvcGVydHkgYWNjZXNzIGlzIGFjY2VwdGFibGUuXG4gICAgaWYgKGlzT2JqZWN0TGlrZShzb3VyY2UpIHx8IHR5cGVvZiBzb3VyY2UgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY29uc3QgcHJvcGVydHkgPSBzb3VyY2VbaW5mby5maWVsZE5hbWVdO1xuICAgICAgICBpZiAodHlwZW9mIHByb3BlcnR5ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICByZXR1cm4gc291cmNlW2luZm8uZmllbGROYW1lXShhcmdzLCBjb250ZXh0VmFsdWUsIGluZm8pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwcm9wZXJ0eTtcbiAgICB9XG59O1xuLyoqXG4gKiBJbXBsZW1lbnRzIHRoZSBcIlN1YnNjcmliZVwiIGFsZ29yaXRobSBkZXNjcmliZWQgaW4gdGhlIEdyYXBoUUwgc3BlY2lmaWNhdGlvbixcbiAqIGluY2x1ZGluZyBgQGRlZmVyYCBhbmQgYEBzdHJlYW1gIGFzIHByb3Bvc2VkIGluXG4gKiBodHRwczovL2dpdGh1Yi5jb20vZ3JhcGhxbC9ncmFwaHFsLXNwZWMvcHVsbC83NDJcbiAqXG4gKiBSZXR1cm5zIGEgUHJvbWlzZSB3aGljaCByZXNvbHZlcyB0byBlaXRoZXIgYW4gQXN5bmNJdGVyYXRvciAoaWYgc3VjY2Vzc2Z1bClcbiAqIG9yIGFuIEV4ZWN1dGlvblJlc3VsdCAoZXJyb3IpLiBUaGUgcHJvbWlzZSB3aWxsIGJlIHJlamVjdGVkIGlmIHRoZSBzY2hlbWEgb3JcbiAqIG90aGVyIGFyZ3VtZW50cyB0byB0aGlzIGZ1bmN0aW9uIGFyZSBpbnZhbGlkLCBvciBpZiB0aGUgcmVzb2x2ZWQgZXZlbnQgc3RyZWFtXG4gKiBpcyBub3QgYW4gYXN5bmMgaXRlcmFibGUuXG4gKlxuICogSWYgdGhlIGNsaWVudC1wcm92aWRlZCBhcmd1bWVudHMgdG8gdGhpcyBmdW5jdGlvbiBkbyBub3QgcmVzdWx0IGluIGFcbiAqIGNvbXBsaWFudCBzdWJzY3JpcHRpb24sIGEgR3JhcGhRTCBSZXNwb25zZSAoRXhlY3V0aW9uUmVzdWx0KSB3aXRoIGRlc2NyaXB0aXZlXG4gKiBlcnJvcnMgYW5kIG5vIGRhdGEgd2lsbCBiZSByZXR1cm5lZC5cbiAqXG4gKiBJZiB0aGUgc291cmNlIHN0cmVhbSBjb3VsZCBub3QgYmUgY3JlYXRlZCBkdWUgdG8gZmF1bHR5IHN1YnNjcmlwdGlvbiByZXNvbHZlclxuICogbG9naWMgb3IgdW5kZXJseWluZyBzeXN0ZW1zLCB0aGUgcHJvbWlzZSB3aWxsIHJlc29sdmUgdG8gYSBzaW5nbGVcbiAqIEV4ZWN1dGlvblJlc3VsdCBjb250YWluaW5nIGBlcnJvcnNgIGFuZCBubyBgZGF0YWAuXG4gKlxuICogSWYgdGhlIG9wZXJhdGlvbiBzdWNjZWVkZWQsIHRoZSBwcm9taXNlIHJlc29sdmVzIHRvIGFuIEFzeW5jSXRlcmF0b3IsIHdoaWNoXG4gKiB5aWVsZHMgYSBzdHJlYW0gb2YgcmVzdWx0IHJlcHJlc2VudGluZyB0aGUgcmVzcG9uc2Ugc3RyZWFtLlxuICpcbiAqIEVhY2ggcmVzdWx0IG1heSBiZSBhbiBFeGVjdXRpb25SZXN1bHQgd2l0aCBubyBgaGFzTmV4dGAgKGlmIGV4ZWN1dGluZyB0aGVcbiAqIGV2ZW50IGRpZCBub3QgdXNlIGBAZGVmZXJgIG9yIGBAc3RyZWFtYCksIG9yIGFuXG4gKiBgSW5pdGlhbEluY3JlbWVudGFsRXhlY3V0aW9uUmVzdWx0YCBvciBgU3Vic2VxdWVudEluY3JlbWVudGFsRXhlY3V0aW9uUmVzdWx0YFxuICogKGlmIGV4ZWN1dGluZyB0aGUgZXZlbnQgdXNlZCBgQGRlZmVyYCBvciBgQHN0cmVhbWApLiBJbiB0aGUgY2FzZSBvZlxuICogaW5jcmVtZW50YWwgZXhlY3V0aW9uIHJlc3VsdHMsIGVhY2ggZXZlbnQgcHJvZHVjZXMgYSBzaW5nbGVcbiAqIGBJbml0aWFsSW5jcmVtZW50YWxFeGVjdXRpb25SZXN1bHRgIGZvbGxvd2VkIGJ5IG9uZSBvciBtb3JlXG4gKiBgU3Vic2VxdWVudEluY3JlbWVudGFsRXhlY3V0aW9uUmVzdWx0YHM7IGFsbCBidXQgdGhlIGxhc3QgaGF2ZSBgaGFzTmV4dDogdHJ1ZWAsXG4gKiBhbmQgdGhlIGxhc3QgaGFzIGBoYXNOZXh0OiBmYWxzZWAuIFRoZXJlIGlzIG5vIGludGVybGVhdmluZyBiZXR3ZWVuIHJlc3VsdHNcbiAqIGdlbmVyYXRlZCBmcm9tIHRoZSBzYW1lIG9yaWdpbmFsIGV2ZW50LlxuICpcbiAqIEFjY2VwdHMgYW4gb2JqZWN0IHdpdGggbmFtZWQgYXJndW1lbnRzLlxuICovXG5leHBvcnQgZnVuY3Rpb24gc3Vic2NyaWJlKGFyZ3MpIHtcbiAgICAvLyBJZiBhIHZhbGlkIGV4ZWN1dGlvbiBjb250ZXh0IGNhbm5vdCBiZSBjcmVhdGVkIGR1ZSB0byBpbmNvcnJlY3QgYXJndW1lbnRzLFxuICAgIC8vIGEgXCJSZXNwb25zZVwiIHdpdGggb25seSBlcnJvcnMgaXMgcmV0dXJuZWQuXG4gICAgY29uc3QgZXhlQ29udGV4dCA9IGJ1aWxkRXhlY3V0aW9uQ29udGV4dChhcmdzKTtcbiAgICAvLyBSZXR1cm4gZWFybHkgZXJyb3JzIGlmIGV4ZWN1dGlvbiBjb250ZXh0IGZhaWxlZC5cbiAgICBpZiAoISgnc2NoZW1hJyBpbiBleGVDb250ZXh0KSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgZXJyb3JzOiBleGVDb250ZXh0Lm1hcChlID0+IHtcbiAgICAgICAgICAgICAgICB2YXIgX2E7XG4gICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsICdleHRlbnNpb25zJywge1xuICAgICAgICAgICAgICAgICAgICB2YWx1ZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgLi4uZS5leHRlbnNpb25zLFxuICAgICAgICAgICAgICAgICAgICAgICAgaHR0cDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLihfYSA9IGUuZXh0ZW5zaW9ucykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hWydodHRwJ10sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzOiA0MDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBlO1xuICAgICAgICAgICAgfSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdE9yU3RyZWFtID0gY3JlYXRlU291cmNlRXZlbnRTdHJlYW1JbXBsKGV4ZUNvbnRleHQpO1xuICAgIGlmIChpc1Byb21pc2UocmVzdWx0T3JTdHJlYW0pKSB7XG4gICAgICAgIHJldHVybiByZXN1bHRPclN0cmVhbS50aGVuKHJlc29sdmVkUmVzdWx0T3JTdHJlYW0gPT4gbWFwU291cmNlVG9SZXNwb25zZShleGVDb250ZXh0LCByZXNvbHZlZFJlc3VsdE9yU3RyZWFtKSk7XG4gICAgfVxuICAgIHJldHVybiBtYXBTb3VyY2VUb1Jlc3BvbnNlKGV4ZUNvbnRleHQsIHJlc3VsdE9yU3RyZWFtKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuSW5jcmVtZW50YWxSZXN1bHRzKGluY3JlbWVudGFsUmVzdWx0cykge1xuICAgIGNvbnN0IHN1YnNlcXVlbnRJdGVyYXRvciA9IGluY3JlbWVudGFsUmVzdWx0cy5zdWJzZXF1ZW50UmVzdWx0cztcbiAgICBsZXQgaW5pdGlhbFJlc3VsdFNlbnQgPSBmYWxzZTtcbiAgICBsZXQgZG9uZSA9IGZhbHNlO1xuICAgIHJldHVybiB7XG4gICAgICAgIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICAgICAgYXN5bmMgbmV4dCgpIHtcbiAgICAgICAgICAgIGlmIChkb25lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgICAgICAgICAgZG9uZSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGluaXRpYWxSZXN1bHRTZW50KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN1YnNlcXVlbnRJdGVyYXRvci5uZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpbml0aWFsUmVzdWx0U2VudCA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHtcbiAgICAgICAgICAgICAgICB2YWx1ZTogaW5jcmVtZW50YWxSZXN1bHRzLmluaXRpYWxSZXN1bHQsXG4gICAgICAgICAgICAgICAgZG9uZSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LFxuICAgICAgICByZXR1cm4oKSB7XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBzdWJzZXF1ZW50SXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICAgIH0sXG4gICAgICAgIHRocm93KGVycm9yKSB7XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBzdWJzZXF1ZW50SXRlcmF0b3IudGhyb3coZXJyb3IpO1xuICAgICAgICB9LFxuICAgIH07XG59XG5hc3luYyBmdW5jdGlvbiogZW5zdXJlQXN5bmNJdGVyYWJsZShzb21lRXhlY3V0aW9uUmVzdWx0KSB7XG4gICAgaWYgKCdpbml0aWFsUmVzdWx0JyBpbiBzb21lRXhlY3V0aW9uUmVzdWx0KSB7XG4gICAgICAgIHlpZWxkKiBmbGF0dGVuSW5jcmVtZW50YWxSZXN1bHRzKHNvbWVFeGVjdXRpb25SZXN1bHQpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgeWllbGQgc29tZUV4ZWN1dGlvblJlc3VsdDtcbiAgICB9XG59XG5mdW5jdGlvbiBtYXBTb3VyY2VUb1Jlc3BvbnNlKGV4ZUNvbnRleHQsIHJlc3VsdE9yU3RyZWFtKSB7XG4gICAgaWYgKCFpc0FzeW5jSXRlcmFibGUocmVzdWx0T3JTdHJlYW0pKSB7XG4gICAgICAgIHJldHVybiByZXN1bHRPclN0cmVhbTtcbiAgICB9XG4gICAgLy8gRm9yIGVhY2ggcGF5bG9hZCB5aWVsZGVkIGZyb20gYSBzdWJzY3JpcHRpb24sIG1hcCBpdCBvdmVyIHRoZSBub3JtYWxcbiAgICAvLyBHcmFwaFFMIGBleGVjdXRlYCBmdW5jdGlvbiwgd2l0aCBgcGF5bG9hZGAgYXMgdGhlIHJvb3RWYWx1ZS5cbiAgICAvLyBUaGlzIGltcGxlbWVudHMgdGhlIFwiTWFwU291cmNlVG9SZXNwb25zZUV2ZW50XCIgYWxnb3JpdGhtIGRlc2NyaWJlZCBpblxuICAgIC8vIHRoZSBHcmFwaFFMIHNwZWNpZmljYXRpb24uIFRoZSBgZXhlY3V0ZWAgZnVuY3Rpb24gcHJvdmlkZXMgdGhlXG4gICAgLy8gXCJFeGVjdXRlU3Vic2NyaXB0aW9uRXZlbnRcIiBhbGdvcml0aG0sIGFzIGl0IGlzIG5lYXJseSBpZGVudGljYWwgdG8gdGhlXG4gICAgLy8gXCJFeGVjdXRlUXVlcnlcIiBhbGdvcml0aG0sIGZvciB3aGljaCBgZXhlY3V0ZWAgaXMgYWxzbyB1c2VkLlxuICAgIHJldHVybiBmbGF0dGVuQXN5bmNJdGVyYWJsZShtYXBBc3luY0l0ZXJhdG9yKHJlc3VsdE9yU3RyZWFtW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpLCBhc3luYyAocGF5bG9hZCkgPT4gZW5zdXJlQXN5bmNJdGVyYWJsZShhd2FpdCBleGVjdXRlSW1wbChidWlsZFBlckV2ZW50RXhlY3V0aW9uQ29udGV4dChleGVDb250ZXh0LCBwYXlsb2FkKSkpLCBhc3luYyBmdW5jdGlvbiogKGVycm9yKSB7XG4gICAgICAgIGNvbnN0IHdyYXBwZWRFcnJvciA9IGNyZWF0ZUdyYXBoUUxFcnJvcihlcnJvci5tZXNzYWdlLCB7XG4gICAgICAgICAgICBvcmlnaW5hbEVycm9yOiBlcnJvcixcbiAgICAgICAgICAgIG5vZGVzOiBbZXhlQ29udGV4dC5vcGVyYXRpb25dLFxuICAgICAgICB9KTtcbiAgICAgICAgeWllbGQge1xuICAgICAgICAgICAgZXJyb3JzOiBbd3JhcHBlZEVycm9yXSxcbiAgICAgICAgfTtcbiAgICB9KSk7XG59XG5mdW5jdGlvbiBjcmVhdGVTb3VyY2VFdmVudFN0cmVhbUltcGwoZXhlQ29udGV4dCkge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGV2ZW50U3RyZWFtID0gZXhlY3V0ZVN1YnNjcmlwdGlvbihleGVDb250ZXh0KTtcbiAgICAgICAgaWYgKGlzUHJvbWlzZShldmVudFN0cmVhbSkpIHtcbiAgICAgICAgICAgIHJldHVybiBldmVudFN0cmVhbS50aGVuKHVuZGVmaW5lZCwgZXJyb3IgPT4gKHsgZXJyb3JzOiBbZXJyb3JdIH0pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZXZlbnRTdHJlYW07XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICByZXR1cm4geyBlcnJvcnM6IFtlcnJvcl0gfTtcbiAgICB9XG59XG5mdW5jdGlvbiBleGVjdXRlU3Vic2NyaXB0aW9uKGV4ZUNvbnRleHQpIHtcbiAgICB2YXIgX2E7XG4gICAgY29uc3QgeyBzY2hlbWEsIGZyYWdtZW50cywgb3BlcmF0aW9uLCB2YXJpYWJsZVZhbHVlcywgcm9vdFZhbHVlIH0gPSBleGVDb250ZXh0O1xuICAgIGNvbnN0IHJvb3RUeXBlID0gc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKTtcbiAgICBpZiAocm9vdFR5cGUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoJ1NjaGVtYSBpcyBub3QgY29uZmlndXJlZCB0byBleGVjdXRlIHN1YnNjcmlwdGlvbiBvcGVyYXRpb24uJywgeyBub2Rlczogb3BlcmF0aW9uIH0pO1xuICAgIH1cbiAgICBjb25zdCB7IGZpZWxkczogcm9vdEZpZWxkcyB9ID0gY29sbGVjdEZpZWxkcyhzY2hlbWEsIGZyYWdtZW50cywgdmFyaWFibGVWYWx1ZXMsIHJvb3RUeXBlLCBvcGVyYXRpb24uc2VsZWN0aW9uU2V0KTtcbiAgICBjb25zdCBbcmVzcG9uc2VOYW1lLCBmaWVsZE5vZGVzXSA9IFsuLi5yb290RmllbGRzLmVudHJpZXMoKV1bMF07XG4gICAgY29uc3QgZmllbGROYW1lID0gZmllbGROb2Rlc1swXS5uYW1lLnZhbHVlO1xuICAgIGNvbnN0IGZpZWxkRGVmID0gZ2V0RmllbGREZWYoc2NoZW1hLCByb290VHlwZSwgZmllbGROb2Rlc1swXSk7XG4gICAgaWYgKCFmaWVsZERlZikge1xuICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYFRoZSBzdWJzY3JpcHRpb24gZmllbGQgXCIke2ZpZWxkTmFtZX1cIiBpcyBub3QgZGVmaW5lZC5gLCB7IG5vZGVzOiBmaWVsZE5vZGVzIH0pO1xuICAgIH1cbiAgICBjb25zdCBwYXRoID0gYWRkUGF0aCh1bmRlZmluZWQsIHJlc3BvbnNlTmFtZSwgcm9vdFR5cGUubmFtZSk7XG4gICAgY29uc3QgaW5mbyA9IGJ1aWxkUmVzb2x2ZUluZm8oZXhlQ29udGV4dCwgZmllbGREZWYsIGZpZWxkTm9kZXMsIHJvb3RUeXBlLCBwYXRoKTtcbiAgICB0cnkge1xuICAgICAgICAvLyBJbXBsZW1lbnRzIHRoZSBcIlJlc29sdmVGaWVsZEV2ZW50U3RyZWFtXCIgYWxnb3JpdGhtIGZyb20gR3JhcGhRTCBzcGVjaWZpY2F0aW9uLlxuICAgICAgICAvLyBJdCBkaWZmZXJzIGZyb20gXCJSZXNvbHZlRmllbGRWYWx1ZVwiIGR1ZSB0byBwcm92aWRpbmcgYSBkaWZmZXJlbnQgYHJlc29sdmVGbmAuXG4gICAgICAgIC8vIEJ1aWxkIGEgSlMgb2JqZWN0IG9mIGFyZ3VtZW50cyBmcm9tIHRoZSBmaWVsZC5hcmd1bWVudHMgQVNULCB1c2luZyB0aGVcbiAgICAgICAgLy8gdmFyaWFibGVzIHNjb3BlIHRvIGZ1bGZpbGwgYW55IHZhcmlhYmxlIHJlZmVyZW5jZXMuXG4gICAgICAgIGNvbnN0IGFyZ3MgPSBnZXRBcmd1bWVudFZhbHVlcyhmaWVsZERlZiwgZmllbGROb2Rlc1swXSwgdmFyaWFibGVWYWx1ZXMpO1xuICAgICAgICAvLyBUaGUgcmVzb2x2ZSBmdW5jdGlvbidzIG9wdGlvbmFsIHRoaXJkIGFyZ3VtZW50IGlzIGEgY29udGV4dCB2YWx1ZSB0aGF0XG4gICAgICAgIC8vIGlzIHByb3ZpZGVkIHRvIGV2ZXJ5IHJlc29sdmUgZnVuY3Rpb24gd2l0aGluIGFuIGV4ZWN1dGlvbi4gSXQgaXMgY29tbW9ubHlcbiAgICAgICAgLy8gdXNlZCB0byByZXByZXNlbnQgYW4gYXV0aGVudGljYXRlZCB1c2VyLCBvciByZXF1ZXN0LXNwZWNpZmljIGNhY2hlcy5cbiAgICAgICAgY29uc3QgY29udGV4dFZhbHVlID0gZXhlQ29udGV4dC5jb250ZXh0VmFsdWU7XG4gICAgICAgIC8vIENhbGwgdGhlIGBzdWJzY3JpYmUoKWAgcmVzb2x2ZXIgb3IgdGhlIGRlZmF1bHQgcmVzb2x2ZXIgdG8gcHJvZHVjZSBhblxuICAgICAgICAvLyBBc3luY0l0ZXJhYmxlIHlpZWxkaW5nIHJhdyBwYXlsb2Fkcy5cbiAgICAgICAgY29uc3QgcmVzb2x2ZUZuID0gKF9hID0gZmllbGREZWYuc3Vic2NyaWJlKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBleGVDb250ZXh0LnN1YnNjcmliZUZpZWxkUmVzb2x2ZXI7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHJlc29sdmVGbihyb290VmFsdWUsIGFyZ3MsIGNvbnRleHRWYWx1ZSwgaW5mbyk7XG4gICAgICAgIGlmIChpc1Byb21pc2UocmVzdWx0KSkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50aGVuKGFzc2VydEV2ZW50U3RyZWFtKS50aGVuKHVuZGVmaW5lZCwgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIHRocm93IGxvY2F0ZWRFcnJvcihlcnJvciwgZmllbGROb2RlcywgcGF0aFRvQXJyYXkocGF0aCkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzc2VydEV2ZW50U3RyZWFtKHJlc3VsdCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICB0aHJvdyBsb2NhdGVkRXJyb3IoZXJyb3IsIGZpZWxkTm9kZXMsIHBhdGhUb0FycmF5KHBhdGgpKTtcbiAgICB9XG59XG5mdW5jdGlvbiBhc3NlcnRFdmVudFN0cmVhbShyZXN1bHQpIHtcbiAgICBpZiAocmVzdWx0IGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgdGhyb3cgcmVzdWx0O1xuICAgIH1cbiAgICAvLyBBc3NlcnQgZmllbGQgcmV0dXJuZWQgYW4gZXZlbnQgc3RyZWFtLCBvdGhlcndpc2UgeWllbGQgYW4gZXJyb3IuXG4gICAgaWYgKCFpc0FzeW5jSXRlcmFibGUocmVzdWx0KSkge1xuICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoJ1N1YnNjcmlwdGlvbiBmaWVsZCBtdXN0IHJldHVybiBBc3luYyBJdGVyYWJsZS4gJyArIGBSZWNlaXZlZDogJHtpbnNwZWN0KHJlc3VsdCl9LmApO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZXhlY3V0ZURlZmVycmVkRnJhZ21lbnQoZXhlQ29udGV4dCwgcGFyZW50VHlwZSwgc291cmNlVmFsdWUsIGZpZWxkcywgbGFiZWwsIHBhdGgsIHBhcmVudENvbnRleHQpIHtcbiAgICBjb25zdCBhc3luY1BheWxvYWRSZWNvcmQgPSBuZXcgRGVmZXJyZWRGcmFnbWVudFJlY29yZCh7XG4gICAgICAgIGxhYmVsLFxuICAgICAgICBwYXRoLFxuICAgICAgICBwYXJlbnRDb250ZXh0LFxuICAgICAgICBleGVDb250ZXh0LFxuICAgIH0pO1xuICAgIGxldCBwcm9taXNlT3JEYXRhO1xuICAgIHRyeSB7XG4gICAgICAgIHByb21pc2VPckRhdGEgPSBleGVjdXRlRmllbGRzKGV4ZUNvbnRleHQsIHBhcmVudFR5cGUsIHNvdXJjZVZhbHVlLCBwYXRoLCBmaWVsZHMsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgIGlmIChpc1Byb21pc2UocHJvbWlzZU9yRGF0YSkpIHtcbiAgICAgICAgICAgIHByb21pc2VPckRhdGEgPSBwcm9taXNlT3JEYXRhLnRoZW4obnVsbCwgZSA9PiB7XG4gICAgICAgICAgICAgICAgYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycy5wdXNoKGUpO1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycy5wdXNoKGUpO1xuICAgICAgICBwcm9taXNlT3JEYXRhID0gbnVsbDtcbiAgICB9XG4gICAgYXN5bmNQYXlsb2FkUmVjb3JkLmFkZERhdGEocHJvbWlzZU9yRGF0YSk7XG59XG5mdW5jdGlvbiBleGVjdXRlU3RyZWFtRmllbGQocGF0aCwgaXRlbVBhdGgsIGl0ZW0sIGV4ZUNvbnRleHQsIGZpZWxkTm9kZXMsIGluZm8sIGl0ZW1UeXBlLCBsYWJlbCwgcGFyZW50Q29udGV4dCkge1xuICAgIGNvbnN0IGFzeW5jUGF5bG9hZFJlY29yZCA9IG5ldyBTdHJlYW1SZWNvcmQoe1xuICAgICAgICBsYWJlbCxcbiAgICAgICAgcGF0aDogaXRlbVBhdGgsXG4gICAgICAgIHBhcmVudENvbnRleHQsXG4gICAgICAgIGV4ZUNvbnRleHQsXG4gICAgfSk7XG4gICAgbGV0IGNvbXBsZXRlZEl0ZW07XG4gICAgdHJ5IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIGlmIChpc1Byb21pc2UoaXRlbSkpIHtcbiAgICAgICAgICAgICAgICBjb21wbGV0ZWRJdGVtID0gaXRlbS50aGVuKHJlc29sdmVkID0+IGNvbXBsZXRlVmFsdWUoZXhlQ29udGV4dCwgaXRlbVR5cGUsIGZpZWxkTm9kZXMsIGluZm8sIGl0ZW1QYXRoLCByZXNvbHZlZCwgYXN5bmNQYXlsb2FkUmVjb3JkKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb21wbGV0ZWRJdGVtID0gY29tcGxldGVWYWx1ZShleGVDb250ZXh0LCBpdGVtVHlwZSwgZmllbGROb2RlcywgaW5mbywgaXRlbVBhdGgsIGl0ZW0sIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaXNQcm9taXNlKGNvbXBsZXRlZEl0ZW0pKSB7XG4gICAgICAgICAgICAgICAgLy8gTm90ZTogd2UgZG9uJ3QgcmVseSBvbiBhIGBjYXRjaGAgbWV0aG9kLCBidXQgd2UgZG8gZXhwZWN0IFwidGhlbmFibGVcIlxuICAgICAgICAgICAgICAgIC8vIHRvIHRha2UgYSBzZWNvbmQgY2FsbGJhY2sgZm9yIHRoZSBlcnJvciBjYXNlLlxuICAgICAgICAgICAgICAgIGNvbXBsZXRlZEl0ZW0gPSBjb21wbGV0ZWRJdGVtLnRoZW4odW5kZWZpbmVkLCByYXdFcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVycm9yID0gbG9jYXRlZEVycm9yKHJhd0Vycm9yLCBmaWVsZE5vZGVzLCBwYXRoVG9BcnJheShpdGVtUGF0aCkpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVkRXJyb3IgPSBoYW5kbGVGaWVsZEVycm9yKGVycm9yLCBpdGVtVHlwZSwgYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycyk7XG4gICAgICAgICAgICAgICAgICAgIGZpbHRlclN1YnNlcXVlbnRQYXlsb2FkcyhleGVDb250ZXh0LCBpdGVtUGF0aCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGhhbmRsZWRFcnJvcjtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAocmF3RXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yID0gbG9jYXRlZEVycm9yKHJhd0Vycm9yLCBmaWVsZE5vZGVzLCBwYXRoVG9BcnJheShpdGVtUGF0aCkpO1xuICAgICAgICAgICAgY29tcGxldGVkSXRlbSA9IGhhbmRsZUZpZWxkRXJyb3IoZXJyb3IsIGl0ZW1UeXBlLCBhc3luY1BheWxvYWRSZWNvcmQuZXJyb3JzKTtcbiAgICAgICAgICAgIGZpbHRlclN1YnNlcXVlbnRQYXlsb2FkcyhleGVDb250ZXh0LCBpdGVtUGF0aCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgZmlsdGVyU3Vic2VxdWVudFBheWxvYWRzKGV4ZUNvbnRleHQsIHBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgIGFzeW5jUGF5bG9hZFJlY29yZC5hZGRJdGVtcyhudWxsKTtcbiAgICAgICAgcmV0dXJuIGFzeW5jUGF5bG9hZFJlY29yZDtcbiAgICB9XG4gICAgbGV0IGNvbXBsZXRlZEl0ZW1zO1xuICAgIGlmIChpc1Byb21pc2UoY29tcGxldGVkSXRlbSkpIHtcbiAgICAgICAgY29tcGxldGVkSXRlbXMgPSBjb21wbGV0ZWRJdGVtLnRoZW4odmFsdWUgPT4gW3ZhbHVlXSwgZXJyb3IgPT4ge1xuICAgICAgICAgICAgYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgICAgIGZpbHRlclN1YnNlcXVlbnRQYXlsb2FkcyhleGVDb250ZXh0LCBwYXRoLCBhc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29tcGxldGVkSXRlbXMgPSBbY29tcGxldGVkSXRlbV07XG4gICAgfVxuICAgIGFzeW5jUGF5bG9hZFJlY29yZC5hZGRJdGVtcyhjb21wbGV0ZWRJdGVtcyk7XG4gICAgcmV0dXJuIGFzeW5jUGF5bG9hZFJlY29yZDtcbn1cbmFzeW5jIGZ1bmN0aW9uIGV4ZWN1dGVTdHJlYW1JdGVyYXRvckl0ZW0oaXRlcmF0b3IsIGV4ZUNvbnRleHQsIGZpZWxkTm9kZXMsIGluZm8sIGl0ZW1UeXBlLCBhc3luY1BheWxvYWRSZWNvcmQsIGl0ZW1QYXRoKSB7XG4gICAgbGV0IGl0ZW07XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgeyB2YWx1ZSwgZG9uZSB9ID0gYXdhaXQgaXRlcmF0b3IubmV4dCgpO1xuICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgYXN5bmNQYXlsb2FkUmVjb3JkLnNldElzQ29tcGxldGVkSXRlcmF0b3IoKTtcbiAgICAgICAgICAgIHJldHVybiB7IGRvbmUsIHZhbHVlOiB1bmRlZmluZWQgfTtcbiAgICAgICAgfVxuICAgICAgICBpdGVtID0gdmFsdWU7XG4gICAgfVxuICAgIGNhdGNoIChyYXdFcnJvcikge1xuICAgICAgICBjb25zdCBlcnJvciA9IGxvY2F0ZWRFcnJvcihyYXdFcnJvciwgZmllbGROb2RlcywgcGF0aFRvQXJyYXkoaXRlbVBhdGgpKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBoYW5kbGVGaWVsZEVycm9yKGVycm9yLCBpdGVtVHlwZSwgYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycyk7XG4gICAgICAgIC8vIGRvbid0IGNvbnRpbnVlIGlmIGl0ZXJhdG9yIHRocm93c1xuICAgICAgICByZXR1cm4geyBkb25lOiB0cnVlLCB2YWx1ZSB9O1xuICAgIH1cbiAgICBsZXQgY29tcGxldGVkSXRlbTtcbiAgICB0cnkge1xuICAgICAgICBjb21wbGV0ZWRJdGVtID0gY29tcGxldGVWYWx1ZShleGVDb250ZXh0LCBpdGVtVHlwZSwgZmllbGROb2RlcywgaW5mbywgaXRlbVBhdGgsIGl0ZW0sIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgIGlmIChpc1Byb21pc2UoY29tcGxldGVkSXRlbSkpIHtcbiAgICAgICAgICAgIGNvbXBsZXRlZEl0ZW0gPSBjb21wbGV0ZWRJdGVtLnRoZW4odW5kZWZpbmVkLCByYXdFcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSBsb2NhdGVkRXJyb3IocmF3RXJyb3IsIGZpZWxkTm9kZXMsIHBhdGhUb0FycmF5KGl0ZW1QYXRoKSk7XG4gICAgICAgICAgICAgICAgY29uc3QgaGFuZGxlZEVycm9yID0gaGFuZGxlRmllbGRFcnJvcihlcnJvciwgaXRlbVR5cGUsIGFzeW5jUGF5bG9hZFJlY29yZC5lcnJvcnMpO1xuICAgICAgICAgICAgICAgIGZpbHRlclN1YnNlcXVlbnRQYXlsb2FkcyhleGVDb250ZXh0LCBpdGVtUGF0aCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlZEVycm9yO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlOiBjb21wbGV0ZWRJdGVtIH07XG4gICAgfVxuICAgIGNhdGNoIChyYXdFcnJvcikge1xuICAgICAgICBjb25zdCBlcnJvciA9IGxvY2F0ZWRFcnJvcihyYXdFcnJvciwgZmllbGROb2RlcywgcGF0aFRvQXJyYXkoaXRlbVBhdGgpKTtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBoYW5kbGVGaWVsZEVycm9yKGVycm9yLCBpdGVtVHlwZSwgYXN5bmNQYXlsb2FkUmVjb3JkLmVycm9ycyk7XG4gICAgICAgIGZpbHRlclN1YnNlcXVlbnRQYXlsb2FkcyhleGVDb250ZXh0LCBpdGVtUGF0aCwgYXN5bmNQYXlsb2FkUmVjb3JkKTtcbiAgICAgICAgcmV0dXJuIHsgZG9uZTogZmFsc2UsIHZhbHVlIH07XG4gICAgfVxufVxuYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZVN0cmVhbUl0ZXJhdG9yKGluaXRpYWxJbmRleCwgaXRlcmF0b3IsIGV4ZUNvbnRleHQsIGZpZWxkTm9kZXMsIGluZm8sIGl0ZW1UeXBlLCBwYXRoLCBsYWJlbCwgcGFyZW50Q29udGV4dCkge1xuICAgIGxldCBpbmRleCA9IGluaXRpYWxJbmRleDtcbiAgICBsZXQgcHJldmlvdXNBc3luY1BheWxvYWRSZWNvcmQgPSBwYXJlbnRDb250ZXh0ICE9PSBudWxsICYmIHBhcmVudENvbnRleHQgIT09IHZvaWQgMCA/IHBhcmVudENvbnRleHQgOiB1bmRlZmluZWQ7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3QgaXRlbVBhdGggPSBhZGRQYXRoKHBhdGgsIGluZGV4LCB1bmRlZmluZWQpO1xuICAgICAgICBjb25zdCBhc3luY1BheWxvYWRSZWNvcmQgPSBuZXcgU3RyZWFtUmVjb3JkKHtcbiAgICAgICAgICAgIGxhYmVsLFxuICAgICAgICAgICAgcGF0aDogaXRlbVBhdGgsXG4gICAgICAgICAgICBwYXJlbnRDb250ZXh0OiBwcmV2aW91c0FzeW5jUGF5bG9hZFJlY29yZCxcbiAgICAgICAgICAgIGl0ZXJhdG9yLFxuICAgICAgICAgICAgZXhlQ29udGV4dCxcbiAgICAgICAgfSk7XG4gICAgICAgIGxldCBpdGVyYXRpb247XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpdGVyYXRpb24gPSBhd2FpdCBleGVjdXRlU3RyZWFtSXRlcmF0b3JJdGVtKGl0ZXJhdG9yLCBleGVDb250ZXh0LCBmaWVsZE5vZGVzLCBpbmZvLCBpdGVtVHlwZSwgYXN5bmNQYXlsb2FkUmVjb3JkLCBpdGVtUGF0aCk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICBhc3luY1BheWxvYWRSZWNvcmQuZXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgZmlsdGVyU3Vic2VxdWVudFBheWxvYWRzKGV4ZUNvbnRleHQsIHBhdGgsIGFzeW5jUGF5bG9hZFJlY29yZCk7XG4gICAgICAgICAgICBhc3luY1BheWxvYWRSZWNvcmQuYWRkSXRlbXMobnVsbCk7XG4gICAgICAgICAgICAvLyBlbnRpcmUgc3RyZWFtIGhhcyBlcnJvcmVkIGFuZCBidWJibGVkIHVwd2FyZHNcbiAgICAgICAgICAgIGlmIChpdGVyYXRvciA9PT0gbnVsbCB8fCBpdGVyYXRvciA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlcmF0b3IucmV0dXJuKSB7XG4gICAgICAgICAgICAgICAgaXRlcmF0b3IucmV0dXJuKCkuY2F0Y2goKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAvLyBpZ25vcmUgZXJyb3JzXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgeyBkb25lLCB2YWx1ZTogY29tcGxldGVkSXRlbSB9ID0gaXRlcmF0aW9uO1xuICAgICAgICBsZXQgY29tcGxldGVkSXRlbXM7XG4gICAgICAgIGlmIChpc1Byb21pc2UoY29tcGxldGVkSXRlbSkpIHtcbiAgICAgICAgICAgIGNvbXBsZXRlZEl0ZW1zID0gY29tcGxldGVkSXRlbS50aGVuKHZhbHVlID0+IFt2YWx1ZV0sIGVycm9yID0+IHtcbiAgICAgICAgICAgICAgICBhc3luY1BheWxvYWRSZWNvcmQuZXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICAgICAgICAgIGZpbHRlclN1YnNlcXVlbnRQYXlsb2FkcyhleGVDb250ZXh0LCBwYXRoLCBhc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb21wbGV0ZWRJdGVtcyA9IFtjb21wbGV0ZWRJdGVtXTtcbiAgICAgICAgfVxuICAgICAgICBhc3luY1BheWxvYWRSZWNvcmQuYWRkSXRlbXMoY29tcGxldGVkSXRlbXMpO1xuICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgICAgcHJldmlvdXNBc3luY1BheWxvYWRSZWNvcmQgPSBhc3luY1BheWxvYWRSZWNvcmQ7XG4gICAgICAgIGluZGV4Kys7XG4gICAgfVxufVxuZnVuY3Rpb24gZmlsdGVyU3Vic2VxdWVudFBheWxvYWRzKGV4ZUNvbnRleHQsIG51bGxQYXRoLCBjdXJyZW50QXN5bmNSZWNvcmQpIHtcbiAgICBjb25zdCBudWxsUGF0aEFycmF5ID0gcGF0aFRvQXJyYXkobnVsbFBhdGgpO1xuICAgIGV4ZUNvbnRleHQuc3Vic2VxdWVudFBheWxvYWRzLmZvckVhY2goYXN5bmNSZWNvcmQgPT4ge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIGlmIChhc3luY1JlY29yZCA9PT0gY3VycmVudEFzeW5jUmVjb3JkKSB7XG4gICAgICAgICAgICAvLyBkb24ndCByZW1vdmUgcGF5bG9hZCBmcm9tIHdoZXJlIGVycm9yIG9yaWdpbmF0ZXNcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bGxQYXRoQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmIChhc3luY1JlY29yZC5wYXRoW2ldICE9PSBudWxsUGF0aEFycmF5W2ldKSB7XG4gICAgICAgICAgICAgICAgLy8gYXN5bmNSZWNvcmQgcG9pbnRzIHRvIGEgcGF0aCB1bmFmZmVjdGVkIGJ5IHRoaXMgcGF5bG9hZFxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBhc3luY1JlY29yZCBwYXRoIHBvaW50cyB0byBudWxsZWQgZXJyb3IgZmllbGRcbiAgICAgICAgaWYgKGlzU3RyZWFtUGF5bG9hZChhc3luY1JlY29yZCkgJiYgKChfYSA9IGFzeW5jUmVjb3JkLml0ZXJhdG9yKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EucmV0dXJuKSkge1xuICAgICAgICAgICAgYXN5bmNSZWNvcmQuaXRlcmF0b3IucmV0dXJuKCkuY2F0Y2goKCkgPT4ge1xuICAgICAgICAgICAgICAgIC8vIGlnbm9yZSBlcnJvclxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZXhlQ29udGV4dC5zdWJzZXF1ZW50UGF5bG9hZHMuZGVsZXRlKGFzeW5jUmVjb3JkKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldENvbXBsZXRlZEluY3JlbWVudGFsUmVzdWx0cyhleGVDb250ZXh0KSB7XG4gICAgY29uc3QgaW5jcmVtZW50YWxSZXN1bHRzID0gW107XG4gICAgZm9yIChjb25zdCBhc3luY1BheWxvYWRSZWNvcmQgb2YgZXhlQ29udGV4dC5zdWJzZXF1ZW50UGF5bG9hZHMpIHtcbiAgICAgICAgY29uc3QgaW5jcmVtZW50YWxSZXN1bHQgPSB7fTtcbiAgICAgICAgaWYgKCFhc3luY1BheWxvYWRSZWNvcmQuaXNDb21wbGV0ZWQpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGV4ZUNvbnRleHQuc3Vic2VxdWVudFBheWxvYWRzLmRlbGV0ZShhc3luY1BheWxvYWRSZWNvcmQpO1xuICAgICAgICBpZiAoaXNTdHJlYW1QYXlsb2FkKGFzeW5jUGF5bG9hZFJlY29yZCkpIHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZW1zID0gYXN5bmNQYXlsb2FkUmVjb3JkLml0ZW1zO1xuICAgICAgICAgICAgaWYgKGFzeW5jUGF5bG9hZFJlY29yZC5pc0NvbXBsZXRlZEl0ZXJhdG9yKSB7XG4gICAgICAgICAgICAgICAgLy8gYXN5bmMgaXRlcmFibGUgcmVzb2x2ZXIganVzdCBmaW5pc2hlZCBidXQgdGhlcmUgbWF5IGJlIHBlbmRpbmcgcGF5bG9hZHNcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGluY3JlbWVudGFsUmVzdWx0Lml0ZW1zID0gaXRlbXM7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBkYXRhID0gYXN5bmNQYXlsb2FkUmVjb3JkLmRhdGE7XG4gICAgICAgICAgICBpbmNyZW1lbnRhbFJlc3VsdC5kYXRhID0gZGF0YSAhPT0gbnVsbCAmJiBkYXRhICE9PSB2b2lkIDAgPyBkYXRhIDogbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpbmNyZW1lbnRhbFJlc3VsdC5wYXRoID0gYXN5bmNQYXlsb2FkUmVjb3JkLnBhdGg7XG4gICAgICAgIGlmIChhc3luY1BheWxvYWRSZWNvcmQubGFiZWwpIHtcbiAgICAgICAgICAgIGluY3JlbWVudGFsUmVzdWx0LmxhYmVsID0gYXN5bmNQYXlsb2FkUmVjb3JkLmxhYmVsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChhc3luY1BheWxvYWRSZWNvcmQuZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGluY3JlbWVudGFsUmVzdWx0LmVycm9ycyA9IGFzeW5jUGF5bG9hZFJlY29yZC5lcnJvcnM7XG4gICAgICAgIH1cbiAgICAgICAgaW5jcmVtZW50YWxSZXN1bHRzLnB1c2goaW5jcmVtZW50YWxSZXN1bHQpO1xuICAgIH1cbiAgICByZXR1cm4gaW5jcmVtZW50YWxSZXN1bHRzO1xufVxuZnVuY3Rpb24geWllbGRTdWJzZXF1ZW50UGF5bG9hZHMoZXhlQ29udGV4dCkge1xuICAgIGxldCBpc0RvbmUgPSBmYWxzZTtcbiAgICBhc3luYyBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICBpZiAoaXNEb25lKSB7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gICAgICAgIH1cbiAgICAgICAgYXdhaXQgUHJvbWlzZS5yYWNlKEFycmF5LmZyb20oZXhlQ29udGV4dC5zdWJzZXF1ZW50UGF5bG9hZHMpLm1hcChwID0+IHAucHJvbWlzZSkpO1xuICAgICAgICBpZiAoaXNEb25lKSB7XG4gICAgICAgICAgICAvLyBhIGRpZmZlcmVudCBjYWxsIHRvIG5leHQgaGFzIGV4aGF1c3RlZCBhbGwgcGF5bG9hZHNcbiAgICAgICAgICAgIHJldHVybiB7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBpbmNyZW1lbnRhbCA9IGdldENvbXBsZXRlZEluY3JlbWVudGFsUmVzdWx0cyhleGVDb250ZXh0KTtcbiAgICAgICAgY29uc3QgaGFzTmV4dCA9IGV4ZUNvbnRleHQuc3Vic2VxdWVudFBheWxvYWRzLnNpemUgPiAwO1xuICAgICAgICBpZiAoIWluY3JlbWVudGFsLmxlbmd0aCAmJiBoYXNOZXh0KSB7XG4gICAgICAgICAgICByZXR1cm4gbmV4dCgpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghaGFzTmV4dCkge1xuICAgICAgICAgICAgaXNEb25lID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdmFsdWU6IGluY3JlbWVudGFsLmxlbmd0aCA/IHsgaW5jcmVtZW50YWwsIGhhc05leHQgfSA6IHsgaGFzTmV4dCB9LFxuICAgICAgICAgICAgZG9uZTogZmFsc2UsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJldHVyblN0cmVhbUl0ZXJhdG9ycygpIHtcbiAgICAgICAgY29uc3QgcHJvbWlzZXMgPSBbXTtcbiAgICAgICAgZXhlQ29udGV4dC5zdWJzZXF1ZW50UGF5bG9hZHMuZm9yRWFjaChhc3luY1BheWxvYWRSZWNvcmQgPT4ge1xuICAgICAgICAgICAgdmFyIF9hO1xuICAgICAgICAgICAgaWYgKGlzU3RyZWFtUGF5bG9hZChhc3luY1BheWxvYWRSZWNvcmQpICYmICgoX2EgPSBhc3luY1BheWxvYWRSZWNvcmQuaXRlcmF0b3IpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5yZXR1cm4pKSB7XG4gICAgICAgICAgICAgICAgcHJvbWlzZXMucHVzaChhc3luY1BheWxvYWRSZWNvcmQuaXRlcmF0b3IucmV0dXJuKCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgICAgICBuZXh0LFxuICAgICAgICBhc3luYyByZXR1cm4oKSB7XG4gICAgICAgICAgICBhd2FpdCByZXR1cm5TdHJlYW1JdGVyYXRvcnMoKTtcbiAgICAgICAgICAgIGlzRG9uZSA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gICAgICAgIH0sXG4gICAgICAgIGFzeW5jIHRocm93KGVycm9yKSB7XG4gICAgICAgICAgICBhd2FpdCByZXR1cm5TdHJlYW1JdGVyYXRvcnMoKTtcbiAgICAgICAgICAgIGlzRG9uZSA9IHRydWU7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9LFxuICAgIH07XG59XG5jbGFzcyBEZWZlcnJlZEZyYWdtZW50UmVjb3JkIHtcbiAgICBjb25zdHJ1Y3RvcihvcHRzKSB7XG4gICAgICAgIHRoaXMudHlwZSA9ICdkZWZlcic7XG4gICAgICAgIHRoaXMubGFiZWwgPSBvcHRzLmxhYmVsO1xuICAgICAgICB0aGlzLnBhdGggPSBwYXRoVG9BcnJheShvcHRzLnBhdGgpO1xuICAgICAgICB0aGlzLnBhcmVudENvbnRleHQgPSBvcHRzLnBhcmVudENvbnRleHQ7XG4gICAgICAgIHRoaXMuZXJyb3JzID0gW107XG4gICAgICAgIHRoaXMuX2V4ZUNvbnRleHQgPSBvcHRzLmV4ZUNvbnRleHQ7XG4gICAgICAgIHRoaXMuX2V4ZUNvbnRleHQuc3Vic2VxdWVudFBheWxvYWRzLmFkZCh0aGlzKTtcbiAgICAgICAgdGhpcy5pc0NvbXBsZXRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmRhdGEgPSBudWxsO1xuICAgICAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3Jlc29sdmUgPSBNYXliZVByb21pc2UgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoTWF5YmVQcm9taXNlKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pLnRoZW4oZGF0YSA9PiB7XG4gICAgICAgICAgICB0aGlzLmRhdGEgPSBkYXRhO1xuICAgICAgICAgICAgdGhpcy5pc0NvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhZGREYXRhKGRhdGEpIHtcbiAgICAgICAgdmFyIF9hLCBfYiwgX2M7XG4gICAgICAgIGNvbnN0IHBhcmVudERhdGEgPSAoX2EgPSB0aGlzLnBhcmVudENvbnRleHQpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5wcm9taXNlO1xuICAgICAgICBpZiAocGFyZW50RGF0YSkge1xuICAgICAgICAgICAgKF9iID0gdGhpcy5fcmVzb2x2ZSkgPT09IG51bGwgfHwgX2IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9iLmNhbGwodGhpcywgcGFyZW50RGF0YS50aGVuKCgpID0+IGRhdGEpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAoX2MgPSB0aGlzLl9yZXNvbHZlKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbCh0aGlzLCBkYXRhKTtcbiAgICB9XG59XG5jbGFzcyBTdHJlYW1SZWNvcmQge1xuICAgIGNvbnN0cnVjdG9yKG9wdHMpIHtcbiAgICAgICAgdGhpcy50eXBlID0gJ3N0cmVhbSc7XG4gICAgICAgIHRoaXMuaXRlbXMgPSBudWxsO1xuICAgICAgICB0aGlzLmxhYmVsID0gb3B0cy5sYWJlbDtcbiAgICAgICAgdGhpcy5wYXRoID0gcGF0aFRvQXJyYXkob3B0cy5wYXRoKTtcbiAgICAgICAgdGhpcy5wYXJlbnRDb250ZXh0ID0gb3B0cy5wYXJlbnRDb250ZXh0O1xuICAgICAgICB0aGlzLml0ZXJhdG9yID0gb3B0cy5pdGVyYXRvcjtcbiAgICAgICAgdGhpcy5lcnJvcnMgPSBbXTtcbiAgICAgICAgdGhpcy5fZXhlQ29udGV4dCA9IG9wdHMuZXhlQ29udGV4dDtcbiAgICAgICAgdGhpcy5fZXhlQ29udGV4dC5zdWJzZXF1ZW50UGF5bG9hZHMuYWRkKHRoaXMpO1xuICAgICAgICB0aGlzLmlzQ29tcGxldGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXRlbXMgPSBudWxsO1xuICAgICAgICB0aGlzLnByb21pc2UgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3Jlc29sdmUgPSBNYXliZVByb21pc2UgPT4ge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoTWF5YmVQcm9taXNlKTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pLnRoZW4oaXRlbXMgPT4ge1xuICAgICAgICAgICAgdGhpcy5pdGVtcyA9IGl0ZW1zO1xuICAgICAgICAgICAgdGhpcy5pc0NvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhZGRJdGVtcyhpdGVtcykge1xuICAgICAgICB2YXIgX2EsIF9iLCBfYztcbiAgICAgICAgY29uc3QgcGFyZW50RGF0YSA9IChfYSA9IHRoaXMucGFyZW50Q29udGV4dCkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnByb21pc2U7XG4gICAgICAgIGlmIChwYXJlbnREYXRhKSB7XG4gICAgICAgICAgICAoX2IgPSB0aGlzLl9yZXNvbHZlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbCh0aGlzLCBwYXJlbnREYXRhLnRoZW4oKCkgPT4gaXRlbXMpKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAoX2MgPSB0aGlzLl9yZXNvbHZlKSA9PT0gbnVsbCB8fCBfYyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2MuY2FsbCh0aGlzLCBpdGVtcyk7XG4gICAgfVxuICAgIHNldElzQ29tcGxldGVkSXRlcmF0b3IoKSB7XG4gICAgICAgIHRoaXMuaXNDb21wbGV0ZWRJdGVyYXRvciA9IHRydWU7XG4gICAgfVxufVxuZnVuY3Rpb24gaXNTdHJlYW1QYXlsb2FkKGFzeW5jUGF5bG9hZCkge1xuICAgIHJldHVybiBhc3luY1BheWxvYWQudHlwZSA9PT0gJ3N0cmVhbSc7XG59XG4vKipcbiAqIFRoaXMgbWV0aG9kIGxvb2tzIHVwIHRoZSBmaWVsZCBvbiB0aGUgZ2l2ZW4gdHlwZSBkZWZpbml0aW9uLlxuICogSXQgaGFzIHNwZWNpYWwgY2FzaW5nIGZvciB0aGUgdGhyZWUgaW50cm9zcGVjdGlvbiBmaWVsZHMsXG4gKiBfX3NjaGVtYSwgX190eXBlIGFuZCBfX3R5cGVuYW1lLiBfX3R5cGVuYW1lIGlzIHNwZWNpYWwgYmVjYXVzZVxuICogaXQgY2FuIGFsd2F5cyBiZSBxdWVyaWVkIGFzIGEgZmllbGQsIGV2ZW4gaW4gc2l0dWF0aW9ucyB3aGVyZSBub1xuICogb3RoZXIgZmllbGRzIGFyZSBhbGxvd2VkLCBsaWtlIG9uIGEgVW5pb24uIF9fc2NoZW1hIGFuZCBfX3R5cGVcbiAqIGNvdWxkIGdldCBhdXRvbWF0aWNhbGx5IGFkZGVkIHRvIHRoZSBxdWVyeSB0eXBlLCBidXQgdGhhdCB3b3VsZFxuICogcmVxdWlyZSBtdXRhdGluZyB0eXBlIGRlZmluaXRpb25zLCB3aGljaCB3b3VsZCBjYXVzZSBpc3N1ZXMuXG4gKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRGaWVsZERlZihzY2hlbWEsIHBhcmVudFR5cGUsIGZpZWxkTm9kZSkge1xuICAgIGNvbnN0IGZpZWxkTmFtZSA9IGZpZWxkTm9kZS5uYW1lLnZhbHVlO1xuICAgIGlmIChmaWVsZE5hbWUgPT09IFNjaGVtYU1ldGFGaWVsZERlZi5uYW1lICYmIHNjaGVtYS5nZXRRdWVyeVR5cGUoKSA9PT0gcGFyZW50VHlwZSkge1xuICAgICAgICByZXR1cm4gU2NoZW1hTWV0YUZpZWxkRGVmO1xuICAgIH1cbiAgICBlbHNlIGlmIChmaWVsZE5hbWUgPT09IFR5cGVNZXRhRmllbGREZWYubmFtZSAmJiBzY2hlbWEuZ2V0UXVlcnlUeXBlKCkgPT09IHBhcmVudFR5cGUpIHtcbiAgICAgICAgcmV0dXJuIFR5cGVNZXRhRmllbGREZWY7XG4gICAgfVxuICAgIGVsc2UgaWYgKGZpZWxkTmFtZSA9PT0gVHlwZU5hbWVNZXRhRmllbGREZWYubmFtZSkge1xuICAgICAgICByZXR1cm4gVHlwZU5hbWVNZXRhRmllbGREZWY7XG4gICAgfVxuICAgIHJldHVybiBwYXJlbnRUeXBlLmdldEZpZWxkcygpW2ZpZWxkTmFtZV07XG59XG5leHBvcnQgZnVuY3Rpb24gaXNJbmNyZW1lbnRhbFJlc3VsdChyZXN1bHQpIHtcbiAgICByZXR1cm4gJ2luY3JlbWVudGFsJyBpbiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/execute.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js":
/*!********************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenAsyncIterable: () => (/* binding */ flattenAsyncIterable)\n/* harmony export */ });\n/**\n * Given an AsyncIterable of AsyncIterables, flatten all yielded results into a\n * single AsyncIterable.\n */\nfunction flattenAsyncIterable(iterable) {\n    // You might think this whole function could be replaced with\n    //\n    //    async function* flattenAsyncIterable(iterable) {\n    //      for await (const subIterator of iterable) {\n    //        yield* subIterator;\n    //      }\n    //    }\n    //\n    // but calling `.return()` on the iterator it returns won't interrupt the `for await`.\n    const topIterator = iterable[Symbol.asyncIterator]();\n    let currentNestedIterator;\n    let waitForCurrentNestedIterator;\n    let done = false;\n    async function next() {\n        if (done) {\n            return { value: undefined, done: true };\n        }\n        try {\n            if (!currentNestedIterator) {\n                // Somebody else is getting it already.\n                if (waitForCurrentNestedIterator) {\n                    await waitForCurrentNestedIterator;\n                    return await next();\n                }\n                // Nobody else is getting it. We should!\n                let resolve;\n                waitForCurrentNestedIterator = new Promise(r => {\n                    resolve = r;\n                });\n                const topIteratorResult = await topIterator.next();\n                if (topIteratorResult.done) {\n                    // Given that done only ever transitions from false to true,\n                    // require-atomic-updates is being unnecessarily cautious.\n                    done = true;\n                    return await next();\n                }\n                // eslint is making a reasonable point here, but we've explicitly protected\n                // ourself from the race condition by ensuring that only the single call\n                // that assigns to waitForCurrentNestedIterator is allowed to assign to\n                // currentNestedIterator or waitForCurrentNestedIterator.\n                currentNestedIterator = topIteratorResult.value[Symbol.asyncIterator]();\n                waitForCurrentNestedIterator = undefined;\n                resolve();\n                return await next();\n            }\n            const rememberCurrentNestedIterator = currentNestedIterator;\n            const nestedIteratorResult = await currentNestedIterator.next();\n            if (!nestedIteratorResult.done) {\n                return nestedIteratorResult;\n            }\n            // The nested iterator is done. If it's still the current one, make it not\n            // current. (If it's not the current one, somebody else has made us move on.)\n            if (currentNestedIterator === rememberCurrentNestedIterator) {\n                currentNestedIterator = undefined;\n            }\n            return await next();\n        }\n        catch (err) {\n            done = true;\n            throw err;\n        }\n    }\n    return {\n        next,\n        async return() {\n            var _a, _b;\n            done = true;\n            await Promise.all([(_a = currentNestedIterator === null || currentNestedIterator === void 0 ? void 0 : currentNestedIterator.return) === null || _a === void 0 ? void 0 : _a.call(currentNestedIterator), (_b = topIterator.return) === null || _b === void 0 ? void 0 : _b.call(topIterator)]);\n            return { value: undefined, done: true };\n        },\n        async throw(error) {\n            var _a, _b;\n            done = true;\n            await Promise.all([(_a = currentNestedIterator === null || currentNestedIterator === void 0 ? void 0 : currentNestedIterator.throw) === null || _a === void 0 ? void 0 : _a.call(currentNestedIterator, error), (_b = topIterator.throw) === null || _b === void 0 ? void 0 : _b.call(topIterator, error)]);\n            /* c8 ignore next */\n            throw error;\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL2ZsYXR0ZW5Bc3luY0l0ZXJhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9mbGF0dGVuQXN5bmNJdGVyYWJsZS5qcz9jZTdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYW4gQXN5bmNJdGVyYWJsZSBvZiBBc3luY0l0ZXJhYmxlcywgZmxhdHRlbiBhbGwgeWllbGRlZCByZXN1bHRzIGludG8gYVxuICogc2luZ2xlIEFzeW5jSXRlcmFibGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuQXN5bmNJdGVyYWJsZShpdGVyYWJsZSkge1xuICAgIC8vIFlvdSBtaWdodCB0aGluayB0aGlzIHdob2xlIGZ1bmN0aW9uIGNvdWxkIGJlIHJlcGxhY2VkIHdpdGhcbiAgICAvL1xuICAgIC8vICAgIGFzeW5jIGZ1bmN0aW9uKiBmbGF0dGVuQXN5bmNJdGVyYWJsZShpdGVyYWJsZSkge1xuICAgIC8vICAgICAgZm9yIGF3YWl0IChjb25zdCBzdWJJdGVyYXRvciBvZiBpdGVyYWJsZSkge1xuICAgIC8vICAgICAgICB5aWVsZCogc3ViSXRlcmF0b3I7XG4gICAgLy8gICAgICB9XG4gICAgLy8gICAgfVxuICAgIC8vXG4gICAgLy8gYnV0IGNhbGxpbmcgYC5yZXR1cm4oKWAgb24gdGhlIGl0ZXJhdG9yIGl0IHJldHVybnMgd29uJ3QgaW50ZXJydXB0IHRoZSBgZm9yIGF3YWl0YC5cbiAgICBjb25zdCB0b3BJdGVyYXRvciA9IGl0ZXJhYmxlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIGxldCBjdXJyZW50TmVzdGVkSXRlcmF0b3I7XG4gICAgbGV0IHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3I7XG4gICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICBhc3luYyBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIWN1cnJlbnROZXN0ZWRJdGVyYXRvcikge1xuICAgICAgICAgICAgICAgIC8vIFNvbWVib2R5IGVsc2UgaXMgZ2V0dGluZyBpdCBhbHJlYWR5LlxuICAgICAgICAgICAgICAgIGlmICh3YWl0Rm9yQ3VycmVudE5lc3RlZEl0ZXJhdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3I7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBuZXh0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIE5vYm9keSBlbHNlIGlzIGdldHRpbmcgaXQuIFdlIHNob3VsZCFcbiAgICAgICAgICAgICAgICBsZXQgcmVzb2x2ZTtcbiAgICAgICAgICAgICAgICB3YWl0Rm9yQ3VycmVudE5lc3RlZEl0ZXJhdG9yID0gbmV3IFByb21pc2UociA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUgPSByO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRvcEl0ZXJhdG9yUmVzdWx0ID0gYXdhaXQgdG9wSXRlcmF0b3IubmV4dCgpO1xuICAgICAgICAgICAgICAgIGlmICh0b3BJdGVyYXRvclJlc3VsdC5kb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEdpdmVuIHRoYXQgZG9uZSBvbmx5IGV2ZXIgdHJhbnNpdGlvbnMgZnJvbSBmYWxzZSB0byB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAvLyByZXF1aXJlLWF0b21pYy11cGRhdGVzIGlzIGJlaW5nIHVubmVjZXNzYXJpbHkgY2F1dGlvdXMuXG4gICAgICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgbmV4dCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQgaXMgbWFraW5nIGEgcmVhc29uYWJsZSBwb2ludCBoZXJlLCBidXQgd2UndmUgZXhwbGljaXRseSBwcm90ZWN0ZWRcbiAgICAgICAgICAgICAgICAvLyBvdXJzZWxmIGZyb20gdGhlIHJhY2UgY29uZGl0aW9uIGJ5IGVuc3VyaW5nIHRoYXQgb25seSB0aGUgc2luZ2xlIGNhbGxcbiAgICAgICAgICAgICAgICAvLyB0aGF0IGFzc2lnbnMgdG8gd2FpdEZvckN1cnJlbnROZXN0ZWRJdGVyYXRvciBpcyBhbGxvd2VkIHRvIGFzc2lnbiB0b1xuICAgICAgICAgICAgICAgIC8vIGN1cnJlbnROZXN0ZWRJdGVyYXRvciBvciB3YWl0Rm9yQ3VycmVudE5lc3RlZEl0ZXJhdG9yLlxuICAgICAgICAgICAgICAgIGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9IHRvcEl0ZXJhdG9yUmVzdWx0LnZhbHVlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgICAgIHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBuZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByZW1lbWJlckN1cnJlbnROZXN0ZWRJdGVyYXRvciA9IGN1cnJlbnROZXN0ZWRJdGVyYXRvcjtcbiAgICAgICAgICAgIGNvbnN0IG5lc3RlZEl0ZXJhdG9yUmVzdWx0ID0gYXdhaXQgY3VycmVudE5lc3RlZEl0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgICAgIGlmICghbmVzdGVkSXRlcmF0b3JSZXN1bHQuZG9uZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXN0ZWRJdGVyYXRvclJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFRoZSBuZXN0ZWQgaXRlcmF0b3IgaXMgZG9uZS4gSWYgaXQncyBzdGlsbCB0aGUgY3VycmVudCBvbmUsIG1ha2UgaXQgbm90XG4gICAgICAgICAgICAvLyBjdXJyZW50LiAoSWYgaXQncyBub3QgdGhlIGN1cnJlbnQgb25lLCBzb21lYm9keSBlbHNlIGhhcyBtYWRlIHVzIG1vdmUgb24uKVxuICAgICAgICAgICAgaWYgKGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9PT0gcmVtZW1iZXJDdXJyZW50TmVzdGVkSXRlcmF0b3IpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVzdGVkSXRlcmF0b3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgbmV4dCgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG5leHQsXG4gICAgICAgIGFzeW5jIHJldHVybigpIHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICBkb25lID0gdHJ1ZTtcbiAgICAgICAgICAgIGF3YWl0IFByb21pc2UuYWxsKFsoX2EgPSBjdXJyZW50TmVzdGVkSXRlcmF0b3IgPT09IG51bGwgfHwgY3VycmVudE5lc3RlZEl0ZXJhdG9yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBjdXJyZW50TmVzdGVkSXRlcmF0b3IucmV0dXJuKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FsbChjdXJyZW50TmVzdGVkSXRlcmF0b3IpLCAoX2IgPSB0b3BJdGVyYXRvci5yZXR1cm4pID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi5jYWxsKHRvcEl0ZXJhdG9yKV0pO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyB0aHJvdyhlcnJvcikge1xuICAgICAgICAgICAgdmFyIF9hLCBfYjtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoWyhfYSA9IGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9PT0gbnVsbCB8fCBjdXJyZW50TmVzdGVkSXRlcmF0b3IgPT09IHZvaWQgMCA/IHZvaWQgMCA6IGN1cnJlbnROZXN0ZWRJdGVyYXRvci50aHJvdykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmNhbGwoY3VycmVudE5lc3RlZEl0ZXJhdG9yLCBlcnJvciksIChfYiA9IHRvcEl0ZXJhdG9yLnRocm93KSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IuY2FsbCh0b3BJdGVyYXRvciwgZXJyb3IpXSk7XG4gICAgICAgICAgICAvKiBjOCBpZ25vcmUgbmV4dCAqL1xuICAgICAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICAgIH0sXG4gICAgICAgIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/invariant.js":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/invariant.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invariant: () => (/* binding */ invariant)\n/* harmony export */ });\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL2ludmFyaWFudC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL2ludmFyaWFudC5qcz80OTgxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBtZXNzYWdlKSB7XG4gICAgaWYgKCFjb25kaXRpb24pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UgIT0gbnVsbCA/IG1lc3NhZ2UgOiAnVW5leHBlY3RlZCBpbnZhcmlhbnQgdHJpZ2dlcmVkLicpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/invariant.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js":
/*!******************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js ***!
  \******************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizedExecutor: () => (/* binding */ normalizedExecutor)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _execute_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./execute.js */ \"(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/execute.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\nfunction normalizedExecutor(args) {\n    const operationAST = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getOperationAST)(args.document, args.operationName);\n    if (operationAST == null) {\n        throw new Error('Must provide an operation.');\n    }\n    if (operationAST.operation === 'subscription') {\n        return (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.subscribe)(args);\n    }\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.execute)(args))\n        .then((result) => {\n        if ('initialResult' in result) {\n            return (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.flattenIncrementalResults)(result);\n        }\n        return result;\n    })\n        .resolve();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL25vcm1hbGl6ZWRFeGVjdXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ21DO0FBQzNCO0FBQzNDO0FBQ1AseUJBQXlCLHdEQUFlO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxzREFBUztBQUN4QjtBQUNBLGVBQWUsNERBQWMsT0FBTyxvREFBTztBQUMzQztBQUNBO0FBQ0EsbUJBQW1CLHNFQUF5QjtBQUM1QztBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9ub3JtYWxpemVkRXhlY3V0b3IuanM/NzQ2YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcGVyYXRpb25BU1QgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGV4ZWN1dGUsIGZsYXR0ZW5JbmNyZW1lbnRhbFJlc3VsdHMsIHN1YnNjcmliZSB9IGZyb20gJy4vZXhlY3V0ZS5qcyc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZWRFeGVjdXRvcihhcmdzKSB7XG4gICAgY29uc3Qgb3BlcmF0aW9uQVNUID0gZ2V0T3BlcmF0aW9uQVNUKGFyZ3MuZG9jdW1lbnQsIGFyZ3Mub3BlcmF0aW9uTmFtZSk7XG4gICAgaWYgKG9wZXJhdGlvbkFTVCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTXVzdCBwcm92aWRlIGFuIG9wZXJhdGlvbi4nKTtcbiAgICB9XG4gICAgaWYgKG9wZXJhdGlvbkFTVC5vcGVyYXRpb24gPT09ICdzdWJzY3JpcHRpb24nKSB7XG4gICAgICAgIHJldHVybiBzdWJzY3JpYmUoYXJncyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVmFsdWVPclByb21pc2UoKCkgPT4gZXhlY3V0ZShhcmdzKSlcbiAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICBpZiAoJ2luaXRpYWxSZXN1bHQnIGluIHJlc3VsdCkge1xuICAgICAgICAgICAgcmV0dXJuIGZsYXR0ZW5JbmNyZW1lbnRhbFJlc3VsdHMocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pXG4gICAgICAgIC5yZXNvbHZlKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js":
/*!****************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promiseForObject: () => (/* binding */ promiseForObject)\n/* harmony export */ });\n/**\n * This function transforms a JS object `Record<string, Promise<T>>` into\n * a `Promise<Record<string, T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nasync function promiseForObject(object) {\n    const resolvedObject = Object.create(null);\n    await Promise.all(Object.entries(object).map(async ([key, value]) => {\n        resolvedObject[key] = await value;\n    }));\n    return resolvedObject;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL3Byb21pc2VGb3JPYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL3Byb21pc2VGb3JPYmplY3QuanM/ZWZlMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZnVuY3Rpb24gdHJhbnNmb3JtcyBhIEpTIG9iamVjdCBgUmVjb3JkPHN0cmluZywgUHJvbWlzZTxUPj5gIGludG9cbiAqIGEgYFByb21pc2U8UmVjb3JkPHN0cmluZywgVD4+YFxuICpcbiAqIFRoaXMgaXMgYWtpbiB0byBibHVlYmlyZCdzIGBQcm9taXNlLnByb3BzYCwgYnV0IGltcGxlbWVudGVkIG9ubHkgdXNpbmdcbiAqIGBQcm9taXNlLmFsbGAgc28gaXQgd2lsbCB3b3JrIHdpdGggYW55IGltcGxlbWVudGF0aW9uIG9mIEVTNiBwcm9taXNlcy5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb21pc2VGb3JPYmplY3Qob2JqZWN0KSB7XG4gICAgY29uc3QgcmVzb2x2ZWRPYmplY3QgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGF3YWl0IFByb21pc2UuYWxsKE9iamVjdC5lbnRyaWVzKG9iamVjdCkubWFwKGFzeW5jIChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAgICAgcmVzb2x2ZWRPYmplY3Rba2V5XSA9IGF3YWl0IHZhbHVlO1xuICAgIH0pKTtcbiAgICByZXR1cm4gcmVzb2x2ZWRPYmplY3Q7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/values.js":
/*!******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/values.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVariableValues: () => (/* binding */ getVariableValues)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/coerceInputValue.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Path.js\");\n\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n    const errors = [];\n    const maxErrors = options === null || options === void 0 ? void 0 : options.maxErrors;\n    try {\n        const coerced = coerceVariableValues(schema, varDefNodes, inputs, error => {\n            if (maxErrors != null && errors.length >= maxErrors) {\n                throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)('Too many errors processing variables, error limit reached. Execution aborted.');\n            }\n            errors.push(error);\n        });\n        if (errors.length === 0) {\n            return { coerced };\n        }\n    }\n    catch (error) {\n        errors.push(error);\n    }\n    // @ts-expect-error - We know that errors is an array of GraphQLError.\n    return { errors };\n}\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n    const coercedValues = {};\n    for (const varDefNode of varDefNodes) {\n        const varName = varDefNode.variable.name.value;\n        const varType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.typeFromAST)(schema, varDefNode.type);\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInputType)(varType)) {\n            // Must use input types for variables. This should be caught during\n            // validation, however is checked again here for safety.\n            const varTypeStr = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.print)(varDefNode.type);\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`, { nodes: varDefNode.type }));\n            continue;\n        }\n        if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(inputs, varName)) {\n            if (varDefNode.defaultValue) {\n                coercedValues[varName] = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(varDefNode.defaultValue, varType);\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n                const varTypeStr = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(varType);\n                onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`, {\n                    nodes: varDefNode,\n                }));\n            }\n            continue;\n        }\n        const value = inputs[varName];\n        if (value === null && (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n            const varTypeStr = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(varType);\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`, {\n                nodes: varDefNode,\n            }));\n            continue;\n        }\n        coercedValues[varName] = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.coerceInputValue)(value, varType, (path, invalidValue, error) => {\n            let prefix = `Variable \"$${varName}\" got invalid value ` + (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(invalidValue);\n            if (path.length > 0) {\n                prefix += ` at \"${varName}${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.printPathArray)(path)}\"`;\n            }\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(prefix + '; ' + error.message, {\n                nodes: varDefNode,\n                originalError: error.originalError,\n            }));\n        });\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL3ZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQTBHO0FBQ1A7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHdFQUFrQjtBQUN4QztBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLG9EQUFXO0FBQ25DLGFBQWEsb0RBQVc7QUFDeEI7QUFDQTtBQUNBLCtCQUErQiw4Q0FBSztBQUNwQyxvQkFBb0Isd0VBQWtCLGVBQWUsUUFBUSw0QkFBNEIsV0FBVyw2Q0FBNkMsd0JBQXdCO0FBQ3pLO0FBQ0E7QUFDQSxhQUFhLG9FQUFjO0FBQzNCO0FBQ0EseUNBQXlDLHFEQUFZO0FBQ3JEO0FBQ0EscUJBQXFCLHNEQUFhO0FBQ2xDLG1DQUFtQyw2REFBTztBQUMxQyx3QkFBd0Isd0VBQWtCLGVBQWUsUUFBUSxzQkFBc0IsV0FBVztBQUNsRztBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixzREFBYTtBQUMzQywrQkFBK0IsNkRBQU87QUFDdEMsb0JBQW9CLHdFQUFrQixlQUFlLFFBQVEsc0JBQXNCLFdBQVc7QUFDOUY7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLGlDQUFpQyx5REFBZ0I7QUFDakQsdUNBQXVDLFFBQVEsd0JBQXdCLDZEQUFPO0FBQzlFO0FBQ0Esa0NBQWtDLFFBQVEsRUFBRSxvRUFBYyxPQUFPO0FBQ2pFO0FBQ0Esb0JBQW9CLHdFQUFrQixhQUFhO0FBQ25EO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL3ZhbHVlcy5qcz9jYTZjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHByaW50LCBpc0lucHV0VHlwZSwgaXNOb25OdWxsVHlwZSwgY29lcmNlSW5wdXRWYWx1ZSwgdHlwZUZyb21BU1QsIHZhbHVlRnJvbUFTVCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGNyZWF0ZUdyYXBoUUxFcnJvciwgaGFzT3duUHJvcGVydHksIGluc3BlY3QsIHByaW50UGF0aEFycmF5IH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuLyoqXG4gKiBQcmVwYXJlcyBhbiBvYmplY3QgbWFwIG9mIHZhcmlhYmxlVmFsdWVzIG9mIHRoZSBjb3JyZWN0IHR5cGUgYmFzZWQgb24gdGhlXG4gKiBwcm92aWRlZCB2YXJpYWJsZSBkZWZpbml0aW9ucyBhbmQgYXJiaXRyYXJ5IGlucHV0LiBJZiB0aGUgaW5wdXQgY2Fubm90IGJlXG4gKiBwYXJzZWQgdG8gbWF0Y2ggdGhlIHZhcmlhYmxlIGRlZmluaXRpb25zLCBhIEdyYXBoUUxFcnJvciB3aWxsIGJlIHRocm93bi5cbiAqXG4gKiBOb3RlOiBUaGUgcmV0dXJuZWQgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3Qgd2l0aCBhIHByb3RvdHlwZSwgc2luY2UgaXQgaXNcbiAqIGV4cG9zZWQgdG8gdXNlciBjb2RlLiBDYXJlIHNob3VsZCBiZSB0YWtlbiB0byBub3QgcHVsbCB2YWx1ZXMgZnJvbSB0aGVcbiAqIE9iamVjdCBwcm90b3R5cGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRWYXJpYWJsZVZhbHVlcyhzY2hlbWEsIHZhckRlZk5vZGVzLCBpbnB1dHMsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBlcnJvcnMgPSBbXTtcbiAgICBjb25zdCBtYXhFcnJvcnMgPSBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubWF4RXJyb3JzO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGNvZXJjZWQgPSBjb2VyY2VWYXJpYWJsZVZhbHVlcyhzY2hlbWEsIHZhckRlZk5vZGVzLCBpbnB1dHMsIGVycm9yID0+IHtcbiAgICAgICAgICAgIGlmIChtYXhFcnJvcnMgIT0gbnVsbCAmJiBlcnJvcnMubGVuZ3RoID49IG1heEVycm9ycykge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcignVG9vIG1hbnkgZXJyb3JzIHByb2Nlc3NpbmcgdmFyaWFibGVzLCBlcnJvciBsaW1pdCByZWFjaGVkLiBFeGVjdXRpb24gYWJvcnRlZC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChlcnJvcnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4geyBjb2VyY2VkIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKGVycm9yKTtcbiAgICB9XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIFdlIGtub3cgdGhhdCBlcnJvcnMgaXMgYW4gYXJyYXkgb2YgR3JhcGhRTEVycm9yLlxuICAgIHJldHVybiB7IGVycm9ycyB9O1xufVxuZnVuY3Rpb24gY29lcmNlVmFyaWFibGVWYWx1ZXMoc2NoZW1hLCB2YXJEZWZOb2RlcywgaW5wdXRzLCBvbkVycm9yKSB7XG4gICAgY29uc3QgY29lcmNlZFZhbHVlcyA9IHt9O1xuICAgIGZvciAoY29uc3QgdmFyRGVmTm9kZSBvZiB2YXJEZWZOb2Rlcykge1xuICAgICAgICBjb25zdCB2YXJOYW1lID0gdmFyRGVmTm9kZS52YXJpYWJsZS5uYW1lLnZhbHVlO1xuICAgICAgICBjb25zdCB2YXJUeXBlID0gdHlwZUZyb21BU1Qoc2NoZW1hLCB2YXJEZWZOb2RlLnR5cGUpO1xuICAgICAgICBpZiAoIWlzSW5wdXRUeXBlKHZhclR5cGUpKSB7XG4gICAgICAgICAgICAvLyBNdXN0IHVzZSBpbnB1dCB0eXBlcyBmb3IgdmFyaWFibGVzLiBUaGlzIHNob3VsZCBiZSBjYXVnaHQgZHVyaW5nXG4gICAgICAgICAgICAvLyB2YWxpZGF0aW9uLCBob3dldmVyIGlzIGNoZWNrZWQgYWdhaW4gaGVyZSBmb3Igc2FmZXR5LlxuICAgICAgICAgICAgY29uc3QgdmFyVHlwZVN0ciA9IHByaW50KHZhckRlZk5vZGUudHlwZSk7XG4gICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIGV4cGVjdGVkIHZhbHVlIG9mIHR5cGUgXCIke3ZhclR5cGVTdHJ9XCIgd2hpY2ggY2Fubm90IGJlIHVzZWQgYXMgYW4gaW5wdXQgdHlwZS5gLCB7IG5vZGVzOiB2YXJEZWZOb2RlLnR5cGUgfSkpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFoYXNPd25Qcm9wZXJ0eShpbnB1dHMsIHZhck5hbWUpKSB7XG4gICAgICAgICAgICBpZiAodmFyRGVmTm9kZS5kZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjb2VyY2VkVmFsdWVzW3Zhck5hbWVdID0gdmFsdWVGcm9tQVNUKHZhckRlZk5vZGUuZGVmYXVsdFZhbHVlLCB2YXJUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUodmFyVHlwZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YXJUeXBlU3RyID0gaW5zcGVjdCh2YXJUeXBlKTtcbiAgICAgICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIG9mIHJlcXVpcmVkIHR5cGUgXCIke3ZhclR5cGVTdHJ9XCIgd2FzIG5vdCBwcm92aWRlZC5gLCB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzOiB2YXJEZWZOb2RlLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlID0gaW5wdXRzW3Zhck5hbWVdO1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwgJiYgaXNOb25OdWxsVHlwZSh2YXJUeXBlKSkge1xuICAgICAgICAgICAgY29uc3QgdmFyVHlwZVN0ciA9IGluc3BlY3QodmFyVHlwZSk7XG4gICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIG9mIG5vbi1udWxsIHR5cGUgXCIke3ZhclR5cGVTdHJ9XCIgbXVzdCBub3QgYmUgbnVsbC5gLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IHZhckRlZk5vZGUsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb2VyY2VkVmFsdWVzW3Zhck5hbWVdID0gY29lcmNlSW5wdXRWYWx1ZSh2YWx1ZSwgdmFyVHlwZSwgKHBhdGgsIGludmFsaWRWYWx1ZSwgZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGxldCBwcmVmaXggPSBgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIGdvdCBpbnZhbGlkIHZhbHVlIGAgKyBpbnNwZWN0KGludmFsaWRWYWx1ZSk7XG4gICAgICAgICAgICBpZiAocGF0aC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgcHJlZml4ICs9IGAgYXQgXCIke3Zhck5hbWV9JHtwcmludFBhdGhBcnJheShwYXRoKX1cImA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihwcmVmaXggKyAnOyAnICsgZXJyb3IubWVzc2FnZSwge1xuICAgICAgICAgICAgICAgIG5vZGVzOiB2YXJEZWZOb2RlLFxuICAgICAgICAgICAgICAgIG9yaWdpbmFsRXJyb3I6IGVycm9yLm9yaWdpbmFsRXJyb3IsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gY29lcmNlZFZhbHVlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-delegate/node_modules/@graphql-tools/executor/esm/execution/values.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBatchingExecutor: () => (/* binding */ createBatchingExecutor)\n/* harmony export */ });\n/* harmony import */ var dataloader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dataloader */ \"(ssr)/../node_modules/dataloader/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _mergeRequests_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mergeRequests.js */ \"(ssr)/../node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js\");\n/* harmony import */ var _splitResult_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./splitResult.js */ \"(ssr)/../node_modules/@graphql-tools/batch-execute/esm/splitResult.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n\n\n\n\n\nfunction createBatchingExecutor(executor, dataLoaderOptions, extensionsReducer = defaultExtensionsReducer) {\n    const loadFn = createLoadFn(executor, extensionsReducer);\n    const loader = new dataloader__WEBPACK_IMPORTED_MODULE_0__(loadFn, dataLoaderOptions);\n    return function batchingExecutor(request) {\n        const operationAst = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getOperationASTFromRequest)(request);\n        return operationAst.operation === 'subscription' ? executor(request) : loader.load(request);\n    };\n}\nfunction createLoadFn(executor, extensionsReducer) {\n    return function batchExecuteLoadFn(requests) {\n        if (requests.length === 1) {\n            return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => executor(requests[0]))\n                .then((result) => [result])\n                .catch((err) => [err]);\n        }\n        const execBatches = [];\n        let index = 0;\n        const request = requests[index];\n        let currentBatch = [request];\n        execBatches.push(currentBatch);\n        const operationAst = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getOperationASTFromRequest)(request);\n        const operationType = operationAst.operation;\n        if (operationType == null) {\n            throw new Error('could not identify operation type of document');\n        }\n        while (++index < requests.length) {\n            const currentRequest = requests[index];\n            const currentOperationAST = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getOperationASTFromRequest)(currentRequest);\n            const currentOperationType = currentOperationAST.operation;\n            if (operationType === currentOperationType) {\n                currentBatch.push(currentRequest);\n            }\n            else {\n                currentBatch = [currentRequest];\n                execBatches.push(currentBatch);\n            }\n        }\n        return value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise.all(execBatches.map(execBatch => new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => {\n            const mergedRequests = (0,_mergeRequests_js__WEBPACK_IMPORTED_MODULE_3__.mergeRequests)(execBatch, extensionsReducer);\n            return executor(mergedRequests);\n        }).then(resultBatches => (0,_splitResult_js__WEBPACK_IMPORTED_MODULE_4__.splitResult)(resultBatches, execBatch.length)))).then(results => results.flat());\n    };\n}\nfunction defaultExtensionsReducer(mergedExtensions, request) {\n    const newExtensions = request.extensions;\n    if (newExtensions != null) {\n        Object.assign(mergedExtensions, newExtensions);\n    }\n    return mergedExtensions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL2NyZWF0ZUJhdGNoaW5nRXhlY3V0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW9DO0FBQzhCO0FBQ2Y7QUFDSjtBQUNHO0FBQzNDO0FBQ1A7QUFDQSx1QkFBdUIsdUNBQVU7QUFDakM7QUFDQSw2QkFBNkIsZ0ZBQTBCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qiw0REFBYztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLGdGQUEwQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsZ0ZBQTBCO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsNERBQWMsc0NBQXNDLDREQUFjO0FBQ2pGLG1DQUFtQyxnRUFBYTtBQUNoRDtBQUNBLFNBQVMsd0JBQXdCLDREQUFXO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL2NyZWF0ZUJhdGNoaW5nRXhlY3V0b3IuanM/YzEwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF0YUxvYWRlciBmcm9tICdkYXRhbG9hZGVyJztcbmltcG9ydCB7IGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0IH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgbWVyZ2VSZXF1ZXN0cyB9IGZyb20gJy4vbWVyZ2VSZXF1ZXN0cy5qcyc7XG5pbXBvcnQgeyBzcGxpdFJlc3VsdCB9IGZyb20gJy4vc3BsaXRSZXN1bHQuanMnO1xuaW1wb3J0IHsgVmFsdWVPclByb21pc2UgfSBmcm9tICd2YWx1ZS1vci1wcm9taXNlJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVCYXRjaGluZ0V4ZWN1dG9yKGV4ZWN1dG9yLCBkYXRhTG9hZGVyT3B0aW9ucywgZXh0ZW5zaW9uc1JlZHVjZXIgPSBkZWZhdWx0RXh0ZW5zaW9uc1JlZHVjZXIpIHtcbiAgICBjb25zdCBsb2FkRm4gPSBjcmVhdGVMb2FkRm4oZXhlY3V0b3IsIGV4dGVuc2lvbnNSZWR1Y2VyKTtcbiAgICBjb25zdCBsb2FkZXIgPSBuZXcgRGF0YUxvYWRlcihsb2FkRm4sIGRhdGFMb2FkZXJPcHRpb25zKTtcbiAgICByZXR1cm4gZnVuY3Rpb24gYmF0Y2hpbmdFeGVjdXRvcihyZXF1ZXN0KSB7XG4gICAgICAgIGNvbnN0IG9wZXJhdGlvbkFzdCA9IGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0KHJlcXVlc3QpO1xuICAgICAgICByZXR1cm4gb3BlcmF0aW9uQXN0Lm9wZXJhdGlvbiA9PT0gJ3N1YnNjcmlwdGlvbicgPyBleGVjdXRvcihyZXF1ZXN0KSA6IGxvYWRlci5sb2FkKHJlcXVlc3QpO1xuICAgIH07XG59XG5mdW5jdGlvbiBjcmVhdGVMb2FkRm4oZXhlY3V0b3IsIGV4dGVuc2lvbnNSZWR1Y2VyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGJhdGNoRXhlY3V0ZUxvYWRGbihyZXF1ZXN0cykge1xuICAgICAgICBpZiAocmVxdWVzdHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFZhbHVlT3JQcm9taXNlKCgpID0+IGV4ZWN1dG9yKHJlcXVlc3RzWzBdKSlcbiAgICAgICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiBbcmVzdWx0XSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4gW2Vycl0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGV4ZWNCYXRjaGVzID0gW107XG4gICAgICAgIGxldCBpbmRleCA9IDA7XG4gICAgICAgIGNvbnN0IHJlcXVlc3QgPSByZXF1ZXN0c1tpbmRleF07XG4gICAgICAgIGxldCBjdXJyZW50QmF0Y2ggPSBbcmVxdWVzdF07XG4gICAgICAgIGV4ZWNCYXRjaGVzLnB1c2goY3VycmVudEJhdGNoKTtcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uQXN0ID0gZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QocmVxdWVzdCk7XG4gICAgICAgIGNvbnN0IG9wZXJhdGlvblR5cGUgPSBvcGVyYXRpb25Bc3Qub3BlcmF0aW9uO1xuICAgICAgICBpZiAob3BlcmF0aW9uVHlwZSA9PSBudWxsKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NvdWxkIG5vdCBpZGVudGlmeSBvcGVyYXRpb24gdHlwZSBvZiBkb2N1bWVudCcpO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlICgrK2luZGV4IDwgcmVxdWVzdHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50UmVxdWVzdCA9IHJlcXVlc3RzW2luZGV4XTtcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRPcGVyYXRpb25BU1QgPSBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdChjdXJyZW50UmVxdWVzdCk7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50T3BlcmF0aW9uVHlwZSA9IGN1cnJlbnRPcGVyYXRpb25BU1Qub3BlcmF0aW9uO1xuICAgICAgICAgICAgaWYgKG9wZXJhdGlvblR5cGUgPT09IGN1cnJlbnRPcGVyYXRpb25UeXBlKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudEJhdGNoLnB1c2goY3VycmVudFJlcXVlc3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgY3VycmVudEJhdGNoID0gW2N1cnJlbnRSZXF1ZXN0XTtcbiAgICAgICAgICAgICAgICBleGVjQmF0Y2hlcy5wdXNoKGN1cnJlbnRCYXRjaCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFZhbHVlT3JQcm9taXNlLmFsbChleGVjQmF0Y2hlcy5tYXAoZXhlY0JhdGNoID0+IG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBtZXJnZWRSZXF1ZXN0cyA9IG1lcmdlUmVxdWVzdHMoZXhlY0JhdGNoLCBleHRlbnNpb25zUmVkdWNlcik7XG4gICAgICAgICAgICByZXR1cm4gZXhlY3V0b3IobWVyZ2VkUmVxdWVzdHMpO1xuICAgICAgICB9KS50aGVuKHJlc3VsdEJhdGNoZXMgPT4gc3BsaXRSZXN1bHQocmVzdWx0QmF0Y2hlcywgZXhlY0JhdGNoLmxlbmd0aCkpKSkudGhlbihyZXN1bHRzID0+IHJlc3VsdHMuZmxhdCgpKTtcbiAgICB9O1xufVxuZnVuY3Rpb24gZGVmYXVsdEV4dGVuc2lvbnNSZWR1Y2VyKG1lcmdlZEV4dGVuc2lvbnMsIHJlcXVlc3QpIHtcbiAgICBjb25zdCBuZXdFeHRlbnNpb25zID0gcmVxdWVzdC5leHRlbnNpb25zO1xuICAgIGlmIChuZXdFeHRlbnNpb25zICE9IG51bGwpIHtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihtZXJnZWRFeHRlbnNpb25zLCBuZXdFeHRlbnNpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIG1lcmdlZEV4dGVuc2lvbnM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBatchingExecutor: () => (/* binding */ getBatchingExecutor)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _createBatchingExecutor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createBatchingExecutor.js */ \"(ssr)/../node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js\");\n\n\nconst getBatchingExecutor = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize2of4)(function getBatchingExecutor(_context, executor, dataLoaderOptions, extensionsReducer) {\n    return (0,_createBatchingExecutor_js__WEBPACK_IMPORTED_MODULE_1__.createBatchingExecutor)(executor, dataLoaderOptions, extensionsReducer);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL2dldEJhdGNoaW5nRXhlY3V0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1EO0FBQ2tCO0FBQzlELDRCQUE0QixpRUFBVztBQUM5QyxXQUFXLGtGQUFzQjtBQUNqQyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvYmF0Y2gtZXhlY3V0ZS9lc20vZ2V0QmF0Y2hpbmdFeGVjdXRvci5qcz9kZDExIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lbW9pemUyb2Y0IH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgY3JlYXRlQmF0Y2hpbmdFeGVjdXRvciB9IGZyb20gJy4vY3JlYXRlQmF0Y2hpbmdFeGVjdXRvci5qcyc7XG5leHBvcnQgY29uc3QgZ2V0QmF0Y2hpbmdFeGVjdXRvciA9IG1lbW9pemUyb2Y0KGZ1bmN0aW9uIGdldEJhdGNoaW5nRXhlY3V0b3IoX2NvbnRleHQsIGV4ZWN1dG9yLCBkYXRhTG9hZGVyT3B0aW9ucywgZXh0ZW5zaW9uc1JlZHVjZXIpIHtcbiAgICByZXR1cm4gY3JlYXRlQmF0Y2hpbmdFeGVjdXRvcihleGVjdXRvciwgZGF0YUxvYWRlck9wdGlvbnMsIGV4dGVuc2lvbnNSZWR1Y2VyKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeRequests: () => (/* binding */ mergeRequests)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _prefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prefix.js */ \"(ssr)/../node_modules/@graphql-tools/batch-execute/esm/prefix.js\");\n// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n\n\n\n/**\n * Merge multiple queries into a single query in such a way that query results\n * can be split and transformed as if they were obtained by running original queries.\n *\n * Merging algorithm involves several transformations:\n *  1. Replace top-level fragment spreads with inline fragments (... on Query {})\n *  2. Add unique aliases to all top-level query fields (including those on inline fragments)\n *  3. Prefix all variable definitions and variable usages\n *  4. Prefix names (and spreads) of fragments\n *\n * i.e transform:\n *   [\n *     `query Foo($id: ID!) { foo, bar(id: $id), ...FooQuery }\n *     fragment FooQuery on Query { baz }`,\n *\n *    `query Bar($id: ID!) { foo: baz, bar(id: $id), ... on Query { baz } }`\n *   ]\n * to:\n *   query (\n *     $graphqlTools1_id: ID!\n *     $graphqlTools2_id: ID!\n *   ) {\n *     graphqlTools1_foo: foo,\n *     graphqlTools1_bar: bar(id: $graphqlTools1_id)\n *     ... on Query {\n *       graphqlTools1__baz: baz\n *     }\n *     graphqlTools1__foo: baz\n *     graphqlTools1__bar: bar(id: $graphqlTools1__id)\n *     ... on Query {\n *       graphqlTools1__baz: baz\n *     }\n *   }\n */\nfunction mergeRequests(requests, extensionsReducer) {\n    var _a, _b, _c, _d, _e;\n    const mergedVariables = Object.create(null);\n    const mergedVariableDefinitions = [];\n    const mergedSelections = [];\n    const mergedFragmentDefinitions = [];\n    let mergedExtensions = Object.create(null);\n    for (const index in requests) {\n        const request = requests[index];\n        const prefixedRequests = prefixRequest((0,_prefix_js__WEBPACK_IMPORTED_MODULE_0__.createPrefix)(index), request);\n        for (const def of prefixedRequests.document.definitions) {\n            if (isOperationDefinition(def)) {\n                mergedSelections.push(...def.selectionSet.selections);\n                if (def.variableDefinitions) {\n                    mergedVariableDefinitions.push(...def.variableDefinitions);\n                }\n            }\n            if (isFragmentDefinition(def)) {\n                mergedFragmentDefinitions.push(def);\n            }\n        }\n        Object.assign(mergedVariables, prefixedRequests.variables);\n        mergedExtensions = extensionsReducer(mergedExtensions, request);\n    }\n    const firstRequest = requests[0];\n    const operationType = (_a = firstRequest.operationType) !== null && _a !== void 0 ? _a : (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getOperationASTFromRequest)(firstRequest).operation;\n    const mergedOperationDefinition = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION,\n        operation: operationType,\n        variableDefinitions: mergedVariableDefinitions,\n        selectionSet: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n            selections: mergedSelections,\n        },\n    };\n    const operationName = (_b = firstRequest.operationName) !== null && _b !== void 0 ? _b : (_e = (_d = (_c = firstRequest.info) === null || _c === void 0 ? void 0 : _c.operation) === null || _d === void 0 ? void 0 : _d.name) === null || _e === void 0 ? void 0 : _e.value;\n    if (operationName) {\n        mergedOperationDefinition.name = {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n            value: operationName,\n        };\n    }\n    return {\n        document: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.DOCUMENT,\n            definitions: [mergedOperationDefinition, ...mergedFragmentDefinitions],\n        },\n        variables: mergedVariables,\n        extensions: mergedExtensions,\n        context: requests[0].context,\n        info: requests[0].info,\n        operationType,\n    };\n}\nfunction prefixRequest(prefix, request) {\n    var _a;\n    const executionVariables = (_a = request.variables) !== null && _a !== void 0 ? _a : {};\n    function prefixNode(node) {\n        return prefixNodeName(node, prefix);\n    }\n    let prefixedDocument = aliasTopLevelFields(prefix, request.document);\n    const executionVariableNames = Object.keys(executionVariables);\n    const hasFragmentDefinitions = request.document.definitions.some(def => isFragmentDefinition(def));\n    const fragmentSpreadImpl = {};\n    if (executionVariableNames.length > 0 || hasFragmentDefinitions) {\n        prefixedDocument = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(prefixedDocument, {\n            [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.VARIABLE]: prefixNode,\n            [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION]: prefixNode,\n            [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD]: node => {\n                node = prefixNodeName(node, prefix);\n                fragmentSpreadImpl[node.name.value] = true;\n                return node;\n            },\n        });\n    }\n    const prefixedVariables = {};\n    for (const variableName of executionVariableNames) {\n        prefixedVariables[prefix + variableName] = executionVariables[variableName];\n    }\n    if (hasFragmentDefinitions) {\n        prefixedDocument = {\n            ...prefixedDocument,\n            definitions: prefixedDocument.definitions.filter(def => {\n                return !isFragmentDefinition(def) || fragmentSpreadImpl[def.name.value];\n            }),\n        };\n    }\n    return {\n        document: prefixedDocument,\n        variables: prefixedVariables,\n    };\n}\n/**\n * Adds prefixed aliases to top-level fields of the query.\n *\n * @see aliasFieldsInSelection for implementation details\n */\nfunction aliasTopLevelFields(prefix, document) {\n    const transformer = {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION]: (def) => {\n            const { selections } = def.selectionSet;\n            return {\n                ...def,\n                selectionSet: {\n                    ...def.selectionSet,\n                    selections: aliasFieldsInSelection(prefix, selections, document),\n                },\n            };\n        },\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(document, transformer, {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.DOCUMENT]: [`definitions`],\n    });\n}\n/**\n * Add aliases to fields of the selection, including top-level fields of inline fragments.\n * Fragment spreads are converted to inline fragments and their top-level fields are also aliased.\n *\n * Note that this method is shallow. It adds aliases only to the top-level fields and doesn't\n * descend to field sub-selections.\n *\n * For example, transforms:\n *   {\n *     foo\n *     ... on Query { foo }\n *     ...FragmentWithBarField\n *   }\n * To:\n *   {\n *     graphqlTools1_foo: foo\n *     ... on Query { graphqlTools1_foo: foo }\n *     ... on Query { graphqlTools1_bar: bar }\n *   }\n */\nfunction aliasFieldsInSelection(prefix, selections, document) {\n    return selections.map(selection => {\n        switch (selection.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT:\n                return aliasFieldsInInlineFragment(prefix, selection, document);\n            case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD: {\n                const inlineFragment = inlineFragmentSpread(selection, document);\n                return aliasFieldsInInlineFragment(prefix, inlineFragment, document);\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD:\n            default:\n                return aliasField(selection, prefix);\n        }\n    });\n}\n/**\n * Add aliases to top-level fields of the inline fragment.\n * Returns new inline fragment node.\n *\n * For Example, transforms:\n *   ... on Query { foo, ... on Query { bar: foo } }\n * To\n *   ... on Query { graphqlTools1_foo: foo, ... on Query { graphqlTools1_bar: foo } }\n */\nfunction aliasFieldsInInlineFragment(prefix, fragment, document) {\n    const { selections } = fragment.selectionSet;\n    return {\n        ...fragment,\n        selectionSet: {\n            ...fragment.selectionSet,\n            selections: aliasFieldsInSelection(prefix, selections, document),\n        },\n    };\n}\n/**\n * Replaces fragment spread with inline fragment\n *\n * Example:\n *   query { ...Spread }\n *   fragment Spread on Query { bar }\n *\n * Transforms to:\n *   query { ... on Query { bar } }\n */\nfunction inlineFragmentSpread(spread, document) {\n    const fragment = document.definitions.find(def => isFragmentDefinition(def) && def.name.value === spread.name.value);\n    if (!fragment) {\n        throw new Error(`Fragment ${spread.name.value} does not exist`);\n    }\n    const { typeCondition, selectionSet } = fragment;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT,\n        typeCondition,\n        selectionSet,\n        directives: spread.directives,\n    };\n}\nfunction prefixNodeName(namedNode, prefix) {\n    return {\n        ...namedNode,\n        name: {\n            ...namedNode.name,\n            value: prefix + namedNode.name.value,\n        },\n    };\n}\n/**\n * Returns a new FieldNode with prefixed alias\n *\n * Example. Given prefix === \"graphqlTools1_\" transforms:\n *   { foo } -> { graphqlTools1_foo: foo }\n *   { foo: bar } -> { graphqlTools1_foo: bar }\n */\nfunction aliasField(field, aliasPrefix) {\n    const aliasNode = field.alias ? field.alias : field.name;\n    return {\n        ...field,\n        alias: {\n            ...aliasNode,\n            value: aliasPrefix + aliasNode.value,\n        },\n    };\n}\nfunction isOperationDefinition(def) {\n    return def.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION;\n}\nfunction isFragmentDefinition(def) {\n    return def.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-execute/esm/prefix.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-execute/esm/prefix.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPrefix: () => (/* binding */ createPrefix),\n/* harmony export */   parseKey: () => (/* binding */ parseKey)\n/* harmony export */ });\n// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\nfunction createPrefix(index) {\n    return `_${index}_`;\n}\nfunction parseKey(prefixedKey) {\n    const match = /^_([\\d]+)_(.*)$/.exec(prefixedKey);\n    if (match && match.length === 3 && !isNaN(Number(match[1])) && match[2]) {\n        return { index: Number(match[1]), originalKey: match[2] };\n    }\n    throw new Error(`Key ${prefixedKey} is not correctly prefixed`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL3ByZWZpeC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ087QUFDUCxlQUFlLE1BQU07QUFDckI7QUFDTztBQUNQO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSwyQkFBMkIsYUFBYTtBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL3ByZWZpeC5qcz81NGZjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZ2F0c2J5anMvZ2F0c2J5L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2dhdHNieS1zb3VyY2UtZ3JhcGhxbC9zcmMvYmF0Y2hpbmcvbWVyZ2UtcXVlcmllcy5qc1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByZWZpeChpbmRleCkge1xuICAgIHJldHVybiBgXyR7aW5kZXh9X2A7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VLZXkocHJlZml4ZWRLZXkpIHtcbiAgICBjb25zdCBtYXRjaCA9IC9eXyhbXFxkXSspXyguKikkLy5leGVjKHByZWZpeGVkS2V5KTtcbiAgICBpZiAobWF0Y2ggJiYgbWF0Y2gubGVuZ3RoID09PSAzICYmICFpc05hTihOdW1iZXIobWF0Y2hbMV0pKSAmJiBtYXRjaFsyXSkge1xuICAgICAgICByZXR1cm4geyBpbmRleDogTnVtYmVyKG1hdGNoWzFdKSwgb3JpZ2luYWxLZXk6IG1hdGNoWzJdIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgS2V5ICR7cHJlZml4ZWRLZXl9IGlzIG5vdCBjb3JyZWN0bHkgcHJlZml4ZWRgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-execute/esm/prefix.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/batch-execute/esm/splitResult.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@graphql-tools/batch-execute/esm/splitResult.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitResult: () => (/* binding */ splitResult)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _prefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prefix.js */ \"(ssr)/../node_modules/@graphql-tools/batch-execute/esm/prefix.js\");\n// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n\n\n/**\n * Split and transform result of the query produced by the `merge` function\n */\nfunction splitResult({ data, errors }, numResults) {\n    const splitResults = [];\n    for (let i = 0; i < numResults; i++) {\n        splitResults.push({});\n    }\n    if (data) {\n        for (const prefixedKey in data) {\n            const { index, originalKey } = (0,_prefix_js__WEBPACK_IMPORTED_MODULE_0__.parseKey)(prefixedKey);\n            const result = splitResults[index];\n            if (result == null) {\n                continue;\n            }\n            if (result.data == null) {\n                result.data = { [originalKey]: data[prefixedKey] };\n            }\n            else {\n                result.data[originalKey] = data[prefixedKey];\n            }\n        }\n    }\n    if (errors) {\n        for (const error of errors) {\n            if (error.path) {\n                const parsedKey = (0,_prefix_js__WEBPACK_IMPORTED_MODULE_0__.parseKey)(error.path[0]);\n                const { index, originalKey } = parsedKey;\n                const newError = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.relocatedError)(error, [originalKey, ...error.path.slice(1)]);\n                const resultErrors = (splitResults[index].errors = (splitResults[index].errors || []));\n                resultErrors.push(newError);\n            }\n            else {\n                splitResults.forEach(result => {\n                    const resultErrors = (result.errors = (result.errors || []));\n                    resultErrors.push(error);\n                });\n            }\n        }\n    }\n    return splitResults;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL3NwbGl0UmVzdWx0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ3NEO0FBQ2Y7QUFDdkM7QUFDQTtBQUNBO0FBQ08sdUJBQXVCLGNBQWM7QUFDNUM7QUFDQSxvQkFBb0IsZ0JBQWdCO0FBQ3BDLDRCQUE0QjtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUJBQXFCLEVBQUUsb0RBQVE7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0Msb0RBQVE7QUFDMUMsd0JBQXdCLHFCQUFxQjtBQUM3QyxpQ0FBaUMsb0VBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL3NwbGl0UmVzdWx0LmpzP2M3ZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9nYXRzYnlqcy9nYXRzYnkvYmxvYi9tYXN0ZXIvcGFja2FnZXMvZ2F0c2J5LXNvdXJjZS1ncmFwaHFsL3NyYy9iYXRjaGluZy9tZXJnZS1xdWVyaWVzLmpzXG5pbXBvcnQgeyByZWxvY2F0ZWRFcnJvciB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IHBhcnNlS2V5IH0gZnJvbSAnLi9wcmVmaXguanMnO1xuLyoqXG4gKiBTcGxpdCBhbmQgdHJhbnNmb3JtIHJlc3VsdCBvZiB0aGUgcXVlcnkgcHJvZHVjZWQgYnkgdGhlIGBtZXJnZWAgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0UmVzdWx0KHsgZGF0YSwgZXJyb3JzIH0sIG51bVJlc3VsdHMpIHtcbiAgICBjb25zdCBzcGxpdFJlc3VsdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bVJlc3VsdHM7IGkrKykge1xuICAgICAgICBzcGxpdFJlc3VsdHMucHVzaCh7fSk7XG4gICAgfVxuICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGZvciAoY29uc3QgcHJlZml4ZWRLZXkgaW4gZGF0YSkge1xuICAgICAgICAgICAgY29uc3QgeyBpbmRleCwgb3JpZ2luYWxLZXkgfSA9IHBhcnNlS2V5KHByZWZpeGVkS2V5KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHNwbGl0UmVzdWx0c1tpbmRleF07XG4gICAgICAgICAgICBpZiAocmVzdWx0ID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmRhdGEgPSB7IFtvcmlnaW5hbEtleV06IGRhdGFbcHJlZml4ZWRLZXldIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN1bHQuZGF0YVtvcmlnaW5hbEtleV0gPSBkYXRhW3ByZWZpeGVkS2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZXJyb3JzKSB7XG4gICAgICAgIGZvciAoY29uc3QgZXJyb3Igb2YgZXJyb3JzKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IucGF0aCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZEtleSA9IHBhcnNlS2V5KGVycm9yLnBhdGhbMF0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgaW5kZXgsIG9yaWdpbmFsS2V5IH0gPSBwYXJzZWRLZXk7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3RXJyb3IgPSByZWxvY2F0ZWRFcnJvcihlcnJvciwgW29yaWdpbmFsS2V5LCAuLi5lcnJvci5wYXRoLnNsaWNlKDEpXSk7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0RXJyb3JzID0gKHNwbGl0UmVzdWx0c1tpbmRleF0uZXJyb3JzID0gKHNwbGl0UmVzdWx0c1tpbmRleF0uZXJyb3JzIHx8IFtdKSk7XG4gICAgICAgICAgICAgICAgcmVzdWx0RXJyb3JzLnB1c2gobmV3RXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgc3BsaXRSZXN1bHRzLmZvckVhY2gocmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0RXJyb3JzID0gKHJlc3VsdC5lcnJvcnMgPSAocmVzdWx0LmVycm9ycyB8fCBbXSkpO1xuICAgICAgICAgICAgICAgICAgICByZXN1bHRFcnJvcnMucHVzaChlcnJvcik7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHNwbGl0UmVzdWx0cztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/batch-execute/esm/splitResult.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/OverlappingAliasesTransform.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/OverlappingAliasesTransform.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OverlappingAliasesTransform: () => (/* binding */ OverlappingAliasesTransform)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nconst OverlappingAliases = Symbol('OverlappingAliases');\nclass OverlappingAliasesTransform {\n    transformRequest(request, delegationContext, transformationContext) {\n        const newDocument = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(request.document, {\n            [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET]: node => {\n                const seenNonNullable = new Set();\n                const seenNullable = new Set();\n                return {\n                    ...node,\n                    selections: node.selections.map(selection => {\n                        if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT) {\n                            const selectionTypeName = selection.typeCondition?.name.value;\n                            if (selectionTypeName) {\n                                const selectionType = delegationContext.transformedSchema.getType(selectionTypeName);\n                                if (selectionType && 'getFields' in selectionType) {\n                                    const selectionTypeFields = selectionType.getFields();\n                                    return {\n                                        ...selection,\n                                        selectionSet: {\n                                            ...selection.selectionSet,\n                                            selections: selection.selectionSet.selections.map(subSelection => {\n                                                if (subSelection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD) {\n                                                    const fieldName = subSelection.name.value;\n                                                    if (!subSelection.alias) {\n                                                        const field = selectionTypeFields[fieldName];\n                                                        if (field) {\n                                                            let currentNullable;\n                                                            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNullableType)(field.type)) {\n                                                                seenNullable.add(fieldName);\n                                                                currentNullable = true;\n                                                            }\n                                                            else {\n                                                                seenNonNullable.add(fieldName);\n                                                                currentNullable = false;\n                                                            }\n                                                            if (seenNullable.has(fieldName) && seenNonNullable.has(fieldName)) {\n                                                                transformationContext[OverlappingAliases] = true;\n                                                                return {\n                                                                    ...subSelection,\n                                                                    alias: {\n                                                                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                                                        value: currentNullable\n                                                                            ? `_nullable_${fieldName}`\n                                                                            : `_nonNullable_${fieldName}`,\n                                                                    },\n                                                                };\n                                                            }\n                                                        }\n                                                    }\n                                                }\n                                                return subSelection;\n                                            }),\n                                        },\n                                    };\n                                }\n                            }\n                        }\n                        return selection;\n                    }),\n                };\n            },\n        });\n        return {\n            ...request,\n            document: newDocument,\n        };\n    }\n    transformResult(result, _delegationContext, transformationContext) {\n        if (transformationContext[OverlappingAliases]) {\n            return removeOverlappingAliases(result);\n        }\n        return result;\n    }\n}\nfunction removeOverlappingAliases(result) {\n    if (result != null) {\n        if (Array.isArray(result)) {\n            return result.map(removeOverlappingAliases);\n        }\n        else if (typeof result === 'object') {\n            const newResult = {};\n            for (const key in result) {\n                if (key.startsWith('_nullable_') || key.startsWith('_nonNullable_')) {\n                    const newKey = key.replace(/^_nullable_/, '').replace(/^_nonNullable_/, '');\n                    newResult[newKey] = removeOverlappingAliases(result[key]);\n                }\n                else {\n                    newResult[key] = removeOverlappingAliases(result[key]);\n                }\n            }\n            return newResult;\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/OverlappingAliasesTransform.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/Subschema.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/Subschema.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subschema: () => (/* binding */ Subschema),\n/* harmony export */   isSubschema: () => (/* binding */ isSubschema)\n/* harmony export */ });\n/* harmony import */ var _applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./applySchemaTransforms.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n\nfunction isSubschema(value) {\n    return Boolean(value.transformedSchema);\n}\nclass Subschema {\n    name;\n    schema;\n    executor;\n    batch;\n    batchingOptions;\n    createProxyingResolver;\n    transforms;\n    _transformedSchema;\n    merge;\n    constructor(config) {\n        this.name = config.name;\n        this.schema = config.schema;\n        this.executor = config.executor;\n        this.batch = config.batch;\n        this.batchingOptions = config.batchingOptions;\n        this.createProxyingResolver = config.createProxyingResolver;\n        this.transforms = config.transforms ?? [];\n        this.merge = config.merge;\n    }\n    get transformedSchema() {\n        if (!this._transformedSchema) {\n            if (globalThis.process?.env?.['DEBUG'] != null) {\n                console.warn('Transformed schema is not set yet. Returning a dummy one.');\n            }\n            this._transformedSchema = (0,_applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_0__.applySchemaTransforms)(this.schema, this);\n        }\n        return this._transformedSchema;\n    }\n    set transformedSchema(value) {\n        this._transformedSchema = value;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9TdWJzY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQW1FO0FBQzVEO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGdGQUFxQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9TdWJzY2hlbWEuanM/MjgyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcHBseVNjaGVtYVRyYW5zZm9ybXMgfSBmcm9tICcuL2FwcGx5U2NoZW1hVHJhbnNmb3Jtcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gaXNTdWJzY2hlbWEodmFsdWUpIHtcbiAgICByZXR1cm4gQm9vbGVhbih2YWx1ZS50cmFuc2Zvcm1lZFNjaGVtYSk7XG59XG5leHBvcnQgY2xhc3MgU3Vic2NoZW1hIHtcbiAgICBuYW1lO1xuICAgIHNjaGVtYTtcbiAgICBleGVjdXRvcjtcbiAgICBiYXRjaDtcbiAgICBiYXRjaGluZ09wdGlvbnM7XG4gICAgY3JlYXRlUHJveHlpbmdSZXNvbHZlcjtcbiAgICB0cmFuc2Zvcm1zO1xuICAgIF90cmFuc2Zvcm1lZFNjaGVtYTtcbiAgICBtZXJnZTtcbiAgICBjb25zdHJ1Y3Rvcihjb25maWcpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gY29uZmlnLm5hbWU7XG4gICAgICAgIHRoaXMuc2NoZW1hID0gY29uZmlnLnNjaGVtYTtcbiAgICAgICAgdGhpcy5leGVjdXRvciA9IGNvbmZpZy5leGVjdXRvcjtcbiAgICAgICAgdGhpcy5iYXRjaCA9IGNvbmZpZy5iYXRjaDtcbiAgICAgICAgdGhpcy5iYXRjaGluZ09wdGlvbnMgPSBjb25maWcuYmF0Y2hpbmdPcHRpb25zO1xuICAgICAgICB0aGlzLmNyZWF0ZVByb3h5aW5nUmVzb2x2ZXIgPSBjb25maWcuY3JlYXRlUHJveHlpbmdSZXNvbHZlcjtcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1zID0gY29uZmlnLnRyYW5zZm9ybXMgPz8gW107XG4gICAgICAgIHRoaXMubWVyZ2UgPSBjb25maWcubWVyZ2U7XG4gICAgfVxuICAgIGdldCB0cmFuc2Zvcm1lZFNjaGVtYSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLl90cmFuc2Zvcm1lZFNjaGVtYSkge1xuICAgICAgICAgICAgaWYgKGdsb2JhbFRoaXMucHJvY2Vzcz8uZW52Py5bJ0RFQlVHJ10gIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybignVHJhbnNmb3JtZWQgc2NoZW1hIGlzIG5vdCBzZXQgeWV0LiBSZXR1cm5pbmcgYSBkdW1teSBvbmUuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl90cmFuc2Zvcm1lZFNjaGVtYSA9IGFwcGx5U2NoZW1hVHJhbnNmb3Jtcyh0aGlzLnNjaGVtYSwgdGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuX3RyYW5zZm9ybWVkU2NoZW1hO1xuICAgIH1cbiAgICBzZXQgdHJhbnNmb3JtZWRTY2hlbWEodmFsdWUpIHtcbiAgICAgICAgdGhpcy5fdHJhbnNmb3JtZWRTY2hlbWEgPSB2YWx1ZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/Subschema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/Transformer.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/Transformer.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Transformer: () => (/* binding */ Transformer)\n/* harmony export */ });\n/* harmony import */ var _checkResultAndHandleErrors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkResultAndHandleErrors.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js\");\n/* harmony import */ var _finalizeGatewayRequest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./finalizeGatewayRequest.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js\");\n/* harmony import */ var _OverlappingAliasesTransform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OverlappingAliasesTransform.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/OverlappingAliasesTransform.js\");\n/* harmony import */ var _prepareGatewayDocument_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./prepareGatewayDocument.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js\");\n\n\n\n\nclass Transformer {\n    transformations = [];\n    delegationContext;\n    constructor(context) {\n        this.delegationContext = context;\n        const transforms = context.transforms;\n        const delegationTransforms = transforms.slice().reverse();\n        for (const transform of delegationTransforms) {\n            this.addTransform(transform);\n        }\n        // TODO: Move this to the core, later\n        this.addTransform(new _OverlappingAliasesTransform_js__WEBPACK_IMPORTED_MODULE_0__.OverlappingAliasesTransform());\n    }\n    addTransform(transform, context = {}) {\n        this.transformations.push({ transform, context });\n    }\n    transformRequest(originalRequest) {\n        let request = {\n            ...originalRequest,\n            document: (0,_prepareGatewayDocument_js__WEBPACK_IMPORTED_MODULE_1__.prepareGatewayDocument)(originalRequest.document, this.delegationContext.transformedSchema, this.delegationContext.returnType, this.delegationContext.info?.schema),\n        };\n        for (const transformation of this.transformations) {\n            if (transformation.transform.transformRequest) {\n                request = transformation.transform.transformRequest(request, this.delegationContext, transformation.context);\n            }\n        }\n        return (0,_finalizeGatewayRequest_js__WEBPACK_IMPORTED_MODULE_2__.finalizeGatewayRequest)(request, this.delegationContext);\n    }\n    transformResult(originalResult) {\n        let result = originalResult;\n        // from right to left\n        for (let i = this.transformations.length - 1; i >= 0; i--) {\n            const transformation = this.transformations[i];\n            if (transformation.transform.transformResult) {\n                result = transformation.transform.transformResult(result, this.delegationContext, transformation.context);\n            }\n        }\n        return (0,_checkResultAndHandleErrors_js__WEBPACK_IMPORTED_MODULE_3__.checkResultAndHandleErrors)(result, this.delegationContext);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9UcmFuc2Zvcm1lci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RTtBQUNSO0FBQ1U7QUFDVjtBQUM5RDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHdGQUEyQjtBQUN6RDtBQUNBLHdDQUF3QztBQUN4QyxvQ0FBb0Msb0JBQW9CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtGQUFzQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGtGQUFzQjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxRQUFRO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDBGQUEwQjtBQUN6QztBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL1RyYW5zZm9ybWVyLmpzPzE5YTYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMgfSBmcm9tICcuL2NoZWNrUmVzdWx0QW5kSGFuZGxlRXJyb3JzLmpzJztcbmltcG9ydCB7IGZpbmFsaXplR2F0ZXdheVJlcXVlc3QgfSBmcm9tICcuL2ZpbmFsaXplR2F0ZXdheVJlcXVlc3QuanMnO1xuaW1wb3J0IHsgT3ZlcmxhcHBpbmdBbGlhc2VzVHJhbnNmb3JtIH0gZnJvbSAnLi9PdmVybGFwcGluZ0FsaWFzZXNUcmFuc2Zvcm0uanMnO1xuaW1wb3J0IHsgcHJlcGFyZUdhdGV3YXlEb2N1bWVudCB9IGZyb20gJy4vcHJlcGFyZUdhdGV3YXlEb2N1bWVudC5qcyc7XG5leHBvcnQgY2xhc3MgVHJhbnNmb3JtZXIge1xuICAgIHRyYW5zZm9ybWF0aW9ucyA9IFtdO1xuICAgIGRlbGVnYXRpb25Db250ZXh0O1xuICAgIGNvbnN0cnVjdG9yKGNvbnRleHQpIHtcbiAgICAgICAgdGhpcy5kZWxlZ2F0aW9uQ29udGV4dCA9IGNvbnRleHQ7XG4gICAgICAgIGNvbnN0IHRyYW5zZm9ybXMgPSBjb250ZXh0LnRyYW5zZm9ybXM7XG4gICAgICAgIGNvbnN0IGRlbGVnYXRpb25UcmFuc2Zvcm1zID0gdHJhbnNmb3Jtcy5zbGljZSgpLnJldmVyc2UoKTtcbiAgICAgICAgZm9yIChjb25zdCB0cmFuc2Zvcm0gb2YgZGVsZWdhdGlvblRyYW5zZm9ybXMpIHtcbiAgICAgICAgICAgIHRoaXMuYWRkVHJhbnNmb3JtKHRyYW5zZm9ybSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gVE9ETzogTW92ZSB0aGlzIHRvIHRoZSBjb3JlLCBsYXRlclxuICAgICAgICB0aGlzLmFkZFRyYW5zZm9ybShuZXcgT3ZlcmxhcHBpbmdBbGlhc2VzVHJhbnNmb3JtKCkpO1xuICAgIH1cbiAgICBhZGRUcmFuc2Zvcm0odHJhbnNmb3JtLCBjb250ZXh0ID0ge30pIHtcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1hdGlvbnMucHVzaCh7IHRyYW5zZm9ybSwgY29udGV4dCB9KTtcbiAgICB9XG4gICAgdHJhbnNmb3JtUmVxdWVzdChvcmlnaW5hbFJlcXVlc3QpIHtcbiAgICAgICAgbGV0IHJlcXVlc3QgPSB7XG4gICAgICAgICAgICAuLi5vcmlnaW5hbFJlcXVlc3QsXG4gICAgICAgICAgICBkb2N1bWVudDogcHJlcGFyZUdhdGV3YXlEb2N1bWVudChvcmlnaW5hbFJlcXVlc3QuZG9jdW1lbnQsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQudHJhbnNmb3JtZWRTY2hlbWEsIHRoaXMuZGVsZWdhdGlvbkNvbnRleHQucmV0dXJuVHlwZSwgdGhpcy5kZWxlZ2F0aW9uQ29udGV4dC5pbmZvPy5zY2hlbWEpLFxuICAgICAgICB9O1xuICAgICAgICBmb3IgKGNvbnN0IHRyYW5zZm9ybWF0aW9uIG9mIHRoaXMudHJhbnNmb3JtYXRpb25zKSB7XG4gICAgICAgICAgICBpZiAodHJhbnNmb3JtYXRpb24udHJhbnNmb3JtLnRyYW5zZm9ybVJlcXVlc3QpIHtcbiAgICAgICAgICAgICAgICByZXF1ZXN0ID0gdHJhbnNmb3JtYXRpb24udHJhbnNmb3JtLnRyYW5zZm9ybVJlcXVlc3QocmVxdWVzdCwgdGhpcy5kZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb24uY29udGV4dCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbmFsaXplR2F0ZXdheVJlcXVlc3QocmVxdWVzdCwgdGhpcy5kZWxlZ2F0aW9uQ29udGV4dCk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlc3VsdChvcmlnaW5hbFJlc3VsdCkge1xuICAgICAgICBsZXQgcmVzdWx0ID0gb3JpZ2luYWxSZXN1bHQ7XG4gICAgICAgIC8vIGZyb20gcmlnaHQgdG8gbGVmdFxuICAgICAgICBmb3IgKGxldCBpID0gdGhpcy50cmFuc2Zvcm1hdGlvbnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICAgICAgICAgIGNvbnN0IHRyYW5zZm9ybWF0aW9uID0gdGhpcy50cmFuc2Zvcm1hdGlvbnNbaV07XG4gICAgICAgICAgICBpZiAodHJhbnNmb3JtYXRpb24udHJhbnNmb3JtLnRyYW5zZm9ybVJlc3VsdCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdCA9IHRyYW5zZm9ybWF0aW9uLnRyYW5zZm9ybS50cmFuc2Zvcm1SZXN1bHQocmVzdWx0LCB0aGlzLmRlbGVnYXRpb25Db250ZXh0LCB0cmFuc2Zvcm1hdGlvbi5jb250ZXh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gY2hlY2tSZXN1bHRBbmRIYW5kbGVFcnJvcnMocmVzdWx0LCB0aGlzLmRlbGVnYXRpb25Db250ZXh0KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/Transformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applySchemaTransforms: () => (/* binding */ applySchemaTransforms)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n// TODO: Instead of memoization, we can make sure that this isn't called multiple times\nconst applySchemaTransforms = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize2)(function applySchemaTransforms(originalWrappingSchema, subschemaConfig) {\n    const schemaTransforms = subschemaConfig.transforms;\n    if (schemaTransforms == null) {\n        return originalWrappingSchema;\n    }\n    return schemaTransforms.reduce((schema, transform) => transform.transformSchema?.(schema, subschemaConfig) || schema, originalWrappingSchema);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9hcHBseVNjaGVtYVRyYW5zZm9ybXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7QUFDaEQ7QUFDTyw4QkFBOEIsOERBQVE7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vYXBwbHlTY2hlbWFUcmFuc2Zvcm1zLmpzPzI5NTQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVtb2l6ZTIgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG4vLyBUT0RPOiBJbnN0ZWFkIG9mIG1lbW9pemF0aW9uLCB3ZSBjYW4gbWFrZSBzdXJlIHRoYXQgdGhpcyBpc24ndCBjYWxsZWQgbXVsdGlwbGUgdGltZXNcbmV4cG9ydCBjb25zdCBhcHBseVNjaGVtYVRyYW5zZm9ybXMgPSBtZW1vaXplMihmdW5jdGlvbiBhcHBseVNjaGVtYVRyYW5zZm9ybXMob3JpZ2luYWxXcmFwcGluZ1NjaGVtYSwgc3Vic2NoZW1hQ29uZmlnKSB7XG4gICAgY29uc3Qgc2NoZW1hVHJhbnNmb3JtcyA9IHN1YnNjaGVtYUNvbmZpZy50cmFuc2Zvcm1zO1xuICAgIGlmIChzY2hlbWFUcmFuc2Zvcm1zID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsV3JhcHBpbmdTY2hlbWE7XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWFUcmFuc2Zvcm1zLnJlZHVjZSgoc2NoZW1hLCB0cmFuc2Zvcm0pID0+IHRyYW5zZm9ybS50cmFuc2Zvcm1TY2hlbWE/LihzY2hlbWEsIHN1YnNjaGVtYUNvbmZpZykgfHwgc2NoZW1hLCBvcmlnaW5hbFdyYXBwaW5nU2NoZW1hKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkResultAndHandleErrors: () => (/* binding */ checkResultAndHandleErrors),\n/* harmony export */   mergeDataAndErrors: () => (/* binding */ mergeDataAndErrors)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/jsutils/Path.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\");\n/* harmony import */ var _resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./resolveExternalValue.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\");\n\n\n\nfunction checkResultAndHandleErrors(\n// TODO: investigate the reason\nresult = {\n    data: null,\n    errors: [],\n}, delegationContext) {\n    const { context, info, fieldName: responseKey = getResponseKey(info), subschema, returnType = getReturnType(info), skipTypeMerging, onLocatedError, } = delegationContext;\n    const { data, unpathedErrors } = mergeDataAndErrors(result.data == null ? undefined : result.data[responseKey], result.errors == null ? [] : result.errors, info != null && info.path ? (0,graphql__WEBPACK_IMPORTED_MODULE_0__.pathToArray)(info.path) : undefined, onLocatedError);\n    return (0,_resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_1__.resolveExternalValue)(data, unpathedErrors, subschema, context, info, returnType, skipTypeMerging);\n}\nfunction mergeDataAndErrors(data, errors, path, onLocatedError, index = 1) {\n    if (data == null) {\n        if (!errors.length) {\n            return { data: null, unpathedErrors: [] };\n        }\n        if (errors.length === 1) {\n            const error = onLocatedError ? onLocatedError(errors[0]) : errors[0];\n            const newPath = path === undefined ? error.path : !error.path ? path : path.concat(error.path.slice(1));\n            return { data: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.relocatedError)(errors[0], newPath), unpathedErrors: [] };\n        }\n        const combinedError = new AggregateError(errors.map(e => \n        // We cast path as any for GraphQL.js 14 compat\n        // locatedError path argument must be defined, but it is just forwarded to a constructor that allows a undefined value\n        // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/locatedError.js#L25\n        // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/GraphQLError.js#L19\n        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.locatedError)(e, undefined, path)), errors.map(error => error.message).join(', \\n'));\n        return { data: combinedError, unpathedErrors: [] };\n    }\n    if (!errors.length) {\n        return { data, unpathedErrors: [] };\n    }\n    const unpathedErrors = [];\n    const errorMap = new Map();\n    for (const error of errors) {\n        const pathSegment = error.path?.[index];\n        if (pathSegment != null) {\n            let pathSegmentErrors = errorMap.get(pathSegment);\n            if (pathSegmentErrors === undefined) {\n                pathSegmentErrors = [error];\n                errorMap.set(pathSegment, pathSegmentErrors);\n            }\n            else {\n                pathSegmentErrors.push(error);\n            }\n        }\n        else {\n            unpathedErrors.push(error);\n        }\n    }\n    for (const [pathSegment, pathSegmentErrors] of errorMap) {\n        if (data[pathSegment] !== undefined) {\n            const { data: newData, unpathedErrors: newErrors } = mergeDataAndErrors(data[pathSegment], pathSegmentErrors, path, onLocatedError, index + 1);\n            data[pathSegment] = newData;\n            unpathedErrors.push(...newErrors);\n        }\n        else {\n            unpathedErrors.push(...pathSegmentErrors);\n        }\n    }\n    return { data, unpathedErrors };\n}\nfunction getResponseKey(info) {\n    if (info == null) {\n        throw new Error(`Data cannot be extracted from result without an explicit key or source schema.`);\n    }\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.getResponseKeyFromInfo)(info);\n}\nfunction getReturnType(info) {\n    if (info == null) {\n        throw new Error(`Return type cannot be inferred without a source schema.`);\n    }\n    return info.returnType;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9jaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQTZEO0FBQ2lCO0FBQ2I7QUFDMUQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxZQUFZLDhJQUE4STtBQUMxSixZQUFZLHVCQUF1Qix5SkFBeUosb0RBQW1CO0FBQy9NLFdBQVcsOEVBQW9CO0FBQy9CO0FBQ087QUFDUDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLE1BQU0sb0VBQWM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxxREFBWTtBQUNwQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsMkNBQTJDO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDRFQUFzQjtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9jaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycy5qcz9kYjYxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvY2F0ZWRFcnJvciwgcmVzcG9uc2VQYXRoQXNBcnJheSwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGdldFJlc3BvbnNlS2V5RnJvbUluZm8sIHJlbG9jYXRlZEVycm9yIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgcmVzb2x2ZUV4dGVybmFsVmFsdWUgfSBmcm9tICcuL3Jlc29sdmVFeHRlcm5hbFZhbHVlLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBjaGVja1Jlc3VsdEFuZEhhbmRsZUVycm9ycyhcbi8vIFRPRE86IGludmVzdGlnYXRlIHRoZSByZWFzb25cbnJlc3VsdCA9IHtcbiAgICBkYXRhOiBudWxsLFxuICAgIGVycm9yczogW10sXG59LCBkZWxlZ2F0aW9uQ29udGV4dCkge1xuICAgIGNvbnN0IHsgY29udGV4dCwgaW5mbywgZmllbGROYW1lOiByZXNwb25zZUtleSA9IGdldFJlc3BvbnNlS2V5KGluZm8pLCBzdWJzY2hlbWEsIHJldHVyblR5cGUgPSBnZXRSZXR1cm5UeXBlKGluZm8pLCBza2lwVHlwZU1lcmdpbmcsIG9uTG9jYXRlZEVycm9yLCB9ID0gZGVsZWdhdGlvbkNvbnRleHQ7XG4gICAgY29uc3QgeyBkYXRhLCB1bnBhdGhlZEVycm9ycyB9ID0gbWVyZ2VEYXRhQW5kRXJyb3JzKHJlc3VsdC5kYXRhID09IG51bGwgPyB1bmRlZmluZWQgOiByZXN1bHQuZGF0YVtyZXNwb25zZUtleV0sIHJlc3VsdC5lcnJvcnMgPT0gbnVsbCA/IFtdIDogcmVzdWx0LmVycm9ycywgaW5mbyAhPSBudWxsICYmIGluZm8ucGF0aCA/IHJlc3BvbnNlUGF0aEFzQXJyYXkoaW5mby5wYXRoKSA6IHVuZGVmaW5lZCwgb25Mb2NhdGVkRXJyb3IpO1xuICAgIHJldHVybiByZXNvbHZlRXh0ZXJuYWxWYWx1ZShkYXRhLCB1bnBhdGhlZEVycm9ycywgc3Vic2NoZW1hLCBjb250ZXh0LCBpbmZvLCByZXR1cm5UeXBlLCBza2lwVHlwZU1lcmdpbmcpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGF0YUFuZEVycm9ycyhkYXRhLCBlcnJvcnMsIHBhdGgsIG9uTG9jYXRlZEVycm9yLCBpbmRleCA9IDEpIHtcbiAgICBpZiAoZGF0YSA9PSBudWxsKSB7XG4gICAgICAgIGlmICghZXJyb3JzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIHsgZGF0YTogbnVsbCwgdW5wYXRoZWRFcnJvcnM6IFtdIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGVycm9ycy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgICAgIGNvbnN0IGVycm9yID0gb25Mb2NhdGVkRXJyb3IgPyBvbkxvY2F0ZWRFcnJvcihlcnJvcnNbMF0pIDogZXJyb3JzWzBdO1xuICAgICAgICAgICAgY29uc3QgbmV3UGF0aCA9IHBhdGggPT09IHVuZGVmaW5lZCA/IGVycm9yLnBhdGggOiAhZXJyb3IucGF0aCA/IHBhdGggOiBwYXRoLmNvbmNhdChlcnJvci5wYXRoLnNsaWNlKDEpKTtcbiAgICAgICAgICAgIHJldHVybiB7IGRhdGE6IHJlbG9jYXRlZEVycm9yKGVycm9yc1swXSwgbmV3UGF0aCksIHVucGF0aGVkRXJyb3JzOiBbXSB9O1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGNvbWJpbmVkRXJyb3IgPSBuZXcgQWdncmVnYXRlRXJyb3IoZXJyb3JzLm1hcChlID0+IFxuICAgICAgICAvLyBXZSBjYXN0IHBhdGggYXMgYW55IGZvciBHcmFwaFFMLmpzIDE0IGNvbXBhdFxuICAgICAgICAvLyBsb2NhdGVkRXJyb3IgcGF0aCBhcmd1bWVudCBtdXN0IGJlIGRlZmluZWQsIGJ1dCBpdCBpcyBqdXN0IGZvcndhcmRlZCB0byBhIGNvbnN0cnVjdG9yIHRoYXQgYWxsb3dzIGEgdW5kZWZpbmVkIHZhbHVlXG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvYmxvYi9iNGJmZjBiYTljMTVjOWQ3MjQ1ZGQ2ODU1NmU3NTRjNDFmMjYzMjg5L3NyYy9lcnJvci9sb2NhdGVkRXJyb3IuanMjTDI1XG4gICAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvYmxvYi9iNGJmZjBiYTljMTVjOWQ3MjQ1ZGQ2ODU1NmU3NTRjNDFmMjYzMjg5L3NyYy9lcnJvci9HcmFwaFFMRXJyb3IuanMjTDE5XG4gICAgICAgIGxvY2F0ZWRFcnJvcihlLCB1bmRlZmluZWQsIHBhdGgpKSwgZXJyb3JzLm1hcChlcnJvciA9PiBlcnJvci5tZXNzYWdlKS5qb2luKCcsIFxcbicpKTtcbiAgICAgICAgcmV0dXJuIHsgZGF0YTogY29tYmluZWRFcnJvciwgdW5wYXRoZWRFcnJvcnM6IFtdIH07XG4gICAgfVxuICAgIGlmICghZXJyb3JzLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4geyBkYXRhLCB1bnBhdGhlZEVycm9yczogW10gfTtcbiAgICB9XG4gICAgY29uc3QgdW5wYXRoZWRFcnJvcnMgPSBbXTtcbiAgICBjb25zdCBlcnJvck1hcCA9IG5ldyBNYXAoKTtcbiAgICBmb3IgKGNvbnN0IGVycm9yIG9mIGVycm9ycykge1xuICAgICAgICBjb25zdCBwYXRoU2VnbWVudCA9IGVycm9yLnBhdGg/LltpbmRleF07XG4gICAgICAgIGlmIChwYXRoU2VnbWVudCAhPSBudWxsKSB7XG4gICAgICAgICAgICBsZXQgcGF0aFNlZ21lbnRFcnJvcnMgPSBlcnJvck1hcC5nZXQocGF0aFNlZ21lbnQpO1xuICAgICAgICAgICAgaWYgKHBhdGhTZWdtZW50RXJyb3JzID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBwYXRoU2VnbWVudEVycm9ycyA9IFtlcnJvcl07XG4gICAgICAgICAgICAgICAgZXJyb3JNYXAuc2V0KHBhdGhTZWdtZW50LCBwYXRoU2VnbWVudEVycm9ycyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBwYXRoU2VnbWVudEVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHVucGF0aGVkRXJyb3JzLnB1c2goZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgW3BhdGhTZWdtZW50LCBwYXRoU2VnbWVudEVycm9yc10gb2YgZXJyb3JNYXApIHtcbiAgICAgICAgaWYgKGRhdGFbcGF0aFNlZ21lbnRdICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnN0IHsgZGF0YTogbmV3RGF0YSwgdW5wYXRoZWRFcnJvcnM6IG5ld0Vycm9ycyB9ID0gbWVyZ2VEYXRhQW5kRXJyb3JzKGRhdGFbcGF0aFNlZ21lbnRdLCBwYXRoU2VnbWVudEVycm9ycywgcGF0aCwgb25Mb2NhdGVkRXJyb3IsIGluZGV4ICsgMSk7XG4gICAgICAgICAgICBkYXRhW3BhdGhTZWdtZW50XSA9IG5ld0RhdGE7XG4gICAgICAgICAgICB1bnBhdGhlZEVycm9ycy5wdXNoKC4uLm5ld0Vycm9ycyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB1bnBhdGhlZEVycm9ycy5wdXNoKC4uLnBhdGhTZWdtZW50RXJyb3JzKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4geyBkYXRhLCB1bnBhdGhlZEVycm9ycyB9O1xufVxuZnVuY3Rpb24gZ2V0UmVzcG9uc2VLZXkoaW5mbykge1xuICAgIGlmIChpbmZvID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEYXRhIGNhbm5vdCBiZSBleHRyYWN0ZWQgZnJvbSByZXN1bHQgd2l0aG91dCBhbiBleHBsaWNpdCBrZXkgb3Igc291cmNlIHNjaGVtYS5gKTtcbiAgICB9XG4gICAgcmV0dXJuIGdldFJlc3BvbnNlS2V5RnJvbUluZm8oaW5mbyk7XG59XG5mdW5jdGlvbiBnZXRSZXR1cm5UeXBlKGluZm8pIHtcbiAgICBpZiAoaW5mbyA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUmV0dXJuIHR5cGUgY2Fubm90IGJlIGluZmVycmVkIHdpdGhvdXQgYSBzb3VyY2Ugc2NoZW1hLmApO1xuICAgIH1cbiAgICByZXR1cm4gaW5mby5yZXR1cm5UeXBlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/checkResultAndHandleErrors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/createRequest.js":
/*!********************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/createRequest.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createRequest: () => (/* binding */ createRequest),\n/* harmony export */   getDelegatingOperation: () => (/* binding */ getDelegatingOperation)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/updateArgument.js\");\n\n\nfunction getDelegatingOperation(parentType, schema) {\n    if (parentType === schema.getMutationType()) {\n        return 'mutation';\n    }\n    else if (parentType === schema.getSubscriptionType()) {\n        return 'subscription';\n    }\n    return 'query';\n}\nfunction createRequest({ sourceSchema, sourceParentType, sourceFieldName, fragments, variableDefinitions, variableValues, targetRootValue, targetOperationName, targetOperation, targetFieldName, selectionSet, fieldNodes, context, info, }) {\n    let newSelectionSet;\n    const argumentNodeMap = Object.create(null);\n    if (selectionSet != null) {\n        newSelectionSet = selectionSet;\n    }\n    else {\n        const selections = [];\n        for (const fieldNode of fieldNodes || []) {\n            if (fieldNode.selectionSet) {\n                for (const selection of fieldNode.selectionSet.selections) {\n                    selections.push(selection);\n                }\n            }\n        }\n        newSelectionSet = selections.length\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                selections,\n            }\n            : undefined;\n        const args = fieldNodes?.[0]?.arguments;\n        if (args) {\n            for (const argNode of args) {\n                argumentNodeMap[argNode.name.value] = argNode;\n            }\n        }\n    }\n    const newVariables = Object.create(null);\n    const variableDefinitionMap = Object.create(null);\n    if (sourceSchema != null && variableDefinitions != null) {\n        for (const def of variableDefinitions) {\n            const varName = def.variable.name.value;\n            variableDefinitionMap[varName] = def;\n            const varType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.typeFromAST)(sourceSchema, def.type);\n            const serializedValue = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.serializeInputValue)(varType, variableValues?.[varName]);\n            if (serializedValue !== undefined) {\n                newVariables[varName] = serializedValue;\n            }\n        }\n    }\n    if (sourceParentType != null && sourceFieldName != null) {\n        updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, newVariables);\n    }\n    const fieldNode = fieldNodes?.[0];\n    const rootFieldName = targetFieldName ?? fieldNode?.name.value;\n    if (rootFieldName === undefined) {\n        throw new Error(`Either \"targetFieldName\" or a non empty \"fieldNodes\" array must be provided.`);\n    }\n    const rootfieldNode = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD,\n        arguments: Object.values(argumentNodeMap),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: rootFieldName,\n        },\n        selectionSet: newSelectionSet,\n        directives: fieldNode?.directives,\n    };\n    const operationName = targetOperationName\n        ? {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: targetOperationName,\n        }\n        : undefined;\n    const operationDefinition = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION,\n        name: operationName,\n        operation: targetOperation,\n        variableDefinitions: Object.values(variableDefinitionMap),\n        selectionSet: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n            selections: [rootfieldNode],\n        },\n    };\n    const definitions = [operationDefinition];\n    if (fragments != null) {\n        for (const fragmentName in fragments) {\n            const fragment = fragments[fragmentName];\n            definitions.push(fragment);\n        }\n    }\n    const document = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT,\n        definitions,\n    };\n    return {\n        document,\n        variables: newVariables,\n        rootValue: targetRootValue,\n        operationName: targetOperationName,\n        context,\n        info,\n        operationType: targetOperation,\n    };\n}\nfunction updateArgumentsWithDefaults(sourceParentType, sourceFieldName, argumentNodeMap, variableDefinitionMap, variableValues) {\n    const generateVariableName = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.createVariableNameGenerator)(variableDefinitionMap);\n    const sourceField = sourceParentType.getFields()[sourceFieldName];\n    if (!sourceField) {\n        throw new Error(`Field \"${sourceFieldName}\" was not found in type \"${sourceParentType}\".`);\n    }\n    for (const argument of sourceField.args) {\n        const argName = argument.name;\n        const sourceArgType = argument.type;\n        if (argumentNodeMap[argName] === undefined) {\n            const defaultValue = argument.defaultValue;\n            if (defaultValue !== undefined) {\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.updateArgument)(argumentNodeMap, variableDefinitionMap, variableValues, argName, generateVariableName(argName), sourceArgType, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.serializeInputValue)(sourceArgType, defaultValue));\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/createRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultMergedResolver: () => (/* binding */ defaultMergedResolver)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/execute.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/jsutils/Path.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _leftOver_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./leftOver.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/leftOver.js\");\n/* harmony import */ var _mergeFields_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mergeFields.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n/* harmony import */ var _resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./resolveExternalValue.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\");\n/* harmony import */ var _symbols_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./symbols.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/symbols.js\");\n\n\n\n\n\n\n/**\n * Resolver that knows how to:\n * a) handle aliases for proxied schemas\n * b) handle errors from proxied schemas\n * c) handle external to internal enum conversion\n */\nfunction defaultMergedResolver(parent, args, context, info) {\n    if (!parent) {\n        return null;\n    }\n    const responseKey = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getResponseKeyFromInfo)(info);\n    // check to see if parent is not a proxied result, i.e. if parent resolver was manually overwritten\n    // See https://github.com/ardatan/graphql-tools/issues/967\n    if (!(0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.isExternalObject)(parent)) {\n        return (0,graphql__WEBPACK_IMPORTED_MODULE_2__.defaultFieldResolver)(parent, args, context, info);\n    }\n    // If the parent is satisfied for the left over after a nested delegation, try to resolve it\n    if (!Object.prototype.hasOwnProperty.call(parent, responseKey)) {\n        const leftOver = (0,_leftOver_js__WEBPACK_IMPORTED_MODULE_3__.getPlanLeftOverFromParent)(parent);\n        // Add this field to the deferred fields\n        if (leftOver) {\n            let missingFieldNodes = leftOver.missingFieldsParentMap.get(parent);\n            if (!missingFieldNodes) {\n                missingFieldNodes = [];\n                leftOver.missingFieldsParentMap.set(parent, missingFieldNodes);\n            }\n            missingFieldNodes.push(...info.fieldNodes.filter(fieldNode => leftOver.unproxiableFieldNodes.some(unproxiableFieldNode => unproxiableFieldNode === fieldNode)));\n            let missingDeferredFields = leftOver.missingFieldsParentDeferredMap.get(parent);\n            if (!missingDeferredFields) {\n                missingDeferredFields = new Map();\n                leftOver.missingFieldsParentDeferredMap.set(parent, missingDeferredFields);\n            }\n            const deferred = (0,_leftOver_js__WEBPACK_IMPORTED_MODULE_3__.createDeferred)();\n            missingDeferredFields.set(responseKey, deferred);\n            const stitchingInfo = info.schema.extensions?.['stitchingInfo'];\n            const parentTypeName = parent?.__typename || info.parentType.name;\n            const fieldNodesByType = stitchingInfo?.fieldNodesByField?.[parentTypeName]?.[info.fieldName];\n            if (fieldNodesByType.every(fieldNode => {\n                const responseKey = fieldNode.alias?.value ?? fieldNode.name.value;\n                if (Object.prototype.hasOwnProperty.call(parent, responseKey)) {\n                    return true;\n                }\n                return false;\n            })) {\n                handleResult(parent, responseKey, context, info);\n            }\n            return deferred.promise;\n        }\n        return undefined;\n    }\n    return handleResult(parent, responseKey, context, info);\n}\nfunction handleResult(parent, responseKey, context, info) {\n    const subschema = (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.getSubschema)(parent, responseKey);\n    const data = parent[responseKey];\n    const unpathedErrors = (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.getUnpathedErrors)(parent);\n    const resolvedData$ = (0,_resolveExternalValue_js__WEBPACK_IMPORTED_MODULE_4__.resolveExternalValue)(data, unpathedErrors, subschema, context, info);\n    const leftOver = (0,_leftOver_js__WEBPACK_IMPORTED_MODULE_3__.getPlanLeftOverFromParent)(parent);\n    // Handle possible deferred fields if any left over from the previous delegation plan is found\n    if (leftOver) {\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.isPromise)(resolvedData$)) {\n            return resolvedData$.then(resolvedData => {\n                parent[responseKey] = resolvedData;\n                handleLeftOver(parent, context, info, leftOver);\n                return resolvedData;\n            });\n        }\n        parent[responseKey] = resolvedData$;\n        handleLeftOver(parent, context, info, leftOver);\n    }\n    return resolvedData$;\n}\nfunction handleLeftOver(parent, context, info, leftOver) {\n    const stitchingInfo = info.schema.extensions?.['stitchingInfo'];\n    if (stitchingInfo) {\n        for (const possibleSubschema of leftOver.nonProxiableSubschemas) {\n            const parentTypeName = info.parentType.name;\n            const selectionSets = new Set();\n            const mainSelectionSet = stitchingInfo.mergedTypes[parentTypeName].selectionSets.get(possibleSubschema);\n            if (mainSelectionSet) {\n                selectionSets.add(mainSelectionSet);\n            }\n            for (const fieldNode of leftOver.unproxiableFieldNodes) {\n                const fieldName = fieldNode.name.value;\n                const fieldSelectionSet = stitchingInfo.mergedTypes[parentTypeName].fieldSelectionSets.get(possibleSubschema)?.[fieldName];\n                if (fieldSelectionSet) {\n                    selectionSets.add(fieldSelectionSet);\n                }\n            }\n            // Wait until the parent is flattened, then check if non proxiable subschemas are satisfied now,\n            // then the deferred fields can be resolved\n            if (selectionSets.size) {\n                const selectionSet = {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.SELECTION_SET,\n                    selections: Array.from(selectionSets).flatMap(selectionSet => selectionSet.selections),\n                };\n                const flattenedParent$ = flattenPromise(parent);\n                if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.isPromise)(flattenedParent$)) {\n                    flattenedParent$.then(flattenedParent => {\n                        handleFlattenedParent(flattenedParent, parent, possibleSubschema, selectionSet, leftOver, stitchingInfo, parentTypeName, context, info);\n                    });\n                }\n                else {\n                    handleFlattenedParent(flattenedParent$, parent, possibleSubschema, selectionSet, leftOver, stitchingInfo, parentTypeName, context, info);\n                }\n            }\n        }\n    }\n}\nfunction handleFlattenedParent(flattenedParent, leftOverParent, possibleSubschema, selectionSet, leftOver, stitchingInfo, parentTypeName, context, info) {\n    // If this subschema is satisfied now, try to resolve the deferred fields\n    if (parentSatisfiedSelectionSet(flattenedParent, selectionSet)) {\n        const missingFieldNodes = leftOver.missingFieldsParentMap.get(leftOverParent);\n        if (missingFieldNodes) {\n            const resolver = stitchingInfo.mergedTypes[parentTypeName].resolvers.get(possibleSubschema);\n            if (resolver) {\n                try {\n                    // Extend the left over parent with missing fields\n                    Object.assign(leftOverParent, flattenedParent);\n                    const selectionSet = {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.SELECTION_SET,\n                        selections: missingFieldNodes,\n                    };\n                    const resolverResult$ = resolver(leftOverParent, context, info, possibleSubschema, selectionSet, info.parentType, info.parentType);\n                    // Resolve the deferred fields if they are resolved\n                    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.isPromise)(resolverResult$)) {\n                        resolverResult$.then(resolverResult => handleDeferredResolverResult(resolverResult, possibleSubschema, selectionSet, leftOverParent, leftOver, context, info)).catch(error => handleDeferredResolverFailure(leftOver, leftOverParent, error));\n                    }\n                    else {\n                        handleDeferredResolverResult(resolverResult$, possibleSubschema, selectionSet, leftOverParent, leftOver, context, info);\n                    }\n                }\n                catch (error) {\n                    handleDeferredResolverFailure(leftOver, leftOverParent, error);\n                }\n            }\n        }\n    }\n    else {\n        // try to resolve the missing fields\n        for (const selectionNode of selectionSet.selections) {\n            if (selectionNode.kind === graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.FIELD && selectionNode.selectionSet?.selections?.length) {\n                const responseKey = selectionNode.alias?.value ?? selectionNode.name.value;\n                const nestedParent = flattenedParent[responseKey];\n                const nestedSelectionSet = selectionNode.selectionSet;\n                if (nestedParent != null) {\n                    if (!parentSatisfiedSelectionSet(nestedParent, nestedSelectionSet)) {\n                        async function handleNestedParentItem(nestedParentItem, fieldNode) {\n                            const nestedTypeName = nestedParentItem['__typename'];\n                            const sourceSubschema = (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.getSubschema)(flattenedParent, responseKey);\n                            if (sourceSubschema && nestedTypeName) {\n                                const delegationPlan = stitchingInfo.mergedTypes[nestedTypeName].delegationPlanBuilder(info.schema, sourceSubschema, info.variableValues, info.fragments, [fieldNode]);\n                                // Later optimize\n                                for (const delegationMap of delegationPlan) {\n                                    for (const [subschema, selectionSet] of delegationMap) {\n                                        const resolver = stitchingInfo.mergedTypes[nestedTypeName].resolvers.get(subschema);\n                                        if (resolver) {\n                                            const res = await resolver(nestedParentItem, context, info, subschema, selectionSet, info.parentType, info.parentType);\n                                            if (res) {\n                                                (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.handleResolverResult)(res, subschema, selectionSet, nestedParentItem, (nestedParentItem[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.FIELD_SUBSCHEMA_MAP_SYMBOL] ||= new Map()), info, (0,graphql__WEBPACK_IMPORTED_MODULE_8__.pathToArray)(info.path), (nestedParentItem[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.UNPATHED_ERRORS_SYMBOL] ||= []));\n                                            }\n                                        }\n                                    }\n                                }\n                                if (parentSatisfiedSelectionSet(nestedParent, nestedSelectionSet)) {\n                                    handleFlattenedParent(flattenedParent, leftOverParent, possibleSubschema, selectionSet, leftOver, stitchingInfo, parentTypeName, context, info);\n                                }\n                            }\n                        }\n                        if (Array.isArray(nestedParent)) {\n                            nestedParent.forEach(nestedParentItem => handleNestedParentItem(nestedParentItem, selectionNode));\n                        }\n                        else {\n                            handleNestedParentItem(nestedParent, selectionNode);\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nfunction handleDeferredResolverResult(resolverResult, possibleSubschema, selectionSet, leftOverParent, leftOver, context, info) {\n    (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.handleResolverResult)(resolverResult, possibleSubschema, selectionSet, leftOverParent, leftOverParent[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.FIELD_SUBSCHEMA_MAP_SYMBOL], info, (0,graphql__WEBPACK_IMPORTED_MODULE_8__.pathToArray)(info.path), leftOverParent[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.UNPATHED_ERRORS_SYMBOL]);\n    const deferredFields = leftOver.missingFieldsParentDeferredMap.get(leftOverParent);\n    if (deferredFields) {\n        for (const [responseKey, deferred] of deferredFields) {\n            // If the deferred field is resolved, resolve the deferred field\n            if (Object.prototype.hasOwnProperty.call(resolverResult, responseKey)) {\n                deferred.resolve(handleResult(leftOverParent, responseKey, context, info));\n            }\n        }\n        leftOver.missingFieldsParentDeferredMap.delete(leftOverParent);\n    }\n}\nfunction handleDeferredResolverFailure(leftOver, leftOverParent, error) {\n    const deferredFields = leftOver.missingFieldsParentDeferredMap.get(leftOverParent);\n    if (deferredFields) {\n        for (const [_responseKey, deferred] of deferredFields) {\n            deferred.reject(error);\n        }\n        leftOver.missingFieldsParentDeferredMap.delete(leftOverParent);\n    }\n}\nfunction parentSatisfiedSelectionSet(parent, selectionSet) {\n    if (Array.isArray(parent)) {\n        const subschemas = new Set();\n        for (const item of parent) {\n            const satisfied = parentSatisfiedSelectionSet(item, selectionSet);\n            if (satisfied === undefined) {\n                return undefined;\n            }\n            for (const subschema of satisfied) {\n                subschemas.add(subschema);\n            }\n        }\n        return subschemas;\n    }\n    if (parent === null) {\n        return new Set();\n    }\n    if (parent === undefined) {\n        return undefined;\n    }\n    const subschemas = new Set();\n    for (const selection of selectionSet.selections) {\n        if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.FIELD) {\n            const responseKey = selection.alias?.value ?? selection.name.value;\n            if (parent[responseKey] === undefined) {\n                return undefined;\n            }\n            if ((0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.isExternalObject)(parent)) {\n                const subschema = (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_1__.getSubschema)(parent, responseKey);\n                if (subschema) {\n                    subschemas.add(subschema);\n                }\n            }\n            if (parent[responseKey] === null) {\n                continue;\n            }\n            if (selection.selectionSet != null) {\n                const satisfied = parentSatisfiedSelectionSet(parent[responseKey], selection.selectionSet);\n                if (satisfied === undefined) {\n                    return undefined;\n                }\n                for (const subschema of satisfied) {\n                    subschemas.add(subschema);\n                }\n            }\n        }\n        else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INLINE_FRAGMENT) {\n            const inlineSatisfied = parentSatisfiedSelectionSet(parent, selection.selectionSet);\n            if (inlineSatisfied === undefined) {\n                return undefined;\n            }\n            for (const subschema of inlineSatisfied) {\n                subschemas.add(subschema);\n            }\n        }\n    }\n    return subschemas;\n}\nfunction flattenPromise(data) {\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.isPromise)(data)) {\n        return data.then(flattenPromise);\n    }\n    if (Array.isArray(data)) {\n        return Promise.all(data.map(flattenPromise));\n    }\n    if (data != null && typeof data === 'object') {\n        const jobs = [];\n        const newData = {};\n        for (const key in data) {\n            const keyResult = flattenPromise(data[key]);\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.isPromise)(keyResult)) {\n                jobs.push(keyResult.then(resolvedKeyResult => {\n                    newData[key] = resolvedKeyResult;\n                }));\n            }\n            else {\n                newData[key] = keyResult;\n            }\n        }\n        if (data[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.OBJECT_SUBSCHEMA_SYMBOL]) {\n            newData[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.OBJECT_SUBSCHEMA_SYMBOL] = data[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.OBJECT_SUBSCHEMA_SYMBOL];\n        }\n        if (data[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.FIELD_SUBSCHEMA_MAP_SYMBOL]) {\n            newData[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.FIELD_SUBSCHEMA_MAP_SYMBOL] = data[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.FIELD_SUBSCHEMA_MAP_SYMBOL];\n        }\n        if (data[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.UNPATHED_ERRORS_SYMBOL]) {\n            newData[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.UNPATHED_ERRORS_SYMBOL] = data[_symbols_js__WEBPACK_IMPORTED_MODULE_7__.UNPATHED_ERRORS_SYMBOL];\n        }\n        if (jobs.length) {\n            return Promise.all(jobs).then(() => newData);\n        }\n        return newData;\n    }\n    return data;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDefaultExecutor: () => (/* binding */ createDefaultExecutor),\n/* harmony export */   delegateRequest: () => (/* binding */ delegateRequest),\n/* harmony export */   delegateToSchema: () => (/* binding */ delegateToSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/validation/validate.mjs\");\n/* harmony import */ var _graphql_tools_batch_execute__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/batch-execute */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js\");\n/* harmony import */ var _graphql_tools_executor__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @graphql-tools/executor */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _repeaterjs_repeater__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @repeaterjs/repeater */ \"(ssr)/../node_modules/@repeaterjs/repeater/repeater.js\");\n/* harmony import */ var _applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./applySchemaTransforms.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n/* harmony import */ var _createRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createRequest.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/createRequest.js\");\n/* harmony import */ var _Subschema_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Subschema.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/Subschema.js\");\n/* harmony import */ var _subschemaConfig_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./subschemaConfig.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n/* harmony import */ var _Transformer_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Transformer.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/Transformer.js\");\n\n\n\n\n\n\n\n\n\n\nfunction delegateToSchema(options) {\n    const { info, schema, rootValue = schema.rootValue ?? info.rootValue, operationName = info.operation.name?.value, operation = (0,_createRequest_js__WEBPACK_IMPORTED_MODULE_1__.getDelegatingOperation)(info.parentType, info.schema), fieldName = info.fieldName, selectionSet, fieldNodes = info.fieldNodes, context, } = options;\n    const request = (0,_createRequest_js__WEBPACK_IMPORTED_MODULE_1__.createRequest)({\n        sourceSchema: info.schema,\n        sourceParentType: info.parentType,\n        sourceFieldName: info.fieldName,\n        fragments: info.fragments,\n        variableDefinitions: info.operation.variableDefinitions,\n        variableValues: info.variableValues,\n        targetRootValue: rootValue,\n        targetOperationName: operationName,\n        targetOperation: operation,\n        targetFieldName: fieldName,\n        selectionSet,\n        fieldNodes,\n        context,\n        info,\n    });\n    return delegateRequest({\n        ...options,\n        request,\n    });\n}\nfunction getDelegationReturnType(targetSchema, operation, fieldName) {\n    const rootType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getDefinedRootType)(targetSchema, operation);\n    const rootFieldType = rootType.getFields()[fieldName];\n    if (!rootFieldType) {\n        throw new Error(`Unable to find field '${fieldName}' in type '${rootType}'.`);\n    }\n    return rootFieldType.type;\n}\nfunction delegateRequest(options) {\n    const delegationContext = getDelegationContext(options);\n    const transformer = new _Transformer_js__WEBPACK_IMPORTED_MODULE_3__.Transformer(delegationContext);\n    const processedRequest = transformer.transformRequest(options.request);\n    if (options.validateRequest) {\n        validateRequest(delegationContext, processedRequest.document);\n    }\n    const executor = getExecutor(delegationContext);\n    const result$ = executor(processedRequest);\n    function handleExecutorResult(executorResult) {\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.isAsyncIterable)(executorResult)) {\n            // This might be a stream\n            if (delegationContext.operation === 'query' && (0,graphql__WEBPACK_IMPORTED_MODULE_5__.isListType)(delegationContext.returnType)) {\n                return new _repeaterjs_repeater__WEBPACK_IMPORTED_MODULE_0__.Repeater(async (push, stop) => {\n                    const pushed = new WeakSet();\n                    let stopped = false;\n                    stop.finally(() => {\n                        stopped = true;\n                    });\n                    try {\n                        for await (const result of executorResult) {\n                            if (stopped) {\n                                break;\n                            }\n                            const transformedResult = await transformer.transformResult(result);\n                            // @stream needs to get the results one by one\n                            if (Array.isArray(transformedResult)) {\n                                for (const individualResult$ of transformedResult) {\n                                    if (stopped) {\n                                        break;\n                                    }\n                                    const individualResult = await individualResult$;\n                                    // Avoid pushing the same result multiple times\n                                    if (!pushed.has(individualResult)) {\n                                        pushed.add(individualResult);\n                                        await push(individualResult);\n                                    }\n                                }\n                            }\n                            else {\n                                await push(await transformedResult);\n                            }\n                        }\n                        stop();\n                    }\n                    catch (error) {\n                        stop(error);\n                    }\n                });\n            }\n            return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.mapAsyncIterator)(executorResult, result => transformer.transformResult(result));\n        }\n        return transformer.transformResult(executorResult);\n    }\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.isPromise)(result$)) {\n        return result$.then(handleExecutorResult);\n    }\n    return handleExecutorResult(result$);\n}\nfunction getDelegationContext({ request, schema, fieldName, returnType, args, info, transforms = [], transformedSchema, skipTypeMerging = false, }) {\n    const operationDefinition = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.getOperationASTFromRequest)(request);\n    let targetFieldName;\n    if (fieldName == null) {\n        targetFieldName = operationDefinition.selectionSet.selections[0].name.value;\n    }\n    else {\n        targetFieldName = fieldName;\n    }\n    const stitchingInfo = info?.schema.extensions?.['stitchingInfo'];\n    const subschemaOrSubschemaConfig = stitchingInfo?.subschemaMap.get(schema) ?? schema;\n    const operation = operationDefinition.operation;\n    if ((0,_subschemaConfig_js__WEBPACK_IMPORTED_MODULE_9__.isSubschemaConfig)(subschemaOrSubschemaConfig)) {\n        const targetSchema = subschemaOrSubschemaConfig.schema;\n        return {\n            subschema: schema,\n            subschemaConfig: subschemaOrSubschemaConfig,\n            targetSchema,\n            operation,\n            fieldName: targetFieldName,\n            args,\n            context: request.context,\n            info,\n            returnType: returnType ??\n                info?.returnType ??\n                getDelegationReturnType(targetSchema, operation, targetFieldName),\n            transforms: subschemaOrSubschemaConfig.transforms != null\n                ? subschemaOrSubschemaConfig.transforms.concat(transforms)\n                : transforms,\n            transformedSchema: transformedSchema ??\n                (subschemaOrSubschemaConfig instanceof _Subschema_js__WEBPACK_IMPORTED_MODULE_10__.Subschema\n                    ? subschemaOrSubschemaConfig.transformedSchema\n                    : (0,_applySchemaTransforms_js__WEBPACK_IMPORTED_MODULE_11__.applySchemaTransforms)(targetSchema, subschemaOrSubschemaConfig)),\n            skipTypeMerging,\n        };\n    }\n    return {\n        subschema: schema,\n        subschemaConfig: undefined,\n        targetSchema: subschemaOrSubschemaConfig,\n        operation,\n        fieldName: targetFieldName,\n        args,\n        context: request.context,\n        info,\n        returnType: returnType ??\n            info?.returnType ??\n            getDelegationReturnType(subschemaOrSubschemaConfig, operation, targetFieldName),\n        transforms,\n        transformedSchema: transformedSchema ?? subschemaOrSubschemaConfig,\n        skipTypeMerging,\n    };\n}\nfunction validateRequest(delegationContext, document) {\n    const errors = (0,graphql__WEBPACK_IMPORTED_MODULE_12__.validate)(delegationContext.targetSchema, document);\n    if (errors.length > 0) {\n        if (errors.length > 1) {\n            const combinedError = new AggregateError(errors, errors.map(error => error.message).join(', \\n'));\n            throw combinedError;\n        }\n        const error = errors[0];\n        throw error.originalError || error;\n    }\n}\nconst GLOBAL_CONTEXT = {};\nfunction getExecutor(delegationContext) {\n    const { subschemaConfig, targetSchema, context } = delegationContext;\n    let executor = subschemaConfig?.executor || createDefaultExecutor(targetSchema);\n    if (subschemaConfig?.batch) {\n        const batchingOptions = subschemaConfig?.batchingOptions;\n        executor = (0,_graphql_tools_batch_execute__WEBPACK_IMPORTED_MODULE_13__.getBatchingExecutor)(context ?? GLOBAL_CONTEXT, executor, batchingOptions?.dataLoaderOptions, batchingOptions?.extensionsReducer);\n    }\n    return executor;\n}\nconst createDefaultExecutor = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_14__.memoize1)(function createDefaultExecutor(schema) {\n    return function defaultExecutor(request) {\n        return (0,_graphql_tools_executor__WEBPACK_IMPORTED_MODULE_15__.normalizedExecutor)({\n            schema,\n            document: request.document,\n            rootValue: request.rootValue,\n            contextValue: request.context,\n            variableValues: request.variables,\n            operationName: request.operationName,\n        });\n    };\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/extractUnavailableFields.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/extractUnavailableFields.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractUnavailableFields: () => (/* binding */ extractUnavailableFields),\n/* harmony export */   extractUnavailableFieldsFromSelectionSet: () => (/* binding */ extractUnavailableFieldsFromSelectionSet),\n/* harmony export */   subtractSelectionSets: () => (/* binding */ subtractSelectionSets)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nconst extractUnavailableFieldsFromSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize4)(function extractUnavailableFieldsFromSelectionSet(schema, fieldType, fieldSelectionSet, shouldAdd) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(fieldType)) {\n        return [];\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(fieldType)) {\n        const unavailableSelections = [];\n        for (const type of fieldType.getTypes()) {\n            // Exclude other inline fragments\n            const fieldSelectionExcluded = {\n                ...fieldSelectionSet,\n                selections: fieldSelectionSet.selections.filter(selection => selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT\n                    ? selection.typeCondition\n                        ? selection.typeCondition.name.value === type.name\n                        : false\n                    : true),\n            };\n            unavailableSelections.push(...extractUnavailableFieldsFromSelectionSet(schema, type, fieldSelectionExcluded, shouldAdd));\n        }\n        return unavailableSelections;\n    }\n    const subFields = fieldType.getFields();\n    const unavailableSelections = [];\n    for (const selection of fieldSelectionSet.selections) {\n        if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD) {\n            if (selection.name.value === '__typename') {\n                continue;\n            }\n            const fieldName = selection.name.value;\n            const selectionField = subFields[fieldName];\n            if (!selectionField) {\n                if (shouldAdd(fieldType, selection)) {\n                    unavailableSelections.push(selection);\n                }\n            }\n            else {\n                const unavailableSubFields = extractUnavailableFields(schema, selectionField, selection, shouldAdd);\n                if (unavailableSubFields.length) {\n                    unavailableSelections.push({\n                        ...selection,\n                        selectionSet: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                            selections: unavailableSubFields,\n                        },\n                    });\n                }\n            }\n        }\n        else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT) {\n            const subFieldType = selection.typeCondition\n                ? schema.getType(selection.typeCondition.name.value)\n                : fieldType;\n            if (subFieldType === fieldType ||\n                (((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(subFieldType) || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(subFieldType)) &&\n                    (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isAbstractType)(fieldType) &&\n                    schema.isSubType(fieldType, subFieldType))) {\n                const unavailableFields = extractUnavailableFieldsFromSelectionSet(schema, subFieldType, selection.selectionSet, shouldAdd);\n                if (unavailableFields.length) {\n                    unavailableSelections.push({\n                        ...selection,\n                        selectionSet: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                            selections: unavailableFields,\n                        },\n                    });\n                }\n            }\n        }\n    }\n    return unavailableSelections;\n});\nconst extractUnavailableFields = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize4)(function extractUnavailableFields(schema, field, fieldNode, shouldAdd) {\n    if (fieldNode.selectionSet) {\n        const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type);\n        return extractUnavailableFieldsFromSelectionSet(schema, fieldType, fieldNode.selectionSet, shouldAdd);\n    }\n    return [];\n});\nfunction getByPath(object, path) {\n    let current = object;\n    for (const pathSegment of path) {\n        if (current == null) {\n            return;\n        }\n        current = current[pathSegment];\n    }\n    return current;\n}\nfunction subtractSelectionSets(selectionSetA, selectionSetB) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(selectionSetA, {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD]: {\n            enter(node, _key, _parent, path) {\n                if (!node.selectionSet &&\n                    getByPath(selectionSetB, path.slice(0, -1))?.some(selection => selection.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD && selection.name.value === node.name.value)) {\n                    return null;\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET]: {\n            leave(node) {\n                if (node.selections.length === 0) {\n                    return null;\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT]: {\n            leave(node) {\n                if (node.selectionSet?.selections.length === 0) {\n                    return null;\n                }\n            },\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/extractUnavailableFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   finalizeGatewayRequest: () => (/* binding */ finalizeGatewayRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var _graphql_tools_executor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/executor */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/execute.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/updateArgument.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\");\n/* harmony import */ var _getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getDocumentMetadata.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\");\n\n\n\n\nfunction finalizeGatewayDocument(targetSchema, fragments, operations) {\n    let usedVariables = [];\n    let usedFragments = [];\n    const newOperations = [];\n    let newFragments = [];\n    const validFragments = [];\n    const validFragmentsWithType = Object.create(null);\n    for (const fragment of fragments) {\n        const typeName = fragment.typeCondition.name.value;\n        const type = targetSchema.getType(typeName);\n        if (type != null) {\n            validFragments.push(fragment);\n            validFragmentsWithType[fragment.name.value] = type;\n        }\n    }\n    let fragmentSet = Object.create(null);\n    for (const operation of operations) {\n        const type = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getDefinedRootType)(targetSchema, operation.operation);\n        const { selectionSet, usedFragments: operationUsedFragments, usedVariables: operationUsedVariables, } = finalizeSelectionSet(targetSchema, type, validFragmentsWithType, operation.selectionSet);\n        usedFragments = union(usedFragments, operationUsedFragments);\n        const { usedVariables: collectedUsedVariables, newFragments: collectedNewFragments, fragmentSet: collectedFragmentSet, } = collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments);\n        const operationOrFragmentVariables = union(operationUsedVariables, collectedUsedVariables);\n        usedVariables = union(usedVariables, operationOrFragmentVariables);\n        newFragments = collectedNewFragments;\n        fragmentSet = collectedFragmentSet;\n        const variableDefinitions = (operation.variableDefinitions ?? []).filter((variable) => operationOrFragmentVariables.indexOf(variable.variable.name.value) !== -1);\n        // Prevent unnecessary __typename in Subscription\n        if (operation.operation === 'subscription') {\n            selectionSet.selections = selectionSet.selections.filter((selection) => selection.kind !== graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD || selection.name.value !== '__typename');\n        }\n        // Do not add the operation if it only asks for __typename\n        if (selectionSet.selections.length === 1 &&\n            selectionSet.selections[0].kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD &&\n            selectionSet.selections[0].name.value === '__typename') {\n            continue;\n        }\n        newOperations.push({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_DEFINITION,\n            operation: operation.operation,\n            name: operation.name,\n            directives: operation.directives,\n            variableDefinitions,\n            selectionSet,\n        });\n    }\n    if (!newOperations.length) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createGraphQLError)('Failed to create a gateway request. The request must contain at least one operation.', {\n            extensions: {\n                [_graphql_tools_executor__WEBPACK_IMPORTED_MODULE_3__.CRITICAL_ERROR]: true,\n            },\n        });\n    }\n    const newDocument = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT,\n        definitions: [...newOperations, ...newFragments],\n    };\n    return {\n        usedVariables,\n        newDocument,\n    };\n}\nfunction finalizeGatewayRequest(originalRequest, delegationContext) {\n    let { document, variables } = originalRequest;\n    let { operations, fragments } = (0,_getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_4__.getDocumentMetadata)(document);\n    const { targetSchema, args } = delegationContext;\n    if (args) {\n        const requestWithNewVariables = addVariablesToRootFields(targetSchema, operations, args);\n        operations = requestWithNewVariables.newOperations;\n        variables = Object.assign({}, variables ?? {}, requestWithNewVariables.newVariables);\n    }\n    const { usedVariables, newDocument } = finalizeGatewayDocument(targetSchema, fragments, operations);\n    const newVariables = {};\n    if (variables != null) {\n        for (const variableName of usedVariables) {\n            const variableValue = variables[variableName];\n            if (variableValue !== undefined) {\n                newVariables[variableName] = variableValue;\n            }\n        }\n    }\n    let cleanedUpDocument = newDocument;\n    // TODO: Optimize this internally later\n    cleanedUpDocument = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(newDocument, {\n        // Cleanup extra __typename fields\n        SelectionSet: {\n            leave(node) {\n                const { hasTypeNameField, selections } = filterTypenameFields(node.selections);\n                if (hasTypeNameField) {\n                    selections.unshift({\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                            value: '__typename',\n                        },\n                    });\n                }\n                return {\n                    ...node,\n                    selections,\n                };\n            },\n        },\n        // Cleanup empty inline fragments\n        InlineFragment: {\n            leave(node) {\n                // No need __typename in inline fragment\n                const { selections } = filterTypenameFields(node.selectionSet.selections);\n                if (selections.length === 0) {\n                    return null;\n                }\n                return {\n                    ...node,\n                    selectionSet: {\n                        ...node.selectionSet,\n                        selections,\n                    },\n                };\n            },\n        },\n    });\n    return {\n        ...originalRequest,\n        document: cleanedUpDocument,\n        variables: newVariables,\n    };\n}\nfunction isTypeNameField(selection) {\n    return selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD && !selection.alias && selection.name.value === '__typename';\n}\nfunction filterTypenameFields(selections) {\n    let hasTypeNameField = false;\n    const filteredSelections = selections.filter(selection => {\n        if (isTypeNameField(selection)) {\n            hasTypeNameField = true;\n            return false;\n        }\n        return true;\n    });\n    return {\n        hasTypeNameField,\n        selections: filteredSelections,\n    };\n}\nfunction addVariablesToRootFields(targetSchema, operations, args) {\n    const newVariables = Object.create(null);\n    const newOperations = operations.map((operation) => {\n        const variableDefinitionMap = (operation.variableDefinitions ?? []).reduce((prev, def) => ({\n            ...prev,\n            [def.variable.name.value]: def,\n        }), {});\n        const type = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getDefinedRootType)(targetSchema, operation.operation);\n        const newSelections = [];\n        for (const selection of operation.selectionSet.selections) {\n            if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD) {\n                const argumentNodes = selection.arguments ?? [];\n                const argumentNodeMap = argumentNodes.reduce((prev, argument) => ({\n                    ...prev,\n                    [argument.name.value]: argument,\n                }), {});\n                const targetField = type.getFields()[selection.name.value];\n                // excludes __typename\n                if (targetField != null) {\n                    updateArguments(targetField, argumentNodeMap, variableDefinitionMap, newVariables, args);\n                }\n                newSelections.push({\n                    ...selection,\n                    arguments: Object.values(argumentNodeMap),\n                });\n            }\n            else {\n                newSelections.push(selection);\n            }\n        }\n        const newSelectionSet = {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n            selections: newSelections,\n        };\n        return {\n            ...operation,\n            variableDefinitions: Object.values(variableDefinitionMap),\n            selectionSet: newSelectionSet,\n        };\n    });\n    return {\n        newOperations,\n        newVariables,\n    };\n}\nfunction updateArguments(targetField, argumentNodeMap, variableDefinitionMap, variableValues, newArgs) {\n    const generateVariableName = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createVariableNameGenerator)(variableDefinitionMap);\n    for (const argument of targetField.args) {\n        const argName = argument.name;\n        const argType = argument.type;\n        if (argName in newArgs) {\n            (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.updateArgument)(argumentNodeMap, variableDefinitionMap, variableValues, argName, generateVariableName(argName), argType, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.serializeInputValue)(argType, newArgs[argName]));\n        }\n    }\n}\nfunction collectFragmentVariables(targetSchema, fragmentSet, validFragments, validFragmentsWithType, usedFragments) {\n    let remainingFragments = usedFragments.slice();\n    let usedVariables = [];\n    const newFragments = [];\n    while (remainingFragments.length !== 0) {\n        const nextFragmentName = remainingFragments.pop();\n        const fragment = validFragments.find(fr => fr.name.value === nextFragmentName);\n        if (fragment != null) {\n            const name = nextFragmentName;\n            const typeName = fragment.typeCondition.name.value;\n            const type = targetSchema.getType(typeName);\n            if (type == null) {\n                throw new Error(`Fragment reference type \"${typeName}\", but the type is not contained within the target schema.`);\n            }\n            const { selectionSet, usedFragments: fragmentUsedFragments, usedVariables: fragmentUsedVariables, } = finalizeSelectionSet(targetSchema, type, validFragmentsWithType, fragment.selectionSet);\n            remainingFragments = union(remainingFragments, fragmentUsedFragments);\n            usedVariables = union(usedVariables, fragmentUsedVariables);\n            if (name && !(name in fragmentSet)) {\n                fragmentSet[name] = true;\n                newFragments.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: fragment.typeCondition,\n                    selectionSet,\n                });\n            }\n        }\n    }\n    return {\n        usedVariables,\n        newFragments,\n        fragmentSet,\n    };\n}\nconst filteredSelectionSetVisitorKeys = {\n    SelectionSet: ['selections'],\n    Field: ['selectionSet'],\n    InlineFragment: ['selectionSet'],\n    FragmentDefinition: ['selectionSet'],\n};\nconst variablesVisitorKeys = {\n    SelectionSet: ['selections'],\n    Field: ['arguments', 'directives', 'selectionSet'],\n    Argument: ['value'],\n    InlineFragment: ['directives', 'selectionSet'],\n    FragmentSpread: ['directives'],\n    FragmentDefinition: ['selectionSet'],\n    ObjectValue: ['fields'],\n    ObjectField: ['name', 'value'],\n    Directive: ['arguments'],\n    ListValue: ['values'],\n};\nfunction finalizeSelectionSet(schema, type, validFragments, selectionSet) {\n    const usedFragments = [];\n    const usedVariables = [];\n    const typeInfo = graphql__WEBPACK_IMPORTED_MODULE_8__.versionInfo.major < 16\n        ? new graphql__WEBPACK_IMPORTED_MODULE_9__.TypeInfo(schema, undefined, type)\n        : new graphql__WEBPACK_IMPORTED_MODULE_9__.TypeInfo(schema, type);\n    const filteredSelectionSet = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(selectionSet, (0,graphql__WEBPACK_IMPORTED_MODULE_9__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD]: {\n            enter: node => {\n                const parentType = typeInfo.getParentType();\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_10__.isObjectType)(parentType) || (0,graphql__WEBPACK_IMPORTED_MODULE_10__.isInterfaceType)(parentType)) {\n                    const fields = parentType.getFields();\n                    const field = node.name.value === '__typename' ? graphql__WEBPACK_IMPORTED_MODULE_11__.TypeNameMetaFieldDef : fields[node.name.value];\n                    if (!field) {\n                        return null;\n                    }\n                    const args = field.args != null ? field.args : [];\n                    const argsMap = Object.create(null);\n                    for (const arg of args) {\n                        argsMap[arg.name] = arg;\n                    }\n                    if (node.arguments != null) {\n                        const newArgs = [];\n                        for (const arg of node.arguments) {\n                            if (arg.name.value in argsMap) {\n                                newArgs.push(arg);\n                            }\n                        }\n                        if (newArgs.length !== node.arguments.length) {\n                            return {\n                                ...node,\n                                arguments: newArgs,\n                            };\n                        }\n                    }\n                }\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_10__.isUnionType)(parentType) && typeInfo.getType() == null) {\n                    const possibleTypeNames = [];\n                    for (const memberType of parentType.getTypes()) {\n                        const possibleField = memberType.getFields()[node.name.value];\n                        if (possibleField != null) {\n                            possibleTypeNames.push(memberType.name);\n                        }\n                    }\n                    if (possibleTypeNames.length > 0) {\n                        return possibleTypeNames.map(possibleTypeName => ({\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT,\n                            typeCondition: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                                name: {\n                                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                    value: possibleTypeName,\n                                },\n                            },\n                            selectionSet: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n                                selections: [node],\n                            },\n                        }));\n                    }\n                }\n            },\n            leave: node => {\n                const type = typeInfo.getType();\n                if (type == null) {\n                    // console.warn(\n                    //   `Invalid type for node: ${typeInfo.getParentType()?.name}.${node.name.value}`,\n                    // );\n                    return null;\n                }\n                const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_10__.getNamedType)(type);\n                // eslint-disable-next-line no-constant-binary-expression\n                if (!schema.getType(namedType.name) == null) {\n                    return null;\n                }\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_10__.isObjectType)(namedType) || (0,graphql__WEBPACK_IMPORTED_MODULE_10__.isInterfaceType)(namedType)) {\n                    const selections = node.selectionSet != null ? node.selectionSet.selections : null;\n                    if (selections == null || selections.length === 0) {\n                        return null;\n                    }\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_SPREAD]: {\n            enter: node => {\n                if (!(node.name.value in validFragments)) {\n                    return null;\n                }\n                const parentType = typeInfo.getParentType();\n                const innerType = validFragments[node.name.value];\n                if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__.implementsAbstractType)(schema, parentType, innerType)) {\n                    return null;\n                }\n                usedFragments.push(node.name.value);\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT]: {\n            enter: node => {\n                if (node.typeCondition != null) {\n                    const parentType = typeInfo.getParentType();\n                    const innerType = schema.getType(node.typeCondition.name.value);\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_10__.isUnionType)(parentType) &&\n                        parentType.getTypes().some(t => t.name === innerType?.name)) {\n                        return node;\n                    }\n                    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__.implementsAbstractType)(schema, parentType, innerType)) {\n                        return null;\n                    }\n                }\n            },\n            leave: node => {\n                if (!node.selectionSet?.selections?.length) {\n                    return null;\n                }\n            },\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET]: {\n            leave: node => {\n                const parentType = typeInfo.getParentType();\n                if (parentType != null && (0,graphql__WEBPACK_IMPORTED_MODULE_10__.isAbstractType)(parentType)) {\n                    const selections = node.selections.concat([\n                        {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n                            name: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                value: '__typename',\n                            },\n                        },\n                    ]);\n                    return {\n                        ...node,\n                        selections,\n                    };\n                }\n            },\n        },\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    filteredSelectionSetVisitorKeys);\n    (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(filteredSelectionSet, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.VARIABLE]: variableNode => {\n            usedVariables.push(variableNode.name.value);\n        },\n    }, \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    variablesVisitorKeys);\n    return {\n        selectionSet: filteredSelectionSet,\n        usedFragments,\n        usedVariables,\n    };\n}\nfunction union(...arrays) {\n    const cache = Object.create(null);\n    const result = [];\n    for (const array of arrays) {\n        for (const item of array) {\n            if (!(item in cache)) {\n                cache[item] = true;\n                result.push(item);\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/finalizeGatewayRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDocumentMetadata: () => (/* binding */ getDocumentMetadata)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction getDocumentMetadata(document) {\n    const operations = [];\n    const fragments = [];\n    const fragmentNames = new Set();\n    for (let i = 0; i < document.definitions.length; i++) {\n        const def = document.definitions[i];\n        if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION) {\n            fragments.push(def);\n            fragmentNames.add(def.name.value);\n        }\n        else if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OPERATION_DEFINITION) {\n            operations.push(def);\n        }\n    }\n    return {\n        operations,\n        fragments,\n        fragmentNames,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9nZXREb2N1bWVudE1ldGFkYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBQ3hCO0FBQ1A7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGlDQUFpQztBQUNyRDtBQUNBLHlCQUF5Qix5Q0FBSTtBQUM3QjtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUNBQUk7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvZXNtL2dldERvY3VtZW50TWV0YWRhdGEuanM/MmYzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RG9jdW1lbnRNZXRhZGF0YShkb2N1bWVudCkge1xuICAgIGNvbnN0IG9wZXJhdGlvbnMgPSBbXTtcbiAgICBjb25zdCBmcmFnbWVudHMgPSBbXTtcbiAgICBjb25zdCBmcmFnbWVudE5hbWVzID0gbmV3IFNldCgpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZG9jdW1lbnQuZGVmaW5pdGlvbnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgZGVmID0gZG9jdW1lbnQuZGVmaW5pdGlvbnNbaV07XG4gICAgICAgIGlmIChkZWYua2luZCA9PT0gS2luZC5GUkFHTUVOVF9ERUZJTklUSU9OKSB7XG4gICAgICAgICAgICBmcmFnbWVudHMucHVzaChkZWYpO1xuICAgICAgICAgICAgZnJhZ21lbnROYW1lcy5hZGQoZGVmLm5hbWUudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGRlZi5raW5kID09PSBLaW5kLk9QRVJBVElPTl9ERUZJTklUSU9OKSB7XG4gICAgICAgICAgICBvcGVyYXRpb25zLnB1c2goZGVmKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBvcGVyYXRpb25zLFxuICAgICAgICBmcmFnbWVudHMsXG4gICAgICAgIGZyYWdtZW50TmFtZXMsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/leftOver.js":
/*!***************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/leftOver.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLAN_LEFT_OVER: () => (/* binding */ PLAN_LEFT_OVER),\n/* harmony export */   createDeferred: () => (/* binding */ createDeferred),\n/* harmony export */   getPlanLeftOverFromParent: () => (/* binding */ getPlanLeftOverFromParent),\n/* harmony export */   leftOverByDelegationPlan: () => (/* binding */ leftOverByDelegationPlan)\n/* harmony export */ });\n// TODO: Remove this after Node 22\nfunction createDeferred() {\n    if (Promise.withResolvers) {\n        return Promise.withResolvers();\n    }\n    let resolve;\n    let reject;\n    const promise = new Promise((_resolve, _reject) => {\n        resolve = _resolve;\n        reject = _reject;\n    });\n    return { promise, resolve: resolve, reject: reject };\n}\nconst leftOverByDelegationPlan = new WeakMap();\nconst PLAN_LEFT_OVER = Symbol('PLAN_LEFT_OVER');\nfunction getPlanLeftOverFromParent(parent) {\n    if (parent != null && typeof parent === 'object') {\n        return parent[PLAN_LEFT_OVER];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9sZWZ0T3Zlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsYUFBYTtBQUNiO0FBQ087QUFDQTtBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9lc20vbGVmdE92ZXIuanM/OWIzNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUT0RPOiBSZW1vdmUgdGhpcyBhZnRlciBOb2RlIDIyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVmZXJyZWQoKSB7XG4gICAgaWYgKFByb21pc2Uud2l0aFJlc29sdmVycykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS53aXRoUmVzb2x2ZXJzKCk7XG4gICAgfVxuICAgIGxldCByZXNvbHZlO1xuICAgIGxldCByZWplY3Q7XG4gICAgY29uc3QgcHJvbWlzZSA9IG5ldyBQcm9taXNlKChfcmVzb2x2ZSwgX3JlamVjdCkgPT4ge1xuICAgICAgICByZXNvbHZlID0gX3Jlc29sdmU7XG4gICAgICAgIHJlamVjdCA9IF9yZWplY3Q7XG4gICAgfSk7XG4gICAgcmV0dXJuIHsgcHJvbWlzZSwgcmVzb2x2ZTogcmVzb2x2ZSwgcmVqZWN0OiByZWplY3QgfTtcbn1cbmV4cG9ydCBjb25zdCBsZWZ0T3ZlckJ5RGVsZWdhdGlvblBsYW4gPSBuZXcgV2Vha01hcCgpO1xuZXhwb3J0IGNvbnN0IFBMQU5fTEVGVF9PVkVSID0gU3ltYm9sKCdQTEFOX0xFRlRfT1ZFUicpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFBsYW5MZWZ0T3ZlckZyb21QYXJlbnQocGFyZW50KSB7XG4gICAgaWYgKHBhcmVudCAhPSBudWxsICYmIHR5cGVvZiBwYXJlbnQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiBwYXJlbnRbUExBTl9MRUZUX09WRVJdO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/leftOver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/mergeFields.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/mergeFields.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   annotateExternalObject: () => (/* binding */ annotateExternalObject),\n/* harmony export */   getActualFieldNodes: () => (/* binding */ getActualFieldNodes),\n/* harmony export */   getSubschema: () => (/* binding */ getSubschema),\n/* harmony export */   getUnpathedErrors: () => (/* binding */ getUnpathedErrors),\n/* harmony export */   handleResolverResult: () => (/* binding */ handleResolverResult),\n/* harmony export */   isExternalObject: () => (/* binding */ isExternalObject),\n/* harmony export */   mergeFields: () => (/* binding */ mergeFields)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/jsutils/Path.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n/* harmony import */ var _leftOver_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./leftOver.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/leftOver.js\");\n/* harmony import */ var _symbols_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./symbols.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/symbols.js\");\n\n\n\n\nfunction isExternalObject(data) {\n    return data[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.UNPATHED_ERRORS_SYMBOL] !== undefined;\n}\nfunction annotateExternalObject(object, errors, subschema, subschemaMap) {\n    Object.defineProperties(object, {\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_0__.OBJECT_SUBSCHEMA_SYMBOL]: { value: subschema, writable: true },\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_0__.FIELD_SUBSCHEMA_MAP_SYMBOL]: { value: subschemaMap, writable: true },\n        [_symbols_js__WEBPACK_IMPORTED_MODULE_0__.UNPATHED_ERRORS_SYMBOL]: { value: errors, writable: true },\n    });\n    return object;\n}\nfunction getSubschema(object, responseKey) {\n    return object[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.FIELD_SUBSCHEMA_MAP_SYMBOL]?.[responseKey] ?? object[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.OBJECT_SUBSCHEMA_SYMBOL];\n}\nfunction getUnpathedErrors(object) {\n    return object[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.UNPATHED_ERRORS_SYMBOL];\n}\nconst EMPTY_ARRAY = [];\nconst EMPTY_OBJECT = Object.create(null);\nconst getActualFieldNodes = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function (fieldNode) {\n    return [fieldNode];\n});\nfunction mergeFields(mergedTypeInfo, object, sourceSubschema, context, info) {\n    const delegationMaps = mergedTypeInfo.delegationPlanBuilder(info.schema, sourceSubschema, info.variableValues != null && Object.keys(info.variableValues).length > 0\n        ? info.variableValues\n        : EMPTY_OBJECT, info.fragments != null && Object.keys(info.fragments).length > 0\n        ? info.fragments\n        : EMPTY_OBJECT, info.fieldNodes?.length\n        ? info.fieldNodes.length === 1\n            ? getActualFieldNodes(info.fieldNodes[0])\n            : info.fieldNodes\n        : EMPTY_ARRAY);\n    const leftOver = _leftOver_js__WEBPACK_IMPORTED_MODULE_2__.leftOverByDelegationPlan.get(delegationMaps);\n    if (leftOver) {\n        object[_leftOver_js__WEBPACK_IMPORTED_MODULE_2__.PLAN_LEFT_OVER] = leftOver;\n    }\n    const res$ = delegationMaps.reduce((prev, delegationMap) => {\n        function executeFn() {\n            return executeDelegationStage(mergedTypeInfo, delegationMap, object, context, info);\n        }\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(prev)) {\n            return prev.then(executeFn);\n        }\n        return executeFn();\n    }, undefined);\n    function handleDelegationPlanResult() {\n        return object;\n    }\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(res$)) {\n        return res$.then(handleDelegationPlanResult);\n    }\n    return handleDelegationPlanResult();\n}\nfunction handleResolverResult(resolverResult, subschema, selectionSet, object, combinedFieldSubschemaMap, info, path, combinedErrors) {\n    if (resolverResult instanceof Error || resolverResult == null) {\n        const schema = subschema.transformedSchema || info.schema;\n        const type = schema.getType(object.__typename);\n        const { fields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.collectFields)(schema, EMPTY_OBJECT, EMPTY_OBJECT, type, selectionSet);\n        const nullResult = {};\n        for (const [responseKey, fieldNodes] of fields) {\n            const combinedPath = [...path, responseKey];\n            if (resolverResult instanceof graphql__WEBPACK_IMPORTED_MODULE_5__.GraphQLError) {\n                nullResult[responseKey] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.relocatedError)(resolverResult, combinedPath);\n            }\n            else if (resolverResult instanceof Error) {\n                nullResult[responseKey] = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.locatedError)(resolverResult, fieldNodes, combinedPath);\n            }\n            else {\n                nullResult[responseKey] = null;\n            }\n        }\n        resolverResult = nullResult;\n    }\n    else {\n        if (resolverResult[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.UNPATHED_ERRORS_SYMBOL]) {\n            combinedErrors.push(...resolverResult[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.UNPATHED_ERRORS_SYMBOL]);\n        }\n    }\n    const objectSubschema = resolverResult[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.OBJECT_SUBSCHEMA_SYMBOL];\n    const fieldSubschemaMap = resolverResult[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.FIELD_SUBSCHEMA_MAP_SYMBOL];\n    for (const responseKey in resolverResult) {\n        if (responseKey === '__proto__') {\n            continue;\n        }\n        const existingPropValue = object[responseKey];\n        const sourcePropValue = resolverResult[responseKey];\n        if (responseKey === '__typename' &&\n            existingPropValue !== sourcePropValue &&\n            (0,graphql__WEBPACK_IMPORTED_MODULE_8__.isAbstractType)(subschema.transformedSchema.getType(sourcePropValue))) {\n            continue;\n        }\n        if (sourcePropValue != null || existingPropValue == null) {\n            if (existingPropValue != null &&\n                typeof existingPropValue === 'object' &&\n                Object.keys(existingPropValue).length > 0) {\n                if (Array.isArray(existingPropValue) &&\n                    Array.isArray(sourcePropValue) &&\n                    existingPropValue.length === sourcePropValue.length) {\n                    object[responseKey] = existingPropValue.map((existingElement, index) => sourcePropValue instanceof Error\n                        ? existingElement\n                        : (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.mergeDeep)([existingElement, sourcePropValue[index]]));\n                }\n                else if (!(sourcePropValue instanceof Error)) {\n                    object[responseKey] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.mergeDeep)([existingPropValue, sourcePropValue]);\n                }\n            }\n            else {\n                object[responseKey] = sourcePropValue;\n            }\n        }\n        combinedFieldSubschemaMap[responseKey] =\n            fieldSubschemaMap?.[responseKey] ?? objectSubschema ?? subschema;\n    }\n}\nfunction executeDelegationStage(mergedTypeInfo, delegationMap, object, context, info) {\n    const combinedErrors = object[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.UNPATHED_ERRORS_SYMBOL];\n    const path = (0,graphql__WEBPACK_IMPORTED_MODULE_10__.pathToArray)(info.path);\n    const combinedFieldSubschemaMap = object[_symbols_js__WEBPACK_IMPORTED_MODULE_0__.FIELD_SUBSCHEMA_MAP_SYMBOL];\n    const jobs = [];\n    for (const [subschema, selectionSet] of delegationMap) {\n        const schema = subschema.transformedSchema || info.schema;\n        const type = schema.getType(object.__typename);\n        const resolver = mergedTypeInfo.resolvers.get(subschema);\n        if (resolver) {\n            try {\n                const resolverResult$ = resolver(object, context, info, subschema, selectionSet, undefined, type);\n                if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(resolverResult$)) {\n                    jobs.push(resolverResult$.then(resolverResult => handleResolverResult(resolverResult, subschema, selectionSet, object, combinedFieldSubschemaMap, info, path, combinedErrors)).catch(error => handleResolverResult(error, subschema, selectionSet, object, combinedFieldSubschemaMap, info, path, combinedErrors)));\n                }\n                else {\n                    handleResolverResult(resolverResult$, subschema, selectionSet, object, combinedFieldSubschemaMap, info, path, combinedErrors);\n                }\n            }\n            catch (error) {\n                handleResolverResult(error, subschema, selectionSet, object, combinedFieldSubschemaMap, info, path, combinedErrors);\n            }\n        }\n    }\n    if (jobs.length) {\n        if (jobs.length === 1) {\n            return jobs[0];\n        }\n        return Promise.all(jobs);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/mergeFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareGatewayDocument: () => (/* binding */ prepareGatewayDocument)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _extractUnavailableFields_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./extractUnavailableFields.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/extractUnavailableFields.js\");\n/* harmony import */ var _getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getDocumentMetadata.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/getDocumentMetadata.js\");\n\n\n\n\nfunction prepareGatewayDocument(originalDocument, transformedSchema, returnType, infoSchema) {\n    let wrappedConcreteTypesDocument = wrapConcreteTypes(returnType, transformedSchema, originalDocument);\n    if (infoSchema == null) {\n        return wrappedConcreteTypesDocument;\n    }\n    const visitedSelections = new WeakSet();\n    wrappedConcreteTypesDocument = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(wrappedConcreteTypesDocument, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET](node) {\n            const newSelections = [];\n            for (const selectionNode of node.selections) {\n                if (selectionNode.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT &&\n                    selectionNode.typeCondition != null &&\n                    !visitedSelections.has(selectionNode)) {\n                    visitedSelections.add(selectionNode);\n                    const typeName = selectionNode.typeCondition.name.value;\n                    const gatewayType = infoSchema.getType(typeName);\n                    const subschemaType = transformedSchema.getType(typeName);\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(gatewayType)) {\n                        const possibleTypes = infoSchema.getPossibleTypes(gatewayType);\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(subschemaType)) {\n                            const possibleTypesInSubschema = transformedSchema.getPossibleTypes(subschemaType);\n                            const extraTypesForSubschema = new Set();\n                            for (const possibleType of possibleTypes) {\n                                const possibleTypeInSubschema = transformedSchema.getType(possibleType.name);\n                                // If it is a possible type in the gateway schema, it should be a possible type in the subschema\n                                if (possibleTypeInSubschema &&\n                                    possibleTypesInSubschema.some(t => t.name === possibleType.name)) {\n                                    continue;\n                                }\n                                // If it doesn't exist in the subschema\n                                if (!possibleTypeInSubschema) {\n                                    continue;\n                                }\n                                // If it exists in the subschema but it is not a possible type\n                                extraTypesForSubschema.add(possibleType.name);\n                            }\n                            for (const extraType of extraTypesForSubschema) {\n                                newSelections.push({\n                                    ...selectionNode,\n                                    typeCondition: {\n                                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                                        name: {\n                                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                            value: extraType,\n                                        },\n                                    },\n                                });\n                            }\n                        }\n                    }\n                    const typeInSubschema = transformedSchema.getType(typeName);\n                    if (!typeInSubschema) {\n                        for (const selection of selectionNode.selectionSet.selections) {\n                            newSelections.push(selection);\n                        }\n                    }\n                    if (typeInSubschema && 'getFields' in typeInSubschema) {\n                        const fieldMap = typeInSubschema.getFields();\n                        for (const selection of selectionNode.selectionSet.selections) {\n                            if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD) {\n                                const fieldName = selection.name.value;\n                                const field = fieldMap[fieldName];\n                                if (!field) {\n                                    newSelections.push(selection);\n                                }\n                            }\n                        }\n                    }\n                }\n                newSelections.push(selectionNode);\n            }\n            return {\n                ...node,\n                selections: newSelections,\n            };\n        },\n    });\n    const { possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField, } = getSchemaMetaData(infoSchema, transformedSchema);\n    const { operations, fragments, fragmentNames } = (0,_getDocumentMetadata_js__WEBPACK_IMPORTED_MODULE_3__.getDocumentMetadata)(wrappedConcreteTypesDocument);\n    const { expandedFragments, fragmentReplacements } = getExpandedFragments(fragments, fragmentNames, possibleTypesMap);\n    const typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_4__.TypeInfo(transformedSchema);\n    const expandedDocument = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT,\n        definitions: [...operations, ...fragments, ...expandedFragments],\n    };\n    const visitorKeyMap = {\n        Document: ['definitions'],\n        OperationDefinition: ['selectionSet'],\n        SelectionSet: ['selections'],\n        Field: ['selectionSet'],\n        InlineFragment: ['selectionSet'],\n        FragmentDefinition: ['selectionSet'],\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(expandedDocument, (0,graphql__WEBPACK_IMPORTED_MODULE_4__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET]: node => visitSelectionSet(node, fragmentReplacements, transformedSchema, typeInfo, possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField),\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    visitorKeyMap);\n}\nconst shouldAdd = () => true;\nfunction visitSelectionSet(node, fragmentReplacements, schema, typeInfo, possibleTypesMap, reversePossibleTypesMap, interfaceExtensionsMap, fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField) {\n    const newSelections = new Set();\n    const maybeType = typeInfo.getParentType();\n    if (maybeType != null) {\n        const parentType = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getNamedType)(maybeType);\n        const parentTypeName = parentType.name;\n        const fieldNodes = fieldNodesByType[parentTypeName];\n        if (fieldNodes) {\n            for (const fieldNode of fieldNodes) {\n                newSelections.add(fieldNode);\n            }\n        }\n        const interfaceExtensions = interfaceExtensionsMap[parentType.name];\n        const interfaceExtensionFields = [];\n        for (const selection of node.selections) {\n            if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT) {\n                if (selection.typeCondition != null) {\n                    const possibleTypes = possibleTypesMap[selection.typeCondition.name.value];\n                    if (possibleTypes == null) {\n                        const fieldNodesForTypeName = fieldNodesByField[parentTypeName]?.['__typename'];\n                        if (fieldNodesForTypeName) {\n                            for (const fieldNode of fieldNodesForTypeName) {\n                                newSelections.add(fieldNode);\n                            }\n                        }\n                        newSelections.add(selection);\n                        continue;\n                    }\n                    for (const possibleTypeName of possibleTypes) {\n                        const maybePossibleType = schema.getType(possibleTypeName);\n                        if (maybePossibleType != null &&\n                            (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.implementsAbstractType)(schema, parentType, maybePossibleType)) {\n                            newSelections.add(generateInlineFragment(possibleTypeName, selection.selectionSet));\n                        }\n                    }\n                    if (possibleTypes.length === 0) {\n                        newSelections.add(selection);\n                    }\n                }\n                else {\n                    newSelections.add(selection);\n                }\n            }\n            else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_SPREAD) {\n                const fragmentName = selection.name.value;\n                if (!fragmentReplacements[fragmentName]) {\n                    newSelections.add(selection);\n                    continue;\n                }\n                for (const replacement of fragmentReplacements[fragmentName]) {\n                    const typeName = replacement.typeName;\n                    const maybeReplacementType = schema.getType(typeName);\n                    if (maybeReplacementType != null &&\n                        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.implementsAbstractType)(schema, parentType, maybeType)) {\n                        newSelections.add({\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_SPREAD,\n                            name: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                value: replacement.fragmentName,\n                            },\n                        });\n                    }\n                }\n            }\n            else {\n                const fieldName = selection.name.value;\n                let skipAddingDependencyNodes = false;\n                // TODO: Optimization to prevent extra fields to the subgraph\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(parentType)) {\n                    skipAddingDependencyNodes = false;\n                    const fieldNodesForTypeName = fieldNodesByField[parentTypeName]?.['__typename'];\n                    if (fieldNodesForTypeName) {\n                        for (const fieldNode of fieldNodesForTypeName) {\n                            newSelections.add(fieldNode);\n                        }\n                    }\n                }\n                else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(parentType) || (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(parentType)) {\n                    const fieldMap = parentType.getFields();\n                    const field = fieldMap[fieldName];\n                    if (field) {\n                        const unavailableFields = (0,_extractUnavailableFields_js__WEBPACK_IMPORTED_MODULE_6__.extractUnavailableFields)(schema, field, selection, shouldAdd);\n                        skipAddingDependencyNodes = unavailableFields.length === 0;\n                    }\n                }\n                if (!skipAddingDependencyNodes) {\n                    const fieldNodesMapForType = fieldNodesByField[parentTypeName];\n                    if (fieldNodesMapForType) {\n                        addDependenciesNestedly(selection, new Set(), fieldNodesMapForType, newSelections);\n                    }\n                    const dynamicSelectionSets = dynamicSelectionSetsByField[parentTypeName]?.[fieldName];\n                    if (dynamicSelectionSets != null) {\n                        for (const selectionSetFn of dynamicSelectionSets) {\n                            const selectionSet = selectionSetFn(selection);\n                            if (selectionSet != null) {\n                                for (const selection of selectionSet.selections) {\n                                    newSelections.add(selection);\n                                }\n                            }\n                        }\n                    }\n                }\n                if (interfaceExtensions?.[fieldName]) {\n                    interfaceExtensionFields.push(selection);\n                }\n                else {\n                    newSelections.add(selection);\n                }\n            }\n        }\n        if (reversePossibleTypesMap[parentType.name]) {\n            newSelections.add({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                    value: '__typename',\n                },\n            });\n        }\n        if (interfaceExtensionFields.length) {\n            const possibleTypes = possibleTypesMap[parentType.name];\n            if (possibleTypes != null) {\n                for (const possibleType of possibleTypes) {\n                    newSelections.add(generateInlineFragment(possibleType, {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n                        selections: interfaceExtensionFields,\n                    }));\n                }\n            }\n        }\n        return {\n            ...node,\n            selections: Array.from(newSelections),\n        };\n    }\n    return node;\n}\nfunction addDependenciesNestedly(fieldNode, seenFieldNames, fieldNodesByField, newSelections) {\n    if (seenFieldNames.has(fieldNode.name.value)) {\n        return;\n    }\n    seenFieldNames.add(fieldNode.name.value);\n    const fieldNodes = fieldNodesByField[fieldNode.name.value];\n    if (fieldNodes != null) {\n        for (const nestedFieldNode of fieldNodes) {\n            newSelections.add(nestedFieldNode);\n            addDependenciesNestedly(nestedFieldNode, seenFieldNames, fieldNodesByField, newSelections);\n        }\n    }\n}\nfunction generateInlineFragment(typeName, selectionSet) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT,\n        typeCondition: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                value: typeName,\n            },\n        },\n        selectionSet,\n    };\n}\nconst getSchemaMetaData = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.memoize2)((sourceSchema, targetSchema) => {\n    const typeMap = sourceSchema.getTypeMap();\n    const targetTypeMap = targetSchema.getTypeMap();\n    const possibleTypesMap = Object.create(null);\n    const interfaceExtensionsMap = Object.create(null);\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(type)) {\n            const targetType = targetTypeMap[typeName];\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type) && (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(targetType)) {\n                const targetTypeFields = targetType.getFields();\n                const sourceTypeFields = type.getFields();\n                const extensionFields = Object.create(null);\n                let isExtensionFieldsEmpty = true;\n                for (const fieldName in sourceTypeFields) {\n                    if (!targetTypeFields[fieldName]) {\n                        extensionFields[fieldName] = true;\n                        isExtensionFieldsEmpty = false;\n                    }\n                }\n                if (!isExtensionFieldsEmpty) {\n                    interfaceExtensionsMap[typeName] = extensionFields;\n                }\n            }\n            if (interfaceExtensionsMap[typeName] || !(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(targetType)) {\n                const implementations = sourceSchema.getPossibleTypes(type);\n                possibleTypesMap[typeName] = [];\n                for (const impl of implementations) {\n                    if (targetTypeMap[impl.name]) {\n                        possibleTypesMap[typeName].push(impl.name);\n                    }\n                }\n            }\n        }\n    }\n    const stitchingInfo = sourceSchema.extensions?.['stitchingInfo'];\n    return {\n        possibleTypesMap,\n        reversePossibleTypesMap: reversePossibleTypesMap(possibleTypesMap),\n        interfaceExtensionsMap,\n        fieldNodesByType: stitchingInfo?.fieldNodesByType ?? {},\n        fieldNodesByField: stitchingInfo?.fieldNodesByField ?? {},\n        dynamicSelectionSetsByField: stitchingInfo?.dynamicSelectionSetsByField ?? {},\n    };\n});\nfunction reversePossibleTypesMap(possibleTypesMap) {\n    const result = Object.create(null);\n    for (const typeName in possibleTypesMap) {\n        const toTypeNames = possibleTypesMap[typeName];\n        for (const toTypeName of toTypeNames) {\n            if (!result[toTypeName]) {\n                result[toTypeName] = [];\n            }\n            result[toTypeName].push(typeName);\n        }\n    }\n    return result;\n}\nfunction getExpandedFragments(fragments, fragmentNames, possibleTypesMap) {\n    let fragmentCounter = 0;\n    function generateFragmentName(typeName) {\n        let fragmentName;\n        do {\n            fragmentName = `_${typeName}_Fragment${fragmentCounter.toString()}`;\n            fragmentCounter++;\n        } while (fragmentNames.has(fragmentName));\n        return fragmentName;\n    }\n    const expandedFragments = [];\n    const fragmentReplacements = Object.create(null);\n    for (const fragment of fragments) {\n        const possibleTypes = possibleTypesMap[fragment.typeCondition.name.value];\n        if (possibleTypes != null) {\n            const fragmentName = fragment.name.value;\n            fragmentReplacements[fragmentName] = [];\n            for (const possibleTypeName of possibleTypes) {\n                const name = generateFragmentName(possibleTypeName);\n                fragmentNames.add(name);\n                expandedFragments.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                        value: name,\n                    },\n                    typeCondition: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                            value: possibleTypeName,\n                        },\n                    },\n                    selectionSet: fragment.selectionSet,\n                });\n                fragmentReplacements[fragmentName].push({\n                    fragmentName: name,\n                    typeName: possibleTypeName,\n                });\n            }\n        }\n    }\n    return {\n        expandedFragments,\n        fragmentReplacements,\n    };\n}\nfunction wrapConcreteTypes(returnType, targetSchema, document) {\n    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getNamedType)(returnType);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isLeafType)(namedType)) {\n        return document;\n    }\n    let possibleTypes = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(namedType)\n        ? targetSchema.getPossibleTypes(namedType)\n        : [namedType];\n    if (possibleTypes.length === 0) {\n        possibleTypes = [namedType];\n    }\n    const rootTypeNames = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.getRootTypeNames)(targetSchema);\n    const typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_4__.TypeInfo(targetSchema);\n    const visitorKeys = {\n        Document: ['definitions'],\n        OperationDefinition: ['selectionSet'],\n        SelectionSet: ['selections'],\n        InlineFragment: ['selectionSet'],\n        FragmentDefinition: ['selectionSet'],\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(document, (0,graphql__WEBPACK_IMPORTED_MODULE_4__.visitWithTypeInfo)(typeInfo, {\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FRAGMENT_DEFINITION]: (node) => {\n            const typeName = node.typeCondition.name.value;\n            if (!rootTypeNames.has(typeName)) {\n                return false;\n            }\n        },\n        [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD]: (node) => {\n            const fieldType = typeInfo.getType();\n            if (fieldType) {\n                const fieldNamedType = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getNamedType)(fieldType);\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isAbstractType)(fieldNamedType) &&\n                    fieldNamedType.name !== namedType.name &&\n                    possibleTypes.length > 0) {\n                    return {\n                        ...node,\n                        selectionSet: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n                            selections: possibleTypes.map(possibleType => ({\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INLINE_FRAGMENT,\n                                typeCondition: {\n                                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                                    name: {\n                                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                                        value: possibleType.name,\n                                    },\n                                },\n                                selectionSet: node.selectionSet,\n                            })),\n                        },\n                    };\n                }\n            }\n        },\n    }), \n    // visitorKeys argument usage a la https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n    // empty keys cannot be removed only because of typescript errors\n    // will hopefully be fixed in future version of graphql-js to be optional\n    visitorKeys);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/prepareGatewayDocument.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   resolveExternalValue: () => (/* binding */ resolveExternalValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _mergeFields_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mergeFields.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n\n\n\nfunction resolveExternalValue(result, unpathedErrors, subschema, context, info, returnType = getReturnType(info), skipTypeMerging) {\n    const type = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(returnType);\n    if (result instanceof Error) {\n        return result;\n    }\n    if (result == null) {\n        return reportUnpathedErrorsViaNull(unpathedErrors);\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n        // Gateway doesn't need to know about errors in leaf values\n        // If an enum value is invalid, it is an subschema error not a gateway error\n        try {\n            return type.parseValue(result);\n        }\n        catch {\n            return null;\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(type)) {\n        const result$ = resolveExternalObject(type, result, unpathedErrors, subschema, context, info, skipTypeMerging);\n        if (info && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(type)) {\n            function checkAbstractResolvedCorrectly(result) {\n                if (result.__typename != null) {\n                    const resolvedType = info.schema.getType(result.__typename);\n                    if (!resolvedType) {\n                        return null;\n                    }\n                }\n                return result;\n            }\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.isPromise)(result$)) {\n                return result$.then(checkAbstractResolvedCorrectly);\n            }\n            return checkAbstractResolvedCorrectly(result$);\n        }\n        return result$;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        if (Array.isArray(result)) {\n            return resolveExternalList(type, result, unpathedErrors, subschema, context, info, skipTypeMerging);\n        }\n        return resolveExternalValue(result, unpathedErrors, subschema, context, info, type.ofType, skipTypeMerging);\n    }\n}\nfunction resolveExternalObject(type, object, unpathedErrors, subschema, context, info, skipTypeMerging) {\n    // if we have already resolved this object, for example, when the identical object appears twice\n    // in a list, see https://github.com/ardatan/graphql-tools/issues/2304\n    if (!(0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_2__.isExternalObject)(object)) {\n        (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_2__.annotateExternalObject)(object, unpathedErrors, subschema, Object.create(null));\n    }\n    if (skipTypeMerging || info == null) {\n        return object;\n    }\n    const stitchingInfo = info.schema.extensions?.['stitchingInfo'];\n    if (stitchingInfo == null) {\n        return object;\n    }\n    // Within the stitching context, delegation to a stitched GraphQLSchema or SubschemaConfig\n    // will be redirected to the appropriate Subschema object, from which merge targets can be queried.\n    let mergedTypeInfo;\n    const possibleTypeNames = [object.__typename, type.name];\n    for (const possibleTypeName of possibleTypeNames) {\n        if (possibleTypeName != null &&\n            stitchingInfo.mergedTypes[possibleTypeName]?.targetSubschemas?.get(subschema)\n                ?.length) {\n            mergedTypeInfo = stitchingInfo.mergedTypes[possibleTypeName];\n            break;\n        }\n    }\n    // If there are no merge targets from the subschema, return.\n    if (!mergedTypeInfo) {\n        return object;\n    }\n    return (0,_mergeFields_js__WEBPACK_IMPORTED_MODULE_2__.mergeFields)(mergedTypeInfo, object, subschema, context, info);\n}\nfunction resolveExternalList(type, list, unpathedErrors, subschema, context, info, skipTypeMerging) {\n    return list.map(listMember => resolveExternalValue(listMember, unpathedErrors, subschema, context, info, type.ofType, skipTypeMerging));\n}\nconst reportedErrors = new WeakMap();\nfunction reportUnpathedErrorsViaNull(unpathedErrors) {\n    if (unpathedErrors.length) {\n        const unreportedErrors = [];\n        for (const error of unpathedErrors) {\n            if (!reportedErrors.has(error)) {\n                unreportedErrors.push(error);\n                reportedErrors.set(error, true);\n            }\n        }\n        if (unreportedErrors.length) {\n            if (unreportedErrors.length === 1) {\n                return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.locatedError)(unreportedErrors[0], undefined, unreportedErrors[0].path);\n            }\n            return new AggregateError(unreportedErrors.map(e => \n            // We cast path as any for GraphQL.js 14 compat\n            // locatedError path argument must be defined, but it is just forwarded to a constructor that allows a undefined value\n            // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/locatedError.js#L25\n            // https://github.com/graphql/graphql-js/blob/b4bff0ba9c15c9d7245dd68556e754c41f263289/src/error/GraphQLError.js#L19\n            (0,graphql__WEBPACK_IMPORTED_MODULE_3__.locatedError)(e, undefined, unreportedErrors[0].path)), unreportedErrors.map(error => error.message).join(', \\n'));\n        }\n    }\n    return null;\n}\nfunction getReturnType(info) {\n    if (info == null) {\n        throw new Error(`Return type cannot be inferred without a source schema.`);\n    }\n    return info.returnType;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/subschemaConfig.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/subschemaConfig.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cloneSubschemaConfig: () => (/* binding */ cloneSubschemaConfig),\n/* harmony export */   isSubschemaConfig: () => (/* binding */ isSubschemaConfig)\n/* harmony export */ });\nfunction isSubschemaConfig(value) {\n    return Boolean(value?.schema);\n}\nfunction cloneSubschemaConfig(subschemaConfig) {\n    const newSubschemaConfig = {\n        ...subschemaConfig,\n        transforms: subschemaConfig.transforms != null ? [...subschemaConfig.transforms] : undefined,\n    };\n    if (newSubschemaConfig.merge != null) {\n        newSubschemaConfig.merge = { ...subschemaConfig.merge };\n        for (const typeName in newSubschemaConfig.merge) {\n            const mergedTypeConfig = (newSubschemaConfig.merge[typeName] = {\n                ...(subschemaConfig.merge?.[typeName] ?? {}),\n            });\n            if (mergedTypeConfig.entryPoints != null) {\n                mergedTypeConfig.entryPoints = mergedTypeConfig.entryPoints.map(entryPoint => ({\n                    ...entryPoint,\n                }));\n            }\n            if (mergedTypeConfig.fields != null) {\n                const fields = (mergedTypeConfig.fields = { ...mergedTypeConfig.fields });\n                for (const fieldName in fields) {\n                    fields[fieldName] = { ...fields[fieldName] };\n                }\n            }\n        }\n    }\n    return newSubschemaConfig;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9zdWJzY2hlbWFDb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBLDJEQUEyRDtBQUMzRCxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSw0REFBNEQsNEJBQTRCO0FBQ3hGO0FBQ0EsMENBQTBDO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9zdWJzY2hlbWFDb25maWcuanM/ZDM5NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNTdWJzY2hlbWFDb25maWcodmFsdWUpIHtcbiAgICByZXR1cm4gQm9vbGVhbih2YWx1ZT8uc2NoZW1hKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjbG9uZVN1YnNjaGVtYUNvbmZpZyhzdWJzY2hlbWFDb25maWcpIHtcbiAgICBjb25zdCBuZXdTdWJzY2hlbWFDb25maWcgPSB7XG4gICAgICAgIC4uLnN1YnNjaGVtYUNvbmZpZyxcbiAgICAgICAgdHJhbnNmb3Jtczogc3Vic2NoZW1hQ29uZmlnLnRyYW5zZm9ybXMgIT0gbnVsbCA/IFsuLi5zdWJzY2hlbWFDb25maWcudHJhbnNmb3Jtc10gOiB1bmRlZmluZWQsXG4gICAgfTtcbiAgICBpZiAobmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlICE9IG51bGwpIHtcbiAgICAgICAgbmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlID0geyAuLi5zdWJzY2hlbWFDb25maWcubWVyZ2UgfTtcbiAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBuZXdTdWJzY2hlbWFDb25maWcubWVyZ2UpIHtcbiAgICAgICAgICAgIGNvbnN0IG1lcmdlZFR5cGVDb25maWcgPSAobmV3U3Vic2NoZW1hQ29uZmlnLm1lcmdlW3R5cGVOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAuLi4oc3Vic2NoZW1hQ29uZmlnLm1lcmdlPy5bdHlwZU5hbWVdID8/IHt9KSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVDb25maWcuZW50cnlQb2ludHMgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIG1lcmdlZFR5cGVDb25maWcuZW50cnlQb2ludHMgPSBtZXJnZWRUeXBlQ29uZmlnLmVudHJ5UG9pbnRzLm1hcChlbnRyeVBvaW50ID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIC4uLmVudHJ5UG9pbnQsXG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVDb25maWcuZmllbGRzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSAobWVyZ2VkVHlwZUNvbmZpZy5maWVsZHMgPSB7IC4uLm1lcmdlZFR5cGVDb25maWcuZmllbGRzIH0pO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZHNbZmllbGROYW1lXSA9IHsgLi4uZmllbGRzW2ZpZWxkTmFtZV0gfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ld1N1YnNjaGVtYUNvbmZpZztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/esm/symbols.js":
/*!**************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/esm/symbols.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FIELD_SUBSCHEMA_MAP_SYMBOL: () => (/* binding */ FIELD_SUBSCHEMA_MAP_SYMBOL),\n/* harmony export */   OBJECT_SUBSCHEMA_SYMBOL: () => (/* binding */ OBJECT_SUBSCHEMA_SYMBOL),\n/* harmony export */   UNPATHED_ERRORS_SYMBOL: () => (/* binding */ UNPATHED_ERRORS_SYMBOL)\n/* harmony export */ });\nconst UNPATHED_ERRORS_SYMBOL = Symbol.for('subschemaErrors');\nconst OBJECT_SUBSCHEMA_SYMBOL = Symbol.for('initialSubschema');\nconst FIELD_SUBSCHEMA_MAP_SYMBOL = Symbol.for('subschemaMap');\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9zeW1ib2xzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFPO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL2VzbS9zeW1ib2xzLmpzPzFkNzciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFVOUEFUSEVEX0VSUk9SU19TWU1CT0wgPSBTeW1ib2wuZm9yKCdzdWJzY2hlbWFFcnJvcnMnKTtcbmV4cG9ydCBjb25zdCBPQkpFQ1RfU1VCU0NIRU1BX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ2luaXRpYWxTdWJzY2hlbWEnKTtcbmV4cG9ydCBjb25zdCBGSUVMRF9TVUJTQ0hFTUFfTUFQX1NZTUJPTCA9IFN5bWJvbC5mb3IoJ3N1YnNjaGVtYU1hcCcpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/esm/symbols.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createBatchingExecutor: () => (/* binding */ createBatchingExecutor)\n/* harmony export */ });\n/* harmony import */ var dataloader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dataloader */ \"(ssr)/../node_modules/dataloader/index.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _mergeRequests_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mergeRequests.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js\");\n/* harmony import */ var _splitResult_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./splitResult.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/splitResult.js\");\n\n\n\n\n\nfunction createBatchingExecutor(executor, dataLoaderOptions, extensionsReducer = defaultExtensionsReducer) {\n    const loadFn = createLoadFn(executor, extensionsReducer);\n    const queryLoader = new dataloader__WEBPACK_IMPORTED_MODULE_0__(loadFn, dataLoaderOptions);\n    const mutationLoader = new dataloader__WEBPACK_IMPORTED_MODULE_0__(loadFn, dataLoaderOptions);\n    return function batchingExecutor(request) {\n        const operationType = request.operationType ?? (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.getOperationASTFromRequest)(request)?.operation;\n        switch (operationType) {\n            case 'query':\n                return queryLoader.load(request);\n            case 'mutation':\n                return mutationLoader.load(request);\n            case 'subscription':\n                return executor(request);\n            default:\n                throw new Error(`Invalid operation type \"${operationType}\"`);\n        }\n    };\n}\nfunction createLoadFn(executor, extensionsReducer) {\n    return function batchExecuteLoadFn(requests) {\n        if (requests.length === 1) {\n            return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => executor(requests[0]))\n                .then((result) => [result])\n                .catch((err) => [err]);\n        }\n        const mergedRequests = (0,_mergeRequests_js__WEBPACK_IMPORTED_MODULE_3__.mergeRequests)(requests, extensionsReducer);\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => executor(mergedRequests)).then(resultBatches => {\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.isAsyncIterable)(resultBatches)) {\n                throw new Error('Executor must not return incremental results for batching');\n            }\n            return (0,_splitResult_js__WEBPACK_IMPORTED_MODULE_5__.splitResult)(resultBatches, requests.length);\n        });\n    };\n}\nfunction defaultExtensionsReducer(mergedExtensions, request) {\n    const newExtensions = request.extensions;\n    if (newExtensions != null) {\n        Object.assign(mergedExtensions, newExtensions);\n    }\n    return mergedExtensions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1leGVjdXRlL2VzbS9jcmVhdGVCYXRjaGluZ0V4ZWN1dG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBb0M7QUFDYztBQUNrQztBQUNqQztBQUNKO0FBQ3hDO0FBQ1A7QUFDQSw0QkFBNEIsdUNBQVU7QUFDdEMsK0JBQStCLHVDQUFVO0FBQ3pDO0FBQ0EsdURBQXVELGdGQUEwQjtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkRBQTJELGNBQWM7QUFDekU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLDREQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixnRUFBYTtBQUM1QyxtQkFBbUIsNERBQWM7QUFDakMsZ0JBQWdCLHFFQUFlO0FBQy9CO0FBQ0E7QUFDQSxtQkFBbUIsNERBQVc7QUFDOUIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1leGVjdXRlL2VzbS9jcmVhdGVCYXRjaGluZ0V4ZWN1dG9yLmpzPzUxMGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERhdGFMb2FkZXIgZnJvbSAnZGF0YWxvYWRlcic7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuaW1wb3J0IHsgZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QsIGlzQXN5bmNJdGVyYWJsZSwgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBtZXJnZVJlcXVlc3RzIH0gZnJvbSAnLi9tZXJnZVJlcXVlc3RzLmpzJztcbmltcG9ydCB7IHNwbGl0UmVzdWx0IH0gZnJvbSAnLi9zcGxpdFJlc3VsdC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQmF0Y2hpbmdFeGVjdXRvcihleGVjdXRvciwgZGF0YUxvYWRlck9wdGlvbnMsIGV4dGVuc2lvbnNSZWR1Y2VyID0gZGVmYXVsdEV4dGVuc2lvbnNSZWR1Y2VyKSB7XG4gICAgY29uc3QgbG9hZEZuID0gY3JlYXRlTG9hZEZuKGV4ZWN1dG9yLCBleHRlbnNpb25zUmVkdWNlcik7XG4gICAgY29uc3QgcXVlcnlMb2FkZXIgPSBuZXcgRGF0YUxvYWRlcihsb2FkRm4sIGRhdGFMb2FkZXJPcHRpb25zKTtcbiAgICBjb25zdCBtdXRhdGlvbkxvYWRlciA9IG5ldyBEYXRhTG9hZGVyKGxvYWRGbiwgZGF0YUxvYWRlck9wdGlvbnMpO1xuICAgIHJldHVybiBmdW5jdGlvbiBiYXRjaGluZ0V4ZWN1dG9yKHJlcXVlc3QpIHtcbiAgICAgICAgY29uc3Qgb3BlcmF0aW9uVHlwZSA9IHJlcXVlc3Qub3BlcmF0aW9uVHlwZSA/PyBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdChyZXF1ZXN0KT8ub3BlcmF0aW9uO1xuICAgICAgICBzd2l0Y2ggKG9wZXJhdGlvblR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ3F1ZXJ5JzpcbiAgICAgICAgICAgICAgICByZXR1cm4gcXVlcnlMb2FkZXIubG9hZChyZXF1ZXN0KTtcbiAgICAgICAgICAgIGNhc2UgJ211dGF0aW9uJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gbXV0YXRpb25Mb2FkZXIubG9hZChyZXF1ZXN0KTtcbiAgICAgICAgICAgIGNhc2UgJ3N1YnNjcmlwdGlvbic6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGV4ZWN1dG9yKHJlcXVlc3QpO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEludmFsaWQgb3BlcmF0aW9uIHR5cGUgXCIke29wZXJhdGlvblR5cGV9XCJgKTtcbiAgICAgICAgfVxuICAgIH07XG59XG5mdW5jdGlvbiBjcmVhdGVMb2FkRm4oZXhlY3V0b3IsIGV4dGVuc2lvbnNSZWR1Y2VyKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIGJhdGNoRXhlY3V0ZUxvYWRGbihyZXF1ZXN0cykge1xuICAgICAgICBpZiAocmVxdWVzdHMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IFZhbHVlT3JQcm9taXNlKCgpID0+IGV4ZWN1dG9yKHJlcXVlc3RzWzBdKSlcbiAgICAgICAgICAgICAgICAudGhlbigocmVzdWx0KSA9PiBbcmVzdWx0XSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4gW2Vycl0pO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG1lcmdlZFJlcXVlc3RzID0gbWVyZ2VSZXF1ZXN0cyhyZXF1ZXN0cywgZXh0ZW5zaW9uc1JlZHVjZXIpO1xuICAgICAgICByZXR1cm4gbmV3IFZhbHVlT3JQcm9taXNlKCgpID0+IGV4ZWN1dG9yKG1lcmdlZFJlcXVlc3RzKSkudGhlbihyZXN1bHRCYXRjaGVzID0+IHtcbiAgICAgICAgICAgIGlmIChpc0FzeW5jSXRlcmFibGUocmVzdWx0QmF0Y2hlcykpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4ZWN1dG9yIG11c3Qgbm90IHJldHVybiBpbmNyZW1lbnRhbCByZXN1bHRzIGZvciBiYXRjaGluZycpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHNwbGl0UmVzdWx0KHJlc3VsdEJhdGNoZXMsIHJlcXVlc3RzLmxlbmd0aCk7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5mdW5jdGlvbiBkZWZhdWx0RXh0ZW5zaW9uc1JlZHVjZXIobWVyZ2VkRXh0ZW5zaW9ucywgcmVxdWVzdCkge1xuICAgIGNvbnN0IG5ld0V4dGVuc2lvbnMgPSByZXF1ZXN0LmV4dGVuc2lvbnM7XG4gICAgaWYgKG5ld0V4dGVuc2lvbnMgIT0gbnVsbCkge1xuICAgICAgICBPYmplY3QuYXNzaWduKG1lcmdlZEV4dGVuc2lvbnMsIG5ld0V4dGVuc2lvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VkRXh0ZW5zaW9ucztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getBatchingExecutor: () => (/* binding */ getBatchingExecutor)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _createBatchingExecutor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createBatchingExecutor.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/createBatchingExecutor.js\");\n\n\nconst getBatchingExecutor = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize2of4)(function getBatchingExecutor(_context, executor, dataLoaderOptions, extensionsReducer) {\n    return (0,_createBatchingExecutor_js__WEBPACK_IMPORTED_MODULE_1__.createBatchingExecutor)(executor, dataLoaderOptions, extensionsReducer);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1leGVjdXRlL2VzbS9nZXRCYXRjaGluZ0V4ZWN1dG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFtRDtBQUNrQjtBQUM5RCw0QkFBNEIsaUVBQVc7QUFDOUMsV0FBVyxrRkFBc0I7QUFDakMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1leGVjdXRlL2VzbS9nZXRCYXRjaGluZ0V4ZWN1dG9yLmpzPzZhYmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVtb2l6ZTJvZjQgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBjcmVhdGVCYXRjaGluZ0V4ZWN1dG9yIH0gZnJvbSAnLi9jcmVhdGVCYXRjaGluZ0V4ZWN1dG9yLmpzJztcbmV4cG9ydCBjb25zdCBnZXRCYXRjaGluZ0V4ZWN1dG9yID0gbWVtb2l6ZTJvZjQoZnVuY3Rpb24gZ2V0QmF0Y2hpbmdFeGVjdXRvcihfY29udGV4dCwgZXhlY3V0b3IsIGRhdGFMb2FkZXJPcHRpb25zLCBleHRlbnNpb25zUmVkdWNlcikge1xuICAgIHJldHVybiBjcmVhdGVCYXRjaGluZ0V4ZWN1dG9yKGV4ZWN1dG9yLCBkYXRhTG9hZGVyT3B0aW9ucywgZXh0ZW5zaW9uc1JlZHVjZXIpO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/getBatchingExecutor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeRequests: () => (/* binding */ mergeRequests)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _prefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prefix.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/prefix.js\");\n// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n\n\n\n/**\n * Merge multiple queries into a single query in such a way that query results\n * can be split and transformed as if they were obtained by running original queries.\n *\n * Merging algorithm involves several transformations:\n *  1. Replace top-level fragment spreads with inline fragments (... on Query {})\n *  2. Add unique aliases to all top-level query fields (including those on inline fragments)\n *  3. Prefix all variable definitions and variable usages\n *  4. Prefix names (and spreads) of fragments\n *\n * i.e transform:\n *   [\n *     `query Foo($id: ID!) { foo, bar(id: $id), ...FooQuery }\n *     fragment FooQuery on Query { baz }`,\n *\n *    `query Bar($id: ID!) { foo: baz, bar(id: $id), ... on Query { baz } }`\n *   ]\n * to:\n *   query (\n *     $graphqlTools1_id: ID!\n *     $graphqlTools2_id: ID!\n *   ) {\n *     graphqlTools1_foo: foo,\n *     graphqlTools1_bar: bar(id: $graphqlTools1_id)\n *     ... on Query {\n *       graphqlTools1__baz: baz\n *     }\n *     graphqlTools1__foo: baz\n *     graphqlTools1__bar: bar(id: $graphqlTools1__id)\n *     ... on Query {\n *       graphqlTools1__baz: baz\n *     }\n *   }\n */\nfunction mergeRequests(requests, extensionsReducer) {\n    const mergedVariables = Object.create(null);\n    const mergedVariableDefinitions = [];\n    const mergedSelections = [];\n    const mergedFragmentDefinitions = [];\n    let mergedExtensions = Object.create(null);\n    for (let index = 0; index < requests.length; index++) {\n        const request = requests[index];\n        const prefixedRequests = prefixRequest((0,_prefix_js__WEBPACK_IMPORTED_MODULE_0__.createPrefix)(index), request);\n        for (const def of prefixedRequests.document.definitions) {\n            if (isOperationDefinition(def)) {\n                mergedSelections.push(...def.selectionSet.selections);\n                if (def.variableDefinitions) {\n                    mergedVariableDefinitions.push(...def.variableDefinitions);\n                }\n            }\n            if (isFragmentDefinition(def)) {\n                mergedFragmentDefinitions.push(def);\n            }\n        }\n        Object.assign(mergedVariables, prefixedRequests.variables);\n        mergedExtensions = extensionsReducer(mergedExtensions, request);\n    }\n    const firstRequest = requests[0];\n    const operationType = firstRequest.operationType ?? (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getOperationASTFromRequest)(firstRequest).operation;\n    const mergedOperationDefinition = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION,\n        operation: operationType,\n        variableDefinitions: mergedVariableDefinitions,\n        selectionSet: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n            selections: mergedSelections,\n        },\n    };\n    const operationName = firstRequest.operationName ?? firstRequest.info?.operation?.name?.value;\n    if (operationName) {\n        mergedOperationDefinition.name = {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n            value: operationName,\n        };\n    }\n    return {\n        document: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.DOCUMENT,\n            definitions: [mergedOperationDefinition, ...mergedFragmentDefinitions],\n        },\n        variables: mergedVariables,\n        extensions: mergedExtensions,\n        context: requests[0].context,\n        info: requests[0].info,\n        operationType,\n        rootValue: requests[0].rootValue,\n    };\n}\nfunction prefixRequest(prefix, request) {\n    const executionVariables = request.variables ?? {};\n    function prefixNode(node) {\n        return prefixNodeName(node, prefix);\n    }\n    let prefixedDocument = aliasTopLevelFields(prefix, request.document);\n    const executionVariableNames = Object.keys(executionVariables);\n    const hasFragmentDefinitions = request.document.definitions.some(def => isFragmentDefinition(def));\n    const fragmentSpreadImpl = {};\n    if (executionVariableNames.length > 0 || hasFragmentDefinitions) {\n        prefixedDocument = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(prefixedDocument, {\n            [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.VARIABLE]: prefixNode,\n            [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION]: prefixNode,\n            [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD]: node => {\n                node = prefixNodeName(node, prefix);\n                fragmentSpreadImpl[node.name.value] = true;\n                return node;\n            },\n        });\n    }\n    const prefixedVariables = {};\n    for (const variableName of executionVariableNames) {\n        prefixedVariables[prefix + variableName] = executionVariables[variableName];\n    }\n    if (hasFragmentDefinitions) {\n        prefixedDocument = {\n            ...prefixedDocument,\n            definitions: prefixedDocument.definitions.filter(def => {\n                return !isFragmentDefinition(def) || fragmentSpreadImpl[def.name.value];\n            }),\n        };\n    }\n    return {\n        document: prefixedDocument,\n        variables: prefixedVariables,\n    };\n}\n/**\n * Adds prefixed aliases to top-level fields of the query.\n *\n * @see aliasFieldsInSelection for implementation details\n */\nfunction aliasTopLevelFields(prefix, document) {\n    const transformer = {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION]: (def) => {\n            const { selections } = def.selectionSet;\n            return {\n                ...def,\n                selectionSet: {\n                    ...def.selectionSet,\n                    selections: aliasFieldsInSelection(prefix, selections, document),\n                },\n            };\n        },\n    };\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(document, transformer, {\n        [graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.DOCUMENT]: [`definitions`],\n    });\n}\n/**\n * Add aliases to fields of the selection, including top-level fields of inline fragments.\n * Fragment spreads are converted to inline fragments and their top-level fields are also aliased.\n *\n * Note that this method is shallow. It adds aliases only to the top-level fields and doesn't\n * descend to field sub-selections.\n *\n * For example, transforms:\n *   {\n *     foo\n *     ... on Query { foo }\n *     ...FragmentWithBarField\n *   }\n * To:\n *   {\n *     graphqlTools1_foo: foo\n *     ... on Query { graphqlTools1_foo: foo }\n *     ... on Query { graphqlTools1_bar: bar }\n *   }\n */\nfunction aliasFieldsInSelection(prefix, selections, document) {\n    return selections.map(selection => {\n        switch (selection.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT:\n                return aliasFieldsInInlineFragment(prefix, selection, document);\n            case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_SPREAD: {\n                const inlineFragment = inlineFragmentSpread(selection, document);\n                return aliasFieldsInInlineFragment(prefix, inlineFragment, document);\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD:\n            default:\n                return aliasField(selection, prefix);\n        }\n    });\n}\n/**\n * Add aliases to top-level fields of the inline fragment.\n * Returns new inline fragment node.\n *\n * For Example, transforms:\n *   ... on Query { foo, ... on Query { bar: foo } }\n * To\n *   ... on Query { graphqlTools1_foo: foo, ... on Query { graphqlTools1_bar: foo } }\n */\nfunction aliasFieldsInInlineFragment(prefix, fragment, document) {\n    const { selections } = fragment.selectionSet;\n    return {\n        ...fragment,\n        selectionSet: {\n            ...fragment.selectionSet,\n            selections: aliasFieldsInSelection(prefix, selections, document),\n        },\n    };\n}\n/**\n * Replaces fragment spread with inline fragment\n *\n * Example:\n *   query { ...Spread }\n *   fragment Spread on Query { bar }\n *\n * Transforms to:\n *   query { ... on Query { bar } }\n */\nfunction inlineFragmentSpread(spread, document) {\n    const fragment = document.definitions.find(def => isFragmentDefinition(def) && def.name.value === spread.name.value);\n    if (!fragment) {\n        throw new Error(`Fragment ${spread.name.value} does not exist`);\n    }\n    const { typeCondition, selectionSet } = fragment;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INLINE_FRAGMENT,\n        typeCondition,\n        selectionSet,\n        directives: spread.directives,\n    };\n}\nfunction prefixNodeName(namedNode, prefix) {\n    return {\n        ...namedNode,\n        name: {\n            ...namedNode.name,\n            value: prefix + namedNode.name.value,\n        },\n    };\n}\n/**\n * Returns a new FieldNode with prefixed alias\n *\n * Example. Given prefix === \"graphqlTools1_\" transforms:\n *   { foo } -> { graphqlTools1_foo: foo }\n *   { foo: bar } -> { graphqlTools1_foo: bar }\n */\nfunction aliasField(field, aliasPrefix) {\n    const aliasNode = field.alias ? field.alias : field.name;\n    return {\n        ...field,\n        alias: {\n            ...aliasNode,\n            value: aliasPrefix + aliasNode.value,\n        },\n    };\n}\nfunction isOperationDefinition(def) {\n    return def.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.OPERATION_DEFINITION;\n}\nfunction isFragmentDefinition(def) {\n    return def.kind === graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FRAGMENT_DEFINITION;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/mergeRequests.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/prefix.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/prefix.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createPrefix: () => (/* binding */ createPrefix),\n/* harmony export */   parseKey: () => (/* binding */ parseKey),\n/* harmony export */   parseKeyFromPath: () => (/* binding */ parseKeyFromPath)\n/* harmony export */ });\n// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\nfunction createPrefix(index) {\n    return `_${index}_`;\n}\nfunction matchKey(prefixedKey) {\n    const match = /^_(\\d+)_(.*)$/.exec(prefixedKey);\n    if (match && match.length === 3 && !isNaN(Number(match[1])) && match[2]) {\n        return { index: Number(match[1]), originalKey: match[2] };\n    }\n    return null;\n}\nfunction parseKey(prefixedKey) {\n    const match = matchKey(prefixedKey);\n    if (!match) {\n        throw new Error(`Key ${prefixedKey} is not correctly prefixed`);\n    }\n    return match;\n}\nfunction parseKeyFromPath(path) {\n    let keyOffset = 0;\n    let match = null;\n    // Keep looping over path until we've found a match or path has no more items left\n    for (; !match && keyOffset < path.length; keyOffset++) {\n        const pathKey = path[keyOffset];\n        if (typeof pathKey === 'string') {\n            match = matchKey(pathKey);\n        }\n    }\n    if (!match) {\n        throw new Error(`Path ${path.join('.')} does not contain correctly prefixed key`);\n    }\n    return {\n        ...match,\n        keyOffset,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1leGVjdXRlL2VzbS9wcmVmaXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDTztBQUNQLGVBQWUsTUFBTTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSwrQkFBK0IsYUFBYTtBQUM1QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFdBQVcsbUNBQW1DO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxnQkFBZ0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL3ByZWZpeC5qcz8wNDE3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vZ2F0c2J5anMvZ2F0c2J5L2Jsb2IvbWFzdGVyL3BhY2thZ2VzL2dhdHNieS1zb3VyY2UtZ3JhcGhxbC9zcmMvYmF0Y2hpbmcvbWVyZ2UtcXVlcmllcy5qc1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVByZWZpeChpbmRleCkge1xuICAgIHJldHVybiBgXyR7aW5kZXh9X2A7XG59XG5mdW5jdGlvbiBtYXRjaEtleShwcmVmaXhlZEtleSkge1xuICAgIGNvbnN0IG1hdGNoID0gL15fKFxcZCspXyguKikkLy5leGVjKHByZWZpeGVkS2V5KTtcbiAgICBpZiAobWF0Y2ggJiYgbWF0Y2gubGVuZ3RoID09PSAzICYmICFpc05hTihOdW1iZXIobWF0Y2hbMV0pKSAmJiBtYXRjaFsyXSkge1xuICAgICAgICByZXR1cm4geyBpbmRleDogTnVtYmVyKG1hdGNoWzFdKSwgb3JpZ2luYWxLZXk6IG1hdGNoWzJdIH07XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlS2V5KHByZWZpeGVkS2V5KSB7XG4gICAgY29uc3QgbWF0Y2ggPSBtYXRjaEtleShwcmVmaXhlZEtleSk7XG4gICAgaWYgKCFtYXRjaCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEtleSAke3ByZWZpeGVkS2V5fSBpcyBub3QgY29ycmVjdGx5IHByZWZpeGVkYCk7XG4gICAgfVxuICAgIHJldHVybiBtYXRjaDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUtleUZyb21QYXRoKHBhdGgpIHtcbiAgICBsZXQga2V5T2Zmc2V0ID0gMDtcbiAgICBsZXQgbWF0Y2ggPSBudWxsO1xuICAgIC8vIEtlZXAgbG9vcGluZyBvdmVyIHBhdGggdW50aWwgd2UndmUgZm91bmQgYSBtYXRjaCBvciBwYXRoIGhhcyBubyBtb3JlIGl0ZW1zIGxlZnRcbiAgICBmb3IgKDsgIW1hdGNoICYmIGtleU9mZnNldCA8IHBhdGgubGVuZ3RoOyBrZXlPZmZzZXQrKykge1xuICAgICAgICBjb25zdCBwYXRoS2V5ID0gcGF0aFtrZXlPZmZzZXRdO1xuICAgICAgICBpZiAodHlwZW9mIHBhdGhLZXkgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBtYXRjaCA9IG1hdGNoS2V5KHBhdGhLZXkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICghbWF0Y2gpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYXRoICR7cGF0aC5qb2luKCcuJyl9IGRvZXMgbm90IGNvbnRhaW4gY29ycmVjdGx5IHByZWZpeGVkIGtleWApO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICAuLi5tYXRjaCxcbiAgICAgICAga2V5T2Zmc2V0LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/prefix.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/splitResult.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/splitResult.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitResult: () => (/* binding */ splitResult)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _prefix_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./prefix.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/prefix.js\");\n// adapted from https://github.com/gatsbyjs/gatsby/blob/master/packages/gatsby-source-graphql/src/batching/merge-queries.js\n\n\n/**\n * Split and transform result of the query produced by the `merge` function\n */\nfunction splitResult({ data, errors }, numResults) {\n    const splitResults = [];\n    for (let i = 0; i < numResults; i++) {\n        splitResults.push({});\n    }\n    if (data) {\n        for (const prefixedKey in data) {\n            const { index, originalKey } = (0,_prefix_js__WEBPACK_IMPORTED_MODULE_0__.parseKey)(prefixedKey);\n            const result = splitResults[index];\n            if (result == null) {\n                continue;\n            }\n            if (result.data == null) {\n                result.data = { [originalKey]: data[prefixedKey] };\n            }\n            else {\n                result.data[originalKey] = data[prefixedKey];\n            }\n        }\n    }\n    if (errors) {\n        for (const error of errors) {\n            if (error.path) {\n                const { index, originalKey, keyOffset } = (0,_prefix_js__WEBPACK_IMPORTED_MODULE_0__.parseKeyFromPath)(error.path);\n                const newError = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.relocatedError)(error, [originalKey, ...error.path.slice(keyOffset)]);\n                const resultErrors = (splitResults[index].errors = (splitResults[index].errors ||\n                    []));\n                resultErrors.push(newError);\n            }\n            else {\n                splitResults.forEach(result => {\n                    const resultErrors = (result.errors = (result.errors || []));\n                    resultErrors.push(error);\n                });\n            }\n        }\n    }\n    return splitResults;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9iYXRjaC1leGVjdXRlL2VzbS9zcGxpdFJlc3VsdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNzRDtBQUNHO0FBQ3pEO0FBQ0E7QUFDQTtBQUNPLHVCQUF1QixjQUFjO0FBQzVDO0FBQ0Esb0JBQW9CLGdCQUFnQjtBQUNwQyw0QkFBNEI7QUFDNUI7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLHFCQUFxQixFQUFFLG9EQUFRO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0M7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdDQUFnQyxFQUFFLDREQUFnQjtBQUMxRSxpQ0FBaUMsb0VBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWV4ZWN1dGUvZXNtL3NwbGl0UmVzdWx0LmpzPzhjMmYiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gYWRhcHRlZCBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9nYXRzYnlqcy9nYXRzYnkvYmxvYi9tYXN0ZXIvcGFja2FnZXMvZ2F0c2J5LXNvdXJjZS1ncmFwaHFsL3NyYy9iYXRjaGluZy9tZXJnZS1xdWVyaWVzLmpzXG5pbXBvcnQgeyByZWxvY2F0ZWRFcnJvciB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IHBhcnNlS2V5LCBwYXJzZUtleUZyb21QYXRoIH0gZnJvbSAnLi9wcmVmaXguanMnO1xuLyoqXG4gKiBTcGxpdCBhbmQgdHJhbnNmb3JtIHJlc3VsdCBvZiB0aGUgcXVlcnkgcHJvZHVjZWQgYnkgdGhlIGBtZXJnZWAgZnVuY3Rpb25cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0UmVzdWx0KHsgZGF0YSwgZXJyb3JzIH0sIG51bVJlc3VsdHMpIHtcbiAgICBjb25zdCBzcGxpdFJlc3VsdHMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bVJlc3VsdHM7IGkrKykge1xuICAgICAgICBzcGxpdFJlc3VsdHMucHVzaCh7fSk7XG4gICAgfVxuICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGZvciAoY29uc3QgcHJlZml4ZWRLZXkgaW4gZGF0YSkge1xuICAgICAgICAgICAgY29uc3QgeyBpbmRleCwgb3JpZ2luYWxLZXkgfSA9IHBhcnNlS2V5KHByZWZpeGVkS2V5KTtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHNwbGl0UmVzdWx0c1tpbmRleF07XG4gICAgICAgICAgICBpZiAocmVzdWx0ID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LmRhdGEgPSB7IFtvcmlnaW5hbEtleV06IGRhdGFbcHJlZml4ZWRLZXldIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN1bHQuZGF0YVtvcmlnaW5hbEtleV0gPSBkYXRhW3ByZWZpeGVkS2V5XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoZXJyb3JzKSB7XG4gICAgICAgIGZvciAoY29uc3QgZXJyb3Igb2YgZXJyb3JzKSB7XG4gICAgICAgICAgICBpZiAoZXJyb3IucGF0aCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgaW5kZXgsIG9yaWdpbmFsS2V5LCBrZXlPZmZzZXQgfSA9IHBhcnNlS2V5RnJvbVBhdGgoZXJyb3IucGF0aCk7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3RXJyb3IgPSByZWxvY2F0ZWRFcnJvcihlcnJvciwgW29yaWdpbmFsS2V5LCAuLi5lcnJvci5wYXRoLnNsaWNlKGtleU9mZnNldCldKTtcbiAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRFcnJvcnMgPSAoc3BsaXRSZXN1bHRzW2luZGV4XS5lcnJvcnMgPSAoc3BsaXRSZXN1bHRzW2luZGV4XS5lcnJvcnMgfHxcbiAgICAgICAgICAgICAgICAgICAgW10pKTtcbiAgICAgICAgICAgICAgICByZXN1bHRFcnJvcnMucHVzaChuZXdFcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzcGxpdFJlc3VsdHMuZm9yRWFjaChyZXN1bHQgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZXN1bHRFcnJvcnMgPSAocmVzdWx0LmVycm9ycyA9IChyZXN1bHQuZXJyb3JzIHx8IFtdKSk7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdEVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc3BsaXRSZXN1bHRzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/batch-execute/esm/splitResult.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccumulatorMap: () => (/* binding */ AccumulatorMap)\n/* harmony export */ });\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n    get [Symbol.toStringTag]() {\n        return 'AccumulatorMap';\n    }\n    add(key, item) {\n        const group = this.get(key);\n        if (group === undefined) {\n            this.set(key, [item]);\n        }\n        else {\n            group.push(item);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vQWNjdW11bGF0b3JNYXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0FjY3VtdWxhdG9yTWFwLmpzPzA5ZTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFUzYgTWFwIHdpdGggYWRkaXRpb25hbCBgYWRkYCBtZXRob2QgdG8gYWNjdW11bGF0ZSBpdGVtcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEFjY3VtdWxhdG9yTWFwIGV4dGVuZHMgTWFwIHtcbiAgICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgICAgIHJldHVybiAnQWNjdW11bGF0b3JNYXAnO1xuICAgIH1cbiAgICBhZGQoa2V5LCBpdGVtKSB7XG4gICAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5nZXQoa2V5KTtcbiAgICAgICAgaWYgKGdyb3VwID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0KGtleSwgW2l0ZW1dKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGdyb3VwLnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/astFromType.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/astFromType.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromType: () => (/* binding */ astFromType)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n\nfunction astFromType(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNrQjtBQUNuRDtBQUNQLFFBQVEsc0RBQWE7QUFDckI7QUFDQSwrQkFBK0IseUNBQUk7QUFDbkMsaURBQWlELHNEQUFPLE9BQU87QUFDL0Q7QUFDQTtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1EQUFVO0FBQ3ZCO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5Q0FBSTtBQUNsQjtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVHlwZS5qcz9hMjlmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3BlY3QgfSBmcm9tICdjcm9zcy1pbnNwZWN0JztcbmltcG9ydCB7IGlzTGlzdFR5cGUsIGlzTm9uTnVsbFR5cGUsIEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBhc3RGcm9tVHlwZSh0eXBlKSB7XG4gICAgaWYgKGlzTm9uTnVsbFR5cGUodHlwZSkpIHtcbiAgICAgICAgY29uc3QgaW5uZXJUeXBlID0gYXN0RnJvbVR5cGUodHlwZS5vZlR5cGUpO1xuICAgICAgICBpZiAoaW5uZXJUeXBlLmtpbmQgPT09IEtpbmQuTk9OX05VTExfVFlQRSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHR5cGUgbm9kZSAke2luc3BlY3QodHlwZSl9LiBJbm5lciB0eXBlIG9mIG5vbi1udWxsIHR5cGUgY2Fubm90IGJlIGEgbm9uLW51bGwgdHlwZS5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogS2luZC5OT05fTlVMTF9UWVBFLFxuICAgICAgICAgICAgdHlwZTogaW5uZXJUeXBlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0xpc3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLkxJU1RfVFlQRSxcbiAgICAgICAgICAgIHR5cGU6IGFzdEZyb21UeXBlKHR5cGUub2ZUeXBlKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2luZDogS2luZC5OQU1FRF9UWVBFLFxuICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLk5BTUUsXG4gICAgICAgICAgICB2YWx1ZTogdHlwZS5uYW1lLFxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/astFromType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/collectFields.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/collectFields.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectFields: () => (/* binding */ collectFields),\n/* harmony export */   collectSubFields: () => (/* binding */ collectSubFields),\n/* harmony export */   doesFragmentConditionMatch: () => (/* binding */ doesFragmentConditionMatch),\n/* harmony export */   getDeferValues: () => (/* binding */ getDeferValues),\n/* harmony export */   getFieldEntryKey: () => (/* binding */ getFieldEntryKey),\n/* harmony export */   shouldIncludeNode: () => (/* binding */ shouldIncludeNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccumulatorMap.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\n\nfunction collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                fields.add(getFieldEntryKey(selection), selection);\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (visitedFragmentNames.has(fragName) && !defer) {\n                    continue;\n                }\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                if (!defer) {\n                    visitedFragmentNames.add(fragName);\n                }\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n        }\n    }\n}\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n */\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet) {\n    const fields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const patches = [];\n    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, new Set());\n    return { fields, patches };\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSkipDirective, node, variableValues);\n    if (skip?.['if'] === true) {\n        return false;\n    }\n    const include = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLIncludeDirective, node, variableValues);\n    if (include?.['if'] === false) {\n        return false;\n    }\n    return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.typeFromAST)(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_5__.isAbstractType)(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Returns an object containing the `@defer` arguments if a field should be\n * deferred based on the experimental flag, defer directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getDeferValues(variableValues, node) {\n    const defer = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(_directives_js__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeferDirective, node, variableValues);\n    if (!defer) {\n        return;\n    }\n    if (defer['if'] === false) {\n        return;\n    }\n    return {\n        label: typeof defer['label'] === 'string' ? defer['label'] : undefined,\n    };\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n */\nconst collectSubFields = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_7__.memoize5)(function collectSubfields(schema, fragments, variableValues, returnType, fieldNodes) {\n    const subFieldNodes = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const visitedFragmentNames = new Set();\n    const subPatches = [];\n    const subFieldsAndPatches = {\n        fields: subFieldNodes,\n        patches: subPatches,\n    };\n    for (const node of fieldNodes) {\n        if (node.selectionSet) {\n            collectFieldsImpl(schema, fragments, variableValues, returnType, node.selectionSet, subFieldNodes, subPatches, visitedFragmentNames);\n        }\n    }\n    return subFieldsAndPatches;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/collectFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/directives.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/directives.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLDeferDirective: () => (/* binding */ GraphQLDeferDirective),\n/* harmony export */   GraphQLStreamDirective: () => (/* binding */ GraphQLStreamDirective)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n\n/**\n * Used to conditionally defer fragments.\n */\nconst GraphQLDeferDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'defer',\n    description: 'Directs the executor to defer this fragment when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FRAGMENT_SPREAD, graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.INLINE_FRAGMENT],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Deferred when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n    },\n});\n/**\n * Used to conditionally stream list fields.\n */\nconst GraphQLStreamDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'stream',\n    description: 'Directs the executor to stream plural fields when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FIELD],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Stream when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n        initialCount: {\n            defaultValue: 0,\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInt,\n            description: 'Number of items to return immediately',\n        },\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZGlyZWN0aXZlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEg7QUFDMUg7QUFDQTtBQUNBO0FBQ08sa0NBQWtDLHFEQUFnQjtBQUN6RDtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFpQixrQkFBa0Isc0RBQWlCO0FBQ3BFO0FBQ0E7QUFDQSxzQkFBc0IsbURBQWMsQ0FBQyxtREFBYztBQUNuRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esa0JBQWtCLGtEQUFhO0FBQy9CO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLHFEQUFnQjtBQUMxRDtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFpQjtBQUNqQztBQUNBO0FBQ0Esc0JBQXNCLG1EQUFjLENBQUMsbURBQWM7QUFDbkQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGtCQUFrQixrREFBYTtBQUMvQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCLCtDQUFVO0FBQzVCO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9kaXJlY3RpdmVzLmpzP2VjNzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlTG9jYXRpb24sIEdyYXBoUUxCb29sZWFuLCBHcmFwaFFMRGlyZWN0aXZlLCBHcmFwaFFMSW50LCBHcmFwaFFMTm9uTnVsbCwgR3JhcGhRTFN0cmluZywgfSBmcm9tICdncmFwaHFsJztcbi8qKlxuICogVXNlZCB0byBjb25kaXRpb25hbGx5IGRlZmVyIGZyYWdtZW50cy5cbiAqL1xuZXhwb3J0IGNvbnN0IEdyYXBoUUxEZWZlckRpcmVjdGl2ZSA9IG5ldyBHcmFwaFFMRGlyZWN0aXZlKHtcbiAgICBuYW1lOiAnZGVmZXInLFxuICAgIGRlc2NyaXB0aW9uOiAnRGlyZWN0cyB0aGUgZXhlY3V0b3IgdG8gZGVmZXIgdGhpcyBmcmFnbWVudCB3aGVuIHRoZSBgaWZgIGFyZ3VtZW50IGlzIHRydWUgb3IgdW5kZWZpbmVkLicsXG4gICAgbG9jYXRpb25zOiBbRGlyZWN0aXZlTG9jYXRpb24uRlJBR01FTlRfU1BSRUFELCBEaXJlY3RpdmVMb2NhdGlvbi5JTkxJTkVfRlJBR01FTlRdLFxuICAgIGFyZ3M6IHtcbiAgICAgICAgaWY6IHtcbiAgICAgICAgICAgIHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMQm9vbGVhbiksXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0RlZmVycmVkIHdoZW4gdHJ1ZSBvciB1bmRlZmluZWQuJyxcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxTdHJpbmcsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1VuaXF1ZSBuYW1lJyxcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG4vKipcbiAqIFVzZWQgdG8gY29uZGl0aW9uYWxseSBzdHJlYW0gbGlzdCBmaWVsZHMuXG4gKi9cbmV4cG9ydCBjb25zdCBHcmFwaFFMU3RyZWFtRGlyZWN0aXZlID0gbmV3IEdyYXBoUUxEaXJlY3RpdmUoe1xuICAgIG5hbWU6ICdzdHJlYW0nLFxuICAgIGRlc2NyaXB0aW9uOiAnRGlyZWN0cyB0aGUgZXhlY3V0b3IgdG8gc3RyZWFtIHBsdXJhbCBmaWVsZHMgd2hlbiB0aGUgYGlmYCBhcmd1bWVudCBpcyB0cnVlIG9yIHVuZGVmaW5lZC4nLFxuICAgIGxvY2F0aW9uczogW0RpcmVjdGl2ZUxvY2F0aW9uLkZJRUxEXSxcbiAgICBhcmdzOiB7XG4gICAgICAgIGlmOiB7XG4gICAgICAgICAgICB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTEJvb2xlYW4pLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdTdHJlYW0gd2hlbiB0cnVlIG9yIHVuZGVmaW5lZC4nLFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVW5pcXVlIG5hbWUnLFxuICAgICAgICB9LFxuICAgICAgICBpbml0aWFsQ291bnQ6IHtcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogMCxcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxJbnQsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ051bWJlciBvZiBpdGVtcyB0byByZXR1cm4gaW1tZWRpYXRlbHknLFxuICAgICAgICB9LFxuICAgIH0sXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQVc7QUFDbkIsbUJBQW1CLGlEQUFZO0FBQy9CO0FBQ0EsZUFBZSxpREFBWTtBQUMzQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Vycm9ycy5qcz8xOTFiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxFcnJvciwgdmVyc2lvbkluZm8gfSBmcm9tICdncmFwaHFsJztcbmNvbnN0IHBvc3NpYmxlR3JhcGhRTEVycm9yUHJvcGVydGllcyA9IFtcbiAgICAnbWVzc2FnZScsXG4gICAgJ2xvY2F0aW9ucycsXG4gICAgJ3BhdGgnLFxuICAgICdub2RlcycsXG4gICAgJ3NvdXJjZScsXG4gICAgJ3Bvc2l0aW9ucycsXG4gICAgJ29yaWdpbmFsRXJyb3InLFxuICAgICduYW1lJyxcbiAgICAnc3RhY2snLFxuICAgICdleHRlbnNpb25zJyxcbl07XG5mdW5jdGlvbiBpc0dyYXBoUUxFcnJvckxpa2UoZXJyb3IpIHtcbiAgICByZXR1cm4gKGVycm9yICE9IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIGVycm9yID09PSAnb2JqZWN0JyAmJlxuICAgICAgICBPYmplY3Qua2V5cyhlcnJvcikuZXZlcnkoa2V5ID0+IHBvc3NpYmxlR3JhcGhRTEVycm9yUHJvcGVydGllcy5pbmNsdWRlcyhrZXkpKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucz8ub3JpZ2luYWxFcnJvciAmJlxuICAgICAgICAhKG9wdGlvbnMub3JpZ2luYWxFcnJvciBpbnN0YW5jZW9mIEVycm9yKSAmJlxuICAgICAgICBpc0dyYXBoUUxFcnJvckxpa2Uob3B0aW9ucy5vcmlnaW5hbEVycm9yKSkge1xuICAgICAgICBvcHRpb25zLm9yaWdpbmFsRXJyb3IgPSBjcmVhdGVHcmFwaFFMRXJyb3Iob3B0aW9ucy5vcmlnaW5hbEVycm9yLm1lc3NhZ2UsIG9wdGlvbnMub3JpZ2luYWxFcnJvcik7XG4gICAgfVxuICAgIGlmICh2ZXJzaW9uSW5mby5tYWpvciA+PSAxNykge1xuICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucz8ubm9kZXMsIG9wdGlvbnM/LnNvdXJjZSwgb3B0aW9ucz8ucG9zaXRpb25zLCBvcHRpb25zPy5wYXRoLCBvcHRpb25zPy5vcmlnaW5hbEVycm9yLCBvcHRpb25zPy5leHRlbnNpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZWxvY2F0ZWRFcnJvcihvcmlnaW5hbEVycm9yLCBwYXRoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUdyYXBoUUxFcnJvcihvcmlnaW5hbEVycm9yLm1lc3NhZ2UsIHtcbiAgICAgICAgbm9kZXM6IG9yaWdpbmFsRXJyb3Iubm9kZXMsXG4gICAgICAgIHNvdXJjZTogb3JpZ2luYWxFcnJvci5zb3VyY2UsXG4gICAgICAgIHBvc2l0aW9uczogb3JpZ2luYWxFcnJvci5wb3NpdGlvbnMsXG4gICAgICAgIHBhdGg6IHBhdGggPT0gbnVsbCA/IG9yaWdpbmFsRXJyb3IucGF0aCA6IHBhdGgsXG4gICAgICAgIG9yaWdpbmFsRXJyb3IsXG4gICAgICAgIGV4dGVuc2lvbnM6IG9yaWdpbmFsRXJyb3IuZXh0ZW5zaW9ucyxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationASTFromDocument: () => (/* binding */ getOperationASTFromDocument),\n/* harmony export */   getOperationASTFromRequest: () => (/* binding */ getOperationASTFromRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nconst getOperationASTFromRequest = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEwQztBQUNGO0FBQ2pDO0FBQ1AsZ0JBQWdCLHdEQUFlO0FBQy9CO0FBQ0Esa0RBQWtELG9CQUFvQjtBQUN0RTtBQUNBO0FBQ0E7QUFDTyxtQ0FBbUMscURBQVE7QUFDbEQ7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdC5qcz84Yzg5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE9wZXJhdGlvbkFTVCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgbWVtb2l6ZTEgfSBmcm9tICcuL21lbW9pemUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9wZXJhdGlvbkFTVEZyb21Eb2N1bWVudChkb2N1bWVudE5vZGUsIG9wZXJhdGlvbk5hbWUpIHtcbiAgICBjb25zdCBkb2MgPSBnZXRPcGVyYXRpb25BU1QoZG9jdW1lbnROb2RlLCBvcGVyYXRpb25OYW1lKTtcbiAgICBpZiAoIWRvYykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBpbmZlciBvcGVyYXRpb24gJHtvcGVyYXRpb25OYW1lIHx8ICcnfWApO1xuICAgIH1cbiAgICByZXR1cm4gZG9jO1xufVxuZXhwb3J0IGNvbnN0IGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0ID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QocmVxdWVzdCkge1xuICAgIHJldHVybiBnZXRPcGVyYXRpb25BU1RGcm9tRG9jdW1lbnQocmVxdWVzdC5kb2N1bWVudCwgcmVxdWVzdC5vcGVyYXRpb25OYW1lKTtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getResponseKeyFromInfo: () => (/* binding */ getResponseKeyFromInfo)\n/* harmony export */ });\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias != null ? info.fieldNodes[0].alias.value : info.fieldName;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0UmVzcG9uc2VLZXlGcm9tSW5mby5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0UmVzcG9uc2VLZXlGcm9tSW5mby5qcz9jNTUxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2V0IHRoZSBrZXkgdW5kZXIgd2hpY2ggdGhlIHJlc3VsdCBvZiB0aGlzIHJlc29sdmVyIHdpbGwgYmUgcGxhY2VkIGluIHRoZSByZXNwb25zZSBKU09OLiBCYXNpY2FsbHksIGp1c3RcbiAqIHJlc29sdmVzIGFsaWFzZXMuXG4gKiBAcGFyYW0gaW5mbyBUaGUgaW5mbyBhcmd1bWVudCB0byB0aGUgcmVzb2x2ZXIuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRSZXNwb25zZUtleUZyb21JbmZvKGluZm8pIHtcbiAgICByZXR1cm4gaW5mby5maWVsZE5vZGVzWzBdLmFsaWFzICE9IG51bGwgPyBpbmZvLmZpZWxkTm9kZXNbMF0uYWxpYXMudmFsdWUgOiBpbmZvLmZpZWxkTmFtZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDekI7QUFDUDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4Q0FBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9oZWxwZXJzLmpzPzlhYTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2UgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBjb25zdCBhc0FycmF5ID0gKGZucykgPT4gKEFycmF5LmlzQXJyYXkoZm5zKSA/IGZucyA6IGZucyA/IFtmbnNdIDogW10pO1xuY29uc3QgaW52YWxpZERvY1JlZ2V4ID0gL1xcLlthLXowLTldKyQvaTtcbmV4cG9ydCBmdW5jdGlvbiBpc0RvY3VtZW50U3RyaW5nKHN0cikge1xuICAgIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFhYWDogaXMtdmFsaWQtcGF0aCBvciBpcy1nbG9iIHRyZWF0IFNETCBhcyBhIHZhbGlkIHBhdGhcbiAgICAvLyAoYHNjYWxhciBEYXRlYCBmb3IgZXhhbXBsZSlcbiAgICAvLyB0aGlzIHdoeSBjaGVja2luZyB0aGUgZXh0ZW5zaW9uIGlzIGZhc3QgZW5vdWdoXG4gICAgLy8gYW5kIHByZXZlbnQgZnJvbSBwYXJzaW5nIHRoZSBzdHJpbmcgaW4gb3JkZXIgdG8gZmluZCBvdXRcbiAgICAvLyBpZiB0aGUgc3RyaW5nIGlzIGEgU0RMXG4gICAgaWYgKGludmFsaWREb2NSZWdleC50ZXN0KHN0cikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBwYXJzZShzdHIpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHsgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmNvbnN0IGludmFsaWRQYXRoUmVnZXggPSAvW+KAmOKAnCElXjw+YFxcbl0vO1xuLyoqXG4gKiBDaGVja2VzIHdoZXRoZXIgdGhlIGBzdHJgIGNvbnRhaW5zIGFueSBwYXRoIGlsbGVnYWwgY2hhcmFjdGVycy5cbiAqXG4gKiBBIHN0cmluZyBtYXkgc29tZXRpbWVzIGxvb2sgbGlrZSBhIHBhdGggYnV0IGlzIG5vdCAobGlrZSBhbiBTREwgb2YgYSBzaW1wbGVcbiAqIEdyYXBoUUwgc2NoZW1hKS4gVG8gbWFrZSBzdXJlIHdlIGRvbid0IHlpZWxkIGZhbHNlLXBvc2l0aXZlcyBpbiBzdWNoIGNhc2VzLFxuICogd2UgZGlzYWxsb3cgbmV3IGxpbmVzIGluIHBhdGhzIChldmVuIHRob3VnaCBtb3N0IFVuaXggc3lzdGVtcyBzdXBwb3J0IG5ld1xuICogbGluZXMgaW4gZmlsZSBuYW1lcykuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUGF0aChzdHIpIHtcbiAgICByZXR1cm4gdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgJiYgIWludmFsaWRQYXRoUmVnZXgudGVzdChzdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVTdHJpbmdzKGEsIGIpIHtcbiAgICBpZiAoU3RyaW5nKGEpIDwgU3RyaW5nKGIpKSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgaWYgKFN0cmluZyhhKSA+IFN0cmluZyhiKSkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG59XG5leHBvcnQgZnVuY3Rpb24gbm9kZVRvU3RyaW5nKGEpIHtcbiAgICBsZXQgbmFtZTtcbiAgICBpZiAoJ2FsaWFzJyBpbiBhKSB7XG4gICAgICAgIG5hbWUgPSBhLmFsaWFzPy52YWx1ZTtcbiAgICB9XG4gICAgaWYgKG5hbWUgPT0gbnVsbCAmJiAnbmFtZScgaW4gYSkge1xuICAgICAgICBuYW1lID0gYS5uYW1lPy52YWx1ZTtcbiAgICB9XG4gICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICBuYW1lID0gYS5raW5kO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlTm9kZXMoYSwgYiwgY3VzdG9tRm4pIHtcbiAgICBjb25zdCBhU3RyID0gbm9kZVRvU3RyaW5nKGEpO1xuICAgIGNvbnN0IGJTdHIgPSBub2RlVG9TdHJpbmcoYik7XG4gICAgaWYgKHR5cGVvZiBjdXN0b21GbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gY3VzdG9tRm4oYVN0ciwgYlN0cik7XG4gICAgfVxuICAgIHJldHVybiBjb21wYXJlU3RyaW5ncyhhU3RyLCBiU3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1NvbWUoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXQgIT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRTb21lKGlucHV0LCBtZXNzYWdlID0gJ1ZhbHVlIHNob3VsZCBiZSBzb21ldGhpbmcnKSB7XG4gICAgaWYgKGlucHV0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/implementsAbstractType.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/implementsAbstractType.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   implementsAbstractType: () => (/* binding */ implementsAbstractType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeComparators.mjs\");\n\nfunction implementsAbstractType(schema, typeA, typeB) {\n    if (typeB == null || typeA == null) {\n        return false;\n    }\n    else if (typeA === typeB) {\n        return true;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(typeA) && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(typeB)) {\n        return (0,graphql__WEBPACK_IMPORTED_MODULE_1__.doTypesOverlap)(schema, typeA, typeB);\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaW1wbGVtZW50c0Fic3RyYWN0VHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMEQ7QUFDbkQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLHdEQUFlLFdBQVcsd0RBQWU7QUFDdEQsZUFBZSx1REFBYztBQUM3QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ltcGxlbWVudHNBYnN0cmFjdFR5cGUuanM/MDBiMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkb1R5cGVzT3ZlcmxhcCwgaXNDb21wb3NpdGVUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gaW1wbGVtZW50c0Fic3RyYWN0VHlwZShzY2hlbWEsIHR5cGVBLCB0eXBlQikge1xuICAgIGlmICh0eXBlQiA9PSBudWxsIHx8IHR5cGVBID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlQSA9PT0gdHlwZUIpIHtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ29tcG9zaXRlVHlwZSh0eXBlQSkgJiYgaXNDb21wb3NpdGVUeXBlKHR5cGVCKSkge1xuICAgICAgICByZXR1cm4gZG9UeXBlc092ZXJsYXAoc2NoZW1hLCB0eXBlQSwgdHlwZUIpO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nfunction isAsyncIterable(value) {\n    return value?.[Symbol.asyncIterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaXNBc3luY0l0ZXJhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2lzQXN5bmNJdGVyYWJsZS5qcz81Nzc0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0FzeW5jSXRlcmFibGUodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWU/LltTeW1ib2wuYXN5bmNJdGVyYXRvcl0gIT0gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vanN1dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vanN1dGlscy5qcz84ZTMxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0l0ZXJhYmxlT2JqZWN0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy50aGVuICE9IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gcHJvbWlzZVJlZHVjZSh2YWx1ZXMsIGNhbGxiYWNrRm4sIGluaXRpYWxWYWx1ZSkge1xuICAgIGxldCBhY2N1bXVsYXRvciA9IGluaXRpYWxWYWx1ZTtcbiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICBhY2N1bXVsYXRvciA9IGlzUHJvbWlzZShhY2N1bXVsYXRvcilcbiAgICAgICAgICAgID8gYWNjdW11bGF0b3IudGhlbihyZXNvbHZlZCA9PiBjYWxsYmFja0ZuKHJlc29sdmVkLCB2YWx1ZSkpXG4gICAgICAgICAgICA6IGNhbGxiYWNrRm4oYWNjdW11bGF0b3IsIHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapAsyncIterator: () => (/* binding */ mapAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, onNext, onError, onEnd) {\n    if (Symbol.asyncIterator in iterator) {\n        iterator = iterator[Symbol.asyncIterator]();\n    }\n    let $return;\n    let abruptClose;\n    let onEndWithValue;\n    if (onEnd) {\n        onEndWithValue = value => {\n            const onEnd$ = onEnd();\n            return (0,_jsutils_js__WEBPACK_IMPORTED_MODULE_0__.isPromise)(onEnd$) ? onEnd$.then(() => value) : value;\n        };\n    }\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        if (result.done) {\n            return onEndWithValue ? onEndWithValue(result) : result;\n        }\n        return asyncMapValue(result.value, onNext).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (onError) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = onError;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            const res$ = $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n            return onEndWithValue ? res$.then(onEndWithValue) : res$;\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWFwQXN5bmNJdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHNEQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsOEJBQThCO0FBQ2xFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL21hcEFzeW5jSXRlcmF0b3IuanM/MjFhNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1Byb21pc2UgfSBmcm9tICcuL2pzdXRpbHMuanMnO1xuLyoqXG4gKiBHaXZlbiBhbiBBc3luY0l0ZXJhYmxlIGFuZCBhIGNhbGxiYWNrIGZ1bmN0aW9uLCByZXR1cm4gYW4gQXN5bmNJdGVyYXRvclxuICogd2hpY2ggcHJvZHVjZXMgdmFsdWVzIG1hcHBlZCB2aWEgY2FsbGluZyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXBBc3luY0l0ZXJhdG9yKGl0ZXJhdG9yLCBvbk5leHQsIG9uRXJyb3IsIG9uRW5kKSB7XG4gICAgaWYgKFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIGl0ZXJhdG9yKSB7XG4gICAgICAgIGl0ZXJhdG9yID0gaXRlcmF0b3JbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgfVxuICAgIGxldCAkcmV0dXJuO1xuICAgIGxldCBhYnJ1cHRDbG9zZTtcbiAgICBsZXQgb25FbmRXaXRoVmFsdWU7XG4gICAgaWYgKG9uRW5kKSB7XG4gICAgICAgIG9uRW5kV2l0aFZhbHVlID0gdmFsdWUgPT4ge1xuICAgICAgICAgICAgY29uc3Qgb25FbmQkID0gb25FbmQoKTtcbiAgICAgICAgICAgIHJldHVybiBpc1Byb21pc2Uob25FbmQkKSA/IG9uRW5kJC50aGVuKCgpID0+IHZhbHVlKSA6IHZhbHVlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGl0ZXJhdG9yLnJldHVybiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAkcmV0dXJuID0gaXRlcmF0b3IucmV0dXJuO1xuICAgICAgICBhYnJ1cHRDbG9zZSA9IChlcnJvcikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmV0aHJvdyA9ICgpID0+IFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiAkcmV0dXJuLmNhbGwoaXRlcmF0b3IpLnRoZW4ocmV0aHJvdywgcmV0aHJvdyk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1hcFJlc3VsdChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5kb25lKSB7XG4gICAgICAgICAgICByZXR1cm4gb25FbmRXaXRoVmFsdWUgPyBvbkVuZFdpdGhWYWx1ZShyZXN1bHQpIDogcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhc3luY01hcFZhbHVlKHJlc3VsdC52YWx1ZSwgb25OZXh0KS50aGVuKGl0ZXJhdG9yUmVzdWx0LCBhYnJ1cHRDbG9zZSk7XG4gICAgfVxuICAgIGxldCBtYXBSZWplY3Q7XG4gICAgaWYgKG9uRXJyb3IpIHtcbiAgICAgICAgLy8gQ2FwdHVyZSByZWplY3RDYWxsYmFjayB0byBlbnN1cmUgaXQgY2Fubm90IGJlIG51bGwuXG4gICAgICAgIGNvbnN0IHJlamVjdCA9IG9uRXJyb3I7XG4gICAgICAgIG1hcFJlamVjdCA9IChlcnJvcikgPT4gYXN5bmNNYXBWYWx1ZShlcnJvciwgcmVqZWN0KS50aGVuKGl0ZXJhdG9yUmVzdWx0LCBhYnJ1cHRDbG9zZSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG5leHQoKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlcmF0b3IubmV4dCgpLnRoZW4obWFwUmVzdWx0LCBtYXBSZWplY3QpO1xuICAgICAgICB9LFxuICAgICAgICByZXR1cm4oKSB7XG4gICAgICAgICAgICBjb25zdCByZXMkID0gJHJldHVyblxuICAgICAgICAgICAgICAgID8gJHJldHVybi5jYWxsKGl0ZXJhdG9yKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KVxuICAgICAgICAgICAgICAgIDogUHJvbWlzZS5yZXNvbHZlKHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIHJldHVybiBvbkVuZFdpdGhWYWx1ZSA/IHJlcyQudGhlbihvbkVuZFdpdGhWYWx1ZSkgOiByZXMkO1xuICAgICAgICB9LFxuICAgICAgICB0aHJvdyhlcnJvcikge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBpdGVyYXRvci50aHJvdyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBpdGVyYXRvci50aHJvdyhlcnJvcikudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpLmNhdGNoKGFicnVwdENsb3NlKTtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG5mdW5jdGlvbiBhc3luY01hcFZhbHVlKHZhbHVlLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHJlc29sdmUoY2FsbGJhY2sodmFsdWUpKSk7XG59XG5mdW5jdGlvbiBpdGVyYXRvclJlc3VsdCh2YWx1ZSkge1xuICAgIHJldHVybiB7IHZhbHVlLCBkb25lOiBmYWxzZSB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mergeDeep.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mergeDeep.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction mergeDeep(sources, respectPrototype = false, respectArrays = false, respectArrayLength = false) {\n    if (respectArrays && respectArrayLength) {\n        let expectedLength;\n        const areArraysInTheSameLength = sources.every(source => {\n            if (Array.isArray(source)) {\n                if (expectedLength === undefined) {\n                    expectedLength = source.length;\n                    return true;\n                }\n                else if (expectedLength === source.length) {\n                    return true;\n                }\n            }\n            return false;\n        });\n        if (areArraysInTheSameLength) {\n            return new Array(expectedLength).fill(null).map((_, index) => mergeDeep(sources.map(source => source[index]), respectPrototype, respectArrays, respectArrayLength));\n        }\n    }\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(sources[0])));\n    }\n    for (const source of sources) {\n        if (isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isSome)(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                    }\n                }\n                else if (respectArrays && Array.isArray(output[key])) {\n                    if (Array.isArray(source[key])) {\n                        if (respectArrayLength && output[key].length === source[key].length) {\n                            output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                        }\n                        else {\n                            output[key].push(...source[key]);\n                        }\n                    }\n                    else {\n                        output[key].push(source[key]);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWVyZ2VEZWVwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBQy9CO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbURBQU07QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxvQkFBb0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWVyZ2VEZWVwLmpzPzhhOGYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNTb21lIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAoc291cmNlcywgcmVzcGVjdFByb3RvdHlwZSA9IGZhbHNlLCByZXNwZWN0QXJyYXlzID0gZmFsc2UsIHJlc3BlY3RBcnJheUxlbmd0aCA9IGZhbHNlKSB7XG4gICAgaWYgKHJlc3BlY3RBcnJheXMgJiYgcmVzcGVjdEFycmF5TGVuZ3RoKSB7XG4gICAgICAgIGxldCBleHBlY3RlZExlbmd0aDtcbiAgICAgICAgY29uc3QgYXJlQXJyYXlzSW5UaGVTYW1lTGVuZ3RoID0gc291cmNlcy5ldmVyeShzb3VyY2UgPT4ge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgICAgICAgICAgIGlmIChleHBlY3RlZExlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkTGVuZ3RoID0gc291cmNlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV4cGVjdGVkTGVuZ3RoID09PSBzb3VyY2UubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChhcmVBcnJheXNJblRoZVNhbWVMZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXJyYXkoZXhwZWN0ZWRMZW5ndGgpLmZpbGwobnVsbCkubWFwKChfLCBpbmRleCkgPT4gbWVyZ2VEZWVwKHNvdXJjZXMubWFwKHNvdXJjZSA9PiBzb3VyY2VbaW5kZXhdKSwgcmVzcGVjdFByb3RvdHlwZSwgcmVzcGVjdEFycmF5cywgcmVzcGVjdEFycmF5TGVuZ3RoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgb3V0cHV0ID0ge307XG4gICAgaWYgKHJlc3BlY3RQcm90b3R5cGUpIHtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKG91dHB1dCwgT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlc1swXSkpKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBzb3VyY2Ugb2Ygc291cmNlcykge1xuICAgICAgICBpZiAoaXNPYmplY3Qoc291cmNlKSkge1xuICAgICAgICAgICAgaWYgKHJlc3BlY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBvdXRwdXRQcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob3V0cHV0KTtcbiAgICAgICAgICAgICAgICBjb25zdCBzb3VyY2VQcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlKTtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlUHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZVByb3RvdHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZVByb3RvdHlwZSwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1NvbWUoZGVzY3JpcHRvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob3V0cHV0UHJvdG90eXBlLCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShrZXkgaW4gb3V0cHV0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvdXRwdXQsIHsgW2tleV06IHNvdXJjZVtrZXldIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0gPSBtZXJnZURlZXAoW291dHB1dFtrZXldLCBzb3VyY2Vba2V5XV0sIHJlc3BlY3RQcm90b3R5cGUsIHJlc3BlY3RBcnJheXMsIHJlc3BlY3RBcnJheUxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocmVzcGVjdEFycmF5cyAmJiBBcnJheS5pc0FycmF5KG91dHB1dFtrZXldKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwZWN0QXJyYXlMZW5ndGggJiYgb3V0cHV0W2tleV0ubGVuZ3RoID09PSBzb3VyY2Vba2V5XS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRba2V5XSA9IG1lcmdlRGVlcChbb3V0cHV0W2tleV0sIHNvdXJjZVtrZXldXSwgcmVzcGVjdFByb3RvdHlwZSwgcmVzcGVjdEFycmF5cywgcmVzcGVjdEFycmF5TGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFtrZXldLnB1c2goLi4uc291cmNlW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0ucHVzaChzb3VyY2Vba2V5XSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob3V0cHV0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbmZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/mergeDeep.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vcm9vdFR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRDtBQUNUO0FBQ2pDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsY0FBYyw4REFBa0Isd0NBQXdDLFdBQVc7QUFDbkY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ08seUJBQXlCLHFEQUFRO0FBQ3hDO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLHFEQUFRO0FBQ3BDO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLHFEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9yb290VHlwZXMuanM/MGY3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVHcmFwaFFMRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBtZW1vaXplMSB9IGZyb20gJy4vbWVtb2l6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmaW5lZFJvb3RUeXBlKHNjaGVtYSwgb3BlcmF0aW9uLCBub2Rlcykge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKTtcbiAgICBjb25zdCByb290VHlwZSA9IHJvb3RUeXBlTWFwLmdldChvcGVyYXRpb24pO1xuICAgIGlmIChyb290VHlwZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgU2NoZW1hIGlzIG5vdCBjb25maWd1cmVkIHRvIGV4ZWN1dGUgJHtvcGVyYXRpb259IG9wZXJhdGlvbi5gLCB7XG4gICAgICAgICAgICBub2RlcyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByb290VHlwZTtcbn1cbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZU5hbWVzID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVOYW1lcyhzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZXMgPSBnZXRSb290VHlwZXMoc2NoZW1hKTtcbiAgICByZXR1cm4gbmV3IFNldChbLi4ucm9vdFR5cGVzXS5tYXAodHlwZSA9PiB0eXBlLm5hbWUpKTtcbn0pO1xuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlcyA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlcyhzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IGdldFJvb3RUeXBlTWFwKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQocm9vdFR5cGVNYXAudmFsdWVzKCkpO1xufSk7XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVNYXAgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZU1hcChzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IG5ldyBNYXAoKTtcbiAgICBjb25zdCBxdWVyeVR5cGUgPSBzY2hlbWEuZ2V0UXVlcnlUeXBlKCk7XG4gICAgaWYgKHF1ZXJ5VHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ3F1ZXJ5JywgcXVlcnlUeXBlKTtcbiAgICB9XG4gICAgY29uc3QgbXV0YXRpb25UeXBlID0gc2NoZW1hLmdldE11dGF0aW9uVHlwZSgpO1xuICAgIGlmIChtdXRhdGlvblR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdtdXRhdGlvbicsIG11dGF0aW9uVHlwZSk7XG4gICAgfVxuICAgIGNvbnN0IHN1YnNjcmlwdGlvblR5cGUgPSBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpO1xuICAgIGlmIChzdWJzY3JpcHRpb25UeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgnc3Vic2NyaXB0aW9uJywgc3Vic2NyaXB0aW9uVHlwZSk7XG4gICAgfVxuICAgIHJldHVybiByb290VHlwZU1hcDtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null\n            ? inputLeafValueTransformer(nullableType, value)\n            : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null\n            ? inputObjectValueTransformer(nullableType, newValue)\n            : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vdHJhbnNmb3JtSW5wdXRWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBc0Y7QUFDL0M7QUFDaEM7QUFDUDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsd0RBQWU7QUFDeEMsUUFBUSxtREFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbURBQVU7QUFDdkIsZUFBZSxvREFBTztBQUN0QjtBQUNBLGFBQWEsMERBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsMEVBQTBFO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS90cmFuc2Zvcm1JbnB1dFZhbHVlLmpzPzIzMWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TnVsbGFibGVUeXBlLCBpc0lucHV0T2JqZWN0VHlwZSwgaXNMZWFmVHlwZSwgaXNMaXN0VHlwZSwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGFzQXJyYXkgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIgPSBudWxsLCBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIgPSBudWxsKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBjb25zdCBudWxsYWJsZVR5cGUgPSBnZXROdWxsYWJsZVR5cGUodHlwZSk7XG4gICAgaWYgKGlzTGVhZlR5cGUobnVsbGFibGVUeXBlKSkge1xuICAgICAgICByZXR1cm4gaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciAhPSBudWxsXG4gICAgICAgICAgICA/IGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIobnVsbGFibGVUeXBlLCB2YWx1ZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzTGlzdFR5cGUobnVsbGFibGVUeXBlKSkge1xuICAgICAgICByZXR1cm4gYXNBcnJheSh2YWx1ZSkubWFwKChsaXN0TWVtYmVyKSA9PiB0cmFuc2Zvcm1JbnB1dFZhbHVlKG51bGxhYmxlVHlwZS5vZlR5cGUsIGxpc3RNZW1iZXIsIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcikpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0lucHV0T2JqZWN0VHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkcyA9IG51bGxhYmxlVHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2tleV07XG4gICAgICAgICAgICBpZiAoZmllbGQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlW2tleV0gPSB0cmFuc2Zvcm1JbnB1dFZhbHVlKGZpZWxkLnR5cGUsIHZhbHVlW2tleV0sIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lciAhPSBudWxsXG4gICAgICAgICAgICA/IGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcihudWxsYWJsZVR5cGUsIG5ld1ZhbHVlKVxuICAgICAgICAgICAgOiBuZXdWYWx1ZTtcbiAgICB9XG4gICAgLy8gdW5yZWFjaGFibGUsIG5vIG90aGVyIHBvc3NpYmxlIHJldHVybiB2YWx1ZVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUlucHV0VmFsdWUodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB0LnNlcmlhbGl6ZSh2KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHQucGFyc2VWYWx1ZSh2KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW5wdXRWYWx1ZUxpdGVyYWwodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHQucGFyc2VMaXRlcmFsKHYsIHt9KSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/updateArgument.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/updateArgument.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createVariableNameGenerator: () => (/* binding */ createVariableNameGenerator),\n/* harmony export */   updateArgument: () => (/* binding */ updateArgument)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _astFromType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./astFromType.js */ \"(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/astFromType.js\");\n\n\nfunction updateArgument(argumentNodes, variableDefinitionsMap, variableValues, argName, varName, type, value) {\n    argumentNodes[argName] = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ARGUMENT,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: argName,\n        },\n        value: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n                value: varName,\n            },\n        },\n    };\n    variableDefinitionsMap[varName] = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n                value: varName,\n            },\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_1__.astFromType)(type),\n    };\n    if (value !== undefined) {\n        variableValues[varName] = value;\n        return;\n    }\n    // including the variable in the map with value of `undefined`\n    // will actually be translated by graphql-js into `null`\n    // see https://github.com/graphql/graphql-js/issues/2533\n    if (varName in variableValues) {\n        delete variableValues[varName];\n    }\n}\nfunction createVariableNameGenerator(variableDefinitionMap) {\n    let varCounter = 0;\n    return (argName) => {\n        let varName;\n        do {\n            varName = `_v${(varCounter++).toString()}_${argName}`;\n        } while (varName in variableDefinitionMap);\n        return varName;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vdXBkYXRlQXJndW1lbnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUErQjtBQUNnQjtBQUN4QztBQUNQO0FBQ0EsY0FBYyx5Q0FBSTtBQUNsQjtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBLFNBQVM7QUFDVDtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBLHNCQUFzQix5Q0FBSTtBQUMxQjtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBLGNBQWMseUNBQUk7QUFDbEI7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQSxzQkFBc0IseUNBQUk7QUFDMUI7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNULGNBQWMsNERBQVc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwwQkFBMEIsR0FBRyxRQUFRO0FBQ2hFLFVBQVU7QUFDVjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9kZWxlZ2F0ZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3VwZGF0ZUFyZ3VtZW50LmpzPzA2OTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgYXN0RnJvbVR5cGUgfSBmcm9tICcuL2FzdEZyb21UeXBlLmpzJztcbmV4cG9ydCBmdW5jdGlvbiB1cGRhdGVBcmd1bWVudChhcmd1bWVudE5vZGVzLCB2YXJpYWJsZURlZmluaXRpb25zTWFwLCB2YXJpYWJsZVZhbHVlcywgYXJnTmFtZSwgdmFyTmFtZSwgdHlwZSwgdmFsdWUpIHtcbiAgICBhcmd1bWVudE5vZGVzW2FyZ05hbWVdID0ge1xuICAgICAgICBraW5kOiBLaW5kLkFSR1VNRU5ULFxuICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLk5BTUUsXG4gICAgICAgICAgICB2YWx1ZTogYXJnTmFtZSxcbiAgICAgICAgfSxcbiAgICAgICAgdmFsdWU6IHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuVkFSSUFCTEUsXG4gICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB2YXJOYW1lLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9O1xuICAgIHZhcmlhYmxlRGVmaW5pdGlvbnNNYXBbdmFyTmFtZV0gPSB7XG4gICAgICAgIGtpbmQ6IEtpbmQuVkFSSUFCTEVfREVGSU5JVElPTixcbiAgICAgICAgdmFyaWFibGU6IHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuVkFSSUFCTEUsXG4gICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgIHZhbHVlOiB2YXJOYW1lLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgdHlwZTogYXN0RnJvbVR5cGUodHlwZSksXG4gICAgfTtcbiAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB2YXJpYWJsZVZhbHVlc1t2YXJOYW1lXSA9IHZhbHVlO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIC8vIGluY2x1ZGluZyB0aGUgdmFyaWFibGUgaW4gdGhlIG1hcCB3aXRoIHZhbHVlIG9mIGB1bmRlZmluZWRgXG4gICAgLy8gd2lsbCBhY3R1YWxseSBiZSB0cmFuc2xhdGVkIGJ5IGdyYXBocWwtanMgaW50byBgbnVsbGBcbiAgICAvLyBzZWUgaHR0cHM6Ly9naXRodWIuY29tL2dyYXBocWwvZ3JhcGhxbC1qcy9pc3N1ZXMvMjUzM1xuICAgIGlmICh2YXJOYW1lIGluIHZhcmlhYmxlVmFsdWVzKSB7XG4gICAgICAgIGRlbGV0ZSB2YXJpYWJsZVZhbHVlc1t2YXJOYW1lXTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlVmFyaWFibGVOYW1lR2VuZXJhdG9yKHZhcmlhYmxlRGVmaW5pdGlvbk1hcCkge1xuICAgIGxldCB2YXJDb3VudGVyID0gMDtcbiAgICByZXR1cm4gKGFyZ05hbWUpID0+IHtcbiAgICAgICAgbGV0IHZhck5hbWU7XG4gICAgICAgIGRvIHtcbiAgICAgICAgICAgIHZhck5hbWUgPSBgX3Ykeyh2YXJDb3VudGVyKyspLnRvU3RyaW5nKCl9XyR7YXJnTmFtZX1gO1xuICAgICAgICB9IHdoaWxlICh2YXJOYW1lIGluIHZhcmlhYmxlRGVmaW5pdGlvbk1hcCk7XG4gICAgICAgIHJldHVybiB2YXJOYW1lO1xuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/delegate/node_modules/@graphql-tools/utils/esm/updateArgument.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/createFormDataFromVariables.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/createFormDataFromVariables.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFormDataFromVariables: () => (/* binding */ createFormDataFromVariables)\n/* harmony export */ });\n/* harmony import */ var extract_files__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! extract-files */ \"(ssr)/../node_modules/extract-files/public/extractFiles.js\");\n/* harmony import */ var extract_files__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! extract-files */ \"(ssr)/../node_modules/extract-files/public/isExtractableFile.js\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _isGraphQLUpload_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./isGraphQLUpload.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/isGraphQLUpload.js\");\n\n\n\n\n\nfunction createFormDataFromVariables({ query, variables, operationName, extensions, }, { File: FileCtor = _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_1__.File, FormData: FormDataCtor = _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_1__.FormData, }) {\n    const vars = Object.assign({}, variables);\n    const { clone, files } = extract_files__WEBPACK_IMPORTED_MODULE_2__(vars, 'variables', ((v) => extract_files__WEBPACK_IMPORTED_MODULE_3__(v) ||\n        v?.promise ||\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.isAsyncIterable)(v) ||\n        v?.then ||\n        typeof v?.arrayBuffer === 'function'));\n    if (files.size === 0) {\n        return JSON.stringify({\n            query,\n            variables,\n            operationName,\n            extensions,\n        }, null, 2);\n    }\n    const map = {};\n    const uploads = [];\n    let currIndex = 0;\n    for (const [file, curr] of files) {\n        map[currIndex] = curr;\n        uploads[currIndex] = file;\n        currIndex++;\n    }\n    const form = new FormDataCtor();\n    form.append('operations', JSON.stringify({\n        query,\n        variables: clone,\n        operationName,\n        extensions,\n    }));\n    form.append('map', JSON.stringify(map, null, 2));\n    function handleUpload(upload, i) {\n        const indexStr = i.toString();\n        if (upload != null) {\n            const filename = upload.filename || upload.name || upload.path || `blob-${indexStr}`;\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.isPromise)(upload)) {\n                return upload.then((resolvedUpload) => handleUpload(resolvedUpload, i));\n                // If Blob\n            }\n            else if (isBlob(upload)) {\n                form.append(indexStr, upload, filename);\n            }\n            else if ((0,_isGraphQLUpload_js__WEBPACK_IMPORTED_MODULE_6__.isGraphQLUpload)(upload)) {\n                const stream = upload.createReadStream();\n                const chunks = [];\n                return Promise.resolve().then(async () => {\n                    for await (const chunk of stream) {\n                        if (chunk) {\n                            chunks.push(...chunk);\n                        }\n                    }\n                    const blobPart = new Uint8Array(chunks);\n                    form.append(indexStr, new FileCtor([blobPart], filename, { type: upload.mimetype }), filename);\n                });\n            }\n            else {\n                form.append(indexStr, new FileCtor([upload], filename), filename);\n            }\n        }\n    }\n    return value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise.all(uploads.map((upload, i) => new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => handleUpload(upload, i))))\n        .then(() => form)\n        .resolve();\n}\nfunction isBlob(obj) {\n    return typeof obj.arrayBuffer === 'function';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2NyZWF0ZUZvcm1EYXRhRnJvbVZhcmlhYmxlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFnRTtBQUNkO0FBQ2dCO0FBQ29CO0FBQy9CO0FBQ2hELHVDQUF1Qyw4Q0FBOEMsSUFBSSxpQkFBaUIsb0RBQVcsMkJBQTJCLHdEQUFlLEdBQUc7QUFDekssaUNBQWlDO0FBQ2pDLFlBQVksZUFBZSxFQUFFLDBDQUFZLDRCQUE0QiwwQ0FBaUI7QUFDdEY7QUFDQSxRQUFRLHFFQUFlO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0ZBQXNGLFNBQVM7QUFDL0YsZ0JBQWdCLCtEQUFTO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvRUFBZTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrRUFBK0UsdUJBQXVCO0FBQ3RHLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDREQUFjLG9DQUFvQyw0REFBYztBQUMzRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL2VzbS9jcmVhdGVGb3JtRGF0YUZyb21WYXJpYWJsZXMuanM/N2NkMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBleHRyYWN0RmlsZXMsIGlzRXh0cmFjdGFibGVGaWxlIH0gZnJvbSAnZXh0cmFjdC1maWxlcyc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuaW1wb3J0IHsgaXNBc3luY0l0ZXJhYmxlLCBpc1Byb21pc2UgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBGaWxlIGFzIERlZmF1bHRGaWxlLCBGb3JtRGF0YSBhcyBEZWZhdWx0Rm9ybURhdGEgfSBmcm9tICdAd2hhdHdnLW5vZGUvZmV0Y2gnO1xuaW1wb3J0IHsgaXNHcmFwaFFMVXBsb2FkIH0gZnJvbSAnLi9pc0dyYXBoUUxVcGxvYWQuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUZvcm1EYXRhRnJvbVZhcmlhYmxlcyh7IHF1ZXJ5LCB2YXJpYWJsZXMsIG9wZXJhdGlvbk5hbWUsIGV4dGVuc2lvbnMsIH0sIHsgRmlsZTogRmlsZUN0b3IgPSBEZWZhdWx0RmlsZSwgRm9ybURhdGE6IEZvcm1EYXRhQ3RvciA9IERlZmF1bHRGb3JtRGF0YSwgfSkge1xuICAgIGNvbnN0IHZhcnMgPSBPYmplY3QuYXNzaWduKHt9LCB2YXJpYWJsZXMpO1xuICAgIGNvbnN0IHsgY2xvbmUsIGZpbGVzIH0gPSBleHRyYWN0RmlsZXModmFycywgJ3ZhcmlhYmxlcycsICgodikgPT4gaXNFeHRyYWN0YWJsZUZpbGUodikgfHxcbiAgICAgICAgdj8ucHJvbWlzZSB8fFxuICAgICAgICBpc0FzeW5jSXRlcmFibGUodikgfHxcbiAgICAgICAgdj8udGhlbiB8fFxuICAgICAgICB0eXBlb2Ygdj8uYXJyYXlCdWZmZXIgPT09ICdmdW5jdGlvbicpKTtcbiAgICBpZiAoZmlsZXMuc2l6ZSA9PT0gMCkge1xuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgcXVlcnksXG4gICAgICAgICAgICB2YXJpYWJsZXMsXG4gICAgICAgICAgICBvcGVyYXRpb25OYW1lLFxuICAgICAgICAgICAgZXh0ZW5zaW9ucyxcbiAgICAgICAgfSwgbnVsbCwgMik7XG4gICAgfVxuICAgIGNvbnN0IG1hcCA9IHt9O1xuICAgIGNvbnN0IHVwbG9hZHMgPSBbXTtcbiAgICBsZXQgY3VyckluZGV4ID0gMDtcbiAgICBmb3IgKGNvbnN0IFtmaWxlLCBjdXJyXSBvZiBmaWxlcykge1xuICAgICAgICBtYXBbY3VyckluZGV4XSA9IGN1cnI7XG4gICAgICAgIHVwbG9hZHNbY3VyckluZGV4XSA9IGZpbGU7XG4gICAgICAgIGN1cnJJbmRleCsrO1xuICAgIH1cbiAgICBjb25zdCBmb3JtID0gbmV3IEZvcm1EYXRhQ3RvcigpO1xuICAgIGZvcm0uYXBwZW5kKCdvcGVyYXRpb25zJywgSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBxdWVyeSxcbiAgICAgICAgdmFyaWFibGVzOiBjbG9uZSxcbiAgICAgICAgb3BlcmF0aW9uTmFtZSxcbiAgICAgICAgZXh0ZW5zaW9ucyxcbiAgICB9KSk7XG4gICAgZm9ybS5hcHBlbmQoJ21hcCcsIEpTT04uc3RyaW5naWZ5KG1hcCwgbnVsbCwgMikpO1xuICAgIGZ1bmN0aW9uIGhhbmRsZVVwbG9hZCh1cGxvYWQsIGkpIHtcbiAgICAgICAgY29uc3QgaW5kZXhTdHIgPSBpLnRvU3RyaW5nKCk7XG4gICAgICAgIGlmICh1cGxvYWQgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc3QgZmlsZW5hbWUgPSB1cGxvYWQuZmlsZW5hbWUgfHwgdXBsb2FkLm5hbWUgfHwgdXBsb2FkLnBhdGggfHwgYGJsb2ItJHtpbmRleFN0cn1gO1xuICAgICAgICAgICAgaWYgKGlzUHJvbWlzZSh1cGxvYWQpKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHVwbG9hZC50aGVuKChyZXNvbHZlZFVwbG9hZCkgPT4gaGFuZGxlVXBsb2FkKHJlc29sdmVkVXBsb2FkLCBpKSk7XG4gICAgICAgICAgICAgICAgLy8gSWYgQmxvYlxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNCbG9iKHVwbG9hZCkpIHtcbiAgICAgICAgICAgICAgICBmb3JtLmFwcGVuZChpbmRleFN0ciwgdXBsb2FkLCBmaWxlbmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpc0dyYXBoUUxVcGxvYWQodXBsb2FkKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHN0cmVhbSA9IHVwbG9hZC5jcmVhdGVSZWFkU3RyZWFtKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgY2h1bmtzID0gW107XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBmb3IgYXdhaXQgKGNvbnN0IGNodW5rIG9mIHN0cmVhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNodW5rKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2h1bmtzLnB1c2goLi4uY2h1bmspO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGJsb2JQYXJ0ID0gbmV3IFVpbnQ4QXJyYXkoY2h1bmtzKTtcbiAgICAgICAgICAgICAgICAgICAgZm9ybS5hcHBlbmQoaW5kZXhTdHIsIG5ldyBGaWxlQ3RvcihbYmxvYlBhcnRdLCBmaWxlbmFtZSwgeyB0eXBlOiB1cGxvYWQubWltZXR5cGUgfSksIGZpbGVuYW1lKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGZvcm0uYXBwZW5kKGluZGV4U3RyLCBuZXcgRmlsZUN0b3IoW3VwbG9hZF0sIGZpbGVuYW1lKSwgZmlsZW5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBWYWx1ZU9yUHJvbWlzZS5hbGwodXBsb2Fkcy5tYXAoKHVwbG9hZCwgaSkgPT4gbmV3IFZhbHVlT3JQcm9taXNlKCgpID0+IGhhbmRsZVVwbG9hZCh1cGxvYWQsIGkpKSkpXG4gICAgICAgIC50aGVuKCgpID0+IGZvcm0pXG4gICAgICAgIC5yZXNvbHZlKCk7XG59XG5mdW5jdGlvbiBpc0Jsb2Iob2JqKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBvYmouYXJyYXlCdWZmZXIgPT09ICdmdW5jdGlvbic7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/createFormDataFromVariables.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/defaultPrintFn.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/defaultPrintFn.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultPrintFn: () => (/* binding */ defaultPrintFn)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/stripIgnoredCharacters.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n\nconst printCache = new WeakMap();\nfunction defaultPrintFn(document) {\n    let printed = printCache.get(document);\n    if (!printed) {\n        printed = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.stripIgnoredCharacters)((0,graphql__WEBPACK_IMPORTED_MODULE_1__.print)(document));\n        printCache.set(document, printed);\n    }\n    return printed;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2RlZmF1bHRQcmludEZuLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3RDtBQUN4RDtBQUNPO0FBQ1A7QUFDQTtBQUNBLGtCQUFrQiwrREFBc0IsQ0FBQyw4Q0FBSztBQUM5QztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2RlZmF1bHRQcmludEZuLmpzPzFiYWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcHJpbnQsIHN0cmlwSWdub3JlZENoYXJhY3RlcnMgfSBmcm9tICdncmFwaHFsJztcbmNvbnN0IHByaW50Q2FjaGUgPSBuZXcgV2Vha01hcCgpO1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRQcmludEZuKGRvY3VtZW50KSB7XG4gICAgbGV0IHByaW50ZWQgPSBwcmludENhY2hlLmdldChkb2N1bWVudCk7XG4gICAgaWYgKCFwcmludGVkKSB7XG4gICAgICAgIHByaW50ZWQgPSBzdHJpcElnbm9yZWRDaGFyYWN0ZXJzKHByaW50KGRvY3VtZW50KSk7XG4gICAgICAgIHByaW50Q2FjaGUuc2V0KGRvY3VtZW50LCBwcmludGVkKTtcbiAgICB9XG4gICAgcmV0dXJuIHByaW50ZWQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/defaultPrintFn.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleAsyncIterable.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/handleAsyncIterable.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleAsyncIterable: () => (/* binding */ handleAsyncIterable)\n/* harmony export */ });\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* eslint-disable no-labels */\n\nconst DELIM = '\\n\\n';\nasync function* handleAsyncIterable(asyncIterable) {\n    const textDecoder = new _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_0__.TextDecoder();\n    let currChunk = '';\n    outer: for await (const chunk of asyncIterable) {\n        currChunk += typeof chunk === 'string' ? chunk : textDecoder.decode(chunk);\n        for (;;) {\n            const delimIndex = currChunk.indexOf(DELIM);\n            if (delimIndex === -1) {\n                // incomplete message, wait for more chunks\n                continue outer;\n            }\n            const msg = currChunk.slice(0, delimIndex); // whole message\n            currChunk = currChunk.slice(delimIndex + DELIM.length); // remainder\n            // data\n            const dataStr = msg.split('data:')[1]?.trim();\n            if (dataStr) {\n                const data = JSON.parse(dataStr);\n                yield data.payload || data;\n            }\n            // event\n            const event = msg.split('event:')[1]?.trim();\n            if (event === 'complete') {\n                break outer;\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2hhbmRsZUFzeW5jSXRlcmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNpRDtBQUNqRDtBQUNPO0FBQ1AsNEJBQTRCLDJEQUFXO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0RBQXdEO0FBQ3hELG9FQUFvRTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9lc20vaGFuZGxlQXN5bmNJdGVyYWJsZS5qcz85N2RiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIGVzbGludC1kaXNhYmxlIG5vLWxhYmVscyAqL1xuaW1wb3J0IHsgVGV4dERlY29kZXIgfSBmcm9tICdAd2hhdHdnLW5vZGUvZmV0Y2gnO1xuY29uc3QgREVMSU0gPSAnXFxuXFxuJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiogaGFuZGxlQXN5bmNJdGVyYWJsZShhc3luY0l0ZXJhYmxlKSB7XG4gICAgY29uc3QgdGV4dERlY29kZXIgPSBuZXcgVGV4dERlY29kZXIoKTtcbiAgICBsZXQgY3VyckNodW5rID0gJyc7XG4gICAgb3V0ZXI6IGZvciBhd2FpdCAoY29uc3QgY2h1bmsgb2YgYXN5bmNJdGVyYWJsZSkge1xuICAgICAgICBjdXJyQ2h1bmsgKz0gdHlwZW9mIGNodW5rID09PSAnc3RyaW5nJyA/IGNodW5rIDogdGV4dERlY29kZXIuZGVjb2RlKGNodW5rKTtcbiAgICAgICAgZm9yICg7Oykge1xuICAgICAgICAgICAgY29uc3QgZGVsaW1JbmRleCA9IGN1cnJDaHVuay5pbmRleE9mKERFTElNKTtcbiAgICAgICAgICAgIGlmIChkZWxpbUluZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgICAgIC8vIGluY29tcGxldGUgbWVzc2FnZSwgd2FpdCBmb3IgbW9yZSBjaHVua3NcbiAgICAgICAgICAgICAgICBjb250aW51ZSBvdXRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG1zZyA9IGN1cnJDaHVuay5zbGljZSgwLCBkZWxpbUluZGV4KTsgLy8gd2hvbGUgbWVzc2FnZVxuICAgICAgICAgICAgY3VyckNodW5rID0gY3VyckNodW5rLnNsaWNlKGRlbGltSW5kZXggKyBERUxJTS5sZW5ndGgpOyAvLyByZW1haW5kZXJcbiAgICAgICAgICAgIC8vIGRhdGFcbiAgICAgICAgICAgIGNvbnN0IGRhdGFTdHIgPSBtc2cuc3BsaXQoJ2RhdGE6JylbMV0/LnRyaW0oKTtcbiAgICAgICAgICAgIGlmIChkYXRhU3RyKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZGF0YVN0cik7XG4gICAgICAgICAgICAgICAgeWllbGQgZGF0YS5wYXlsb2FkIHx8IGRhdGE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBldmVudFxuICAgICAgICAgICAgY29uc3QgZXZlbnQgPSBtc2cuc3BsaXQoJ2V2ZW50OicpWzFdPy50cmltKCk7XG4gICAgICAgICAgICBpZiAoZXZlbnQgPT09ICdjb21wbGV0ZScpIHtcbiAgICAgICAgICAgICAgICBicmVhayBvdXRlcjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleEventStreamResponse.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/handleEventStreamResponse.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleEventStreamResponse: () => (/* binding */ handleEventStreamResponse),\n/* harmony export */   isReadableStream: () => (/* binding */ isReadableStream)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var _handleAsyncIterable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./handleAsyncIterable.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleAsyncIterable.js\");\n/* harmony import */ var _handleReadableStream_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handleReadableStream.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleReadableStream.js\");\n\n\n\nfunction isReadableStream(value) {\n    return value && typeof value.getReader === 'function';\n}\nfunction handleEventStreamResponse(response) {\n    // node-fetch returns body as a promise so we need to resolve it\n    const body = response.body;\n    if (body) {\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.isAsyncIterable)(body)) {\n            return (0,_handleAsyncIterable_js__WEBPACK_IMPORTED_MODULE_1__.handleAsyncIterable)(body);\n        }\n        if (isReadableStream(body)) {\n            return (0,_handleReadableStream_js__WEBPACK_IMPORTED_MODULE_2__.handleReadableStream)(body);\n        }\n    }\n    throw new Error('Response body is expected to be a readable stream but got; ' + (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.inspect)(body));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2hhbmRsZUV2ZW50U3RyZWFtUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWdFO0FBQ0Q7QUFDRTtBQUMxRDtBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLFlBQVkscUVBQWU7QUFDM0IsbUJBQW1CLDRFQUFtQjtBQUN0QztBQUNBO0FBQ0EsbUJBQW1CLDhFQUFvQjtBQUN2QztBQUNBO0FBQ0EsZ0ZBQWdGLElBQUksNkRBQU87QUFDM0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL2VzbS9oYW5kbGVFdmVudFN0cmVhbVJlc3BvbnNlLmpzPzYxZjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdCwgaXNBc3luY0l0ZXJhYmxlIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgaGFuZGxlQXN5bmNJdGVyYWJsZSB9IGZyb20gJy4vaGFuZGxlQXN5bmNJdGVyYWJsZS5qcyc7XG5pbXBvcnQgeyBoYW5kbGVSZWFkYWJsZVN0cmVhbSB9IGZyb20gJy4vaGFuZGxlUmVhZGFibGVTdHJlYW0uanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGlzUmVhZGFibGVTdHJlYW0odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlLmdldFJlYWRlciA9PT0gJ2Z1bmN0aW9uJztcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVFdmVudFN0cmVhbVJlc3BvbnNlKHJlc3BvbnNlKSB7XG4gICAgLy8gbm9kZS1mZXRjaCByZXR1cm5zIGJvZHkgYXMgYSBwcm9taXNlIHNvIHdlIG5lZWQgdG8gcmVzb2x2ZSBpdFxuICAgIGNvbnN0IGJvZHkgPSByZXNwb25zZS5ib2R5O1xuICAgIGlmIChib2R5KSB7XG4gICAgICAgIGlmIChpc0FzeW5jSXRlcmFibGUoYm9keSkpIHtcbiAgICAgICAgICAgIHJldHVybiBoYW5kbGVBc3luY0l0ZXJhYmxlKGJvZHkpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc1JlYWRhYmxlU3RyZWFtKGJvZHkpKSB7XG4gICAgICAgICAgICByZXR1cm4gaGFuZGxlUmVhZGFibGVTdHJlYW0oYm9keSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKCdSZXNwb25zZSBib2R5IGlzIGV4cGVjdGVkIHRvIGJlIGEgcmVhZGFibGUgc3RyZWFtIGJ1dCBnb3Q7ICcgKyBpbnNwZWN0KGJvZHkpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleEventStreamResponse.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleMultipartMixedResponse.js":
/*!****************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/handleMultipartMixedResponse.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleMultipartMixedResponse: () => (/* binding */ handleMultipartMixedResponse)\n/* harmony export */ });\n/* harmony import */ var meros_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! meros/browser */ \"(ssr)/../node_modules/meros/browser/index.mjs\");\n/* harmony import */ var meros_node__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! meros/node */ \"(ssr)/../node_modules/meros/node/index.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mergeIncrementalResult.js\");\n\n\n\nfunction isIncomingMessage(body) {\n    return body != null && typeof body === 'object' && 'pipe' in body;\n}\nasync function handleMultipartMixedResponse(response) {\n    const body = response.body;\n    const contentType = response.headers.get('content-type') || '';\n    let asyncIterator;\n    if (isIncomingMessage(body)) {\n        // Meros/node expects headers as an object map with the content-type prop\n        body.headers = {\n            'content-type': contentType,\n        };\n        // And it expects `IncomingMessage` and `node-fetch` returns `body` as `Promise<PassThrough>`\n        const result = await (0,meros_node__WEBPACK_IMPORTED_MODULE_0__.meros)(body);\n        if ('next' in result) {\n            asyncIterator = result;\n        }\n    }\n    else {\n        // Nothing is needed for regular `Response`.\n        const result = await (0,meros_browser__WEBPACK_IMPORTED_MODULE_1__.meros)(response);\n        if ('next' in result) {\n            asyncIterator = result;\n        }\n    }\n    const executionResult = {};\n    if (asyncIterator == null) {\n        return executionResult;\n    }\n    const resultStream = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.mapAsyncIterator)(asyncIterator, (part) => {\n        if (part.json) {\n            const incrementalResult = part.body;\n            (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.mergeIncrementalResult)({\n                incrementalResult,\n                executionResult,\n            });\n            return executionResult;\n        }\n    });\n    return resultStream;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2hhbmRsZU11bHRpcGFydE1peGVkUmVzcG9uc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBNkQ7QUFDRjtBQUNxQjtBQUNoRjtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QixpREFBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLG9EQUFtQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNFQUFnQjtBQUN6QztBQUNBO0FBQ0EsWUFBWSw0RUFBc0I7QUFDbEM7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL2VzbS9oYW5kbGVNdWx0aXBhcnRNaXhlZFJlc3BvbnNlLmpzP2M1YTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVyb3MgYXMgbWVyb3NSZWFkYWJsZVN0cmVhbSB9IGZyb20gJ21lcm9zL2Jyb3dzZXInO1xuaW1wb3J0IHsgbWVyb3MgYXMgbWVyb3NJbmNvbWluZ01lc3NhZ2UgfSBmcm9tICdtZXJvcy9ub2RlJztcbmltcG9ydCB7IG1hcEFzeW5jSXRlcmF0b3IsIG1lcmdlSW5jcmVtZW50YWxSZXN1bHQgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5mdW5jdGlvbiBpc0luY29taW5nTWVzc2FnZShib2R5KSB7XG4gICAgcmV0dXJuIGJvZHkgIT0gbnVsbCAmJiB0eXBlb2YgYm9keSA9PT0gJ29iamVjdCcgJiYgJ3BpcGUnIGluIGJvZHk7XG59XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlTXVsdGlwYXJ0TWl4ZWRSZXNwb25zZShyZXNwb25zZSkge1xuICAgIGNvbnN0IGJvZHkgPSByZXNwb25zZS5ib2R5O1xuICAgIGNvbnN0IGNvbnRlbnRUeXBlID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2NvbnRlbnQtdHlwZScpIHx8ICcnO1xuICAgIGxldCBhc3luY0l0ZXJhdG9yO1xuICAgIGlmIChpc0luY29taW5nTWVzc2FnZShib2R5KSkge1xuICAgICAgICAvLyBNZXJvcy9ub2RlIGV4cGVjdHMgaGVhZGVycyBhcyBhbiBvYmplY3QgbWFwIHdpdGggdGhlIGNvbnRlbnQtdHlwZSBwcm9wXG4gICAgICAgIGJvZHkuaGVhZGVycyA9IHtcbiAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBjb250ZW50VHlwZSxcbiAgICAgICAgfTtcbiAgICAgICAgLy8gQW5kIGl0IGV4cGVjdHMgYEluY29taW5nTWVzc2FnZWAgYW5kIGBub2RlLWZldGNoYCByZXR1cm5zIGBib2R5YCBhcyBgUHJvbWlzZTxQYXNzVGhyb3VnaD5gXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1lcm9zSW5jb21pbmdNZXNzYWdlKGJvZHkpO1xuICAgICAgICBpZiAoJ25leHQnIGluIHJlc3VsdCkge1xuICAgICAgICAgICAgYXN5bmNJdGVyYXRvciA9IHJlc3VsdDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gTm90aGluZyBpcyBuZWVkZWQgZm9yIHJlZ3VsYXIgYFJlc3BvbnNlYC5cbiAgICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgbWVyb3NSZWFkYWJsZVN0cmVhbShyZXNwb25zZSk7XG4gICAgICAgIGlmICgnbmV4dCcgaW4gcmVzdWx0KSB7XG4gICAgICAgICAgICBhc3luY0l0ZXJhdG9yID0gcmVzdWx0O1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IGV4ZWN1dGlvblJlc3VsdCA9IHt9O1xuICAgIGlmIChhc3luY0l0ZXJhdG9yID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGV4ZWN1dGlvblJlc3VsdDtcbiAgICB9XG4gICAgY29uc3QgcmVzdWx0U3RyZWFtID0gbWFwQXN5bmNJdGVyYXRvcihhc3luY0l0ZXJhdG9yLCAocGFydCkgPT4ge1xuICAgICAgICBpZiAocGFydC5qc29uKSB7XG4gICAgICAgICAgICBjb25zdCBpbmNyZW1lbnRhbFJlc3VsdCA9IHBhcnQuYm9keTtcbiAgICAgICAgICAgIG1lcmdlSW5jcmVtZW50YWxSZXN1bHQoe1xuICAgICAgICAgICAgICAgIGluY3JlbWVudGFsUmVzdWx0LFxuICAgICAgICAgICAgICAgIGV4ZWN1dGlvblJlc3VsdCxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgcmV0dXJuIGV4ZWN1dGlvblJlc3VsdDtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHRTdHJlYW07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleMultipartMixedResponse.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleReadableStream.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/handleReadableStream.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handleReadableStream: () => (/* binding */ handleReadableStream)\n/* harmony export */ });\n/* harmony import */ var _repeaterjs_repeater__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @repeaterjs/repeater */ \"(ssr)/../node_modules/@repeaterjs/repeater/repeater.js\");\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n\n\nfunction handleReadableStream(readableStream) {\n    const textDecoder = new _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_1__.TextDecoder();\n    return new _repeaterjs_repeater__WEBPACK_IMPORTED_MODULE_0__.Repeater(function repeaterExecutor(push, stop) {\n        const reader = readableStream.getReader();\n        async function pump() {\n            const { done, value } = await reader.read();\n            if (done) {\n                return stop();\n            }\n            if (value) {\n                const chunk = typeof value === 'string' ? value : textDecoder.decode(value, { stream: true });\n                for (const part of chunk.split('\\n\\n')) {\n                    if (part) {\n                        const eventStr = part.split('event: ')[1];\n                        const dataStr = part.split('data: ')[1];\n                        if (eventStr === 'complete') {\n                            return stop();\n                        }\n                        if (dataStr) {\n                            const data = JSON.parse(dataStr);\n                            await push(data.payload || data);\n                        }\n                    }\n                }\n            }\n            return pump();\n        }\n        stop.finally(() => reader.cancel());\n        return pump();\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2hhbmRsZVJlYWRhYmxlU3RyZWFtLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnRDtBQUNDO0FBQzFDO0FBQ1AsNEJBQTRCLDJEQUFXO0FBQ3ZDLGVBQWUsMERBQVE7QUFDdkI7QUFDQTtBQUNBLG9CQUFvQixjQUFjO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEZBQThGLGNBQWM7QUFDNUc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9lc20vaGFuZGxlUmVhZGFibGVTdHJlYW0uanM/NzMxYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXBlYXRlciB9IGZyb20gJ0ByZXBlYXRlcmpzL3JlcGVhdGVyJztcbmltcG9ydCB7IFRleHREZWNvZGVyIH0gZnJvbSAnQHdoYXR3Zy1ub2RlL2ZldGNoJztcbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVSZWFkYWJsZVN0cmVhbShyZWFkYWJsZVN0cmVhbSkge1xuICAgIGNvbnN0IHRleHREZWNvZGVyID0gbmV3IFRleHREZWNvZGVyKCk7XG4gICAgcmV0dXJuIG5ldyBSZXBlYXRlcihmdW5jdGlvbiByZXBlYXRlckV4ZWN1dG9yKHB1c2gsIHN0b3ApIHtcbiAgICAgICAgY29uc3QgcmVhZGVyID0gcmVhZGFibGVTdHJlYW0uZ2V0UmVhZGVyKCk7XG4gICAgICAgIGFzeW5jIGZ1bmN0aW9uIHB1bXAoKSB7XG4gICAgICAgICAgICBjb25zdCB7IGRvbmUsIHZhbHVlIH0gPSBhd2FpdCByZWFkZXIucmVhZCgpO1xuICAgICAgICAgICAgaWYgKGRvbmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2h1bmsgPSB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnID8gdmFsdWUgOiB0ZXh0RGVjb2Rlci5kZWNvZGUodmFsdWUsIHsgc3RyZWFtOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgcGFydCBvZiBjaHVuay5zcGxpdCgnXFxuXFxuJykpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGV2ZW50U3RyID0gcGFydC5zcGxpdCgnZXZlbnQ6ICcpWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YVN0ciA9IHBhcnQuc3BsaXQoJ2RhdGE6ICcpWzFdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGV2ZW50U3RyID09PSAnY29tcGxldGUnKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHN0b3AoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChkYXRhU3RyKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZGF0YVN0cik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXdhaXQgcHVzaChkYXRhLnBheWxvYWQgfHwgZGF0YSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcHVtcCgpO1xuICAgICAgICB9XG4gICAgICAgIHN0b3AuZmluYWxseSgoKSA9PiByZWFkZXIuY2FuY2VsKCkpO1xuICAgICAgICByZXR1cm4gcHVtcCgpO1xuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleReadableStream.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/index.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildHTTPExecutor: () => (/* binding */ buildHTTPExecutor),\n/* harmony export */   isLiveQueryOperationDefinitionNode: () => (/* reexport safe */ _isLiveQueryOperationDefinitionNode_js__WEBPACK_IMPORTED_MODULE_4__.isLiveQueryOperationDefinitionNode)\n/* harmony export */ });\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @whatwg-node/fetch */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@whatwg-node/fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _createFormDataFromVariables_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./createFormDataFromVariables.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/createFormDataFromVariables.js\");\n/* harmony import */ var _defaultPrintFn_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultPrintFn.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/defaultPrintFn.js\");\n/* harmony import */ var _handleEventStreamResponse_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./handleEventStreamResponse.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleEventStreamResponse.js\");\n/* harmony import */ var _handleMultipartMixedResponse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./handleMultipartMixedResponse.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/handleMultipartMixedResponse.js\");\n/* harmony import */ var _isLiveQueryOperationDefinitionNode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./isLiveQueryOperationDefinitionNode.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/isLiveQueryOperationDefinitionNode.js\");\n/* harmony import */ var _prepareGETUrl_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./prepareGETUrl.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/prepareGETUrl.js\");\n\n\n\n\n\n\n\n\n\nfunction buildHTTPExecutor(options) {\n    const printFn = options?.print ?? _defaultPrintFn_js__WEBPACK_IMPORTED_MODULE_1__.defaultPrintFn;\n    let disposeCtrl;\n    const baseExecutor = (request) => {\n        if (disposeCtrl?.signal.aborted) {\n            return createResultForAbort(disposeCtrl.signal);\n        }\n        const fetchFn = request.extensions?.fetch ?? options?.fetch ?? _whatwg_node_fetch__WEBPACK_IMPORTED_MODULE_2__.fetch;\n        let method = request.extensions?.method || options?.method;\n        const operationAst = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getOperationASTFromRequest)(request);\n        const operationType = operationAst.operation;\n        if ((options?.useGETForQueries || request.extensions?.useGETForQueries) &&\n            operationType === 'query') {\n            method = 'GET';\n        }\n        let accept = 'application/graphql-response+json, application/json, multipart/mixed';\n        if (operationType === 'subscription' || (0,_isLiveQueryOperationDefinitionNode_js__WEBPACK_IMPORTED_MODULE_4__.isLiveQueryOperationDefinitionNode)(operationAst)) {\n            method ||= 'GET';\n            accept = 'text/event-stream';\n        }\n        else {\n            method ||= 'POST';\n        }\n        const endpoint = request.extensions?.endpoint || options?.endpoint || '/graphql';\n        const headers = { accept };\n        if (options?.headers) {\n            Object.assign(headers, typeof options?.headers === 'function' ? options.headers(request) : options?.headers);\n        }\n        if (request.extensions?.headers) {\n            const { headers: headersFromExtensions, ...restExtensions } = request.extensions;\n            Object.assign(headers, headersFromExtensions);\n            request.extensions = restExtensions;\n        }\n        const query = printFn(request.document);\n        let signal = disposeCtrl?.signal;\n        let clearTimeoutFn = () => { };\n        if (options?.timeout) {\n            const timeoutCtrl = new AbortController();\n            signal = timeoutCtrl.signal;\n            disposeCtrl?.signal.addEventListener('abort', clearTimeoutFn);\n            const timeoutId = setTimeout(() => {\n                if (!timeoutCtrl.signal.aborted) {\n                    timeoutCtrl.abort('timeout');\n                }\n                disposeCtrl?.signal.removeEventListener('abort', clearTimeoutFn);\n            }, options.timeout);\n            clearTimeoutFn = () => {\n                clearTimeout(timeoutId);\n            };\n        }\n        const upstreamErrorExtensions = {\n            request: {\n                method,\n            },\n            response: {},\n        };\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => {\n            switch (method) {\n                case 'GET': {\n                    const finalUrl = (0,_prepareGETUrl_js__WEBPACK_IMPORTED_MODULE_5__.prepareGETUrl)({\n                        baseUrl: endpoint,\n                        query,\n                        variables: request.variables,\n                        operationName: request.operationName,\n                        extensions: request.extensions,\n                    });\n                    const fetchOptions = {\n                        method: 'GET',\n                        headers,\n                        signal,\n                    };\n                    if (options?.credentials != null) {\n                        fetchOptions.credentials = options.credentials;\n                    }\n                    upstreamErrorExtensions.request.url = finalUrl;\n                    return fetchFn(finalUrl, fetchOptions, request.context, request.info);\n                }\n                case 'POST': {\n                    const body = {\n                        query,\n                        variables: request.variables,\n                        operationName: request.operationName,\n                        extensions: request.extensions,\n                    };\n                    upstreamErrorExtensions.request.body = body;\n                    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => (0,_createFormDataFromVariables_js__WEBPACK_IMPORTED_MODULE_6__.createFormDataFromVariables)(body, {\n                        File: options?.File,\n                        FormData: options?.FormData,\n                    }))\n                        .then(body => {\n                        if (typeof body === 'string' && !headers['content-type']) {\n                            upstreamErrorExtensions.request.body = body;\n                            headers['content-type'] = 'application/json';\n                        }\n                        const fetchOptions = {\n                            method: 'POST',\n                            body,\n                            headers,\n                            signal,\n                        };\n                        if (options?.credentials != null) {\n                            fetchOptions.credentials = options.credentials;\n                        }\n                        return fetchFn(endpoint, fetchOptions, request.context, request.info);\n                    })\n                        .resolve();\n                }\n            }\n        })\n            .then((fetchResult) => {\n            upstreamErrorExtensions.response.status = fetchResult.status;\n            upstreamErrorExtensions.response.statusText = fetchResult.statusText;\n            Object.defineProperty(upstreamErrorExtensions.response, 'headers', {\n                get() {\n                    return Object.fromEntries(fetchResult.headers.entries());\n                },\n            });\n            clearTimeoutFn();\n            // Retry should respect HTTP Errors\n            if (options?.retry != null && !fetchResult.status.toString().startsWith('2')) {\n                throw new Error(fetchResult.statusText || `Upstream HTTP Error: ${fetchResult.status}`);\n            }\n            const contentType = fetchResult.headers.get('content-type');\n            if (contentType?.includes('text/event-stream')) {\n                return (0,_handleEventStreamResponse_js__WEBPACK_IMPORTED_MODULE_7__.handleEventStreamResponse)(fetchResult);\n            }\n            else if (contentType?.includes('multipart/mixed')) {\n                return (0,_handleMultipartMixedResponse_js__WEBPACK_IMPORTED_MODULE_8__.handleMultipartMixedResponse)(fetchResult);\n            }\n            return fetchResult.text();\n        })\n            .then(result => {\n            if (typeof result === 'string') {\n                upstreamErrorExtensions.response.body = result;\n                if (result) {\n                    try {\n                        const parsedResult = JSON.parse(result);\n                        upstreamErrorExtensions.response.body = parsedResult;\n                        if (parsedResult.data == null &&\n                            (parsedResult.errors == null || parsedResult.errors.length === 0)) {\n                            return {\n                                errors: [\n                                    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)('Unexpected empty \"data\" and \"errors\" fields in result: ' + result, {\n                                        extensions: upstreamErrorExtensions,\n                                    }),\n                                ],\n                            };\n                        }\n                        if (Array.isArray(parsedResult.errors)) {\n                            return {\n                                ...parsedResult,\n                                errors: parsedResult.errors.map(({ message, ...options }) => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)(message, {\n                                    ...options,\n                                    extensions: {\n                                        code: 'DOWNSTREAM_SERVICE_ERROR',\n                                        ...(options.extensions || {}),\n                                    },\n                                })),\n                            };\n                        }\n                        return parsedResult;\n                    }\n                    catch (e) {\n                        return {\n                            errors: [\n                                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)(`Unexpected response: ${JSON.stringify(result)}`, {\n                                    extensions: upstreamErrorExtensions,\n                                    originalError: e,\n                                }),\n                            ],\n                        };\n                    }\n                }\n            }\n            else {\n                return result;\n            }\n        })\n            .catch((e) => {\n            if (e.name === 'AggregateError') {\n                return {\n                    errors: e.errors.map((e) => coerceFetchError(e, {\n                        signal,\n                        endpoint,\n                        upstreamErrorExtensions,\n                    })),\n                };\n            }\n            return {\n                errors: [\n                    coerceFetchError(e, {\n                        signal,\n                        endpoint,\n                        upstreamErrorExtensions,\n                    }),\n                ],\n            };\n        })\n            .resolve();\n    };\n    let executor = baseExecutor;\n    if (options?.retry != null) {\n        executor = function retryExecutor(request) {\n            let result;\n            let attempt = 0;\n            function retryAttempt() {\n                if (disposeCtrl?.signal.aborted) {\n                    return createResultForAbort(disposeCtrl.signal);\n                }\n                attempt++;\n                if (attempt > options.retry) {\n                    if (result != null) {\n                        return result;\n                    }\n                    return {\n                        errors: [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)('No response returned from fetch')],\n                    };\n                }\n                return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => baseExecutor(request))\n                    .then(res => {\n                    result = res;\n                    if (result?.errors?.length) {\n                        return retryAttempt();\n                    }\n                    return result;\n                })\n                    .resolve();\n            }\n            return retryAttempt();\n        };\n    }\n    if (!options?.disposable) {\n        disposeCtrl = undefined;\n        return executor;\n    }\n    disposeCtrl = new AbortController();\n    Object.defineProperties(executor, {\n        [Symbol.dispose]: {\n            get() {\n                return function dispose() {\n                    return disposeCtrl.abort(createAbortErrorReason());\n                };\n            },\n        },\n        [Symbol.asyncDispose]: {\n            get() {\n                return function asyncDispose() {\n                    return disposeCtrl.abort(createAbortErrorReason());\n                };\n            },\n        },\n    });\n    return executor;\n}\nfunction coerceFetchError(e, { signal, endpoint, upstreamErrorExtensions, }) {\n    if (typeof e === 'string') {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)(e, {\n            extensions: upstreamErrorExtensions,\n        });\n    }\n    else if (e.name === 'GraphQLError') {\n        return e;\n    }\n    else if (e.name === 'TypeError' && e.message === 'fetch failed') {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)(`fetch failed to ${endpoint}`, {\n            extensions: upstreamErrorExtensions,\n            originalError: e,\n        });\n    }\n    else if (e.name === 'AbortError' && signal?.reason) {\n        return createGraphQLErrorForAbort(signal, {\n            extensions: upstreamErrorExtensions,\n        });\n    }\n    else if (e.message) {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)(e.message, {\n            extensions: upstreamErrorExtensions,\n            originalError: e,\n        });\n    }\n    else {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)('Unknown error', {\n            extensions: upstreamErrorExtensions,\n            originalError: e,\n        });\n    }\n}\nfunction createAbortErrorReason() {\n    return new Error('Executor was disposed.');\n}\nfunction createGraphQLErrorForAbort(signal, extensions) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.createGraphQLError)('The operation was aborted. reason: ' + signal.reason, {\n        extensions,\n    });\n}\nfunction createResultForAbort(signal, extensions) {\n    return {\n        errors: [createGraphQLErrorForAbort(signal, extensions)],\n    };\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/isGraphQLUpload.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/isGraphQLUpload.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isGraphQLUpload: () => (/* binding */ isGraphQLUpload)\n/* harmony export */ });\nfunction isGraphQLUpload(upload) {\n    return typeof upload.createReadStream === 'function';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2lzR3JhcGhRTFVwbG9hZC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9lc20vaXNHcmFwaFFMVXBsb2FkLmpzP2RkMDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzR3JhcGhRTFVwbG9hZCh1cGxvYWQpIHtcbiAgICByZXR1cm4gdHlwZW9mIHVwbG9hZC5jcmVhdGVSZWFkU3RyZWFtID09PSAnZnVuY3Rpb24nO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/isGraphQLUpload.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/isLiveQueryOperationDefinitionNode.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/isLiveQueryOperationDefinitionNode.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isLiveQueryOperationDefinitionNode: () => (/* binding */ isLiveQueryOperationDefinitionNode)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\nconst isLiveQueryOperationDefinitionNode = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize1)(function isLiveQueryOperationDefinitionNode(node) {\n    return (node.operation === 'query' &&\n        node.directives?.some(directive => directive.name.value === 'live'));\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL2lzTGl2ZVF1ZXJ5T3BlcmF0aW9uRGVmaW5pdGlvbk5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0Q7QUFDekMsMkNBQTJDLDhEQUFRO0FBQzFEO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9lc20vaXNMaXZlUXVlcnlPcGVyYXRpb25EZWZpbml0aW9uTm9kZS5qcz8zYTFmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGNvbnN0IGlzTGl2ZVF1ZXJ5T3BlcmF0aW9uRGVmaW5pdGlvbk5vZGUgPSBtZW1vaXplMShmdW5jdGlvbiBpc0xpdmVRdWVyeU9wZXJhdGlvbkRlZmluaXRpb25Ob2RlKG5vZGUpIHtcbiAgICByZXR1cm4gKG5vZGUub3BlcmF0aW9uID09PSAncXVlcnknICYmXG4gICAgICAgIG5vZGUuZGlyZWN0aXZlcz8uc29tZShkaXJlY3RpdmUgPT4gZGlyZWN0aXZlLm5hbWUudmFsdWUgPT09ICdsaXZlJykpO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/isLiveQueryOperationDefinitionNode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/esm/prepareGETUrl.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/esm/prepareGETUrl.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prepareGETUrl: () => (/* binding */ prepareGETUrl)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/stripIgnoredCharacters.mjs\");\n\nfunction prepareGETUrl({ baseUrl = '', query, variables, operationName, extensions, }) {\n    const dummyHostname = 'https://dummyhostname.com';\n    const validUrl = baseUrl.startsWith('http')\n        ? baseUrl\n        : baseUrl?.startsWith('/')\n            ? `${dummyHostname}${baseUrl}`\n            : `${dummyHostname}/${baseUrl}`;\n    const urlObj = new URL(validUrl);\n    urlObj.searchParams.set('query', (0,graphql__WEBPACK_IMPORTED_MODULE_0__.stripIgnoredCharacters)(query));\n    if (variables && Object.keys(variables).length > 0) {\n        urlObj.searchParams.set('variables', JSON.stringify(variables));\n    }\n    if (operationName) {\n        urlObj.searchParams.set('operationName', operationName);\n    }\n    if (extensions) {\n        urlObj.searchParams.set('extensions', JSON.stringify(extensions));\n    }\n    const finalUrl = urlObj.toString().replace(dummyHostname, '');\n    return finalUrl;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL3ByZXBhcmVHRVRVcmwuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFDMUMseUJBQXlCLDREQUE0RDtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixjQUFjLEVBQUUsUUFBUTtBQUN6QyxpQkFBaUIsY0FBYyxHQUFHLFFBQVE7QUFDMUM7QUFDQSxxQ0FBcUMsK0RBQXNCO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvZXNtL3ByZXBhcmVHRVRVcmwuanM/ZGJjMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdHJpcElnbm9yZWRDaGFyYWN0ZXJzIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gcHJlcGFyZUdFVFVybCh7IGJhc2VVcmwgPSAnJywgcXVlcnksIHZhcmlhYmxlcywgb3BlcmF0aW9uTmFtZSwgZXh0ZW5zaW9ucywgfSkge1xuICAgIGNvbnN0IGR1bW15SG9zdG5hbWUgPSAnaHR0cHM6Ly9kdW1teWhvc3RuYW1lLmNvbSc7XG4gICAgY29uc3QgdmFsaWRVcmwgPSBiYXNlVXJsLnN0YXJ0c1dpdGgoJ2h0dHAnKVxuICAgICAgICA/IGJhc2VVcmxcbiAgICAgICAgOiBiYXNlVXJsPy5zdGFydHNXaXRoKCcvJylcbiAgICAgICAgICAgID8gYCR7ZHVtbXlIb3N0bmFtZX0ke2Jhc2VVcmx9YFxuICAgICAgICAgICAgOiBgJHtkdW1teUhvc3RuYW1lfS8ke2Jhc2VVcmx9YDtcbiAgICBjb25zdCB1cmxPYmogPSBuZXcgVVJMKHZhbGlkVXJsKTtcbiAgICB1cmxPYmouc2VhcmNoUGFyYW1zLnNldCgncXVlcnknLCBzdHJpcElnbm9yZWRDaGFyYWN0ZXJzKHF1ZXJ5KSk7XG4gICAgaWYgKHZhcmlhYmxlcyAmJiBPYmplY3Qua2V5cyh2YXJpYWJsZXMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgdXJsT2JqLnNlYXJjaFBhcmFtcy5zZXQoJ3ZhcmlhYmxlcycsIEpTT04uc3RyaW5naWZ5KHZhcmlhYmxlcykpO1xuICAgIH1cbiAgICBpZiAob3BlcmF0aW9uTmFtZSkge1xuICAgICAgICB1cmxPYmouc2VhcmNoUGFyYW1zLnNldCgnb3BlcmF0aW9uTmFtZScsIG9wZXJhdGlvbk5hbWUpO1xuICAgIH1cbiAgICBpZiAoZXh0ZW5zaW9ucykge1xuICAgICAgICB1cmxPYmouc2VhcmNoUGFyYW1zLnNldCgnZXh0ZW5zaW9ucycsIEpTT04uc3RyaW5naWZ5KGV4dGVuc2lvbnMpKTtcbiAgICB9XG4gICAgY29uc3QgZmluYWxVcmwgPSB1cmxPYmoudG9TdHJpbmcoKS5yZXBsYWNlKGR1bW15SG9zdG5hbWUsICcnKTtcbiAgICByZXR1cm4gZmluYWxVcmw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/esm/prepareGETUrl.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/errors.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnREFBVztBQUNuQixtQkFBbUIsaURBQVk7QUFDL0I7QUFDQSxlQUFlLGlEQUFZO0FBQzNCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9lcnJvcnMuanM/MTdiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMRXJyb3IsIHZlcnNpb25JbmZvIH0gZnJvbSAnZ3JhcGhxbCc7XG5jb25zdCBwb3NzaWJsZUdyYXBoUUxFcnJvclByb3BlcnRpZXMgPSBbXG4gICAgJ21lc3NhZ2UnLFxuICAgICdsb2NhdGlvbnMnLFxuICAgICdwYXRoJyxcbiAgICAnbm9kZXMnLFxuICAgICdzb3VyY2UnLFxuICAgICdwb3NpdGlvbnMnLFxuICAgICdvcmlnaW5hbEVycm9yJyxcbiAgICAnbmFtZScsXG4gICAgJ3N0YWNrJyxcbiAgICAnZXh0ZW5zaW9ucycsXG5dO1xuZnVuY3Rpb24gaXNHcmFwaFFMRXJyb3JMaWtlKGVycm9yKSB7XG4gICAgcmV0dXJuIChlcnJvciAhPSBudWxsICYmXG4gICAgICAgIHR5cGVvZiBlcnJvciA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgT2JqZWN0LmtleXMoZXJyb3IpLmV2ZXJ5KGtleSA9PiBwb3NzaWJsZUdyYXBoUUxFcnJvclByb3BlcnRpZXMuaW5jbHVkZXMoa2V5KSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnM/Lm9yaWdpbmFsRXJyb3IgJiZcbiAgICAgICAgIShvcHRpb25zLm9yaWdpbmFsRXJyb3IgaW5zdGFuY2VvZiBFcnJvcikgJiZcbiAgICAgICAgaXNHcmFwaFFMRXJyb3JMaWtlKG9wdGlvbnMub3JpZ2luYWxFcnJvcikpIHtcbiAgICAgICAgb3B0aW9ucy5vcmlnaW5hbEVycm9yID0gY3JlYXRlR3JhcGhRTEVycm9yKG9wdGlvbnMub3JpZ2luYWxFcnJvci5tZXNzYWdlLCBvcHRpb25zLm9yaWdpbmFsRXJyb3IpO1xuICAgIH1cbiAgICBpZiAodmVyc2lvbkluZm8ubWFqb3IgPj0gMTcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnM/Lm5vZGVzLCBvcHRpb25zPy5zb3VyY2UsIG9wdGlvbnM/LnBvc2l0aW9ucywgb3B0aW9ucz8ucGF0aCwgb3B0aW9ucz8ub3JpZ2luYWxFcnJvciwgb3B0aW9ucz8uZXh0ZW5zaW9ucyk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVsb2NhdGVkRXJyb3Iob3JpZ2luYWxFcnJvciwgcGF0aCkge1xuICAgIHJldHVybiBjcmVhdGVHcmFwaFFMRXJyb3Iob3JpZ2luYWxFcnJvci5tZXNzYWdlLCB7XG4gICAgICAgIG5vZGVzOiBvcmlnaW5hbEVycm9yLm5vZGVzLFxuICAgICAgICBzb3VyY2U6IG9yaWdpbmFsRXJyb3Iuc291cmNlLFxuICAgICAgICBwb3NpdGlvbnM6IG9yaWdpbmFsRXJyb3IucG9zaXRpb25zLFxuICAgICAgICBwYXRoOiBwYXRoID09IG51bGwgPyBvcmlnaW5hbEVycm9yLnBhdGggOiBwYXRoLFxuICAgICAgICBvcmlnaW5hbEVycm9yLFxuICAgICAgICBleHRlbnNpb25zOiBvcmlnaW5hbEVycm9yLmV4dGVuc2lvbnMsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js":
/*!************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationASTFromDocument: () => (/* binding */ getOperationASTFromDocument),\n/* harmony export */   getOperationASTFromRequest: () => (/* binding */ getOperationASTFromRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nconst getOperationASTFromRequest = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ0Y7QUFDakM7QUFDUCxnQkFBZ0Isd0RBQWU7QUFDL0I7QUFDQSxrREFBa0Qsb0JBQW9CO0FBQ3RFO0FBQ0E7QUFDQTtBQUNPLG1DQUFtQyxxREFBUTtBQUNsRDtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QuanM/MzBiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcGVyYXRpb25BU1QgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnLi9tZW1vaXplLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRpb25BU1RGcm9tRG9jdW1lbnQoZG9jdW1lbnROb2RlLCBvcGVyYXRpb25OYW1lKSB7XG4gICAgY29uc3QgZG9jID0gZ2V0T3BlcmF0aW9uQVNUKGRvY3VtZW50Tm9kZSwgb3BlcmF0aW9uTmFtZSk7XG4gICAgaWYgKCFkb2MpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgaW5mZXIgb3BlcmF0aW9uICR7b3BlcmF0aW9uTmFtZSB8fCAnJ31gKTtcbiAgICB9XG4gICAgcmV0dXJuIGRvYztcbn1cbmV4cG9ydCBjb25zdCBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdCA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gZ2V0T3BlcmF0aW9uQVNURnJvbURvY3VtZW50KHJlcXVlc3QuZG9jdW1lbnQsIHJlcXVlc3Qub3BlcmF0aW9uTmFtZSk7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nfunction isAsyncIterable(value) {\n    return value?.[Symbol.asyncIterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0FzeW5jSXRlcmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0FzeW5jSXRlcmFibGUuanM/YTRjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5bU3ltYm9sLmFzeW5jSXRlcmF0b3JdICE9IG51bGw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9qc3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3ItaHR0cC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2pzdXRpbHMuanM/NGMyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNJdGVyYWJsZU9iamVjdCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgU3ltYm9sLml0ZXJhdG9yIGluIHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUHJvbWlzZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8udGhlbiAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHByb21pc2VSZWR1Y2UodmFsdWVzLCBjYWxsYmFja0ZuLCBpbml0aWFsVmFsdWUpIHtcbiAgICBsZXQgYWNjdW11bGF0b3IgPSBpbml0aWFsVmFsdWU7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgYWNjdW11bGF0b3IgPSBpc1Byb21pc2UoYWNjdW11bGF0b3IpXG4gICAgICAgICAgICA/IGFjY3VtdWxhdG9yLnRoZW4ocmVzb2x2ZWQgPT4gY2FsbGJhY2tGbihyZXNvbHZlZCwgdmFsdWUpKVxuICAgICAgICAgICAgOiBjYWxsYmFja0ZuKGFjY3VtdWxhdG9yLCB2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapAsyncIterator: () => (/* binding */ mapAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, onNext, onError, onEnd) {\n    if (Symbol.asyncIterator in iterator) {\n        iterator = iterator[Symbol.asyncIterator]();\n    }\n    let $return;\n    let abruptClose;\n    let onEndWithValue;\n    if (onEnd) {\n        onEndWithValue = value => {\n            const onEnd$ = onEnd();\n            return (0,_jsutils_js__WEBPACK_IMPORTED_MODULE_0__.isPromise)(onEnd$) ? onEnd$.then(() => value) : value;\n        };\n    }\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        if (result.done) {\n            return onEndWithValue ? onEndWithValue(result) : result;\n        }\n        return asyncMapValue(result.value, onNext).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (onError) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = onError;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            const res$ = $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n            return onEndWithValue ? res$.then(onEndWithValue) : res$;\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tYXBBc3luY0l0ZXJhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0RBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw4QkFBOEI7QUFDbEU7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tYXBBc3luY0l0ZXJhdG9yLmpzP2ZjZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNQcm9taXNlIH0gZnJvbSAnLi9qc3V0aWxzLmpzJztcbi8qKlxuICogR2l2ZW4gYW4gQXN5bmNJdGVyYWJsZSBhbmQgYSBjYWxsYmFjayBmdW5jdGlvbiwgcmV0dXJuIGFuIEFzeW5jSXRlcmF0b3JcbiAqIHdoaWNoIHByb2R1Y2VzIHZhbHVlcyBtYXBwZWQgdmlhIGNhbGxpbmcgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwQXN5bmNJdGVyYXRvcihpdGVyYXRvciwgb25OZXh0LCBvbkVycm9yLCBvbkVuZCkge1xuICAgIGlmIChTeW1ib2wuYXN5bmNJdGVyYXRvciBpbiBpdGVyYXRvcikge1xuICAgICAgICBpdGVyYXRvciA9IGl0ZXJhdG9yW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIH1cbiAgICBsZXQgJHJldHVybjtcbiAgICBsZXQgYWJydXB0Q2xvc2U7XG4gICAgbGV0IG9uRW5kV2l0aFZhbHVlO1xuICAgIGlmIChvbkVuZCkge1xuICAgICAgICBvbkVuZFdpdGhWYWx1ZSA9IHZhbHVlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG9uRW5kJCA9IG9uRW5kKCk7XG4gICAgICAgICAgICByZXR1cm4gaXNQcm9taXNlKG9uRW5kJCkgPyBvbkVuZCQudGhlbigoKSA9PiB2YWx1ZSkgOiB2YWx1ZTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBpdGVyYXRvci5yZXR1cm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgJHJldHVybiA9IGl0ZXJhdG9yLnJldHVybjtcbiAgICAgICAgYWJydXB0Q2xvc2UgPSAoZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJldGhyb3cgPSAoKSA9PiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgICAgICAgICByZXR1cm4gJHJldHVybi5jYWxsKGl0ZXJhdG9yKS50aGVuKHJldGhyb3csIHJldGhyb3cpO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBmdW5jdGlvbiBtYXBSZXN1bHQocmVzdWx0KSB7XG4gICAgICAgIGlmIChyZXN1bHQuZG9uZSkge1xuICAgICAgICAgICAgcmV0dXJuIG9uRW5kV2l0aFZhbHVlID8gb25FbmRXaXRoVmFsdWUocmVzdWx0KSA6IHJlc3VsdDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXN5bmNNYXBWYWx1ZShyZXN1bHQudmFsdWUsIG9uTmV4dCkudGhlbihpdGVyYXRvclJlc3VsdCwgYWJydXB0Q2xvc2UpO1xuICAgIH1cbiAgICBsZXQgbWFwUmVqZWN0O1xuICAgIGlmIChvbkVycm9yKSB7XG4gICAgICAgIC8vIENhcHR1cmUgcmVqZWN0Q2FsbGJhY2sgdG8gZW5zdXJlIGl0IGNhbm5vdCBiZSBudWxsLlxuICAgICAgICBjb25zdCByZWplY3QgPSBvbkVycm9yO1xuICAgICAgICBtYXBSZWplY3QgPSAoZXJyb3IpID0+IGFzeW5jTWFwVmFsdWUoZXJyb3IsIHJlamVjdCkudGhlbihpdGVyYXRvclJlc3VsdCwgYWJydXB0Q2xvc2UpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBuZXh0KCkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLm5leHQoKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmV0dXJuKCkge1xuICAgICAgICAgICAgY29uc3QgcmVzJCA9ICRyZXR1cm5cbiAgICAgICAgICAgICAgICA/ICRyZXR1cm4uY2FsbChpdGVyYXRvcikudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdClcbiAgICAgICAgICAgICAgICA6IFByb21pc2UucmVzb2x2ZSh7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfSk7XG4gICAgICAgICAgICByZXR1cm4gb25FbmRXaXRoVmFsdWUgPyByZXMkLnRoZW4ob25FbmRXaXRoVmFsdWUpIDogcmVzJDtcbiAgICAgICAgfSxcbiAgICAgICAgdGhyb3coZXJyb3IpIHtcbiAgICAgICAgICAgIGlmICh0eXBlb2YgaXRlcmF0b3IudGhyb3cgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaXRlcmF0b3IudGhyb3coZXJyb3IpLnRoZW4obWFwUmVzdWx0LCBtYXBSZWplY3QpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGVycm9yKS5jYXRjaChhYnJ1cHRDbG9zZSk7XG4gICAgICAgIH0sXG4gICAgICAgIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl0oKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcztcbiAgICAgICAgfSxcbiAgICB9O1xufVxuZnVuY3Rpb24gYXN5bmNNYXBWYWx1ZSh2YWx1ZSwgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiByZXNvbHZlKGNhbGxiYWNrKHZhbHVlKSkpO1xufVxuZnVuY3Rpb24gaXRlcmF0b3JSZXN1bHQodmFsdWUpIHtcbiAgICByZXR1cm4geyB2YWx1ZSwgZG9uZTogZmFsc2UgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mergeIncrementalResult.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mergeIncrementalResult.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeIncrementalResult: () => (/* binding */ mergeIncrementalResult)\n/* harmony export */ });\n/* harmony import */ var dset_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dset/merge */ \"(ssr)/../node_modules/dset/merge/index.mjs\");\n\nfunction mergeIncrementalResult({ incrementalResult, executionResult, }) {\n    const path = ['data', ...(incrementalResult.path ?? [])];\n    if (incrementalResult.items) {\n        for (const item of incrementalResult.items) {\n            (0,dset_merge__WEBPACK_IMPORTED_MODULE_0__.dset)(executionResult, path, item);\n            // Increment the last path segment (the array index) to merge the next item at the next index\n            path[path.length - 1]++;\n        }\n    }\n    if (incrementalResult.data) {\n        (0,dset_merge__WEBPACK_IMPORTED_MODULE_0__.dset)(executionResult, path, incrementalResult.data);\n    }\n    if (incrementalResult.errors) {\n        executionResult.errors = executionResult.errors || [];\n        executionResult.errors.push(...incrementalResult.errors);\n    }\n    if (incrementalResult.extensions) {\n        (0,dset_merge__WEBPACK_IMPORTED_MODULE_0__.dset)(executionResult, 'extensions', incrementalResult.extensions);\n    }\n    if (incrementalResult.incremental) {\n        incrementalResult.incremental.forEach(incrementalSubResult => {\n            mergeIncrementalResult({\n                incrementalResult: incrementalSubResult,\n                executionResult,\n            });\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yLWh0dHAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tZXJnZUluY3JlbWVudGFsUmVzdWx0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtDO0FBQzNCLGtDQUFrQyxxQ0FBcUM7QUFDOUU7QUFDQTtBQUNBO0FBQ0EsWUFBWSxnREFBSTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnREFBSTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQUk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci1odHRwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWVyZ2VJbmNyZW1lbnRhbFJlc3VsdC5qcz9mMjQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGRzZXQgfSBmcm9tICdkc2V0L21lcmdlJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUluY3JlbWVudGFsUmVzdWx0KHsgaW5jcmVtZW50YWxSZXN1bHQsIGV4ZWN1dGlvblJlc3VsdCwgfSkge1xuICAgIGNvbnN0IHBhdGggPSBbJ2RhdGEnLCAuLi4oaW5jcmVtZW50YWxSZXN1bHQucGF0aCA/PyBbXSldO1xuICAgIGlmIChpbmNyZW1lbnRhbFJlc3VsdC5pdGVtcykge1xuICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgaW5jcmVtZW50YWxSZXN1bHQuaXRlbXMpIHtcbiAgICAgICAgICAgIGRzZXQoZXhlY3V0aW9uUmVzdWx0LCBwYXRoLCBpdGVtKTtcbiAgICAgICAgICAgIC8vIEluY3JlbWVudCB0aGUgbGFzdCBwYXRoIHNlZ21lbnQgKHRoZSBhcnJheSBpbmRleCkgdG8gbWVyZ2UgdGhlIG5leHQgaXRlbSBhdCB0aGUgbmV4dCBpbmRleFxuICAgICAgICAgICAgcGF0aFtwYXRoLmxlbmd0aCAtIDFdKys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGluY3JlbWVudGFsUmVzdWx0LmRhdGEpIHtcbiAgICAgICAgZHNldChleGVjdXRpb25SZXN1bHQsIHBhdGgsIGluY3JlbWVudGFsUmVzdWx0LmRhdGEpO1xuICAgIH1cbiAgICBpZiAoaW5jcmVtZW50YWxSZXN1bHQuZXJyb3JzKSB7XG4gICAgICAgIGV4ZWN1dGlvblJlc3VsdC5lcnJvcnMgPSBleGVjdXRpb25SZXN1bHQuZXJyb3JzIHx8IFtdO1xuICAgICAgICBleGVjdXRpb25SZXN1bHQuZXJyb3JzLnB1c2goLi4uaW5jcmVtZW50YWxSZXN1bHQuZXJyb3JzKTtcbiAgICB9XG4gICAgaWYgKGluY3JlbWVudGFsUmVzdWx0LmV4dGVuc2lvbnMpIHtcbiAgICAgICAgZHNldChleGVjdXRpb25SZXN1bHQsICdleHRlbnNpb25zJywgaW5jcmVtZW50YWxSZXN1bHQuZXh0ZW5zaW9ucyk7XG4gICAgfVxuICAgIGlmIChpbmNyZW1lbnRhbFJlc3VsdC5pbmNyZW1lbnRhbCkge1xuICAgICAgICBpbmNyZW1lbnRhbFJlc3VsdC5pbmNyZW1lbnRhbC5mb3JFYWNoKGluY3JlbWVudGFsU3ViUmVzdWx0ID0+IHtcbiAgICAgICAgICAgIG1lcmdlSW5jcmVtZW50YWxSZXN1bHQoe1xuICAgICAgICAgICAgICAgIGluY3JlbWVudGFsUmVzdWx0OiBpbmNyZW1lbnRhbFN1YlJlc3VsdCxcbiAgICAgICAgICAgICAgICBleGVjdXRpb25SZXN1bHQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor-http/node_modules/@graphql-tools/utils/esm/mergeIncrementalResult.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/esm/execution/coerceError.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/esm/execution/coerceError.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   coerceError: () => (/* binding */ coerceError)\n/* harmony export */ });\nfunction coerceError(error) {\n    if (error instanceof Error) {\n        return error;\n    }\n    if (typeof error === 'object' && error != null) {\n        if ('message' in error && typeof error.message === 'string') {\n            let errorOptions;\n            if ('cause' in error) {\n                errorOptions = { cause: error.cause };\n            }\n            const coercedError = new Error(error.message, errorOptions);\n            if ('stack' in error && typeof error.stack === 'string') {\n                coercedError.stack = error.stack;\n            }\n            if ('name' in error && typeof error.name === 'string') {\n                coercedError.name = error.name;\n            }\n            return coercedError;\n        }\n    }\n    return new Error(String(error));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vY29lcmNlRXJyb3IuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL2NvZXJjZUVycm9yLmpzPzNhZjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGNvZXJjZUVycm9yKGVycm9yKSB7XG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIGVycm9yO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGVycm9yID09PSAnb2JqZWN0JyAmJiBlcnJvciAhPSBudWxsKSB7XG4gICAgICAgIGlmICgnbWVzc2FnZScgaW4gZXJyb3IgJiYgdHlwZW9mIGVycm9yLm1lc3NhZ2UgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBsZXQgZXJyb3JPcHRpb25zO1xuICAgICAgICAgICAgaWYgKCdjYXVzZScgaW4gZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBlcnJvck9wdGlvbnMgPSB7IGNhdXNlOiBlcnJvci5jYXVzZSB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgY29lcmNlZEVycm9yID0gbmV3IEVycm9yKGVycm9yLm1lc3NhZ2UsIGVycm9yT3B0aW9ucyk7XG4gICAgICAgICAgICBpZiAoJ3N0YWNrJyBpbiBlcnJvciAmJiB0eXBlb2YgZXJyb3Iuc3RhY2sgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgY29lcmNlZEVycm9yLnN0YWNrID0gZXJyb3Iuc3RhY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoJ25hbWUnIGluIGVycm9yICYmIHR5cGVvZiBlcnJvci5uYW1lID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgIGNvZXJjZWRFcnJvci5uYW1lID0gZXJyb3IubmFtZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjb2VyY2VkRXJyb3I7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBFcnJvcihTdHJpbmcoZXJyb3IpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/esm/execution/coerceError.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/esm/execution/execute.js":
/*!************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/esm/execution/execute.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CRITICAL_ERROR: () => (/* binding */ CRITICAL_ERROR),\n/* harmony export */   assertValidExecutionArguments: () => (/* binding */ assertValidExecutionArguments),\n/* harmony export */   buildExecutionContext: () => (/* binding */ buildExecutionContext),\n/* harmony export */   buildResolveInfo: () => (/* binding */ buildResolveInfo),\n/* harmony export */   defaultFieldResolver: () => (/* binding */ defaultFieldResolver),\n/* harmony export */   defaultTypeResolver: () => (/* binding */ defaultTypeResolver),\n/* harmony export */   execute: () => (/* binding */ execute),\n/* harmony export */   executeSync: () => (/* binding */ executeSync),\n/* harmony export */   flattenIncrementalResults: () => (/* binding */ flattenIncrementalResults),\n/* harmony export */   getFieldDef: () => (/* binding */ getFieldDef),\n/* harmony export */   getFragmentsFromDocument: () => (/* binding */ getFragmentsFromDocument),\n/* harmony export */   isIncrementalResult: () => (/* binding */ isIncrementalResult),\n/* harmony export */   subscribe: () => (/* binding */ subscribe)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/validate.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/locatedError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/Path.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\");\n/* harmony import */ var _coerceError_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./coerceError.js */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/coerceError.js\");\n/* harmony import */ var _flattenAsyncIterable_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./flattenAsyncIterable.js */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js\");\n/* harmony import */ var _invariant_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./invariant.js */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/invariant.js\");\n/* harmony import */ var _promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./promiseForObject.js */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js\");\n/* harmony import */ var _values_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./values.js */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/values.js\");\n\n\n\n\n\n\n\n\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\nconst collectSubfields = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize3)((exeContext, returnType, fieldNodes) => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectSubFields)(exeContext.schema, exeContext.fragments, exeContext.variableValues, returnType, fieldNodes));\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification,\n * including `@defer` and `@stream` as proposed in\n * https://github.com/graphql/graphql-spec/pull/742\n *\n * This function returns a Promise of an IncrementalExecutionResults\n * object. This object either consists of a single ExecutionResult, or an\n * object containing an `initialResult` and a stream of `subsequentResults`.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nfunction execute(args) {\n    // If a valid execution context cannot be created due to incorrect arguments,\n    // a \"Response\" with only errors is returned.\n    const exeContext = buildExecutionContext(args);\n    // Return early errors if execution context failed.\n    if (!('schema' in exeContext)) {\n        return {\n            errors: exeContext.map(e => {\n                Object.defineProperty(e, 'extensions', {\n                    value: {\n                        ...e.extensions,\n                        http: {\n                            ...e.extensions?.['http'],\n                            status: 400,\n                        },\n                    },\n                });\n                return e;\n            }),\n        };\n    }\n    return executeImpl(exeContext);\n}\nfunction executeImpl(exeContext) {\n    if (exeContext.signal?.aborted) {\n        throw exeContext.signal.reason;\n    }\n    // Return a Promise that will eventually resolve to the data described by\n    // The \"Response\" section of the GraphQL specification.\n    //\n    // If errors are encountered while executing a GraphQL field, only that\n    // field and its descendants will be omitted, and sibling fields will still\n    // be executed. An execution which encounters errors will still result in a\n    // resolved Promise.\n    //\n    // Errors from sub-fields of a NonNull type may propagate to the top level,\n    // at which point we still log the error and null the parent field, which\n    // in this case is the entire response.\n    const result = new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executeOperation(exeContext))\n        .then(data => {\n        const initialResult = buildResponse(data, exeContext.errors);\n        if (exeContext.subsequentPayloads.size > 0) {\n            return {\n                initialResult: {\n                    ...initialResult,\n                    hasNext: true,\n                },\n                subsequentResults: yieldSubsequentPayloads(exeContext),\n            };\n        }\n        return initialResult;\n    }, (error) => {\n        if (exeContext.signal?.aborted) {\n            throw exeContext.signal.reason;\n        }\n        if (error.errors) {\n            exeContext.errors.push(...error.errors);\n        }\n        else {\n            exeContext.errors.push(error);\n        }\n        return buildResponse(null, exeContext.errors);\n    })\n        .resolve();\n    return result;\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\nfunction executeSync(args) {\n    const result = execute(args);\n    // Assert that the execution was synchronous.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result) || 'initialResult' in result) {\n        throw new Error('GraphQL execution failed to complete synchronously.');\n    }\n    return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\nfunction buildResponse(data, errors) {\n    return errors.length === 0 ? { data } : { errors, data };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\nfunction assertValidExecutionArguments(schema, document, rawVariableValues) {\n    console.assert(!!document, 'Must provide document.');\n    // If the schema used for execution is invalid, throw an error.\n    (0,graphql__WEBPACK_IMPORTED_MODULE_4__.assertValidSchema)(schema);\n    // Variables, if provided, must be an object.\n    console.assert(rawVariableValues == null || (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(rawVariableValues), 'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.');\n}\nconst getFragmentsFromDocument = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getFragmentsFromDocument(document) {\n    const fragments = Object.create(null);\n    for (const definition of document.definitions) {\n        if (definition.kind === graphql__WEBPACK_IMPORTED_MODULE_5__.Kind.FRAGMENT_DEFINITION) {\n            fragments[definition.name.value] = definition;\n        }\n    }\n    return fragments;\n});\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * TODO: consider no longer exporting this function\n * @internal\n */\nfunction buildExecutionContext(args) {\n    const { schema, document, rootValue, contextValue, variableValues: rawVariableValues, operationName, fieldResolver, typeResolver, subscribeFieldResolver, signal, } = args;\n    // If the schema used for execution is invalid, throw an error.\n    (0,graphql__WEBPACK_IMPORTED_MODULE_4__.assertValidSchema)(schema);\n    const fragments = getFragmentsFromDocument(document);\n    let operation;\n    for (const definition of document.definitions) {\n        switch (definition.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_5__.Kind.OPERATION_DEFINITION:\n                if (operationName == null) {\n                    if (operation !== undefined) {\n                        return [\n                            (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Must provide operation name if query contains multiple operations.'),\n                        ];\n                    }\n                    operation = definition;\n                }\n                else if (definition.name?.value === operationName) {\n                    operation = definition;\n                }\n                break;\n            default:\n            // ignore non-executable definitions\n        }\n    }\n    if (operation == null) {\n        if (operationName != null) {\n            return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Unknown operation named \"${operationName}\".`)];\n        }\n        return [(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Must provide an operation.')];\n    }\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    /* c8 ignore next */\n    const variableDefinitions = operation.variableDefinitions ?? [];\n    const coercedVariableValues = (0,_values_js__WEBPACK_IMPORTED_MODULE_7__.getVariableValues)(schema, variableDefinitions, rawVariableValues ?? {}, {\n        maxErrors: 50,\n    });\n    if (coercedVariableValues.errors) {\n        return coercedVariableValues.errors;\n    }\n    return {\n        schema,\n        fragments,\n        rootValue,\n        contextValue,\n        operation,\n        variableValues: coercedVariableValues.coerced,\n        fieldResolver: fieldResolver ?? defaultFieldResolver,\n        typeResolver: typeResolver ?? defaultTypeResolver,\n        subscribeFieldResolver: subscribeFieldResolver ?? defaultFieldResolver,\n        subsequentPayloads: new Set(),\n        errors: [],\n        signal,\n    };\n}\nfunction buildPerEventExecutionContext(exeContext, payload) {\n    return {\n        ...exeContext,\n        rootValue: payload,\n        subsequentPayloads: new Set(),\n        errors: [],\n    };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\nfunction executeOperation(exeContext) {\n    const { operation, schema, fragments, variableValues, rootValue } = exeContext;\n    const rootType = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.getDefinedRootType)(schema, operation.operation, [operation]);\n    if (rootType == null) {\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Schema is not configured to execute ${operation.operation} operation.`, {\n            nodes: operation,\n        });\n    }\n    const { fields: rootFields, patches } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, rootType, operation.selectionSet);\n    const path = undefined;\n    let result;\n    if (operation.operation === 'mutation') {\n        result = executeFieldsSerially(exeContext, rootType, rootValue, path, rootFields);\n    }\n    else {\n        result = executeFields(exeContext, rootType, rootValue, path, rootFields);\n    }\n    for (const patch of patches) {\n        const { label, fields: patchFields } = patch;\n        executeDeferredFragment(exeContext, rootType, rootValue, patchFields, label, path);\n    }\n    return result;\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\nfunction executeFieldsSerially(exeContext, parentType, sourceValue, path, fields) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.promiseReduce)(fields, (results, [responseName, fieldNodes]) => {\n        const fieldPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, responseName, parentType.name);\n        if (exeContext.signal?.aborted) {\n            throw exeContext.signal.reason;\n        }\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath)).then(result => {\n            if (result === undefined) {\n                return results;\n            }\n            results[responseName] = result;\n            return results;\n        });\n    }, Object.create(null)).resolve();\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\nfunction executeFields(exeContext, parentType, sourceValue, path, fields, asyncPayloadRecord) {\n    const results = Object.create(null);\n    let containsPromise = false;\n    try {\n        for (const [responseName, fieldNodes] of fields) {\n            if (exeContext.signal?.aborted) {\n                throw exeContext.signal.reason;\n            }\n            const fieldPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, responseName, parentType.name);\n            const result = executeField(exeContext, parentType, sourceValue, fieldNodes, fieldPath, asyncPayloadRecord);\n            if (result !== undefined) {\n                results[responseName] = result;\n                if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n                    containsPromise = true;\n                }\n            }\n        }\n    }\n    catch (error) {\n        if (containsPromise) {\n            // Ensure that any promises returned by other fields are handled, as they may also reject.\n            return (0,_promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__.promiseForObject)(results, exeContext.signal).finally(() => {\n                throw error;\n            });\n        }\n        throw error;\n    }\n    // If there are no promises, we can just return the object\n    if (!containsPromise) {\n        return results;\n    }\n    // Otherwise, results is a map from field name to the result of resolving that\n    // field, which is possibly a promise. Return a promise that will return this\n    // same map, but with any promises replaced with the values they resolved to.\n    return (0,_promiseForObject_js__WEBPACK_IMPORTED_MODULE_10__.promiseForObject)(results, exeContext.signal);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\nfunction executeField(exeContext, parentType, source, fieldNodes, path, asyncPayloadRecord) {\n    const errors = asyncPayloadRecord?.errors ?? exeContext.errors;\n    const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n    if (!fieldDef) {\n        return;\n    }\n    const returnType = fieldDef.type;\n    const resolveFn = fieldDef.resolve ?? exeContext.fieldResolver;\n    const info = buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path);\n    // Get the resolve function, regardless of if its result is normal or abrupt (error).\n    try {\n        // Build a JS object of arguments from the field.arguments AST, using the\n        // variables scope to fulfill any variable references.\n        // TODO: find a way to memoize, in case this field is within a List type.\n        const args = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.getArgumentValues)(fieldDef, fieldNodes[0], exeContext.variableValues);\n        // The resolve function's optional third argument is a context value that\n        // is provided to every resolve function within an execution. It is commonly\n        // used to represent an authenticated user, or request-specific caches.\n        const contextValue = exeContext.contextValue;\n        const result = resolveFn(source, args, contextValue, info);\n        let completed;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n            completed = result.then(resolved => completeValue(exeContext, returnType, fieldNodes, info, path, resolved, asyncPayloadRecord));\n        }\n        else {\n            completed = completeValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n        }\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completed)) {\n            // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n            // to take a second callback for the error case.\n            return completed.then(undefined, rawError => {\n                if (rawError instanceof AggregateError) {\n                    return new AggregateError(rawError.errors.map(rawErrorItem => {\n                        rawErrorItem = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawErrorItem);\n                        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawErrorItem, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n                        const handledError = handleFieldError(error, returnType, errors);\n                        filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n                        return handledError;\n                    }));\n                }\n                rawError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n                const handledError = handleFieldError(error, returnType, errors);\n                filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n                return handledError;\n            });\n        }\n        return completed;\n    }\n    catch (rawError) {\n        if (rawError instanceof AggregateError) {\n            return new AggregateError(rawError.errors.map(rawErrorItem => {\n                const coercedError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawErrorItem);\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(coercedError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n                return handleFieldError(error, returnType, errors);\n            }));\n        }\n        const coercedError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(coercedError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n        const handledError = handleFieldError(error, returnType, errors);\n        filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n        return handledError;\n    }\n}\n/**\n * TODO: consider no longer exporting this function\n * @internal\n */\nfunction buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {\n    // The resolve function's optional fourth argument is a collection of\n    // information about the current execution state.\n    return {\n        fieldName: fieldDef.name,\n        fieldNodes,\n        returnType: fieldDef.type,\n        parentType,\n        path,\n        schema: exeContext.schema,\n        fragments: exeContext.fragments,\n        rootValue: exeContext.rootValue,\n        operation: exeContext.operation,\n        variableValues: exeContext.variableValues,\n    };\n}\nconst CRITICAL_ERROR = 'CRITICAL_ERROR';\nfunction handleFieldError(error, returnType, errors) {\n    // If the field type is non-nullable, then it is resolved without any\n    // protection from errors, however it still properly locates the error.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_14__.isNonNullType)(returnType)) {\n        throw error;\n    }\n    if (error.extensions?.[CRITICAL_ERROR]) {\n        throw error;\n    }\n    // Otherwise, error protection is applied, logging the error and resolving\n    // a null value for this field if one is encountered.\n    errors.push(error);\n    return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    // If result is an Error, throw a located error.\n    if (result instanceof Error) {\n        throw result;\n    }\n    // If field type is NonNull, complete for inner type, and throw field error\n    // if result is null.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_14__.isNonNullType)(returnType)) {\n        const completed = completeValue(exeContext, returnType.ofType, fieldNodes, info, path, result, asyncPayloadRecord);\n        if (completed === null) {\n            throw new Error(`Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`);\n        }\n        return completed;\n    }\n    // If result value is null or undefined then return null.\n    if (result == null) {\n        return null;\n    }\n    // If field type is List, complete each item in the list with the inner type\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_14__.isListType)(returnType)) {\n        return completeListValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n    // returning null if serialization is not possible.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_14__.isLeafType)(returnType)) {\n        return completeLeafValue(returnType, result);\n    }\n    // If field type is an abstract type, Interface or Union, determine the\n    // runtime Object type and complete for that type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_14__.isAbstractType)(returnType)) {\n        return completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    // If field type is Object, execute and complete all sub-selections.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_14__.isObjectType)(returnType)) {\n        return completeObjectValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord);\n    }\n    /* c8 ignore next 6 */\n    // Not reachable, all possible output types have been considered.\n    console.assert(false, 'Cannot complete value of unexpected output type: ' + (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(returnType));\n}\n/**\n * Returns an object containing the `@stream` arguments if a field should be\n * streamed based on the experimental flag, stream directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getStreamValues(exeContext, fieldNodes, path) {\n    // do not stream inner lists of multi-dimensional lists\n    if (typeof path.key === 'number') {\n        return;\n    }\n    // validation only allows equivalent streams on multiple fields, so it is\n    // safe to only check the first fieldNode for the stream directive\n    const stream = (0,graphql__WEBPACK_IMPORTED_MODULE_16__.getDirectiveValues)(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_17__.GraphQLStreamDirective, fieldNodes[0], exeContext.variableValues);\n    if (!stream) {\n        return;\n    }\n    if (stream.if === false) {\n        return;\n    }\n    (0,_invariant_js__WEBPACK_IMPORTED_MODULE_18__.invariant)(typeof stream['initialCount'] === 'number', 'initialCount must be a number');\n    (0,_invariant_js__WEBPACK_IMPORTED_MODULE_18__.invariant)(stream['initialCount'] >= 0, 'initialCount must be a positive integer');\n    return {\n        initialCount: stream['initialCount'],\n        label: typeof stream['label'] === 'string' ? stream['label'] : undefined,\n    };\n}\n/**\n * Complete a async iterator value by completing the result and calling\n * recursively until all the results are completed.\n */\nasync function completeAsyncIteratorValue(exeContext, itemType, fieldNodes, info, path, iterator, asyncPayloadRecord) {\n    exeContext.signal?.addEventListener('abort', () => {\n        iterator.return?.();\n    });\n    const errors = asyncPayloadRecord?.errors ?? exeContext.errors;\n    const stream = getStreamValues(exeContext, fieldNodes, path);\n    let containsPromise = false;\n    const completedResults = [];\n    let index = 0;\n    while (true) {\n        if (stream && typeof stream.initialCount === 'number' && index >= stream.initialCount) {\n            executeStreamIterator(index, iterator, exeContext, fieldNodes, info, itemType, path, stream.label, asyncPayloadRecord);\n            break;\n        }\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        let iteration;\n        try {\n            iteration = await iterator.next();\n            if (iteration.done) {\n                break;\n            }\n        }\n        catch (rawError) {\n            const coercedError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n            const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(coercedError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n            completedResults.push(handleFieldError(error, itemType, errors));\n            break;\n        }\n        if (completeListItemValue(iteration.value, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord)) {\n            containsPromise = true;\n        }\n        index += 1;\n    }\n    return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\nfunction completeListValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    const itemType = returnType.ofType;\n    const errors = asyncPayloadRecord?.errors ?? exeContext.errors;\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_19__.isAsyncIterable)(result)) {\n        const iterator = result[Symbol.asyncIterator]();\n        return completeAsyncIteratorValue(exeContext, itemType, fieldNodes, info, path, iterator, asyncPayloadRecord);\n    }\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isIterableObject)(result)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`);\n    }\n    const stream = getStreamValues(exeContext, fieldNodes, path);\n    // This is specified as a simple map, however we're optimizing the path\n    // where the list contains no Promises by avoiding creating another Promise.\n    let containsPromise = false;\n    let previousAsyncPayloadRecord = asyncPayloadRecord;\n    const completedResults = [];\n    let index = 0;\n    for (const item of result) {\n        // No need to modify the info object containing the path,\n        // since from here on it is not ever accessed by resolver functions.\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        if (stream && typeof stream.initialCount === 'number' && index >= stream.initialCount) {\n            previousAsyncPayloadRecord = executeStreamField(path, itemPath, item, exeContext, fieldNodes, info, itemType, stream.label, previousAsyncPayloadRecord);\n            index++;\n            continue;\n        }\n        if (completeListItemValue(item, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord)) {\n            containsPromise = true;\n        }\n        index++;\n    }\n    return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a list item value by adding it to the completed results.\n *\n * Returns true if the value is a Promise.\n */\nfunction completeListItemValue(item, completedResults, errors, exeContext, itemType, fieldNodes, info, itemPath, asyncPayloadRecord) {\n    try {\n        let completedItem;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(item)) {\n            completedItem = item.then(resolved => completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved, asyncPayloadRecord));\n        }\n        else {\n            completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n        }\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n            // to take a second callback for the error case.\n            completedResults.push(completedItem.then(undefined, rawError => {\n                rawError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                const handledError = handleFieldError(error, itemType, errors);\n                filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                return handledError;\n            }));\n            return true;\n        }\n        completedResults.push(completedItem);\n    }\n    catch (rawError) {\n        const coercedError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(coercedError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const handledError = handleFieldError(error, itemType, errors);\n        filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        completedResults.push(handledError);\n    }\n    return false;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\nfunction completeLeafValue(returnType, result) {\n    let serializedResult;\n    // Note: We transform GraphQLError to Error in order to be consistent with\n    // how non-null checks work later on.\n    // See https://github.com/kamilkisiela/graphql-hive/pull/2299\n    // See https://github.com/n1ru4l/envelop/issues/1808\n    try {\n        serializedResult = returnType.serialize(result);\n    }\n    catch (err) {\n        if (err instanceof graphql__WEBPACK_IMPORTED_MODULE_20__.GraphQLError) {\n            throw new Error(err.message);\n        }\n        throw err;\n    }\n    if (serializedResult == null) {\n        throw new Error(`Expected \\`${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(returnType)}.serialize(${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(result)})\\` to ` +\n            `return non-nullable value, returned: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(serializedResult)}`);\n    }\n    return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\nfunction completeAbstractValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    const resolveTypeFn = returnType.resolveType ?? exeContext.typeResolver;\n    const contextValue = exeContext.contextValue;\n    const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(runtimeType)) {\n        return runtimeType.then(resolvedRuntimeType => completeObjectValue(exeContext, ensureValidRuntimeType(resolvedRuntimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result, asyncPayloadRecord));\n    }\n    return completeObjectValue(exeContext, ensureValidRuntimeType(runtimeType, exeContext, returnType, fieldNodes, info, result), fieldNodes, info, path, result, asyncPayloadRecord);\n}\nfunction ensureValidRuntimeType(runtimeTypeName, exeContext, returnType, fieldNodes, info, result) {\n    if (runtimeTypeName == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`, { nodes: fieldNodes });\n    }\n    // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n    // TODO: remove in 17.0.0 release\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_14__.isObjectType)(runtimeTypeName)) {\n        if (graphql__WEBPACK_IMPORTED_MODULE_21__.versionInfo.major >= 16) {\n            throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.');\n        }\n        runtimeTypeName = runtimeTypeName.name;\n    }\n    if (typeof runtimeTypeName !== 'string') {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n            `value ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(result)}, received \"${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(runtimeTypeName)}\".`);\n    }\n    const runtimeType = exeContext.schema.getType(runtimeTypeName);\n    if (runtimeType == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`, { nodes: fieldNodes });\n    }\n    if (!(0,graphql__WEBPACK_IMPORTED_MODULE_14__.isObjectType)(runtimeType)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`, { nodes: fieldNodes });\n    }\n    if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`, { nodes: fieldNodes });\n    }\n    return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\nfunction completeObjectValue(exeContext, returnType, fieldNodes, info, path, result, asyncPayloadRecord) {\n    // If there is an isTypeOf predicate function, call it with the\n    // current result. If isTypeOf returns false, then raise an error rather\n    // than continuing execution.\n    if (returnType.isTypeOf) {\n        const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOf)) {\n            return isTypeOf.then(resolvedIsTypeOf => {\n                if (!resolvedIsTypeOf) {\n                    throw invalidReturnTypeError(returnType, result, fieldNodes);\n                }\n                return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord);\n            });\n        }\n        if (!isTypeOf) {\n            throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n    }\n    return collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord);\n}\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`Expected value of type \"${returnType.name}\" but got: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(result)}.`, {\n        nodes: fieldNodes,\n    });\n}\nfunction collectAndExecuteSubfields(exeContext, returnType, fieldNodes, path, result, asyncPayloadRecord) {\n    // Collect sub-fields to execute to complete this value.\n    const { fields: subFieldNodes, patches: subPatches } = collectSubfields(exeContext, returnType, fieldNodes);\n    const subFields = executeFields(exeContext, returnType, result, path, subFieldNodes, asyncPayloadRecord);\n    for (const subPatch of subPatches) {\n        const { label, fields: subPatchFieldNodes } = subPatch;\n        executeDeferredFragment(exeContext, returnType, result, subPatchFieldNodes, label, path, asyncPayloadRecord);\n    }\n    return subFields;\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\nconst defaultTypeResolver = function (value, contextValue, info, abstractType) {\n    // First, look for `__typename`.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(value) && typeof value['__typename'] === 'string') {\n        return value['__typename'];\n    }\n    // Otherwise, test each possible type.\n    const possibleTypes = info.schema.getPossibleTypes(abstractType);\n    const promisedIsTypeOfResults = [];\n    for (let i = 0; i < possibleTypes.length; i++) {\n        const type = possibleTypes[i];\n        if (type.isTypeOf) {\n            const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(isTypeOfResult)) {\n                promisedIsTypeOfResults[i] = isTypeOfResult;\n            }\n            else if (isTypeOfResult) {\n                return type.name;\n            }\n        }\n    }\n    if (promisedIsTypeOfResults.length) {\n        return Promise.all(promisedIsTypeOfResults).then(isTypeOfResults => {\n            for (let i = 0; i < isTypeOfResults.length; i++) {\n                if (isTypeOfResults[i]) {\n                    return possibleTypes[i].name;\n                }\n            }\n        });\n    }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\nconst defaultFieldResolver = function (source, args, contextValue, info) {\n    // ensure source is a value for which property access is acceptable.\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isObjectLike)(source) || typeof source === 'function') {\n        const property = source[info.fieldName];\n        if (typeof property === 'function') {\n            return source[info.fieldName](args, contextValue, info);\n        }\n        return property;\n    }\n};\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification,\n * including `@defer` and `@stream` as proposed in\n * https://github.com/graphql/graphql-spec/pull/742\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with descriptive\n * errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription resolver\n * logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of result representing the response stream.\n *\n * Each result may be an ExecutionResult with no `hasNext` (if executing the\n * event did not use `@defer` or `@stream`), or an\n * `InitialIncrementalExecutionResult` or `SubsequentIncrementalExecutionResult`\n * (if executing the event used `@defer` or `@stream`). In the case of\n * incremental execution results, each event produces a single\n * `InitialIncrementalExecutionResult` followed by one or more\n * `SubsequentIncrementalExecutionResult`s; all but the last have `hasNext: true`,\n * and the last has `hasNext: false`. There is no interleaving between results\n * generated from the same original event.\n *\n * Accepts an object with named arguments.\n */\nfunction subscribe(args) {\n    // If a valid execution context cannot be created due to incorrect arguments,\n    // a \"Response\" with only errors is returned.\n    const exeContext = buildExecutionContext(args);\n    // Return early errors if execution context failed.\n    if (!('schema' in exeContext)) {\n        return {\n            errors: exeContext.map(e => {\n                Object.defineProperty(e, 'extensions', {\n                    value: {\n                        ...e.extensions,\n                        http: {\n                            ...e.extensions?.['http'],\n                            status: 400,\n                        },\n                    },\n                });\n                return e;\n            }),\n        };\n    }\n    const resultOrStream = createSourceEventStreamImpl(exeContext);\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(resultOrStream)) {\n        return resultOrStream.then(resolvedResultOrStream => mapSourceToResponse(exeContext, resolvedResultOrStream));\n    }\n    return mapSourceToResponse(exeContext, resultOrStream);\n}\nfunction flattenIncrementalResults(incrementalResults) {\n    const subsequentIterator = incrementalResults.subsequentResults;\n    let initialResultSent = false;\n    let done = false;\n    return {\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        next() {\n            if (done) {\n                return Promise.resolve({\n                    value: undefined,\n                    done,\n                });\n            }\n            if (initialResultSent) {\n                return subsequentIterator.next();\n            }\n            initialResultSent = true;\n            return Promise.resolve({\n                value: incrementalResults.initialResult,\n                done,\n            });\n        },\n        return() {\n            done = true;\n            return subsequentIterator.return();\n        },\n        throw(error) {\n            done = true;\n            return subsequentIterator.throw(error);\n        },\n    };\n}\nasync function* ensureAsyncIterable(someExecutionResult) {\n    if ('initialResult' in someExecutionResult) {\n        yield* flattenIncrementalResults(someExecutionResult);\n    }\n    else {\n        yield someExecutionResult;\n    }\n}\nfunction mapSourceToResponse(exeContext, resultOrStream) {\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_19__.isAsyncIterable)(resultOrStream)) {\n        return resultOrStream;\n    }\n    // For each payload yielded from a subscription, map it over the normal\n    // GraphQL `execute` function, with `payload` as the rootValue.\n    // This implements the \"MapSourceToResponseEvent\" algorithm described in\n    // the GraphQL specification. The `execute` function provides the\n    // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n    // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n    return (0,_flattenAsyncIterable_js__WEBPACK_IMPORTED_MODULE_22__.flattenAsyncIterable)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_23__.mapAsyncIterator)(resultOrStream, async (payload) => ensureAsyncIterable(await executeImpl(buildPerEventExecutionContext(exeContext, payload))), (error) => {\n        if (error instanceof AggregateError) {\n            throw new AggregateError(error.errors.map(e => wrapError(e, exeContext.operation)), error.message);\n        }\n        throw wrapError(error, exeContext.operation);\n    }));\n}\nfunction wrapError(error, operation) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(error.message, {\n        originalError: error,\n        nodes: [operation],\n    });\n}\nfunction createSourceEventStreamImpl(exeContext) {\n    try {\n        const eventStream = executeSubscription(exeContext);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(eventStream)) {\n            return eventStream.then(undefined, error => ({ errors: [error] }));\n        }\n        return eventStream;\n    }\n    catch (error) {\n        return { errors: [error] };\n    }\n}\nfunction executeSubscription(exeContext) {\n    const { schema, fragments, operation, variableValues, rootValue } = exeContext;\n    const rootType = schema.getSubscriptionType();\n    if (rootType == null) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Schema is not configured to execute subscription operation.', {\n            nodes: operation,\n        });\n    }\n    const { fields: rootFields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, rootType, operation.selectionSet);\n    const [responseName, fieldNodes] = [...rootFields.entries()][0];\n    const fieldName = fieldNodes[0].name.value;\n    const fieldDef = getFieldDef(schema, rootType, fieldNodes[0]);\n    if (!fieldDef) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)(`The subscription field \"${fieldName}\" is not defined.`, {\n            nodes: fieldNodes,\n        });\n    }\n    const path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(undefined, responseName, rootType.name);\n    const info = buildResolveInfo(exeContext, fieldDef, fieldNodes, rootType, path);\n    try {\n        // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n        // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n        // Build a JS object of arguments from the field.arguments AST, using the\n        // variables scope to fulfill any variable references.\n        const args = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.getArgumentValues)(fieldDef, fieldNodes[0], variableValues);\n        // The resolve function's optional third argument is a context value that\n        // is provided to every resolve function within an execution. It is commonly\n        // used to represent an authenticated user, or request-specific caches.\n        const contextValue = exeContext.contextValue;\n        // Call the `subscribe()` resolver or the default resolver to produce an\n        // AsyncIterable yielding raw payloads.\n        const resolveFn = fieldDef.subscribe ?? exeContext.subscribeFieldResolver;\n        const result = resolveFn(rootValue, args, contextValue, info);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(result)) {\n            return result.then(assertEventStream).then(undefined, error => {\n                throw (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(error, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n            });\n        }\n        return assertEventStream(result, exeContext.signal);\n    }\n    catch (error) {\n        throw (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(error, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(path));\n    }\n}\nfunction assertEventStream(result, signal) {\n    if (result instanceof Error) {\n        throw result;\n    }\n    // Assert field returned an event stream, otherwise yield an error.\n    if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_19__.isAsyncIterable)(result)) {\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.createGraphQLError)('Subscription field must return Async Iterable. ' + `Received: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_15__.inspect)(result)}.`);\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            const asyncIterator = result[Symbol.asyncIterator]();\n            signal?.addEventListener('abort', () => {\n                asyncIterator.return?.();\n            });\n            return asyncIterator;\n        },\n    };\n}\nfunction executeDeferredFragment(exeContext, parentType, sourceValue, fields, label, path, parentContext) {\n    const asyncPayloadRecord = new DeferredFragmentRecord({\n        label,\n        path,\n        parentContext,\n        exeContext,\n    });\n    let promiseOrData;\n    try {\n        promiseOrData = executeFields(exeContext, parentType, sourceValue, path, fields, asyncPayloadRecord);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(promiseOrData)) {\n            promiseOrData = promiseOrData.then(null, e => {\n                asyncPayloadRecord.errors.push(e);\n                return null;\n            });\n        }\n    }\n    catch (e) {\n        asyncPayloadRecord.errors.push(e);\n        promiseOrData = null;\n    }\n    asyncPayloadRecord.addData(promiseOrData);\n}\nfunction executeStreamField(path, itemPath, item, exeContext, fieldNodes, info, itemType, label, parentContext) {\n    const asyncPayloadRecord = new StreamRecord({\n        label,\n        path: itemPath,\n        parentContext,\n        exeContext,\n    });\n    let completedItem;\n    try {\n        try {\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(item)) {\n                completedItem = item.then(resolved => completeValue(exeContext, itemType, fieldNodes, info, itemPath, resolved, asyncPayloadRecord));\n            }\n            else {\n                completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n            }\n            if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n                // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n                // to take a second callback for the error case.\n                completedItem = completedItem.then(undefined, rawError => {\n                    rawError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n                    const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                    const handledError = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n                    filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                    return handledError;\n                });\n            }\n        }\n        catch (rawError) {\n            const coercedError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n            const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(coercedError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n            completedItem = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n            filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        }\n    }\n    catch (error) {\n        asyncPayloadRecord.errors.push(error);\n        filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n        asyncPayloadRecord.addItems(null);\n        return asyncPayloadRecord;\n    }\n    let completedItems;\n    if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n        completedItems = completedItem.then(value => [value], error => {\n            asyncPayloadRecord.errors.push(error);\n            filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n            return null;\n        });\n    }\n    else {\n        completedItems = [completedItem];\n    }\n    asyncPayloadRecord.addItems(completedItems);\n    return asyncPayloadRecord;\n}\nasync function executeStreamIteratorItem(iterator, exeContext, fieldNodes, info, itemType, asyncPayloadRecord, itemPath) {\n    let item;\n    try {\n        const { value, done } = await iterator.next();\n        if (done) {\n            asyncPayloadRecord.setIsCompletedIterator();\n            return { done, value: undefined };\n        }\n        item = value;\n    }\n    catch (rawError) {\n        const coercedError = (0,_coerceError_js__WEBPACK_IMPORTED_MODULE_12__.coerceError)(rawError);\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(coercedError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const value = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n        // don't continue if iterator throws\n        return { done: true, value };\n    }\n    let completedItem;\n    try {\n        completedItem = completeValue(exeContext, itemType, fieldNodes, info, itemPath, item, asyncPayloadRecord);\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            completedItem = completedItem.then(undefined, rawError => {\n                const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n                const handledError = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n                filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n                return handledError;\n            });\n        }\n        return { done: false, value: completedItem };\n    }\n    catch (rawError) {\n        const error = (0,graphql__WEBPACK_IMPORTED_MODULE_13__.locatedError)(rawError, fieldNodes, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(itemPath));\n        const value = handleFieldError(error, itemType, asyncPayloadRecord.errors);\n        filterSubsequentPayloads(exeContext, itemPath, asyncPayloadRecord);\n        return { done: false, value };\n    }\n}\nasync function executeStreamIterator(initialIndex, iterator, exeContext, fieldNodes, info, itemType, path, label, parentContext) {\n    let index = initialIndex;\n    let previousAsyncPayloadRecord = parentContext ?? undefined;\n    while (true) {\n        const itemPath = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.addPath)(path, index, undefined);\n        const asyncPayloadRecord = new StreamRecord({\n            label,\n            path: itemPath,\n            parentContext: previousAsyncPayloadRecord,\n            iterator,\n            exeContext,\n        });\n        let iteration;\n        try {\n            iteration = await executeStreamIteratorItem(iterator, exeContext, fieldNodes, info, itemType, asyncPayloadRecord, itemPath);\n        }\n        catch (error) {\n            asyncPayloadRecord.errors.push(error);\n            filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n            asyncPayloadRecord.addItems(null);\n            // entire stream has errored and bubbled upwards\n            if (iterator?.return) {\n                iterator.return().catch(() => {\n                    // ignore errors\n                });\n            }\n            return;\n        }\n        const { done, value: completedItem } = iteration;\n        let completedItems;\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.isPromise)(completedItem)) {\n            completedItems = completedItem.then(value => [value], error => {\n                asyncPayloadRecord.errors.push(error);\n                filterSubsequentPayloads(exeContext, path, asyncPayloadRecord);\n                return null;\n            });\n        }\n        else {\n            completedItems = [completedItem];\n        }\n        asyncPayloadRecord.addItems(completedItems);\n        if (done) {\n            break;\n        }\n        previousAsyncPayloadRecord = asyncPayloadRecord;\n        index++;\n    }\n}\nfunction filterSubsequentPayloads(exeContext, nullPath, currentAsyncRecord) {\n    const nullPathArray = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(nullPath);\n    exeContext.subsequentPayloads.forEach(asyncRecord => {\n        if (asyncRecord === currentAsyncRecord) {\n            // don't remove payload from where error originates\n            return;\n        }\n        for (let i = 0; i < nullPathArray.length; i++) {\n            if (asyncRecord.path[i] !== nullPathArray[i]) {\n                // asyncRecord points to a path unaffected by this payload\n                return;\n            }\n        }\n        // asyncRecord path points to nulled error field\n        if (isStreamPayload(asyncRecord) && asyncRecord.iterator?.return) {\n            asyncRecord.iterator.return().catch(() => {\n                // ignore error\n            });\n        }\n        exeContext.subsequentPayloads.delete(asyncRecord);\n    });\n}\nfunction getCompletedIncrementalResults(exeContext) {\n    const incrementalResults = [];\n    for (const asyncPayloadRecord of exeContext.subsequentPayloads) {\n        const incrementalResult = {};\n        if (!asyncPayloadRecord.isCompleted) {\n            continue;\n        }\n        exeContext.subsequentPayloads.delete(asyncPayloadRecord);\n        if (isStreamPayload(asyncPayloadRecord)) {\n            const items = asyncPayloadRecord.items;\n            if (asyncPayloadRecord.isCompletedIterator) {\n                // async iterable resolver just finished but there may be pending payloads\n                continue;\n            }\n            incrementalResult.items = items;\n        }\n        else {\n            const data = asyncPayloadRecord.data;\n            incrementalResult.data = data ?? null;\n        }\n        incrementalResult.path = asyncPayloadRecord.path;\n        if (asyncPayloadRecord.label) {\n            incrementalResult.label = asyncPayloadRecord.label;\n        }\n        if (asyncPayloadRecord.errors.length > 0) {\n            incrementalResult.errors = asyncPayloadRecord.errors;\n        }\n        incrementalResults.push(incrementalResult);\n    }\n    return incrementalResults;\n}\nfunction yieldSubsequentPayloads(exeContext) {\n    let isDone = false;\n    const abortPromise = new Promise((_, reject) => {\n        exeContext.signal?.addEventListener('abort', () => {\n            isDone = true;\n            reject(exeContext.signal?.reason);\n        });\n    });\n    async function next() {\n        if (isDone) {\n            return { value: undefined, done: true };\n        }\n        await Promise.race([\n            abortPromise,\n            ...Array.from(exeContext.subsequentPayloads).map(p => p.promise),\n        ]);\n        if (isDone) {\n            // a different call to next has exhausted all payloads\n            return { value: undefined, done: true };\n        }\n        const incremental = getCompletedIncrementalResults(exeContext);\n        const hasNext = exeContext.subsequentPayloads.size > 0;\n        if (!incremental.length && hasNext) {\n            return next();\n        }\n        if (!hasNext) {\n            isDone = true;\n        }\n        return {\n            value: incremental.length ? { incremental, hasNext } : { hasNext },\n            done: false,\n        };\n    }\n    function returnStreamIterators() {\n        const promises = [];\n        exeContext.subsequentPayloads.forEach(asyncPayloadRecord => {\n            if (isStreamPayload(asyncPayloadRecord) && asyncPayloadRecord.iterator?.return) {\n                promises.push(asyncPayloadRecord.iterator.return());\n            }\n        });\n        return Promise.all(promises);\n    }\n    return {\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n        next,\n        async return() {\n            await returnStreamIterators();\n            isDone = true;\n            return { value: undefined, done: true };\n        },\n        async throw(error) {\n            await returnStreamIterators();\n            isDone = true;\n            return Promise.reject(error);\n        },\n    };\n}\nclass DeferredFragmentRecord {\n    type;\n    errors;\n    label;\n    path;\n    promise;\n    data;\n    parentContext;\n    isCompleted;\n    _exeContext;\n    _resolve;\n    constructor(opts) {\n        this.type = 'defer';\n        this.label = opts.label;\n        this.path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(opts.path);\n        this.parentContext = opts.parentContext;\n        this.errors = [];\n        this._exeContext = opts.exeContext;\n        this._exeContext.subsequentPayloads.add(this);\n        this.isCompleted = false;\n        this.data = null;\n        this.promise = new Promise(resolve => {\n            this._resolve = MaybePromise => {\n                resolve(MaybePromise);\n            };\n        }).then(data => {\n            this.data = data;\n            this.isCompleted = true;\n        });\n    }\n    addData(data) {\n        const parentData = this.parentContext?.promise;\n        if (parentData) {\n            this._resolve?.(parentData.then(() => data));\n            return;\n        }\n        this._resolve?.(data);\n    }\n}\nclass StreamRecord {\n    type;\n    errors;\n    label;\n    path;\n    items;\n    promise;\n    parentContext;\n    iterator;\n    isCompletedIterator;\n    isCompleted;\n    _exeContext;\n    _resolve;\n    constructor(opts) {\n        this.type = 'stream';\n        this.items = null;\n        this.label = opts.label;\n        this.path = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.pathToArray)(opts.path);\n        this.parentContext = opts.parentContext;\n        this.iterator = opts.iterator;\n        this.errors = [];\n        this._exeContext = opts.exeContext;\n        this._exeContext.subsequentPayloads.add(this);\n        this.isCompleted = false;\n        this.items = null;\n        this.promise = new Promise(resolve => {\n            this._resolve = MaybePromise => {\n                resolve(MaybePromise);\n            };\n        }).then(items => {\n            this.items = items;\n            this.isCompleted = true;\n        });\n    }\n    addItems(items) {\n        const parentData = this.parentContext?.promise;\n        if (parentData) {\n            this._resolve?.(parentData.then(() => items));\n            return;\n        }\n        this._resolve?.(items);\n    }\n    setIsCompletedIterator() {\n        this.isCompletedIterator = true;\n    }\n}\nfunction isStreamPayload(asyncPayload) {\n    return asyncPayload.type === 'stream';\n}\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n    const fieldName = fieldNode.name.value;\n    if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_24__.SchemaMetaFieldDef.name && schema.getQueryType() === parentType) {\n        return graphql__WEBPACK_IMPORTED_MODULE_24__.SchemaMetaFieldDef;\n    }\n    else if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_24__.TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n        return graphql__WEBPACK_IMPORTED_MODULE_24__.TypeMetaFieldDef;\n    }\n    else if (fieldName === graphql__WEBPACK_IMPORTED_MODULE_24__.TypeNameMetaFieldDef.name) {\n        return graphql__WEBPACK_IMPORTED_MODULE_24__.TypeNameMetaFieldDef;\n    }\n    return parentType.getFields()[fieldName];\n}\nfunction isIncrementalResult(result) {\n    return 'incremental' in result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/esm/execution/execute.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js":
/*!*************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   flattenAsyncIterable: () => (/* binding */ flattenAsyncIterable)\n/* harmony export */ });\n/**\n * Given an AsyncIterable of AsyncIterables, flatten all yielded results into a\n * single AsyncIterable.\n */\nfunction flattenAsyncIterable(iterable) {\n    // You might think this whole function could be replaced with\n    //\n    //    async function* flattenAsyncIterable(iterable) {\n    //      for await (const subIterator of iterable) {\n    //        yield* subIterator;\n    //      }\n    //    }\n    //\n    // but calling `.return()` on the iterator it returns won't interrupt the `for await`.\n    const topIterator = iterable[Symbol.asyncIterator]();\n    let currentNestedIterator;\n    let waitForCurrentNestedIterator;\n    let done = false;\n    async function next() {\n        if (done) {\n            return { value: undefined, done: true };\n        }\n        try {\n            if (!currentNestedIterator) {\n                // Somebody else is getting it already.\n                if (waitForCurrentNestedIterator) {\n                    await waitForCurrentNestedIterator;\n                    return await next();\n                }\n                // Nobody else is getting it. We should!\n                let resolve;\n                waitForCurrentNestedIterator = new Promise(r => {\n                    resolve = r;\n                });\n                const topIteratorResult = await topIterator.next();\n                if (topIteratorResult.done) {\n                    // Given that done only ever transitions from false to true,\n                    // require-atomic-updates is being unnecessarily cautious.\n                    done = true;\n                    return await next();\n                }\n                // eslint is making a reasonable point here, but we've explicitly protected\n                // ourself from the race condition by ensuring that only the single call\n                // that assigns to waitForCurrentNestedIterator is allowed to assign to\n                // currentNestedIterator or waitForCurrentNestedIterator.\n                currentNestedIterator = topIteratorResult.value[Symbol.asyncIterator]();\n                waitForCurrentNestedIterator = undefined;\n                resolve();\n                return await next();\n            }\n            const rememberCurrentNestedIterator = currentNestedIterator;\n            const nestedIteratorResult = await currentNestedIterator.next();\n            if (!nestedIteratorResult.done) {\n                return nestedIteratorResult;\n            }\n            // The nested iterator is done. If it's still the current one, make it not\n            // current. (If it's not the current one, somebody else has made us move on.)\n            if (currentNestedIterator === rememberCurrentNestedIterator) {\n                currentNestedIterator = undefined;\n            }\n            return await next();\n        }\n        catch (err) {\n            done = true;\n            throw err;\n        }\n    }\n    return {\n        next,\n        async return() {\n            done = true;\n            await Promise.all([currentNestedIterator?.return?.(), topIterator.return?.()]);\n            return { value: undefined, done: true };\n        },\n        async throw(error) {\n            done = true;\n            await Promise.all([currentNestedIterator?.throw?.(error), topIterator.throw?.(error)]);\n            /* c8 ignore next */\n            throw error;\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vZmxhdHRlbkFzeW5jSXRlcmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckIsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9mbGF0dGVuQXN5bmNJdGVyYWJsZS5qcz9iNTkxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYW4gQXN5bmNJdGVyYWJsZSBvZiBBc3luY0l0ZXJhYmxlcywgZmxhdHRlbiBhbGwgeWllbGRlZCByZXN1bHRzIGludG8gYVxuICogc2luZ2xlIEFzeW5jSXRlcmFibGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmbGF0dGVuQXN5bmNJdGVyYWJsZShpdGVyYWJsZSkge1xuICAgIC8vIFlvdSBtaWdodCB0aGluayB0aGlzIHdob2xlIGZ1bmN0aW9uIGNvdWxkIGJlIHJlcGxhY2VkIHdpdGhcbiAgICAvL1xuICAgIC8vICAgIGFzeW5jIGZ1bmN0aW9uKiBmbGF0dGVuQXN5bmNJdGVyYWJsZShpdGVyYWJsZSkge1xuICAgIC8vICAgICAgZm9yIGF3YWl0IChjb25zdCBzdWJJdGVyYXRvciBvZiBpdGVyYWJsZSkge1xuICAgIC8vICAgICAgICB5aWVsZCogc3ViSXRlcmF0b3I7XG4gICAgLy8gICAgICB9XG4gICAgLy8gICAgfVxuICAgIC8vXG4gICAgLy8gYnV0IGNhbGxpbmcgYC5yZXR1cm4oKWAgb24gdGhlIGl0ZXJhdG9yIGl0IHJldHVybnMgd29uJ3QgaW50ZXJydXB0IHRoZSBgZm9yIGF3YWl0YC5cbiAgICBjb25zdCB0b3BJdGVyYXRvciA9IGl0ZXJhYmxlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgIGxldCBjdXJyZW50TmVzdGVkSXRlcmF0b3I7XG4gICAgbGV0IHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3I7XG4gICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICBhc3luYyBmdW5jdGlvbiBuZXh0KCkge1xuICAgICAgICBpZiAoZG9uZSkge1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICAgICAgICB9XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIWN1cnJlbnROZXN0ZWRJdGVyYXRvcikge1xuICAgICAgICAgICAgICAgIC8vIFNvbWVib2R5IGVsc2UgaXMgZ2V0dGluZyBpdCBhbHJlYWR5LlxuICAgICAgICAgICAgICAgIGlmICh3YWl0Rm9yQ3VycmVudE5lc3RlZEl0ZXJhdG9yKSB7XG4gICAgICAgICAgICAgICAgICAgIGF3YWl0IHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3I7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBuZXh0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIE5vYm9keSBlbHNlIGlzIGdldHRpbmcgaXQuIFdlIHNob3VsZCFcbiAgICAgICAgICAgICAgICBsZXQgcmVzb2x2ZTtcbiAgICAgICAgICAgICAgICB3YWl0Rm9yQ3VycmVudE5lc3RlZEl0ZXJhdG9yID0gbmV3IFByb21pc2UociA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUgPSByO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRvcEl0ZXJhdG9yUmVzdWx0ID0gYXdhaXQgdG9wSXRlcmF0b3IubmV4dCgpO1xuICAgICAgICAgICAgICAgIGlmICh0b3BJdGVyYXRvclJlc3VsdC5kb25lKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIEdpdmVuIHRoYXQgZG9uZSBvbmx5IGV2ZXIgdHJhbnNpdGlvbnMgZnJvbSBmYWxzZSB0byB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAvLyByZXF1aXJlLWF0b21pYy11cGRhdGVzIGlzIGJlaW5nIHVubmVjZXNzYXJpbHkgY2F1dGlvdXMuXG4gICAgICAgICAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXdhaXQgbmV4dCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQgaXMgbWFraW5nIGEgcmVhc29uYWJsZSBwb2ludCBoZXJlLCBidXQgd2UndmUgZXhwbGljaXRseSBwcm90ZWN0ZWRcbiAgICAgICAgICAgICAgICAvLyBvdXJzZWxmIGZyb20gdGhlIHJhY2UgY29uZGl0aW9uIGJ5IGVuc3VyaW5nIHRoYXQgb25seSB0aGUgc2luZ2xlIGNhbGxcbiAgICAgICAgICAgICAgICAvLyB0aGF0IGFzc2lnbnMgdG8gd2FpdEZvckN1cnJlbnROZXN0ZWRJdGVyYXRvciBpcyBhbGxvd2VkIHRvIGFzc2lnbiB0b1xuICAgICAgICAgICAgICAgIC8vIGN1cnJlbnROZXN0ZWRJdGVyYXRvciBvciB3YWl0Rm9yQ3VycmVudE5lc3RlZEl0ZXJhdG9yLlxuICAgICAgICAgICAgICAgIGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9IHRvcEl0ZXJhdG9yUmVzdWx0LnZhbHVlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgICAgIHdhaXRGb3JDdXJyZW50TmVzdGVkSXRlcmF0b3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiBhd2FpdCBuZXh0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCByZW1lbWJlckN1cnJlbnROZXN0ZWRJdGVyYXRvciA9IGN1cnJlbnROZXN0ZWRJdGVyYXRvcjtcbiAgICAgICAgICAgIGNvbnN0IG5lc3RlZEl0ZXJhdG9yUmVzdWx0ID0gYXdhaXQgY3VycmVudE5lc3RlZEl0ZXJhdG9yLm5leHQoKTtcbiAgICAgICAgICAgIGlmICghbmVzdGVkSXRlcmF0b3JSZXN1bHQuZG9uZSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBuZXN0ZWRJdGVyYXRvclJlc3VsdDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFRoZSBuZXN0ZWQgaXRlcmF0b3IgaXMgZG9uZS4gSWYgaXQncyBzdGlsbCB0aGUgY3VycmVudCBvbmUsIG1ha2UgaXQgbm90XG4gICAgICAgICAgICAvLyBjdXJyZW50LiAoSWYgaXQncyBub3QgdGhlIGN1cnJlbnQgb25lLCBzb21lYm9keSBlbHNlIGhhcyBtYWRlIHVzIG1vdmUgb24uKVxuICAgICAgICAgICAgaWYgKGN1cnJlbnROZXN0ZWRJdGVyYXRvciA9PT0gcmVtZW1iZXJDdXJyZW50TmVzdGVkSXRlcmF0b3IpIHtcbiAgICAgICAgICAgICAgICBjdXJyZW50TmVzdGVkSXRlcmF0b3IgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gYXdhaXQgbmV4dCgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgdGhyb3cgZXJyO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG5leHQsXG4gICAgICAgIGFzeW5jIHJldHVybigpIHtcbiAgICAgICAgICAgIGRvbmUgPSB0cnVlO1xuICAgICAgICAgICAgYXdhaXQgUHJvbWlzZS5hbGwoW2N1cnJlbnROZXN0ZWRJdGVyYXRvcj8ucmV0dXJuPy4oKSwgdG9wSXRlcmF0b3IucmV0dXJuPy4oKV0pO1xuICAgICAgICAgICAgcmV0dXJuIHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9O1xuICAgICAgICB9LFxuICAgICAgICBhc3luYyB0aHJvdyhlcnJvcikge1xuICAgICAgICAgICAgZG9uZSA9IHRydWU7XG4gICAgICAgICAgICBhd2FpdCBQcm9taXNlLmFsbChbY3VycmVudE5lc3RlZEl0ZXJhdG9yPy50aHJvdz8uKGVycm9yKSwgdG9wSXRlcmF0b3IudGhyb3c/LihlcnJvcildKTtcbiAgICAgICAgICAgIC8qIGM4IGlnbm9yZSBuZXh0ICovXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/esm/execution/flattenAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/esm/execution/invariant.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/esm/execution/invariant.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   invariant: () => (/* binding */ invariant)\n/* harmony export */ });\nfunction invariant(condition, message) {\n    if (!condition) {\n        throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vaW52YXJpYW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9pbnZhcmlhbnQuanM/OGExZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xuICAgIGlmICghY29uZGl0aW9uKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlICE9IG51bGwgPyBtZXNzYWdlIDogJ1VuZXhwZWN0ZWQgaW52YXJpYW50IHRyaWdnZXJlZC4nKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/esm/execution/invariant.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   normalizedExecutor: () => (/* binding */ normalizedExecutor)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _execute_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./execute.js */ \"(ssr)/../node_modules/@graphql-tools/executor/esm/execution/execute.js\");\n\n\n\nfunction normalizedExecutor(args) {\n    const operationAST = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getOperationAST)(args.document, args.operationName);\n    if (operationAST == null) {\n        throw new Error('Must provide an operation.');\n    }\n    if (operationAST.operation === 'subscription') {\n        return (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.subscribe)(args);\n    }\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.execute)(args))\n        .then((result) => {\n        if ('initialResult' in result) {\n            return (0,_execute_js__WEBPACK_IMPORTED_MODULE_2__.flattenIncrementalResults)(result);\n        }\n        return result;\n    })\n        .resolve();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vbm9ybWFsaXplZEV4ZWN1dG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDUTtBQUMyQjtBQUN0RTtBQUNQLHlCQUF5Qix3REFBZTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsc0RBQVM7QUFDeEI7QUFDQSxlQUFlLDREQUFjLE9BQU8sb0RBQU87QUFDM0M7QUFDQTtBQUNBLG1CQUFtQixzRUFBeUI7QUFDNUM7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi9ub3JtYWxpemVkRXhlY3V0b3IuanM/NGZlNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcGVyYXRpb25BU1QgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IFZhbHVlT3JQcm9taXNlIH0gZnJvbSAndmFsdWUtb3ItcHJvbWlzZSc7XG5pbXBvcnQgeyBleGVjdXRlLCBmbGF0dGVuSW5jcmVtZW50YWxSZXN1bHRzLCBzdWJzY3JpYmUgfSBmcm9tICcuL2V4ZWN1dGUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZWRFeGVjdXRvcihhcmdzKSB7XG4gICAgY29uc3Qgb3BlcmF0aW9uQVNUID0gZ2V0T3BlcmF0aW9uQVNUKGFyZ3MuZG9jdW1lbnQsIGFyZ3Mub3BlcmF0aW9uTmFtZSk7XG4gICAgaWYgKG9wZXJhdGlvbkFTVCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTXVzdCBwcm92aWRlIGFuIG9wZXJhdGlvbi4nKTtcbiAgICB9XG4gICAgaWYgKG9wZXJhdGlvbkFTVC5vcGVyYXRpb24gPT09ICdzdWJzY3JpcHRpb24nKSB7XG4gICAgICAgIHJldHVybiBzdWJzY3JpYmUoYXJncyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgVmFsdWVPclByb21pc2UoKCkgPT4gZXhlY3V0ZShhcmdzKSlcbiAgICAgICAgLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICBpZiAoJ2luaXRpYWxSZXN1bHQnIGluIHJlc3VsdCkge1xuICAgICAgICAgICAgcmV0dXJuIGZsYXR0ZW5JbmNyZW1lbnRhbFJlc3VsdHMocmVzdWx0KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0pXG4gICAgICAgIC5yZXNvbHZlKCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/esm/execution/normalizedExecutor.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   promiseForObject: () => (/* binding */ promiseForObject)\n/* harmony export */ });\n/**\n * This function transforms a JS object `Record<string, Promise<T>>` into\n * a `Promise<Record<string, T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nasync function promiseForObject(object, signal) {\n    const resolvedObject = Object.create(null);\n    await new Promise((resolve, reject) => {\n        signal?.addEventListener('abort', () => {\n            reject(signal.reason);\n        });\n        Promise.all(Object.entries(object).map(async ([key, value]) => {\n            resolvedObject[key] = await value;\n        })).then(() => resolve(), reject);\n    });\n    return resolvedObject;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vcHJvbWlzZUZvck9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9lc20vZXhlY3V0aW9uL3Byb21pc2VGb3JPYmplY3QuanM/OTAyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgZnVuY3Rpb24gdHJhbnNmb3JtcyBhIEpTIG9iamVjdCBgUmVjb3JkPHN0cmluZywgUHJvbWlzZTxUPj5gIGludG9cbiAqIGEgYFByb21pc2U8UmVjb3JkPHN0cmluZywgVD4+YFxuICpcbiAqIFRoaXMgaXMgYWtpbiB0byBibHVlYmlyZCdzIGBQcm9taXNlLnByb3BzYCwgYnV0IGltcGxlbWVudGVkIG9ubHkgdXNpbmdcbiAqIGBQcm9taXNlLmFsbGAgc28gaXQgd2lsbCB3b3JrIHdpdGggYW55IGltcGxlbWVudGF0aW9uIG9mIEVTNiBwcm9taXNlcy5cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb21pc2VGb3JPYmplY3Qob2JqZWN0LCBzaWduYWwpIHtcbiAgICBjb25zdCByZXNvbHZlZE9iamVjdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gICAgYXdhaXQgbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBzaWduYWw/LmFkZEV2ZW50TGlzdGVuZXIoJ2Fib3J0JywgKCkgPT4ge1xuICAgICAgICAgICAgcmVqZWN0KHNpZ25hbC5yZWFzb24pO1xuICAgICAgICB9KTtcbiAgICAgICAgUHJvbWlzZS5hbGwoT2JqZWN0LmVudHJpZXMob2JqZWN0KS5tYXAoYXN5bmMgKFtrZXksIHZhbHVlXSkgPT4ge1xuICAgICAgICAgICAgcmVzb2x2ZWRPYmplY3Rba2V5XSA9IGF3YWl0IHZhbHVlO1xuICAgICAgICB9KSkudGhlbigoKSA9PiByZXNvbHZlKCksIHJlamVjdCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc29sdmVkT2JqZWN0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/esm/execution/promiseForObject.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/esm/execution/values.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/esm/execution/values.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVariableValues: () => (/* binding */ getVariableValues)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/coerceInputValue.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/Path.js\");\n\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getVariableValues(schema, varDefNodes, inputs, options) {\n    const errors = [];\n    const maxErrors = options?.maxErrors;\n    try {\n        const coerced = coerceVariableValues(schema, varDefNodes, inputs, error => {\n            if (maxErrors != null && errors.length >= maxErrors) {\n                throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)('Too many errors processing variables, error limit reached. Execution aborted.');\n            }\n            errors.push(error);\n        });\n        if (errors.length === 0) {\n            return { coerced };\n        }\n    }\n    catch (error) {\n        errors.push(error);\n    }\n    // @ts-expect-error - We know that errors is an array of GraphQLError.\n    return { errors };\n}\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n    const coercedValues = {};\n    for (const varDefNode of varDefNodes) {\n        const varName = varDefNode.variable.name.value;\n        const varType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.typeFromAST)(schema, varDefNode.type);\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInputType)(varType)) {\n            // Must use input types for variables. This should be caught during\n            // validation, however is checked again here for safety.\n            const varTypeStr = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.print)(varDefNode.type);\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`, { nodes: varDefNode.type }));\n            continue;\n        }\n        if (!(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(inputs, varName)) {\n            if (varDefNode.defaultValue) {\n                coercedValues[varName] = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(varDefNode.defaultValue, varType);\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n                const varTypeStr = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(varType);\n                onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`, {\n                    nodes: varDefNode,\n                }));\n            }\n            continue;\n        }\n        const value = inputs[varName];\n        if (value === null && (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isNonNullType)(varType)) {\n            const varTypeStr = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(varType);\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`, {\n                nodes: varDefNode,\n            }));\n            continue;\n        }\n        coercedValues[varName] = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.coerceInputValue)(value, varType, (path, invalidValue, error) => {\n            let prefix = `Variable \"$${varName}\" got invalid value ` + (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(invalidValue);\n            if (path.length > 0) {\n                prefix += ` at \"${varName}${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.printPathArray)(path)}\"`;\n            }\n            onError((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(prefix + '; ' + error.message, {\n                nodes: varDefNode,\n                originalError: error,\n            }));\n        });\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL2VzbS9leGVjdXRpb24vdmFsdWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBMEc7QUFDUDtBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isd0VBQWtCO0FBQ3hDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isb0RBQVc7QUFDbkMsYUFBYSxvREFBVztBQUN4QjtBQUNBO0FBQ0EsK0JBQStCLDhDQUFLO0FBQ3BDLG9CQUFvQix3RUFBa0IsZUFBZSxRQUFRLDRCQUE0QixXQUFXLDZDQUE2Qyx3QkFBd0I7QUFDeks7QUFDQTtBQUNBLGFBQWEsb0VBQWM7QUFDM0I7QUFDQSx5Q0FBeUMscURBQVk7QUFDckQ7QUFDQSxxQkFBcUIsc0RBQWE7QUFDbEMsbUNBQW1DLDZEQUFPO0FBQzFDLHdCQUF3Qix3RUFBa0IsZUFBZSxRQUFRLHNCQUFzQixXQUFXO0FBQ2xHO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLHNEQUFhO0FBQzNDLCtCQUErQiw2REFBTztBQUN0QyxvQkFBb0Isd0VBQWtCLGVBQWUsUUFBUSxzQkFBc0IsV0FBVztBQUM5RjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsaUNBQWlDLHlEQUFnQjtBQUNqRCx1Q0FBdUMsUUFBUSx3QkFBd0IsNkRBQU87QUFDOUU7QUFDQSxrQ0FBa0MsUUFBUSxFQUFFLG9FQUFjLE9BQU87QUFDakU7QUFDQSxvQkFBb0Isd0VBQWtCLGFBQWE7QUFDbkQ7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3IvZXNtL2V4ZWN1dGlvbi92YWx1ZXMuanM/ZWM5YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb2VyY2VJbnB1dFZhbHVlLCBpc0lucHV0VHlwZSwgaXNOb25OdWxsVHlwZSwgcHJpbnQsIHR5cGVGcm9tQVNULCB2YWx1ZUZyb21BU1QsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBjcmVhdGVHcmFwaFFMRXJyb3IsIGhhc093blByb3BlcnR5LCBpbnNwZWN0LCBwcmludFBhdGhBcnJheSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbi8qKlxuICogUHJlcGFyZXMgYW4gb2JqZWN0IG1hcCBvZiB2YXJpYWJsZVZhbHVlcyBvZiB0aGUgY29ycmVjdCB0eXBlIGJhc2VkIG9uIHRoZVxuICogcHJvdmlkZWQgdmFyaWFibGUgZGVmaW5pdGlvbnMgYW5kIGFyYml0cmFyeSBpbnB1dC4gSWYgdGhlIGlucHV0IGNhbm5vdCBiZVxuICogcGFyc2VkIHRvIG1hdGNoIHRoZSB2YXJpYWJsZSBkZWZpbml0aW9ucywgYSBHcmFwaFFMRXJyb3Igd2lsbCBiZSB0aHJvd24uXG4gKlxuICogTm90ZTogVGhlIHJldHVybmVkIHZhbHVlIGlzIGEgcGxhaW4gT2JqZWN0IHdpdGggYSBwcm90b3R5cGUsIHNpbmNlIGl0IGlzXG4gKiBleHBvc2VkIHRvIHVzZXIgY29kZS4gQ2FyZSBzaG91bGQgYmUgdGFrZW4gdG8gbm90IHB1bGwgdmFsdWVzIGZyb20gdGhlXG4gKiBPYmplY3QgcHJvdG90eXBlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0VmFyaWFibGVWYWx1ZXMoc2NoZW1hLCB2YXJEZWZOb2RlcywgaW5wdXRzLCBvcHRpb25zKSB7XG4gICAgY29uc3QgZXJyb3JzID0gW107XG4gICAgY29uc3QgbWF4RXJyb3JzID0gb3B0aW9ucz8ubWF4RXJyb3JzO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGNvZXJjZWQgPSBjb2VyY2VWYXJpYWJsZVZhbHVlcyhzY2hlbWEsIHZhckRlZk5vZGVzLCBpbnB1dHMsIGVycm9yID0+IHtcbiAgICAgICAgICAgIGlmIChtYXhFcnJvcnMgIT0gbnVsbCAmJiBlcnJvcnMubGVuZ3RoID49IG1heEVycm9ycykge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcignVG9vIG1hbnkgZXJyb3JzIHByb2Nlc3NpbmcgdmFyaWFibGVzLCBlcnJvciBsaW1pdCByZWFjaGVkLiBFeGVjdXRpb24gYWJvcnRlZC4nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVycm9ycy5wdXNoKGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChlcnJvcnMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4geyBjb2VyY2VkIH07XG4gICAgICAgIH1cbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGVycm9ycy5wdXNoKGVycm9yKTtcbiAgICB9XG4gICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIFdlIGtub3cgdGhhdCBlcnJvcnMgaXMgYW4gYXJyYXkgb2YgR3JhcGhRTEVycm9yLlxuICAgIHJldHVybiB7IGVycm9ycyB9O1xufVxuZnVuY3Rpb24gY29lcmNlVmFyaWFibGVWYWx1ZXMoc2NoZW1hLCB2YXJEZWZOb2RlcywgaW5wdXRzLCBvbkVycm9yKSB7XG4gICAgY29uc3QgY29lcmNlZFZhbHVlcyA9IHt9O1xuICAgIGZvciAoY29uc3QgdmFyRGVmTm9kZSBvZiB2YXJEZWZOb2Rlcykge1xuICAgICAgICBjb25zdCB2YXJOYW1lID0gdmFyRGVmTm9kZS52YXJpYWJsZS5uYW1lLnZhbHVlO1xuICAgICAgICBjb25zdCB2YXJUeXBlID0gdHlwZUZyb21BU1Qoc2NoZW1hLCB2YXJEZWZOb2RlLnR5cGUpO1xuICAgICAgICBpZiAoIWlzSW5wdXRUeXBlKHZhclR5cGUpKSB7XG4gICAgICAgICAgICAvLyBNdXN0IHVzZSBpbnB1dCB0eXBlcyBmb3IgdmFyaWFibGVzLiBUaGlzIHNob3VsZCBiZSBjYXVnaHQgZHVyaW5nXG4gICAgICAgICAgICAvLyB2YWxpZGF0aW9uLCBob3dldmVyIGlzIGNoZWNrZWQgYWdhaW4gaGVyZSBmb3Igc2FmZXR5LlxuICAgICAgICAgICAgY29uc3QgdmFyVHlwZVN0ciA9IHByaW50KHZhckRlZk5vZGUudHlwZSk7XG4gICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIGV4cGVjdGVkIHZhbHVlIG9mIHR5cGUgXCIke3ZhclR5cGVTdHJ9XCIgd2hpY2ggY2Fubm90IGJlIHVzZWQgYXMgYW4gaW5wdXQgdHlwZS5gLCB7IG5vZGVzOiB2YXJEZWZOb2RlLnR5cGUgfSkpO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFoYXNPd25Qcm9wZXJ0eShpbnB1dHMsIHZhck5hbWUpKSB7XG4gICAgICAgICAgICBpZiAodmFyRGVmTm9kZS5kZWZhdWx0VmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjb2VyY2VkVmFsdWVzW3Zhck5hbWVdID0gdmFsdWVGcm9tQVNUKHZhckRlZk5vZGUuZGVmYXVsdFZhbHVlLCB2YXJUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUodmFyVHlwZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB2YXJUeXBlU3RyID0gaW5zcGVjdCh2YXJUeXBlKTtcbiAgICAgICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIG9mIHJlcXVpcmVkIHR5cGUgXCIke3ZhclR5cGVTdHJ9XCIgd2FzIG5vdCBwcm92aWRlZC5gLCB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzOiB2YXJEZWZOb2RlLFxuICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHZhbHVlID0gaW5wdXRzW3Zhck5hbWVdO1xuICAgICAgICBpZiAodmFsdWUgPT09IG51bGwgJiYgaXNOb25OdWxsVHlwZSh2YXJUeXBlKSkge1xuICAgICAgICAgICAgY29uc3QgdmFyVHlwZVN0ciA9IGluc3BlY3QodmFyVHlwZSk7XG4gICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIG9mIG5vbi1udWxsIHR5cGUgXCIke3ZhclR5cGVTdHJ9XCIgbXVzdCBub3QgYmUgbnVsbC5gLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IHZhckRlZk5vZGUsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb2VyY2VkVmFsdWVzW3Zhck5hbWVdID0gY29lcmNlSW5wdXRWYWx1ZSh2YWx1ZSwgdmFyVHlwZSwgKHBhdGgsIGludmFsaWRWYWx1ZSwgZXJyb3IpID0+IHtcbiAgICAgICAgICAgIGxldCBwcmVmaXggPSBgVmFyaWFibGUgXCIkJHt2YXJOYW1lfVwiIGdvdCBpbnZhbGlkIHZhbHVlIGAgKyBpbnNwZWN0KGludmFsaWRWYWx1ZSk7XG4gICAgICAgICAgICBpZiAocGF0aC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgcHJlZml4ICs9IGAgYXQgXCIke3Zhck5hbWV9JHtwcmludFBhdGhBcnJheShwYXRoKX1cImA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBvbkVycm9yKGNyZWF0ZUdyYXBoUUxFcnJvcihwcmVmaXggKyAnOyAnICsgZXJyb3IubWVzc2FnZSwge1xuICAgICAgICAgICAgICAgIG5vZGVzOiB2YXJEZWZOb2RlLFxuICAgICAgICAgICAgICAgIG9yaWdpbmFsRXJyb3I6IGVycm9yLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZWRWYWx1ZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/esm/execution/values.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccumulatorMap: () => (/* binding */ AccumulatorMap)\n/* harmony export */ });\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n    get [Symbol.toStringTag]() {\n        return 'AccumulatorMap';\n    }\n    add(key, item) {\n        const group = this.get(key);\n        if (group === undefined) {\n            this.set(key, [item]);\n        }\n        else {\n            group.push(item);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vQWNjdW11bGF0b3JNYXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0FjY3VtdWxhdG9yTWFwLmpzPzdjNTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFUzYgTWFwIHdpdGggYWRkaXRpb25hbCBgYWRkYCBtZXRob2QgdG8gYWNjdW11bGF0ZSBpdGVtcy5cbiAqL1xuZXhwb3J0IGNsYXNzIEFjY3VtdWxhdG9yTWFwIGV4dGVuZHMgTWFwIHtcbiAgICBnZXQgW1N5bWJvbC50b1N0cmluZ1RhZ10oKSB7XG4gICAgICAgIHJldHVybiAnQWNjdW11bGF0b3JNYXAnO1xuICAgIH1cbiAgICBhZGQoa2V5LCBpdGVtKSB7XG4gICAgICAgIGNvbnN0IGdyb3VwID0gdGhpcy5nZXQoa2V5KTtcbiAgICAgICAgaWYgKGdyb3VwID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRoaXMuc2V0KGtleSwgW2l0ZW1dKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGdyb3VwLnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/Path.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/Path.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPath: () => (/* binding */ addPath),\n/* harmony export */   pathToArray: () => (/* binding */ pathToArray),\n/* harmony export */   printPathArray: () => (/* binding */ printPathArray)\n/* harmony export */ });\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n    return { prev, key, typename };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\nfunction pathToArray(path) {\n    const flattened = [];\n    let curr = path;\n    while (curr) {\n        flattened.push(curr.key);\n        curr = curr.prev;\n    }\n    return flattened.reverse();\n}\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n    return path\n        .map(key => (typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key))\n        .join('');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vUGF0aC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL1BhdGguanM/YmYyMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGEgUGF0aCBhbmQgYSBrZXksIHJldHVybiBhIG5ldyBQYXRoIGNvbnRhaW5pbmcgdGhlIG5ldyBrZXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoKHByZXYsIGtleSwgdHlwZW5hbWUpIHtcbiAgICByZXR1cm4geyBwcmV2LCBrZXksIHR5cGVuYW1lIH07XG59XG4vKipcbiAqIEdpdmVuIGEgUGF0aCwgcmV0dXJuIGFuIEFycmF5IG9mIHRoZSBwYXRoIGtleXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXRoVG9BcnJheShwYXRoKSB7XG4gICAgY29uc3QgZmxhdHRlbmVkID0gW107XG4gICAgbGV0IGN1cnIgPSBwYXRoO1xuICAgIHdoaWxlIChjdXJyKSB7XG4gICAgICAgIGZsYXR0ZW5lZC5wdXNoKGN1cnIua2V5KTtcbiAgICAgICAgY3VyciA9IGN1cnIucHJldjtcbiAgICB9XG4gICAgcmV0dXJuIGZsYXR0ZW5lZC5yZXZlcnNlKCk7XG59XG4vKipcbiAqIEJ1aWxkIGEgc3RyaW5nIGRlc2NyaWJpbmcgdGhlIHBhdGguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmludFBhdGhBcnJheShwYXRoKSB7XG4gICAgcmV0dXJuIHBhdGhcbiAgICAgICAgLm1hcChrZXkgPT4gKHR5cGVvZiBrZXkgPT09ICdudW1iZXInID8gJ1snICsga2V5LnRvU3RyaW5nKCkgKyAnXScgOiAnLicgKyBrZXkpKVxuICAgICAgICAuam9pbignJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/Path.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/collectFields.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/collectFields.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectFields: () => (/* binding */ collectFields),\n/* harmony export */   collectSubFields: () => (/* binding */ collectSubFields),\n/* harmony export */   doesFragmentConditionMatch: () => (/* binding */ doesFragmentConditionMatch),\n/* harmony export */   getDeferValues: () => (/* binding */ getDeferValues),\n/* harmony export */   getFieldEntryKey: () => (/* binding */ getFieldEntryKey),\n/* harmony export */   shouldIncludeNode: () => (/* binding */ shouldIncludeNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccumulatorMap.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\n\nfunction collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                fields.add(getFieldEntryKey(selection), selection);\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (visitedFragmentNames.has(fragName) && !defer) {\n                    continue;\n                }\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                if (!defer) {\n                    visitedFragmentNames.add(fragName);\n                }\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n        }\n    }\n}\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n */\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet) {\n    const fields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const patches = [];\n    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, new Set());\n    return { fields, patches };\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSkipDirective, node, variableValues);\n    if (skip?.['if'] === true) {\n        return false;\n    }\n    const include = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLIncludeDirective, node, variableValues);\n    if (include?.['if'] === false) {\n        return false;\n    }\n    return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.typeFromAST)(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_5__.isAbstractType)(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Returns an object containing the `@defer` arguments if a field should be\n * deferred based on the experimental flag, defer directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getDeferValues(variableValues, node) {\n    const defer = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(_directives_js__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeferDirective, node, variableValues);\n    if (!defer) {\n        return;\n    }\n    if (defer['if'] === false) {\n        return;\n    }\n    return {\n        label: typeof defer['label'] === 'string' ? defer['label'] : undefined,\n    };\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n */\nconst collectSubFields = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_7__.memoize5)(function collectSubfields(schema, fragments, variableValues, returnType, fieldNodes) {\n    const subFieldNodes = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const visitedFragmentNames = new Set();\n    const subPatches = [];\n    const subFieldsAndPatches = {\n        fields: subFieldNodes,\n        patches: subPatches,\n    };\n    for (const node of fieldNodes) {\n        if (node.selectionSet) {\n            collectFieldsImpl(schema, fragments, variableValues, returnType, node.selectionSet, subFieldNodes, subPatches, visitedFragmentNames);\n        }\n    }\n    return subFieldsAndPatches;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/collectFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/directives.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/directives.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLDeferDirective: () => (/* binding */ GraphQLDeferDirective),\n/* harmony export */   GraphQLStreamDirective: () => (/* binding */ GraphQLStreamDirective)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n\n/**\n * Used to conditionally defer fragments.\n */\nconst GraphQLDeferDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'defer',\n    description: 'Directs the executor to defer this fragment when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FRAGMENT_SPREAD, graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.INLINE_FRAGMENT],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Deferred when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n    },\n});\n/**\n * Used to conditionally stream list fields.\n */\nconst GraphQLStreamDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'stream',\n    description: 'Directs the executor to stream plural fields when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FIELD],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Stream when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n        initialCount: {\n            defaultValue: 0,\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInt,\n            description: 'Number of items to return immediately',\n        },\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZGlyZWN0aXZlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBMEg7QUFDMUg7QUFDQTtBQUNBO0FBQ08sa0NBQWtDLHFEQUFnQjtBQUN6RDtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFpQixrQkFBa0Isc0RBQWlCO0FBQ3BFO0FBQ0E7QUFDQSxzQkFBc0IsbURBQWMsQ0FBQyxtREFBYztBQUNuRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esa0JBQWtCLGtEQUFhO0FBQy9CO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ08sbUNBQW1DLHFEQUFnQjtBQUMxRDtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFpQjtBQUNqQztBQUNBO0FBQ0Esc0JBQXNCLG1EQUFjLENBQUMsbURBQWM7QUFDbkQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGtCQUFrQixrREFBYTtBQUMvQjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esa0JBQWtCLCtDQUFVO0FBQzVCO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3Ivbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9kaXJlY3RpdmVzLmpzPzI3YjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGlyZWN0aXZlTG9jYXRpb24sIEdyYXBoUUxCb29sZWFuLCBHcmFwaFFMRGlyZWN0aXZlLCBHcmFwaFFMSW50LCBHcmFwaFFMTm9uTnVsbCwgR3JhcGhRTFN0cmluZywgfSBmcm9tICdncmFwaHFsJztcbi8qKlxuICogVXNlZCB0byBjb25kaXRpb25hbGx5IGRlZmVyIGZyYWdtZW50cy5cbiAqL1xuZXhwb3J0IGNvbnN0IEdyYXBoUUxEZWZlckRpcmVjdGl2ZSA9IG5ldyBHcmFwaFFMRGlyZWN0aXZlKHtcbiAgICBuYW1lOiAnZGVmZXInLFxuICAgIGRlc2NyaXB0aW9uOiAnRGlyZWN0cyB0aGUgZXhlY3V0b3IgdG8gZGVmZXIgdGhpcyBmcmFnbWVudCB3aGVuIHRoZSBgaWZgIGFyZ3VtZW50IGlzIHRydWUgb3IgdW5kZWZpbmVkLicsXG4gICAgbG9jYXRpb25zOiBbRGlyZWN0aXZlTG9jYXRpb24uRlJBR01FTlRfU1BSRUFELCBEaXJlY3RpdmVMb2NhdGlvbi5JTkxJTkVfRlJBR01FTlRdLFxuICAgIGFyZ3M6IHtcbiAgICAgICAgaWY6IHtcbiAgICAgICAgICAgIHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMQm9vbGVhbiksXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ0RlZmVycmVkIHdoZW4gdHJ1ZSBvciB1bmRlZmluZWQuJyxcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxTdHJpbmcsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1VuaXF1ZSBuYW1lJyxcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG4vKipcbiAqIFVzZWQgdG8gY29uZGl0aW9uYWxseSBzdHJlYW0gbGlzdCBmaWVsZHMuXG4gKi9cbmV4cG9ydCBjb25zdCBHcmFwaFFMU3RyZWFtRGlyZWN0aXZlID0gbmV3IEdyYXBoUUxEaXJlY3RpdmUoe1xuICAgIG5hbWU6ICdzdHJlYW0nLFxuICAgIGRlc2NyaXB0aW9uOiAnRGlyZWN0cyB0aGUgZXhlY3V0b3IgdG8gc3RyZWFtIHBsdXJhbCBmaWVsZHMgd2hlbiB0aGUgYGlmYCBhcmd1bWVudCBpcyB0cnVlIG9yIHVuZGVmaW5lZC4nLFxuICAgIGxvY2F0aW9uczogW0RpcmVjdGl2ZUxvY2F0aW9uLkZJRUxEXSxcbiAgICBhcmdzOiB7XG4gICAgICAgIGlmOiB7XG4gICAgICAgICAgICB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTEJvb2xlYW4pLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdTdHJlYW0gd2hlbiB0cnVlIG9yIHVuZGVmaW5lZC4nLFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVW5pcXVlIG5hbWUnLFxuICAgICAgICB9LFxuICAgICAgICBpbml0aWFsQ291bnQ6IHtcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogMCxcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxJbnQsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ051bWJlciBvZiBpdGVtcyB0byByZXR1cm4gaW1tZWRpYXRlbHknLFxuICAgICAgICB9LFxuICAgIH0sXG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/errors.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQVc7QUFDbkIsbUJBQW1CLGlEQUFZO0FBQy9CO0FBQ0EsZUFBZSxpREFBWTtBQUMzQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Vycm9ycy5qcz85MWM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxFcnJvciwgdmVyc2lvbkluZm8gfSBmcm9tICdncmFwaHFsJztcbmNvbnN0IHBvc3NpYmxlR3JhcGhRTEVycm9yUHJvcGVydGllcyA9IFtcbiAgICAnbWVzc2FnZScsXG4gICAgJ2xvY2F0aW9ucycsXG4gICAgJ3BhdGgnLFxuICAgICdub2RlcycsXG4gICAgJ3NvdXJjZScsXG4gICAgJ3Bvc2l0aW9ucycsXG4gICAgJ29yaWdpbmFsRXJyb3InLFxuICAgICduYW1lJyxcbiAgICAnc3RhY2snLFxuICAgICdleHRlbnNpb25zJyxcbl07XG5mdW5jdGlvbiBpc0dyYXBoUUxFcnJvckxpa2UoZXJyb3IpIHtcbiAgICByZXR1cm4gKGVycm9yICE9IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIGVycm9yID09PSAnb2JqZWN0JyAmJlxuICAgICAgICBPYmplY3Qua2V5cyhlcnJvcikuZXZlcnkoa2V5ID0+IHBvc3NpYmxlR3JhcGhRTEVycm9yUHJvcGVydGllcy5pbmNsdWRlcyhrZXkpKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucz8ub3JpZ2luYWxFcnJvciAmJlxuICAgICAgICAhKG9wdGlvbnMub3JpZ2luYWxFcnJvciBpbnN0YW5jZW9mIEVycm9yKSAmJlxuICAgICAgICBpc0dyYXBoUUxFcnJvckxpa2Uob3B0aW9ucy5vcmlnaW5hbEVycm9yKSkge1xuICAgICAgICBvcHRpb25zLm9yaWdpbmFsRXJyb3IgPSBjcmVhdGVHcmFwaFFMRXJyb3Iob3B0aW9ucy5vcmlnaW5hbEVycm9yLm1lc3NhZ2UsIG9wdGlvbnMub3JpZ2luYWxFcnJvcik7XG4gICAgfVxuICAgIGlmICh2ZXJzaW9uSW5mby5tYWpvciA+PSAxNykge1xuICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucz8ubm9kZXMsIG9wdGlvbnM/LnNvdXJjZSwgb3B0aW9ucz8ucG9zaXRpb25zLCBvcHRpb25zPy5wYXRoLCBvcHRpb25zPy5vcmlnaW5hbEVycm9yLCBvcHRpb25zPy5leHRlbnNpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZWxvY2F0ZWRFcnJvcihvcmlnaW5hbEVycm9yLCBwYXRoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUdyYXBoUUxFcnJvcihvcmlnaW5hbEVycm9yLm1lc3NhZ2UsIHtcbiAgICAgICAgbm9kZXM6IG9yaWdpbmFsRXJyb3Iubm9kZXMsXG4gICAgICAgIHNvdXJjZTogb3JpZ2luYWxFcnJvci5zb3VyY2UsXG4gICAgICAgIHBvc2l0aW9uczogb3JpZ2luYWxFcnJvci5wb3NpdGlvbnMsXG4gICAgICAgIHBhdGg6IHBhdGggPT0gbnVsbCA/IG9yaWdpbmFsRXJyb3IucGF0aCA6IHBhdGgsXG4gICAgICAgIG9yaWdpbmFsRXJyb3IsXG4gICAgICAgIGV4dGVuc2lvbnM6IG9yaWdpbmFsRXJyb3IuZXh0ZW5zaW9ucyxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/getArgumentValues.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/getArgumentValues.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArgumentValues: () => (/* binding */ getArgumentValues)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    const coercedValues = {};\n    const argumentNodes = node.arguments ?? [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL;\n        if (valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(variableValues, variableName)) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0,graphql__WEBPACK_IMPORTED_MODULE_6__.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0QXJndW1lbnRWYWx1ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0M7QUFDNEI7QUFDbkI7QUFDSDtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08seURBQXlEO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEtBQUs7QUFDVixpQkFBaUIsb0NBQW9DO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0RBQWE7QUFDbEMsc0JBQXNCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLHNEQUFPLFVBQVU7QUFDbEc7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MseUNBQUk7QUFDNUMsK0JBQStCLHlDQUFJO0FBQ25DO0FBQ0EsMkNBQTJDLDJEQUFjO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixzREFBYTtBQUN0QywwQkFBMEIsOERBQWtCLGNBQWMsS0FBSyxzQkFBc0Isc0RBQU8sVUFBVTtBQUN0Ryx1REFBdUQsYUFBYTtBQUNwRTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFhO0FBQ25DLGtCQUFrQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQixzREFBTyxVQUFVO0FBQzlGO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsNkJBQTZCLHFEQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLDhDQUFLLFlBQVk7QUFDOUY7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0QXJndW1lbnRWYWx1ZXMuanM/NjFmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnNwZWN0IH0gZnJvbSAnY3Jvc3MtaW5zcGVjdCc7XG5pbXBvcnQgeyBpc05vbk51bGxUeXBlLCBLaW5kLCBwcmludCwgdmFsdWVGcm9tQVNULCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgY3JlYXRlR3JhcGhRTEVycm9yIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgaGFzT3duUHJvcGVydHkgfSBmcm9tICcuL2pzdXRpbHMuanMnO1xuLyoqXG4gKiBQcmVwYXJlcyBhbiBvYmplY3QgbWFwIG9mIGFyZ3VtZW50IHZhbHVlcyBnaXZlbiBhIGxpc3Qgb2YgYXJndW1lbnRcbiAqIGRlZmluaXRpb25zIGFuZCBsaXN0IG9mIGFyZ3VtZW50IEFTVCBub2Rlcy5cbiAqXG4gKiBOb3RlOiBUaGUgcmV0dXJuZWQgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3Qgd2l0aCBhIHByb3RvdHlwZSwgc2luY2UgaXQgaXNcbiAqIGV4cG9zZWQgdG8gdXNlciBjb2RlLiBDYXJlIHNob3VsZCBiZSB0YWtlbiB0byBub3QgcHVsbCB2YWx1ZXMgZnJvbSB0aGVcbiAqIE9iamVjdCBwcm90b3R5cGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRBcmd1bWVudFZhbHVlcyhkZWYsIG5vZGUsIHZhcmlhYmxlVmFsdWVzID0ge30pIHtcbiAgICBjb25zdCBjb2VyY2VkVmFsdWVzID0ge307XG4gICAgY29uc3QgYXJndW1lbnROb2RlcyA9IG5vZGUuYXJndW1lbnRzID8/IFtdO1xuICAgIGNvbnN0IGFyZ05vZGVNYXAgPSBhcmd1bWVudE5vZGVzLnJlZHVjZSgocHJldiwgYXJnKSA9PiAoe1xuICAgICAgICAuLi5wcmV2LFxuICAgICAgICBbYXJnLm5hbWUudmFsdWVdOiBhcmcsXG4gICAgfSksIHt9KTtcbiAgICBmb3IgKGNvbnN0IHsgbmFtZSwgdHlwZTogYXJnVHlwZSwgZGVmYXVsdFZhbHVlIH0gb2YgZGVmLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgYXJndW1lbnROb2RlID0gYXJnTm9kZU1hcFtuYW1lXTtcbiAgICAgICAgaWYgKCFhcmd1bWVudE5vZGUpIHtcbiAgICAgICAgICAgIGlmIChkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNvZXJjZWRWYWx1ZXNbbmFtZV0gPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpc05vbk51bGxUeXBlKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBvZiByZXF1aXJlZCB0eXBlIFwiJHtpbnNwZWN0KGFyZ1R5cGUpfVwiIGAgKyAnd2FzIG5vdCBwcm92aWRlZC4nLCB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzOiBbbm9kZV0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2YWx1ZU5vZGUgPSBhcmd1bWVudE5vZGUudmFsdWU7XG4gICAgICAgIGxldCBpc051bGwgPSB2YWx1ZU5vZGUua2luZCA9PT0gS2luZC5OVUxMO1xuICAgICAgICBpZiAodmFsdWVOb2RlLmtpbmQgPT09IEtpbmQuVkFSSUFCTEUpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhcmlhYmxlTmFtZSA9IHZhbHVlTm9kZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgaWYgKHZhcmlhYmxlVmFsdWVzID09IG51bGwgfHwgIWhhc093blByb3BlcnR5KHZhcmlhYmxlVmFsdWVzLCB2YXJpYWJsZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvZXJjZWRWYWx1ZXNbbmFtZV0gPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUoYXJnVHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBvZiByZXF1aXJlZCB0eXBlIFwiJHtpbnNwZWN0KGFyZ1R5cGUpfVwiIGAgK1xuICAgICAgICAgICAgICAgICAgICAgICAgYHdhcyBwcm92aWRlZCB0aGUgdmFyaWFibGUgXCIkJHt2YXJpYWJsZU5hbWV9XCIgd2hpY2ggd2FzIG5vdCBwcm92aWRlZCBhIHJ1bnRpbWUgdmFsdWUuYCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpc051bGwgPSB2YXJpYWJsZVZhbHVlc1t2YXJpYWJsZU5hbWVdID09IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTnVsbCAmJiBpc05vbk51bGxUeXBlKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIG9mIG5vbi1udWxsIHR5cGUgXCIke2luc3BlY3QoYXJnVHlwZSl9XCIgYCArICdtdXN0IG5vdCBiZSBudWxsLicsIHtcbiAgICAgICAgICAgICAgICBub2RlczogW3ZhbHVlTm9kZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb2VyY2VkVmFsdWUgPSB2YWx1ZUZyb21BU1QodmFsdWVOb2RlLCBhcmdUeXBlLCB2YXJpYWJsZVZhbHVlcyk7XG4gICAgICAgIGlmIChjb2VyY2VkVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gTm90ZTogVmFsdWVzT2ZDb3JyZWN0VHlwZVJ1bGUgdmFsaWRhdGlvbiBzaG91bGQgY2F0Y2ggdGhpcyBiZWZvcmVcbiAgICAgICAgICAgIC8vIGV4ZWN1dGlvbi4gVGhpcyBpcyBhIHJ1bnRpbWUgY2hlY2sgdG8gZW5zdXJlIGV4ZWN1dGlvbiBkb2VzIG5vdFxuICAgICAgICAgICAgLy8gY29udGludWUgd2l0aCBhbiBpbnZhbGlkIGFyZ3VtZW50IHZhbHVlLlxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBoYXMgaW52YWxpZCB2YWx1ZSAke3ByaW50KHZhbHVlTm9kZSl9LmAsIHtcbiAgICAgICAgICAgICAgICBub2RlczogW3ZhbHVlTm9kZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb2VyY2VkVmFsdWVzW25hbWVdID0gY29lcmNlZFZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gY29lcmNlZFZhbHVlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nfunction isAsyncIterable(value) {\n    return value?.[Symbol.asyncIterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaXNBc3luY0l0ZXJhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2lzQXN5bmNJdGVyYWJsZS5qcz80ZWIxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0FzeW5jSXRlcmFibGUodmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWU/LltTeW1ib2wuYXN5bmNJdGVyYXRvcl0gIT0gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vanN1dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vanN1dGlscy5qcz9iYTFlIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0l0ZXJhYmxlT2JqZWN0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy50aGVuICE9IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gcHJvbWlzZVJlZHVjZSh2YWx1ZXMsIGNhbGxiYWNrRm4sIGluaXRpYWxWYWx1ZSkge1xuICAgIGxldCBhY2N1bXVsYXRvciA9IGluaXRpYWxWYWx1ZTtcbiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICBhY2N1bXVsYXRvciA9IGlzUHJvbWlzZShhY2N1bXVsYXRvcilcbiAgICAgICAgICAgID8gYWNjdW11bGF0b3IudGhlbihyZXNvbHZlZCA9PiBjYWxsYmFja0ZuKHJlc29sdmVkLCB2YWx1ZSkpXG4gICAgICAgICAgICA6IGNhbGxiYWNrRm4oYWNjdW11bGF0b3IsIHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapAsyncIterator: () => (/* binding */ mapAsyncIterator)\n/* harmony export */ });\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, onNext, onError, onEnd) {\n    if (Symbol.asyncIterator in iterator) {\n        iterator = iterator[Symbol.asyncIterator]();\n    }\n    let $return;\n    let abruptClose;\n    let onEndWithValue;\n    if (onEnd) {\n        onEndWithValue = value => {\n            const onEnd$ = onEnd();\n            return (0,_jsutils_js__WEBPACK_IMPORTED_MODULE_0__.isPromise)(onEnd$) ? onEnd$.then(() => value) : value;\n        };\n    }\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        if (result.done) {\n            return onEndWithValue ? onEndWithValue(result) : result;\n        }\n        return asyncMapValue(result.value, onNext).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (onError) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = onError;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            const res$ = $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n            return onEndWithValue ? res$.then(onEndWithValue) : res$;\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWFwQXN5bmNJdGVyYXRvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHNEQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsOEJBQThCO0FBQ2xFO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9leGVjdXRvci9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL21hcEFzeW5jSXRlcmF0b3IuanM/MjgyZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1Byb21pc2UgfSBmcm9tICcuL2pzdXRpbHMuanMnO1xuLyoqXG4gKiBHaXZlbiBhbiBBc3luY0l0ZXJhYmxlIGFuZCBhIGNhbGxiYWNrIGZ1bmN0aW9uLCByZXR1cm4gYW4gQXN5bmNJdGVyYXRvclxuICogd2hpY2ggcHJvZHVjZXMgdmFsdWVzIG1hcHBlZCB2aWEgY2FsbGluZyB0aGUgY2FsbGJhY2sgZnVuY3Rpb24uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXBBc3luY0l0ZXJhdG9yKGl0ZXJhdG9yLCBvbk5leHQsIG9uRXJyb3IsIG9uRW5kKSB7XG4gICAgaWYgKFN5bWJvbC5hc3luY0l0ZXJhdG9yIGluIGl0ZXJhdG9yKSB7XG4gICAgICAgIGl0ZXJhdG9yID0gaXRlcmF0b3JbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCk7XG4gICAgfVxuICAgIGxldCAkcmV0dXJuO1xuICAgIGxldCBhYnJ1cHRDbG9zZTtcbiAgICBsZXQgb25FbmRXaXRoVmFsdWU7XG4gICAgaWYgKG9uRW5kKSB7XG4gICAgICAgIG9uRW5kV2l0aFZhbHVlID0gdmFsdWUgPT4ge1xuICAgICAgICAgICAgY29uc3Qgb25FbmQkID0gb25FbmQoKTtcbiAgICAgICAgICAgIHJldHVybiBpc1Byb21pc2Uob25FbmQkKSA/IG9uRW5kJC50aGVuKCgpID0+IHZhbHVlKSA6IHZhbHVlO1xuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGl0ZXJhdG9yLnJldHVybiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAkcmV0dXJuID0gaXRlcmF0b3IucmV0dXJuO1xuICAgICAgICBhYnJ1cHRDbG9zZSA9IChlcnJvcikgPT4ge1xuICAgICAgICAgICAgY29uc3QgcmV0aHJvdyA9ICgpID0+IFByb21pc2UucmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgIHJldHVybiAkcmV0dXJuLmNhbGwoaXRlcmF0b3IpLnRoZW4ocmV0aHJvdywgcmV0aHJvdyk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIGZ1bmN0aW9uIG1hcFJlc3VsdChyZXN1bHQpIHtcbiAgICAgICAgaWYgKHJlc3VsdC5kb25lKSB7XG4gICAgICAgICAgICByZXR1cm4gb25FbmRXaXRoVmFsdWUgPyBvbkVuZFdpdGhWYWx1ZShyZXN1bHQpIDogcmVzdWx0O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhc3luY01hcFZhbHVlKHJlc3VsdC52YWx1ZSwgb25OZXh0KS50aGVuKGl0ZXJhdG9yUmVzdWx0LCBhYnJ1cHRDbG9zZSk7XG4gICAgfVxuICAgIGxldCBtYXBSZWplY3Q7XG4gICAgaWYgKG9uRXJyb3IpIHtcbiAgICAgICAgLy8gQ2FwdHVyZSByZWplY3RDYWxsYmFjayB0byBlbnN1cmUgaXQgY2Fubm90IGJlIG51bGwuXG4gICAgICAgIGNvbnN0IHJlamVjdCA9IG9uRXJyb3I7XG4gICAgICAgIG1hcFJlamVjdCA9IChlcnJvcikgPT4gYXN5bmNNYXBWYWx1ZShlcnJvciwgcmVqZWN0KS50aGVuKGl0ZXJhdG9yUmVzdWx0LCBhYnJ1cHRDbG9zZSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIG5leHQoKSB7XG4gICAgICAgICAgICByZXR1cm4gaXRlcmF0b3IubmV4dCgpLnRoZW4obWFwUmVzdWx0LCBtYXBSZWplY3QpO1xuICAgICAgICB9LFxuICAgICAgICByZXR1cm4oKSB7XG4gICAgICAgICAgICBjb25zdCByZXMkID0gJHJldHVyblxuICAgICAgICAgICAgICAgID8gJHJldHVybi5jYWxsKGl0ZXJhdG9yKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KVxuICAgICAgICAgICAgICAgIDogUHJvbWlzZS5yZXNvbHZlKHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIHJldHVybiBvbkVuZFdpdGhWYWx1ZSA/IHJlcyQudGhlbihvbkVuZFdpdGhWYWx1ZSkgOiByZXMkO1xuICAgICAgICB9LFxuICAgICAgICB0aHJvdyhlcnJvcikge1xuICAgICAgICAgICAgaWYgKHR5cGVvZiBpdGVyYXRvci50aHJvdyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICAgICAgICAgIHJldHVybiBpdGVyYXRvci50aHJvdyhlcnJvcikudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpLmNhdGNoKGFicnVwdENsb3NlKTtcbiAgICAgICAgfSxcbiAgICAgICAgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9LFxuICAgIH07XG59XG5mdW5jdGlvbiBhc3luY01hcFZhbHVlKHZhbHVlLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHJlc29sdmUoY2FsbGJhY2sodmFsdWUpKSk7XG59XG5mdW5jdGlvbiBpdGVyYXRvclJlc3VsdCh2YWx1ZSkge1xuICAgIHJldHVybiB7IHZhbHVlLCBkb25lOiBmYWxzZSB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2V4ZWN1dG9yL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vcm9vdFR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRDtBQUNUO0FBQ2pDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsY0FBYyw4REFBa0Isd0NBQXdDLFdBQVc7QUFDbkY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ08seUJBQXlCLHFEQUFRO0FBQ3hDO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLHFEQUFRO0FBQ3BDO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLHFEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZXhlY3V0b3Ivbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9yb290VHlwZXMuanM/NDNiZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVHcmFwaFFMRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBtZW1vaXplMSB9IGZyb20gJy4vbWVtb2l6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmaW5lZFJvb3RUeXBlKHNjaGVtYSwgb3BlcmF0aW9uLCBub2Rlcykge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKTtcbiAgICBjb25zdCByb290VHlwZSA9IHJvb3RUeXBlTWFwLmdldChvcGVyYXRpb24pO1xuICAgIGlmIChyb290VHlwZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgU2NoZW1hIGlzIG5vdCBjb25maWd1cmVkIHRvIGV4ZWN1dGUgJHtvcGVyYXRpb259IG9wZXJhdGlvbi5gLCB7XG4gICAgICAgICAgICBub2RlcyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByb290VHlwZTtcbn1cbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZU5hbWVzID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVOYW1lcyhzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZXMgPSBnZXRSb290VHlwZXMoc2NoZW1hKTtcbiAgICByZXR1cm4gbmV3IFNldChbLi4ucm9vdFR5cGVzXS5tYXAodHlwZSA9PiB0eXBlLm5hbWUpKTtcbn0pO1xuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlcyA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlcyhzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IGdldFJvb3RUeXBlTWFwKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQocm9vdFR5cGVNYXAudmFsdWVzKCkpO1xufSk7XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVNYXAgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZU1hcChzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IG5ldyBNYXAoKTtcbiAgICBjb25zdCBxdWVyeVR5cGUgPSBzY2hlbWEuZ2V0UXVlcnlUeXBlKCk7XG4gICAgaWYgKHF1ZXJ5VHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ3F1ZXJ5JywgcXVlcnlUeXBlKTtcbiAgICB9XG4gICAgY29uc3QgbXV0YXRpb25UeXBlID0gc2NoZW1hLmdldE11dGF0aW9uVHlwZSgpO1xuICAgIGlmIChtdXRhdGlvblR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdtdXRhdGlvbicsIG11dGF0aW9uVHlwZSk7XG4gICAgfVxuICAgIGNvbnN0IHN1YnNjcmlwdGlvblR5cGUgPSBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpO1xuICAgIGlmIChzdWJzY3JpcHRpb25UeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgnc3Vic2NyaXB0aW9uJywgc3Vic2NyaXB0aW9uVHlwZSk7XG4gICAgfVxuICAgIHJldHVybiByb290VHlwZU1hcDtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/executor/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/esm/gateway.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/esm/gateway.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubgraphSDLQuery: () => (/* binding */ SubgraphSDLQuery),\n/* harmony export */   federationSubschemaTransformer: () => (/* binding */ federationSubschemaTransformer),\n/* harmony export */   getStitchedSchemaWithUrls: () => (/* binding */ getStitchedSchemaWithUrls),\n/* harmony export */   getSubschemaForFederationWithExecutor: () => (/* binding */ getSubschemaForFederationWithExecutor),\n/* harmony export */   getSubschemaForFederationWithSchema: () => (/* binding */ getSubschemaForFederationWithSchema),\n/* harmony export */   getSubschemaForFederationWithTypeDefs: () => (/* binding */ getSubschemaForFederationWithTypeDefs),\n/* harmony export */   getSubschemaForFederationWithURL: () => (/* binding */ getSubschemaForFederationWithURL)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_executor_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/executor-http */ \"(ssr)/../node_modules/@graphql-tools/executor-http/esm/index.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js\");\n/* harmony import */ var _graphql_tools_stitch__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/stitch */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/stitchSchemas.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n/* harmony import */ var _subgraph_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./subgraph.js */ \"(ssr)/../node_modules/@graphql-tools/federation/esm/subgraph.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/federation/esm/utils.js\");\n\n\n\n\n\n\n\n\nconst SubgraphSDLQuery = /* GraphQL */ `\n  query SubgraphSDL {\n    _service {\n      sdl\n    }\n  }\n`;\nasync function getSubschemaForFederationWithURL(config) {\n    const executor = (0,_graphql_tools_executor_http__WEBPACK_IMPORTED_MODULE_0__.buildHTTPExecutor)(config);\n    const subschemaConfig = await getSubschemaForFederationWithExecutor(executor);\n    return {\n        batch: true,\n        ...subschemaConfig,\n    };\n}\nfunction getSubschemaForFederationWithTypeDefs(typeDefs) {\n    const subschemaConfig = {};\n    const typeMergingConfig = (subschemaConfig.merge = subschemaConfig.merge || {});\n    const entityTypes = [];\n    const visitor = (node) => {\n        if (node.directives) {\n            const typeName = node.name.value;\n            const selections = [];\n            for (const directive of node.directives) {\n                const directiveArgs = directive.arguments || [];\n                switch (directive.name.value) {\n                    case 'key': {\n                        if (directiveArgs.some(arg => arg.name.value === 'resolvable' &&\n                            arg.value.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.BOOLEAN &&\n                            arg.value.value === false)) {\n                            continue;\n                        }\n                        const selectionValueNode = directiveArgs.find(arg => arg.name.value === 'fields')?.value;\n                        if (selectionValueNode?.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.STRING) {\n                            selections.push(selectionValueNode.value);\n                        }\n                        break;\n                    }\n                    case 'inaccessible':\n                        return null;\n                }\n            }\n            // If it is not an entity, continue\n            if (selections.length === 0) {\n                return node;\n            }\n            const typeMergingTypeConfig = (typeMergingConfig[typeName] =\n                typeMergingConfig[typeName] || {});\n            if (node.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_DEFINITION &&\n                !node.directives?.some(d => d.name.value === 'extends')) {\n                typeMergingTypeConfig.canonical = true;\n            }\n            entityTypes.push(typeName);\n            const selectionsStr = selections.join(' ');\n            typeMergingTypeConfig.selectionSet = `{ ${selectionsStr} }`;\n            typeMergingTypeConfig.dataLoaderOptions = {\n                cacheKeyFn: (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.getCacheKeyFnFromKey)(selectionsStr),\n            };\n            typeMergingTypeConfig.argsFromKeys = _utils_js__WEBPACK_IMPORTED_MODULE_2__.getArgsFromKeysForFederation;\n            typeMergingTypeConfig.fieldName = `_entities`;\n            typeMergingTypeConfig.key = _utils_js__WEBPACK_IMPORTED_MODULE_2__.getKeyForFederation;\n            const fields = [];\n            if (node.fields) {\n                for (const fieldNode of node.fields) {\n                    let removed = false;\n                    if (fieldNode.directives) {\n                        const fieldName = fieldNode.name.value;\n                        for (const directive of fieldNode.directives) {\n                            const directiveArgs = directive.arguments || [];\n                            switch (directive.name.value) {\n                                case 'requires': {\n                                    const typeMergingFieldsConfig = (typeMergingTypeConfig.fields =\n                                        typeMergingTypeConfig.fields || {});\n                                    typeMergingFieldsConfig[fieldName] = typeMergingFieldsConfig[fieldName] || {};\n                                    if (directiveArgs.some(arg => arg.name.value === 'resolvable' &&\n                                        arg.value.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.BOOLEAN &&\n                                        arg.value.value === false)) {\n                                        continue;\n                                    }\n                                    const selectionValueNode = directiveArgs.find(arg => arg.name.value === 'fields')?.value;\n                                    if (selectionValueNode?.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.STRING) {\n                                        typeMergingFieldsConfig[fieldName].selectionSet =\n                                            `{ ${selectionValueNode.value} }`;\n                                        typeMergingFieldsConfig[fieldName].computed = true;\n                                    }\n                                    break;\n                                }\n                                case 'external':\n                                case 'inaccessible': {\n                                    removed = !typeMergingTypeConfig.selectionSet?.includes(` ${fieldName} `);\n                                    break;\n                                }\n                                case 'override': {\n                                    const typeMergingFieldsConfig = (typeMergingTypeConfig.fields =\n                                        typeMergingTypeConfig.fields || {});\n                                    typeMergingFieldsConfig[fieldName] = typeMergingFieldsConfig[fieldName] || {};\n                                    typeMergingFieldsConfig[fieldName].canonical = true;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    if (!removed) {\n                        fields.push(fieldNode);\n                    }\n                }\n                node.fields = fields;\n            }\n        }\n        return {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_DEFINITION,\n        };\n    };\n    const parsedSDL = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.visit)(typeDefs, {\n        ObjectTypeExtension: visitor,\n        ObjectTypeDefinition: visitor,\n    });\n    let extraSdl = _subgraph_js__WEBPACK_IMPORTED_MODULE_4__.SubgraphBaseSDL;\n    if (entityTypes.length > 0) {\n        extraSdl += `\\nunion _Entity = ${entityTypes.join(' | ')}`;\n        extraSdl += `\\nextend type Query { _entities(representations: [_Any!]!): [_Entity]! }`;\n    }\n    subschemaConfig.schema = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.buildASTSchema)((0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_6__.mergeTypeDefs)([extraSdl, parsedSDL]), {\n        assumeValidSDL: true,\n        assumeValid: true,\n    });\n    return subschemaConfig;\n}\nasync function getSubschemaForFederationWithExecutor(executor) {\n    const sdlQueryResult = (await executor({\n        document: (0,graphql__WEBPACK_IMPORTED_MODULE_7__.parse)(SubgraphSDLQuery),\n    }));\n    if (sdlQueryResult.errors?.length) {\n        const error = sdlQueryResult.errors[0];\n        throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.createGraphQLError)(error.message, error);\n    }\n    if (!sdlQueryResult.data?._service?.sdl) {\n        throw new Error(`Unexpected result: ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.inspect)(sdlQueryResult)}`);\n    }\n    const typeDefs = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.parse)(sdlQueryResult.data._service.sdl);\n    const subschemaConfig = getSubschemaForFederationWithTypeDefs(typeDefs);\n    return {\n        ...subschemaConfig,\n        executor,\n    };\n}\nasync function getSubschemaForFederationWithSchema(schema) {\n    const executor = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_10__.createDefaultExecutor)(schema);\n    return getSubschemaForFederationWithExecutor(executor);\n}\nasync function getStitchedSchemaWithUrls(configs) {\n    const subschemas = await Promise.all(configs.map(config => getSubschemaForFederationWithURL(config)));\n    const schema = (0,_graphql_tools_stitch__WEBPACK_IMPORTED_MODULE_11__.stitchSchemas)({\n        subschemas,\n    });\n    return (0,_utils_js__WEBPACK_IMPORTED_MODULE_2__.filterInternalFieldsAndTypes)(schema);\n}\nconst federationSubschemaTransformer = function federationSubschemaTransformer(subschemaConfig) {\n    const typeDefs = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_12__.getDocumentNodeFromSchema)(subschemaConfig.schema);\n    const newSubschema = getSubschemaForFederationWithTypeDefs(typeDefs);\n    return {\n        ...subschemaConfig,\n        ...newSubschema,\n        merge: {\n            ...newSubschema.merge,\n            ...subschemaConfig.merge,\n        },\n    };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/esm/gateway.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/esm/subgraph.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/esm/subgraph.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SubgraphBaseSDL: () => (/* binding */ SubgraphBaseSDL),\n/* harmony export */   buildSubgraphSchema: () => (/* binding */ buildSubgraphSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/merge-resolvers.js\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/makeExecutableSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n\n\n\n\n\nconst SubgraphBaseSDL = /* GraphQL */ `\n  scalar _Any\n  scalar _FieldSet\n  scalar link__Import\n\n  enum link__Purpose {\n    SECURITY\n    EXECUTION\n  }\n\n  type _Service {\n    sdl: String!\n  }\n\n  type Query {\n    _service: _Service!\n  }\n\n  directive @external on FIELD_DEFINITION | OBJECT\n  directive @requires(fields: _FieldSet!) on FIELD_DEFINITION\n  directive @provides(fields: _FieldSet!) on FIELD_DEFINITION\n  directive @key(fields: _FieldSet!, resolvable: Boolean = true) repeatable on OBJECT | INTERFACE\n  directive @link(\n    url: String!\n    as: String\n    for: link__Purpose\n    import: [link__Import]\n  ) repeatable on SCHEMA\n  directive @shareable repeatable on OBJECT | FIELD_DEFINITION\n  directive @inaccessible on FIELD_DEFINITION | OBJECT | INTERFACE | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION\n  directive @tag(\n    name: String!\n  ) repeatable on FIELD_DEFINITION | INTERFACE | OBJECT | UNION | ARGUMENT_DEFINITION | SCALAR | ENUM | ENUM_VALUE | INPUT_OBJECT | INPUT_FIELD_DEFINITION\n  directive @override(from: String!) on FIELD_DEFINITION\n  directive @composeDirective(name: String!) repeatable on SCHEMA\n\n  directive @extends on OBJECT | INTERFACE\n`;\nfunction buildSubgraphSchema(optsOrModules) {\n    const opts = Array.isArray(optsOrModules)\n        ? {\n            typeDefs: optsOrModules.map(opt => opt.typeDefs),\n            resolvers: optsOrModules.map(opt => opt.resolvers).flat(),\n        }\n        : optsOrModules;\n    const entityTypeNames = [];\n    function handleEntity(node) {\n        if (node.directives?.some(directive => directive.name.value === 'key')) {\n            entityTypeNames.push(node.name.value);\n        }\n    }\n    const typeDefs = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.visit)((0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_2__.mergeTypeDefs)([SubgraphBaseSDL, opts.typeDefs]), {\n        ObjectTypeDefinition: node => {\n            handleEntity(node);\n        },\n        ObjectTypeExtension: node => {\n            handleEntity(node);\n            return {\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_TYPE_DEFINITION,\n                directives: [\n                    ...(node.directives || []),\n                    {\n                        kind: 'Directive',\n                        name: {\n                            kind: 'Name',\n                            value: 'extends',\n                        },\n                    },\n                ],\n            };\n        },\n    });\n    const givenResolvers = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__.mergeResolvers)(opts.resolvers);\n    const allTypeDefs = [typeDefs];\n    const allResolvers = [sdlResolvers, givenResolvers];\n    if (entityTypeNames.length > 0) {\n        allTypeDefs.push(`union _Entity = ${entityTypeNames.join(' | ')}`);\n        allTypeDefs.push(`extend type Query {\n      _entities(representations: [_Any!]!): [_Entity]!\n    }`);\n        allResolvers.push({\n            _Entity: {\n                __resolveType: entityTypeResolver,\n            },\n            Query: {\n                _entities: (_root, args, context, info) => value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise.all(args.representations.map(representation => new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => givenResolvers[representation.__typename]?.__resolveReference?.(representation, context, info)).then(resolvedEntity => {\n                    if (!resolvedEntity) {\n                        return representation;\n                    }\n                    if (!resolvedEntity.__typename) {\n                        resolvedEntity.__typename = representation.__typename;\n                    }\n                    return resolvedEntity;\n                }))).resolve(),\n            },\n        });\n    }\n    return (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_5__.makeExecutableSchema)({\n        assumeValid: true,\n        assumeValidSDL: true,\n        ...opts,\n        typeDefs: allTypeDefs,\n        resolvers: allResolvers,\n    });\n}\nfunction entityTypeResolver(obj) {\n    return obj.__typename;\n}\nconst sdlResolvers = {\n    Query: {\n        _service: () => ({}),\n    },\n    _Service: {\n        sdl: (_root, _args, _context, info) => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.printSchemaWithDirectives)(info.schema),\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vZXNtL3N1YmdyYXBoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUF1QztBQUNXO0FBQ21CO0FBQ1I7QUFDSTtBQUMxRDtBQUNQO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDhDQUFLLENBQUMsbUVBQWE7QUFDeEM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5Q0FBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckI7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsMkJBQTJCLG9FQUFjO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLDRDQUE0Qyw0QkFBNEI7QUFDeEU7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSwyREFBMkQsNERBQWMsb0RBQW9ELDREQUFjO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQSxXQUFXLDJFQUFvQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQjtBQUMzQixLQUFLO0FBQ0w7QUFDQSwrQ0FBK0MsK0VBQXlCO0FBQ3hFLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vZXNtL3N1YmdyYXBoLmpzPzk3OTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgdmlzaXQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuaW1wb3J0IHsgbWVyZ2VSZXNvbHZlcnMsIG1lcmdlVHlwZURlZnMgfSBmcm9tICdAZ3JhcGhxbC10b29scy9tZXJnZSc7XG5pbXBvcnQgeyBtYWtlRXhlY3V0YWJsZVNjaGVtYSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3NjaGVtYSc7XG5pbXBvcnQgeyBwcmludFNjaGVtYVdpdGhEaXJlY3RpdmVzIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGNvbnN0IFN1YmdyYXBoQmFzZVNETCA9IC8qIEdyYXBoUUwgKi8gYFxuICBzY2FsYXIgX0FueVxuICBzY2FsYXIgX0ZpZWxkU2V0XG4gIHNjYWxhciBsaW5rX19JbXBvcnRcblxuICBlbnVtIGxpbmtfX1B1cnBvc2Uge1xuICAgIFNFQ1VSSVRZXG4gICAgRVhFQ1VUSU9OXG4gIH1cblxuICB0eXBlIF9TZXJ2aWNlIHtcbiAgICBzZGw6IFN0cmluZyFcbiAgfVxuXG4gIHR5cGUgUXVlcnkge1xuICAgIF9zZXJ2aWNlOiBfU2VydmljZSFcbiAgfVxuXG4gIGRpcmVjdGl2ZSBAZXh0ZXJuYWwgb24gRklFTERfREVGSU5JVElPTiB8IE9CSkVDVFxuICBkaXJlY3RpdmUgQHJlcXVpcmVzKGZpZWxkczogX0ZpZWxkU2V0ISkgb24gRklFTERfREVGSU5JVElPTlxuICBkaXJlY3RpdmUgQHByb3ZpZGVzKGZpZWxkczogX0ZpZWxkU2V0ISkgb24gRklFTERfREVGSU5JVElPTlxuICBkaXJlY3RpdmUgQGtleShmaWVsZHM6IF9GaWVsZFNldCEsIHJlc29sdmFibGU6IEJvb2xlYW4gPSB0cnVlKSByZXBlYXRhYmxlIG9uIE9CSkVDVCB8IElOVEVSRkFDRVxuICBkaXJlY3RpdmUgQGxpbmsoXG4gICAgdXJsOiBTdHJpbmchXG4gICAgYXM6IFN0cmluZ1xuICAgIGZvcjogbGlua19fUHVycG9zZVxuICAgIGltcG9ydDogW2xpbmtfX0ltcG9ydF1cbiAgKSByZXBlYXRhYmxlIG9uIFNDSEVNQVxuICBkaXJlY3RpdmUgQHNoYXJlYWJsZSByZXBlYXRhYmxlIG9uIE9CSkVDVCB8IEZJRUxEX0RFRklOSVRJT05cbiAgZGlyZWN0aXZlIEBpbmFjY2Vzc2libGUgb24gRklFTERfREVGSU5JVElPTiB8IE9CSkVDVCB8IElOVEVSRkFDRSB8IFVOSU9OIHwgQVJHVU1FTlRfREVGSU5JVElPTiB8IFNDQUxBUiB8IEVOVU0gfCBFTlVNX1ZBTFVFIHwgSU5QVVRfT0JKRUNUIHwgSU5QVVRfRklFTERfREVGSU5JVElPTlxuICBkaXJlY3RpdmUgQHRhZyhcbiAgICBuYW1lOiBTdHJpbmchXG4gICkgcmVwZWF0YWJsZSBvbiBGSUVMRF9ERUZJTklUSU9OIHwgSU5URVJGQUNFIHwgT0JKRUNUIHwgVU5JT04gfCBBUkdVTUVOVF9ERUZJTklUSU9OIHwgU0NBTEFSIHwgRU5VTSB8IEVOVU1fVkFMVUUgfCBJTlBVVF9PQkpFQ1QgfCBJTlBVVF9GSUVMRF9ERUZJTklUSU9OXG4gIGRpcmVjdGl2ZSBAb3ZlcnJpZGUoZnJvbTogU3RyaW5nISkgb24gRklFTERfREVGSU5JVElPTlxuICBkaXJlY3RpdmUgQGNvbXBvc2VEaXJlY3RpdmUobmFtZTogU3RyaW5nISkgcmVwZWF0YWJsZSBvbiBTQ0hFTUFcblxuICBkaXJlY3RpdmUgQGV4dGVuZHMgb24gT0JKRUNUIHwgSU5URVJGQUNFXG5gO1xuZXhwb3J0IGZ1bmN0aW9uIGJ1aWxkU3ViZ3JhcGhTY2hlbWEob3B0c09yTW9kdWxlcykge1xuICAgIGNvbnN0IG9wdHMgPSBBcnJheS5pc0FycmF5KG9wdHNPck1vZHVsZXMpXG4gICAgICAgID8ge1xuICAgICAgICAgICAgdHlwZURlZnM6IG9wdHNPck1vZHVsZXMubWFwKG9wdCA9PiBvcHQudHlwZURlZnMpLFxuICAgICAgICAgICAgcmVzb2x2ZXJzOiBvcHRzT3JNb2R1bGVzLm1hcChvcHQgPT4gb3B0LnJlc29sdmVycykuZmxhdCgpLFxuICAgICAgICB9XG4gICAgICAgIDogb3B0c09yTW9kdWxlcztcbiAgICBjb25zdCBlbnRpdHlUeXBlTmFtZXMgPSBbXTtcbiAgICBmdW5jdGlvbiBoYW5kbGVFbnRpdHkobm9kZSkge1xuICAgICAgICBpZiAobm9kZS5kaXJlY3RpdmVzPy5zb21lKGRpcmVjdGl2ZSA9PiBkaXJlY3RpdmUubmFtZS52YWx1ZSA9PT0gJ2tleScpKSB7XG4gICAgICAgICAgICBlbnRpdHlUeXBlTmFtZXMucHVzaChub2RlLm5hbWUudmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHR5cGVEZWZzID0gdmlzaXQobWVyZ2VUeXBlRGVmcyhbU3ViZ3JhcGhCYXNlU0RMLCBvcHRzLnR5cGVEZWZzXSksIHtcbiAgICAgICAgT2JqZWN0VHlwZURlZmluaXRpb246IG5vZGUgPT4ge1xuICAgICAgICAgICAgaGFuZGxlRW50aXR5KG5vZGUpO1xuICAgICAgICB9LFxuICAgICAgICBPYmplY3RUeXBlRXh0ZW5zaW9uOiBub2RlID0+IHtcbiAgICAgICAgICAgIGhhbmRsZUVudGl0eShub2RlKTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk9CSkVDVF9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAuLi4obm9kZS5kaXJlY3RpdmVzIHx8IFtdKSxcbiAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAga2luZDogJ0RpcmVjdGl2ZScsXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZDogJ05hbWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnZXh0ZW5kcycsXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgIH0pO1xuICAgIGNvbnN0IGdpdmVuUmVzb2x2ZXJzID0gbWVyZ2VSZXNvbHZlcnMob3B0cy5yZXNvbHZlcnMpO1xuICAgIGNvbnN0IGFsbFR5cGVEZWZzID0gW3R5cGVEZWZzXTtcbiAgICBjb25zdCBhbGxSZXNvbHZlcnMgPSBbc2RsUmVzb2x2ZXJzLCBnaXZlblJlc29sdmVyc107XG4gICAgaWYgKGVudGl0eVR5cGVOYW1lcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIGFsbFR5cGVEZWZzLnB1c2goYHVuaW9uIF9FbnRpdHkgPSAke2VudGl0eVR5cGVOYW1lcy5qb2luKCcgfCAnKX1gKTtcbiAgICAgICAgYWxsVHlwZURlZnMucHVzaChgZXh0ZW5kIHR5cGUgUXVlcnkge1xuICAgICAgX2VudGl0aWVzKHJlcHJlc2VudGF0aW9uczogW19BbnkhXSEpOiBbX0VudGl0eV0hXG4gICAgfWApO1xuICAgICAgICBhbGxSZXNvbHZlcnMucHVzaCh7XG4gICAgICAgICAgICBfRW50aXR5OiB7XG4gICAgICAgICAgICAgICAgX19yZXNvbHZlVHlwZTogZW50aXR5VHlwZVJlc29sdmVyLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFF1ZXJ5OiB7XG4gICAgICAgICAgICAgICAgX2VudGl0aWVzOiAoX3Jvb3QsIGFyZ3MsIGNvbnRleHQsIGluZm8pID0+IFZhbHVlT3JQcm9taXNlLmFsbChhcmdzLnJlcHJlc2VudGF0aW9ucy5tYXAocmVwcmVzZW50YXRpb24gPT4gbmV3IFZhbHVlT3JQcm9taXNlKCgpID0+IGdpdmVuUmVzb2x2ZXJzW3JlcHJlc2VudGF0aW9uLl9fdHlwZW5hbWVdPy5fX3Jlc29sdmVSZWZlcmVuY2U/LihyZXByZXNlbnRhdGlvbiwgY29udGV4dCwgaW5mbykpLnRoZW4ocmVzb2x2ZWRFbnRpdHkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXJlc29sdmVkRW50aXR5KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVwcmVzZW50YXRpb247XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXNvbHZlZEVudGl0eS5fX3R5cGVuYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlZEVudGl0eS5fX3R5cGVuYW1lID0gcmVwcmVzZW50YXRpb24uX190eXBlbmFtZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzb2x2ZWRFbnRpdHk7XG4gICAgICAgICAgICAgICAgfSkpKS5yZXNvbHZlKCksXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIG1ha2VFeGVjdXRhYmxlU2NoZW1hKHtcbiAgICAgICAgYXNzdW1lVmFsaWQ6IHRydWUsXG4gICAgICAgIGFzc3VtZVZhbGlkU0RMOiB0cnVlLFxuICAgICAgICAuLi5vcHRzLFxuICAgICAgICB0eXBlRGVmczogYWxsVHlwZURlZnMsXG4gICAgICAgIHJlc29sdmVyczogYWxsUmVzb2x2ZXJzLFxuICAgIH0pO1xufVxuZnVuY3Rpb24gZW50aXR5VHlwZVJlc29sdmVyKG9iaikge1xuICAgIHJldHVybiBvYmouX190eXBlbmFtZTtcbn1cbmNvbnN0IHNkbFJlc29sdmVycyA9IHtcbiAgICBRdWVyeToge1xuICAgICAgICBfc2VydmljZTogKCkgPT4gKHt9KSxcbiAgICB9LFxuICAgIF9TZXJ2aWNlOiB7XG4gICAgICAgIHNkbDogKF9yb290LCBfYXJncywgX2NvbnRleHQsIGluZm8pID0+IHByaW50U2NoZW1hV2l0aERpcmVjdGl2ZXMoaW5mby5zY2hlbWEpLFxuICAgIH0sXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/esm/subgraph.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/esm/utils.js":
/*!**************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/esm/utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventEmitter: () => (/* binding */ EventEmitter),\n/* harmony export */   filterInternalFieldsAndTypes: () => (/* binding */ filterInternalFieldsAndTypes),\n/* harmony export */   getArgsFromKeysForFederation: () => (/* binding */ getArgsFromKeysForFederation),\n/* harmony export */   getCacheKeyFnFromKey: () => (/* binding */ getCacheKeyFnFromKey),\n/* harmony export */   getKeyFnForFederation: () => (/* binding */ getKeyFnForFederation),\n/* harmony export */   getKeyForFederation: () => (/* binding */ getKeyForFederation),\n/* harmony export */   getNamedTypeNode: () => (/* binding */ getNamedTypeNode),\n/* harmony export */   projectDataSelectionSet: () => (/* binding */ projectDataSelectionSet)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/selectionSets.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n\n\nfunction getArgsFromKeysForFederation(representations) {\n    return { representations };\n}\nfunction getKeyForFederation(root) {\n    return root;\n}\nfunction projectDataSelectionSet(data, selectionSet) {\n    if (data == null || selectionSet == null) {\n        return data;\n    }\n    if (data instanceof Error) {\n        return null;\n    }\n    if (Array.isArray(data)) {\n        return data.map(entry => projectDataSelectionSet(entry, selectionSet));\n    }\n    const projectedData = {\n        __typename: data.__typename,\n    };\n    for (const selection of selectionSet.selections) {\n        if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD) {\n            const fieldName = selection.name.value;\n            const responseKey = selection.alias?.value || selection.name.value;\n            if (Object.prototype.hasOwnProperty.call(data, responseKey)) {\n                const projectedKeyData = projectDataSelectionSet(data[responseKey], selection.selectionSet);\n                if (projectedData[fieldName]) {\n                    if (projectedKeyData != null && !(projectedKeyData instanceof Error)) {\n                        projectedData[fieldName] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)([projectedData[fieldName], projectedKeyData], undefined, true, true);\n                    }\n                }\n                else {\n                    projectedData[fieldName] = projectedKeyData;\n                }\n            }\n        }\n        else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT) {\n            if (selection.typeCondition &&\n                projectedData['__typename'] != null &&\n                projectedData['__typename'] !== selection.typeCondition.name.value) {\n                continue;\n            }\n            Object.assign(projectedData, (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)([projectedData, projectDataSelectionSet(data, selection.selectionSet)], undefined, true, true));\n        }\n    }\n    return projectedData;\n}\nfunction getKeyFnForFederation(typeName, keys) {\n    if (keys.some(key => key.includes('{') || key.includes('('))) {\n        const parsedSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(`{${keys.join(' ')}}`, { noLocation: true });\n        return function keyFn(root) {\n            return projectDataSelectionSet({\n                __typename: typeName,\n                ...root,\n            }, parsedSelectionSet);\n        };\n    }\n    const allKeyProps = keys.flatMap(key => key.split(' ')).map(key => key.trim());\n    if (allKeyProps.length > 1) {\n        return function keyFn(root) {\n            return allKeyProps.reduce((prev, key) => {\n                if (key !== '__typename') {\n                    prev[key] = root[key];\n                }\n                return prev;\n            }, { __typename: typeName });\n        };\n    }\n    const keyProp = allKeyProps[0];\n    return function keyFn(root) {\n        return {\n            __typename: typeName,\n            [keyProp]: root[keyProp],\n        };\n    };\n}\nfunction getCacheKeyFnFromKey(key) {\n    if (key.includes('{') || key.includes('(')) {\n        const parsedSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(`{${key}}`, { noLocation: true });\n        return function cacheKeyFn(root) {\n            return JSON.stringify(projectDataSelectionSet(root, parsedSelectionSet));\n        };\n    }\n    const keyTrimmed = key.trim();\n    const keys = keyTrimmed.split(' ').map(key => key.trim());\n    if (keys.length > 1) {\n        return function cacheKeyFn(root) {\n            return keys.map(key => root[key]).join(' ');\n        };\n    }\n    return function cacheKeyFn(root) {\n        return root[keyTrimmed];\n    };\n}\nconst internalTypeNames = ['_Entity', '_Any', '_FieldSet', '_Service', 'link', 'inaccessible'];\nfunction filterInternalFieldsAndTypes(finalSchema) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.mapSchema)(finalSchema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.DIRECTIVE]: directive => {\n            if (internalTypeNames.includes(directive.name) ||\n                directive.name.startsWith('link__') ||\n                directive.name.startsWith('join__') ||\n                directive.name.startsWith('core__')) {\n                return null;\n            }\n            return directive;\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.TYPE]: type => {\n            if (internalTypeNames.includes(type.name) ||\n                type.name.startsWith('link__') ||\n                type.name.startsWith('join__') ||\n                type.name.startsWith('core__') ||\n                type.astNode?.directives?.some(d => d.name.value === 'inaccessible')) {\n                return null;\n            }\n            return type;\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.COMPOSITE_FIELD]: fieldConfig => {\n            if (fieldConfig.astNode?.directives?.some(d => d.name.value === 'inaccessible')) {\n                return null;\n            }\n            return fieldConfig;\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.QUERY_ROOT_FIELD]: (fieldConfig, fieldName) => {\n            if (fieldName === '_entities') {\n                return null;\n            }\n            return fieldConfig;\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.ENUM_VALUE]: valueConfig => {\n            if (valueConfig.astNode?.directives?.some(d => d.name.value === 'inaccessible')) {\n                return null;\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.ARGUMENT]: argConfig => {\n            if (argConfig.astNode?.directives?.some(d => d.name.value === 'inaccessible')) {\n                return null;\n            }\n            return argConfig;\n        },\n    });\n}\nfunction getNamedTypeNode(typeNode) {\n    if (typeNode.kind !== graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAMED_TYPE) {\n        return getNamedTypeNode(typeNode.type);\n    }\n    return typeNode;\n}\nclass EventEmitter {\n    #listeners = new Map();\n    on(eventName, listener) {\n        const listeners = this.#listeners.get(eventName);\n        if (!listeners) {\n            this.#listeners.set(eventName, [listener]);\n        }\n        else {\n            listeners.push(listener);\n        }\n        return this;\n    }\n    once(eventName, listener) {\n        const selfRemovingListener = (...args) => {\n            this.off(eventName, selfRemovingListener);\n            listener(...args);\n        };\n        this.on(eventName, selfRemovingListener);\n        return this;\n    }\n    off(eventName, listener) {\n        const listeners = this.#listeners.get(eventName);\n        if (listeners) {\n            const index = listeners.indexOf(listener);\n            listeners.splice(index, 1);\n        }\n        return this;\n    }\n    emit(eventName, ...args) {\n        const listeners = this.#listeners.get(eventName);\n        if (!listeners) {\n            return false;\n        }\n        for (let i = listeners.length - 1; i >= 0; i--) {\n            listeners[i](...args);\n        }\n        return true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/esm/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addResolversToSchema: () => (/* binding */ addResolversToSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/heal.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachField.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _checkForResolveTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkForResolveTypeResolver.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js\");\n/* harmony import */ var _extendResolversFromInterfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extendResolversFromInterfaces.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\");\n\n\n\n\nfunction addResolversToSchema({ schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, }) {\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? (0,_extendResolversFromInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.extendResolversFromInterfaces)(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            const msg = `\"${typeName}\" defined in resolvers, but not in schema`;\n            if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'error') {\n                if (requireResolversToMatchSchema === 'warn') {\n                    console.warn(msg);\n                }\n                continue;\n            }\n            throw new Error(msg);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    const msg = `${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`;\n                    if (requireResolversToMatchSchema === 'error') {\n                        throw new Error(msg);\n                    }\n                    else {\n                        console.warn(msg);\n                    }\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    const msg = `${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`;\n                    if (requireResolversToMatchSchema === 'error') {\n                        throw new Error(msg);\n                    }\n                    else {\n                        console.warn(msg);\n                    }\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            const msg = `${typeName}.${fieldName} defined in resolvers, but not in schema`;\n                            if (requireResolversToMatchSchema === 'error') {\n                                throw new Error(msg);\n                            }\n                            else {\n                                console.error(msg);\n                            }\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        (0,_checkForResolveTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__.checkForResolveTypeResolver)(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isScalarType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: resolverValue?.astNode?.description ??\n                            type.astNode.description,\n                        directives: (type.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: resolverValue?.astNode?.description ??\n                            config.astNode.description,\n                        directives: (config.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType(config);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    continue;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.forEachDefaultValue)(schema, _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.healSchema)(schema);\n    // reparse all default values with new parsing functions.\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.forEachDefaultValue)(schema, _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.parseInputValue);\n    if (defaultFieldResolver != null) {\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.forEachField)(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.SCALAR_TYPE]: type => {\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: resolverValue?.astNode?.description ??\n                                config.astNode.description,\n                            directives: (config.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLScalarType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.ENUM_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: resolverValue?.astNode?.description ??\n                                config.astNode.description,\n                            directives: (config.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLUnionType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLInterfaceType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.mapSchema)(schema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js":
/*!******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertResolversPresent: () => (/* binding */ assertResolversPresent)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachField.js\");\n\n\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.forEachField)(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)((0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDRDtBQUM3QyxzRUFBc0U7QUFDN0UsWUFBWSxzRkFBc0Y7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksa0VBQVk7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELHFEQUFZLENBQUMscURBQVk7QUFDbkY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsU0FBUyxHQUFHLFVBQVU7QUFDdkU7QUFDQTtBQUNBLE1BQU0sVUFBVTtBQUNoQixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLFNBQVMsR0FBRyxVQUFVO0FBQzNEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvZXNtL2Fzc2VydFJlc29sdmVyc1ByZXNlbnQuanM/OGU0YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW1lZFR5cGUsIGlzU2NhbGFyVHlwZSB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZm9yRWFjaEZpZWxkIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFJlc29sdmVyc1ByZXNlbnQoc2NoZW1hLCByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzLCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyLCByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIH0gPSByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zO1xuICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzICYmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyB8fCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIHRha2VzIHByZWNlZGVuY2Ugb3ZlciB0aGUgbW9yZSBzcGVjaWZpYyBhc3NlcnRpb25zLiAnICtcbiAgICAgICAgICAgICdQbGVhc2UgY29uZmlndXJlIGVpdGhlciByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIG9yIHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzIC8gJyArXG4gICAgICAgICAgICAncmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhciwgYnV0IG5vdCBhIGNvbWJpbmF0aW9uIG9mIHRoZW0uJyk7XG4gICAgfVxuICAgIGZvckVhY2hGaWVsZChzY2hlbWEsIChmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSkgPT4ge1xuICAgICAgICAvLyByZXF1aXJlcyBhIHJlc29sdmVyIGZvciAqZXZlcnkqIGZpZWxkLlxuICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcykge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZXIoJ3JlcXVpcmVSZXNvbHZlcnNGb3JBbGxGaWVsZHMnLCByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzLCBmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlciBvbiBldmVyeSBmaWVsZCB0aGF0IGhhcyBhcmd1bWVudHNcbiAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzICYmIGZpZWxkLmFyZ3MubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZXIoJ3JlcXVpcmVSZXNvbHZlcnNGb3JBcmdzJywgcmVxdWlyZVJlc29sdmVyc0ZvckFyZ3MsIGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgfVxuICAgICAgICAvLyByZXF1aXJlcyBhIHJlc29sdmVyIG9uIGV2ZXJ5IGZpZWxkIHRoYXQgcmV0dXJucyBhIG5vbi1zY2FsYXIgdHlwZVxuICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhciAhPT0gJ2lnbm9yZScgJiYgIWlzU2NhbGFyVHlwZShnZXROYW1lZFR5cGUoZmllbGQudHlwZSkpKSB7XG4gICAgICAgICAgICBleHBlY3RSZXNvbHZlcigncmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhcicsIHJlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIsIGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZnVuY3Rpb24gZXhwZWN0UmVzb2x2ZXIodmFsaWRhdG9yLCBiZWhhdmlvciwgZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpIHtcbiAgICBpZiAoIWZpZWxkLnJlc29sdmUpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IGBSZXNvbHZlciBtaXNzaW5nIGZvciBcIiR7dHlwZU5hbWV9LiR7ZmllbGROYW1lfVwiLlxuVG8gZGlzYWJsZSB0aGlzIHZhbGlkYXRvciwgdXNlOlxuICByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zOiB7XG4gICAgJHt2YWxpZGF0b3J9OiAnaWdub3JlJ1xuICB9YDtcbiAgICAgICAgaWYgKGJlaGF2aW9yID09PSAnZXJyb3InKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJlaGF2aW9yID09PSAnd2FybicpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZmllbGQucmVzb2x2ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlc29sdmVyIFwiJHt0eXBlTmFtZX0uJHtmaWVsZE5hbWV9XCIgbXVzdCBiZSBhIGZ1bmN0aW9uYCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkForResolveTypeResolver: () => (/* binding */ checkForResolveTypeResolver)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2RDtBQUM3RDtBQUNPO0FBQ1AsSUFBSSwrREFBUztBQUNiLFNBQVMsNERBQVU7QUFDbkI7QUFDQSx5Q0FBeUMsVUFBVTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9jaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIuanM/MGJhMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXBwZXJLaW5kLCBtYXBTY2hlbWEgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG4vLyBJZiB3ZSBoYXZlIGFueSB1bmlvbiBvciBpbnRlcmZhY2UgdHlwZXMgdGhyb3cgaWYgbm8gdGhlcmUgaXMgbm8gcmVzb2x2ZVR5cGUgcmVzb2x2ZXJcbmV4cG9ydCBmdW5jdGlvbiBjaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIoc2NoZW1hLCByZXF1aXJlUmVzb2x2ZXJzRm9yUmVzb2x2ZVR5cGUpIHtcbiAgICBtYXBTY2hlbWEoc2NoZW1hLCB7XG4gICAgICAgIFtNYXBwZXJLaW5kLkFCU1RSQUNUX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIGlmICghdHlwZS5yZXNvbHZlVHlwZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgVHlwZSBcIiR7dHlwZS5uYW1lfVwiIGlzIG1pc3NpbmcgYSBcIl9fcmVzb2x2ZVR5cGVcIiByZXNvbHZlci4gUGFzcyAnaWdub3JlJyBpbnRvIGAgK1xuICAgICAgICAgICAgICAgICAgICAnXCJyZXNvbHZlclZhbGlkYXRpb25PcHRpb25zLnJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZVwiIHRvIGRpc2FibGUgdGhpcyBlcnJvci4nO1xuICAgICAgICAgICAgICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yUmVzb2x2ZVR5cGUgPT09ICdlcnJvcicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvclJlc29sdmVUeXBlID09PSAnd2FybicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js":
/*!*************************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js ***!
  \*************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extendResolversFromInterfaces: () => (/* binding */ extendResolversFromInterfaces)\n/* harmony export */ });\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9leHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcy5qcz8wMjU2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyhzY2hlbWEsIHJlc29sdmVycykge1xuICAgIGNvbnN0IGV4dGVuZGVkUmVzb2x2ZXJzID0ge307XG4gICAgY29uc3QgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgaWYgKCdnZXRJbnRlcmZhY2VzJyBpbiB0eXBlKSB7XG4gICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaUZhY2Ugb2YgdHlwZS5nZXRJbnRlcmZhY2VzKCkpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzb2x2ZXJzW2lGYWNlLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHJlc29sdmVyc1tpRmFjZS5uYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkTmFtZSA9PT0gJ19faXNUeXBlT2YnIHx8ICFmaWVsZE5hbWUuc3RhcnRzV2l0aCgnX18nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVuZGVkUmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdID0gcmVzb2x2ZXJzW2lGYWNlLm5hbWVdW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0eXBlUmVzb2x2ZXJzID0gcmVzb2x2ZXJzW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGV4dGVuZGVkUmVzb2x2ZXJzW3R5cGVOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAuLi5leHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0sXG4gICAgICAgICAgICAgICAgLi4udHlwZVJlc29sdmVycyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB0eXBlUmVzb2x2ZXJzID0gcmVzb2x2ZXJzW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGlmICh0eXBlUmVzb2x2ZXJzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB0eXBlUmVzb2x2ZXJzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBleHRlbmRlZFJlc29sdmVycztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/makeExecutableSchema.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/makeExecutableSchema.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   makeExecutableSchema: () => (/* binding */ makeExecutableSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildASTSchema.mjs\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/merge-resolvers.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/extensions.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _addResolversToSchema_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./addResolversToSchema.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js\");\n/* harmony import */ var _assertResolversPresent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./assertResolversPresent.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js\");\n\n\n\n\n\n/**\n * Builds a schema from the provided type definitions and resolvers.\n *\n * The type definitions are written using Schema Definition Language (SDL). They\n * can be provided as a string, a `DocumentNode`, a function, or an array of any\n * of these. If a function is provided, it will be passed no arguments and\n * should return an array of strings or `DocumentNode`s.\n *\n * Note: You can use GraphQL magic comment provide additional syntax\n * highlighting in your editor (with the appropriate editor plugin).\n *\n * ```js\n * const typeDefs = /* GraphQL *\\/ `\n *   type Query {\n *     posts: [Post]\n *     author(id: Int!): Author\n *   }\n * `;\n * ```\n *\n * The `resolvers` object should be a map of type names to nested object, which\n * themselves map the type's fields to their appropriate resolvers.\n * See the [Resolvers](/docs/resolvers) section of the documentation for more details.\n *\n * ```js\n * const resolvers = {\n *   Query: {\n *     posts: (obj, args, ctx, info) => getAllPosts(),\n *     author: (obj, args, ctx, info) => getAuthorById(args.id)\n *   }\n * };\n * ```\n *\n * Once you've defined both the `typeDefs` and `resolvers`, you can create your\n * schema:\n *\n * ```js\n * const schema = makeExecutableSchema({\n *   typeDefs,\n *   resolvers,\n * })\n * ```\n */\nfunction makeExecutableSchema({ typeDefs, resolvers = {}, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, schemaExtensions, defaultFieldResolver, ...otherOptions }) {\n    // Validate and clean up arguments\n    if (typeof resolverValidationOptions !== 'object') {\n        throw new Error('Expected `resolverValidationOptions` to be an object');\n    }\n    if (!typeDefs) {\n        throw new Error('Must provide typeDefs');\n    }\n    let schema;\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSchema)(typeDefs)) {\n        schema = typeDefs;\n    }\n    else if (otherOptions?.commentDescriptions) {\n        const mergedTypeDefs = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_1__.mergeTypeDefs)(typeDefs, {\n            ...otherOptions,\n            commentDescriptions: true,\n        });\n        schema = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.buildSchema)(mergedTypeDefs, otherOptions);\n    }\n    else {\n        const mergedTypeDefs = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_1__.mergeTypeDefs)(typeDefs, otherOptions);\n        schema = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.buildASTSchema)(mergedTypeDefs, otherOptions);\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    schema = (0,_addResolversToSchema_js__WEBPACK_IMPORTED_MODULE_3__.addResolversToSchema)({\n        schema,\n        resolvers: (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__.mergeResolvers)(resolvers),\n        resolverValidationOptions,\n        inheritResolversFromInterfaces,\n        updateResolversInPlace,\n        defaultFieldResolver,\n    });\n    if (Object.keys(resolverValidationOptions).length > 0) {\n        (0,_assertResolversPresent_js__WEBPACK_IMPORTED_MODULE_5__.assertResolversPresent)(schema, resolverValidationOptions);\n    }\n    if (schemaExtensions) {\n        for (const schemaExtension of (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.asArray)(schemaExtensions)) {\n            (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_7__.applyExtensions)(schema, schemaExtension);\n        }\n    }\n    return schema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vbWFrZUV4ZWN1dGFibGVTY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWdFO0FBQ3NCO0FBQ3ZDO0FBQ2tCO0FBQ0k7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNPLGdDQUFnQyx3QkFBd0IsZ0NBQWdDLG1JQUFtSTtBQUNsTztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpREFBUTtBQUNoQjtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsbUVBQWE7QUFDNUM7QUFDQTtBQUNBLFNBQVM7QUFDVCxpQkFBaUIsb0RBQVc7QUFDNUI7QUFDQTtBQUNBLCtCQUErQixtRUFBYTtBQUM1QyxpQkFBaUIsdURBQWM7QUFDL0I7QUFDQTtBQUNBLGFBQWEsOEVBQW9CO0FBQ2pDO0FBQ0EsbUJBQW1CLG9FQUFjO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsUUFBUSxrRkFBc0I7QUFDOUI7QUFDQTtBQUNBLHNDQUFzQyw2REFBTztBQUM3QyxZQUFZLHFFQUFlO0FBQzNCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9tYWtlRXhlY3V0YWJsZVNjaGVtYS5qcz9hN2RiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1aWxkQVNUU2NoZW1hLCBidWlsZFNjaGVtYSwgaXNTY2hlbWEgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGFwcGx5RXh0ZW5zaW9ucywgbWVyZ2VSZXNvbHZlcnMsIG1lcmdlVHlwZURlZnMgfSBmcm9tICdAZ3JhcGhxbC10b29scy9tZXJnZSc7XG5pbXBvcnQgeyBhc0FycmF5IH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgYWRkUmVzb2x2ZXJzVG9TY2hlbWEgfSBmcm9tICcuL2FkZFJlc29sdmVyc1RvU2NoZW1hLmpzJztcbmltcG9ydCB7IGFzc2VydFJlc29sdmVyc1ByZXNlbnQgfSBmcm9tICcuL2Fzc2VydFJlc29sdmVyc1ByZXNlbnQuanMnO1xuLyoqXG4gKiBCdWlsZHMgYSBzY2hlbWEgZnJvbSB0aGUgcHJvdmlkZWQgdHlwZSBkZWZpbml0aW9ucyBhbmQgcmVzb2x2ZXJzLlxuICpcbiAqIFRoZSB0eXBlIGRlZmluaXRpb25zIGFyZSB3cml0dGVuIHVzaW5nIFNjaGVtYSBEZWZpbml0aW9uIExhbmd1YWdlIChTREwpLiBUaGV5XG4gKiBjYW4gYmUgcHJvdmlkZWQgYXMgYSBzdHJpbmcsIGEgYERvY3VtZW50Tm9kZWAsIGEgZnVuY3Rpb24sIG9yIGFuIGFycmF5IG9mIGFueVxuICogb2YgdGhlc2UuIElmIGEgZnVuY3Rpb24gaXMgcHJvdmlkZWQsIGl0IHdpbGwgYmUgcGFzc2VkIG5vIGFyZ3VtZW50cyBhbmRcbiAqIHNob3VsZCByZXR1cm4gYW4gYXJyYXkgb2Ygc3RyaW5ncyBvciBgRG9jdW1lbnROb2RlYHMuXG4gKlxuICogTm90ZTogWW91IGNhbiB1c2UgR3JhcGhRTCBtYWdpYyBjb21tZW50IHByb3ZpZGUgYWRkaXRpb25hbCBzeW50YXhcbiAqIGhpZ2hsaWdodGluZyBpbiB5b3VyIGVkaXRvciAod2l0aCB0aGUgYXBwcm9wcmlhdGUgZWRpdG9yIHBsdWdpbikuXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHR5cGVEZWZzID0gLyogR3JhcGhRTCAqXFwvIGBcbiAqICAgdHlwZSBRdWVyeSB7XG4gKiAgICAgcG9zdHM6IFtQb3N0XVxuICogICAgIGF1dGhvcihpZDogSW50ISk6IEF1dGhvclxuICogICB9XG4gKiBgO1xuICogYGBgXG4gKlxuICogVGhlIGByZXNvbHZlcnNgIG9iamVjdCBzaG91bGQgYmUgYSBtYXAgb2YgdHlwZSBuYW1lcyB0byBuZXN0ZWQgb2JqZWN0LCB3aGljaFxuICogdGhlbXNlbHZlcyBtYXAgdGhlIHR5cGUncyBmaWVsZHMgdG8gdGhlaXIgYXBwcm9wcmlhdGUgcmVzb2x2ZXJzLlxuICogU2VlIHRoZSBbUmVzb2x2ZXJzXSgvZG9jcy9yZXNvbHZlcnMpIHNlY3Rpb24gb2YgdGhlIGRvY3VtZW50YXRpb24gZm9yIG1vcmUgZGV0YWlscy5cbiAqXG4gKiBgYGBqc1xuICogY29uc3QgcmVzb2x2ZXJzID0ge1xuICogICBRdWVyeToge1xuICogICAgIHBvc3RzOiAob2JqLCBhcmdzLCBjdHgsIGluZm8pID0+IGdldEFsbFBvc3RzKCksXG4gKiAgICAgYXV0aG9yOiAob2JqLCBhcmdzLCBjdHgsIGluZm8pID0+IGdldEF1dGhvckJ5SWQoYXJncy5pZClcbiAqICAgfVxuICogfTtcbiAqIGBgYFxuICpcbiAqIE9uY2UgeW91J3ZlIGRlZmluZWQgYm90aCB0aGUgYHR5cGVEZWZzYCBhbmQgYHJlc29sdmVyc2AsIHlvdSBjYW4gY3JlYXRlIHlvdXJcbiAqIHNjaGVtYTpcbiAqXG4gKiBgYGBqc1xuICogY29uc3Qgc2NoZW1hID0gbWFrZUV4ZWN1dGFibGVTY2hlbWEoe1xuICogICB0eXBlRGVmcyxcbiAqICAgcmVzb2x2ZXJzLFxuICogfSlcbiAqIGBgYFxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFrZUV4ZWN1dGFibGVTY2hlbWEoeyB0eXBlRGVmcywgcmVzb2x2ZXJzID0ge30sIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMgPSB7fSwgaW5oZXJpdFJlc29sdmVyc0Zyb21JbnRlcmZhY2VzID0gZmFsc2UsIHVwZGF0ZVJlc29sdmVyc0luUGxhY2UgPSBmYWxzZSwgc2NoZW1hRXh0ZW5zaW9ucywgZGVmYXVsdEZpZWxkUmVzb2x2ZXIsIC4uLm90aGVyT3B0aW9ucyB9KSB7XG4gICAgLy8gVmFsaWRhdGUgYW5kIGNsZWFuIHVwIGFyZ3VtZW50c1xuICAgIGlmICh0eXBlb2YgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucyAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9uc2AgdG8gYmUgYW4gb2JqZWN0Jyk7XG4gICAgfVxuICAgIGlmICghdHlwZURlZnMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNdXN0IHByb3ZpZGUgdHlwZURlZnMnKTtcbiAgICB9XG4gICAgbGV0IHNjaGVtYTtcbiAgICBpZiAoaXNTY2hlbWEodHlwZURlZnMpKSB7XG4gICAgICAgIHNjaGVtYSA9IHR5cGVEZWZzO1xuICAgIH1cbiAgICBlbHNlIGlmIChvdGhlck9wdGlvbnM/LmNvbW1lbnREZXNjcmlwdGlvbnMpIHtcbiAgICAgICAgY29uc3QgbWVyZ2VkVHlwZURlZnMgPSBtZXJnZVR5cGVEZWZzKHR5cGVEZWZzLCB7XG4gICAgICAgICAgICAuLi5vdGhlck9wdGlvbnMsXG4gICAgICAgICAgICBjb21tZW50RGVzY3JpcHRpb25zOiB0cnVlLFxuICAgICAgICB9KTtcbiAgICAgICAgc2NoZW1hID0gYnVpbGRTY2hlbWEobWVyZ2VkVHlwZURlZnMsIG90aGVyT3B0aW9ucyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBtZXJnZWRUeXBlRGVmcyA9IG1lcmdlVHlwZURlZnModHlwZURlZnMsIG90aGVyT3B0aW9ucyk7XG4gICAgICAgIHNjaGVtYSA9IGJ1aWxkQVNUU2NoZW1hKG1lcmdlZFR5cGVEZWZzLCBvdGhlck9wdGlvbnMpO1xuICAgIH1cbiAgICAvLyBXZSBhbGxvdyBwYXNzaW5nIGluIGFuIGFycmF5IG9mIHJlc29sdmVyIG1hcHMsIGluIHdoaWNoIGNhc2Ugd2UgbWVyZ2UgdGhlbVxuICAgIHNjaGVtYSA9IGFkZFJlc29sdmVyc1RvU2NoZW1hKHtcbiAgICAgICAgc2NoZW1hLFxuICAgICAgICByZXNvbHZlcnM6IG1lcmdlUmVzb2x2ZXJzKHJlc29sdmVycyksXG4gICAgICAgIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMsXG4gICAgICAgIGluaGVyaXRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyxcbiAgICAgICAgdXBkYXRlUmVzb2x2ZXJzSW5QbGFjZSxcbiAgICAgICAgZGVmYXVsdEZpZWxkUmVzb2x2ZXIsXG4gICAgfSk7XG4gICAgaWYgKE9iamVjdC5rZXlzKHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudChzY2hlbWEsIHJlc29sdmVyVmFsaWRhdGlvbk9wdGlvbnMpO1xuICAgIH1cbiAgICBpZiAoc2NoZW1hRXh0ZW5zaW9ucykge1xuICAgICAgICBmb3IgKGNvbnN0IHNjaGVtYUV4dGVuc2lvbiBvZiBhc0FycmF5KHNjaGVtYUV4dGVuc2lvbnMpKSB7XG4gICAgICAgICAgICBhcHBseUV4dGVuc2lvbnMoc2NoZW1hLCBzY2hlbWFFeHRlbnNpb24pO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzY2hlbWE7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/schema/esm/makeExecutableSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/Interfaces.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/Interfaces.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperKind: () => (/* binding */ MapperKind)\n/* harmony export */ });\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind || (MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9JbnRlcmZhY2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9JbnRlcmZhY2VzLmpzPzUyMDQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBNYXBwZXJLaW5kO1xuKGZ1bmN0aW9uIChNYXBwZXJLaW5kKSB7XG4gICAgTWFwcGVyS2luZFtcIlRZUEVcIl0gPSBcIk1hcHBlcktpbmQuVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJTQ0FMQVJfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5TQ0FMQVJfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJFTlVNX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuRU5VTV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkNPTVBPU0lURV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkNPTVBPU0lURV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIk9CSkVDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLk9CSkVDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIklOUFVUX09CSkVDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkFCU1RSQUNUX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuQUJTVFJBQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJVTklPTl9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLlVOSU9OX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5URVJGQUNFX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuSU5URVJGQUNFX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiUk9PVF9PQkpFQ1RcIl0gPSBcIk1hcHBlcktpbmQuUk9PVF9PQkpFQ1RcIjtcbiAgICBNYXBwZXJLaW5kW1wiUVVFUllcIl0gPSBcIk1hcHBlcktpbmQuUVVFUllcIjtcbiAgICBNYXBwZXJLaW5kW1wiTVVUQVRJT05cIl0gPSBcIk1hcHBlcktpbmQuTVVUQVRJT05cIjtcbiAgICBNYXBwZXJLaW5kW1wiU1VCU0NSSVBUSU9OXCJdID0gXCJNYXBwZXJLaW5kLlNVQlNDUklQVElPTlwiO1xuICAgIE1hcHBlcktpbmRbXCJESVJFQ1RJVkVcIl0gPSBcIk1hcHBlcktpbmQuRElSRUNUSVZFXCI7XG4gICAgTWFwcGVyS2luZFtcIkZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLkZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIkNPTVBPU0lURV9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5DT01QT1NJVEVfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiT0JKRUNUX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLk9CSkVDVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLlJPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiUVVFUllfUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5RVUVSWV9ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIk1VVEFUSU9OX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuTVVUQVRJT05fUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJTVUJTQ1JJUFRJT05fUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5TVUJTQ1JJUFRJT05fUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlRFUkZBQ0VfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuSU5URVJGQUNFX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIklOUFVUX09CSkVDVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiQVJHVU1FTlRcIl0gPSBcIk1hcHBlcktpbmQuQVJHVU1FTlRcIjtcbiAgICBNYXBwZXJLaW5kW1wiRU5VTV9WQUxVRVwiXSA9IFwiTWFwcGVyS2luZC5FTlVNX1ZBTFVFXCI7XG59KShNYXBwZXJLaW5kIHx8IChNYXBwZXJLaW5kID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/Interfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromType.js":
/*!******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromType.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromType: () => (/* binding */ astFromType)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n\nfunction astFromType(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdDO0FBQ2tCO0FBQ25EO0FBQ1AsUUFBUSxzREFBYTtBQUNyQjtBQUNBLCtCQUErQix5Q0FBSTtBQUNuQyxpREFBaUQsc0RBQU8sT0FBTztBQUMvRDtBQUNBO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbURBQVU7QUFDdkI7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHlDQUFJO0FBQ2xCO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVR5cGUuanM/YWMyOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnNwZWN0IH0gZnJvbSAnY3Jvc3MtaW5zcGVjdCc7XG5pbXBvcnQgeyBpc0xpc3RUeXBlLCBpc05vbk51bGxUeXBlLCBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gYXN0RnJvbVR5cGUodHlwZSkge1xuICAgIGlmIChpc05vbk51bGxUeXBlKHR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGlubmVyVHlwZSA9IGFzdEZyb21UeXBlKHR5cGUub2ZUeXBlKTtcbiAgICAgICAgaWYgKGlubmVyVHlwZS5raW5kID09PSBLaW5kLk5PTl9OVUxMX1RZUEUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCB0eXBlIG5vZGUgJHtpbnNwZWN0KHR5cGUpfS4gSW5uZXIgdHlwZSBvZiBub24tbnVsbCB0eXBlIGNhbm5vdCBiZSBhIG5vbi1udWxsIHR5cGUuYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuTk9OX05VTExfVFlQRSxcbiAgICAgICAgICAgIHR5cGU6IGlubmVyVHlwZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNMaXN0VHlwZSh0eXBlKSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogS2luZC5MSVNUX1RZUEUsXG4gICAgICAgICAgICB0eXBlOiBhc3RGcm9tVHlwZSh0eXBlLm9mVHlwZSksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGtpbmQ6IEtpbmQuTkFNRURfVFlQRSxcbiAgICAgICAgbmFtZToge1xuICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgdmFsdWU6IHR5cGUubmFtZSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValue.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValue.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValue: () => (/* binding */ astFromValue)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const astValue = astFromValue(value, type.ofType);\n        if (astValue?.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL) {\n            return null;\n        }\n        return astValue;\n    }\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        const itemType = type.ofType;\n        if ((0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isIterableObject)(value)) {\n            const valuesNodes = [];\n            for (const item of value) {\n                const itemNode = astFromValue(item, itemType);\n                if (itemNode != null) {\n                    valuesNodes.push(itemNode);\n                }\n            }\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST, values: valuesNodes };\n        }\n        return astFromValue(value, itemType);\n    }\n    // Populate the fields of the input object by creating ASTs from each value\n    // in the JavaScript object according to the fields in the input type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n        if (!(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isObjectLike)(value)) {\n            return null;\n        }\n        const fieldNodes = [];\n        for (const field of Object.values(type.getFields())) {\n            const fieldValue = astFromValue(value[field.name], field.type);\n            if (fieldValue) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME, value: field.name },\n                    value: fieldValue,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT, fields: fieldNodes };\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n        // Since value is an internally represented value, it must be serialized\n        // to an externally represented value before converting into an AST.\n        const serialized = type.serialize(value);\n        if (serialized == null) {\n            return null;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM, value: serialized };\n        }\n        // ID types can use Int literals.\n        if (type.name === 'ID' &&\n            typeof serialized === 'string' &&\n            integerStringRegExp.test(serialized)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INT, value: serialized };\n        }\n        return (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__.astFromValueUntyped)(serialized);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n    console.assert(false, 'Unexpected input type: ' + (0,cross_inspect__WEBPACK_IMPORTED_MODULE_4__.inspect)(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdDO0FBQzhEO0FBQ3ZDO0FBQ0Q7QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFFBQVEsc0RBQWE7QUFDckI7QUFDQSwrQkFBK0IseUNBQUk7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLG1EQUFVO0FBQ2xCO0FBQ0EsWUFBWSw2REFBZ0I7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBTSx5Q0FBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSwwREFBaUI7QUFDekIsYUFBYSx5REFBWTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix5Q0FBSTtBQUM5Qiw0QkFBNEIsTUFBTSx5Q0FBSSwwQkFBMEI7QUFDaEU7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0EsUUFBUSxtREFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLG1EQUFVO0FBQ3RCLHFCQUFxQixNQUFNLHlDQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsTUFBTSx5Q0FBSTtBQUMvQjtBQUNBLGVBQWUsNEVBQW1CO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLHNEQUFzRCxzREFBTztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVmFsdWUuanM/ODIzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnNwZWN0IH0gZnJvbSAnY3Jvc3MtaW5zcGVjdCc7XG5pbXBvcnQgeyBpc0VudW1UeXBlLCBpc0lucHV0T2JqZWN0VHlwZSwgaXNMZWFmVHlwZSwgaXNMaXN0VHlwZSwgaXNOb25OdWxsVHlwZSwgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGFzdEZyb21WYWx1ZVVudHlwZWQgfSBmcm9tICcuL2FzdEZyb21WYWx1ZVVudHlwZWQuanMnO1xuaW1wb3J0IHsgaXNJdGVyYWJsZU9iamVjdCwgaXNPYmplY3RMaWtlIH0gZnJvbSAnLi9qc3V0aWxzLmpzJztcbi8qKlxuICogUHJvZHVjZXMgYSBHcmFwaFFMIFZhbHVlIEFTVCBnaXZlbiBhIEphdmFTY3JpcHQgb2JqZWN0LlxuICogRnVuY3Rpb24gd2lsbCBtYXRjaCBKYXZhU2NyaXB0L0pTT04gdmFsdWVzIHRvIEdyYXBoUUwgQVNUIHNjaGVtYSBmb3JtYXRcbiAqIGJ5IHVzaW5nIHN1Z2dlc3RlZCBHcmFwaFFMSW5wdXRUeXBlLiBGb3IgZXhhbXBsZTpcbiAqXG4gKiAgICAgYXN0RnJvbVZhbHVlKFwidmFsdWVcIiwgR3JhcGhRTFN0cmluZylcbiAqXG4gKiBBIEdyYXBoUUwgdHlwZSBtdXN0IGJlIHByb3ZpZGVkLCB3aGljaCB3aWxsIGJlIHVzZWQgdG8gaW50ZXJwcmV0IGRpZmZlcmVudFxuICogSmF2YVNjcmlwdCB2YWx1ZXMuXG4gKlxuICogfCBKU09OIFZhbHVlICAgIHwgR3JhcGhRTCBWYWx1ZSAgICAgICAgfFxuICogfCAtLS0tLS0tLS0tLS0tIHwgLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBPYmplY3QgICAgICAgIHwgSW5wdXQgT2JqZWN0ICAgICAgICAgfFxuICogfCBBcnJheSAgICAgICAgIHwgTGlzdCAgICAgICAgICAgICAgICAgfFxuICogfCBCb29sZWFuICAgICAgIHwgQm9vbGVhbiAgICAgICAgICAgICAgfFxuICogfCBTdHJpbmcgICAgICAgIHwgU3RyaW5nIC8gRW51bSBWYWx1ZSAgfFxuICogfCBOdW1iZXIgICAgICAgIHwgSW50IC8gRmxvYXQgICAgICAgICAgfFxuICogfCBCaWdJbnQgICAgICAgIHwgSW50ICAgICAgICAgICAgICAgICAgfFxuICogfCBVbmtub3duICAgICAgIHwgRW51bSBWYWx1ZSAgICAgICAgICAgfFxuICogfCBudWxsICAgICAgICAgIHwgTnVsbFZhbHVlICAgICAgICAgICAgfFxuICpcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGFzdEZyb21WYWx1ZSh2YWx1ZSwgdHlwZSkge1xuICAgIGlmIChpc05vbk51bGxUeXBlKHR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGFzdFZhbHVlID0gYXN0RnJvbVZhbHVlKHZhbHVlLCB0eXBlLm9mVHlwZSk7XG4gICAgICAgIGlmIChhc3RWYWx1ZT8ua2luZCA9PT0gS2luZC5OVUxMKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXN0VmFsdWU7XG4gICAgfVxuICAgIC8vIG9ubHkgZXhwbGljaXQgbnVsbCwgbm90IHVuZGVmaW5lZCwgTmFOXG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuTlVMTCB9O1xuICAgIH1cbiAgICAvLyB1bmRlZmluZWRcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gQ29udmVydCBKYXZhU2NyaXB0IGFycmF5IHRvIEdyYXBoUUwgbGlzdC4gSWYgdGhlIEdyYXBoUUxUeXBlIGlzIGEgbGlzdCwgYnV0XG4gICAgLy8gdGhlIHZhbHVlIGlzIG5vdCBhbiBhcnJheSwgY29udmVydCB0aGUgdmFsdWUgdXNpbmcgdGhlIGxpc3QncyBpdGVtIHR5cGUuXG4gICAgaWYgKGlzTGlzdFR5cGUodHlwZSkpIHtcbiAgICAgICAgY29uc3QgaXRlbVR5cGUgPSB0eXBlLm9mVHlwZTtcbiAgICAgICAgaWYgKGlzSXRlcmFibGVPYmplY3QodmFsdWUpKSB7XG4gICAgICAgICAgICBjb25zdCB2YWx1ZXNOb2RlcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbHVlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaXRlbU5vZGUgPSBhc3RGcm9tVmFsdWUoaXRlbSwgaXRlbVR5cGUpO1xuICAgICAgICAgICAgICAgIGlmIChpdGVtTm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlc05vZGVzLnB1c2goaXRlbU5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuTElTVCwgdmFsdWVzOiB2YWx1ZXNOb2RlcyB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhc3RGcm9tVmFsdWUodmFsdWUsIGl0ZW1UeXBlKTtcbiAgICB9XG4gICAgLy8gUG9wdWxhdGUgdGhlIGZpZWxkcyBvZiB0aGUgaW5wdXQgb2JqZWN0IGJ5IGNyZWF0aW5nIEFTVHMgZnJvbSBlYWNoIHZhbHVlXG4gICAgLy8gaW4gdGhlIEphdmFTY3JpcHQgb2JqZWN0IGFjY29yZGluZyB0byB0aGUgZmllbGRzIGluIHRoZSBpbnB1dCB0eXBlLlxuICAgIGlmIChpc0lucHV0T2JqZWN0VHlwZSh0eXBlKSkge1xuICAgICAgICBpZiAoIWlzT2JqZWN0TGlrZSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZpZWxkTm9kZXMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZCBvZiBPYmplY3QudmFsdWVzKHR5cGUuZ2V0RmllbGRzKCkpKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZFZhbHVlID0gYXN0RnJvbVZhbHVlKHZhbHVlW2ZpZWxkLm5hbWVdLCBmaWVsZC50eXBlKTtcbiAgICAgICAgICAgIGlmIChmaWVsZFZhbHVlKSB7XG4gICAgICAgICAgICAgICAgZmllbGROb2Rlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5PQkpFQ1RfRklFTEQsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHsga2luZDogS2luZC5OQU1FLCB2YWx1ZTogZmllbGQubmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmllbGRWYWx1ZSxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLk9CSkVDVCwgZmllbGRzOiBmaWVsZE5vZGVzIH07XG4gICAgfVxuICAgIGlmIChpc0xlYWZUeXBlKHR5cGUpKSB7XG4gICAgICAgIC8vIFNpbmNlIHZhbHVlIGlzIGFuIGludGVybmFsbHkgcmVwcmVzZW50ZWQgdmFsdWUsIGl0IG11c3QgYmUgc2VyaWFsaXplZFxuICAgICAgICAvLyB0byBhbiBleHRlcm5hbGx5IHJlcHJlc2VudGVkIHZhbHVlIGJlZm9yZSBjb252ZXJ0aW5nIGludG8gYW4gQVNULlxuICAgICAgICBjb25zdCBzZXJpYWxpemVkID0gdHlwZS5zZXJpYWxpemUodmFsdWUpO1xuICAgICAgICBpZiAoc2VyaWFsaXplZCA9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNFbnVtVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5FTlVNLCB2YWx1ZTogc2VyaWFsaXplZCB9O1xuICAgICAgICB9XG4gICAgICAgIC8vIElEIHR5cGVzIGNhbiB1c2UgSW50IGxpdGVyYWxzLlxuICAgICAgICBpZiAodHlwZS5uYW1lID09PSAnSUQnICYmXG4gICAgICAgICAgICB0eXBlb2Ygc2VyaWFsaXplZCA9PT0gJ3N0cmluZycgJiZcbiAgICAgICAgICAgIGludGVnZXJTdHJpbmdSZWdFeHAudGVzdChzZXJpYWxpemVkKSkge1xuICAgICAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5JTlQsIHZhbHVlOiBzZXJpYWxpemVkIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzdEZyb21WYWx1ZVVudHlwZWQoc2VyaWFsaXplZCk7XG4gICAgfVxuICAgIC8qIGM4IGlnbm9yZSBuZXh0IDMgKi9cbiAgICAvLyBOb3QgcmVhY2hhYmxlLCBhbGwgcG9zc2libGUgdHlwZXMgaGF2ZSBiZWVuIGNvbnNpZGVyZWQuXG4gICAgY29uc29sZS5hc3NlcnQoZmFsc2UsICdVbmV4cGVjdGVkIGlucHV0IHR5cGU6ICcgKyBpbnNwZWN0KHR5cGUpKTtcbn1cbi8qKlxuICogSW50VmFsdWU6XG4gKiAgIC0gTmVnYXRpdmVTaWduPyAwXG4gKiAgIC0gTmVnYXRpdmVTaWduPyBOb25aZXJvRGlnaXQgKCBEaWdpdCsgKT9cbiAqL1xuY29uc3QgaW50ZWdlclN0cmluZ1JlZ0V4cCA9IC9eLT8oPzowfFsxLTldWzAtOV0qKSQvO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValueUntyped: () => (/* binding */ astFromValueUntyped)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        if (value?.toJSON) {\n            return astFromValueUntyped(value.toJSON());\n        }\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN, value };\n    }\n    if (typeof value === 'bigint') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: String(value) };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: stringNum }\n            : { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVmFsdWVVbnR5cGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix5Q0FBSTtBQUM5Qiw0QkFBNEIsTUFBTSx5Q0FBSSx5QkFBeUI7QUFDL0Q7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU0seUNBQUk7QUFDMUIsZ0JBQWdCLE1BQU0seUNBQUk7QUFDMUI7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0Esd0RBQXdELE1BQU07QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVZhbHVlVW50eXBlZC5qcz8yYjg1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbi8qKlxuICogUHJvZHVjZXMgYSBHcmFwaFFMIFZhbHVlIEFTVCBnaXZlbiBhIEphdmFTY3JpcHQgb2JqZWN0LlxuICogRnVuY3Rpb24gd2lsbCBtYXRjaCBKYXZhU2NyaXB0L0pTT04gdmFsdWVzIHRvIEdyYXBoUUwgQVNUIHNjaGVtYSBmb3JtYXRcbiAqIGJ5IHVzaW5nIHRoZSBmb2xsb3dpbmcgbWFwcGluZy5cbiAqXG4gKiB8IEpTT04gVmFsdWUgICAgfCBHcmFwaFFMIFZhbHVlICAgICAgICB8XG4gKiB8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IE9iamVjdCAgICAgICAgfCBJbnB1dCBPYmplY3QgICAgICAgICB8XG4gKiB8IEFycmF5ICAgICAgICAgfCBMaXN0ICAgICAgICAgICAgICAgICB8XG4gKiB8IEJvb2xlYW4gICAgICAgfCBCb29sZWFuICAgICAgICAgICAgICB8XG4gKiB8IFN0cmluZyAgICAgICAgfCBTdHJpbmcgICAgICAgICAgICAgICB8XG4gKiB8IE51bWJlciAgICAgICAgfCBJbnQgLyBGbG9hdCAgICAgICAgICB8XG4gKiB8IEJpZ0ludCAgICAgICAgfCBJbnQgICAgICAgICAgICAgICAgICB8XG4gKiB8IG51bGwgICAgICAgICAgfCBOdWxsVmFsdWUgICAgICAgICAgICB8XG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXN0RnJvbVZhbHVlVW50eXBlZCh2YWx1ZSkge1xuICAgIC8vIG9ubHkgZXhwbGljaXQgbnVsbCwgbm90IHVuZGVmaW5lZCwgTmFOXG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuTlVMTCB9O1xuICAgIH1cbiAgICAvLyB1bmRlZmluZWRcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gQ29udmVydCBKYXZhU2NyaXB0IGFycmF5IHRvIEdyYXBoUUwgbGlzdC4gSWYgdGhlIEdyYXBoUUxUeXBlIGlzIGEgbGlzdCwgYnV0XG4gICAgLy8gdGhlIHZhbHVlIGlzIG5vdCBhbiBhcnJheSwgY29udmVydCB0aGUgdmFsdWUgdXNpbmcgdGhlIGxpc3QncyBpdGVtIHR5cGUuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlc05vZGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgaXRlbU5vZGUgPSBhc3RGcm9tVmFsdWVVbnR5cGVkKGl0ZW0pO1xuICAgICAgICAgICAgaWYgKGl0ZW1Ob2RlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXNOb2Rlcy5wdXNoKGl0ZW1Ob2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkxJU1QsIHZhbHVlczogdmFsdWVzTm9kZXMgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgaWYgKHZhbHVlPy50b0pTT04pIHtcbiAgICAgICAgICAgIHJldHVybiBhc3RGcm9tVmFsdWVVbnR5cGVkKHZhbHVlLnRvSlNPTigpKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBmaWVsZE5vZGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZFZhbHVlID0gdmFsdWVbZmllbGROYW1lXTtcbiAgICAgICAgICAgIGNvbnN0IGFzdCA9IGFzdEZyb21WYWx1ZVVudHlwZWQoZmllbGRWYWx1ZSk7XG4gICAgICAgICAgICBpZiAoYXN0KSB7XG4gICAgICAgICAgICAgICAgZmllbGROb2Rlcy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5PQkpFQ1RfRklFTEQsXG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHsga2luZDogS2luZC5OQU1FLCB2YWx1ZTogZmllbGROYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBhc3QsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5PQkpFQ1QsIGZpZWxkczogZmllbGROb2RlcyB9O1xuICAgIH1cbiAgICAvLyBPdGhlcnMgc2VyaWFsaXplIGJhc2VkIG9uIHRoZWlyIGNvcnJlc3BvbmRpbmcgSmF2YVNjcmlwdCBzY2FsYXIgdHlwZXMuXG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuQk9PTEVBTiwgdmFsdWUgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ2JpZ2ludCcpIHtcbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5JTlQsIHZhbHVlOiBTdHJpbmcodmFsdWUpIH07XG4gICAgfVxuICAgIC8vIEphdmFTY3JpcHQgbnVtYmVycyBjYW4gYmUgSW50IG9yIEZsb2F0IHZhbHVlcy5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiBpc0Zpbml0ZSh2YWx1ZSkpIHtcbiAgICAgICAgY29uc3Qgc3RyaW5nTnVtID0gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIGludGVnZXJTdHJpbmdSZWdFeHAudGVzdChzdHJpbmdOdW0pXG4gICAgICAgICAgICA/IHsga2luZDogS2luZC5JTlQsIHZhbHVlOiBzdHJpbmdOdW0gfVxuICAgICAgICAgICAgOiB7IGtpbmQ6IEtpbmQuRkxPQVQsIHZhbHVlOiBzdHJpbmdOdW0gfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5TVFJJTkcsIHZhbHVlIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCBjb252ZXJ0IHZhbHVlIHRvIEFTVDogJHt2YWx1ZX0uYCk7XG59XG4vKipcbiAqIEludFZhbHVlOlxuICogICAtIE5lZ2F0aXZlU2lnbj8gMFxuICogICAtIE5lZ2F0aXZlU2lnbj8gTm9uWmVyb0RpZ2l0ICggRGlnaXQrICk/XG4gKi9cbmNvbnN0IGludGVnZXJTdHJpbmdSZWdFeHAgPSAvXi0/KD86MHxbMS05XVswLTldKikkLztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js":
/*!****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDescriptionNode: () => (/* binding */ getDescriptionNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction getDescriptionNode(obj) {\n    if (obj.astNode?.description) {\n        return {\n            ...obj.astNode.description,\n            block: true,\n        };\n    }\n    if (obj.description) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING,\n            value: obj.description,\n            block: true,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9kZXNjcmlwdGlvbkZyb21PYmplY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDeEI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZGVzY3JpcHRpb25Gcm9tT2JqZWN0LmpzPzA5YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlc2NyaXB0aW9uTm9kZShvYmopIHtcbiAgICBpZiAob2JqLmFzdE5vZGU/LmRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5vYmouYXN0Tm9kZS5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgIGJsb2NrOiB0cnVlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAob2JqLmRlc2NyaXB0aW9uKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLlNUUklORyxcbiAgICAgICAgICAgIHZhbHVlOiBvYmouZGVzY3JpcHRpb24sXG4gICAgICAgICAgICBibG9jazogdHJ1ZSxcbiAgICAgICAgfTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/errors.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnREFBVztBQUNuQixtQkFBbUIsaURBQVk7QUFDL0I7QUFDQSxlQUFlLGlEQUFZO0FBQzNCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9lcnJvcnMuanM/M2U1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMRXJyb3IsIHZlcnNpb25JbmZvIH0gZnJvbSAnZ3JhcGhxbCc7XG5jb25zdCBwb3NzaWJsZUdyYXBoUUxFcnJvclByb3BlcnRpZXMgPSBbXG4gICAgJ21lc3NhZ2UnLFxuICAgICdsb2NhdGlvbnMnLFxuICAgICdwYXRoJyxcbiAgICAnbm9kZXMnLFxuICAgICdzb3VyY2UnLFxuICAgICdwb3NpdGlvbnMnLFxuICAgICdvcmlnaW5hbEVycm9yJyxcbiAgICAnbmFtZScsXG4gICAgJ3N0YWNrJyxcbiAgICAnZXh0ZW5zaW9ucycsXG5dO1xuZnVuY3Rpb24gaXNHcmFwaFFMRXJyb3JMaWtlKGVycm9yKSB7XG4gICAgcmV0dXJuIChlcnJvciAhPSBudWxsICYmXG4gICAgICAgIHR5cGVvZiBlcnJvciA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgT2JqZWN0LmtleXMoZXJyb3IpLmV2ZXJ5KGtleSA9PiBwb3NzaWJsZUdyYXBoUUxFcnJvclByb3BlcnRpZXMuaW5jbHVkZXMoa2V5KSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnM/Lm9yaWdpbmFsRXJyb3IgJiZcbiAgICAgICAgIShvcHRpb25zLm9yaWdpbmFsRXJyb3IgaW5zdGFuY2VvZiBFcnJvcikgJiZcbiAgICAgICAgaXNHcmFwaFFMRXJyb3JMaWtlKG9wdGlvbnMub3JpZ2luYWxFcnJvcikpIHtcbiAgICAgICAgb3B0aW9ucy5vcmlnaW5hbEVycm9yID0gY3JlYXRlR3JhcGhRTEVycm9yKG9wdGlvbnMub3JpZ2luYWxFcnJvci5tZXNzYWdlLCBvcHRpb25zLm9yaWdpbmFsRXJyb3IpO1xuICAgIH1cbiAgICBpZiAodmVyc2lvbkluZm8ubWFqb3IgPj0gMTcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnM/Lm5vZGVzLCBvcHRpb25zPy5zb3VyY2UsIG9wdGlvbnM/LnBvc2l0aW9ucywgb3B0aW9ucz8ucGF0aCwgb3B0aW9ucz8ub3JpZ2luYWxFcnJvciwgb3B0aW9ucz8uZXh0ZW5zaW9ucyk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVsb2NhdGVkRXJyb3Iob3JpZ2luYWxFcnJvciwgcGF0aCkge1xuICAgIHJldHVybiBjcmVhdGVHcmFwaFFMRXJyb3Iob3JpZ2luYWxFcnJvci5tZXNzYWdlLCB7XG4gICAgICAgIG5vZGVzOiBvcmlnaW5hbEVycm9yLm5vZGVzLFxuICAgICAgICBzb3VyY2U6IG9yaWdpbmFsRXJyb3Iuc291cmNlLFxuICAgICAgICBwb3NpdGlvbnM6IG9yaWdpbmFsRXJyb3IucG9zaXRpb25zLFxuICAgICAgICBwYXRoOiBwYXRoID09IG51bGwgPyBvcmlnaW5hbEVycm9yLnBhdGggOiBwYXRoLFxuICAgICAgICBvcmlnaW5hbEVycm9yLFxuICAgICAgICBleHRlbnNpb25zOiBvcmlnaW5hbEVycm9yLmV4dGVuc2lvbnMsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forEachDefaultValue: () => (/* binding */ forEachDefaultValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction forEachDefaultValue(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type).name.startsWith('__')) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    for (const arg of field.args) {\n                        arg.defaultValue = fn(arg.type, arg.defaultValue);\n                    }\n                }\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    field.defaultValue = fn(field.type, field.defaultValue);\n                }\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9mb3JFYWNoRGVmYXVsdFZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdFO0FBQ2pFO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxREFBWTtBQUN6QixnQkFBZ0IscURBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwREFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ZvckVhY2hEZWZhdWx0VmFsdWUuanM/MTZmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW1lZFR5cGUsIGlzSW5wdXRPYmplY3RUeXBlLCBpc09iamVjdFR5cGUgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBmb3JFYWNoRGVmYXVsdFZhbHVlKHNjaGVtYSwgZm4pIHtcbiAgICBjb25zdCB0eXBlTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIHR5cGVNYXApIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHR5cGVNYXBbdHlwZU5hbWVdO1xuICAgICAgICBpZiAoIWdldE5hbWVkVHlwZSh0eXBlKS5uYW1lLnN0YXJ0c1dpdGgoJ19fJykpIHtcbiAgICAgICAgICAgIGlmIChpc09iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZyBvZiBmaWVsZC5hcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmcuZGVmYXVsdFZhbHVlID0gZm4oYXJnLnR5cGUsIGFyZy5kZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNJbnB1dE9iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBmaWVsZC5kZWZhdWx0VmFsdWUgPSBmbihmaWVsZC50eXBlLCBmaWVsZC5kZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachField.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachField.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forEachField: () => (/* binding */ forEachField)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction forEachField(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type).name.startsWith('__') && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                fn(field, typeName, fieldName);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9mb3JFYWNoRmllbGQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFDOUM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscURBQVksZ0NBQWdDLHFEQUFZO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZm9yRWFjaEZpZWxkLmpzP2ExZDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFtZWRUeXBlLCBpc09iamVjdFR5cGUgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBmb3JFYWNoRmllbGQoc2NoZW1hLCBmbikge1xuICAgIGNvbnN0IHR5cGVNYXAgPSBzY2hlbWEuZ2V0VHlwZU1hcCgpO1xuICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gdHlwZU1hcCkge1xuICAgICAgICBjb25zdCB0eXBlID0gdHlwZU1hcFt0eXBlTmFtZV07XG4gICAgICAgIC8vIFRPRE86IG1heWJlIGhhdmUgYW4gb3B0aW9uIHRvIGluY2x1ZGUgdGhlc2U/XG4gICAgICAgIGlmICghZ2V0TmFtZWRUeXBlKHR5cGUpLm5hbWUuc3RhcnRzV2l0aCgnX18nKSAmJiBpc09iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkcyA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgIGZuKGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/forEachField.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/get-directives.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/get-directives.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirective: () => (/* binding */ getDirective),\n/* harmony export */   getDirectiveInExtensions: () => (/* binding */ getDirectiveInExtensions),\n/* harmony export */   getDirectives: () => (/* binding */ getDirectives),\n/* harmony export */   getDirectivesInExtensions: () => (/* binding */ getDirectivesInExtensions)\n/* harmony export */ });\n/* harmony import */ var _getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDirectiveExtensions.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\");\n\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXQtZGlyZWN0aXZlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRTtBQUM5RDtBQUNQLGdDQUFnQyxrRkFBc0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ087QUFDUCxnQ0FBZ0Msa0ZBQXNCO0FBQ3REO0FBQ0E7QUFDTztBQUNQLGdDQUFnQyxrRkFBc0I7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ087QUFDUCxnQ0FBZ0Msa0ZBQXNCO0FBQ3REO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0LWRpcmVjdGl2ZXMuanM/YjU3MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXREaXJlY3RpdmVFeHRlbnNpb25zIH0gZnJvbSAnLi9nZXREaXJlY3RpdmVFeHRlbnNpb25zLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVzSW5FeHRlbnNpb25zKG5vZGUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBbJ2RpcmVjdGl2ZXMnXSkge1xuICAgIGNvbnN0IGRpcmVjdGl2ZUV4dGVuc2lvbnMgPSBnZXREaXJlY3RpdmVFeHRlbnNpb25zKG5vZGUsIHVuZGVmaW5lZCwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyk7XG4gICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGRpcmVjdGl2ZUV4dGVuc2lvbnMpXG4gICAgICAgIC5tYXAoKFtkaXJlY3RpdmVOYW1lLCBkaXJlY3RpdmVBcmdzQXJyXSkgPT4gZGlyZWN0aXZlQXJnc0Fycj8ubWFwKGRpcmVjdGl2ZUFyZ3MgPT4gKHtcbiAgICAgICAgbmFtZTogZGlyZWN0aXZlTmFtZSxcbiAgICAgICAgYXJnczogZGlyZWN0aXZlQXJncyxcbiAgICB9KSkpXG4gICAgICAgIC5mbGF0KEluZmluaXR5KVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERpcmVjdGl2ZUluRXh0ZW5zaW9ucyhub2RlLCBkaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gWydkaXJlY3RpdmVzJ10pIHtcbiAgICBjb25zdCBkaXJlY3RpdmVFeHRlbnNpb25zID0gZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyhub2RlLCB1bmRlZmluZWQsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpO1xuICAgIHJldHVybiBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERpcmVjdGl2ZXMoc2NoZW1hLCBub2RlLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gWydkaXJlY3RpdmVzJ10pIHtcbiAgICBjb25zdCBkaXJlY3RpdmVFeHRlbnNpb25zID0gZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyhub2RlLCBzY2hlbWEsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpO1xuICAgIHJldHVybiBPYmplY3QuZW50cmllcyhkaXJlY3RpdmVFeHRlbnNpb25zKVxuICAgICAgICAubWFwKChbZGlyZWN0aXZlTmFtZSwgZGlyZWN0aXZlQXJnc0Fycl0pID0+IGRpcmVjdGl2ZUFyZ3NBcnI/Lm1hcChkaXJlY3RpdmVBcmdzID0+ICh7XG4gICAgICAgIG5hbWU6IGRpcmVjdGl2ZU5hbWUsXG4gICAgICAgIGFyZ3M6IGRpcmVjdGl2ZUFyZ3MsXG4gICAgfSkpKVxuICAgICAgICAuZmxhdChJbmZpbml0eSlcbiAgICAgICAgLmZpbHRlcihCb29sZWFuKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmUoc2NoZW1hLCBub2RlLCBkaXJlY3RpdmVOYW1lLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gWydkaXJlY3RpdmVzJ10pIHtcbiAgICBjb25zdCBkaXJlY3RpdmVFeHRlbnNpb25zID0gZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucyhub2RlLCBzY2hlbWEsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpO1xuICAgIHJldHVybiBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/get-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getArgumentValues.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getArgumentValues.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArgumentValues: () => (/* binding */ getArgumentValues)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    const coercedValues = {};\n    const argumentNodes = node.arguments ?? [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL;\n        if (valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(variableValues, variableName)) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0,graphql__WEBPACK_IMPORTED_MODULE_6__.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRBcmd1bWVudFZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUF3QztBQUM0QjtBQUNuQjtBQUNIO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5REFBeUQ7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssS0FBSztBQUNWLGlCQUFpQixvQ0FBb0M7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixzREFBYTtBQUNsQyxzQkFBc0IsOERBQWtCLGNBQWMsS0FBSyxzQkFBc0Isc0RBQU8sVUFBVTtBQUNsRztBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3Qyx5Q0FBSTtBQUM1QywrQkFBK0IseUNBQUk7QUFDbkM7QUFDQSwyQ0FBMkMsMkRBQWM7QUFDekQ7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHNEQUFhO0FBQ3RDLDBCQUEwQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQixzREFBTyxVQUFVO0FBQ3RHLHVEQUF1RCxhQUFhO0FBQ3BFO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQWE7QUFDbkMsa0JBQWtCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLHNEQUFPLFVBQVU7QUFDOUY7QUFDQSxhQUFhO0FBQ2I7QUFDQSw2QkFBNkIscURBQVk7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsOERBQWtCLGNBQWMsS0FBSyxzQkFBc0IsOENBQUssWUFBWTtBQUM5RjtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldEFyZ3VtZW50VmFsdWVzLmpzPzYyZGEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaW5zcGVjdCB9IGZyb20gJ2Nyb3NzLWluc3BlY3QnO1xuaW1wb3J0IHsgaXNOb25OdWxsVHlwZSwgS2luZCwgcHJpbnQsIHZhbHVlRnJvbUFTVCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGNyZWF0ZUdyYXBoUUxFcnJvciB9IGZyb20gJy4vZXJyb3JzLmpzJztcbmltcG9ydCB7IGhhc093blByb3BlcnR5IH0gZnJvbSAnLi9qc3V0aWxzLmpzJztcbi8qKlxuICogUHJlcGFyZXMgYW4gb2JqZWN0IG1hcCBvZiBhcmd1bWVudCB2YWx1ZXMgZ2l2ZW4gYSBsaXN0IG9mIGFyZ3VtZW50XG4gKiBkZWZpbml0aW9ucyBhbmQgbGlzdCBvZiBhcmd1bWVudCBBU1Qgbm9kZXMuXG4gKlxuICogTm90ZTogVGhlIHJldHVybmVkIHZhbHVlIGlzIGEgcGxhaW4gT2JqZWN0IHdpdGggYSBwcm90b3R5cGUsIHNpbmNlIGl0IGlzXG4gKiBleHBvc2VkIHRvIHVzZXIgY29kZS4gQ2FyZSBzaG91bGQgYmUgdGFrZW4gdG8gbm90IHB1bGwgdmFsdWVzIGZyb20gdGhlXG4gKiBPYmplY3QgcHJvdG90eXBlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXJndW1lbnRWYWx1ZXMoZGVmLCBub2RlLCB2YXJpYWJsZVZhbHVlcyA9IHt9KSB7XG4gICAgY29uc3QgY29lcmNlZFZhbHVlcyA9IHt9O1xuICAgIGNvbnN0IGFyZ3VtZW50Tm9kZXMgPSBub2RlLmFyZ3VtZW50cyA/PyBbXTtcbiAgICBjb25zdCBhcmdOb2RlTWFwID0gYXJndW1lbnROb2Rlcy5yZWR1Y2UoKHByZXYsIGFyZykgPT4gKHtcbiAgICAgICAgLi4ucHJldixcbiAgICAgICAgW2FyZy5uYW1lLnZhbHVlXTogYXJnLFxuICAgIH0pLCB7fSk7XG4gICAgZm9yIChjb25zdCB7IG5hbWUsIHR5cGU6IGFyZ1R5cGUsIGRlZmF1bHRWYWx1ZSB9IG9mIGRlZi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IGFyZ3VtZW50Tm9kZSA9IGFyZ05vZGVNYXBbbmFtZV07XG4gICAgICAgIGlmICghYXJndW1lbnROb2RlKSB7XG4gICAgICAgICAgICBpZiAoZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb2VyY2VkVmFsdWVzW25hbWVdID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNOb25OdWxsVHlwZShhcmdUeXBlKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgb2YgcmVxdWlyZWQgdHlwZSBcIiR7aW5zcGVjdChhcmdUeXBlKX1cIiBgICsgJ3dhcyBub3QgcHJvdmlkZWQuJywge1xuICAgICAgICAgICAgICAgICAgICBub2RlczogW25vZGVdLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmFsdWVOb2RlID0gYXJndW1lbnROb2RlLnZhbHVlO1xuICAgICAgICBsZXQgaXNOdWxsID0gdmFsdWVOb2RlLmtpbmQgPT09IEtpbmQuTlVMTDtcbiAgICAgICAgaWYgKHZhbHVlTm9kZS5raW5kID09PSBLaW5kLlZBUklBQkxFKSB7XG4gICAgICAgICAgICBjb25zdCB2YXJpYWJsZU5hbWUgPSB2YWx1ZU5vZGUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgIGlmICh2YXJpYWJsZVZhbHVlcyA9PSBudWxsIHx8ICFoYXNPd25Qcm9wZXJ0eSh2YXJpYWJsZVZhbHVlcywgdmFyaWFibGVOYW1lKSkge1xuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb2VyY2VkVmFsdWVzW25hbWVdID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChpc05vbk51bGxUeXBlKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgb2YgcmVxdWlyZWQgdHlwZSBcIiR7aW5zcGVjdChhcmdUeXBlKX1cIiBgICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGB3YXMgcHJvdmlkZWQgdGhlIHZhcmlhYmxlIFwiJCR7dmFyaWFibGVOYW1lfVwiIHdoaWNoIHdhcyBub3QgcHJvdmlkZWQgYSBydW50aW1lIHZhbHVlLmAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVzOiBbdmFsdWVOb2RlXSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXNOdWxsID0gdmFyaWFibGVWYWx1ZXNbdmFyaWFibGVOYW1lXSA9PSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc051bGwgJiYgaXNOb25OdWxsVHlwZShhcmdUeXBlKSkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBvZiBub24tbnVsbCB0eXBlIFwiJHtpbnNwZWN0KGFyZ1R5cGUpfVwiIGAgKyAnbXVzdCBub3QgYmUgbnVsbC4nLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29lcmNlZFZhbHVlID0gdmFsdWVGcm9tQVNUKHZhbHVlTm9kZSwgYXJnVHlwZSwgdmFyaWFibGVWYWx1ZXMpO1xuICAgICAgICBpZiAoY29lcmNlZFZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIE5vdGU6IFZhbHVlc09mQ29ycmVjdFR5cGVSdWxlIHZhbGlkYXRpb24gc2hvdWxkIGNhdGNoIHRoaXMgYmVmb3JlXG4gICAgICAgICAgICAvLyBleGVjdXRpb24uIFRoaXMgaXMgYSBydW50aW1lIGNoZWNrIHRvIGVuc3VyZSBleGVjdXRpb24gZG9lcyBub3RcbiAgICAgICAgICAgIC8vIGNvbnRpbnVlIHdpdGggYW4gaW52YWxpZCBhcmd1bWVudCB2YWx1ZS5cbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgaGFzIGludmFsaWQgdmFsdWUgJHtwcmludCh2YWx1ZU5vZGUpfS5gLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29lcmNlZFZhbHVlc1tuYW1lXSA9IGNvZXJjZWRWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZWRWYWx1ZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirectiveExtensions: () => (/* binding */ getDirectiveExtensions)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var _getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getArgumentValues.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\nfunction getDirectiveExtensions(directableObj, schema, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = {};\n    if (directableObj.extensions) {\n        let directivesInExtensions = directableObj.extensions;\n        for (const pathSegment of pathToDirectivesInExtensions) {\n            directivesInExtensions = directivesInExtensions?.[pathSegment];\n        }\n        if (directivesInExtensions != null) {\n            for (const directiveNameProp in directivesInExtensions) {\n                const directiveObjs = directivesInExtensions[directiveNameProp];\n                const directiveName = directiveNameProp;\n                if (Array.isArray(directiveObjs)) {\n                    for (const directiveObj of directiveObjs) {\n                        let existingDirectiveExtensions = directiveExtensions[directiveName];\n                        if (!existingDirectiveExtensions) {\n                            existingDirectiveExtensions = [];\n                            directiveExtensions[directiveName] = existingDirectiveExtensions;\n                        }\n                        existingDirectiveExtensions.push(directiveObj);\n                    }\n                }\n                else {\n                    let existingDirectiveExtensions = directiveExtensions[directiveName];\n                    if (!existingDirectiveExtensions) {\n                        existingDirectiveExtensions = [];\n                        directiveExtensions[directiveName] = existingDirectiveExtensions;\n                    }\n                    existingDirectiveExtensions.push(directiveObjs);\n                }\n            }\n        }\n    }\n    const memoizedStringify = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_0__.memoize1)(obj => JSON.stringify(obj));\n    const astNodes = [];\n    if (directableObj.astNode) {\n        astNodes.push(directableObj.astNode);\n    }\n    if (directableObj.extensionASTNodes) {\n        astNodes.push(...directableObj.extensionASTNodes);\n    }\n    for (const astNode of astNodes) {\n        if (astNode.directives?.length) {\n            for (const directive of astNode.directives) {\n                const directiveName = directive.name.value;\n                let existingDirectiveExtensions = directiveExtensions[directiveName];\n                if (!existingDirectiveExtensions) {\n                    existingDirectiveExtensions = [];\n                    directiveExtensions[directiveName] = existingDirectiveExtensions;\n                }\n                const directiveInSchema = schema?.getDirective(directiveName);\n                let value = {};\n                if (directiveInSchema) {\n                    value = (0,_getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__.getArgumentValues)(directiveInSchema, directive);\n                }\n                if (directive.arguments) {\n                    for (const argNode of directive.arguments) {\n                        const argName = argNode.name.value;\n                        if (value[argName] == null) {\n                            const argInDirective = directiveInSchema?.args.find(arg => arg.name === argName);\n                            if (argInDirective) {\n                                value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.valueFromAST)(argNode.value, argInDirective.type);\n                            }\n                        }\n                        if (value[argName] == null) {\n                            value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.valueFromASTUntyped)(argNode.value);\n                        }\n                    }\n                }\n                if (astNodes.length > 0 && existingDirectiveExtensions.length > 0) {\n                    const valStr = memoizedStringify(value);\n                    if (existingDirectiveExtensions.some(val => memoizedStringify(val) === valStr)) {\n                        continue;\n                    }\n                }\n                existingDirectiveExtensions.push(value);\n            }\n        }\n    }\n    return directiveExtensions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXREaXJlY3RpdmVFeHRlbnNpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQTREO0FBQ0Q7QUFDbkI7QUFDakM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QixxREFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix3RUFBaUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpREFBaUQscURBQVk7QUFDN0Q7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLDREQUFtQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucy5qcz9jOWU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHZhbHVlRnJvbUFTVCwgdmFsdWVGcm9tQVNUVW50eXBlZCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZ2V0QXJndW1lbnRWYWx1ZXMgfSBmcm9tICcuL2dldEFyZ3VtZW50VmFsdWVzLmpzJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnLi9tZW1vaXplLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVFeHRlbnNpb25zKGRpcmVjdGFibGVPYmosIHNjaGVtYSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IHt9O1xuICAgIGlmIChkaXJlY3RhYmxlT2JqLmV4dGVuc2lvbnMpIHtcbiAgICAgICAgbGV0IGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBkaXJlY3RhYmxlT2JqLmV4dGVuc2lvbnM7XG4gICAgICAgIGZvciAoY29uc3QgcGF0aFNlZ21lbnQgb2YgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgZGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnM/LltwYXRoU2VnbWVudF07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgIT0gbnVsbCkge1xuICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlY3RpdmVOYW1lUHJvcCBpbiBkaXJlY3RpdmVzSW5FeHRlbnNpb25zKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZGlyZWN0aXZlT2JqcyA9IGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZVByb3BdO1xuICAgICAgICAgICAgICAgIGNvbnN0IGRpcmVjdGl2ZU5hbWUgPSBkaXJlY3RpdmVOYW1lUHJvcDtcbiAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShkaXJlY3RpdmVPYmpzKSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGRpcmVjdGl2ZU9iaiBvZiBkaXJlY3RpdmVPYmpzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBsZXQgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zID0gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXSA9IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucztcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucy5wdXNoKGRpcmVjdGl2ZU9iaik7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGxldCBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMgPSBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zID0gW107XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdID0gZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucy5wdXNoKGRpcmVjdGl2ZU9ianMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBtZW1vaXplZFN0cmluZ2lmeSA9IG1lbW9pemUxKG9iaiA9PiBKU09OLnN0cmluZ2lmeShvYmopKTtcbiAgICBjb25zdCBhc3ROb2RlcyA9IFtdO1xuICAgIGlmIChkaXJlY3RhYmxlT2JqLmFzdE5vZGUpIHtcbiAgICAgICAgYXN0Tm9kZXMucHVzaChkaXJlY3RhYmxlT2JqLmFzdE5vZGUpO1xuICAgIH1cbiAgICBpZiAoZGlyZWN0YWJsZU9iai5leHRlbnNpb25BU1ROb2Rlcykge1xuICAgICAgICBhc3ROb2Rlcy5wdXNoKC4uLmRpcmVjdGFibGVPYmouZXh0ZW5zaW9uQVNUTm9kZXMpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IGFzdE5vZGUgb2YgYXN0Tm9kZXMpIHtcbiAgICAgICAgaWYgKGFzdE5vZGUuZGlyZWN0aXZlcz8ubGVuZ3RoKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGRpcmVjdGl2ZSBvZiBhc3ROb2RlLmRpcmVjdGl2ZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVOYW1lID0gZGlyZWN0aXZlLm5hbWUudmFsdWU7XG4gICAgICAgICAgICAgICAgbGV0IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV07XG4gICAgICAgICAgICAgICAgaWYgKCFleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zID0gW107XG4gICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV0gPSBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IGRpcmVjdGl2ZUluU2NoZW1hID0gc2NoZW1hPy5nZXREaXJlY3RpdmUoZGlyZWN0aXZlTmFtZSk7XG4gICAgICAgICAgICAgICAgbGV0IHZhbHVlID0ge307XG4gICAgICAgICAgICAgICAgaWYgKGRpcmVjdGl2ZUluU2NoZW1hKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlID0gZ2V0QXJndW1lbnRWYWx1ZXMoZGlyZWN0aXZlSW5TY2hlbWEsIGRpcmVjdGl2ZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChkaXJlY3RpdmUuYXJndW1lbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYXJnTm9kZSBvZiBkaXJlY3RpdmUuYXJndW1lbnRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhcmdOYW1lID0gYXJnTm9kZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlW2FyZ05hbWVdID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBhcmdJbkRpcmVjdGl2ZSA9IGRpcmVjdGl2ZUluU2NoZW1hPy5hcmdzLmZpbmQoYXJnID0+IGFyZy5uYW1lID09PSBhcmdOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoYXJnSW5EaXJlY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWVbYXJnTmFtZV0gPSB2YWx1ZUZyb21BU1QoYXJnTm9kZS52YWx1ZSwgYXJnSW5EaXJlY3RpdmUudHlwZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbHVlW2FyZ05hbWVdID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVthcmdOYW1lXSA9IHZhbHVlRnJvbUFTVFVudHlwZWQoYXJnTm9kZS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGFzdE5vZGVzLmxlbmd0aCA+IDAgJiYgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgdmFsU3RyID0gbWVtb2l6ZWRTdHJpbmdpZnkodmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zLnNvbWUodmFsID0+IG1lbW9pemVkU3RyaW5naWZ5KHZhbCkgPT09IHZhbFN0cikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucy5wdXNoKHZhbHVlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGlyZWN0aXZlRXh0ZW5zaW9ucztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getObjectTypeFromTypeMap: () => (/* binding */ getObjectTypeFromTypeMap)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDaEM7QUFDUDtBQUNBO0FBQ0EsWUFBWSxxREFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAuanM/NDExYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09iamVjdFR5cGUgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAodHlwZU1hcCwgdHlwZSkge1xuICAgIGlmICh0eXBlKSB7XG4gICAgICAgIGNvbnN0IG1heWJlT2JqZWN0VHlwZSA9IHR5cGVNYXBbdHlwZS5uYW1lXTtcbiAgICAgICAgaWYgKGlzT2JqZWN0VHlwZShtYXliZU9iamVjdFR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbWF5YmVPYmplY3RUeXBlO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/heal.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/heal.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   healSchema: () => (/* binding */ healSchema),\n/* harmony export */   healTypes: () => (/* binding */ healTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\n//\n// healSchema and its callers (visitSchema/visitSchemaDirectives) all modify the schema in place.\n// Therefore, private variables (such as the stored implementation map and the proper root types)\n// are not updated.\n//\n// If this causes issues, the schema could be more aggressively healed as follows:\n//\n// healSchema(schema);\n// const config = schema.toConfig()\n// const healedSchema = new GraphQLSchema({\n//   ...config,\n//   query: schema.getType('<desired new root query type name>'),\n//   mutation: schema.getType('<desired new root mutation type name>'),\n//   subscription: schema.getType('<desired new root subscription type name>'),\n// });\n//\n// One can then also -- if necessary --  assign the correct private variables to the initial schema\n// as follows:\n// Object.assign(schema, healedSchema);\n//\n// These steps are not taken automatically to preserve backwards compatibility with graphql-tools v4.\n// See https://github.com/ardatan/graphql-tools/issues/1462\n//\n// They were briefly taken in v5, but can now be phased out as they were only required when other\n// areas of the codebase were using healSchema and visitSchema more extensively.\n//\nfunction healSchema(schema) {\n    healTypes(schema.getTypeMap(), schema.getDirectives());\n    return schema;\n}\nfunction healTypes(originalTypeMap, directives) {\n    const actualNamedTypeMap = Object.create(null);\n    // If any of the .name properties of the GraphQLNamedType objects in\n    // schema.getTypeMap() have changed, the keys of the type map need to\n    // be updated accordingly.\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const actualName = namedType.name;\n        if (actualName.startsWith('__')) {\n            continue;\n        }\n        if (actualNamedTypeMap[actualName] != null) {\n            console.warn(`Duplicate schema type name ${actualName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        actualNamedTypeMap[actualName] = namedType;\n        // Note: we are deliberately leaving namedType in the schema by its\n        // original name (which might be different from actualName), so that\n        // references by that name can be healed.\n    }\n    // Now add back every named type by its actual name.\n    for (const typeName in actualNamedTypeMap) {\n        const namedType = actualNamedTypeMap[typeName];\n        originalTypeMap[typeName] = namedType;\n    }\n    // Directive declaration argument types can refer to named types.\n    for (const decl of directives) {\n        decl.args = decl.args.filter(arg => {\n            arg.type = healType(arg.type);\n            return arg.type !== null;\n        });\n    }\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        // Heal all named types, except for dangling references, kept only to redirect.\n        if (!typeName.startsWith('__') && typeName in actualNamedTypeMap) {\n            if (namedType != null) {\n                healNamedType(namedType);\n            }\n        }\n    }\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__') && !(typeName in actualNamedTypeMap)) {\n            delete originalTypeMap[typeName];\n        }\n    }\n    function healNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n            healFields(type);\n            healInterfaces(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n            healFields(type);\n            if ('getInterfaces' in type) {\n                healInterfaces(type);\n            }\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n            healUnderlyingTypes(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n            healInputFields(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n            return;\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function healFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.args\n                .map(arg => {\n                arg.type = healType(arg.type);\n                return arg.type === null ? null : arg;\n            })\n                .filter(Boolean);\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healInterfaces(type) {\n        if ('getInterfaces' in type) {\n            const interfaces = type.getInterfaces();\n            interfaces.push(...interfaces\n                .splice(0)\n                .map(iface => healType(iface))\n                .filter(Boolean));\n        }\n    }\n    function healInputFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healUnderlyingTypes(type) {\n        const types = type.getTypes();\n        types.push(...types\n            .splice(0)\n            .map(t => healType(t))\n            .filter(Boolean));\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(healedType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(healedType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNamedType)(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            // Note that new types can still be simply added by adding a field, as\n            // the official type will be undefined, not null.\n            const officialType = originalTypeMap[type.name];\n            if (officialType && type !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/heal.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFnQztBQUN6QjtBQUNQO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhDQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaGVscGVycy5qcz9iNjc1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgY29uc3QgYXNBcnJheSA9IChmbnMpID0+IChBcnJheS5pc0FycmF5KGZucykgPyBmbnMgOiBmbnMgPyBbZm5zXSA6IFtdKTtcbmNvbnN0IGludmFsaWREb2NSZWdleCA9IC9cXC5bYS16MC05XSskL2k7XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudFN0cmluZyhzdHIpIHtcbiAgICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBYWFg6IGlzLXZhbGlkLXBhdGggb3IgaXMtZ2xvYiB0cmVhdCBTREwgYXMgYSB2YWxpZCBwYXRoXG4gICAgLy8gKGBzY2FsYXIgRGF0ZWAgZm9yIGV4YW1wbGUpXG4gICAgLy8gdGhpcyB3aHkgY2hlY2tpbmcgdGhlIGV4dGVuc2lvbiBpcyBmYXN0IGVub3VnaFxuICAgIC8vIGFuZCBwcmV2ZW50IGZyb20gcGFyc2luZyB0aGUgc3RyaW5nIGluIG9yZGVyIHRvIGZpbmQgb3V0XG4gICAgLy8gaWYgdGhlIHN0cmluZyBpcyBhIFNETFxuICAgIGlmIChpbnZhbGlkRG9jUmVnZXgudGVzdChzdHIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcGFyc2Uoc3RyKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7IH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5jb25zdCBpbnZhbGlkUGF0aFJlZ2V4ID0gL1vigJjigJwhJV48PmBcXG5dLztcbi8qKlxuICogQ2hlY2tlcyB3aGV0aGVyIHRoZSBgc3RyYCBjb250YWlucyBhbnkgcGF0aCBpbGxlZ2FsIGNoYXJhY3RlcnMuXG4gKlxuICogQSBzdHJpbmcgbWF5IHNvbWV0aW1lcyBsb29rIGxpa2UgYSBwYXRoIGJ1dCBpcyBub3QgKGxpa2UgYW4gU0RMIG9mIGEgc2ltcGxlXG4gKiBHcmFwaFFMIHNjaGVtYSkuIFRvIG1ha2Ugc3VyZSB3ZSBkb24ndCB5aWVsZCBmYWxzZS1wb3NpdGl2ZXMgaW4gc3VjaCBjYXNlcyxcbiAqIHdlIGRpc2FsbG93IG5ldyBsaW5lcyBpbiBwYXRocyAoZXZlbiB0aG91Z2ggbW9zdCBVbml4IHN5c3RlbXMgc3VwcG9ydCBuZXdcbiAqIGxpbmVzIGluIGZpbGUgbmFtZXMpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFBhdGgoc3RyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnICYmICFpbnZhbGlkUGF0aFJlZ2V4LnRlc3Qoc3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlU3RyaW5ncyhhLCBiKSB7XG4gICAgaWYgKFN0cmluZyhhKSA8IFN0cmluZyhiKSkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIGlmIChTdHJpbmcoYSkgPiBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG5vZGVUb1N0cmluZyhhKSB7XG4gICAgbGV0IG5hbWU7XG4gICAgaWYgKCdhbGlhcycgaW4gYSkge1xuICAgICAgICBuYW1lID0gYS5hbGlhcz8udmFsdWU7XG4gICAgfVxuICAgIGlmIChuYW1lID09IG51bGwgJiYgJ25hbWUnIGluIGEpIHtcbiAgICAgICAgbmFtZSA9IGEubmFtZT8udmFsdWU7XG4gICAgfVxuICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgbmFtZSA9IGEua2luZDtcbiAgICB9XG4gICAgcmV0dXJuIG5hbWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZU5vZGVzKGEsIGIsIGN1c3RvbUZuKSB7XG4gICAgY29uc3QgYVN0ciA9IG5vZGVUb1N0cmluZyhhKTtcbiAgICBjb25zdCBiU3RyID0gbm9kZVRvU3RyaW5nKGIpO1xuICAgIGlmICh0eXBlb2YgY3VzdG9tRm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZuKGFTdHIsIGJTdHIpO1xuICAgIH1cbiAgICByZXR1cm4gY29tcGFyZVN0cmluZ3MoYVN0ciwgYlN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTb21lKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0ICE9IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0U29tZShpbnB1dCwgbWVzc2FnZSA9ICdWYWx1ZSBzaG91bGQgYmUgc29tZXRoaW5nJykge1xuICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9qc3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2pzdXRpbHMuanM/NDFkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNJdGVyYWJsZU9iamVjdCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgU3ltYm9sLml0ZXJhdG9yIGluIHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUHJvbWlzZSh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZT8udGhlbiAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHByb21pc2VSZWR1Y2UodmFsdWVzLCBjYWxsYmFja0ZuLCBpbml0aWFsVmFsdWUpIHtcbiAgICBsZXQgYWNjdW11bGF0b3IgPSBpbml0aWFsVmFsdWU7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgYWNjdW11bGF0b3IgPSBpc1Byb21pc2UoYWNjdW11bGF0b3IpXG4gICAgICAgICAgICA/IGFjY3VtdWxhdG9yLnRoZW4ocmVzb2x2ZWQgPT4gY2FsbGJhY2tGbihyZXNvbHZlZCwgdmFsdWUpKVxuICAgICAgICAgICAgOiBjYWxsYmFja0ZuKGFjY3VtdWxhdG9yLCB2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mapSchema.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mapSchema.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correctASTNodes: () => (/* binding */ correctASTNodes),\n/* harmony export */   mapSchema: () => (/* binding */ mapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rewire_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rewire.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformInputValue.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n\n\n\n\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.serializeInputValue), schema, schemaMapper, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.parseInputValue), schema, schemaMapper, type => !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0,_rewire_js__WEBPACK_IMPORTED_MODULE_2__.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] =\n                        newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.TYPE];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_TYPE);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.UNION_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.FIELD];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_FIELD);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper ?? null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mergeDeep.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mergeDeep.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction mergeDeep(sources, respectPrototype = false, respectArrays = false, respectArrayLength = false) {\n    if (respectArrays && respectArrayLength) {\n        let expectedLength;\n        const areArraysInTheSameLength = sources.every(source => {\n            if (Array.isArray(source)) {\n                if (expectedLength === undefined) {\n                    expectedLength = source.length;\n                    return true;\n                }\n                else if (expectedLength === source.length) {\n                    return true;\n                }\n            }\n            return false;\n        });\n        if (areArraysInTheSameLength) {\n            return new Array(expectedLength).fill(null).map((_, index) => mergeDeep(sources.map(source => source[index]), respectPrototype, respectArrays, respectArrayLength));\n        }\n    }\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(sources[0])));\n    }\n    for (const source of sources) {\n        if (isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isSome)(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                    }\n                }\n                else if (respectArrays && Array.isArray(output[key])) {\n                    if (Array.isArray(source[key])) {\n                        if (respectArrayLength && output[key].length === source[key].length) {\n                            output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                        }\n                        else {\n                            output[key].push(...source[key]);\n                        }\n                    }\n                    else {\n                        output[key].push(source[key]);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tZXJnZURlZXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFDL0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtREFBTTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELG9CQUFvQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxvQkFBb0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL21lcmdlRGVlcC5qcz8wNDM5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzU29tZSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VEZWVwKHNvdXJjZXMsIHJlc3BlY3RQcm90b3R5cGUgPSBmYWxzZSwgcmVzcGVjdEFycmF5cyA9IGZhbHNlLCByZXNwZWN0QXJyYXlMZW5ndGggPSBmYWxzZSkge1xuICAgIGlmIChyZXNwZWN0QXJyYXlzICYmIHJlc3BlY3RBcnJheUxlbmd0aCkge1xuICAgICAgICBsZXQgZXhwZWN0ZWRMZW5ndGg7XG4gICAgICAgIGNvbnN0IGFyZUFycmF5c0luVGhlU2FtZUxlbmd0aCA9IHNvdXJjZXMuZXZlcnkoc291cmNlID0+IHtcbiAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNvdXJjZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoZXhwZWN0ZWRMZW5ndGggPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBleHBlY3RlZExlbmd0aCA9IHNvdXJjZS5sZW5ndGg7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChleHBlY3RlZExlbmd0aCA9PT0gc291cmNlLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoYXJlQXJyYXlzSW5UaGVTYW1lTGVuZ3RoKSB7XG4gICAgICAgICAgICByZXR1cm4gbmV3IEFycmF5KGV4cGVjdGVkTGVuZ3RoKS5maWxsKG51bGwpLm1hcCgoXywgaW5kZXgpID0+IG1lcmdlRGVlcChzb3VyY2VzLm1hcChzb3VyY2UgPT4gc291cmNlW2luZGV4XSksIHJlc3BlY3RQcm90b3R5cGUsIHJlc3BlY3RBcnJheXMsIHJlc3BlY3RBcnJheUxlbmd0aCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG91dHB1dCA9IHt9O1xuICAgIGlmIChyZXNwZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihvdXRwdXQsIE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHNvdXJjZXNbMF0pKSk7XG4gICAgfVxuICAgIGZvciAoY29uc3Qgc291cmNlIG9mIHNvdXJjZXMpIHtcbiAgICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZSkpIHtcbiAgICAgICAgICAgIGlmIChyZXNwZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb3V0cHV0UHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKG91dHB1dCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc291cmNlUHJvdG90eXBlID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHNvdXJjZSk7XG4gICAgICAgICAgICAgICAgaWYgKHNvdXJjZVByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VQcm90b3R5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBkZXNjcmlwdG9yID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2VQcm90b3R5cGUsIGtleSk7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNTb21lKGRlc2NyaXB0b3IpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG91dHB1dFByb3RvdHlwZSwga2V5LCBkZXNjcmlwdG9yKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IGluIHNvdXJjZSkge1xuICAgICAgICAgICAgICAgIGlmIChpc09iamVjdChzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEoa2V5IGluIG91dHB1dCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob3V0cHV0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFtrZXldID0gbWVyZ2VEZWVwKFtvdXRwdXRba2V5XSwgc291cmNlW2tleV1dLCByZXNwZWN0UHJvdG90eXBlLCByZXNwZWN0QXJyYXlzLCByZXNwZWN0QXJyYXlMZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKHJlc3BlY3RBcnJheXMgJiYgQXJyYXkuaXNBcnJheShvdXRwdXRba2V5XSkpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc291cmNlW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcGVjdEFycmF5TGVuZ3RoICYmIG91dHB1dFtrZXldLmxlbmd0aCA9PT0gc291cmNlW2tleV0ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0gPSBtZXJnZURlZXAoW291dHB1dFtrZXldLCBzb3VyY2Vba2V5XV0sIHJlc3BlY3RQcm90b3R5cGUsIHJlc3BlY3RBcnJheXMsIHJlc3BlY3RBcnJheUxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRba2V5XS5wdXNoKC4uLnNvdXJjZVtrZXldKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFtrZXldLnB1c2goc291cmNlW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKG91dHB1dCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXQ7XG59XG5mdW5jdGlvbiBpc09iamVjdChpdGVtKSB7XG4gICAgcmV0dXJuIGl0ZW0gJiYgdHlwZW9mIGl0ZW0gPT09ICdvYmplY3QnICYmICFBcnJheS5pc0FycmF5KGl0ZW0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/mergeDeep.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js":
/*!***********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js ***!
  \***********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromArg: () => (/* binding */ astFromArg),\n/* harmony export */   astFromDirective: () => (/* binding */ astFromDirective),\n/* harmony export */   astFromEnumType: () => (/* binding */ astFromEnumType),\n/* harmony export */   astFromEnumValue: () => (/* binding */ astFromEnumValue),\n/* harmony export */   astFromField: () => (/* binding */ astFromField),\n/* harmony export */   astFromInputField: () => (/* binding */ astFromInputField),\n/* harmony export */   astFromInputObjectType: () => (/* binding */ astFromInputObjectType),\n/* harmony export */   astFromInterfaceType: () => (/* binding */ astFromInterfaceType),\n/* harmony export */   astFromObjectType: () => (/* binding */ astFromObjectType),\n/* harmony export */   astFromScalarType: () => (/* binding */ astFromScalarType),\n/* harmony export */   astFromSchema: () => (/* binding */ astFromSchema),\n/* harmony export */   astFromUnionType: () => (/* binding */ astFromUnionType),\n/* harmony export */   getDirectiveNodes: () => (/* binding */ getDirectiveNodes),\n/* harmony export */   getDocumentNodeFromSchema: () => (/* binding */ getDocumentNodeFromSchema),\n/* harmony export */   makeDeprecatedDirective: () => (/* binding */ makeDeprecatedDirective),\n/* harmony export */   makeDirectiveNode: () => (/* binding */ makeDirectiveNode),\n/* harmony export */   makeDirectiveNodes: () => (/* binding */ makeDirectiveNodes),\n/* harmony export */   printSchemaWithDirectives: () => (/* binding */ printSchemaWithDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _astFromType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astFromType.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromType.js\");\n/* harmony import */ var _astFromValue_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astFromValue.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValue.js\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./descriptionFromObject.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\");\n/* harmony import */ var _get_directives_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./get-directives.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/get-directives.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n\n\n\n\n\n\n\n\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type);\n        const isIntrospection = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DOCUMENT,\n        definitions,\n    };\n}\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.print)(documentNode);\n}\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_6__.getRootTypeMap)(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_DEFINITION : graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    const descriptionNode = (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(schema);\n    if (descriptionNode) {\n        schemaNode.description = descriptionNode;\n    }\n    return schemaNode;\n}\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(directive),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: directive.args?.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: directive.locations?.map(location => ({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: location,\n        })) || [],\n    };\n}\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    let directiveNodesBesidesDeprecatedAndSpecifiedBy = [];\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    let deprecatedDirectiveNode = null;\n    let specifiedByDirectiveNode = null;\n    if (directives != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy = directives.filter(directive => directive.name.value !== 'deprecated' && directive.name.value !== 'specifiedBy');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = directives.filter(directive => directive.name.value === 'deprecated')?.[0];\n        }\n        if (entity.specifiedByUrl != null || entity.specifiedByURL != null) {\n            specifiedByDirectiveNode = directives.filter(directive => directive.name.value === 'specifiedBy')?.[0];\n        }\n    }\n    if (entity.deprecationReason != null && deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    if (entity.specifiedByUrl != null ||\n        (entity.specifiedByURL != null && specifiedByDirectiveNode == null)) {\n        const specifiedByValue = entity.specifiedByUrl || entity.specifiedByURL;\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        specifiedByDirectiveNode = makeDirectiveNode('specifiedBy', specifiedByArgs);\n    }\n    if (deprecatedDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(deprecatedDirectiveNode);\n    }\n    if (specifiedByDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(specifiedByDirectiveNode);\n    }\n    return directiveNodesBesidesDeprecatedAndSpecifiedBy;\n}\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(arg),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: arg.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined\n            ? ((0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(arg.defaultValue, arg.type) ?? undefined)\n            : undefined,\n        directives: getDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    const node = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace));\n    }\n    return node;\n}\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(type)),\n    };\n}\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(type, pathToDirectivesInExtensions);\n    const directives = makeDirectiveNodes(schema, directivesInExtensions);\n    const specifiedByValue = (type['specifiedByUrl'] ||\n        type['specifiedByURL']);\n    if (specifiedByValue &&\n        !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(field.defaultValue, field.type) ?? undefined,\n    };\n}\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(value),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: value.name,\n        },\n        directives: getDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDeprecatedDirective);\n}\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    for (const argName in args) {\n        const argValue = args[argName];\n        let value;\n        if (directive != null) {\n            const arg = directive.args.find(arg => arg.name === argName);\n            if (arg) {\n                value = (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(argValue, arg.type);\n            }\n        }\n        if (value == null) {\n            value = (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__.astFromValueUntyped)(argValue);\n        }\n        if (value != null) {\n            directiveArguments.push({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ARGUMENT,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: argName,\n                },\n                value,\n            });\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const { name, args } of directiveValues) {\n        const directive = schema?.getDirective(name);\n        directiveNodes.push(makeDirectiveNode(name, args, directive));\n    }\n    return directiveNodes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rewire.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rewire.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewireTypes: () => (/* binding */ rewireTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _stub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stub.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLUnionType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(enumConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.isNamedStub)(type) ? (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9yZXdpcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBOFc7QUFDblQ7QUFDcEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsU0FBUyxPQUFPO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2REFBb0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIscURBQWdCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixzREFBaUI7QUFDeEM7QUFDQSxpQkFBaUIsd0RBQWU7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix5REFBb0I7QUFDM0M7QUFDQSxpQkFBaUIsb0RBQVc7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixxREFBZ0I7QUFDdkM7QUFDQSxpQkFBaUIsMERBQWlCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsMkRBQXNCO0FBQzdDO0FBQ0EsaUJBQWlCLG1EQUFVO0FBQzNCO0FBQ0EsdUJBQXVCLG9EQUFlO0FBQ3RDO0FBQ0EsaUJBQWlCLHFEQUFZO0FBQzdCLGdCQUFnQiw4REFBcUI7QUFDckM7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHNEQUFpQjtBQUN4QztBQUNBLG1EQUFtRCxLQUFLO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtREFBVTtBQUN0QjtBQUNBLDZDQUE2QyxnREFBVztBQUN4RDtBQUNBLGlCQUFpQixzREFBYTtBQUM5QjtBQUNBLDZDQUE2QyxtREFBYztBQUMzRDtBQUNBLGlCQUFpQixvREFBVztBQUM1QjtBQUNBO0FBQ0EsOEJBQThCLHFEQUFXLFNBQVMsMkRBQWlCO0FBQ25FO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvZmVkZXJhdGlvbi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3Jld2lyZS5qcz9kNjM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxEaXJlY3RpdmUsIEdyYXBoUUxFbnVtVHlwZSwgR3JhcGhRTElucHV0T2JqZWN0VHlwZSwgR3JhcGhRTEludGVyZmFjZVR5cGUsIEdyYXBoUUxMaXN0LCBHcmFwaFFMTm9uTnVsbCwgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxTY2FsYXJUeXBlLCBHcmFwaFFMVW5pb25UeXBlLCBpc0VudW1UeXBlLCBpc0lucHV0T2JqZWN0VHlwZSwgaXNJbnRlcmZhY2VUeXBlLCBpc0xpc3RUeXBlLCBpc05hbWVkVHlwZSwgaXNOb25OdWxsVHlwZSwgaXNPYmplY3RUeXBlLCBpc1NjYWxhclR5cGUsIGlzU3BlY2lmaWVkRGlyZWN0aXZlLCBpc1NwZWNpZmllZFNjYWxhclR5cGUsIGlzVW5pb25UeXBlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZ2V0QnVpbHRJbkZvclN0dWIsIGlzTmFtZWRTdHViIH0gZnJvbSAnLi9zdHViLmpzJztcbmV4cG9ydCBmdW5jdGlvbiByZXdpcmVUeXBlcyhvcmlnaW5hbFR5cGVNYXAsIGRpcmVjdGl2ZXMpIHtcbiAgICBjb25zdCByZWZlcmVuY2VUeXBlTWFwID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIG9yaWdpbmFsVHlwZU1hcCkge1xuICAgICAgICByZWZlcmVuY2VUeXBlTWFwW3R5cGVOYW1lXSA9IG9yaWdpbmFsVHlwZU1hcFt0eXBlTmFtZV07XG4gICAgfVxuICAgIGNvbnN0IG5ld1R5cGVNYXAgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gcmVmZXJlbmNlVHlwZU1hcCkge1xuICAgICAgICBjb25zdCBuYW1lZFR5cGUgPSByZWZlcmVuY2VUeXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgaWYgKG5hbWVkVHlwZSA9PSBudWxsIHx8IHR5cGVOYW1lLnN0YXJ0c1dpdGgoJ19fJykpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG5ld05hbWUgPSBuYW1lZFR5cGUubmFtZTtcbiAgICAgICAgaWYgKG5ld05hbWUuc3RhcnRzV2l0aCgnX18nKSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG5ld1R5cGVNYXBbbmV3TmFtZV0gIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uc29sZS53YXJuKGBEdXBsaWNhdGUgc2NoZW1hIHR5cGUgbmFtZSAke25ld05hbWV9IGZvdW5kOyBrZWVwaW5nIHRoZSBleGlzdGluZyBvbmUgZm91bmQgaW4gdGhlIHNjaGVtYWApO1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgbmV3VHlwZU1hcFtuZXdOYW1lXSA9IG5hbWVkVHlwZTtcbiAgICB9XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBuZXdUeXBlTWFwKSB7XG4gICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gcmV3aXJlTmFtZWRUeXBlKG5ld1R5cGVNYXBbdHlwZU5hbWVdKTtcbiAgICB9XG4gICAgY29uc3QgbmV3RGlyZWN0aXZlcyA9IGRpcmVjdGl2ZXMubWFwKGRpcmVjdGl2ZSA9PiByZXdpcmVEaXJlY3RpdmUoZGlyZWN0aXZlKSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZU1hcDogbmV3VHlwZU1hcCxcbiAgICAgICAgZGlyZWN0aXZlczogbmV3RGlyZWN0aXZlcyxcbiAgICB9O1xuICAgIGZ1bmN0aW9uIHJld2lyZURpcmVjdGl2ZShkaXJlY3RpdmUpIHtcbiAgICAgICAgaWYgKGlzU3BlY2lmaWVkRGlyZWN0aXZlKGRpcmVjdGl2ZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBkaXJlY3RpdmU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZGlyZWN0aXZlQ29uZmlnID0gZGlyZWN0aXZlLnRvQ29uZmlnKCk7XG4gICAgICAgIGRpcmVjdGl2ZUNvbmZpZy5hcmdzID0gcmV3aXJlQXJncyhkaXJlY3RpdmVDb25maWcuYXJncyk7XG4gICAgICAgIHJldHVybiBuZXcgR3JhcGhRTERpcmVjdGl2ZShkaXJlY3RpdmVDb25maWcpO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXdpcmVBcmdzKGFyZ3MpIHtcbiAgICAgICAgY29uc3QgcmV3aXJlZEFyZ3MgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBhcmdOYW1lIGluIGFyZ3MpIHtcbiAgICAgICAgICAgIGNvbnN0IGFyZyA9IGFyZ3NbYXJnTmFtZV07XG4gICAgICAgICAgICBjb25zdCByZXdpcmVkQXJnVHlwZSA9IHJld2lyZVR5cGUoYXJnLnR5cGUpO1xuICAgICAgICAgICAgaWYgKHJld2lyZWRBcmdUeXBlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBhcmcudHlwZSA9IHJld2lyZWRBcmdUeXBlO1xuICAgICAgICAgICAgICAgIHJld2lyZWRBcmdzW2FyZ05hbWVdID0gYXJnO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXdpcmVkQXJncztcbiAgICB9XG4gICAgZnVuY3Rpb24gcmV3aXJlTmFtZWRUeXBlKHR5cGUpIHtcbiAgICAgICAgaWYgKGlzT2JqZWN0VHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgY29uc3QgbmV3Q29uZmlnID0ge1xuICAgICAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICBmaWVsZHM6ICgpID0+IHJld2lyZUZpZWxkcyhjb25maWcuZmllbGRzKSxcbiAgICAgICAgICAgICAgICBpbnRlcmZhY2VzOiAoKSA9PiByZXdpcmVOYW1lZFR5cGVzKGNvbmZpZy5pbnRlcmZhY2VzKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxPYmplY3RUeXBlKG5ld0NvbmZpZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNJbnRlcmZhY2VUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgICAgICBjb25zdCBuZXdDb25maWcgPSB7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgICAgIGZpZWxkczogKCkgPT4gcmV3aXJlRmllbGRzKGNvbmZpZy5maWVsZHMpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICgnaW50ZXJmYWNlcycgaW4gbmV3Q29uZmlnKSB7XG4gICAgICAgICAgICAgICAgbmV3Q29uZmlnLmludGVyZmFjZXMgPSAoKSA9PiByZXdpcmVOYW1lZFR5cGVzKGNvbmZpZy5pbnRlcmZhY2VzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTEludGVyZmFjZVR5cGUobmV3Q29uZmlnKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1VuaW9uVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgY29uc3QgbmV3Q29uZmlnID0ge1xuICAgICAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICB0eXBlczogKCkgPT4gcmV3aXJlTmFtZWRUeXBlcyhjb25maWcudHlwZXMpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTFVuaW9uVHlwZShuZXdDb25maWcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzSW5wdXRPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgICAgICBjb25zdCBuZXdDb25maWcgPSB7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgICAgIGZpZWxkczogKCkgPT4gcmV3aXJlSW5wdXRGaWVsZHMoY29uZmlnLmZpZWxkcyksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMSW5wdXRPYmplY3RUeXBlKG5ld0NvbmZpZyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNFbnVtVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgY29uc3QgZW51bUNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTEVudW1UeXBlKGVudW1Db25maWcpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzU2NhbGFyVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgaWYgKGlzU3BlY2lmaWVkU2NhbGFyVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3Qgc2NhbGFyQ29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMU2NhbGFyVHlwZShzY2FsYXJDb25maWcpO1xuICAgICAgICB9XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBzY2hlbWEgdHlwZTogJHt0eXBlfWApO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXdpcmVGaWVsZHMoZmllbGRzKSB7XG4gICAgICAgIGNvbnN0IHJld2lyZWRGaWVsZHMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgY29uc3QgcmV3aXJlZEZpZWxkVHlwZSA9IHJld2lyZVR5cGUoZmllbGQudHlwZSk7XG4gICAgICAgICAgICBpZiAocmV3aXJlZEZpZWxkVHlwZSAhPSBudWxsICYmIGZpZWxkLmFyZ3MpIHtcbiAgICAgICAgICAgICAgICBmaWVsZC50eXBlID0gcmV3aXJlZEZpZWxkVHlwZTtcbiAgICAgICAgICAgICAgICBmaWVsZC5hcmdzID0gcmV3aXJlQXJncyhmaWVsZC5hcmdzKTtcbiAgICAgICAgICAgICAgICByZXdpcmVkRmllbGRzW2ZpZWxkTmFtZV0gPSBmaWVsZDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV3aXJlZEZpZWxkcztcbiAgICB9XG4gICAgZnVuY3Rpb24gcmV3aXJlSW5wdXRGaWVsZHMoZmllbGRzKSB7XG4gICAgICAgIGNvbnN0IHJld2lyZWRGaWVsZHMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgY29uc3QgcmV3aXJlZEZpZWxkVHlwZSA9IHJld2lyZVR5cGUoZmllbGQudHlwZSk7XG4gICAgICAgICAgICBpZiAocmV3aXJlZEZpZWxkVHlwZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZmllbGQudHlwZSA9IHJld2lyZWRGaWVsZFR5cGU7XG4gICAgICAgICAgICAgICAgcmV3aXJlZEZpZWxkc1tmaWVsZE5hbWVdID0gZmllbGQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHJld2lyZWRGaWVsZHM7XG4gICAgfVxuICAgIGZ1bmN0aW9uIHJld2lyZU5hbWVkVHlwZXMobmFtZWRUeXBlcykge1xuICAgICAgICBjb25zdCByZXdpcmVkVHlwZXMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBuYW1lZFR5cGUgb2YgbmFtZWRUeXBlcykge1xuICAgICAgICAgICAgY29uc3QgcmV3aXJlZFR5cGUgPSByZXdpcmVUeXBlKG5hbWVkVHlwZSk7XG4gICAgICAgICAgICBpZiAocmV3aXJlZFR5cGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJld2lyZWRUeXBlcy5wdXNoKHJld2lyZWRUeXBlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmV3aXJlZFR5cGVzO1xuICAgIH1cbiAgICBmdW5jdGlvbiByZXdpcmVUeXBlKHR5cGUpIHtcbiAgICAgICAgaWYgKGlzTGlzdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJld2lyZWRUeXBlID0gcmV3aXJlVHlwZSh0eXBlLm9mVHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gcmV3aXJlZFR5cGUgIT0gbnVsbCA/IG5ldyBHcmFwaFFMTGlzdChyZXdpcmVkVHlwZSkgOiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IHJld2lyZWRUeXBlID0gcmV3aXJlVHlwZSh0eXBlLm9mVHlwZSk7XG4gICAgICAgICAgICByZXR1cm4gcmV3aXJlZFR5cGUgIT0gbnVsbCA/IG5ldyBHcmFwaFFMTm9uTnVsbChyZXdpcmVkVHlwZSkgOiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGlzTmFtZWRUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICBsZXQgcmV3aXJlZFR5cGUgPSByZWZlcmVuY2VUeXBlTWFwW3R5cGUubmFtZV07XG4gICAgICAgICAgICBpZiAocmV3aXJlZFR5cGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJld2lyZWRUeXBlID0gaXNOYW1lZFN0dWIodHlwZSkgPyBnZXRCdWlsdEluRm9yU3R1Yih0eXBlKSA6IHJld2lyZU5hbWVkVHlwZSh0eXBlKTtcbiAgICAgICAgICAgICAgICBuZXdUeXBlTWFwW3Jld2lyZWRUeXBlLm5hbWVdID0gcmVmZXJlbmNlVHlwZU1hcFt0eXBlLm5hbWVdID0gcmV3aXJlZFR5cGU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gcmV3aXJlZFR5cGUgIT0gbnVsbCA/IG5ld1R5cGVNYXBbcmV3aXJlZFR5cGUubmFtZV0gOiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rewire.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9yb290VHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlEO0FBQ1Q7QUFDakM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDhEQUFrQix3Q0FBd0MsV0FBVztBQUNuRjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDTyx5QkFBeUIscURBQVE7QUFDeEM7QUFDQTtBQUNBLENBQUM7QUFDTSxxQkFBcUIscURBQVE7QUFDcEM7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIscURBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vcm9vdFR5cGVzLmpzPzNkNTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlR3JhcGhRTEVycm9yIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgbWVtb2l6ZTEgfSBmcm9tICcuL21lbW9pemUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmluZWRSb290VHlwZShzY2hlbWEsIG9wZXJhdGlvbiwgbm9kZXMpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IGdldFJvb3RUeXBlTWFwKHNjaGVtYSk7XG4gICAgY29uc3Qgcm9vdFR5cGUgPSByb290VHlwZU1hcC5nZXQob3BlcmF0aW9uKTtcbiAgICBpZiAocm9vdFR5cGUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYFNjaGVtYSBpcyBub3QgY29uZmlndXJlZCB0byBleGVjdXRlICR7b3BlcmF0aW9ufSBvcGVyYXRpb24uYCwge1xuICAgICAgICAgICAgbm9kZXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdFR5cGU7XG59XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVOYW1lcyA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlTmFtZXMoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVzID0gZ2V0Um9vdFR5cGVzKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQoWy4uLnJvb3RUeXBlc10ubWFwKHR5cGUgPT4gdHlwZS5uYW1lKSk7XG59KTtcbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZXMgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZXMoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBnZXRSb290VHlwZU1hcChzY2hlbWEpO1xuICAgIHJldHVybiBuZXcgU2V0KHJvb3RUeXBlTWFwLnZhbHVlcygpKTtcbn0pO1xuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlTWFwID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBuZXcgTWFwKCk7XG4gICAgY29uc3QgcXVlcnlUeXBlID0gc2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgIGlmIChxdWVyeVR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdxdWVyeScsIHF1ZXJ5VHlwZSk7XG4gICAgfVxuICAgIGNvbnN0IG11dGF0aW9uVHlwZSA9IHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKTtcbiAgICBpZiAobXV0YXRpb25UeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgnbXV0YXRpb24nLCBtdXRhdGlvblR5cGUpO1xuICAgIH1cbiAgICBjb25zdCBzdWJzY3JpcHRpb25UeXBlID0gc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKTtcbiAgICBpZiAoc3Vic2NyaXB0aW9uVHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ3N1YnNjcmlwdGlvbicsIHN1YnNjcmlwdGlvblR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdFR5cGVNYXA7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/selectionSets.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/selectionSets.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSelectionSet: () => (/* binding */ parseSelectionSet)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nfunction parseSelectionSet(selectionSet, options) {\n    const query = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(selectionSet, options).definitions[0];\n    return query.selectionSet;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zZWxlY3Rpb25TZXRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDO0FBQ3pCO0FBQ1Asa0JBQWtCLDhDQUFLO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vc2VsZWN0aW9uU2V0cy5qcz82NzIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTZWxlY3Rpb25TZXQoc2VsZWN0aW9uU2V0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgcXVlcnkgPSBwYXJzZShzZWxlY3Rpb25TZXQsIG9wdGlvbnMpLmRlZmluaXRpb25zWzBdO1xuICAgIHJldHVybiBxdWVyeS5zZWxlY3Rpb25TZXQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/selectionSets.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/stub.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/stub.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamedStub: () => (/* binding */ createNamedStub),\n/* harmony export */   createStub: () => (/* binding */ createStub),\n/* harmony export */   getBuiltInForStub: () => (/* binding */ getBuiltInForStub),\n/* harmony export */   isNamedStub: () => (/* binding */ isNamedStub)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.LIST_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(createStub(node.type, type));\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NON_NULL_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID;\n        default:\n            return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zdHViLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa007QUFDM0w7QUFDUDtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFpQjtBQUN2QztBQUNBO0FBQ0Esc0JBQXNCLHlEQUFvQjtBQUMxQztBQUNBO0FBQ0Esc0JBQXNCLDJEQUFzQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFhO0FBQ25DLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBLGFBQWEseUNBQUk7QUFDakIsdUJBQXVCLGdEQUFXO0FBQ2xDLGFBQWEseUNBQUk7QUFDakIsdUJBQXVCLG1EQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLCtDQUFVO0FBQ3ZCLG1CQUFtQiwrQ0FBVTtBQUM3QixhQUFhLGlEQUFZO0FBQ3pCLG1CQUFtQixpREFBWTtBQUMvQixhQUFhLGtEQUFhO0FBQzFCLG1CQUFtQixrREFBYTtBQUNoQyxhQUFhLG1EQUFjO0FBQzNCLG1CQUFtQixtREFBYztBQUNqQyxhQUFhLDhDQUFTO0FBQ3RCLG1CQUFtQiw4Q0FBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zdHViLmpzP2RkMmEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTEJvb2xlYW4sIEdyYXBoUUxGbG9hdCwgR3JhcGhRTElELCBHcmFwaFFMSW5wdXRPYmplY3RUeXBlLCBHcmFwaFFMSW50LCBHcmFwaFFMSW50ZXJmYWNlVHlwZSwgR3JhcGhRTExpc3QsIEdyYXBoUUxOb25OdWxsLCBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTFN0cmluZywgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOYW1lZFN0dWIobmFtZSwgdHlwZSkge1xuICAgIGxldCBjb25zdHJ1Y3RvcjtcbiAgICBpZiAodHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBHcmFwaFFMT2JqZWN0VHlwZTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZSA9PT0gJ2ludGVyZmFjZScpIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBHcmFwaFFMSW50ZXJmYWNlVHlwZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTElucHV0T2JqZWN0VHlwZTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBjb25zdHJ1Y3Rvcih7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGZpZWxkczoge1xuICAgICAgICAgICAgX2Zha2U6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBHcmFwaFFMU3RyaW5nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdHViKG5vZGUsIHR5cGUpIHtcbiAgICBzd2l0Y2ggKG5vZGUua2luZCkge1xuICAgICAgICBjYXNlIEtpbmQuTElTVF9UWVBFOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMTGlzdChjcmVhdGVTdHViKG5vZGUudHlwZSwgdHlwZSkpO1xuICAgICAgICBjYXNlIEtpbmQuTk9OX05VTExfVFlQRTpcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTE5vbk51bGwoY3JlYXRlU3R1Yihub2RlLnR5cGUsIHR5cGUpKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnb3V0cHV0Jykge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVOYW1lZFN0dWIobm9kZS5uYW1lLnZhbHVlLCAnb2JqZWN0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTmFtZWRTdHViKG5vZGUubmFtZS52YWx1ZSwgJ2lucHV0Jyk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTmFtZWRTdHViKHR5cGUpIHtcbiAgICBpZiAoJ2dldEZpZWxkcycgaW4gdHlwZSkge1xuICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5yZWFjaGFibGUtbG9vcFxuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICByZXR1cm4gZmllbGQubmFtZSA9PT0gJ19mYWtlJztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QnVpbHRJbkZvclN0dWIodHlwZSkge1xuICAgIHN3aXRjaCAodHlwZS5uYW1lKSB7XG4gICAgICAgIGNhc2UgR3JhcGhRTEludC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxJbnQ7XG4gICAgICAgIGNhc2UgR3JhcGhRTEZsb2F0Lm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTEZsb2F0O1xuICAgICAgICBjYXNlIEdyYXBoUUxTdHJpbmcubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMU3RyaW5nO1xuICAgICAgICBjYXNlIEdyYXBoUUxCb29sZWFuLm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTEJvb2xlYW47XG4gICAgICAgIGNhc2UgR3JhcGhRTElELm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTElEO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/stub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null\n            ? inputLeafValueTransformer(nullableType, value)\n            : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null\n            ? inputObjectValueTransformer(nullableType, newValue)\n            : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2ZlZGVyYXRpb24vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS90cmFuc2Zvcm1JbnB1dFZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRjtBQUMvQztBQUNoQztBQUNQO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix3REFBZTtBQUN4QyxRQUFRLG1EQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtREFBVTtBQUN2QixlQUFlLG9EQUFPO0FBQ3RCO0FBQ0EsYUFBYSwwREFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUCwwRUFBMEU7QUFDMUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9mZWRlcmF0aW9uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vdHJhbnNmb3JtSW5wdXRWYWx1ZS5qcz9jMDJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE51bGxhYmxlVHlwZSwgaXNJbnB1dE9iamVjdFR5cGUsIGlzTGVhZlR5cGUsIGlzTGlzdFR5cGUsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBhc0FycmF5IH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyID0gbnVsbCwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyID0gbnVsbCkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgY29uc3QgbnVsbGFibGVUeXBlID0gZ2V0TnVsbGFibGVUeXBlKHR5cGUpO1xuICAgIGlmIChpc0xlYWZUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIgIT0gbnVsbFxuICAgICAgICAgICAgPyBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyKG51bGxhYmxlVHlwZSwgdmFsdWUpXG4gICAgICAgICAgICA6IHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0xpc3RUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGFzQXJyYXkodmFsdWUpLm1hcCgobGlzdE1lbWJlcikgPT4gdHJhbnNmb3JtSW5wdXRWYWx1ZShudWxsYWJsZVR5cGUub2ZUeXBlLCBsaXN0TWVtYmVyLCBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyLCBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNJbnB1dE9iamVjdFR5cGUobnVsbGFibGVUeXBlKSkge1xuICAgICAgICBjb25zdCBmaWVsZHMgPSBudWxsYWJsZVR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1trZXldO1xuICAgICAgICAgICAgaWYgKGZpZWxkICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBuZXdWYWx1ZVtrZXldID0gdHJhbnNmb3JtSW5wdXRWYWx1ZShmaWVsZC50eXBlLCB2YWx1ZVtrZXldLCBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyLCBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIgIT0gbnVsbFxuICAgICAgICAgICAgPyBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIobnVsbGFibGVUeXBlLCBuZXdWYWx1ZSlcbiAgICAgICAgICAgIDogbmV3VmFsdWU7XG4gICAgfVxuICAgIC8vIHVucmVhY2hhYmxlLCBubyBvdGhlciBwb3NzaWJsZSByZXR1cm4gdmFsdWVcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVJbnB1dFZhbHVlKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdC5zZXJpYWxpemUodik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlucHV0VmFsdWUodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB0LnBhcnNlVmFsdWUodik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlucHV0VmFsdWVMaXRlcmFsKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB0LnBhcnNlTGl0ZXJhbCh2LCB7fSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/federation/node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/extensions.js":
/*!**************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/extensions.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   applyExtensions: () => (/* binding */ applyExtensions),\n/* harmony export */   extractExtensionsFromSchema: () => (/* reexport safe */ _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.extractExtensionsFromSchema),\n/* harmony export */   mergeExtensions: () => (/* binding */ mergeExtensions)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js\");\n\n\nfunction mergeExtensions(extensions) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)(extensions, false, true);\n}\nfunction applyExtensionObject(obj, extensions) {\n    if (!obj || !extensions || extensions === obj.extensions) {\n        return;\n    }\n    if (!obj.extensions) {\n        obj.extensions = extensions;\n        return;\n    }\n    obj.extensions = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)([obj.extensions, extensions], false, true);\n}\nfunction applyExtensions(schema, extensions) {\n    applyExtensionObject(schema, extensions.schemaExtensions);\n    for (const [typeName, data] of Object.entries(extensions.types || {})) {\n        const type = schema.getType(typeName);\n        if (type) {\n            applyExtensionObject(type, data.extensions);\n            if (data.type === 'object' || data.type === 'interface') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    if (field) {\n                        applyExtensionObject(field, fieldData.extensions);\n                        for (const [arg, argData] of Object.entries(fieldData.arguments)) {\n                            applyExtensionObject(field.args.find(a => a.name === arg), argData);\n                        }\n                    }\n                }\n            }\n            else if (data.type === 'input') {\n                for (const [fieldName, fieldData] of Object.entries(data.fields)) {\n                    const field = type.getFields()[fieldName];\n                    applyExtensionObject(field, fieldData.extensions);\n                }\n            }\n            else if (data.type === 'enum') {\n                for (const [valueName, valueData] of Object.entries(data.values)) {\n                    const value = type.getValue(valueName);\n                    applyExtensionObject(value, valueData);\n                }\n            }\n        }\n    }\n    return schema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS9leHRlbnNpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWlEO0FBQ2tCO0FBQzVEO0FBQ1AsV0FBVywrREFBUztBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsK0RBQVM7QUFDOUI7QUFDTztBQUNQO0FBQ0Esd0VBQXdFO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS9leHRlbnNpb25zLmpzP2E5YTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVyZ2VEZWVwIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IHsgZXh0cmFjdEV4dGVuc2lvbnNGcm9tU2NoZW1hIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRXh0ZW5zaW9ucyhleHRlbnNpb25zKSB7XG4gICAgcmV0dXJuIG1lcmdlRGVlcChleHRlbnNpb25zLCBmYWxzZSwgdHJ1ZSk7XG59XG5mdW5jdGlvbiBhcHBseUV4dGVuc2lvbk9iamVjdChvYmosIGV4dGVuc2lvbnMpIHtcbiAgICBpZiAoIW9iaiB8fCAhZXh0ZW5zaW9ucyB8fCBleHRlbnNpb25zID09PSBvYmouZXh0ZW5zaW9ucykge1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICghb2JqLmV4dGVuc2lvbnMpIHtcbiAgICAgICAgb2JqLmV4dGVuc2lvbnMgPSBleHRlbnNpb25zO1xuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIG9iai5leHRlbnNpb25zID0gbWVyZ2VEZWVwKFtvYmouZXh0ZW5zaW9ucywgZXh0ZW5zaW9uc10sIGZhbHNlLCB0cnVlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhcHBseUV4dGVuc2lvbnMoc2NoZW1hLCBleHRlbnNpb25zKSB7XG4gICAgYXBwbHlFeHRlbnNpb25PYmplY3Qoc2NoZW1hLCBleHRlbnNpb25zLnNjaGVtYUV4dGVuc2lvbnMpO1xuICAgIGZvciAoY29uc3QgW3R5cGVOYW1lLCBkYXRhXSBvZiBPYmplY3QuZW50cmllcyhleHRlbnNpb25zLnR5cGVzIHx8IHt9KSkge1xuICAgICAgICBjb25zdCB0eXBlID0gc2NoZW1hLmdldFR5cGUodHlwZU5hbWUpO1xuICAgICAgICBpZiAodHlwZSkge1xuICAgICAgICAgICAgYXBwbHlFeHRlbnNpb25PYmplY3QodHlwZSwgZGF0YS5leHRlbnNpb25zKTtcbiAgICAgICAgICAgIGlmIChkYXRhLnR5cGUgPT09ICdvYmplY3QnIHx8IGRhdGEudHlwZSA9PT0gJ2ludGVyZmFjZScpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFtmaWVsZE5hbWUsIGZpZWxkRGF0YV0gb2YgT2JqZWN0LmVudHJpZXMoZGF0YS5maWVsZHMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gdHlwZS5nZXRGaWVsZHMoKVtmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFwcGx5RXh0ZW5zaW9uT2JqZWN0KGZpZWxkLCBmaWVsZERhdGEuZXh0ZW5zaW9ucyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFthcmcsIGFyZ0RhdGFdIG9mIE9iamVjdC5lbnRyaWVzKGZpZWxkRGF0YS5hcmd1bWVudHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYXBwbHlFeHRlbnNpb25PYmplY3QoZmllbGQuYXJncy5maW5kKGEgPT4gYS5uYW1lID09PSBhcmcpLCBhcmdEYXRhKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGRhdGEudHlwZSA9PT0gJ2lucHV0Jykge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgW2ZpZWxkTmFtZSwgZmllbGREYXRhXSBvZiBPYmplY3QuZW50cmllcyhkYXRhLmZpZWxkcykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSB0eXBlLmdldEZpZWxkcygpW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIGFwcGx5RXh0ZW5zaW9uT2JqZWN0KGZpZWxkLCBmaWVsZERhdGEuZXh0ZW5zaW9ucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoZGF0YS50eXBlID09PSAnZW51bScpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFt2YWx1ZU5hbWUsIHZhbHVlRGF0YV0gb2YgT2JqZWN0LmVudHJpZXMoZGF0YS52YWx1ZXMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdHlwZS5nZXRWYWx1ZSh2YWx1ZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBhcHBseUV4dGVuc2lvbk9iamVjdCh2YWx1ZSwgdmFsdWVEYXRhKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHNjaGVtYTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/extensions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/merge-resolvers.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/merge-resolvers.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeResolvers: () => (/* binding */ mergeResolvers)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n\n/**\n * Deep merges multiple resolver definition objects into a single definition.\n * @param resolversDefinitions Resolver definitions to be merged\n * @param options Additional options\n *\n * ```js\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const clientResolver = require('./clientResolver');\n * const productResolver = require('./productResolver');\n *\n * const resolvers = mergeResolvers([\n *  clientResolver,\n *  productResolver,\n * ]);\n * ```\n *\n * If you don't want to manually create the array of resolver objects, you can\n * also use this function along with loadFiles:\n *\n * ```js\n * const path = require('path');\n * const { mergeResolvers } = require('@graphql-tools/merge');\n * const { loadFilesSync } = require('@graphql-tools/load-files');\n *\n * const resolversArray = loadFilesSync(path.join(__dirname, './resolvers'));\n *\n * const resolvers = mergeResolvers(resolversArray)\n * ```\n */\nfunction mergeResolvers(resolversDefinitions, options) {\n    if (!resolversDefinitions ||\n        (Array.isArray(resolversDefinitions) && resolversDefinitions.length === 0)) {\n        return {};\n    }\n    if (!Array.isArray(resolversDefinitions)) {\n        return resolversDefinitions;\n    }\n    if (resolversDefinitions.length === 1) {\n        return resolversDefinitions[0] || {};\n    }\n    const resolvers = new Array();\n    for (let resolversDefinition of resolversDefinitions) {\n        if (Array.isArray(resolversDefinition)) {\n            resolversDefinition = mergeResolvers(resolversDefinition);\n        }\n        if (typeof resolversDefinition === 'object' && resolversDefinition) {\n            resolvers.push(resolversDefinition);\n        }\n    }\n    const result = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mergeDeep)(resolvers, true);\n    if (options?.exclusions) {\n        for (const exclusion of options.exclusions) {\n            const [typeName, fieldName] = exclusion.split('.');\n            if (!fieldName || fieldName === '*') {\n                delete result[typeName];\n            }\n            else if (result[typeName]) {\n                delete result[typeName][fieldName];\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS9tZXJnZS1yZXNvbHZlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBaUQ7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxpQkFBaUI7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsaUJBQWlCO0FBQzVCLFdBQVcsZ0JBQWdCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsK0RBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vbWVyZ2UtcmVzb2x2ZXJzLmpzPzExZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWVyZ2VEZWVwIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuLyoqXG4gKiBEZWVwIG1lcmdlcyBtdWx0aXBsZSByZXNvbHZlciBkZWZpbml0aW9uIG9iamVjdHMgaW50byBhIHNpbmdsZSBkZWZpbml0aW9uLlxuICogQHBhcmFtIHJlc29sdmVyc0RlZmluaXRpb25zIFJlc29sdmVyIGRlZmluaXRpb25zIHRvIGJlIG1lcmdlZFxuICogQHBhcmFtIG9wdGlvbnMgQWRkaXRpb25hbCBvcHRpb25zXG4gKlxuICogYGBganNcbiAqIGNvbnN0IHsgbWVyZ2VSZXNvbHZlcnMgfSA9IHJlcXVpcmUoJ0BncmFwaHFsLXRvb2xzL21lcmdlJyk7XG4gKiBjb25zdCBjbGllbnRSZXNvbHZlciA9IHJlcXVpcmUoJy4vY2xpZW50UmVzb2x2ZXInKTtcbiAqIGNvbnN0IHByb2R1Y3RSZXNvbHZlciA9IHJlcXVpcmUoJy4vcHJvZHVjdFJlc29sdmVyJyk7XG4gKlxuICogY29uc3QgcmVzb2x2ZXJzID0gbWVyZ2VSZXNvbHZlcnMoW1xuICogIGNsaWVudFJlc29sdmVyLFxuICogIHByb2R1Y3RSZXNvbHZlcixcbiAqIF0pO1xuICogYGBgXG4gKlxuICogSWYgeW91IGRvbid0IHdhbnQgdG8gbWFudWFsbHkgY3JlYXRlIHRoZSBhcnJheSBvZiByZXNvbHZlciBvYmplY3RzLCB5b3UgY2FuXG4gKiBhbHNvIHVzZSB0aGlzIGZ1bmN0aW9uIGFsb25nIHdpdGggbG9hZEZpbGVzOlxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuICogY29uc3QgeyBtZXJnZVJlc29sdmVycyB9ID0gcmVxdWlyZSgnQGdyYXBocWwtdG9vbHMvbWVyZ2UnKTtcbiAqIGNvbnN0IHsgbG9hZEZpbGVzU3luYyB9ID0gcmVxdWlyZSgnQGdyYXBocWwtdG9vbHMvbG9hZC1maWxlcycpO1xuICpcbiAqIGNvbnN0IHJlc29sdmVyc0FycmF5ID0gbG9hZEZpbGVzU3luYyhwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi9yZXNvbHZlcnMnKSk7XG4gKlxuICogY29uc3QgcmVzb2x2ZXJzID0gbWVyZ2VSZXNvbHZlcnMocmVzb2x2ZXJzQXJyYXkpXG4gKiBgYGBcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlUmVzb2x2ZXJzKHJlc29sdmVyc0RlZmluaXRpb25zLCBvcHRpb25zKSB7XG4gICAgaWYgKCFyZXNvbHZlcnNEZWZpbml0aW9ucyB8fFxuICAgICAgICAoQXJyYXkuaXNBcnJheShyZXNvbHZlcnNEZWZpbml0aW9ucykgJiYgcmVzb2x2ZXJzRGVmaW5pdGlvbnMubGVuZ3RoID09PSAwKSkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGlmICghQXJyYXkuaXNBcnJheShyZXNvbHZlcnNEZWZpbml0aW9ucykpIHtcbiAgICAgICAgcmV0dXJuIHJlc29sdmVyc0RlZmluaXRpb25zO1xuICAgIH1cbiAgICBpZiAocmVzb2x2ZXJzRGVmaW5pdGlvbnMubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHJldHVybiByZXNvbHZlcnNEZWZpbml0aW9uc1swXSB8fCB7fTtcbiAgICB9XG4gICAgY29uc3QgcmVzb2x2ZXJzID0gbmV3IEFycmF5KCk7XG4gICAgZm9yIChsZXQgcmVzb2x2ZXJzRGVmaW5pdGlvbiBvZiByZXNvbHZlcnNEZWZpbml0aW9ucykge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShyZXNvbHZlcnNEZWZpbml0aW9uKSkge1xuICAgICAgICAgICAgcmVzb2x2ZXJzRGVmaW5pdGlvbiA9IG1lcmdlUmVzb2x2ZXJzKHJlc29sdmVyc0RlZmluaXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIGlmICh0eXBlb2YgcmVzb2x2ZXJzRGVmaW5pdGlvbiA9PT0gJ29iamVjdCcgJiYgcmVzb2x2ZXJzRGVmaW5pdGlvbikge1xuICAgICAgICAgICAgcmVzb2x2ZXJzLnB1c2gocmVzb2x2ZXJzRGVmaW5pdGlvbik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3QgcmVzdWx0ID0gbWVyZ2VEZWVwKHJlc29sdmVycywgdHJ1ZSk7XG4gICAgaWYgKG9wdGlvbnM/LmV4Y2x1c2lvbnMpIHtcbiAgICAgICAgZm9yIChjb25zdCBleGNsdXNpb24gb2Ygb3B0aW9ucy5leGNsdXNpb25zKSB7XG4gICAgICAgICAgICBjb25zdCBbdHlwZU5hbWUsIGZpZWxkTmFtZV0gPSBleGNsdXNpb24uc3BsaXQoJy4nKTtcbiAgICAgICAgICAgIGlmICghZmllbGROYW1lIHx8IGZpZWxkTmFtZSA9PT0gJyonKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHJlc3VsdFt0eXBlTmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZXN1bHRbdHlwZU5hbWVdKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIHJlc3VsdFt0eXBlTmFtZV1bZmllbGROYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/merge-resolvers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeArguments: () => (/* binding */ mergeArguments)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction mergeArguments(args1, args2, config) {\n    const result = deduplicateArguments([...args2, ...args1].filter(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.isSome), config);\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.compareNodes);\n    }\n    return result;\n}\nfunction deduplicateArguments(args, config) {\n    return args.reduce((acc, current) => {\n        const dupIndex = acc.findIndex(arg => arg.name.value === current.name.value);\n        if (dupIndex === -1) {\n            return acc.concat([current]);\n        }\n        else if (!config?.reverseArguments) {\n            acc[dupIndex] = current;\n        }\n        return acc;\n    }, []);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2FyZ3VtZW50cy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE0RDtBQUNyRDtBQUNQLG9FQUFvRSx3REFBTTtBQUMxRTtBQUNBLG9CQUFvQiw4REFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2FyZ3VtZW50cy5qcz83NGU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbXBhcmVOb2RlcywgaXNTb21lIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlQXJndW1lbnRzKGFyZ3MxLCBhcmdzMiwgY29uZmlnKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gZGVkdXBsaWNhdGVBcmd1bWVudHMoWy4uLmFyZ3MyLCAuLi5hcmdzMV0uZmlsdGVyKGlzU29tZSksIGNvbmZpZyk7XG4gICAgaWYgKGNvbmZpZyAmJiBjb25maWcuc29ydCkge1xuICAgICAgICByZXN1bHQuc29ydChjb21wYXJlTm9kZXMpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gZGVkdXBsaWNhdGVBcmd1bWVudHMoYXJncywgY29uZmlnKSB7XG4gICAgcmV0dXJuIGFyZ3MucmVkdWNlKChhY2MsIGN1cnJlbnQpID0+IHtcbiAgICAgICAgY29uc3QgZHVwSW5kZXggPSBhY2MuZmluZEluZGV4KGFyZyA9PiBhcmcubmFtZS52YWx1ZSA9PT0gY3VycmVudC5uYW1lLnZhbHVlKTtcbiAgICAgICAgaWYgKGR1cEluZGV4ID09PSAtMSkge1xuICAgICAgICAgICAgcmV0dXJuIGFjYy5jb25jYXQoW2N1cnJlbnRdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghY29uZmlnPy5yZXZlcnNlQXJndW1lbnRzKSB7XG4gICAgICAgICAgICBhY2NbZHVwSW5kZXhdID0gY3VycmVudDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIFtdKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDirective: () => (/* binding */ mergeDirective),\n/* harmony export */   mergeDirectives: () => (/* binding */ mergeDirectives)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction directiveAlreadyExists(directivesArr, otherDirective) {\n    return !!directivesArr.find(directive => directive.name.value === otherDirective.name.value);\n}\nfunction isRepeatableDirective(directive, directives) {\n    return !!directives?.[directive.name.value]?.repeatable;\n}\nfunction nameAlreadyExists(name, namesArr) {\n    return namesArr.some(({ value }) => value === name.value);\n}\nfunction mergeArguments(a1, a2) {\n    const result = [...a2];\n    for (const argument of a1) {\n        const existingIndex = result.findIndex(a => a.name.value === argument.name.value);\n        if (existingIndex > -1) {\n            const existingArg = result[existingIndex];\n            if (existingArg.value.kind === 'ListValue') {\n                const source = existingArg.value.values;\n                const target = argument.value.values;\n                // merge values of two lists\n                existingArg.value.values = deduplicateLists(source, target, (targetVal, source) => {\n                    const value = targetVal.value;\n                    return !value || !source.some((sourceVal) => sourceVal.value === value);\n                });\n            }\n            else {\n                existingArg.value = argument.value;\n            }\n        }\n        else {\n            result.push(argument);\n        }\n    }\n    return result;\n}\nfunction deduplicateDirectives(directives, definitions) {\n    return directives\n        .map((directive, i, all) => {\n        const firstAt = all.findIndex(d => d.name.value === directive.name.value);\n        if (firstAt !== i && !isRepeatableDirective(directive, definitions)) {\n            const dup = all[firstAt];\n            directive.arguments = mergeArguments(directive.arguments, dup.arguments);\n            return null;\n        }\n        return directive;\n    })\n        .filter(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.isSome);\n}\nfunction mergeDirectives(d1 = [], d2 = [], config, directives) {\n    const reverseOrder = config && config.reverseDirectives;\n    const asNext = reverseOrder ? d1 : d2;\n    const asFirst = reverseOrder ? d2 : d1;\n    const result = deduplicateDirectives([...asNext], directives);\n    for (const directive of asFirst) {\n        if (directiveAlreadyExists(result, directive) &&\n            !isRepeatableDirective(directive, directives)) {\n            const existingDirectiveIndex = result.findIndex(d => d.name.value === directive.name.value);\n            const existingDirective = result[existingDirectiveIndex];\n            result[existingDirectiveIndex].arguments = mergeArguments(directive.arguments || [], existingDirective.arguments || []);\n        }\n        else {\n            result.push(directive);\n        }\n    }\n    return result;\n}\nfunction mergeDirective(node, existingNode) {\n    if (existingNode) {\n        return {\n            ...node,\n            arguments: deduplicateLists(existingNode.arguments || [], node.arguments || [], (arg, existingArgs) => !nameAlreadyExists(arg.name, existingArgs.map(a => a.name))),\n            locations: [\n                ...existingNode.locations,\n                ...node.locations.filter(name => !nameAlreadyExists(name, existingNode.locations)),\n            ],\n        };\n    }\n    return node;\n}\nfunction deduplicateLists(source, target, filterFn) {\n    return source.concat(target.filter(val => filterFn(val, source)));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2RpcmVjdGl2ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLE9BQU87QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZ0JBQWdCLHdEQUFNO0FBQ3RCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9kaXJlY3RpdmVzLmpzPzk1ZmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNTb21lIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZnVuY3Rpb24gZGlyZWN0aXZlQWxyZWFkeUV4aXN0cyhkaXJlY3RpdmVzQXJyLCBvdGhlckRpcmVjdGl2ZSkge1xuICAgIHJldHVybiAhIWRpcmVjdGl2ZXNBcnIuZmluZChkaXJlY3RpdmUgPT4gZGlyZWN0aXZlLm5hbWUudmFsdWUgPT09IG90aGVyRGlyZWN0aXZlLm5hbWUudmFsdWUpO1xufVxuZnVuY3Rpb24gaXNSZXBlYXRhYmxlRGlyZWN0aXZlKGRpcmVjdGl2ZSwgZGlyZWN0aXZlcykge1xuICAgIHJldHVybiAhIWRpcmVjdGl2ZXM/LltkaXJlY3RpdmUubmFtZS52YWx1ZV0/LnJlcGVhdGFibGU7XG59XG5mdW5jdGlvbiBuYW1lQWxyZWFkeUV4aXN0cyhuYW1lLCBuYW1lc0Fycikge1xuICAgIHJldHVybiBuYW1lc0Fyci5zb21lKCh7IHZhbHVlIH0pID0+IHZhbHVlID09PSBuYW1lLnZhbHVlKTtcbn1cbmZ1bmN0aW9uIG1lcmdlQXJndW1lbnRzKGExLCBhMikge1xuICAgIGNvbnN0IHJlc3VsdCA9IFsuLi5hMl07XG4gICAgZm9yIChjb25zdCBhcmd1bWVudCBvZiBhMSkge1xuICAgICAgICBjb25zdCBleGlzdGluZ0luZGV4ID0gcmVzdWx0LmZpbmRJbmRleChhID0+IGEubmFtZS52YWx1ZSA9PT0gYXJndW1lbnQubmFtZS52YWx1ZSk7XG4gICAgICAgIGlmIChleGlzdGluZ0luZGV4ID4gLTEpIHtcbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nQXJnID0gcmVzdWx0W2V4aXN0aW5nSW5kZXhdO1xuICAgICAgICAgICAgaWYgKGV4aXN0aW5nQXJnLnZhbHVlLmtpbmQgPT09ICdMaXN0VmFsdWUnKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgc291cmNlID0gZXhpc3RpbmdBcmcudmFsdWUudmFsdWVzO1xuICAgICAgICAgICAgICAgIGNvbnN0IHRhcmdldCA9IGFyZ3VtZW50LnZhbHVlLnZhbHVlcztcbiAgICAgICAgICAgICAgICAvLyBtZXJnZSB2YWx1ZXMgb2YgdHdvIGxpc3RzXG4gICAgICAgICAgICAgICAgZXhpc3RpbmdBcmcudmFsdWUudmFsdWVzID0gZGVkdXBsaWNhdGVMaXN0cyhzb3VyY2UsIHRhcmdldCwgKHRhcmdldFZhbCwgc291cmNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlID0gdGFyZ2V0VmFsLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gIXZhbHVlIHx8ICFzb3VyY2Uuc29tZSgoc291cmNlVmFsKSA9PiBzb3VyY2VWYWwudmFsdWUgPT09IHZhbHVlKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGV4aXN0aW5nQXJnLnZhbHVlID0gYXJndW1lbnQudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChhcmd1bWVudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIGRlZHVwbGljYXRlRGlyZWN0aXZlcyhkaXJlY3RpdmVzLCBkZWZpbml0aW9ucykge1xuICAgIHJldHVybiBkaXJlY3RpdmVzXG4gICAgICAgIC5tYXAoKGRpcmVjdGl2ZSwgaSwgYWxsKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpcnN0QXQgPSBhbGwuZmluZEluZGV4KGQgPT4gZC5uYW1lLnZhbHVlID09PSBkaXJlY3RpdmUubmFtZS52YWx1ZSk7XG4gICAgICAgIGlmIChmaXJzdEF0ICE9PSBpICYmICFpc1JlcGVhdGFibGVEaXJlY3RpdmUoZGlyZWN0aXZlLCBkZWZpbml0aW9ucykpIHtcbiAgICAgICAgICAgIGNvbnN0IGR1cCA9IGFsbFtmaXJzdEF0XTtcbiAgICAgICAgICAgIGRpcmVjdGl2ZS5hcmd1bWVudHMgPSBtZXJnZUFyZ3VtZW50cyhkaXJlY3RpdmUuYXJndW1lbnRzLCBkdXAuYXJndW1lbnRzKTtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkaXJlY3RpdmU7XG4gICAgfSlcbiAgICAgICAgLmZpbHRlcihpc1NvbWUpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGlyZWN0aXZlcyhkMSA9IFtdLCBkMiA9IFtdLCBjb25maWcsIGRpcmVjdGl2ZXMpIHtcbiAgICBjb25zdCByZXZlcnNlT3JkZXIgPSBjb25maWcgJiYgY29uZmlnLnJldmVyc2VEaXJlY3RpdmVzO1xuICAgIGNvbnN0IGFzTmV4dCA9IHJldmVyc2VPcmRlciA/IGQxIDogZDI7XG4gICAgY29uc3QgYXNGaXJzdCA9IHJldmVyc2VPcmRlciA/IGQyIDogZDE7XG4gICAgY29uc3QgcmVzdWx0ID0gZGVkdXBsaWNhdGVEaXJlY3RpdmVzKFsuLi5hc05leHRdLCBkaXJlY3RpdmVzKTtcbiAgICBmb3IgKGNvbnN0IGRpcmVjdGl2ZSBvZiBhc0ZpcnN0KSB7XG4gICAgICAgIGlmIChkaXJlY3RpdmVBbHJlYWR5RXhpc3RzKHJlc3VsdCwgZGlyZWN0aXZlKSAmJlxuICAgICAgICAgICAgIWlzUmVwZWF0YWJsZURpcmVjdGl2ZShkaXJlY3RpdmUsIGRpcmVjdGl2ZXMpKSB7XG4gICAgICAgICAgICBjb25zdCBleGlzdGluZ0RpcmVjdGl2ZUluZGV4ID0gcmVzdWx0LmZpbmRJbmRleChkID0+IGQubmFtZS52YWx1ZSA9PT0gZGlyZWN0aXZlLm5hbWUudmFsdWUpO1xuICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdEaXJlY3RpdmUgPSByZXN1bHRbZXhpc3RpbmdEaXJlY3RpdmVJbmRleF07XG4gICAgICAgICAgICByZXN1bHRbZXhpc3RpbmdEaXJlY3RpdmVJbmRleF0uYXJndW1lbnRzID0gbWVyZ2VBcmd1bWVudHMoZGlyZWN0aXZlLmFyZ3VtZW50cyB8fCBbXSwgZXhpc3RpbmdEaXJlY3RpdmUuYXJndW1lbnRzIHx8IFtdKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKGRpcmVjdGl2ZSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURpcmVjdGl2ZShub2RlLCBleGlzdGluZ05vZGUpIHtcbiAgICBpZiAoZXhpc3RpbmdOb2RlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgYXJndW1lbnRzOiBkZWR1cGxpY2F0ZUxpc3RzKGV4aXN0aW5nTm9kZS5hcmd1bWVudHMgfHwgW10sIG5vZGUuYXJndW1lbnRzIHx8IFtdLCAoYXJnLCBleGlzdGluZ0FyZ3MpID0+ICFuYW1lQWxyZWFkeUV4aXN0cyhhcmcubmFtZSwgZXhpc3RpbmdBcmdzLm1hcChhID0+IGEubmFtZSkpKSxcbiAgICAgICAgICAgIGxvY2F0aW9uczogW1xuICAgICAgICAgICAgICAgIC4uLmV4aXN0aW5nTm9kZS5sb2NhdGlvbnMsXG4gICAgICAgICAgICAgICAgLi4ubm9kZS5sb2NhdGlvbnMuZmlsdGVyKG5hbWUgPT4gIW5hbWVBbHJlYWR5RXhpc3RzKG5hbWUsIGV4aXN0aW5nTm9kZS5sb2NhdGlvbnMpKSxcbiAgICAgICAgICAgIF0sXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBub2RlO1xufVxuZnVuY3Rpb24gZGVkdXBsaWNhdGVMaXN0cyhzb3VyY2UsIHRhcmdldCwgZmlsdGVyRm4pIHtcbiAgICByZXR1cm4gc291cmNlLmNvbmNhdCh0YXJnZXQuZmlsdGVyKHZhbCA9PiBmaWx0ZXJGbih2YWwsIHNvdXJjZSkpKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeEnumValues: () => (/* binding */ mergeEnumValues)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n\n\nfunction mergeEnumValues(first, second, config, directives) {\n    if (config?.consistentEnumMerge) {\n        const reversed = [];\n        if (first) {\n            reversed.push(...first);\n        }\n        first = second;\n        second = reversed;\n    }\n    const enumValueMap = new Map();\n    if (first) {\n        for (const firstValue of first) {\n            enumValueMap.set(firstValue.name.value, firstValue);\n        }\n    }\n    if (second) {\n        for (const secondValue of second) {\n            const enumValue = secondValue.name.value;\n            if (enumValueMap.has(enumValue)) {\n                const firstValue = enumValueMap.get(enumValue);\n                firstValue.description = secondValue.description || firstValue.description;\n                firstValue.directives = (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(secondValue.directives, firstValue.directives, directives);\n            }\n            else {\n                enumValueMap.set(enumValue, secondValue);\n            }\n        }\n    }\n    const result = [...enumValueMap.values()];\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.compareNodes);\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2VudW0tdmFsdWVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFvRDtBQUNGO0FBQzNDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QywrREFBZTtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDhEQUFZO0FBQ2hDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2VudW0tdmFsdWVzLmpzPzE1ZmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29tcGFyZU5vZGVzIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgbWVyZ2VEaXJlY3RpdmVzIH0gZnJvbSAnLi9kaXJlY3RpdmVzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUVudW1WYWx1ZXMoZmlyc3QsIHNlY29uZCwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgaWYgKGNvbmZpZz8uY29uc2lzdGVudEVudW1NZXJnZSkge1xuICAgICAgICBjb25zdCByZXZlcnNlZCA9IFtdO1xuICAgICAgICBpZiAoZmlyc3QpIHtcbiAgICAgICAgICAgIHJldmVyc2VkLnB1c2goLi4uZmlyc3QpO1xuICAgICAgICB9XG4gICAgICAgIGZpcnN0ID0gc2Vjb25kO1xuICAgICAgICBzZWNvbmQgPSByZXZlcnNlZDtcbiAgICB9XG4gICAgY29uc3QgZW51bVZhbHVlTWFwID0gbmV3IE1hcCgpO1xuICAgIGlmIChmaXJzdCkge1xuICAgICAgICBmb3IgKGNvbnN0IGZpcnN0VmFsdWUgb2YgZmlyc3QpIHtcbiAgICAgICAgICAgIGVudW1WYWx1ZU1hcC5zZXQoZmlyc3RWYWx1ZS5uYW1lLnZhbHVlLCBmaXJzdFZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoc2Vjb25kKSB7XG4gICAgICAgIGZvciAoY29uc3Qgc2Vjb25kVmFsdWUgb2Ygc2Vjb25kKSB7XG4gICAgICAgICAgICBjb25zdCBlbnVtVmFsdWUgPSBzZWNvbmRWYWx1ZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgaWYgKGVudW1WYWx1ZU1hcC5oYXMoZW51bVZhbHVlKSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpcnN0VmFsdWUgPSBlbnVtVmFsdWVNYXAuZ2V0KGVudW1WYWx1ZSk7XG4gICAgICAgICAgICAgICAgZmlyc3RWYWx1ZS5kZXNjcmlwdGlvbiA9IHNlY29uZFZhbHVlLmRlc2NyaXB0aW9uIHx8IGZpcnN0VmFsdWUuZGVzY3JpcHRpb247XG4gICAgICAgICAgICAgICAgZmlyc3RWYWx1ZS5kaXJlY3RpdmVzID0gbWVyZ2VEaXJlY3RpdmVzKHNlY29uZFZhbHVlLmRpcmVjdGl2ZXMsIGZpcnN0VmFsdWUuZGlyZWN0aXZlcywgZGlyZWN0aXZlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBlbnVtVmFsdWVNYXAuc2V0KGVudW1WYWx1ZSwgc2Vjb25kVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHJlc3VsdCA9IFsuLi5lbnVtVmFsdWVNYXAudmFsdWVzKCldO1xuICAgIGlmIChjb25maWcgJiYgY29uZmlnLnNvcnQpIHtcbiAgICAgICAgcmVzdWx0LnNvcnQoY29tcGFyZU5vZGVzKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeEnum: () => (/* binding */ mergeEnum)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _enum_values_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./enum-values.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum-values.js\");\n\n\n\nfunction mergeEnum(e1, e2, config, directives) {\n    if (e2) {\n        return {\n            name: e1.name,\n            description: e1['description'] || e2['description'],\n            kind: config?.convertExtensions ||\n                e1.kind === 'EnumTypeDefinition' ||\n                e2.kind === 'EnumTypeDefinition'\n                ? 'EnumTypeDefinition'\n                : 'EnumTypeExtension',\n            loc: e1.loc,\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(e1.directives, e2.directives, config, directives),\n            values: (0,_enum_values_js__WEBPACK_IMPORTED_MODULE_1__.mergeEnumValues)(e1.values, e2.values, config),\n        };\n    }\n    return config?.convertExtensions\n        ? {\n            ...e1,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.ENUM_TYPE_DEFINITION,\n        }\n        : e1;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2VudW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNrQjtBQUNDO0FBQzVDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsK0RBQWU7QUFDdkMsb0JBQW9CLGdFQUFlO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvZW51bS5qcz85NjBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZXMgfSBmcm9tICcuL2RpcmVjdGl2ZXMuanMnO1xuaW1wb3J0IHsgbWVyZ2VFbnVtVmFsdWVzIH0gZnJvbSAnLi9lbnVtLXZhbHVlcy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VFbnVtKGUxLCBlMiwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgaWYgKGUyKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiBlMS5uYW1lLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IGUxWydkZXNjcmlwdGlvbiddIHx8IGUyWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAgICAga2luZDogY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9ucyB8fFxuICAgICAgICAgICAgICAgIGUxLmtpbmQgPT09ICdFbnVtVHlwZURlZmluaXRpb24nIHx8XG4gICAgICAgICAgICAgICAgZTIua2luZCA9PT0gJ0VudW1UeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICA/ICdFbnVtVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgOiAnRW51bVR5cGVFeHRlbnNpb24nLFxuICAgICAgICAgICAgbG9jOiBlMS5sb2MsXG4gICAgICAgICAgICBkaXJlY3RpdmVzOiBtZXJnZURpcmVjdGl2ZXMoZTEuZGlyZWN0aXZlcywgZTIuZGlyZWN0aXZlcywgY29uZmlnLCBkaXJlY3RpdmVzKSxcbiAgICAgICAgICAgIHZhbHVlczogbWVyZ2VFbnVtVmFsdWVzKGUxLnZhbHVlcywgZTIudmFsdWVzLCBjb25maWcpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9uc1xuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLmUxLFxuICAgICAgICAgICAga2luZDogS2luZC5FTlVNX1RZUEVfREVGSU5JVElPTixcbiAgICAgICAgfVxuICAgICAgICA6IGUxO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeFields: () => (/* binding */ mergeFields)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _arguments_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./arguments.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/arguments.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js\");\n\n\n\n\nfunction fieldAlreadyExists(fieldsArr, otherField) {\n    const resultIndex = fieldsArr.findIndex(field => field.name.value === otherField.name.value);\n    return [resultIndex > -1 ? fieldsArr[resultIndex] : null, resultIndex];\n}\nfunction mergeFields(type, f1, f2, config, directives) {\n    const result = [];\n    if (f2 != null) {\n        result.push(...f2);\n    }\n    if (f1 != null) {\n        for (const field of f1) {\n            const [existing, existingIndex] = fieldAlreadyExists(result, field);\n            if (existing && !config?.ignoreFieldConflicts) {\n                const newField = (config?.onFieldTypeConflict &&\n                    config.onFieldTypeConflict(existing, field, type, config?.throwOnConflict)) ||\n                    preventConflicts(type, existing, field, config?.throwOnConflict);\n                newField.arguments = (0,_arguments_js__WEBPACK_IMPORTED_MODULE_0__.mergeArguments)(field['arguments'] || [], existing['arguments'] || [], config);\n                newField.directives = (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(field.directives, existing.directives, config, directives);\n                newField.description = field.description || existing.description;\n                result[existingIndex] = newField;\n            }\n            else {\n                result.push(field);\n            }\n        }\n    }\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.compareNodes);\n    }\n    if (config && config.exclusions) {\n        const exclusions = config.exclusions;\n        return result.filter(field => !exclusions.includes(`${type.name.value}.${field.name.value}`));\n    }\n    return result;\n}\nfunction preventConflicts(type, a, b, ignoreNullability = false) {\n    const aType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.printTypeNode)(a.type);\n    const bType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.printTypeNode)(b.type);\n    if (aType !== bType) {\n        const t1 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractType)(a.type);\n        const t2 = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.extractType)(b.type);\n        if (t1.name.value !== t2.name.value) {\n            throw new Error(`Field \"${b.name.value}\" already defined with a different type. Declared as \"${t1.name.value}\", but you tried to override with \"${t2.name.value}\"`);\n        }\n        if (!safeChangeForFieldType(a.type, b.type, !ignoreNullability)) {\n            throw new Error(`Field '${type.name.value}.${a.name.value}' changed type from '${aType}' to '${bType}'`);\n        }\n    }\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(b.type) && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(a.type)) {\n        a.type = b.type;\n    }\n    return a;\n}\nfunction safeChangeForFieldType(oldType, newType, ignoreNullability = false) {\n    // both are named\n    if (!(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isWrappingTypeNode)(oldType) && !(0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isWrappingTypeNode)(newType)) {\n        return oldType.toString() === newType.toString();\n    }\n    // new is non-null\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(newType)) {\n        const ofType = (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(oldType) ? oldType.type : oldType;\n        return safeChangeForFieldType(ofType, newType.type);\n    }\n    // old is non-null\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(oldType)) {\n        return safeChangeForFieldType(newType, oldType, ignoreNullability);\n    }\n    // old is list\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isListTypeNode)(oldType)) {\n        return (((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isListTypeNode)(newType) && safeChangeForFieldType(oldType.type, newType.type)) ||\n            ((0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.isNonNullTypeNode)(newType) && safeChangeForFieldType(oldType, newType['type'])));\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2ZpZWxkcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFvRDtBQUNKO0FBQ0U7QUFDOEQ7QUFDaEg7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsNkRBQWM7QUFDbkQsc0NBQXNDLCtEQUFlO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQiw4REFBWTtBQUNoQztBQUNBO0FBQ0E7QUFDQSw4REFBOEQsZ0JBQWdCLEdBQUcsaUJBQWlCO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHdEQUFhO0FBQy9CLGtCQUFrQix3REFBYTtBQUMvQjtBQUNBLG1CQUFtQixzREFBVztBQUM5QixtQkFBbUIsc0RBQVc7QUFDOUI7QUFDQSxzQ0FBc0MsYUFBYSx3REFBd0QsY0FBYyxxQ0FBcUMsY0FBYztBQUM1SztBQUNBO0FBQ0Esc0NBQXNDLGdCQUFnQixHQUFHLGFBQWEsdUJBQXVCLE1BQU0sUUFBUSxNQUFNO0FBQ2pIO0FBQ0E7QUFDQSxRQUFRLDREQUFpQixhQUFhLDREQUFpQjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDZEQUFrQixjQUFjLDZEQUFrQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLDREQUFpQjtBQUN6Qix1QkFBdUIsNERBQWlCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLFFBQVEsNERBQWlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQWM7QUFDdEIsaUJBQWlCLHlEQUFjO0FBQy9CLGFBQWEsNERBQWlCO0FBQzlCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2ZpZWxkcy5qcz80YWNhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbXBhcmVOb2RlcyB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IG1lcmdlQXJndW1lbnRzIH0gZnJvbSAnLi9hcmd1bWVudHMuanMnO1xuaW1wb3J0IHsgbWVyZ2VEaXJlY3RpdmVzIH0gZnJvbSAnLi9kaXJlY3RpdmVzLmpzJztcbmltcG9ydCB7IGV4dHJhY3RUeXBlLCBpc0xpc3RUeXBlTm9kZSwgaXNOb25OdWxsVHlwZU5vZGUsIGlzV3JhcHBpbmdUeXBlTm9kZSwgcHJpbnRUeXBlTm9kZSwgfSBmcm9tICcuL3V0aWxzLmpzJztcbmZ1bmN0aW9uIGZpZWxkQWxyZWFkeUV4aXN0cyhmaWVsZHNBcnIsIG90aGVyRmllbGQpIHtcbiAgICBjb25zdCByZXN1bHRJbmRleCA9IGZpZWxkc0Fyci5maW5kSW5kZXgoZmllbGQgPT4gZmllbGQubmFtZS52YWx1ZSA9PT0gb3RoZXJGaWVsZC5uYW1lLnZhbHVlKTtcbiAgICByZXR1cm4gW3Jlc3VsdEluZGV4ID4gLTEgPyBmaWVsZHNBcnJbcmVzdWx0SW5kZXhdIDogbnVsbCwgcmVzdWx0SW5kZXhdO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRmllbGRzKHR5cGUsIGYxLCBmMiwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgY29uc3QgcmVzdWx0ID0gW107XG4gICAgaWYgKGYyICE9IG51bGwpIHtcbiAgICAgICAgcmVzdWx0LnB1c2goLi4uZjIpO1xuICAgIH1cbiAgICBpZiAoZjEgIT0gbnVsbCkge1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkIG9mIGYxKSB7XG4gICAgICAgICAgICBjb25zdCBbZXhpc3RpbmcsIGV4aXN0aW5nSW5kZXhdID0gZmllbGRBbHJlYWR5RXhpc3RzKHJlc3VsdCwgZmllbGQpO1xuICAgICAgICAgICAgaWYgKGV4aXN0aW5nICYmICFjb25maWc/Lmlnbm9yZUZpZWxkQ29uZmxpY3RzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgbmV3RmllbGQgPSAoY29uZmlnPy5vbkZpZWxkVHlwZUNvbmZsaWN0ICYmXG4gICAgICAgICAgICAgICAgICAgIGNvbmZpZy5vbkZpZWxkVHlwZUNvbmZsaWN0KGV4aXN0aW5nLCBmaWVsZCwgdHlwZSwgY29uZmlnPy50aHJvd09uQ29uZmxpY3QpKSB8fFxuICAgICAgICAgICAgICAgICAgICBwcmV2ZW50Q29uZmxpY3RzKHR5cGUsIGV4aXN0aW5nLCBmaWVsZCwgY29uZmlnPy50aHJvd09uQ29uZmxpY3QpO1xuICAgICAgICAgICAgICAgIG5ld0ZpZWxkLmFyZ3VtZW50cyA9IG1lcmdlQXJndW1lbnRzKGZpZWxkWydhcmd1bWVudHMnXSB8fCBbXSwgZXhpc3RpbmdbJ2FyZ3VtZW50cyddIHx8IFtdLCBjb25maWcpO1xuICAgICAgICAgICAgICAgIG5ld0ZpZWxkLmRpcmVjdGl2ZXMgPSBtZXJnZURpcmVjdGl2ZXMoZmllbGQuZGlyZWN0aXZlcywgZXhpc3RpbmcuZGlyZWN0aXZlcywgY29uZmlnLCBkaXJlY3RpdmVzKTtcbiAgICAgICAgICAgICAgICBuZXdGaWVsZC5kZXNjcmlwdGlvbiA9IGZpZWxkLmRlc2NyaXB0aW9uIHx8IGV4aXN0aW5nLmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgICAgIHJlc3VsdFtleGlzdGluZ0luZGV4XSA9IG5ld0ZpZWxkO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goZmllbGQpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChjb25maWcgJiYgY29uZmlnLnNvcnQpIHtcbiAgICAgICAgcmVzdWx0LnNvcnQoY29tcGFyZU5vZGVzKTtcbiAgICB9XG4gICAgaWYgKGNvbmZpZyAmJiBjb25maWcuZXhjbHVzaW9ucykge1xuICAgICAgICBjb25zdCBleGNsdXNpb25zID0gY29uZmlnLmV4Y2x1c2lvbnM7XG4gICAgICAgIHJldHVybiByZXN1bHQuZmlsdGVyKGZpZWxkID0+ICFleGNsdXNpb25zLmluY2x1ZGVzKGAke3R5cGUubmFtZS52YWx1ZX0uJHtmaWVsZC5uYW1lLnZhbHVlfWApKTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIHByZXZlbnRDb25mbGljdHModHlwZSwgYSwgYiwgaWdub3JlTnVsbGFiaWxpdHkgPSBmYWxzZSkge1xuICAgIGNvbnN0IGFUeXBlID0gcHJpbnRUeXBlTm9kZShhLnR5cGUpO1xuICAgIGNvbnN0IGJUeXBlID0gcHJpbnRUeXBlTm9kZShiLnR5cGUpO1xuICAgIGlmIChhVHlwZSAhPT0gYlR5cGUpIHtcbiAgICAgICAgY29uc3QgdDEgPSBleHRyYWN0VHlwZShhLnR5cGUpO1xuICAgICAgICBjb25zdCB0MiA9IGV4dHJhY3RUeXBlKGIudHlwZSk7XG4gICAgICAgIGlmICh0MS5uYW1lLnZhbHVlICE9PSB0Mi5uYW1lLnZhbHVlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEZpZWxkIFwiJHtiLm5hbWUudmFsdWV9XCIgYWxyZWFkeSBkZWZpbmVkIHdpdGggYSBkaWZmZXJlbnQgdHlwZS4gRGVjbGFyZWQgYXMgXCIke3QxLm5hbWUudmFsdWV9XCIsIGJ1dCB5b3UgdHJpZWQgdG8gb3ZlcnJpZGUgd2l0aCBcIiR7dDIubmFtZS52YWx1ZX1cImApO1xuICAgICAgICB9XG4gICAgICAgIGlmICghc2FmZUNoYW5nZUZvckZpZWxkVHlwZShhLnR5cGUsIGIudHlwZSwgIWlnbm9yZU51bGxhYmlsaXR5KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGaWVsZCAnJHt0eXBlLm5hbWUudmFsdWV9LiR7YS5uYW1lLnZhbHVlfScgY2hhbmdlZCB0eXBlIGZyb20gJyR7YVR5cGV9JyB0byAnJHtiVHlwZX0nYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKGlzTm9uTnVsbFR5cGVOb2RlKGIudHlwZSkgJiYgIWlzTm9uTnVsbFR5cGVOb2RlKGEudHlwZSkpIHtcbiAgICAgICAgYS50eXBlID0gYi50eXBlO1xuICAgIH1cbiAgICByZXR1cm4gYTtcbn1cbmZ1bmN0aW9uIHNhZmVDaGFuZ2VGb3JGaWVsZFR5cGUob2xkVHlwZSwgbmV3VHlwZSwgaWdub3JlTnVsbGFiaWxpdHkgPSBmYWxzZSkge1xuICAgIC8vIGJvdGggYXJlIG5hbWVkXG4gICAgaWYgKCFpc1dyYXBwaW5nVHlwZU5vZGUob2xkVHlwZSkgJiYgIWlzV3JhcHBpbmdUeXBlTm9kZShuZXdUeXBlKSkge1xuICAgICAgICByZXR1cm4gb2xkVHlwZS50b1N0cmluZygpID09PSBuZXdUeXBlLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIC8vIG5ldyBpcyBub24tbnVsbFxuICAgIGlmIChpc05vbk51bGxUeXBlTm9kZShuZXdUeXBlKSkge1xuICAgICAgICBjb25zdCBvZlR5cGUgPSBpc05vbk51bGxUeXBlTm9kZShvbGRUeXBlKSA/IG9sZFR5cGUudHlwZSA6IG9sZFR5cGU7XG4gICAgICAgIHJldHVybiBzYWZlQ2hhbmdlRm9yRmllbGRUeXBlKG9mVHlwZSwgbmV3VHlwZS50eXBlKTtcbiAgICB9XG4gICAgLy8gb2xkIGlzIG5vbi1udWxsXG4gICAgaWYgKGlzTm9uTnVsbFR5cGVOb2RlKG9sZFR5cGUpKSB7XG4gICAgICAgIHJldHVybiBzYWZlQ2hhbmdlRm9yRmllbGRUeXBlKG5ld1R5cGUsIG9sZFR5cGUsIGlnbm9yZU51bGxhYmlsaXR5KTtcbiAgICB9XG4gICAgLy8gb2xkIGlzIGxpc3RcbiAgICBpZiAoaXNMaXN0VHlwZU5vZGUob2xkVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuICgoaXNMaXN0VHlwZU5vZGUobmV3VHlwZSkgJiYgc2FmZUNoYW5nZUZvckZpZWxkVHlwZShvbGRUeXBlLnR5cGUsIG5ld1R5cGUudHlwZSkpIHx8XG4gICAgICAgICAgICAoaXNOb25OdWxsVHlwZU5vZGUobmV3VHlwZSkgJiYgc2FmZUNoYW5nZUZvckZpZWxkVHlwZShvbGRUeXBlLCBuZXdUeXBlWyd0eXBlJ10pKSk7XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeInputType: () => (/* binding */ mergeInputType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fields.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\");\n\n\n\nfunction mergeInputType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: config?.convertExtensions ||\n                    node.kind === 'InputObjectTypeDefinition' ||\n                    existingNode.kind === 'InputObjectTypeDefinition'\n                    ? 'InputObjectTypeDefinition'\n                    : 'InputObjectTypeExtension',\n                loc: node.loc,\n                fields: (0,_fields_js__WEBPACK_IMPORTED_MODULE_0__.mergeFields)(node, node.fields, existingNode.fields, config),\n                directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL input type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2lucHV0LXR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNrQjtBQUNSO0FBQ25DO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1REFBVztBQUNuQyw0QkFBNEIsK0RBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsbUVBQW1FLGdCQUFnQixLQUFLLFVBQVU7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9pbnB1dC10eXBlLmpzPzEyMGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lcmdlRGlyZWN0aXZlcyB9IGZyb20gJy4vZGlyZWN0aXZlcy5qcyc7XG5pbXBvcnQgeyBtZXJnZUZpZWxkcyB9IGZyb20gJy4vZmllbGRzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUlucHV0VHlwZShub2RlLCBleGlzdGluZ05vZGUsIGNvbmZpZywgZGlyZWN0aXZlcykge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBub2RlWydkZXNjcmlwdGlvbiddIHx8IGV4aXN0aW5nTm9kZVsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgICAgICAgICBraW5kOiBjb25maWc/LmNvbnZlcnRFeHRlbnNpb25zIHx8XG4gICAgICAgICAgICAgICAgICAgIG5vZGUua2luZCA9PT0gJ0lucHV0T2JqZWN0VHlwZURlZmluaXRpb24nIHx8XG4gICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nTm9kZS5raW5kID09PSAnSW5wdXRPYmplY3RUeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICAgICAgPyAnSW5wdXRPYmplY3RUeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICAgICAgOiAnSW5wdXRPYmplY3RUeXBlRXh0ZW5zaW9uJyxcbiAgICAgICAgICAgICAgICBsb2M6IG5vZGUubG9jLFxuICAgICAgICAgICAgICAgIGZpZWxkczogbWVyZ2VGaWVsZHMobm9kZSwgbm9kZS5maWVsZHMsIGV4aXN0aW5nTm9kZS5maWVsZHMsIGNvbmZpZyksXG4gICAgICAgICAgICAgICAgZGlyZWN0aXZlczogbWVyZ2VEaXJlY3RpdmVzKG5vZGUuZGlyZWN0aXZlcywgZXhpc3RpbmdOb2RlLmRpcmVjdGl2ZXMsIGNvbmZpZywgZGlyZWN0aXZlcyksXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBtZXJnZSBHcmFwaFFMIGlucHV0IHR5cGUgXCIke25vZGUubmFtZS52YWx1ZX1cIjogJHtlLm1lc3NhZ2V9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGNvbmZpZz8uY29udmVydEV4dGVuc2lvbnNcbiAgICAgICAgPyB7XG4gICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAga2luZDogS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogbm9kZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeInterface: () => (/* binding */ mergeInterface)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fields.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\");\n/* harmony import */ var _merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merge-named-type-array.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\");\n\n\n\n\nfunction mergeInterface(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: config?.convertExtensions ||\n                    node.kind === 'InterfaceTypeDefinition' ||\n                    existingNode.kind === 'InterfaceTypeDefinition'\n                    ? 'InterfaceTypeDefinition'\n                    : 'InterfaceTypeExtension',\n                loc: node.loc,\n                fields: (0,_fields_js__WEBPACK_IMPORTED_MODULE_0__.mergeFields)(node, node.fields, existingNode.fields, config, directives),\n                directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n                interfaces: node['interfaces']\n                    ? (0,_merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__.mergeNamedTypeArray)(node['interfaces'], existingNode['interfaces'], config)\n                    : undefined,\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL interface \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.INTERFACE_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFnQztBQUNrQjtBQUNSO0FBQ3dCO0FBQzNEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1REFBVztBQUNuQyw0QkFBNEIsK0RBQWU7QUFDM0M7QUFDQSxzQkFBc0IsK0VBQW1CO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0VBQWtFLGdCQUFnQixLQUFLLFVBQVU7QUFDakc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy9pbnRlcmZhY2UuanM/NjAzMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgbWVyZ2VEaXJlY3RpdmVzIH0gZnJvbSAnLi9kaXJlY3RpdmVzLmpzJztcbmltcG9ydCB7IG1lcmdlRmllbGRzIH0gZnJvbSAnLi9maWVsZHMuanMnO1xuaW1wb3J0IHsgbWVyZ2VOYW1lZFR5cGVBcnJheSB9IGZyb20gJy4vbWVyZ2UtbmFtZWQtdHlwZS1hcnJheS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VJbnRlcmZhY2Uobm9kZSwgZXhpc3RpbmdOb2RlLCBjb25maWcsIGRpcmVjdGl2ZXMpIHtcbiAgICBpZiAoZXhpc3RpbmdOb2RlKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG5hbWU6IG5vZGUubmFtZSxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogbm9kZVsnZGVzY3JpcHRpb24nXSB8fCBleGlzdGluZ05vZGVbJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICAgICAgICAga2luZDogY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9ucyB8fFxuICAgICAgICAgICAgICAgICAgICBub2RlLmtpbmQgPT09ICdJbnRlcmZhY2VUeXBlRGVmaW5pdGlvbicgfHxcbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdOb2RlLmtpbmQgPT09ICdJbnRlcmZhY2VUeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICAgICAgPyAnSW50ZXJmYWNlVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgICAgIDogJ0ludGVyZmFjZVR5cGVFeHRlbnNpb24nLFxuICAgICAgICAgICAgICAgIGxvYzogbm9kZS5sb2MsXG4gICAgICAgICAgICAgICAgZmllbGRzOiBtZXJnZUZpZWxkcyhub2RlLCBub2RlLmZpZWxkcywgZXhpc3RpbmdOb2RlLmZpZWxkcywgY29uZmlnLCBkaXJlY3RpdmVzKSxcbiAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBtZXJnZURpcmVjdGl2ZXMobm9kZS5kaXJlY3RpdmVzLCBleGlzdGluZ05vZGUuZGlyZWN0aXZlcywgY29uZmlnLCBkaXJlY3RpdmVzKSxcbiAgICAgICAgICAgICAgICBpbnRlcmZhY2VzOiBub2RlWydpbnRlcmZhY2VzJ11cbiAgICAgICAgICAgICAgICAgICAgPyBtZXJnZU5hbWVkVHlwZUFycmF5KG5vZGVbJ2ludGVyZmFjZXMnXSwgZXhpc3RpbmdOb2RlWydpbnRlcmZhY2VzJ10sIGNvbmZpZylcbiAgICAgICAgICAgICAgICAgICAgOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuYWJsZSB0byBtZXJnZSBHcmFwaFFMIGludGVyZmFjZSBcIiR7bm9kZS5uYW1lLnZhbHVlfVwiOiAke2UubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9uc1xuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICBraW5kOiBLaW5kLklOVEVSRkFDRV9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBub2RlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeNamedTypeArray: () => (/* binding */ mergeNamedTypeArray)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction alreadyExists(arr, other) {\n    return !!arr.find(i => i.name.value === other.name.value);\n}\nfunction mergeNamedTypeArray(first = [], second = [], config = {}) {\n    const result = [...second, ...first.filter(d => !alreadyExists(second, d))];\n    if (config && config.sort) {\n        result.sort(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.compareNodes);\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL21lcmdlLW5hbWVkLXR5cGUtYXJyYXkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ08saUVBQWlFO0FBQ3hFO0FBQ0E7QUFDQSxvQkFBb0IsOERBQVk7QUFDaEM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvbWVyZ2UtbmFtZWQtdHlwZS1hcnJheS5qcz8wYzY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbXBhcmVOb2RlcyB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmZ1bmN0aW9uIGFscmVhZHlFeGlzdHMoYXJyLCBvdGhlcikge1xuICAgIHJldHVybiAhIWFyci5maW5kKGkgPT4gaS5uYW1lLnZhbHVlID09PSBvdGhlci5uYW1lLnZhbHVlKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZU5hbWVkVHlwZUFycmF5KGZpcnN0ID0gW10sIHNlY29uZCA9IFtdLCBjb25maWcgPSB7fSkge1xuICAgIGNvbnN0IHJlc3VsdCA9IFsuLi5zZWNvbmQsIC4uLmZpcnN0LmZpbHRlcihkID0+ICFhbHJlYWR5RXhpc3RzKHNlY29uZCwgZCkpXTtcbiAgICBpZiAoY29uZmlnICYmIGNvbmZpZy5zb3J0KSB7XG4gICAgICAgIHJlc3VsdC5zb3J0KGNvbXBhcmVOb2Rlcyk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isNamedDefinitionNode: () => (/* binding */ isNamedDefinitionNode),\n/* harmony export */   mergeGraphQLNodes: () => (/* binding */ mergeGraphQLNodes),\n/* harmony export */   schemaDefSymbol: () => (/* binding */ schemaDefSymbol)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/comments.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _enum_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./enum.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js\");\n/* harmony import */ var _input_type_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./input-type.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js\");\n/* harmony import */ var _interface_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./interface.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js\");\n/* harmony import */ var _scalar_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./scalar.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js\");\n/* harmony import */ var _schema_def_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./schema-def.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js\");\n/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./union.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js\");\n\n\n\n\n\n\n\n\n\n\nconst schemaDefSymbol = 'SCHEMA_DEF_SYMBOL';\nfunction isNamedDefinitionNode(definitionNode) {\n    return 'name' in definitionNode;\n}\nfunction mergeGraphQLNodes(nodes, config, directives = {}) {\n    const mergedResultMap = directives;\n    for (const nodeDefinition of nodes) {\n        if (isNamedDefinitionNode(nodeDefinition)) {\n            const name = nodeDefinition.name?.value;\n            if (config?.commentDescriptions) {\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.collectComment)(nodeDefinition);\n            }\n            if (name == null) {\n                continue;\n            }\n            if (config?.exclusions?.includes(name + '.*') || config?.exclusions?.includes(name)) {\n                delete mergedResultMap[name];\n            }\n            else {\n                switch (nodeDefinition.kind) {\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_type_js__WEBPACK_IMPORTED_MODULE_2__.mergeType)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_enum_js__WEBPACK_IMPORTED_MODULE_3__.mergeEnum)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_union_js__WEBPACK_IMPORTED_MODULE_4__.mergeUnion)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_scalar_js__WEBPACK_IMPORTED_MODULE_5__.mergeScalar)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_input_type_js__WEBPACK_IMPORTED_MODULE_6__.mergeInputType)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INTERFACE_TYPE_DEFINITION:\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INTERFACE_TYPE_EXTENSION:\n                        mergedResultMap[name] = (0,_interface_js__WEBPACK_IMPORTED_MODULE_7__.mergeInterface)(nodeDefinition, mergedResultMap[name], config, directives);\n                        break;\n                    case graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE_DEFINITION:\n                        if (mergedResultMap[name]) {\n                            const isInheritedFromPrototype = name in {}; // i.e. toString\n                            if (isInheritedFromPrototype) {\n                                if (!isASTNode(mergedResultMap[name])) {\n                                    mergedResultMap[name] = undefined;\n                                }\n                            }\n                        }\n                        mergedResultMap[name] = (0,_directives_js__WEBPACK_IMPORTED_MODULE_8__.mergeDirective)(nodeDefinition, mergedResultMap[name]);\n                        break;\n                }\n            }\n        }\n        else if (nodeDefinition.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION ||\n            nodeDefinition.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_EXTENSION) {\n            mergedResultMap[schemaDefSymbol] = (0,_schema_def_js__WEBPACK_IMPORTED_MODULE_9__.mergeSchemaDefs)(nodeDefinition, mergedResultMap[schemaDefSymbol], config);\n        }\n    }\n    return mergedResultMap;\n}\nfunction isASTNode(node) {\n    return (node != null && typeof node === 'object' && 'kind' in node && typeof node.kind === 'string');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL21lcmdlLW5vZGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDc0I7QUFDTDtBQUNYO0FBQ1c7QUFDRDtBQUNOO0FBQ1E7QUFDWjtBQUNFO0FBQ2pDO0FBQ0E7QUFDUDtBQUNBO0FBQ08seURBQXlEO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0VBQWM7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHlDQUFJO0FBQzdCLHlCQUF5Qix5Q0FBSTtBQUM3QixnREFBZ0QsbURBQVM7QUFDekQ7QUFDQSx5QkFBeUIseUNBQUk7QUFDN0IseUJBQXlCLHlDQUFJO0FBQzdCLGdEQUFnRCxtREFBUztBQUN6RDtBQUNBLHlCQUF5Qix5Q0FBSTtBQUM3Qix5QkFBeUIseUNBQUk7QUFDN0IsZ0RBQWdELHFEQUFVO0FBQzFEO0FBQ0EseUJBQXlCLHlDQUFJO0FBQzdCLHlCQUF5Qix5Q0FBSTtBQUM3QixnREFBZ0QsdURBQVc7QUFDM0Q7QUFDQSx5QkFBeUIseUNBQUk7QUFDN0IseUJBQXlCLHlDQUFJO0FBQzdCLGdEQUFnRCw4REFBYztBQUM5RDtBQUNBLHlCQUF5Qix5Q0FBSTtBQUM3Qix5QkFBeUIseUNBQUk7QUFDN0IsZ0RBQWdELDZEQUFjO0FBQzlEO0FBQ0EseUJBQXlCLHlDQUFJO0FBQzdCO0FBQ0EseUVBQXlFO0FBQ3pFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCw4REFBYztBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5Qyx5Q0FBSTtBQUM3QyxvQ0FBb0MseUNBQUk7QUFDeEMsK0NBQStDLCtEQUFlO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvbWVyZ2Utbm9kZXMuanM/Y2JhOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgY29sbGVjdENvbW1lbnQgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZSB9IGZyb20gJy4vZGlyZWN0aXZlcy5qcyc7XG5pbXBvcnQgeyBtZXJnZUVudW0gfSBmcm9tICcuL2VudW0uanMnO1xuaW1wb3J0IHsgbWVyZ2VJbnB1dFR5cGUgfSBmcm9tICcuL2lucHV0LXR5cGUuanMnO1xuaW1wb3J0IHsgbWVyZ2VJbnRlcmZhY2UgfSBmcm9tICcuL2ludGVyZmFjZS5qcyc7XG5pbXBvcnQgeyBtZXJnZVNjYWxhciB9IGZyb20gJy4vc2NhbGFyLmpzJztcbmltcG9ydCB7IG1lcmdlU2NoZW1hRGVmcyB9IGZyb20gJy4vc2NoZW1hLWRlZi5qcyc7XG5pbXBvcnQgeyBtZXJnZVR5cGUgfSBmcm9tICcuL3R5cGUuanMnO1xuaW1wb3J0IHsgbWVyZ2VVbmlvbiB9IGZyb20gJy4vdW5pb24uanMnO1xuZXhwb3J0IGNvbnN0IHNjaGVtYURlZlN5bWJvbCA9ICdTQ0hFTUFfREVGX1NZTUJPTCc7XG5leHBvcnQgZnVuY3Rpb24gaXNOYW1lZERlZmluaXRpb25Ob2RlKGRlZmluaXRpb25Ob2RlKSB7XG4gICAgcmV0dXJuICduYW1lJyBpbiBkZWZpbml0aW9uTm9kZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBtZXJnZUdyYXBoUUxOb2Rlcyhub2RlcywgY29uZmlnLCBkaXJlY3RpdmVzID0ge30pIHtcbiAgICBjb25zdCBtZXJnZWRSZXN1bHRNYXAgPSBkaXJlY3RpdmVzO1xuICAgIGZvciAoY29uc3Qgbm9kZURlZmluaXRpb24gb2Ygbm9kZXMpIHtcbiAgICAgICAgaWYgKGlzTmFtZWREZWZpbml0aW9uTm9kZShub2RlRGVmaW5pdGlvbikpIHtcbiAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBub2RlRGVmaW5pdGlvbi5uYW1lPy52YWx1ZTtcbiAgICAgICAgICAgIGlmIChjb25maWc/LmNvbW1lbnREZXNjcmlwdGlvbnMpIHtcbiAgICAgICAgICAgICAgICBjb2xsZWN0Q29tbWVudChub2RlRGVmaW5pdGlvbik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoY29uZmlnPy5leGNsdXNpb25zPy5pbmNsdWRlcyhuYW1lICsgJy4qJykgfHwgY29uZmlnPy5leGNsdXNpb25zPy5pbmNsdWRlcyhuYW1lKSkge1xuICAgICAgICAgICAgICAgIGRlbGV0ZSBtZXJnZWRSZXN1bHRNYXBbbmFtZV07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKG5vZGVEZWZpbml0aW9uLmtpbmQpIHtcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLk9CSkVDVF9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5PQkpFQ1RfVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSBtZXJnZVR5cGUobm9kZURlZmluaXRpb24sIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSwgY29uZmlnLCBkaXJlY3RpdmVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuRU5VTV9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5FTlVNX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gbWVyZ2VFbnVtKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZywgZGlyZWN0aXZlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLlVOSU9OX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLlVOSU9OX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gbWVyZ2VVbmlvbihub2RlRGVmaW5pdGlvbiwgbWVyZ2VkUmVzdWx0TWFwW25hbWVdLCBjb25maWcsIGRpcmVjdGl2ZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5TQ0FMQVJfVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuU0NBTEFSX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgICAgICAgICAgbWVyZ2VkUmVzdWx0TWFwW25hbWVdID0gbWVyZ2VTY2FsYXIobm9kZURlZmluaXRpb24sIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSwgY29uZmlnLCBkaXJlY3RpdmVzKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICBjYXNlIEtpbmQuSU5QVVRfT0JKRUNUX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLklOUFVUX09CSkVDVF9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgICAgICAgICAgICAgIG1lcmdlZFJlc3VsdE1hcFtuYW1lXSA9IG1lcmdlSW5wdXRUeXBlKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbbmFtZV0sIGNvbmZpZywgZGlyZWN0aXZlcyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBLaW5kLklOVEVSRkFDRV9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5JTlRFUkZBQ0VfVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSBtZXJnZUludGVyZmFjZShub2RlRGVmaW5pdGlvbiwgbWVyZ2VkUmVzdWx0TWFwW25hbWVdLCBjb25maWcsIGRpcmVjdGl2ZXMpO1xuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgS2luZC5ESVJFQ1RJVkVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtZXJnZWRSZXN1bHRNYXBbbmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zdCBpc0luaGVyaXRlZEZyb21Qcm90b3R5cGUgPSBuYW1lIGluIHt9OyAvLyBpLmUuIHRvU3RyaW5nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzSW5oZXJpdGVkRnJvbVByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoIWlzQVNUTm9kZShtZXJnZWRSZXN1bHRNYXBbbmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBtZXJnZWRSZXN1bHRNYXBbbmFtZV0gPSBtZXJnZURpcmVjdGl2ZShub2RlRGVmaW5pdGlvbiwgbWVyZ2VkUmVzdWx0TWFwW25hbWVdKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChub2RlRGVmaW5pdGlvbi5raW5kID09PSBLaW5kLlNDSEVNQV9ERUZJTklUSU9OIHx8XG4gICAgICAgICAgICBub2RlRGVmaW5pdGlvbi5raW5kID09PSBLaW5kLlNDSEVNQV9FWFRFTlNJT04pIHtcbiAgICAgICAgICAgIG1lcmdlZFJlc3VsdE1hcFtzY2hlbWFEZWZTeW1ib2xdID0gbWVyZ2VTY2hlbWFEZWZzKG5vZGVEZWZpbml0aW9uLCBtZXJnZWRSZXN1bHRNYXBbc2NoZW1hRGVmU3ltYm9sXSwgY29uZmlnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VkUmVzdWx0TWFwO1xufVxuZnVuY3Rpb24gaXNBU1ROb2RlKG5vZGUpIHtcbiAgICByZXR1cm4gKG5vZGUgIT0gbnVsbCAmJiB0eXBlb2Ygbm9kZSA9PT0gJ29iamVjdCcgJiYgJ2tpbmQnIGluIG5vZGUgJiYgdHlwZW9mIG5vZGUua2luZCA9PT0gJ3N0cmluZycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeGraphQLTypes: () => (/* binding */ mergeGraphQLTypes),\n/* harmony export */   mergeTypeDefs: () => (/* binding */ mergeTypeDefs)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/predicates.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/comments.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/isDocumentNode.js\");\n/* harmony import */ var _merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./merge-nodes.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-nodes.js\");\n/* harmony import */ var _schema_def_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./schema-def.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js\");\n\n\n\n\n\nfunction mergeTypeDefs(typeSource, config) {\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.resetComments)();\n    const doc = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DOCUMENT,\n        definitions: mergeGraphQLTypes(typeSource, {\n            useSchemaDefinition: true,\n            forceSchemaDefinition: false,\n            throwOnConflict: false,\n            commentDescriptions: false,\n            ...config,\n        }),\n    };\n    let result;\n    if (config?.commentDescriptions) {\n        result = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.printWithComments)(doc);\n    }\n    else {\n        result = doc;\n    }\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.resetComments)();\n    return result;\n}\nfunction visitTypeSources(typeSource, options, allDirectives = [], allNodes = [], visitedTypeSources = new Set()) {\n    if (typeSource && !visitedTypeSources.has(typeSource)) {\n        visitedTypeSources.add(typeSource);\n        if (typeof typeSource === 'function') {\n            visitTypeSources(typeSource(), options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (Array.isArray(typeSource)) {\n            for (const type of typeSource) {\n                visitTypeSources(type, options, allDirectives, allNodes, visitedTypeSources);\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSchema)(typeSource)) {\n            const documentNode = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getDocumentNodeFromSchema)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isStringTypes)(typeSource) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.isSourceTypes)(typeSource)) {\n            const documentNode = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.parse)(typeSource, options);\n            visitTypeSources(documentNode.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else if (typeof typeSource === 'object' && (0,graphql__WEBPACK_IMPORTED_MODULE_6__.isDefinitionNode)(typeSource)) {\n            if (typeSource.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.DIRECTIVE_DEFINITION) {\n                allDirectives.push(typeSource);\n            }\n            else {\n                allNodes.push(typeSource);\n            }\n        }\n        else if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.isDocumentNode)(typeSource)) {\n            visitTypeSources(typeSource.definitions, options, allDirectives, allNodes, visitedTypeSources);\n        }\n        else {\n            throw new Error(`typeDefs must contain only strings, documents, schemas, or functions, got ${typeof typeSource}`);\n        }\n    }\n    return { allDirectives, allNodes };\n}\nfunction mergeGraphQLTypes(typeSource, config) {\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.resetComments)();\n    const { allDirectives, allNodes } = visitTypeSources(typeSource, config);\n    const mergedDirectives = (0,_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.mergeGraphQLNodes)(allDirectives, config);\n    const mergedNodes = (0,_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.mergeGraphQLNodes)(allNodes, config, mergedDirectives);\n    if (config?.useSchemaDefinition) {\n        // XXX: right now we don't handle multiple schema definitions\n        const schemaDef = mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol] || {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION,\n            operationTypes: [],\n        };\n        const operationTypes = schemaDef.operationTypes;\n        for (const opTypeDefNodeType in _schema_def_js__WEBPACK_IMPORTED_MODULE_9__.DEFAULT_OPERATION_TYPE_NAME_MAP) {\n            const opTypeDefNode = operationTypes.find(operationType => operationType.operation === opTypeDefNodeType);\n            if (!opTypeDefNode) {\n                const possibleRootTypeName = _schema_def_js__WEBPACK_IMPORTED_MODULE_9__.DEFAULT_OPERATION_TYPE_NAME_MAP[opTypeDefNodeType];\n                const existingPossibleRootType = mergedNodes[possibleRootTypeName];\n                if (existingPossibleRootType != null && existingPossibleRootType.name != null) {\n                    operationTypes.push({\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_TYPE_DEFINITION,\n                        type: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                            name: existingPossibleRootType.name,\n                        },\n                        operation: opTypeDefNodeType,\n                    });\n                }\n            }\n        }\n        if (schemaDef?.operationTypes?.length != null && schemaDef.operationTypes.length > 0) {\n            mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol] = schemaDef;\n        }\n    }\n    if (config?.forceSchemaDefinition && !mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol]?.operationTypes?.length) {\n        mergedNodes[_merge_nodes_js__WEBPACK_IMPORTED_MODULE_8__.schemaDefSymbol] = {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCHEMA_DEFINITION,\n            operationTypes: [\n                {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: 'query',\n                    type: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n                            value: 'Query',\n                        },\n                    },\n                },\n            ],\n        };\n    }\n    const mergedNodeDefinitions = Object.values(mergedNodes);\n    if (config?.sort) {\n        const sortFn = typeof config.sort === 'function' ? config.sort : _utils_js__WEBPACK_IMPORTED_MODULE_4__.defaultStringComparator;\n        mergedNodeDefinitions.sort((a, b) => sortFn(a.name?.value, b.name?.value));\n    }\n    return mergedNodeDefinitions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeScalar: () => (/* binding */ mergeScalar)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n\n\nfunction mergeScalar(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            name: node.name,\n            description: node['description'] || existingNode['description'],\n            kind: config?.convertExtensions ||\n                node.kind === 'ScalarTypeDefinition' ||\n                existingNode.kind === 'ScalarTypeDefinition'\n                ? 'ScalarTypeDefinition'\n                : 'ScalarTypeExtension',\n            loc: node.loc,\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n        };\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SCALAR_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL3NjYWxhci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0M7QUFDa0I7QUFDM0M7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwrREFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL3NjYWxhci5qcz80MmM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZXMgfSBmcm9tICcuL2RpcmVjdGl2ZXMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlU2NhbGFyKG5vZGUsIGV4aXN0aW5nTm9kZSwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgaWYgKGV4aXN0aW5nTm9kZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246IG5vZGVbJ2Rlc2NyaXB0aW9uJ10gfHwgZXhpc3RpbmdOb2RlWydkZXNjcmlwdGlvbiddLFxuICAgICAgICAgICAga2luZDogY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9ucyB8fFxuICAgICAgICAgICAgICAgIG5vZGUua2luZCA9PT0gJ1NjYWxhclR5cGVEZWZpbml0aW9uJyB8fFxuICAgICAgICAgICAgICAgIGV4aXN0aW5nTm9kZS5raW5kID09PSAnU2NhbGFyVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgPyAnU2NhbGFyVHlwZURlZmluaXRpb24nXG4gICAgICAgICAgICAgICAgOiAnU2NhbGFyVHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICBsb2M6IG5vZGUubG9jLFxuICAgICAgICAgICAgZGlyZWN0aXZlczogbWVyZ2VEaXJlY3RpdmVzKG5vZGUuZGlyZWN0aXZlcywgZXhpc3RpbmdOb2RlLmRpcmVjdGl2ZXMsIGNvbmZpZywgZGlyZWN0aXZlcyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBjb25maWc/LmNvbnZlcnRFeHRlbnNpb25zXG4gICAgICAgID8ge1xuICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0NBTEFSX1RZUEVfREVGSU5JVElPTixcbiAgICAgICAgfVxuICAgICAgICA6IG5vZGU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_OPERATION_TYPE_NAME_MAP: () => (/* binding */ DEFAULT_OPERATION_TYPE_NAME_MAP),\n/* harmony export */   mergeSchemaDefs: () => (/* binding */ mergeSchemaDefs)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n\n\nconst DEFAULT_OPERATION_TYPE_NAME_MAP = {\n    query: 'Query',\n    mutation: 'Mutation',\n    subscription: 'Subscription',\n};\nfunction mergeOperationTypes(opNodeList = [], existingOpNodeList = []) {\n    const finalOpNodeList = [];\n    for (const opNodeType in DEFAULT_OPERATION_TYPE_NAME_MAP) {\n        const opNode = opNodeList.find(n => n.operation === opNodeType) ||\n            existingOpNodeList.find(n => n.operation === opNodeType);\n        if (opNode) {\n            finalOpNodeList.push(opNode);\n        }\n    }\n    return finalOpNodeList;\n}\nfunction mergeSchemaDefs(node, existingNode, config, directives) {\n    if (existingNode) {\n        return {\n            kind: node.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION || existingNode.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION\n                ? graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION\n                : graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_EXTENSION,\n            description: node['description'] || existingNode['description'],\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n            operationTypes: mergeOperationTypes(node.operationTypes, existingNode.operationTypes),\n        };\n    }\n    return (config?.convertExtensions\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION,\n        }\n        : node);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL3NjaGVtYS1kZWYuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFnQztBQUNrQjtBQUMzQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGdDQUFnQyx5Q0FBSSw0Q0FBNEMseUNBQUk7QUFDcEYsa0JBQWtCLHlDQUFJO0FBQ3RCLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBLHdCQUF3QiwrREFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvc2NoZW1hLWRlZi5qcz9hNWMwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZXJnZURpcmVjdGl2ZXMgfSBmcm9tICcuL2RpcmVjdGl2ZXMuanMnO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfT1BFUkFUSU9OX1RZUEVfTkFNRV9NQVAgPSB7XG4gICAgcXVlcnk6ICdRdWVyeScsXG4gICAgbXV0YXRpb246ICdNdXRhdGlvbicsXG4gICAgc3Vic2NyaXB0aW9uOiAnU3Vic2NyaXB0aW9uJyxcbn07XG5mdW5jdGlvbiBtZXJnZU9wZXJhdGlvblR5cGVzKG9wTm9kZUxpc3QgPSBbXSwgZXhpc3RpbmdPcE5vZGVMaXN0ID0gW10pIHtcbiAgICBjb25zdCBmaW5hbE9wTm9kZUxpc3QgPSBbXTtcbiAgICBmb3IgKGNvbnN0IG9wTm9kZVR5cGUgaW4gREVGQVVMVF9PUEVSQVRJT05fVFlQRV9OQU1FX01BUCkge1xuICAgICAgICBjb25zdCBvcE5vZGUgPSBvcE5vZGVMaXN0LmZpbmQobiA9PiBuLm9wZXJhdGlvbiA9PT0gb3BOb2RlVHlwZSkgfHxcbiAgICAgICAgICAgIGV4aXN0aW5nT3BOb2RlTGlzdC5maW5kKG4gPT4gbi5vcGVyYXRpb24gPT09IG9wTm9kZVR5cGUpO1xuICAgICAgICBpZiAob3BOb2RlKSB7XG4gICAgICAgICAgICBmaW5hbE9wTm9kZUxpc3QucHVzaChvcE5vZGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmaW5hbE9wTm9kZUxpc3Q7XG59XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VTY2hlbWFEZWZzKG5vZGUsIGV4aXN0aW5nTm9kZSwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgaWYgKGV4aXN0aW5nTm9kZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogbm9kZS5raW5kID09PSBLaW5kLlNDSEVNQV9ERUZJTklUSU9OIHx8IGV4aXN0aW5nTm9kZS5raW5kID09PSBLaW5kLlNDSEVNQV9ERUZJTklUSU9OXG4gICAgICAgICAgICAgICAgPyBLaW5kLlNDSEVNQV9ERUZJTklUSU9OXG4gICAgICAgICAgICAgICAgOiBLaW5kLlNDSEVNQV9FWFRFTlNJT04sXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogbm9kZVsnZGVzY3JpcHRpb24nXSB8fCBleGlzdGluZ05vZGVbJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICAgICBkaXJlY3RpdmVzOiBtZXJnZURpcmVjdGl2ZXMobm9kZS5kaXJlY3RpdmVzLCBleGlzdGluZ05vZGUuZGlyZWN0aXZlcywgY29uZmlnLCBkaXJlY3RpdmVzKSxcbiAgICAgICAgICAgIG9wZXJhdGlvblR5cGVzOiBtZXJnZU9wZXJhdGlvblR5cGVzKG5vZGUub3BlcmF0aW9uVHlwZXMsIGV4aXN0aW5nTm9kZS5vcGVyYXRpb25UeXBlcyksXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiAoY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9uc1xuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICBraW5kOiBLaW5kLlNDSEVNQV9ERUZJTklUSU9OLFxuICAgICAgICB9XG4gICAgICAgIDogbm9kZSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/schema-def.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeType: () => (/* binding */ mergeType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _fields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fields.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/fields.js\");\n/* harmony import */ var _merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merge-named-type-array.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\");\n\n\n\n\nfunction mergeType(node, existingNode, config, directives) {\n    if (existingNode) {\n        try {\n            return {\n                name: node.name,\n                description: node['description'] || existingNode['description'],\n                kind: config?.convertExtensions ||\n                    node.kind === 'ObjectTypeDefinition' ||\n                    existingNode.kind === 'ObjectTypeDefinition'\n                    ? 'ObjectTypeDefinition'\n                    : 'ObjectTypeExtension',\n                loc: node.loc,\n                fields: (0,_fields_js__WEBPACK_IMPORTED_MODULE_0__.mergeFields)(node, node.fields, existingNode.fields, config, directives),\n                directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_1__.mergeDirectives)(node.directives, existingNode.directives, config, directives),\n                interfaces: (0,_merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__.mergeNamedTypeArray)(node.interfaces, existingNode.interfaces, config),\n            };\n        }\n        catch (e) {\n            throw new Error(`Unable to merge GraphQL type \"${node.name.value}\": ${e.message}`);\n        }\n    }\n    return config?.convertExtensions\n        ? {\n            ...node,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.OBJECT_TYPE_DEFINITION,\n        }\n        : node;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL3R5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFDa0I7QUFDUjtBQUN3QjtBQUMzRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsdURBQVc7QUFDbkMsNEJBQTRCLCtEQUFlO0FBQzNDLDRCQUE0QiwrRUFBbUI7QUFDL0M7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGdCQUFnQixLQUFLLFVBQVU7QUFDNUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9lc20vdHlwZWRlZnMtbWVyZ2Vycy90eXBlLmpzPzg5ZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lcmdlRGlyZWN0aXZlcyB9IGZyb20gJy4vZGlyZWN0aXZlcy5qcyc7XG5pbXBvcnQgeyBtZXJnZUZpZWxkcyB9IGZyb20gJy4vZmllbGRzLmpzJztcbmltcG9ydCB7IG1lcmdlTmFtZWRUeXBlQXJyYXkgfSBmcm9tICcuL21lcmdlLW5hbWVkLXR5cGUtYXJyYXkuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlVHlwZShub2RlLCBleGlzdGluZ05vZGUsIGNvbmZpZywgZGlyZWN0aXZlcykge1xuICAgIGlmIChleGlzdGluZ05vZGUpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgbmFtZTogbm9kZS5uYW1lLFxuICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBub2RlWydkZXNjcmlwdGlvbiddIHx8IGV4aXN0aW5nTm9kZVsnZGVzY3JpcHRpb24nXSxcbiAgICAgICAgICAgICAgICBraW5kOiBjb25maWc/LmNvbnZlcnRFeHRlbnNpb25zIHx8XG4gICAgICAgICAgICAgICAgICAgIG5vZGUua2luZCA9PT0gJ09iamVjdFR5cGVEZWZpbml0aW9uJyB8fFxuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ05vZGUua2luZCA9PT0gJ09iamVjdFR5cGVEZWZpbml0aW9uJ1xuICAgICAgICAgICAgICAgICAgICA/ICdPYmplY3RUeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICAgICAgOiAnT2JqZWN0VHlwZUV4dGVuc2lvbicsXG4gICAgICAgICAgICAgICAgbG9jOiBub2RlLmxvYyxcbiAgICAgICAgICAgICAgICBmaWVsZHM6IG1lcmdlRmllbGRzKG5vZGUsIG5vZGUuZmllbGRzLCBleGlzdGluZ05vZGUuZmllbGRzLCBjb25maWcsIGRpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IG1lcmdlRGlyZWN0aXZlcyhub2RlLmRpcmVjdGl2ZXMsIGV4aXN0aW5nTm9kZS5kaXJlY3RpdmVzLCBjb25maWcsIGRpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgICAgIGludGVyZmFjZXM6IG1lcmdlTmFtZWRUeXBlQXJyYXkobm9kZS5pbnRlcmZhY2VzLCBleGlzdGluZ05vZGUuaW50ZXJmYWNlcywgY29uZmlnKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIG1lcmdlIEdyYXBoUUwgdHlwZSBcIiR7bm9kZS5uYW1lLnZhbHVlfVwiOiAke2UubWVzc2FnZX1gKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9uc1xuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICBraW5kOiBLaW5kLk9CSkVDVF9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBub2RlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeUnion: () => (/* binding */ mergeUnion)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/directives.js\");\n/* harmony import */ var _merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./merge-named-type-array.js */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-named-type-array.js\");\n\n\n\nfunction mergeUnion(first, second, config, directives) {\n    if (second) {\n        return {\n            name: first.name,\n            description: first['description'] || second['description'],\n            // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n            directives: (0,_directives_js__WEBPACK_IMPORTED_MODULE_0__.mergeDirectives)(first.directives, second.directives, config, directives),\n            kind: config?.convertExtensions ||\n                first.kind === 'UnionTypeDefinition' ||\n                second.kind === 'UnionTypeDefinition'\n                ? graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION\n                : graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_EXTENSION,\n            loc: first.loc,\n            types: (0,_merge_named_type_array_js__WEBPACK_IMPORTED_MODULE_2__.mergeNamedTypeArray)(first.types, second.types, config),\n        };\n    }\n    return config?.convertExtensions\n        ? {\n            ...first,\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.UNION_TYPE_DEFINITION,\n        }\n        : first;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL3VuaW9uLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBZ0M7QUFDa0I7QUFDZ0I7QUFDM0Q7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLCtEQUFlO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QixrQkFBa0IseUNBQUk7QUFDdEI7QUFDQSxtQkFBbUIsK0VBQW1CO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2UvZXNtL3R5cGVkZWZzLW1lcmdlcnMvdW5pb24uanM/ZTk3YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgbWVyZ2VEaXJlY3RpdmVzIH0gZnJvbSAnLi9kaXJlY3RpdmVzLmpzJztcbmltcG9ydCB7IG1lcmdlTmFtZWRUeXBlQXJyYXkgfSBmcm9tICcuL21lcmdlLW5hbWVkLXR5cGUtYXJyYXkuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlVW5pb24oZmlyc3QsIHNlY29uZCwgY29uZmlnLCBkaXJlY3RpdmVzKSB7XG4gICAgaWYgKHNlY29uZCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbmFtZTogZmlyc3QubmFtZSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiBmaXJzdFsnZGVzY3JpcHRpb24nXSB8fCBzZWNvbmRbJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICAgICAgICAvLyBDb25zdFhOb2RlIGhhcyBiZWVuIGludHJvZHVjZWQgaW4gdjE2IGJ1dCBpdCBpcyBub3QgY29tcGF0aWJsZSB3aXRoIFhOb2RlIHNvIHdlIGRvIGBhcyBhbnlgIGZvciBiYWNrd2FyZHMgY29tcGF0aWJpbGl0eVxuICAgICAgICAgICAgZGlyZWN0aXZlczogbWVyZ2VEaXJlY3RpdmVzKGZpcnN0LmRpcmVjdGl2ZXMsIHNlY29uZC5kaXJlY3RpdmVzLCBjb25maWcsIGRpcmVjdGl2ZXMpLFxuICAgICAgICAgICAga2luZDogY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9ucyB8fFxuICAgICAgICAgICAgICAgIGZpcnN0LmtpbmQgPT09ICdVbmlvblR5cGVEZWZpbml0aW9uJyB8fFxuICAgICAgICAgICAgICAgIHNlY29uZC5raW5kID09PSAnVW5pb25UeXBlRGVmaW5pdGlvbidcbiAgICAgICAgICAgICAgICA/IEtpbmQuVU5JT05fVFlQRV9ERUZJTklUSU9OXG4gICAgICAgICAgICAgICAgOiBLaW5kLlVOSU9OX1RZUEVfRVhURU5TSU9OLFxuICAgICAgICAgICAgbG9jOiBmaXJzdC5sb2MsXG4gICAgICAgICAgICB0eXBlczogbWVyZ2VOYW1lZFR5cGVBcnJheShmaXJzdC50eXBlcywgc2Vjb25kLnR5cGVzLCBjb25maWcpLFxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gY29uZmlnPy5jb252ZXJ0RXh0ZW5zaW9uc1xuICAgICAgICA/IHtcbiAgICAgICAgICAgIC4uLmZpcnN0LFxuICAgICAgICAgICAga2luZDogS2luZC5VTklPTl9UWVBFX0RFRklOSVRJT04sXG4gICAgICAgIH1cbiAgICAgICAgOiBmaXJzdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompareVal: () => (/* binding */ CompareVal),\n/* harmony export */   defaultStringComparator: () => (/* binding */ defaultStringComparator),\n/* harmony export */   extractType: () => (/* binding */ extractType),\n/* harmony export */   isListTypeNode: () => (/* binding */ isListTypeNode),\n/* harmony export */   isNonNullTypeNode: () => (/* binding */ isNonNullTypeNode),\n/* harmony export */   isSourceTypes: () => (/* binding */ isSourceTypes),\n/* harmony export */   isStringTypes: () => (/* binding */ isStringTypes),\n/* harmony export */   isWrappingTypeNode: () => (/* binding */ isWrappingTypeNode),\n/* harmony export */   printTypeNode: () => (/* binding */ printTypeNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/source.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction isStringTypes(types) {\n    return typeof types === 'string';\n}\nfunction isSourceTypes(types) {\n    return types instanceof graphql__WEBPACK_IMPORTED_MODULE_0__.Source;\n}\nfunction extractType(type) {\n    let visitedType = type;\n    while (visitedType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE || visitedType.kind === 'NonNullType') {\n        visitedType = visitedType.type;\n    }\n    return visitedType;\n}\nfunction isWrappingTypeNode(type) {\n    return type.kind !== graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE;\n}\nfunction isListTypeNode(type) {\n    return type.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE;\n}\nfunction isNonNullTypeNode(type) {\n    return type.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE;\n}\nfunction printTypeNode(type) {\n    if (isListTypeNode(type)) {\n        return `[${printTypeNode(type.type)}]`;\n    }\n    if (isNonNullTypeNode(type)) {\n        return `${printTypeNode(type.type)}!`;\n    }\n    return type.name.value;\n}\nvar CompareVal;\n(function (CompareVal) {\n    CompareVal[CompareVal[\"A_SMALLER_THAN_B\"] = -1] = \"A_SMALLER_THAN_B\";\n    CompareVal[CompareVal[\"A_EQUALS_B\"] = 0] = \"A_EQUALS_B\";\n    CompareVal[CompareVal[\"A_GREATER_THAN_B\"] = 1] = \"A_GREATER_THAN_B\";\n})(CompareVal || (CompareVal = {}));\nfunction defaultStringComparator(a, b) {\n    if (a == null && b == null) {\n        return CompareVal.A_EQUALS_B;\n    }\n    if (a == null) {\n        return CompareVal.A_SMALLER_THAN_B;\n    }\n    if (b == null) {\n        return CompareVal.A_GREATER_THAN_B;\n    }\n    if (a < b)\n        return CompareVal.A_SMALLER_THAN_B;\n    if (a > b)\n        return CompareVal.A_GREATER_THAN_B;\n    return CompareVal.A_EQUALS_B;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ2hDO0FBQ1A7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLDJDQUFNO0FBQ2xDO0FBQ087QUFDUDtBQUNBLGdDQUFnQyx5Q0FBSTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AseUJBQXlCLHlDQUFJO0FBQzdCO0FBQ087QUFDUCx5QkFBeUIseUNBQUk7QUFDN0I7QUFDTztBQUNQLHlCQUF5Qix5Q0FBSTtBQUM3QjtBQUNPO0FBQ1A7QUFDQSxtQkFBbUIseUJBQXlCO0FBQzVDO0FBQ0E7QUFDQSxrQkFBa0IseUJBQXlCO0FBQzNDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQztBQUMxQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL2VzbS90eXBlZGVmcy1tZXJnZXJzL3V0aWxzLmpzPzlkM2QiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgU291cmNlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gaXNTdHJpbmdUeXBlcyh0eXBlcykge1xuICAgIHJldHVybiB0eXBlb2YgdHlwZXMgPT09ICdzdHJpbmcnO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU291cmNlVHlwZXModHlwZXMpIHtcbiAgICByZXR1cm4gdHlwZXMgaW5zdGFuY2VvZiBTb3VyY2U7XG59XG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFR5cGUodHlwZSkge1xuICAgIGxldCB2aXNpdGVkVHlwZSA9IHR5cGU7XG4gICAgd2hpbGUgKHZpc2l0ZWRUeXBlLmtpbmQgPT09IEtpbmQuTElTVF9UWVBFIHx8IHZpc2l0ZWRUeXBlLmtpbmQgPT09ICdOb25OdWxsVHlwZScpIHtcbiAgICAgICAgdmlzaXRlZFR5cGUgPSB2aXNpdGVkVHlwZS50eXBlO1xuICAgIH1cbiAgICByZXR1cm4gdmlzaXRlZFR5cGU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNXcmFwcGluZ1R5cGVOb2RlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZS5raW5kICE9PSBLaW5kLk5BTUVEX1RZUEU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNMaXN0VHlwZU5vZGUodHlwZSkge1xuICAgIHJldHVybiB0eXBlLmtpbmQgPT09IEtpbmQuTElTVF9UWVBFO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTm9uTnVsbFR5cGVOb2RlKHR5cGUpIHtcbiAgICByZXR1cm4gdHlwZS5raW5kID09PSBLaW5kLk5PTl9OVUxMX1RZUEU7XG59XG5leHBvcnQgZnVuY3Rpb24gcHJpbnRUeXBlTm9kZSh0eXBlKSB7XG4gICAgaWYgKGlzTGlzdFR5cGVOb2RlKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiBgWyR7cHJpbnRUeXBlTm9kZSh0eXBlLnR5cGUpfV1gO1xuICAgIH1cbiAgICBpZiAoaXNOb25OdWxsVHlwZU5vZGUodHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGAke3ByaW50VHlwZU5vZGUodHlwZS50eXBlKX0hYDtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGUubmFtZS52YWx1ZTtcbn1cbmV4cG9ydCB2YXIgQ29tcGFyZVZhbDtcbihmdW5jdGlvbiAoQ29tcGFyZVZhbCkge1xuICAgIENvbXBhcmVWYWxbQ29tcGFyZVZhbFtcIkFfU01BTExFUl9USEFOX0JcIl0gPSAtMV0gPSBcIkFfU01BTExFUl9USEFOX0JcIjtcbiAgICBDb21wYXJlVmFsW0NvbXBhcmVWYWxbXCJBX0VRVUFMU19CXCJdID0gMF0gPSBcIkFfRVFVQUxTX0JcIjtcbiAgICBDb21wYXJlVmFsW0NvbXBhcmVWYWxbXCJBX0dSRUFURVJfVEhBTl9CXCJdID0gMV0gPSBcIkFfR1JFQVRFUl9USEFOX0JcIjtcbn0pKENvbXBhcmVWYWwgfHwgKENvbXBhcmVWYWwgPSB7fSkpO1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRTdHJpbmdDb21wYXJhdG9yKGEsIGIpIHtcbiAgICBpZiAoYSA9PSBudWxsICYmIGIgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gQ29tcGFyZVZhbC5BX0VRVUFMU19CO1xuICAgIH1cbiAgICBpZiAoYSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBDb21wYXJlVmFsLkFfU01BTExFUl9USEFOX0I7XG4gICAgfVxuICAgIGlmIChiID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIENvbXBhcmVWYWwuQV9HUkVBVEVSX1RIQU5fQjtcbiAgICB9XG4gICAgaWYgKGEgPCBiKVxuICAgICAgICByZXR1cm4gQ29tcGFyZVZhbC5BX1NNQUxMRVJfVEhBTl9CO1xuICAgIGlmIChhID4gYilcbiAgICAgICAgcmV0dXJuIENvbXBhcmVWYWwuQV9HUkVBVEVSX1RIQU5fQjtcbiAgICByZXR1cm4gQ29tcGFyZVZhbC5BX0VRVUFMU19CO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/Interfaces.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/Interfaces.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperKind: () => (/* binding */ MapperKind)\n/* harmony export */ });\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind || (MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vSW50ZXJmYWNlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnQ0FBZ0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0ludGVyZmFjZXMuanM/YzEwNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIE1hcHBlcktpbmQ7XG4oZnVuY3Rpb24gKE1hcHBlcktpbmQpIHtcbiAgICBNYXBwZXJLaW5kW1wiVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIlNDQUxBUl9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLlNDQUxBUl9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkVOVU1fVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5FTlVNX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiQ09NUE9TSVRFX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuQ09NUE9TSVRFX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiT0JKRUNUX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuT0JKRUNUX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5QVVRfT0JKRUNUX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuSU5QVVRfT0JKRUNUX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiQUJTVFJBQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5BQlNUUkFDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIlVOSU9OX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuVU5JT05fVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlRFUkZBQ0VfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5JTlRFUkZBQ0VfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJST09UX09CSkVDVFwiXSA9IFwiTWFwcGVyS2luZC5ST09UX09CSkVDVFwiO1xuICAgIE1hcHBlcktpbmRbXCJRVUVSWVwiXSA9IFwiTWFwcGVyS2luZC5RVUVSWVwiO1xuICAgIE1hcHBlcktpbmRbXCJNVVRBVElPTlwiXSA9IFwiTWFwcGVyS2luZC5NVVRBVElPTlwiO1xuICAgIE1hcHBlcktpbmRbXCJTVUJTQ1JJUFRJT05cIl0gPSBcIk1hcHBlcktpbmQuU1VCU0NSSVBUSU9OXCI7XG4gICAgTWFwcGVyS2luZFtcIkRJUkVDVElWRVwiXSA9IFwiTWFwcGVyS2luZC5ESVJFQ1RJVkVcIjtcbiAgICBNYXBwZXJLaW5kW1wiRklFTERcIl0gPSBcIk1hcHBlcktpbmQuRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiQ09NUE9TSVRFX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLkNPTVBPU0lURV9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJPQkpFQ1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuT0JKRUNUX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIlJPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJRVUVSWV9ST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLlFVRVJZX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiTVVUQVRJT05fUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5NVVRBVElPTl9ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIlNVQlNDUklQVElPTl9ST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLlNVQlNDUklQVElPTl9ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIklOVEVSRkFDRV9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5JTlRFUkZBQ0VfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5QVVRfT0JKRUNUX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJBUkdVTUVOVFwiXSA9IFwiTWFwcGVyS2luZC5BUkdVTUVOVFwiO1xuICAgIE1hcHBlcktpbmRbXCJFTlVNX1ZBTFVFXCJdID0gXCJNYXBwZXJLaW5kLkVOVU1fVkFMVUVcIjtcbn0pKE1hcHBlcktpbmQgfHwgKE1hcHBlcktpbmQgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/Interfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromType.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromType.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromType: () => (/* binding */ astFromType)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n\nfunction astFromType(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVR5cGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3QztBQUNrQjtBQUNuRDtBQUNQLFFBQVEsc0RBQWE7QUFDckI7QUFDQSwrQkFBK0IseUNBQUk7QUFDbkMsaURBQWlELHNEQUFPLE9BQU87QUFDL0Q7QUFDQTtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1EQUFVO0FBQ3ZCO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyx5Q0FBSTtBQUNsQjtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVHlwZS5qcz9iNjdhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3BlY3QgfSBmcm9tICdjcm9zcy1pbnNwZWN0JztcbmltcG9ydCB7IGlzTGlzdFR5cGUsIGlzTm9uTnVsbFR5cGUsIEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBhc3RGcm9tVHlwZSh0eXBlKSB7XG4gICAgaWYgKGlzTm9uTnVsbFR5cGUodHlwZSkpIHtcbiAgICAgICAgY29uc3QgaW5uZXJUeXBlID0gYXN0RnJvbVR5cGUodHlwZS5vZlR5cGUpO1xuICAgICAgICBpZiAoaW5uZXJUeXBlLmtpbmQgPT09IEtpbmQuTk9OX05VTExfVFlQRSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHR5cGUgbm9kZSAke2luc3BlY3QodHlwZSl9LiBJbm5lciB0eXBlIG9mIG5vbi1udWxsIHR5cGUgY2Fubm90IGJlIGEgbm9uLW51bGwgdHlwZS5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogS2luZC5OT05fTlVMTF9UWVBFLFxuICAgICAgICAgICAgdHlwZTogaW5uZXJUeXBlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0xpc3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLkxJU1RfVFlQRSxcbiAgICAgICAgICAgIHR5cGU6IGFzdEZyb21UeXBlKHR5cGUub2ZUeXBlKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2luZDogS2luZC5OQU1FRF9UWVBFLFxuICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLk5BTUUsXG4gICAgICAgICAgICB2YWx1ZTogdHlwZS5uYW1lLFxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValue.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValue.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValue: () => (/* binding */ astFromValue)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\nfunction astFromValue(value, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const astValue = astFromValue(value, type.ofType);\n        if (astValue?.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL) {\n            return null;\n        }\n        return astValue;\n    }\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        const itemType = type.ofType;\n        if ((0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isIterableObject)(value)) {\n            const valuesNodes = [];\n            for (const item of value) {\n                const itemNode = astFromValue(item, itemType);\n                if (itemNode != null) {\n                    valuesNodes.push(itemNode);\n                }\n            }\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST, values: valuesNodes };\n        }\n        return astFromValue(value, itemType);\n    }\n    // Populate the fields of the input object by creating ASTs from each value\n    // in the JavaScript object according to the fields in the input type.\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n        if (!(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_2__.isObjectLike)(value)) {\n            return null;\n        }\n        const fieldNodes = [];\n        for (const field of Object.values(type.getFields())) {\n            const fieldValue = astFromValue(value[field.name], field.type);\n            if (fieldValue) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME, value: field.name },\n                    value: fieldValue,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.OBJECT, fields: fieldNodes };\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n        // Since value is an internally represented value, it must be serialized\n        // to an externally represented value before converting into an AST.\n        const serialized = type.serialize(value);\n        if (serialized == null) {\n            return null;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.ENUM, value: serialized };\n        }\n        // ID types can use Int literals.\n        if (type.name === 'ID' &&\n            typeof serialized === 'string' &&\n            integerStringRegExp.test(serialized)) {\n            return { kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.INT, value: serialized };\n        }\n        return (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_3__.astFromValueUntyped)(serialized);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n    console.assert(false, 'Unexpected input type: ' + (0,cross_inspect__WEBPACK_IMPORTED_MODULE_4__.inspect)(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3QztBQUM4RDtBQUN2QztBQUNEO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxRQUFRLHNEQUFhO0FBQ3JCO0FBQ0EsK0JBQStCLHlDQUFJO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxtREFBVTtBQUNsQjtBQUNBLFlBQVksNkRBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLE1BQU0seUNBQUk7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsMERBQWlCO0FBQ3pCLGFBQWEseURBQVk7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIseUNBQUk7QUFDOUIsNEJBQTRCLE1BQU0seUNBQUksMEJBQTBCO0FBQ2hFO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBLFFBQVEsbURBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxtREFBVTtBQUN0QixxQkFBcUIsTUFBTSx5Q0FBSTtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLE1BQU0seUNBQUk7QUFDL0I7QUFDQSxlQUFlLDRFQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQSxzREFBc0Qsc0RBQU87QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2FzdEZyb21WYWx1ZS5qcz8wMmM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGluc3BlY3QgfSBmcm9tICdjcm9zcy1pbnNwZWN0JztcbmltcG9ydCB7IGlzRW51bVR5cGUsIGlzSW5wdXRPYmplY3RUeXBlLCBpc0xlYWZUeXBlLCBpc0xpc3RUeXBlLCBpc05vbk51bGxUeXBlLCBLaW5kLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgYXN0RnJvbVZhbHVlVW50eXBlZCB9IGZyb20gJy4vYXN0RnJvbVZhbHVlVW50eXBlZC5qcyc7XG5pbXBvcnQgeyBpc0l0ZXJhYmxlT2JqZWN0LCBpc09iamVjdExpa2UgfSBmcm9tICcuL2pzdXRpbHMuanMnO1xuLyoqXG4gKiBQcm9kdWNlcyBhIEdyYXBoUUwgVmFsdWUgQVNUIGdpdmVuIGEgSmF2YVNjcmlwdCBvYmplY3QuXG4gKiBGdW5jdGlvbiB3aWxsIG1hdGNoIEphdmFTY3JpcHQvSlNPTiB2YWx1ZXMgdG8gR3JhcGhRTCBBU1Qgc2NoZW1hIGZvcm1hdFxuICogYnkgdXNpbmcgc3VnZ2VzdGVkIEdyYXBoUUxJbnB1dFR5cGUuIEZvciBleGFtcGxlOlxuICpcbiAqICAgICBhc3RGcm9tVmFsdWUoXCJ2YWx1ZVwiLCBHcmFwaFFMU3RyaW5nKVxuICpcbiAqIEEgR3JhcGhRTCB0eXBlIG11c3QgYmUgcHJvdmlkZWQsIHdoaWNoIHdpbGwgYmUgdXNlZCB0byBpbnRlcnByZXQgZGlmZmVyZW50XG4gKiBKYXZhU2NyaXB0IHZhbHVlcy5cbiAqXG4gKiB8IEpTT04gVmFsdWUgICAgfCBHcmFwaFFMIFZhbHVlICAgICAgICB8XG4gKiB8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IE9iamVjdCAgICAgICAgfCBJbnB1dCBPYmplY3QgICAgICAgICB8XG4gKiB8IEFycmF5ICAgICAgICAgfCBMaXN0ICAgICAgICAgICAgICAgICB8XG4gKiB8IEJvb2xlYW4gICAgICAgfCBCb29sZWFuICAgICAgICAgICAgICB8XG4gKiB8IFN0cmluZyAgICAgICAgfCBTdHJpbmcgLyBFbnVtIFZhbHVlICB8XG4gKiB8IE51bWJlciAgICAgICAgfCBJbnQgLyBGbG9hdCAgICAgICAgICB8XG4gKiB8IEJpZ0ludCAgICAgICAgfCBJbnQgICAgICAgICAgICAgICAgICB8XG4gKiB8IFVua25vd24gICAgICAgfCBFbnVtIFZhbHVlICAgICAgICAgICB8XG4gKiB8IG51bGwgICAgICAgICAgfCBOdWxsVmFsdWUgICAgICAgICAgICB8XG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXN0RnJvbVZhbHVlKHZhbHVlLCB0eXBlKSB7XG4gICAgaWYgKGlzTm9uTnVsbFR5cGUodHlwZSkpIHtcbiAgICAgICAgY29uc3QgYXN0VmFsdWUgPSBhc3RGcm9tVmFsdWUodmFsdWUsIHR5cGUub2ZUeXBlKTtcbiAgICAgICAgaWYgKGFzdFZhbHVlPy5raW5kID09PSBLaW5kLk5VTEwpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBhc3RWYWx1ZTtcbiAgICB9XG4gICAgLy8gb25seSBleHBsaWNpdCBudWxsLCBub3QgdW5kZWZpbmVkLCBOYU5cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5OVUxMIH07XG4gICAgfVxuICAgIC8vIHVuZGVmaW5lZFxuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBDb252ZXJ0IEphdmFTY3JpcHQgYXJyYXkgdG8gR3JhcGhRTCBsaXN0LiBJZiB0aGUgR3JhcGhRTFR5cGUgaXMgYSBsaXN0LCBidXRcbiAgICAvLyB0aGUgdmFsdWUgaXMgbm90IGFuIGFycmF5LCBjb252ZXJ0IHRoZSB2YWx1ZSB1c2luZyB0aGUgbGlzdCdzIGl0ZW0gdHlwZS5cbiAgICBpZiAoaXNMaXN0VHlwZSh0eXBlKSkge1xuICAgICAgICBjb25zdCBpdGVtVHlwZSA9IHR5cGUub2ZUeXBlO1xuICAgICAgICBpZiAoaXNJdGVyYWJsZU9iamVjdCh2YWx1ZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlc05vZGVzID0gW107XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdmFsdWUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBpdGVtTm9kZSA9IGFzdEZyb21WYWx1ZShpdGVtLCBpdGVtVHlwZSk7XG4gICAgICAgICAgICAgICAgaWYgKGl0ZW1Ob2RlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWVzTm9kZXMucHVzaChpdGVtTm9kZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5MSVNULCB2YWx1ZXM6IHZhbHVlc05vZGVzIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGFzdEZyb21WYWx1ZSh2YWx1ZSwgaXRlbVR5cGUpO1xuICAgIH1cbiAgICAvLyBQb3B1bGF0ZSB0aGUgZmllbGRzIG9mIHRoZSBpbnB1dCBvYmplY3QgYnkgY3JlYXRpbmcgQVNUcyBmcm9tIGVhY2ggdmFsdWVcbiAgICAvLyBpbiB0aGUgSmF2YVNjcmlwdCBvYmplY3QgYWNjb3JkaW5nIHRvIHRoZSBmaWVsZHMgaW4gdGhlIGlucHV0IHR5cGUuXG4gICAgaWYgKGlzSW5wdXRPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIGlmICghaXNPYmplY3RMaWtlKHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmllbGROb2RlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkIG9mIE9iamVjdC52YWx1ZXModHlwZS5nZXRGaWVsZHMoKSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkVmFsdWUgPSBhc3RGcm9tVmFsdWUodmFsdWVbZmllbGQubmFtZV0sIGZpZWxkLnR5cGUpO1xuICAgICAgICAgICAgaWYgKGZpZWxkVmFsdWUpIHtcbiAgICAgICAgICAgICAgICBmaWVsZE5vZGVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk9CSkVDVF9GSUVMRCxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogeyBraW5kOiBLaW5kLk5BTUUsIHZhbHVlOiBmaWVsZC5uYW1lIH0sXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmaWVsZFZhbHVlLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuT0JKRUNULCBmaWVsZHM6IGZpZWxkTm9kZXMgfTtcbiAgICB9XG4gICAgaWYgKGlzTGVhZlR5cGUodHlwZSkpIHtcbiAgICAgICAgLy8gU2luY2UgdmFsdWUgaXMgYW4gaW50ZXJuYWxseSByZXByZXNlbnRlZCB2YWx1ZSwgaXQgbXVzdCBiZSBzZXJpYWxpemVkXG4gICAgICAgIC8vIHRvIGFuIGV4dGVybmFsbHkgcmVwcmVzZW50ZWQgdmFsdWUgYmVmb3JlIGNvbnZlcnRpbmcgaW50byBhbiBBU1QuXG4gICAgICAgIGNvbnN0IHNlcmlhbGl6ZWQgPSB0eXBlLnNlcmlhbGl6ZSh2YWx1ZSk7XG4gICAgICAgIGlmIChzZXJpYWxpemVkID09IG51bGwpIHtcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0VudW1UeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkVOVU0sIHZhbHVlOiBzZXJpYWxpemVkIH07XG4gICAgICAgIH1cbiAgICAgICAgLy8gSUQgdHlwZXMgY2FuIHVzZSBJbnQgbGl0ZXJhbHMuXG4gICAgICAgIGlmICh0eXBlLm5hbWUgPT09ICdJRCcgJiZcbiAgICAgICAgICAgIHR5cGVvZiBzZXJpYWxpemVkID09PSAnc3RyaW5nJyAmJlxuICAgICAgICAgICAgaW50ZWdlclN0cmluZ1JlZ0V4cC50ZXN0KHNlcmlhbGl6ZWQpKSB7XG4gICAgICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLklOVCwgdmFsdWU6IHNlcmlhbGl6ZWQgfTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYXN0RnJvbVZhbHVlVW50eXBlZChzZXJpYWxpemVkKTtcbiAgICB9XG4gICAgLyogYzggaWdub3JlIG5leHQgMyAqL1xuICAgIC8vIE5vdCByZWFjaGFibGUsIGFsbCBwb3NzaWJsZSB0eXBlcyBoYXZlIGJlZW4gY29uc2lkZXJlZC5cbiAgICBjb25zb2xlLmFzc2VydChmYWxzZSwgJ1VuZXhwZWN0ZWQgaW5wdXQgdHlwZTogJyArIGluc3BlY3QodHlwZSkpO1xufVxuLyoqXG4gKiBJbnRWYWx1ZTpcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IDBcbiAqICAgLSBOZWdhdGl2ZVNpZ24/IE5vblplcm9EaWdpdCAoIERpZ2l0KyApP1xuICovXG5jb25zdCBpbnRlZ2VyU3RyaW5nUmVnRXhwID0gL14tPyg/OjB8WzEtOV1bMC05XSopJC87XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValueUntyped: () => (/* binding */ astFromValueUntyped)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | BigInt        | Int                  |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        if (value?.toJSON) {\n            return astFromValueUntyped(value.toJSON());\n        }\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN, value };\n    }\n    if (typeof value === 'bigint') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: String(value) };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: stringNum }\n            : { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVZhbHVlVW50eXBlZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIseUNBQUk7QUFDOUIsNEJBQTRCLE1BQU0seUNBQUkseUJBQXlCO0FBQy9EO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0EsaUJBQWlCLE1BQU0seUNBQUk7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixNQUFNLHlDQUFJO0FBQzFCLGdCQUFnQixNQUFNLHlDQUFJO0FBQzFCO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBLHdEQUF3RCxNQUFNO0FBQzlEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVmFsdWVVbnR5cGVkLmpzPzUyNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuLyoqXG4gKiBQcm9kdWNlcyBhIEdyYXBoUUwgVmFsdWUgQVNUIGdpdmVuIGEgSmF2YVNjcmlwdCBvYmplY3QuXG4gKiBGdW5jdGlvbiB3aWxsIG1hdGNoIEphdmFTY3JpcHQvSlNPTiB2YWx1ZXMgdG8gR3JhcGhRTCBBU1Qgc2NoZW1hIGZvcm1hdFxuICogYnkgdXNpbmcgdGhlIGZvbGxvd2luZyBtYXBwaW5nLlxuICpcbiAqIHwgSlNPTiBWYWx1ZSAgICB8IEdyYXBoUUwgVmFsdWUgICAgICAgIHxcbiAqIHwgLS0tLS0tLS0tLS0tLSB8IC0tLS0tLS0tLS0tLS0tLS0tLS0tIHxcbiAqIHwgT2JqZWN0ICAgICAgICB8IElucHV0IE9iamVjdCAgICAgICAgIHxcbiAqIHwgQXJyYXkgICAgICAgICB8IExpc3QgICAgICAgICAgICAgICAgIHxcbiAqIHwgQm9vbGVhbiAgICAgICB8IEJvb2xlYW4gICAgICAgICAgICAgIHxcbiAqIHwgU3RyaW5nICAgICAgICB8IFN0cmluZyAgICAgICAgICAgICAgIHxcbiAqIHwgTnVtYmVyICAgICAgICB8IEludCAvIEZsb2F0ICAgICAgICAgIHxcbiAqIHwgQmlnSW50ICAgICAgICB8IEludCAgICAgICAgICAgICAgICAgIHxcbiAqIHwgbnVsbCAgICAgICAgICB8IE51bGxWYWx1ZSAgICAgICAgICAgIHxcbiAqXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhc3RGcm9tVmFsdWVVbnR5cGVkKHZhbHVlKSB7XG4gICAgLy8gb25seSBleHBsaWNpdCBudWxsLCBub3QgdW5kZWZpbmVkLCBOYU5cbiAgICBpZiAodmFsdWUgPT09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5OVUxMIH07XG4gICAgfVxuICAgIC8vIHVuZGVmaW5lZFxuICAgIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBDb252ZXJ0IEphdmFTY3JpcHQgYXJyYXkgdG8gR3JhcGhRTCBsaXN0LiBJZiB0aGUgR3JhcGhRTFR5cGUgaXMgYSBsaXN0LCBidXRcbiAgICAvLyB0aGUgdmFsdWUgaXMgbm90IGFuIGFycmF5LCBjb252ZXJ0IHRoZSB2YWx1ZSB1c2luZyB0aGUgbGlzdCdzIGl0ZW0gdHlwZS5cbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgY29uc3QgdmFsdWVzTm9kZXMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBpdGVtTm9kZSA9IGFzdEZyb21WYWx1ZVVudHlwZWQoaXRlbSk7XG4gICAgICAgICAgICBpZiAoaXRlbU5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHZhbHVlc05vZGVzLnB1c2goaXRlbU5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuTElTVCwgdmFsdWVzOiB2YWx1ZXNOb2RlcyB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICBpZiAodmFsdWU/LnRvSlNPTikge1xuICAgICAgICAgICAgcmV0dXJuIGFzdEZyb21WYWx1ZVVudHlwZWQodmFsdWUudG9KU09OKCkpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZpZWxkTm9kZXMgPSBbXTtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkVmFsdWUgPSB2YWx1ZVtmaWVsZE5hbWVdO1xuICAgICAgICAgICAgY29uc3QgYXN0ID0gYXN0RnJvbVZhbHVlVW50eXBlZChmaWVsZFZhbHVlKTtcbiAgICAgICAgICAgIGlmIChhc3QpIHtcbiAgICAgICAgICAgICAgICBmaWVsZE5vZGVzLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk9CSkVDVF9GSUVMRCxcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogeyBraW5kOiBLaW5kLk5BTUUsIHZhbHVlOiBmaWVsZE5hbWUgfSxcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGFzdCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLk9CSkVDVCwgZmllbGRzOiBmaWVsZE5vZGVzIH07XG4gICAgfVxuICAgIC8vIE90aGVycyBzZXJpYWxpemUgYmFzZWQgb24gdGhlaXIgY29ycmVzcG9uZGluZyBKYXZhU2NyaXB0IHNjYWxhciB0eXBlcy5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnYm9vbGVhbicpIHtcbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5CT09MRUFOLCB2YWx1ZSB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnYmlnaW50Jykge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLklOVCwgdmFsdWU6IFN0cmluZyh2YWx1ZSkgfTtcbiAgICB9XG4gICAgLy8gSmF2YVNjcmlwdCBudW1iZXJzIGNhbiBiZSBJbnQgb3IgRmxvYXQgdmFsdWVzLlxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdudW1iZXInICYmIGlzRmluaXRlKHZhbHVlKSkge1xuICAgICAgICBjb25zdCBzdHJpbmdOdW0gPSBTdHJpbmcodmFsdWUpO1xuICAgICAgICByZXR1cm4gaW50ZWdlclN0cmluZ1JlZ0V4cC50ZXN0KHN0cmluZ051bSlcbiAgICAgICAgICAgID8geyBraW5kOiBLaW5kLklOVCwgdmFsdWU6IHN0cmluZ051bSB9XG4gICAgICAgICAgICA6IHsga2luZDogS2luZC5GTE9BVCwgdmFsdWU6IHN0cmluZ051bSB9O1xuICAgIH1cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLlNUUklORywgdmFsdWUgfTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgQ2Fubm90IGNvbnZlcnQgdmFsdWUgdG8gQVNUOiAke3ZhbHVlfS5gKTtcbn1cbi8qKlxuICogSW50VmFsdWU6XG4gKiAgIC0gTmVnYXRpdmVTaWduPyAwXG4gKiAgIC0gTmVnYXRpdmVTaWduPyBOb25aZXJvRGlnaXQgKCBEaWdpdCsgKT9cbiAqL1xuY29uc3QgaW50ZWdlclN0cmluZ1JlZ0V4cCA9IC9eLT8oPzowfFsxLTldWzAtOV0qKSQvO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/comments.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/comments.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectComment: () => (/* binding */ collectComment),\n/* harmony export */   dedentBlockStringValue: () => (/* binding */ dedentBlockStringValue),\n/* harmony export */   getBlockStringIndentation: () => (/* binding */ getBlockStringIndentation),\n/* harmony export */   getComment: () => (/* binding */ getComment),\n/* harmony export */   getDescription: () => (/* binding */ getDescription),\n/* harmony export */   getLeadingCommentBlock: () => (/* binding */ getLeadingCommentBlock),\n/* harmony export */   printComment: () => (/* binding */ printComment),\n/* harmony export */   printWithComments: () => (/* binding */ printWithComments),\n/* harmony export */   pushComment: () => (/* binding */ pushComment),\n/* harmony export */   resetComments: () => (/* binding */ resetComments)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/tokenKind.mjs\");\n\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nfunction resetComments() {\n    commentsRegistry = {};\n}\nfunction collectComment(node) {\n    const entityName = node.name?.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nfunction pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nfunction printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    return maybeArray?.some(str => str.includes('\\n')) ?? false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, parent?.name?.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction printWithComments(ast) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(ast, printDocASTReducerWithComments);\n}\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options?.commentDescriptions) {\n        return getComment(node);\n    }\n}\nfunction getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\n/**\n * @internal\n */\nfunction getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/comments.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js":
/*!***********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDescriptionNode: () => (/* binding */ getDescriptionNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction getDescriptionNode(obj) {\n    if (obj.astNode?.description) {\n        return {\n            ...obj.astNode.description,\n            block: true,\n        };\n    }\n    if (obj.description) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING,\n            value: obj.description,\n            block: true,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZGVzY3JpcHRpb25Gcm9tT2JqZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBQ3hCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9kZXNjcmlwdGlvbkZyb21PYmplY3QuanM/OThhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVzY3JpcHRpb25Ob2RlKG9iaikge1xuICAgIGlmIChvYmouYXN0Tm9kZT8uZGVzY3JpcHRpb24pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLm9iai5hc3ROb2RlLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgYmxvY2s6IHRydWUsXG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChvYmouZGVzY3JpcHRpb24pIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGtpbmQ6IEtpbmQuU1RSSU5HLFxuICAgICAgICAgICAgdmFsdWU6IG9iai5kZXNjcmlwdGlvbixcbiAgICAgICAgICAgIGJsb2NrOiB0cnVlLFxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/errors.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXJyb3JzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0RBQVc7QUFDbkIsbUJBQW1CLGlEQUFZO0FBQy9CO0FBQ0EsZUFBZSxpREFBWTtBQUMzQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Vycm9ycy5qcz85MjJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxFcnJvciwgdmVyc2lvbkluZm8gfSBmcm9tICdncmFwaHFsJztcbmNvbnN0IHBvc3NpYmxlR3JhcGhRTEVycm9yUHJvcGVydGllcyA9IFtcbiAgICAnbWVzc2FnZScsXG4gICAgJ2xvY2F0aW9ucycsXG4gICAgJ3BhdGgnLFxuICAgICdub2RlcycsXG4gICAgJ3NvdXJjZScsXG4gICAgJ3Bvc2l0aW9ucycsXG4gICAgJ29yaWdpbmFsRXJyb3InLFxuICAgICduYW1lJyxcbiAgICAnc3RhY2snLFxuICAgICdleHRlbnNpb25zJyxcbl07XG5mdW5jdGlvbiBpc0dyYXBoUUxFcnJvckxpa2UoZXJyb3IpIHtcbiAgICByZXR1cm4gKGVycm9yICE9IG51bGwgJiZcbiAgICAgICAgdHlwZW9mIGVycm9yID09PSAnb2JqZWN0JyAmJlxuICAgICAgICBPYmplY3Qua2V5cyhlcnJvcikuZXZlcnkoa2V5ID0+IHBvc3NpYmxlR3JhcGhRTEVycm9yUHJvcGVydGllcy5pbmNsdWRlcyhrZXkpKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucz8ub3JpZ2luYWxFcnJvciAmJlxuICAgICAgICAhKG9wdGlvbnMub3JpZ2luYWxFcnJvciBpbnN0YW5jZW9mIEVycm9yKSAmJlxuICAgICAgICBpc0dyYXBoUUxFcnJvckxpa2Uob3B0aW9ucy5vcmlnaW5hbEVycm9yKSkge1xuICAgICAgICBvcHRpb25zLm9yaWdpbmFsRXJyb3IgPSBjcmVhdGVHcmFwaFFMRXJyb3Iob3B0aW9ucy5vcmlnaW5hbEVycm9yLm1lc3NhZ2UsIG9wdGlvbnMub3JpZ2luYWxFcnJvcik7XG4gICAgfVxuICAgIGlmICh2ZXJzaW9uSW5mby5tYWpvciA+PSAxNykge1xuICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucz8ubm9kZXMsIG9wdGlvbnM/LnNvdXJjZSwgb3B0aW9ucz8ucG9zaXRpb25zLCBvcHRpb25zPy5wYXRoLCBvcHRpb25zPy5vcmlnaW5hbEVycm9yLCBvcHRpb25zPy5leHRlbnNpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZWxvY2F0ZWRFcnJvcihvcmlnaW5hbEVycm9yLCBwYXRoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZUdyYXBoUUxFcnJvcihvcmlnaW5hbEVycm9yLm1lc3NhZ2UsIHtcbiAgICAgICAgbm9kZXM6IG9yaWdpbmFsRXJyb3Iubm9kZXMsXG4gICAgICAgIHNvdXJjZTogb3JpZ2luYWxFcnJvci5zb3VyY2UsXG4gICAgICAgIHBvc2l0aW9uczogb3JpZ2luYWxFcnJvci5wb3NpdGlvbnMsXG4gICAgICAgIHBhdGg6IHBhdGggPT0gbnVsbCA/IG9yaWdpbmFsRXJyb3IucGF0aCA6IHBhdGgsXG4gICAgICAgIG9yaWdpbmFsRXJyb3IsXG4gICAgICAgIGV4dGVuc2lvbnM6IG9yaWdpbmFsRXJyb3IuZXh0ZW5zaW9ucyxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractExtensionsFromSchema: () => (/* binding */ extractExtensionsFromSchema)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _mapSchema_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapSchema.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n\n\n\nfunction handleDirectiveExtensions(extensions, removeDirectives) {\n    extensions = extensions || {};\n    const { directives: existingDirectives, ...rest } = extensions;\n    const finalExtensions = {\n        ...rest,\n    };\n    if (!removeDirectives) {\n        if (existingDirectives != null) {\n            const directives = {};\n            for (const directiveName in existingDirectives) {\n                directives[directiveName] = [...(0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.asArray)(existingDirectives[directiveName])];\n            }\n            finalExtensions.directives = directives;\n        }\n    }\n    return finalExtensions;\n}\nfunction extractExtensionsFromSchema(schema, removeDirectives = false) {\n    const result = {\n        schemaExtensions: handleDirectiveExtensions(schema.extensions, removeDirectives),\n        types: {},\n    };\n    (0,_mapSchema_js__WEBPACK_IMPORTED_MODULE_1__.mapSchema)(schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.OBJECT_TYPE]: type => {\n            result.types[type.name] = {\n                fields: {},\n                type: 'object',\n                extensions: handleDirectiveExtensions(type.extensions, removeDirectives),\n            };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.INTERFACE_TYPE]: type => {\n            result.types[type.name] = {\n                fields: {},\n                type: 'interface',\n                extensions: handleDirectiveExtensions(type.extensions, removeDirectives),\n            };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.FIELD]: (field, fieldName, typeName) => {\n            result.types[typeName].fields[fieldName] = {\n                arguments: {},\n                extensions: handleDirectiveExtensions(field.extensions, removeDirectives),\n            };\n            const args = field.args;\n            if (args != null) {\n                for (const argName in args) {\n                    result.types[typeName].fields[fieldName].arguments[argName] =\n                        handleDirectiveExtensions(args[argName].extensions, removeDirectives);\n                }\n            }\n            return field;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.ENUM_TYPE]: type => {\n            result.types[type.name] = {\n                values: {},\n                type: 'enum',\n                extensions: handleDirectiveExtensions(type.extensions, removeDirectives),\n            };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.ENUM_VALUE]: (value, typeName, _schema, valueName) => {\n            result.types[typeName].values[valueName] = handleDirectiveExtensions(value.extensions, removeDirectives);\n            return value;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.SCALAR_TYPE]: type => {\n            result.types[type.name] = {\n                type: 'scalar',\n                extensions: handleDirectiveExtensions(type.extensions, removeDirectives),\n            };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.UNION_TYPE]: type => {\n            result.types[type.name] = {\n                type: 'union',\n                extensions: handleDirectiveExtensions(type.extensions, removeDirectives),\n            };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.INPUT_OBJECT_TYPE]: type => {\n            result.types[type.name] = {\n                fields: {},\n                type: 'input',\n                extensions: handleDirectiveExtensions(type.extensions, removeDirectives),\n            };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_2__.MapperKind.INPUT_OBJECT_FIELD]: (field, fieldName, typeName) => {\n            result.types[typeName].fields[fieldName] = {\n                extensions: handleDirectiveExtensions(field.extensions, removeDirectives),\n            };\n            return field;\n        },\n    });\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXh0cmFjdEV4dGVuc2lvbnNGcm9tU2NoZW1hLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBdUM7QUFDTTtBQUNGO0FBQzNDO0FBQ0E7QUFDQSxZQUFZLDBDQUEwQztBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxvREFBTztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxJQUFJLHdEQUFTO0FBQ2IsU0FBUyxzREFBVTtBQUNuQjtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFNBQVMsc0RBQVU7QUFDbkI7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsU0FBUyxzREFBVTtBQUNuQjtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsU0FBUyxzREFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFNBQVMsc0RBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CO0FBQ0EsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFNBQVMsc0RBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2V4dHJhY3RFeHRlbnNpb25zRnJvbVNjaGVtYS5qcz8zNzZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzQXJyYXkgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuaW1wb3J0IHsgTWFwcGVyS2luZCB9IGZyb20gJy4vSW50ZXJmYWNlcy5qcyc7XG5pbXBvcnQgeyBtYXBTY2hlbWEgfSBmcm9tICcuL21hcFNjaGVtYS5qcyc7XG5mdW5jdGlvbiBoYW5kbGVEaXJlY3RpdmVFeHRlbnNpb25zKGV4dGVuc2lvbnMsIHJlbW92ZURpcmVjdGl2ZXMpIHtcbiAgICBleHRlbnNpb25zID0gZXh0ZW5zaW9ucyB8fCB7fTtcbiAgICBjb25zdCB7IGRpcmVjdGl2ZXM6IGV4aXN0aW5nRGlyZWN0aXZlcywgLi4ucmVzdCB9ID0gZXh0ZW5zaW9ucztcbiAgICBjb25zdCBmaW5hbEV4dGVuc2lvbnMgPSB7XG4gICAgICAgIC4uLnJlc3QsXG4gICAgfTtcbiAgICBpZiAoIXJlbW92ZURpcmVjdGl2ZXMpIHtcbiAgICAgICAgaWYgKGV4aXN0aW5nRGlyZWN0aXZlcyAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVzID0ge307XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGRpcmVjdGl2ZU5hbWUgaW4gZXhpc3RpbmdEaXJlY3RpdmVzKSB7XG4gICAgICAgICAgICAgICAgZGlyZWN0aXZlc1tkaXJlY3RpdmVOYW1lXSA9IFsuLi5hc0FycmF5KGV4aXN0aW5nRGlyZWN0aXZlc1tkaXJlY3RpdmVOYW1lXSldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZmluYWxFeHRlbnNpb25zLmRpcmVjdGl2ZXMgPSBkaXJlY3RpdmVzO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmaW5hbEV4dGVuc2lvbnM7XG59XG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdEV4dGVuc2lvbnNGcm9tU2NoZW1hKHNjaGVtYSwgcmVtb3ZlRGlyZWN0aXZlcyA9IGZhbHNlKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICBzY2hlbWFFeHRlbnNpb25zOiBoYW5kbGVEaXJlY3RpdmVFeHRlbnNpb25zKHNjaGVtYS5leHRlbnNpb25zLCByZW1vdmVEaXJlY3RpdmVzKSxcbiAgICAgICAgdHlwZXM6IHt9LFxuICAgIH07XG4gICAgbWFwU2NoZW1hKHNjaGVtYSwge1xuICAgICAgICBbTWFwcGVyS2luZC5PQkpFQ1RfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGUubmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgZmllbGRzOiB7fSxcbiAgICAgICAgICAgICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBoYW5kbGVEaXJlY3RpdmVFeHRlbnNpb25zKHR5cGUuZXh0ZW5zaW9ucywgcmVtb3ZlRGlyZWN0aXZlcyksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICAgIH0sXG4gICAgICAgIFtNYXBwZXJLaW5kLklOVEVSRkFDRV9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICByZXN1bHQudHlwZXNbdHlwZS5uYW1lXSA9IHtcbiAgICAgICAgICAgICAgICBmaWVsZHM6IHt9LFxuICAgICAgICAgICAgICAgIHR5cGU6ICdpbnRlcmZhY2UnLFxuICAgICAgICAgICAgICAgIGV4dGVuc2lvbnM6IGhhbmRsZURpcmVjdGl2ZUV4dGVuc2lvbnModHlwZS5leHRlbnNpb25zLCByZW1vdmVEaXJlY3RpdmVzKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuRklFTERdOiAoZmllbGQsIGZpZWxkTmFtZSwgdHlwZU5hbWUpID0+IHtcbiAgICAgICAgICAgIHJlc3VsdC50eXBlc1t0eXBlTmFtZV0uZmllbGRzW2ZpZWxkTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgYXJndW1lbnRzOiB7fSxcbiAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBoYW5kbGVEaXJlY3RpdmVFeHRlbnNpb25zKGZpZWxkLmV4dGVuc2lvbnMsIHJlbW92ZURpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IGFyZ3MgPSBmaWVsZC5hcmdzO1xuICAgICAgICAgICAgaWYgKGFyZ3MgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYXJnTmFtZSBpbiBhcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdC50eXBlc1t0eXBlTmFtZV0uZmllbGRzW2ZpZWxkTmFtZV0uYXJndW1lbnRzW2FyZ05hbWVdID1cbiAgICAgICAgICAgICAgICAgICAgICAgIGhhbmRsZURpcmVjdGl2ZUV4dGVuc2lvbnMoYXJnc1thcmdOYW1lXS5leHRlbnNpb25zLCByZW1vdmVEaXJlY3RpdmVzKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZmllbGQ7XG4gICAgICAgIH0sXG4gICAgICAgIFtNYXBwZXJLaW5kLkVOVU1fVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGUubmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzOiB7fSxcbiAgICAgICAgICAgICAgICB0eXBlOiAnZW51bScsXG4gICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogaGFuZGxlRGlyZWN0aXZlRXh0ZW5zaW9ucyh0eXBlLmV4dGVuc2lvbnMsIHJlbW92ZURpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5FTlVNX1ZBTFVFXTogKHZhbHVlLCB0eXBlTmFtZSwgX3NjaGVtYSwgdmFsdWVOYW1lKSA9PiB7XG4gICAgICAgICAgICByZXN1bHQudHlwZXNbdHlwZU5hbWVdLnZhbHVlc1t2YWx1ZU5hbWVdID0gaGFuZGxlRGlyZWN0aXZlRXh0ZW5zaW9ucyh2YWx1ZS5leHRlbnNpb25zLCByZW1vdmVEaXJlY3RpdmVzKTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuU0NBTEFSX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIHJlc3VsdC50eXBlc1t0eXBlLm5hbWVdID0ge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdzY2FsYXInLFxuICAgICAgICAgICAgICAgIGV4dGVuc2lvbnM6IGhhbmRsZURpcmVjdGl2ZUV4dGVuc2lvbnModHlwZS5leHRlbnNpb25zLCByZW1vdmVEaXJlY3RpdmVzKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuVU5JT05fVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGUubmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ3VuaW9uJyxcbiAgICAgICAgICAgICAgICBleHRlbnNpb25zOiBoYW5kbGVEaXJlY3RpdmVFeHRlbnNpb25zKHR5cGUuZXh0ZW5zaW9ucywgcmVtb3ZlRGlyZWN0aXZlcyksXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICAgIH0sXG4gICAgICAgIFtNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICByZXN1bHQudHlwZXNbdHlwZS5uYW1lXSA9IHtcbiAgICAgICAgICAgICAgICBmaWVsZHM6IHt9LFxuICAgICAgICAgICAgICAgIHR5cGU6ICdpbnB1dCcsXG4gICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogaGFuZGxlRGlyZWN0aXZlRXh0ZW5zaW9ucyh0eXBlLmV4dGVuc2lvbnMsIHJlbW92ZURpcmVjdGl2ZXMpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfRklFTERdOiAoZmllbGQsIGZpZWxkTmFtZSwgdHlwZU5hbWUpID0+IHtcbiAgICAgICAgICAgIHJlc3VsdC50eXBlc1t0eXBlTmFtZV0uZmllbGRzW2ZpZWxkTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgZXh0ZW5zaW9uczogaGFuZGxlRGlyZWN0aXZlRXh0ZW5zaW9ucyhmaWVsZC5leHRlbnNpb25zLCByZW1vdmVEaXJlY3RpdmVzKSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gZmllbGQ7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/get-directives.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/get-directives.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirective: () => (/* binding */ getDirective),\n/* harmony export */   getDirectiveInExtensions: () => (/* binding */ getDirectiveInExtensions),\n/* harmony export */   getDirectives: () => (/* binding */ getDirectives),\n/* harmony export */   getDirectivesInExtensions: () => (/* binding */ getDirectivesInExtensions)\n/* harmony export */ });\n/* harmony import */ var _getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getDirectiveExtensions.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\");\n\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, undefined, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return Object.entries(directiveExtensions)\n        .map(([directiveName, directiveArgsArr]) => directiveArgsArr?.map(directiveArgs => ({\n        name: directiveName,\n        args: directiveArgs,\n    })))\n        .flat(Infinity)\n        .filter(Boolean);\n}\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = (0,_getDirectiveExtensions_js__WEBPACK_IMPORTED_MODULE_0__.getDirectiveExtensions)(node, schema, pathToDirectivesInExtensions);\n    return directiveExtensions[directiveName];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0LWRpcmVjdGl2ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBcUU7QUFDOUQ7QUFDUCxnQ0FBZ0Msa0ZBQXNCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0NBQWdDLGtGQUFzQjtBQUN0RDtBQUNBO0FBQ087QUFDUCxnQ0FBZ0Msa0ZBQXNCO0FBQ3REO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsZ0NBQWdDLGtGQUFzQjtBQUN0RDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXQtZGlyZWN0aXZlcy5qcz83NDg2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMgfSBmcm9tICcuL2dldERpcmVjdGl2ZUV4dGVuc2lvbnMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERpcmVjdGl2ZXNJbkV4dGVuc2lvbnMobm9kZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZUV4dGVuc2lvbnMobm9kZSwgdW5kZWZpbmVkLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKTtcbiAgICByZXR1cm4gT2JqZWN0LmVudHJpZXMoZGlyZWN0aXZlRXh0ZW5zaW9ucylcbiAgICAgICAgLm1hcCgoW2RpcmVjdGl2ZU5hbWUsIGRpcmVjdGl2ZUFyZ3NBcnJdKSA9PiBkaXJlY3RpdmVBcmdzQXJyPy5tYXAoZGlyZWN0aXZlQXJncyA9PiAoe1xuICAgICAgICBuYW1lOiBkaXJlY3RpdmVOYW1lLFxuICAgICAgICBhcmdzOiBkaXJlY3RpdmVBcmdzLFxuICAgIH0pKSlcbiAgICAgICAgLmZsYXQoSW5maW5pdHkpXG4gICAgICAgIC5maWx0ZXIoQm9vbGVhbik7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlSW5FeHRlbnNpb25zKG5vZGUsIGRpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBbJ2RpcmVjdGl2ZXMnXSkge1xuICAgIGNvbnN0IGRpcmVjdGl2ZUV4dGVuc2lvbnMgPSBnZXREaXJlY3RpdmVFeHRlbnNpb25zKG5vZGUsIHVuZGVmaW5lZCwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyk7XG4gICAgcmV0dXJuIGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV07XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlcyhzY2hlbWEsIG5vZGUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBbJ2RpcmVjdGl2ZXMnXSkge1xuICAgIGNvbnN0IGRpcmVjdGl2ZUV4dGVuc2lvbnMgPSBnZXREaXJlY3RpdmVFeHRlbnNpb25zKG5vZGUsIHNjaGVtYSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyk7XG4gICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKGRpcmVjdGl2ZUV4dGVuc2lvbnMpXG4gICAgICAgIC5tYXAoKFtkaXJlY3RpdmVOYW1lLCBkaXJlY3RpdmVBcmdzQXJyXSkgPT4gZGlyZWN0aXZlQXJnc0Fycj8ubWFwKGRpcmVjdGl2ZUFyZ3MgPT4gKHtcbiAgICAgICAgbmFtZTogZGlyZWN0aXZlTmFtZSxcbiAgICAgICAgYXJnczogZGlyZWN0aXZlQXJncyxcbiAgICB9KSkpXG4gICAgICAgIC5mbGF0KEluZmluaXR5KVxuICAgICAgICAuZmlsdGVyKEJvb2xlYW4pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldERpcmVjdGl2ZShzY2hlbWEsIG5vZGUsIGRpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBbJ2RpcmVjdGl2ZXMnXSkge1xuICAgIGNvbnN0IGRpcmVjdGl2ZUV4dGVuc2lvbnMgPSBnZXREaXJlY3RpdmVFeHRlbnNpb25zKG5vZGUsIHNjaGVtYSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyk7XG4gICAgcmV0dXJuIGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/get-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getArgumentValues.js":
/*!*******************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getArgumentValues.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArgumentValues: () => (/* binding */ getArgumentValues)\n/* harmony export */ });\n/* harmony import */ var cross_inspect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-inspect */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/jsutils.js\");\n\n\n\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    const coercedValues = {};\n    const argumentNodes = node.arguments ?? [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL;\n        if (valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(variableValues, variableName)) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0,cross_inspect__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0,graphql__WEBPACK_IMPORTED_MODULE_6__.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0QXJndW1lbnRWYWx1ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBd0M7QUFDNEI7QUFDbkI7QUFDSDtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08seURBQXlEO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLLEtBQUs7QUFDVixpQkFBaUIsb0NBQW9DO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsc0RBQWE7QUFDbEMsc0JBQXNCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLHNEQUFPLFVBQVU7QUFDbEc7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MseUNBQUk7QUFDNUMsK0JBQStCLHlDQUFJO0FBQ25DO0FBQ0EsMkNBQTJDLDJEQUFjO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixzREFBYTtBQUN0QywwQkFBMEIsOERBQWtCLGNBQWMsS0FBSyxzQkFBc0Isc0RBQU8sVUFBVTtBQUN0Ryx1REFBdUQsYUFBYTtBQUNwRTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFhO0FBQ25DLGtCQUFrQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQixzREFBTyxVQUFVO0FBQzlGO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsNkJBQTZCLHFEQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLDhDQUFLLFlBQVk7QUFDOUY7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0QXJndW1lbnRWYWx1ZXMuanM/M2JmMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbnNwZWN0IH0gZnJvbSAnY3Jvc3MtaW5zcGVjdCc7XG5pbXBvcnQgeyBpc05vbk51bGxUeXBlLCBLaW5kLCBwcmludCwgdmFsdWVGcm9tQVNULCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgY3JlYXRlR3JhcGhRTEVycm9yIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgaGFzT3duUHJvcGVydHkgfSBmcm9tICcuL2pzdXRpbHMuanMnO1xuLyoqXG4gKiBQcmVwYXJlcyBhbiBvYmplY3QgbWFwIG9mIGFyZ3VtZW50IHZhbHVlcyBnaXZlbiBhIGxpc3Qgb2YgYXJndW1lbnRcbiAqIGRlZmluaXRpb25zIGFuZCBsaXN0IG9mIGFyZ3VtZW50IEFTVCBub2Rlcy5cbiAqXG4gKiBOb3RlOiBUaGUgcmV0dXJuZWQgdmFsdWUgaXMgYSBwbGFpbiBPYmplY3Qgd2l0aCBhIHByb3RvdHlwZSwgc2luY2UgaXQgaXNcbiAqIGV4cG9zZWQgdG8gdXNlciBjb2RlLiBDYXJlIHNob3VsZCBiZSB0YWtlbiB0byBub3QgcHVsbCB2YWx1ZXMgZnJvbSB0aGVcbiAqIE9iamVjdCBwcm90b3R5cGUuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRBcmd1bWVudFZhbHVlcyhkZWYsIG5vZGUsIHZhcmlhYmxlVmFsdWVzID0ge30pIHtcbiAgICBjb25zdCBjb2VyY2VkVmFsdWVzID0ge307XG4gICAgY29uc3QgYXJndW1lbnROb2RlcyA9IG5vZGUuYXJndW1lbnRzID8/IFtdO1xuICAgIGNvbnN0IGFyZ05vZGVNYXAgPSBhcmd1bWVudE5vZGVzLnJlZHVjZSgocHJldiwgYXJnKSA9PiAoe1xuICAgICAgICAuLi5wcmV2LFxuICAgICAgICBbYXJnLm5hbWUudmFsdWVdOiBhcmcsXG4gICAgfSksIHt9KTtcbiAgICBmb3IgKGNvbnN0IHsgbmFtZSwgdHlwZTogYXJnVHlwZSwgZGVmYXVsdFZhbHVlIH0gb2YgZGVmLmFyZ3MpIHtcbiAgICAgICAgY29uc3QgYXJndW1lbnROb2RlID0gYXJnTm9kZU1hcFtuYW1lXTtcbiAgICAgICAgaWYgKCFhcmd1bWVudE5vZGUpIHtcbiAgICAgICAgICAgIGlmIChkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIGNvZXJjZWRWYWx1ZXNbbmFtZV0gPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpc05vbk51bGxUeXBlKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBvZiByZXF1aXJlZCB0eXBlIFwiJHtpbnNwZWN0KGFyZ1R5cGUpfVwiIGAgKyAnd2FzIG5vdCBwcm92aWRlZC4nLCB7XG4gICAgICAgICAgICAgICAgICAgIG5vZGVzOiBbbm9kZV0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB2YWx1ZU5vZGUgPSBhcmd1bWVudE5vZGUudmFsdWU7XG4gICAgICAgIGxldCBpc051bGwgPSB2YWx1ZU5vZGUua2luZCA9PT0gS2luZC5OVUxMO1xuICAgICAgICBpZiAodmFsdWVOb2RlLmtpbmQgPT09IEtpbmQuVkFSSUFCTEUpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhcmlhYmxlTmFtZSA9IHZhbHVlTm9kZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgaWYgKHZhcmlhYmxlVmFsdWVzID09IG51bGwgfHwgIWhhc093blByb3BlcnR5KHZhcmlhYmxlVmFsdWVzLCB2YXJpYWJsZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGRlZmF1bHRWYWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvZXJjZWRWYWx1ZXNbbmFtZV0gPSBkZWZhdWx0VmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUoYXJnVHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBvZiByZXF1aXJlZCB0eXBlIFwiJHtpbnNwZWN0KGFyZ1R5cGUpfVwiIGAgK1xuICAgICAgICAgICAgICAgICAgICAgICAgYHdhcyBwcm92aWRlZCB0aGUgdmFyaWFibGUgXCIkJHt2YXJpYWJsZU5hbWV9XCIgd2hpY2ggd2FzIG5vdCBwcm92aWRlZCBhIHJ1bnRpbWUgdmFsdWUuYCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpc051bGwgPSB2YXJpYWJsZVZhbHVlc1t2YXJpYWJsZU5hbWVdID09IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGlzTnVsbCAmJiBpc05vbk51bGxUeXBlKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYEFyZ3VtZW50IFwiJHtuYW1lfVwiIG9mIG5vbi1udWxsIHR5cGUgXCIke2luc3BlY3QoYXJnVHlwZSl9XCIgYCArICdtdXN0IG5vdCBiZSBudWxsLicsIHtcbiAgICAgICAgICAgICAgICBub2RlczogW3ZhbHVlTm9kZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb2VyY2VkVmFsdWUgPSB2YWx1ZUZyb21BU1QodmFsdWVOb2RlLCBhcmdUeXBlLCB2YXJpYWJsZVZhbHVlcyk7XG4gICAgICAgIGlmIChjb2VyY2VkVmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLy8gTm90ZTogVmFsdWVzT2ZDb3JyZWN0VHlwZVJ1bGUgdmFsaWRhdGlvbiBzaG91bGQgY2F0Y2ggdGhpcyBiZWZvcmVcbiAgICAgICAgICAgIC8vIGV4ZWN1dGlvbi4gVGhpcyBpcyBhIHJ1bnRpbWUgY2hlY2sgdG8gZW5zdXJlIGV4ZWN1dGlvbiBkb2VzIG5vdFxuICAgICAgICAgICAgLy8gY29udGludWUgd2l0aCBhbiBpbnZhbGlkIGFyZ3VtZW50IHZhbHVlLlxuICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBoYXMgaW52YWxpZCB2YWx1ZSAke3ByaW50KHZhbHVlTm9kZSl9LmAsIHtcbiAgICAgICAgICAgICAgICBub2RlczogW3ZhbHVlTm9kZV0sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjb2VyY2VkVmFsdWVzW25hbWVdID0gY29lcmNlZFZhbHVlO1xuICAgIH1cbiAgICByZXR1cm4gY29lcmNlZFZhbHVlcztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirectiveExtensions: () => (/* binding */ getDirectiveExtensions)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var _getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getArgumentValues.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\nfunction getDirectiveExtensions(directableObj, schema, pathToDirectivesInExtensions = ['directives']) {\n    const directiveExtensions = {};\n    if (directableObj.extensions) {\n        let directivesInExtensions = directableObj.extensions;\n        for (const pathSegment of pathToDirectivesInExtensions) {\n            directivesInExtensions = directivesInExtensions?.[pathSegment];\n        }\n        if (directivesInExtensions != null) {\n            for (const directiveNameProp in directivesInExtensions) {\n                const directiveObjs = directivesInExtensions[directiveNameProp];\n                const directiveName = directiveNameProp;\n                if (Array.isArray(directiveObjs)) {\n                    for (const directiveObj of directiveObjs) {\n                        let existingDirectiveExtensions = directiveExtensions[directiveName];\n                        if (!existingDirectiveExtensions) {\n                            existingDirectiveExtensions = [];\n                            directiveExtensions[directiveName] = existingDirectiveExtensions;\n                        }\n                        existingDirectiveExtensions.push(directiveObj);\n                    }\n                }\n                else {\n                    let existingDirectiveExtensions = directiveExtensions[directiveName];\n                    if (!existingDirectiveExtensions) {\n                        existingDirectiveExtensions = [];\n                        directiveExtensions[directiveName] = existingDirectiveExtensions;\n                    }\n                    existingDirectiveExtensions.push(directiveObjs);\n                }\n            }\n        }\n    }\n    const memoizedStringify = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_0__.memoize1)(obj => JSON.stringify(obj));\n    const astNodes = [];\n    if (directableObj.astNode) {\n        astNodes.push(directableObj.astNode);\n    }\n    if (directableObj.extensionASTNodes) {\n        astNodes.push(...directableObj.extensionASTNodes);\n    }\n    for (const astNode of astNodes) {\n        if (astNode.directives?.length) {\n            for (const directive of astNode.directives) {\n                const directiveName = directive.name.value;\n                let existingDirectiveExtensions = directiveExtensions[directiveName];\n                if (!existingDirectiveExtensions) {\n                    existingDirectiveExtensions = [];\n                    directiveExtensions[directiveName] = existingDirectiveExtensions;\n                }\n                const directiveInSchema = schema?.getDirective(directiveName);\n                let value = {};\n                if (directiveInSchema) {\n                    value = (0,_getArgumentValues_js__WEBPACK_IMPORTED_MODULE_1__.getArgumentValues)(directiveInSchema, directive);\n                }\n                if (directive.arguments) {\n                    for (const argNode of directive.arguments) {\n                        const argName = argNode.name.value;\n                        if (value[argName] == null) {\n                            const argInDirective = directiveInSchema?.args.find(arg => arg.name === argName);\n                            if (argInDirective) {\n                                value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.valueFromAST)(argNode.value, argInDirective.type);\n                            }\n                        }\n                        if (value[argName] == null) {\n                            value[argName] = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.valueFromASTUntyped)(argNode.value);\n                        }\n                    }\n                }\n                if (astNodes.length > 0 && existingDirectiveExtensions.length > 0) {\n                    const valStr = memoizedStringify(value);\n                    if (existingDirectiveExtensions.some(val => memoizedStringify(val) === valStr)) {\n                        continue;\n                    }\n                }\n                existingDirectiveExtensions.push(value);\n            }\n        }\n    }\n    return directiveExtensions;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0RGlyZWN0aXZlRXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0RDtBQUNEO0FBQ25CO0FBQ2pDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIscURBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsd0VBQWlCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaURBQWlELHFEQUFZO0FBQzdEO0FBQ0E7QUFDQTtBQUNBLDZDQUE2Qyw0REFBbUI7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXREaXJlY3RpdmVFeHRlbnNpb25zLmpzPzhkZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdmFsdWVGcm9tQVNULCB2YWx1ZUZyb21BU1RVbnR5cGVkIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBnZXRBcmd1bWVudFZhbHVlcyB9IGZyb20gJy4vZ2V0QXJndW1lbnRWYWx1ZXMuanMnO1xuaW1wb3J0IHsgbWVtb2l6ZTEgfSBmcm9tICcuL21lbW9pemUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERpcmVjdGl2ZUV4dGVuc2lvbnMoZGlyZWN0YWJsZU9iaiwgc2NoZW1hLCBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gWydkaXJlY3RpdmVzJ10pIHtcbiAgICBjb25zdCBkaXJlY3RpdmVFeHRlbnNpb25zID0ge307XG4gICAgaWYgKGRpcmVjdGFibGVPYmouZXh0ZW5zaW9ucykge1xuICAgICAgICBsZXQgZGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IGRpcmVjdGFibGVPYmouZXh0ZW5zaW9ucztcbiAgICAgICAgZm9yIChjb25zdCBwYXRoU2VnbWVudCBvZiBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zKSB7XG4gICAgICAgICAgICBkaXJlY3RpdmVzSW5FeHRlbnNpb25zID0gZGlyZWN0aXZlc0luRXh0ZW5zaW9ucz8uW3BhdGhTZWdtZW50XTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoZGlyZWN0aXZlc0luRXh0ZW5zaW9ucyAhPSBudWxsKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGRpcmVjdGl2ZU5hbWVQcm9wIGluIGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBkaXJlY3RpdmVPYmpzID0gZGlyZWN0aXZlc0luRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lUHJvcF07XG4gICAgICAgICAgICAgICAgY29uc3QgZGlyZWN0aXZlTmFtZSA9IGRpcmVjdGl2ZU5hbWVQcm9wO1xuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRpcmVjdGl2ZU9ianMpKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZGlyZWN0aXZlT2JqIG9mIGRpcmVjdGl2ZU9ianMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMgPSBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVFeHRlbnNpb25zW2RpcmVjdGl2ZU5hbWVdID0gZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zLnB1c2goZGlyZWN0aXZlT2JqKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGV0IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucyA9IGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIGlmICghZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZUV4dGVuc2lvbnNbZGlyZWN0aXZlTmFtZV0gPSBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnM7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zLnB1c2goZGlyZWN0aXZlT2Jqcyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG1lbW9pemVkU3RyaW5naWZ5ID0gbWVtb2l6ZTEob2JqID0+IEpTT04uc3RyaW5naWZ5KG9iaikpO1xuICAgIGNvbnN0IGFzdE5vZGVzID0gW107XG4gICAgaWYgKGRpcmVjdGFibGVPYmouYXN0Tm9kZSkge1xuICAgICAgICBhc3ROb2Rlcy5wdXNoKGRpcmVjdGFibGVPYmouYXN0Tm9kZSk7XG4gICAgfVxuICAgIGlmIChkaXJlY3RhYmxlT2JqLmV4dGVuc2lvbkFTVE5vZGVzKSB7XG4gICAgICAgIGFzdE5vZGVzLnB1c2goLi4uZGlyZWN0YWJsZU9iai5leHRlbnNpb25BU1ROb2Rlcyk7XG4gICAgfVxuICAgIGZvciAoY29uc3QgYXN0Tm9kZSBvZiBhc3ROb2Rlcykge1xuICAgICAgICBpZiAoYXN0Tm9kZS5kaXJlY3RpdmVzPy5sZW5ndGgpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZGlyZWN0aXZlIG9mIGFzdE5vZGUuZGlyZWN0aXZlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGRpcmVjdGl2ZU5hbWUgPSBkaXJlY3RpdmUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgICAgICBsZXQgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zID0gZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAoIWV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucykge1xuICAgICAgICAgICAgICAgICAgICBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMgPSBbXTtcbiAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlRXh0ZW5zaW9uc1tkaXJlY3RpdmVOYW1lXSA9IGV4aXN0aW5nRGlyZWN0aXZlRXh0ZW5zaW9ucztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZGlyZWN0aXZlSW5TY2hlbWEgPSBzY2hlbWE/LmdldERpcmVjdGl2ZShkaXJlY3RpdmVOYW1lKTtcbiAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSB7fTtcbiAgICAgICAgICAgICAgICBpZiAoZGlyZWN0aXZlSW5TY2hlbWEpIHtcbiAgICAgICAgICAgICAgICAgICAgdmFsdWUgPSBnZXRBcmd1bWVudFZhbHVlcyhkaXJlY3RpdmVJblNjaGVtYSwgZGlyZWN0aXZlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRpcmVjdGl2ZS5hcmd1bWVudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBhcmdOb2RlIG9mIGRpcmVjdGl2ZS5hcmd1bWVudHMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFyZ05hbWUgPSBhcmdOb2RlLm5hbWUudmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWVbYXJnTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGFyZ0luRGlyZWN0aXZlID0gZGlyZWN0aXZlSW5TY2hlbWE/LmFyZ3MuZmluZChhcmcgPT4gYXJnLm5hbWUgPT09IGFyZ05hbWUpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcmdJbkRpcmVjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZVthcmdOYW1lXSA9IHZhbHVlRnJvbUFTVChhcmdOb2RlLnZhbHVlLCBhcmdJbkRpcmVjdGl2ZS50eXBlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWVbYXJnTmFtZV0gPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlW2FyZ05hbWVdID0gdmFsdWVGcm9tQVNUVW50eXBlZChhcmdOb2RlLnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoYXN0Tm9kZXMubGVuZ3RoID4gMCAmJiBleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB2YWxTdHIgPSBtZW1vaXplZFN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ0RpcmVjdGl2ZUV4dGVuc2lvbnMuc29tZSh2YWwgPT4gbWVtb2l6ZWRTdHJpbmdpZnkodmFsKSA9PT0gdmFsU3RyKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZXhpc3RpbmdEaXJlY3RpdmVFeHRlbnNpb25zLnB1c2godmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBkaXJlY3RpdmVFeHRlbnNpb25zO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getDirectiveExtensions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getObjectTypeFromTypeMap: () => (/* binding */ getObjectTypeFromTypeMap)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBLFlBQVkscURBQVk7QUFDeEI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9iamVjdFR5cGVGcm9tVHlwZU1hcC5qcz8yYWQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzT2JqZWN0VHlwZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE9iamVjdFR5cGVGcm9tVHlwZU1hcCh0eXBlTWFwLCB0eXBlKSB7XG4gICAgaWYgKHR5cGUpIHtcbiAgICAgICAgY29uc3QgbWF5YmVPYmplY3RUeXBlID0gdHlwZU1hcFt0eXBlLm5hbWVdO1xuICAgICAgICBpZiAoaXNPYmplY3RUeXBlKG1heWJlT2JqZWN0VHlwZSkpIHtcbiAgICAgICAgICAgIHJldHVybiBtYXliZU9iamVjdFR5cGU7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaGVscGVycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBZ0M7QUFDekI7QUFDUDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSw4Q0FBSztBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9oZWxwZXJzLmpzPzBhM2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2UgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBjb25zdCBhc0FycmF5ID0gKGZucykgPT4gKEFycmF5LmlzQXJyYXkoZm5zKSA/IGZucyA6IGZucyA/IFtmbnNdIDogW10pO1xuY29uc3QgaW52YWxpZERvY1JlZ2V4ID0gL1xcLlthLXowLTldKyQvaTtcbmV4cG9ydCBmdW5jdGlvbiBpc0RvY3VtZW50U3RyaW5nKHN0cikge1xuICAgIGlmICh0eXBlb2Ygc3RyICE9PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIFhYWDogaXMtdmFsaWQtcGF0aCBvciBpcy1nbG9iIHRyZWF0IFNETCBhcyBhIHZhbGlkIHBhdGhcbiAgICAvLyAoYHNjYWxhciBEYXRlYCBmb3IgZXhhbXBsZSlcbiAgICAvLyB0aGlzIHdoeSBjaGVja2luZyB0aGUgZXh0ZW5zaW9uIGlzIGZhc3QgZW5vdWdoXG4gICAgLy8gYW5kIHByZXZlbnQgZnJvbSBwYXJzaW5nIHRoZSBzdHJpbmcgaW4gb3JkZXIgdG8gZmluZCBvdXRcbiAgICAvLyBpZiB0aGUgc3RyaW5nIGlzIGEgU0RMXG4gICAgaWYgKGludmFsaWREb2NSZWdleC50ZXN0KHN0cikpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBwYXJzZShzdHIpO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgY2F0Y2ggKGUpIHsgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmNvbnN0IGludmFsaWRQYXRoUmVnZXggPSAvW+KAmOKAnCElXjw+YFxcbl0vO1xuLyoqXG4gKiBDaGVja2VzIHdoZXRoZXIgdGhlIGBzdHJgIGNvbnRhaW5zIGFueSBwYXRoIGlsbGVnYWwgY2hhcmFjdGVycy5cbiAqXG4gKiBBIHN0cmluZyBtYXkgc29tZXRpbWVzIGxvb2sgbGlrZSBhIHBhdGggYnV0IGlzIG5vdCAobGlrZSBhbiBTREwgb2YgYSBzaW1wbGVcbiAqIEdyYXBoUUwgc2NoZW1hKS4gVG8gbWFrZSBzdXJlIHdlIGRvbid0IHlpZWxkIGZhbHNlLXBvc2l0aXZlcyBpbiBzdWNoIGNhc2VzLFxuICogd2UgZGlzYWxsb3cgbmV3IGxpbmVzIGluIHBhdGhzIChldmVuIHRob3VnaCBtb3N0IFVuaXggc3lzdGVtcyBzdXBwb3J0IG5ld1xuICogbGluZXMgaW4gZmlsZSBuYW1lcykuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUGF0aChzdHIpIHtcbiAgICByZXR1cm4gdHlwZW9mIHN0ciA9PT0gJ3N0cmluZycgJiYgIWludmFsaWRQYXRoUmVnZXgudGVzdChzdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVTdHJpbmdzKGEsIGIpIHtcbiAgICBpZiAoU3RyaW5nKGEpIDwgU3RyaW5nKGIpKSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgaWYgKFN0cmluZyhhKSA+IFN0cmluZyhiKSkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgcmV0dXJuIDA7XG59XG5leHBvcnQgZnVuY3Rpb24gbm9kZVRvU3RyaW5nKGEpIHtcbiAgICBsZXQgbmFtZTtcbiAgICBpZiAoJ2FsaWFzJyBpbiBhKSB7XG4gICAgICAgIG5hbWUgPSBhLmFsaWFzPy52YWx1ZTtcbiAgICB9XG4gICAgaWYgKG5hbWUgPT0gbnVsbCAmJiAnbmFtZScgaW4gYSkge1xuICAgICAgICBuYW1lID0gYS5uYW1lPy52YWx1ZTtcbiAgICB9XG4gICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICBuYW1lID0gYS5raW5kO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlTm9kZXMoYSwgYiwgY3VzdG9tRm4pIHtcbiAgICBjb25zdCBhU3RyID0gbm9kZVRvU3RyaW5nKGEpO1xuICAgIGNvbnN0IGJTdHIgPSBub2RlVG9TdHJpbmcoYik7XG4gICAgaWYgKHR5cGVvZiBjdXN0b21GbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gY3VzdG9tRm4oYVN0ciwgYlN0cik7XG4gICAgfVxuICAgIHJldHVybiBjb21wYXJlU3RyaW5ncyhhU3RyLCBiU3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1NvbWUoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXQgIT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRTb21lKGlucHV0LCBtZXNzYWdlID0gJ1ZhbHVlIHNob3VsZCBiZSBzb21ldGhpbmcnKSB7XG4gICAgaWYgKGlucHV0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/isDocumentNode.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/isDocumentNode.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDocumentNode: () => (/* binding */ isDocumentNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaXNEb2N1bWVudE5vZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0I7QUFDeEI7QUFDUCx1RkFBdUYseUNBQUk7QUFDM0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2lzRG9jdW1lbnROb2RlLmpzPzk2Y2UiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9jdW1lbnROb2RlKG9iamVjdCkge1xuICAgIHJldHVybiBvYmplY3QgJiYgdHlwZW9mIG9iamVjdCA9PT0gJ29iamVjdCcgJiYgJ2tpbmQnIGluIG9iamVjdCAmJiBvYmplY3Qua2luZCA9PT0gS2luZC5ET0NVTUVOVDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/isDocumentNode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return value?.then != null;\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vanN1dGlscy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vanN1dGlscy5qcz8xYzNhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0l0ZXJhYmxlT2JqZWN0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlICE9IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiBTeW1ib2wuaXRlcmF0b3IgaW4gdmFsdWU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgIT09IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNQcm9taXNlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy50aGVuICE9IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gcHJvbWlzZVJlZHVjZSh2YWx1ZXMsIGNhbGxiYWNrRm4sIGluaXRpYWxWYWx1ZSkge1xuICAgIGxldCBhY2N1bXVsYXRvciA9IGluaXRpYWxWYWx1ZTtcbiAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICBhY2N1bXVsYXRvciA9IGlzUHJvbWlzZShhY2N1bXVsYXRvcilcbiAgICAgICAgICAgID8gYWNjdW11bGF0b3IudGhlbihyZXNvbHZlZCA9PiBjYWxsYmFja0ZuKHJlc29sdmVkLCB2YWx1ZSkpXG4gICAgICAgICAgICA6IGNhbGxiYWNrRm4oYWNjdW11bGF0b3IsIHZhbHVlKTtcbiAgICB9XG4gICAgcmV0dXJuIGFjY3VtdWxhdG9yO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhc093blByb3BlcnR5KG9iaiwgcHJvcCkge1xuICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mapSchema.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mapSchema.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correctASTNodes: () => (/* binding */ correctASTNodes),\n/* harmony export */   mapSchema: () => (/* binding */ mapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rewire_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rewire.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformInputValue.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n\n\n\n\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.serializeInputValue), schema, schemaMapper, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.parseInputValue), schema, schemaMapper, type => !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0,_rewire_js__WEBPACK_IMPORTED_MODULE_2__.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] =\n                        newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.TYPE];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_TYPE);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.UNION_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.FIELD];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_FIELD);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper ?? null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mergeDeep.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mergeDeep.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction mergeDeep(sources, respectPrototype = false, respectArrays = false, respectArrayLength = false) {\n    if (respectArrays && respectArrayLength) {\n        let expectedLength;\n        const areArraysInTheSameLength = sources.every(source => {\n            if (Array.isArray(source)) {\n                if (expectedLength === undefined) {\n                    expectedLength = source.length;\n                    return true;\n                }\n                else if (expectedLength === source.length) {\n                    return true;\n                }\n            }\n            return false;\n        });\n        if (areArraysInTheSameLength) {\n            return new Array(expectedLength).fill(null).map((_, index) => mergeDeep(sources.map(source => source[index]), respectPrototype, respectArrays, respectArrayLength));\n        }\n    }\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(sources[0])));\n    }\n    for (const source of sources) {\n        if (isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isSome)(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                    }\n                }\n                else if (respectArrays && Array.isArray(output[key])) {\n                    if (Array.isArray(source[key])) {\n                        if (respectArrayLength && output[key].length === source[key].length) {\n                            output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                        }\n                        else {\n                            output[key].push(...source[key]);\n                        }\n                    }\n                    else {\n                        output[key].push(source[key]);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWVyZ2VEZWVwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBQy9CO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsbURBQU07QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdEQUFnRCxvQkFBb0I7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWVyZ2VEZWVwLmpzPzA4OGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNTb21lIH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBtZXJnZURlZXAoc291cmNlcywgcmVzcGVjdFByb3RvdHlwZSA9IGZhbHNlLCByZXNwZWN0QXJyYXlzID0gZmFsc2UsIHJlc3BlY3RBcnJheUxlbmd0aCA9IGZhbHNlKSB7XG4gICAgaWYgKHJlc3BlY3RBcnJheXMgJiYgcmVzcGVjdEFycmF5TGVuZ3RoKSB7XG4gICAgICAgIGxldCBleHBlY3RlZExlbmd0aDtcbiAgICAgICAgY29uc3QgYXJlQXJyYXlzSW5UaGVTYW1lTGVuZ3RoID0gc291cmNlcy5ldmVyeShzb3VyY2UgPT4ge1xuICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkoc291cmNlKSkge1xuICAgICAgICAgICAgICAgIGlmIChleHBlY3RlZExlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkTGVuZ3RoID0gc291cmNlLmxlbmd0aDtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKGV4cGVjdGVkTGVuZ3RoID09PSBzb3VyY2UubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGlmIChhcmVBcnJheXNJblRoZVNhbWVMZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBuZXcgQXJyYXkoZXhwZWN0ZWRMZW5ndGgpLmZpbGwobnVsbCkubWFwKChfLCBpbmRleCkgPT4gbWVyZ2VEZWVwKHNvdXJjZXMubWFwKHNvdXJjZSA9PiBzb3VyY2VbaW5kZXhdKSwgcmVzcGVjdFByb3RvdHlwZSwgcmVzcGVjdEFycmF5cywgcmVzcGVjdEFycmF5TGVuZ3RoKSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29uc3Qgb3V0cHV0ID0ge307XG4gICAgaWYgKHJlc3BlY3RQcm90b3R5cGUpIHtcbiAgICAgICAgT2JqZWN0LnNldFByb3RvdHlwZU9mKG91dHB1dCwgT2JqZWN0LmNyZWF0ZShPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlc1swXSkpKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBzb3VyY2Ugb2Ygc291cmNlcykge1xuICAgICAgICBpZiAoaXNPYmplY3Qoc291cmNlKSkge1xuICAgICAgICAgICAgaWYgKHJlc3BlY3RQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBvdXRwdXRQcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yob3V0cHV0KTtcbiAgICAgICAgICAgICAgICBjb25zdCBzb3VyY2VQcm90b3R5cGUgPSBPYmplY3QuZ2V0UHJvdG90eXBlT2Yoc291cmNlKTtcbiAgICAgICAgICAgICAgICBpZiAoc291cmNlUHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHNvdXJjZVByb3RvdHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlc2NyaXB0b3IgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZVByb3RvdHlwZSwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1NvbWUoZGVzY3JpcHRvcikpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob3V0cHV0UHJvdG90eXBlLCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gc291cmNlKSB7XG4gICAgICAgICAgICAgICAgaWYgKGlzT2JqZWN0KHNvdXJjZVtrZXldKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIShrZXkgaW4gb3V0cHV0KSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvdXRwdXQsIHsgW2tleV06IHNvdXJjZVtrZXldIH0pO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0gPSBtZXJnZURlZXAoW291dHB1dFtrZXldLCBzb3VyY2Vba2V5XV0sIHJlc3BlY3RQcm90b3R5cGUsIHJlc3BlY3RBcnJheXMsIHJlc3BlY3RBcnJheUxlbmd0aCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocmVzcGVjdEFycmF5cyAmJiBBcnJheS5pc0FycmF5KG91dHB1dFtrZXldKSkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2Vba2V5XSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXNwZWN0QXJyYXlMZW5ndGggJiYgb3V0cHV0W2tleV0ubGVuZ3RoID09PSBzb3VyY2Vba2V5XS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRba2V5XSA9IG1lcmdlRGVlcChbb3V0cHV0W2tleV0sIHNvdXJjZVtrZXldXSwgcmVzcGVjdFByb3RvdHlwZSwgcmVzcGVjdEFycmF5cywgcmVzcGVjdEFycmF5TGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFtrZXldLnB1c2goLi4uc291cmNlW2tleV0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0ucHVzaChzb3VyY2Vba2V5XSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob3V0cHV0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbmZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/mergeDeep.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js":
/*!******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js ***!
  \******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromArg: () => (/* binding */ astFromArg),\n/* harmony export */   astFromDirective: () => (/* binding */ astFromDirective),\n/* harmony export */   astFromEnumType: () => (/* binding */ astFromEnumType),\n/* harmony export */   astFromEnumValue: () => (/* binding */ astFromEnumValue),\n/* harmony export */   astFromField: () => (/* binding */ astFromField),\n/* harmony export */   astFromInputField: () => (/* binding */ astFromInputField),\n/* harmony export */   astFromInputObjectType: () => (/* binding */ astFromInputObjectType),\n/* harmony export */   astFromInterfaceType: () => (/* binding */ astFromInterfaceType),\n/* harmony export */   astFromObjectType: () => (/* binding */ astFromObjectType),\n/* harmony export */   astFromScalarType: () => (/* binding */ astFromScalarType),\n/* harmony export */   astFromSchema: () => (/* binding */ astFromSchema),\n/* harmony export */   astFromUnionType: () => (/* binding */ astFromUnionType),\n/* harmony export */   getDirectiveNodes: () => (/* binding */ getDirectiveNodes),\n/* harmony export */   getDocumentNodeFromSchema: () => (/* binding */ getDocumentNodeFromSchema),\n/* harmony export */   makeDeprecatedDirective: () => (/* binding */ makeDeprecatedDirective),\n/* harmony export */   makeDirectiveNode: () => (/* binding */ makeDirectiveNode),\n/* harmony export */   makeDirectiveNodes: () => (/* binding */ makeDirectiveNodes),\n/* harmony export */   printSchemaWithDirectives: () => (/* binding */ printSchemaWithDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _astFromType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astFromType.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromType.js\");\n/* harmony import */ var _astFromValue_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astFromValue.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValue.js\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./descriptionFromObject.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/descriptionFromObject.js\");\n/* harmony import */ var _get_directives_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./get-directives.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/get-directives.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n\n\n\n\n\n\n\n\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type);\n        const isIntrospection = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DOCUMENT,\n        definitions,\n    };\n}\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.print)(documentNode);\n}\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_6__.getRootTypeMap)(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_DEFINITION : graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    const descriptionNode = (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(schema);\n    if (descriptionNode) {\n        schemaNode.description = descriptionNode;\n    }\n    return schemaNode;\n}\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(directive),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: directive.args?.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: directive.locations?.map(location => ({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: location,\n        })) || [],\n    };\n}\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    let directiveNodesBesidesDeprecatedAndSpecifiedBy = [];\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    let deprecatedDirectiveNode = null;\n    let specifiedByDirectiveNode = null;\n    if (directives != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy = directives.filter(directive => directive.name.value !== 'deprecated' && directive.name.value !== 'specifiedBy');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = directives.filter(directive => directive.name.value === 'deprecated')?.[0];\n        }\n        if (entity.specifiedByUrl != null || entity.specifiedByURL != null) {\n            specifiedByDirectiveNode = directives.filter(directive => directive.name.value === 'specifiedBy')?.[0];\n        }\n    }\n    if (entity.deprecationReason != null && deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    if (entity.specifiedByUrl != null ||\n        (entity.specifiedByURL != null && specifiedByDirectiveNode == null)) {\n        const specifiedByValue = entity.specifiedByUrl || entity.specifiedByURL;\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        specifiedByDirectiveNode = makeDirectiveNode('specifiedBy', specifiedByArgs);\n    }\n    if (deprecatedDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(deprecatedDirectiveNode);\n    }\n    if (specifiedByDirectiveNode != null) {\n        directiveNodesBesidesDeprecatedAndSpecifiedBy.push(specifiedByDirectiveNode);\n    }\n    return directiveNodesBesidesDeprecatedAndSpecifiedBy;\n}\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(arg),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: arg.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined\n            ? ((0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(arg.defaultValue, arg.type) ?? undefined)\n            : undefined,\n        directives: getDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    const node = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace));\n    }\n    return node;\n}\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(type)),\n    };\n}\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_10__.getDirectivesInExtensions)(type, pathToDirectivesInExtensions);\n    const directives = makeDirectiveNodes(schema, directivesInExtensions);\n    const specifiedByValue = (type['specifiedByUrl'] ||\n        type['specifiedByURL']);\n    if (specifiedByValue &&\n        !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(type),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(field),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(field.defaultValue, field.type) ?? undefined,\n    };\n}\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_VALUE_DEFINITION,\n        description: (0,_descriptionFromObject_js__WEBPACK_IMPORTED_MODULE_9__.getDescriptionNode)(value),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: value.name,\n        },\n        directives: getDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDeprecatedDirective);\n}\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    for (const argName in args) {\n        const argValue = args[argName];\n        let value;\n        if (directive != null) {\n            const arg = directive.args.find(arg => arg.name === argName);\n            if (arg) {\n                value = (0,_astFromValue_js__WEBPACK_IMPORTED_MODULE_11__.astFromValue)(argValue, arg.type);\n            }\n        }\n        if (value == null) {\n            value = (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_12__.astFromValueUntyped)(argValue);\n        }\n        if (value != null) {\n            directiveArguments.push({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ARGUMENT,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: argName,\n                },\n                value,\n            });\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const { name, args } of directiveValues) {\n        const directive = schema?.getDirective(name);\n        directiveNodes.push(makeDirectiveNode(name, args, directive));\n    }\n    return directiveNodes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rewire.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rewire.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewireTypes: () => (/* binding */ rewireTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _stub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stub.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLUnionType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(enumConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.isNamedStub)(type) ? (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rewire.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vcm9vdFR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFpRDtBQUNUO0FBQ2pDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsY0FBYyw4REFBa0Isd0NBQXdDLFdBQVc7QUFDbkY7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ08seUJBQXlCLHFEQUFRO0FBQ3hDO0FBQ0E7QUFDQSxDQUFDO0FBQ00scUJBQXFCLHFEQUFRO0FBQ3BDO0FBQ0E7QUFDQSxDQUFDO0FBQ00sdUJBQXVCLHFEQUFRO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9yb290VHlwZXMuanM/ZjhiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVHcmFwaFFMRXJyb3IgfSBmcm9tICcuL2Vycm9ycy5qcyc7XG5pbXBvcnQgeyBtZW1vaXplMSB9IGZyb20gJy4vbWVtb2l6ZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVmaW5lZFJvb3RUeXBlKHNjaGVtYSwgb3BlcmF0aW9uLCBub2Rlcykge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKTtcbiAgICBjb25zdCByb290VHlwZSA9IHJvb3RUeXBlTWFwLmdldChvcGVyYXRpb24pO1xuICAgIGlmIChyb290VHlwZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgU2NoZW1hIGlzIG5vdCBjb25maWd1cmVkIHRvIGV4ZWN1dGUgJHtvcGVyYXRpb259IG9wZXJhdGlvbi5gLCB7XG4gICAgICAgICAgICBub2RlcyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiByb290VHlwZTtcbn1cbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZU5hbWVzID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVOYW1lcyhzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZXMgPSBnZXRSb290VHlwZXMoc2NoZW1hKTtcbiAgICByZXR1cm4gbmV3IFNldChbLi4ucm9vdFR5cGVzXS5tYXAodHlwZSA9PiB0eXBlLm5hbWUpKTtcbn0pO1xuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlcyA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlcyhzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IGdldFJvb3RUeXBlTWFwKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQocm9vdFR5cGVNYXAudmFsdWVzKCkpO1xufSk7XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVNYXAgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZU1hcChzY2hlbWEpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IG5ldyBNYXAoKTtcbiAgICBjb25zdCBxdWVyeVR5cGUgPSBzY2hlbWEuZ2V0UXVlcnlUeXBlKCk7XG4gICAgaWYgKHF1ZXJ5VHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ3F1ZXJ5JywgcXVlcnlUeXBlKTtcbiAgICB9XG4gICAgY29uc3QgbXV0YXRpb25UeXBlID0gc2NoZW1hLmdldE11dGF0aW9uVHlwZSgpO1xuICAgIGlmIChtdXRhdGlvblR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdtdXRhdGlvbicsIG11dGF0aW9uVHlwZSk7XG4gICAgfVxuICAgIGNvbnN0IHN1YnNjcmlwdGlvblR5cGUgPSBzY2hlbWEuZ2V0U3Vic2NyaXB0aW9uVHlwZSgpO1xuICAgIGlmIChzdWJzY3JpcHRpb25UeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgnc3Vic2NyaXB0aW9uJywgc3Vic2NyaXB0aW9uVHlwZSk7XG4gICAgfVxuICAgIHJldHVybiByb290VHlwZU1hcDtcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/stub.js":
/*!******************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/stub.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamedStub: () => (/* binding */ createNamedStub),\n/* harmony export */   createStub: () => (/* binding */ createStub),\n/* harmony export */   getBuiltInForStub: () => (/* binding */ getBuiltInForStub),\n/* harmony export */   isNamedStub: () => (/* binding */ isNamedStub)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.LIST_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(createStub(node.type, type));\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NON_NULL_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID;\n        default:\n            return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vc3R1Yi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQWtNO0FBQzNMO0FBQ1A7QUFDQTtBQUNBLHNCQUFzQixzREFBaUI7QUFDdkM7QUFDQTtBQUNBLHNCQUFzQix5REFBb0I7QUFDMUM7QUFDQTtBQUNBLHNCQUFzQiwyREFBc0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixrREFBYTtBQUNuQyxhQUFhO0FBQ2IsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQSxhQUFhLHlDQUFJO0FBQ2pCLHVCQUF1QixnREFBVztBQUNsQyxhQUFhLHlDQUFJO0FBQ2pCLHVCQUF1QixtREFBYztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsYUFBYSwrQ0FBVTtBQUN2QixtQkFBbUIsK0NBQVU7QUFDN0IsYUFBYSxpREFBWTtBQUN6QixtQkFBbUIsaURBQVk7QUFDL0IsYUFBYSxrREFBYTtBQUMxQixtQkFBbUIsa0RBQWE7QUFDaEMsYUFBYSxtREFBYztBQUMzQixtQkFBbUIsbURBQWM7QUFDakMsYUFBYSw4Q0FBUztBQUN0QixtQkFBbUIsOENBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9tZXJnZS9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3N0dWIuanM/ZDk1MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMQm9vbGVhbiwgR3JhcGhRTEZsb2F0LCBHcmFwaFFMSUQsIEdyYXBoUUxJbnB1dE9iamVjdFR5cGUsIEdyYXBoUUxJbnQsIEdyYXBoUUxJbnRlcmZhY2VUeXBlLCBHcmFwaFFMTGlzdCwgR3JhcGhRTE5vbk51bGwsIEdyYXBoUUxPYmplY3RUeXBlLCBHcmFwaFFMU3RyaW5nLCBLaW5kLCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZU5hbWVkU3R1YihuYW1lLCB0eXBlKSB7XG4gICAgbGV0IGNvbnN0cnVjdG9yO1xuICAgIGlmICh0eXBlID09PSAnb2JqZWN0Jykge1xuICAgICAgICBjb25zdHJ1Y3RvciA9IEdyYXBoUUxPYmplY3RUeXBlO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlID09PSAnaW50ZXJmYWNlJykge1xuICAgICAgICBjb25zdHJ1Y3RvciA9IEdyYXBoUUxJbnRlcmZhY2VUeXBlO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBHcmFwaFFMSW5wdXRPYmplY3RUeXBlO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IGNvbnN0cnVjdG9yKHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZmllbGRzOiB7XG4gICAgICAgICAgICBfZmFrZToge1xuICAgICAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxTdHJpbmcsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVN0dWIobm9kZSwgdHlwZSkge1xuICAgIHN3aXRjaCAobm9kZS5raW5kKSB7XG4gICAgICAgIGNhc2UgS2luZC5MSVNUX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxMaXN0KGNyZWF0ZVN0dWIobm9kZS50eXBlLCB0eXBlKSk7XG4gICAgICAgIGNhc2UgS2luZC5OT05fTlVMTF9UWVBFOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMTm9uTnVsbChjcmVhdGVTdHViKG5vZGUudHlwZSwgdHlwZSkpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgaWYgKHR5cGUgPT09ICdvdXRwdXQnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5hbWVkU3R1Yihub2RlLm5hbWUudmFsdWUsICdvYmplY3QnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBjcmVhdGVOYW1lZFN0dWIobm9kZS5uYW1lLnZhbHVlLCAnaW5wdXQnKTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNOYW1lZFN0dWIodHlwZSkge1xuICAgIGlmICgnZ2V0RmllbGRzJyBpbiB0eXBlKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkcyA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnJlYWNoYWJsZS1sb29wXG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIHJldHVybiBmaWVsZC5uYW1lID09PSAnX2Zha2UnO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRCdWlsdEluRm9yU3R1Yih0eXBlKSB7XG4gICAgc3dpdGNoICh0eXBlLm5hbWUpIHtcbiAgICAgICAgY2FzZSBHcmFwaFFMSW50Lm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTEludDtcbiAgICAgICAgY2FzZSBHcmFwaFFMRmxvYXQubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMRmxvYXQ7XG4gICAgICAgIGNhc2UgR3JhcGhRTFN0cmluZy5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxTdHJpbmc7XG4gICAgICAgIGNhc2UgR3JhcGhRTEJvb2xlYW4ubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMQm9vbGVhbjtcbiAgICAgICAgY2FzZSBHcmFwaFFMSUQubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMSUQ7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/stub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null\n            ? inputLeafValueTransformer(nullableType, value)\n            : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null\n            ? inputObjectValueTransformer(nullableType, newValue)\n            : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL21lcmdlL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vdHJhbnNmb3JtSW5wdXRWYWx1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBc0Y7QUFDL0M7QUFDaEM7QUFDUDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsd0RBQWU7QUFDeEMsUUFBUSxtREFBVTtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbURBQVU7QUFDdkIsZUFBZSxvREFBTztBQUN0QjtBQUNBLGFBQWEsMERBQWlCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsMEVBQTBFO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvbWVyZ2Uvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS90cmFuc2Zvcm1JbnB1dFZhbHVlLmpzPzNmYjgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TnVsbGFibGVUeXBlLCBpc0lucHV0T2JqZWN0VHlwZSwgaXNMZWFmVHlwZSwgaXNMaXN0VHlwZSwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGFzQXJyYXkgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIgPSBudWxsLCBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIgPSBudWxsKSB7XG4gICAgaWYgKHZhbHVlID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xuICAgIH1cbiAgICBjb25zdCBudWxsYWJsZVR5cGUgPSBnZXROdWxsYWJsZVR5cGUodHlwZSk7XG4gICAgaWYgKGlzTGVhZlR5cGUobnVsbGFibGVUeXBlKSkge1xuICAgICAgICByZXR1cm4gaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciAhPSBudWxsXG4gICAgICAgICAgICA/IGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIobnVsbGFibGVUeXBlLCB2YWx1ZSlcbiAgICAgICAgICAgIDogdmFsdWU7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzTGlzdFR5cGUobnVsbGFibGVUeXBlKSkge1xuICAgICAgICByZXR1cm4gYXNBcnJheSh2YWx1ZSkubWFwKChsaXN0TWVtYmVyKSA9PiB0cmFuc2Zvcm1JbnB1dFZhbHVlKG51bGxhYmxlVHlwZS5vZlR5cGUsIGxpc3RNZW1iZXIsIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcikpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0lucHV0T2JqZWN0VHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkcyA9IG51bGxhYmxlVHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgY29uc3QgbmV3VmFsdWUgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2tleV07XG4gICAgICAgICAgICBpZiAoZmllbGQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIG5ld1ZhbHVlW2tleV0gPSB0cmFuc2Zvcm1JbnB1dFZhbHVlKGZpZWxkLnR5cGUsIHZhbHVlW2tleV0sIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lciAhPSBudWxsXG4gICAgICAgICAgICA/IGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lcihudWxsYWJsZVR5cGUsIG5ld1ZhbHVlKVxuICAgICAgICAgICAgOiBuZXdWYWx1ZTtcbiAgICB9XG4gICAgLy8gdW5yZWFjaGFibGUsIG5vIG90aGVyIHBvc3NpYmxlIHJldHVybiB2YWx1ZVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUlucHV0VmFsdWUodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB0LnNlcmlhbGl6ZSh2KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHQucGFyc2VWYWx1ZSh2KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4gdjtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSW5wdXRWYWx1ZUxpdGVyYWwodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHQucGFyc2VMaXRlcmFsKHYsIHt9KSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/merge/node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/schema/esm/addResolversToSchema.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@graphql-tools/schema/esm/addResolversToSchema.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addResolversToSchema: () => (/* binding */ addResolversToSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/heal.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/forEachField.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _checkForResolveTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkForResolveTypeResolver.js */ \"(ssr)/../node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js\");\n/* harmony import */ var _extendResolversFromInterfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extendResolversFromInterfaces.js */ \"(ssr)/../node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\");\n\n\n\n\nfunction addResolversToSchema({ schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, }) {\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? (0,_extendResolversFromInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.extendResolversFromInterfaces)(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            if (requireResolversToMatchSchema === 'ignore') {\n                continue;\n            }\n            throw new Error(`\"${typeName}\" defined in resolvers, but not in schema`);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`);\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    throw new Error(`${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`);\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            throw new Error(`${typeName}.${fieldName} defined in resolvers, but not in schema`);\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        (0,_checkForResolveTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__.checkForResolveTypeResolver)(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isScalarType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : type.astNode.description,\n                        directives: ((_c = type.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: (_h = (_g = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _g === void 0 ? void 0 : _g.description) !== null && _h !== void 0 ? _h : config.astNode.description,\n                        directives: ((_j = config.astNode.directives) !== null && _j !== void 0 ? _j : []).concat((_l = (_k = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _k === void 0 ? void 0 : _k.directives) !== null && _l !== void 0 ? _l : []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat((_m = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _m !== void 0 ? _m : []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType(config);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    continue;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.forEachDefaultValue)(schema, _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.healSchema)(schema);\n    // reparse all default values with new parsing functions.\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.forEachDefaultValue)(schema, _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.parseInputValue);\n    if (defaultFieldResolver != null) {\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.forEachField)(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.SCALAR_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLScalarType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.ENUM_TYPE]: type => {\n            var _a, _b, _c, _d, _e, _f;\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: (_b = (_a = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : config.astNode.description,\n                            directives: ((_c = config.astNode.directives) !== null && _c !== void 0 ? _c : []).concat((_e = (_d = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.astNode) === null || _d === void 0 ? void 0 : _d.directives) !== null && _e !== void 0 ? _e : []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat((_f = resolverValue === null || resolverValue === void 0 ? void 0 : resolverValue.extensionASTNodes) !== null && _f !== void 0 ? _f : []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLUnionType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLInterfaceType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.mapSchema)(schema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/schema/esm/addResolversToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/schema/esm/assertResolversPresent.js":
/*!***************************************************************************!*\
  !*** ../node_modules/@graphql-tools/schema/esm/assertResolversPresent.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertResolversPresent: () => (/* binding */ assertResolversPresent)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/forEachField.js\");\n\n\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.forEachField)(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)((0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vYXNzZXJ0UmVzb2x2ZXJzUHJlc2VudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUQ7QUFDRDtBQUM3QyxzRUFBc0U7QUFDN0UsWUFBWSxzRkFBc0Y7QUFDbEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUksa0VBQVk7QUFDaEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELHFEQUFZLENBQUMscURBQVk7QUFDbkY7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsU0FBUyxHQUFHLFVBQVU7QUFDdkU7QUFDQTtBQUNBLE1BQU0sVUFBVTtBQUNoQixHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLFNBQVMsR0FBRyxVQUFVO0FBQzNEO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zY2hlbWEvZXNtL2Fzc2VydFJlc29sdmVyc1ByZXNlbnQuanM/YzZhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW1lZFR5cGUsIGlzU2NhbGFyVHlwZSB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZm9yRWFjaEZpZWxkIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFJlc29sdmVyc1ByZXNlbnQoc2NoZW1hLCByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzLCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyLCByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIH0gPSByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zO1xuICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzICYmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyB8fCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyKSkge1xuICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKCdyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIHRha2VzIHByZWNlZGVuY2Ugb3ZlciB0aGUgbW9yZSBzcGVjaWZpYyBhc3NlcnRpb25zLiAnICtcbiAgICAgICAgICAgICdQbGVhc2UgY29uZmlndXJlIGVpdGhlciByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzIG9yIHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzIC8gJyArXG4gICAgICAgICAgICAncmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhciwgYnV0IG5vdCBhIGNvbWJpbmF0aW9uIG9mIHRoZW0uJyk7XG4gICAgfVxuICAgIGZvckVhY2hGaWVsZChzY2hlbWEsIChmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSkgPT4ge1xuICAgICAgICAvLyByZXF1aXJlcyBhIHJlc29sdmVyIGZvciAqZXZlcnkqIGZpZWxkLlxuICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcykge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZXIoJ3JlcXVpcmVSZXNvbHZlcnNGb3JBbGxGaWVsZHMnLCByZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzLCBmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlciBvbiBldmVyeSBmaWVsZCB0aGF0IGhhcyBhcmd1bWVudHNcbiAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzICYmIGZpZWxkLmFyZ3MubGVuZ3RoID4gMCkge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZXIoJ3JlcXVpcmVSZXNvbHZlcnNGb3JBcmdzJywgcmVxdWlyZVJlc29sdmVyc0ZvckFyZ3MsIGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgfVxuICAgICAgICAvLyByZXF1aXJlcyBhIHJlc29sdmVyIG9uIGV2ZXJ5IGZpZWxkIHRoYXQgcmV0dXJucyBhIG5vbi1zY2FsYXIgdHlwZVxuICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhciAhPT0gJ2lnbm9yZScgJiYgIWlzU2NhbGFyVHlwZShnZXROYW1lZFR5cGUoZmllbGQudHlwZSkpKSB7XG4gICAgICAgICAgICBleHBlY3RSZXNvbHZlcigncmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhcicsIHJlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIsIGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuZnVuY3Rpb24gZXhwZWN0UmVzb2x2ZXIodmFsaWRhdG9yLCBiZWhhdmlvciwgZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpIHtcbiAgICBpZiAoIWZpZWxkLnJlc29sdmUpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9IGBSZXNvbHZlciBtaXNzaW5nIGZvciBcIiR7dHlwZU5hbWV9LiR7ZmllbGROYW1lfVwiLlxuVG8gZGlzYWJsZSB0aGlzIHZhbGlkYXRvciwgdXNlOlxuICByZXNvbHZlclZhbGlkYXRpb25PcHRpb25zOiB7XG4gICAgJHt2YWxpZGF0b3J9OiAnaWdub3JlJ1xuICB9YDtcbiAgICAgICAgaWYgKGJlaGF2aW9yID09PSAnZXJyb3InKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJlaGF2aW9yID09PSAnd2FybicpIHtcbiAgICAgICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmICh0eXBlb2YgZmllbGQucmVzb2x2ZSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlc29sdmVyIFwiJHt0eXBlTmFtZX0uJHtmaWVsZE5hbWV9XCIgbXVzdCBiZSBhIGZ1bmN0aW9uYCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/schema/esm/assertResolversPresent.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkForResolveTypeResolver: () => (/* binding */ checkForResolveTypeResolver)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2RDtBQUM3RDtBQUNPO0FBQ1AsSUFBSSwrREFBUztBQUNiLFNBQVMsNERBQVU7QUFDbkI7QUFDQSx5Q0FBeUMsVUFBVTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9jaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIuanM/YzRmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNYXBwZXJLaW5kLCBtYXBTY2hlbWEgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG4vLyBJZiB3ZSBoYXZlIGFueSB1bmlvbiBvciBpbnRlcmZhY2UgdHlwZXMgdGhyb3cgaWYgbm8gdGhlcmUgaXMgbm8gcmVzb2x2ZVR5cGUgcmVzb2x2ZXJcbmV4cG9ydCBmdW5jdGlvbiBjaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIoc2NoZW1hLCByZXF1aXJlUmVzb2x2ZXJzRm9yUmVzb2x2ZVR5cGUpIHtcbiAgICBtYXBTY2hlbWEoc2NoZW1hLCB7XG4gICAgICAgIFtNYXBwZXJLaW5kLkFCU1RSQUNUX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIGlmICghdHlwZS5yZXNvbHZlVHlwZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgVHlwZSBcIiR7dHlwZS5uYW1lfVwiIGlzIG1pc3NpbmcgYSBcIl9fcmVzb2x2ZVR5cGVcIiByZXNvbHZlci4gUGFzcyAnaWdub3JlJyBpbnRvIGAgK1xuICAgICAgICAgICAgICAgICAgICAnXCJyZXNvbHZlclZhbGlkYXRpb25PcHRpb25zLnJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZVwiIHRvIGRpc2FibGUgdGhpcyBlcnJvci4nO1xuICAgICAgICAgICAgICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yUmVzb2x2ZVR5cGUgPT09ICdlcnJvcicpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvclJlc29sdmVUeXBlID09PSAnd2FybicpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS53YXJuKG1lc3NhZ2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js":
/*!**********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extendResolversFromInterfaces: () => (/* binding */ extendResolversFromInterfaces)\n/* harmony export */ });\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9leHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcy5qcz8wZGM0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBleHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcyhzY2hlbWEsIHJlc29sdmVycykge1xuICAgIGNvbnN0IGV4dGVuZGVkUmVzb2x2ZXJzID0ge307XG4gICAgY29uc3QgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgaWYgKCdnZXRJbnRlcmZhY2VzJyBpbiB0eXBlKSB7XG4gICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB7fTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgaUZhY2Ugb2YgdHlwZS5nZXRJbnRlcmZhY2VzKCkpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzb2x2ZXJzW2lGYWNlLm5hbWVdKSB7XG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIHJlc29sdmVyc1tpRmFjZS5uYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkTmFtZSA9PT0gJ19faXNUeXBlT2YnIHx8ICFmaWVsZE5hbWUuc3RhcnRzV2l0aCgnX18nKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVuZGVkUmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdID0gcmVzb2x2ZXJzW2lGYWNlLm5hbWVdW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB0eXBlUmVzb2x2ZXJzID0gcmVzb2x2ZXJzW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGV4dGVuZGVkUmVzb2x2ZXJzW3R5cGVOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAuLi5leHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0sXG4gICAgICAgICAgICAgICAgLi4udHlwZVJlc29sdmVycyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCB0eXBlUmVzb2x2ZXJzID0gcmVzb2x2ZXJzW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGlmICh0eXBlUmVzb2x2ZXJzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB0eXBlUmVzb2x2ZXJzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBleHRlbmRlZFJlc29sdmVycztcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateSelectionScore: () => (/* binding */ calculateSelectionScore),\n/* harmony export */   createDelegationPlanBuilder: () => (/* binding */ createDelegationPlanBuilder)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/extractUnavailableFields.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/leftOver.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _getFieldsNotInSubschema_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getFieldsNotInSubschema.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js\");\n\n\n\n\nfunction calculateDelegationStage(mergedTypeInfo, sourceSubschemas, targetSubschemas, fieldNodes) {\n    const { selectionSets, fieldSelectionSets, uniqueFields, nonUniqueFields } = mergedTypeInfo;\n    // 1.  calculate if possible to delegate to given subschema\n    const proxiableSubschemas = [];\n    const nonProxiableSubschemas = [];\n    for (const t of targetSubschemas) {\n        const selectionSet = selectionSets.get(t);\n        const fieldSelectionSetsMap = fieldSelectionSets.get(t);\n        if (selectionSet != null &&\n            !subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemas, selectionSet)) {\n            nonProxiableSubschemas.push(t);\n        }\n        else {\n            if (fieldSelectionSetsMap == null ||\n                fieldNodes.every(fieldNode => {\n                    const fieldName = fieldNode.name.value;\n                    const fieldSelectionSet = fieldSelectionSetsMap[fieldName];\n                    return (fieldSelectionSet == null ||\n                        subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemas, fieldSelectionSet));\n                })) {\n                proxiableSubschemas.push(t);\n            }\n            else {\n                nonProxiableSubschemas.push(t);\n            }\n        }\n    }\n    const unproxiableFieldNodes = [];\n    // 2. for each selection:\n    const delegationMap = new Map();\n    for (const fieldNode of fieldNodes) {\n        const fieldName = fieldNode.name.value;\n        if (fieldName === '__typename') {\n            continue;\n        }\n        // check dependencies for computed fields are available in the source schemas\n        const sourcesWithUnsatisfiedDependencies = sourceSubschemas.filter(s => fieldSelectionSets.get(s) != null &&\n            fieldSelectionSets.get(s)[fieldName] != null &&\n            !subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubschemas, fieldSelectionSets.get(s)[fieldName]));\n        if (sourcesWithUnsatisfiedDependencies.length === sourceSubschemas.length) {\n            unproxiableFieldNodes.push(fieldNode);\n            for (const source of sourcesWithUnsatisfiedDependencies) {\n                if (!nonProxiableSubschemas.includes(source)) {\n                    nonProxiableSubschemas.push(source);\n                }\n            }\n            continue;\n        }\n        // 2a. use uniqueFields map to assign fields to subschema if one of possible subschemas\n        const uniqueSubschema = uniqueFields[fieldNode.name.value];\n        if (uniqueSubschema != null) {\n            if (!proxiableSubschemas.includes(uniqueSubschema)) {\n                unproxiableFieldNodes.push(fieldNode);\n                continue;\n            }\n            const existingSubschema = delegationMap.get(uniqueSubschema)?.selections;\n            if (existingSubschema != null) {\n                existingSubschema.push(fieldNode);\n            }\n            else {\n                delegationMap.set(uniqueSubschema, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                    selections: [fieldNode],\n                });\n            }\n            continue;\n        }\n        // 2b. use nonUniqueFields to assign to a possible subschema,\n        //     preferring one of the subschemas already targets of delegation\n        let nonUniqueSubschemas = nonUniqueFields[fieldNode.name.value];\n        if (nonUniqueSubschemas == null) {\n            unproxiableFieldNodes.push(fieldNode);\n            continue;\n        }\n        nonUniqueSubschemas = nonUniqueSubschemas.filter(s => proxiableSubschemas.includes(s));\n        if (!nonUniqueSubschemas.length) {\n            unproxiableFieldNodes.push(fieldNode);\n            continue;\n        }\n        const existingSubschema = nonUniqueSubschemas.find(s => delegationMap.has(s));\n        if (existingSubschema != null) {\n            // It is okay we previously explicitly check whether the map has the element.\n            delegationMap.get(existingSubschema).selections.push(fieldNode);\n        }\n        else {\n            let bestUniqueSubschema = nonUniqueSubschemas[0];\n            let bestScore = Infinity;\n            for (const nonUniqueSubschema of nonUniqueSubschemas) {\n                const typeInSubschema = nonUniqueSubschema.transformedSchema.getType(mergedTypeInfo.typeName);\n                const fields = typeInSubschema.getFields();\n                const field = fields[fieldNode.name.value];\n                if (field != null) {\n                    const unavailableFields = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_1__.extractUnavailableFields)(nonUniqueSubschema.transformedSchema, field, fieldNode, fieldType => {\n                        if (!nonUniqueSubschema.merge?.[fieldType.name]) {\n                            let nonUniqueSubschemaSelections = \n                            // We have to cast it to `SelectionNode[]` because it is Readonly<SelectionNode[]> and it doesn't allow us to push new elements.\n                            delegationMap.get(nonUniqueSubschema)?.selections;\n                            if (nonUniqueSubschemaSelections == null) {\n                                nonUniqueSubschemaSelections = [];\n                                delegationMap.set(nonUniqueSubschema, {\n                                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                                    selections: nonUniqueSubschemaSelections,\n                                });\n                            }\n                            nonUniqueSubschemaSelections.push(fieldNode);\n                            // Ignore unresolvable fields\n                            return false;\n                        }\n                        return true;\n                    });\n                    const currentScore = calculateSelectionScore(unavailableFields);\n                    if (currentScore < bestScore) {\n                        bestScore = currentScore;\n                        bestUniqueSubschema = nonUniqueSubschema;\n                    }\n                }\n            }\n            delegationMap.set(bestUniqueSubschema, {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                selections: [fieldNode],\n            });\n        }\n    }\n    if (delegationMap.size > 1) {\n        optimizeDelegationMap(delegationMap, mergedTypeInfo.typeName);\n    }\n    return {\n        delegationMap,\n        proxiableSubschemas,\n        nonProxiableSubschemas,\n        unproxiableFieldNodes,\n    };\n}\nfunction calculateSelectionScore(selections) {\n    let score = 0;\n    for (const selectionNode of selections) {\n        switch (selectionNode.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD:\n                score++;\n                if (selectionNode.selectionSet?.selections) {\n                    score += calculateSelectionScore(selectionNode.selectionSet.selections);\n                }\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT:\n                score += calculateSelectionScore(selectionNode.selectionSet.selections);\n                break;\n        }\n    }\n    return score;\n}\nfunction getStitchingInfo(schema) {\n    const stitchingInfo = schema.extensions?.['stitchingInfo'];\n    if (!stitchingInfo) {\n        throw new Error(`Schema is not a stitched schema.`);\n    }\n    return stitchingInfo;\n}\nfunction createDelegationPlanBuilder(mergedTypeInfo) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.memoize5)(function delegationPlanBuilder(schema, sourceSubschema, variableValues, fragments, fieldNodes) {\n        const stitchingInfo = getStitchingInfo(schema);\n        const targetSubschemas = mergedTypeInfo?.targetSubschemas.get(sourceSubschema);\n        if (!targetSubschemas || !targetSubschemas.length) {\n            return [];\n        }\n        const typeName = mergedTypeInfo.typeName;\n        const typeInSubschema = sourceSubschema.transformedSchema.getType(typeName);\n        const fieldsNotInSubschema = (0,_getFieldsNotInSubschema_js__WEBPACK_IMPORTED_MODULE_3__.getFieldsNotInSubschema)(schema, stitchingInfo, schema.getType(typeName), mergedTypeInfo.typeMaps.get(sourceSubschema)?.[typeName], fieldNodes, fragments, variableValues);\n        if (!fieldsNotInSubschema.length) {\n            return [];\n        }\n        const delegationMaps = [];\n        let sourceSubschemas = createSubschemas(sourceSubschema);\n        let delegationStage = calculateDelegationStage(mergedTypeInfo, sourceSubschemas, targetSubschemas, fieldsNotInSubschema);\n        let { delegationMap } = delegationStage;\n        while (delegationMap.size) {\n            delegationMaps.push(delegationMap);\n            const { proxiableSubschemas, nonProxiableSubschemas, unproxiableFieldNodes } = delegationStage;\n            sourceSubschemas = combineSubschemas(sourceSubschemas, proxiableSubschemas);\n            delegationStage = calculateDelegationStage(mergedTypeInfo, sourceSubschemas, nonProxiableSubschemas, unproxiableFieldNodes);\n            delegationMap = delegationStage.delegationMap;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(typeInSubschema) &&\n            fieldsNotInSubschema.some(fieldNode => fieldNode.name.value === '__typename')) {\n            const inlineFragments = [];\n            for (const fieldNode of fieldNodes) {\n                if (fieldNode.selectionSet) {\n                    for (const selection of fieldNode.selectionSet.selections) {\n                        if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT) {\n                            inlineFragments.push(selection);\n                        }\n                    }\n                }\n            }\n            const implementedSubschemas = targetSubschemas.filter(subschema => {\n                const typeInTargetSubschema = mergedTypeInfo.typeMaps.get(subschema)?.[typeName];\n                return ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(typeInTargetSubschema) &&\n                    subschema.transformedSchema.getPossibleTypes(typeInTargetSubschema).length);\n            });\n            let added = false;\n            for (const implementedSubgraphs of implementedSubschemas) {\n                for (const delegationMap of delegationMaps) {\n                    // SelectionNode is not read-only\n                    const existingSelections = delegationMap.get(implementedSubgraphs)\n                        ?.selections;\n                    if (existingSelections) {\n                        existingSelections.push({\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD,\n                            name: {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n                                value: '__typename',\n                            },\n                        });\n                        existingSelections.push(...inlineFragments);\n                        added = true;\n                        break;\n                    }\n                    if (added) {\n                        break;\n                    }\n                }\n            }\n            if (!added) {\n                const subschemaWithTypeName = implementedSubschemas[0];\n                if (subschemaWithTypeName) {\n                    const delegationStageToFetchTypeName = new Map();\n                    delegationStageToFetchTypeName.set(subschemaWithTypeName, {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                        selections: [\n                            {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD,\n                                name: {\n                                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n                                    value: '__typename',\n                                },\n                            },\n                            ...inlineFragments,\n                        ],\n                    });\n                    delegationMaps.push(delegationStageToFetchTypeName);\n                }\n            }\n        }\n        if (delegationStage.unproxiableFieldNodes.length &&\n            delegationStage.nonProxiableSubschemas.length) {\n            _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_5__.leftOverByDelegationPlan.set(delegationMaps, {\n                unproxiableFieldNodes: delegationStage.unproxiableFieldNodes,\n                nonProxiableSubschemas: delegationStage.nonProxiableSubschemas,\n                missingFieldsParentMap: new Map(),\n                missingFieldsParentDeferredMap: new Map(),\n            });\n        }\n        return delegationMaps;\n    });\n}\nfunction optimizeDelegationMap(delegationMap, typeName) {\n    for (const [subschema, selectionSet] of delegationMap) {\n        for (const [subschema2, selectionSet2] of delegationMap) {\n            if (subschema === subschema2) {\n                continue;\n            }\n            const unavailableFields = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_1__.extractUnavailableFieldsFromSelectionSet)(subschema2.transformedSchema, \n            // Unfortunately, getType returns GraphQLNamedType, but we already know the type is a GraphQLObjectType, so we can cast it.\n            subschema2.transformedSchema.getType(typeName), selectionSet, () => true);\n            if (!unavailableFields.length) {\n                delegationMap.set(subschema2, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SELECTION_SET,\n                    selections: [...selectionSet2.selections, ...selectionSet.selections],\n                });\n                delegationMap.delete(subschema);\n            }\n        }\n    }\n    return delegationMap;\n}\nconst createSubschemas = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.memoize1)(function createSubschemas(sourceSubschema) {\n    return [sourceSubschema];\n});\nconst combineSubschemas = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.memoize2)(function combineSubschemas(sourceSubschemas, additionalSubschemas) {\n    return sourceSubschemas.concat(additionalSubschemas);\n});\nconst subschemaTypesContainSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.memoize3)(function subschemaTypesContainSelectionSet(mergedTypeInfo, sourceSubchemas, selectionSet) {\n    return typesContainSelectionSet(sourceSubchemas.map(sourceSubschema => sourceSubschema.transformedSchema.getType(mergedTypeInfo.typeName)), selectionSet);\n});\nfunction typesContainSelectionSet(types, selectionSet) {\n    const fieldMaps = types.map(type => type.getFields());\n    for (const selection of selectionSet.selections) {\n        if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD) {\n            const fields = fieldMaps\n                .map(fieldMap => fieldMap[selection.name.value])\n                .filter(field => field != null);\n            if (!fields.length) {\n                return false;\n            }\n            if (selection.selectionSet != null) {\n                return typesContainSelectionSet(fields.map(field => (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(field.type)), selection.selectionSet);\n            }\n        }\n        else if (selection.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT &&\n            selection.typeCondition?.name.value === types[0].name) {\n            return typesContainSelectionSet(types, selection.selectionSet);\n        }\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vY3JlYXRlRGVsZWdhdGlvblBsYW5CdWlsZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQThEO0FBQzBFO0FBQzFEO0FBQ1A7QUFDdkU7QUFDQSxZQUFZLG1FQUFtRTtBQUMvRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIseUNBQUk7QUFDOUI7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4Q0FBOEMsaUZBQXdCO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHlDQUFJO0FBQzlDO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlDQUFJO0FBQzFCO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHlDQUFJO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIseUNBQUk7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsOERBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsb0ZBQXVCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsZ0JBQWdCO0FBQzlCO0FBQ0E7QUFDQSxvQkFBb0IscUVBQXFFO0FBQ3pGO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSx1REFBYztBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0NBQStDLHlDQUFJO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVEQUFjO0FBQ3RDO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MseUNBQUk7QUFDdEM7QUFDQSxzQ0FBc0MseUNBQUk7QUFDMUM7QUFDQSw2QkFBNkI7QUFDN0IseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIseUNBQUk7QUFDbEM7QUFDQTtBQUNBLHNDQUFzQyx5Q0FBSTtBQUMxQztBQUNBLDBDQUEwQyx5Q0FBSTtBQUM5QztBQUNBLGlDQUFpQztBQUNqQyw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLDZFQUF3QjtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLGlHQUF3QztBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQix5Q0FBSTtBQUM5QjtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOERBQVE7QUFDakM7QUFDQSxDQUFDO0FBQ0QsMEJBQTBCLDhEQUFRO0FBQ2xDO0FBQ0EsQ0FBQztBQUNELDBDQUEwQyw4REFBUTtBQUNsRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IseUNBQUk7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRUFBb0UscURBQVk7QUFDaEY7QUFDQTtBQUNBLG9DQUFvQyx5Q0FBSTtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvZXNtL2NyZWF0ZURlbGVnYXRpb25QbGFuQnVpbGRlci5qcz9hMGZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE5hbWVkVHlwZSwgaXNBYnN0cmFjdFR5cGUsIEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBleHRyYWN0VW5hdmFpbGFibGVGaWVsZHMsIGV4dHJhY3RVbmF2YWlsYWJsZUZpZWxkc0Zyb21TZWxlY3Rpb25TZXQsIGxlZnRPdmVyQnlEZWxlZ2F0aW9uUGxhbiwgfSBmcm9tICdAZ3JhcGhxbC10b29scy9kZWxlZ2F0ZSc7XG5pbXBvcnQgeyBtZW1vaXplMSwgbWVtb2l6ZTIsIG1lbW9pemUzLCBtZW1vaXplNSB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmltcG9ydCB7IGdldEZpZWxkc05vdEluU3Vic2NoZW1hIH0gZnJvbSAnLi9nZXRGaWVsZHNOb3RJblN1YnNjaGVtYS5qcyc7XG5mdW5jdGlvbiBjYWxjdWxhdGVEZWxlZ2F0aW9uU3RhZ2UobWVyZ2VkVHlwZUluZm8sIHNvdXJjZVN1YnNjaGVtYXMsIHRhcmdldFN1YnNjaGVtYXMsIGZpZWxkTm9kZXMpIHtcbiAgICBjb25zdCB7IHNlbGVjdGlvblNldHMsIGZpZWxkU2VsZWN0aW9uU2V0cywgdW5pcXVlRmllbGRzLCBub25VbmlxdWVGaWVsZHMgfSA9IG1lcmdlZFR5cGVJbmZvO1xuICAgIC8vIDEuICBjYWxjdWxhdGUgaWYgcG9zc2libGUgdG8gZGVsZWdhdGUgdG8gZ2l2ZW4gc3Vic2NoZW1hXG4gICAgY29uc3QgcHJveGlhYmxlU3Vic2NoZW1hcyA9IFtdO1xuICAgIGNvbnN0IG5vblByb3hpYWJsZVN1YnNjaGVtYXMgPSBbXTtcbiAgICBmb3IgKGNvbnN0IHQgb2YgdGFyZ2V0U3Vic2NoZW1hcykge1xuICAgICAgICBjb25zdCBzZWxlY3Rpb25TZXQgPSBzZWxlY3Rpb25TZXRzLmdldCh0KTtcbiAgICAgICAgY29uc3QgZmllbGRTZWxlY3Rpb25TZXRzTWFwID0gZmllbGRTZWxlY3Rpb25TZXRzLmdldCh0KTtcbiAgICAgICAgaWYgKHNlbGVjdGlvblNldCAhPSBudWxsICYmXG4gICAgICAgICAgICAhc3Vic2NoZW1hVHlwZXNDb250YWluU2VsZWN0aW9uU2V0KG1lcmdlZFR5cGVJbmZvLCBzb3VyY2VTdWJzY2hlbWFzLCBzZWxlY3Rpb25TZXQpKSB7XG4gICAgICAgICAgICBub25Qcm94aWFibGVTdWJzY2hlbWFzLnB1c2godCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoZmllbGRTZWxlY3Rpb25TZXRzTWFwID09IG51bGwgfHxcbiAgICAgICAgICAgICAgICBmaWVsZE5vZGVzLmV2ZXJ5KGZpZWxkTm9kZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGZpZWxkTm9kZS5uYW1lLnZhbHVlO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZFNlbGVjdGlvblNldCA9IGZpZWxkU2VsZWN0aW9uU2V0c01hcFtmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGZpZWxkU2VsZWN0aW9uU2V0ID09IG51bGwgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHN1YnNjaGVtYVR5cGVzQ29udGFpblNlbGVjdGlvblNldChtZXJnZWRUeXBlSW5mbywgc291cmNlU3Vic2NoZW1hcywgZmllbGRTZWxlY3Rpb25TZXQpKTtcbiAgICAgICAgICAgICAgICB9KSkge1xuICAgICAgICAgICAgICAgIHByb3hpYWJsZVN1YnNjaGVtYXMucHVzaCh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5vblByb3hpYWJsZVN1YnNjaGVtYXMucHVzaCh0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCB1bnByb3hpYWJsZUZpZWxkTm9kZXMgPSBbXTtcbiAgICAvLyAyLiBmb3IgZWFjaCBzZWxlY3Rpb246XG4gICAgY29uc3QgZGVsZWdhdGlvbk1hcCA9IG5ldyBNYXAoKTtcbiAgICBmb3IgKGNvbnN0IGZpZWxkTm9kZSBvZiBmaWVsZE5vZGVzKSB7XG4gICAgICAgIGNvbnN0IGZpZWxkTmFtZSA9IGZpZWxkTm9kZS5uYW1lLnZhbHVlO1xuICAgICAgICBpZiAoZmllbGROYW1lID09PSAnX190eXBlbmFtZScpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNoZWNrIGRlcGVuZGVuY2llcyBmb3IgY29tcHV0ZWQgZmllbGRzIGFyZSBhdmFpbGFibGUgaW4gdGhlIHNvdXJjZSBzY2hlbWFzXG4gICAgICAgIGNvbnN0IHNvdXJjZXNXaXRoVW5zYXRpc2ZpZWREZXBlbmRlbmNpZXMgPSBzb3VyY2VTdWJzY2hlbWFzLmZpbHRlcihzID0+IGZpZWxkU2VsZWN0aW9uU2V0cy5nZXQocykgIT0gbnVsbCAmJlxuICAgICAgICAgICAgZmllbGRTZWxlY3Rpb25TZXRzLmdldChzKVtmaWVsZE5hbWVdICE9IG51bGwgJiZcbiAgICAgICAgICAgICFzdWJzY2hlbWFUeXBlc0NvbnRhaW5TZWxlY3Rpb25TZXQobWVyZ2VkVHlwZUluZm8sIHNvdXJjZVN1YnNjaGVtYXMsIGZpZWxkU2VsZWN0aW9uU2V0cy5nZXQocylbZmllbGROYW1lXSkpO1xuICAgICAgICBpZiAoc291cmNlc1dpdGhVbnNhdGlzZmllZERlcGVuZGVuY2llcy5sZW5ndGggPT09IHNvdXJjZVN1YnNjaGVtYXMubGVuZ3RoKSB7XG4gICAgICAgICAgICB1bnByb3hpYWJsZUZpZWxkTm9kZXMucHVzaChmaWVsZE5vZGUpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBzb3VyY2Ugb2Ygc291cmNlc1dpdGhVbnNhdGlzZmllZERlcGVuZGVuY2llcykge1xuICAgICAgICAgICAgICAgIGlmICghbm9uUHJveGlhYmxlU3Vic2NoZW1hcy5pbmNsdWRlcyhzb3VyY2UpKSB7XG4gICAgICAgICAgICAgICAgICAgIG5vblByb3hpYWJsZVN1YnNjaGVtYXMucHVzaChzb3VyY2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIC8vIDJhLiB1c2UgdW5pcXVlRmllbGRzIG1hcCB0byBhc3NpZ24gZmllbGRzIHRvIHN1YnNjaGVtYSBpZiBvbmUgb2YgcG9zc2libGUgc3Vic2NoZW1hc1xuICAgICAgICBjb25zdCB1bmlxdWVTdWJzY2hlbWEgPSB1bmlxdWVGaWVsZHNbZmllbGROb2RlLm5hbWUudmFsdWVdO1xuICAgICAgICBpZiAodW5pcXVlU3Vic2NoZW1hICE9IG51bGwpIHtcbiAgICAgICAgICAgIGlmICghcHJveGlhYmxlU3Vic2NoZW1hcy5pbmNsdWRlcyh1bmlxdWVTdWJzY2hlbWEpKSB7XG4gICAgICAgICAgICAgICAgdW5wcm94aWFibGVGaWVsZE5vZGVzLnB1c2goZmllbGROb2RlKTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGV4aXN0aW5nU3Vic2NoZW1hID0gZGVsZWdhdGlvbk1hcC5nZXQodW5pcXVlU3Vic2NoZW1hKT8uc2VsZWN0aW9ucztcbiAgICAgICAgICAgIGlmIChleGlzdGluZ1N1YnNjaGVtYSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZXhpc3RpbmdTdWJzY2hlbWEucHVzaChmaWVsZE5vZGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgZGVsZWdhdGlvbk1hcC5zZXQodW5pcXVlU3Vic2NoZW1hLCB7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0VMRUNUSU9OX1NFVCxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uczogW2ZpZWxkTm9kZV0sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICAvLyAyYi4gdXNlIG5vblVuaXF1ZUZpZWxkcyB0byBhc3NpZ24gdG8gYSBwb3NzaWJsZSBzdWJzY2hlbWEsXG4gICAgICAgIC8vICAgICBwcmVmZXJyaW5nIG9uZSBvZiB0aGUgc3Vic2NoZW1hcyBhbHJlYWR5IHRhcmdldHMgb2YgZGVsZWdhdGlvblxuICAgICAgICBsZXQgbm9uVW5pcXVlU3Vic2NoZW1hcyA9IG5vblVuaXF1ZUZpZWxkc1tmaWVsZE5vZGUubmFtZS52YWx1ZV07XG4gICAgICAgIGlmIChub25VbmlxdWVTdWJzY2hlbWFzID09IG51bGwpIHtcbiAgICAgICAgICAgIHVucHJveGlhYmxlRmllbGROb2Rlcy5wdXNoKGZpZWxkTm9kZSk7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuICAgICAgICBub25VbmlxdWVTdWJzY2hlbWFzID0gbm9uVW5pcXVlU3Vic2NoZW1hcy5maWx0ZXIocyA9PiBwcm94aWFibGVTdWJzY2hlbWFzLmluY2x1ZGVzKHMpKTtcbiAgICAgICAgaWYgKCFub25VbmlxdWVTdWJzY2hlbWFzLmxlbmd0aCkge1xuICAgICAgICAgICAgdW5wcm94aWFibGVGaWVsZE5vZGVzLnB1c2goZmllbGROb2RlKTtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGV4aXN0aW5nU3Vic2NoZW1hID0gbm9uVW5pcXVlU3Vic2NoZW1hcy5maW5kKHMgPT4gZGVsZWdhdGlvbk1hcC5oYXMocykpO1xuICAgICAgICBpZiAoZXhpc3RpbmdTdWJzY2hlbWEgIT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gSXQgaXMgb2theSB3ZSBwcmV2aW91c2x5IGV4cGxpY2l0bHkgY2hlY2sgd2hldGhlciB0aGUgbWFwIGhhcyB0aGUgZWxlbWVudC5cbiAgICAgICAgICAgIGRlbGVnYXRpb25NYXAuZ2V0KGV4aXN0aW5nU3Vic2NoZW1hKS5zZWxlY3Rpb25zLnB1c2goZmllbGROb2RlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGxldCBiZXN0VW5pcXVlU3Vic2NoZW1hID0gbm9uVW5pcXVlU3Vic2NoZW1hc1swXTtcbiAgICAgICAgICAgIGxldCBiZXN0U2NvcmUgPSBJbmZpbml0eTtcbiAgICAgICAgICAgIGZvciAoY29uc3Qgbm9uVW5pcXVlU3Vic2NoZW1hIG9mIG5vblVuaXF1ZVN1YnNjaGVtYXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlSW5TdWJzY2hlbWEgPSBub25VbmlxdWVTdWJzY2hlbWEudHJhbnNmb3JtZWRTY2hlbWEuZ2V0VHlwZShtZXJnZWRUeXBlSW5mby50eXBlTmFtZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZUluU3Vic2NoZW1hLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2ZpZWxkTm9kZS5uYW1lLnZhbHVlXTtcbiAgICAgICAgICAgICAgICBpZiAoZmllbGQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCB1bmF2YWlsYWJsZUZpZWxkcyA9IGV4dHJhY3RVbmF2YWlsYWJsZUZpZWxkcyhub25VbmlxdWVTdWJzY2hlbWEudHJhbnNmb3JtZWRTY2hlbWEsIGZpZWxkLCBmaWVsZE5vZGUsIGZpZWxkVHlwZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIW5vblVuaXF1ZVN1YnNjaGVtYS5tZXJnZT8uW2ZpZWxkVHlwZS5uYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBub25VbmlxdWVTdWJzY2hlbWFTZWxlY3Rpb25zID0gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2UgaGF2ZSB0byBjYXN0IGl0IHRvIGBTZWxlY3Rpb25Ob2RlW11gIGJlY2F1c2UgaXQgaXMgUmVhZG9ubHk8U2VsZWN0aW9uTm9kZVtdPiBhbmQgaXQgZG9lc24ndCBhbGxvdyB1cyB0byBwdXNoIG5ldyBlbGVtZW50cy5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxlZ2F0aW9uTWFwLmdldChub25VbmlxdWVTdWJzY2hlbWEpPy5zZWxlY3Rpb25zO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChub25VbmlxdWVTdWJzY2hlbWFTZWxlY3Rpb25zID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9uVW5pcXVlU3Vic2NoZW1hU2VsZWN0aW9ucyA9IFtdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZWxlZ2F0aW9uTWFwLnNldChub25VbmlxdWVTdWJzY2hlbWEsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0VMRUNUSU9OX1NFVCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbnM6IG5vblVuaXF1ZVN1YnNjaGVtYVNlbGVjdGlvbnMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub25VbmlxdWVTdWJzY2hlbWFTZWxlY3Rpb25zLnB1c2goZmllbGROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJZ25vcmUgdW5yZXNvbHZhYmxlIGZpZWxkc1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY3VycmVudFNjb3JlID0gY2FsY3VsYXRlU2VsZWN0aW9uU2NvcmUodW5hdmFpbGFibGVGaWVsZHMpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudFNjb3JlIDwgYmVzdFNjb3JlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBiZXN0U2NvcmUgPSBjdXJyZW50U2NvcmU7XG4gICAgICAgICAgICAgICAgICAgICAgICBiZXN0VW5pcXVlU3Vic2NoZW1hID0gbm9uVW5pcXVlU3Vic2NoZW1hO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGVsZWdhdGlvbk1hcC5zZXQoYmVzdFVuaXF1ZVN1YnNjaGVtYSwge1xuICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0VMRUNUSU9OX1NFVCxcbiAgICAgICAgICAgICAgICBzZWxlY3Rpb25zOiBbZmllbGROb2RlXSxcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChkZWxlZ2F0aW9uTWFwLnNpemUgPiAxKSB7XG4gICAgICAgIG9wdGltaXplRGVsZWdhdGlvbk1hcChkZWxlZ2F0aW9uTWFwLCBtZXJnZWRUeXBlSW5mby50eXBlTmFtZSk7XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIGRlbGVnYXRpb25NYXAsXG4gICAgICAgIHByb3hpYWJsZVN1YnNjaGVtYXMsXG4gICAgICAgIG5vblByb3hpYWJsZVN1YnNjaGVtYXMsXG4gICAgICAgIHVucHJveGlhYmxlRmllbGROb2RlcyxcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZVNlbGVjdGlvblNjb3JlKHNlbGVjdGlvbnMpIHtcbiAgICBsZXQgc2NvcmUgPSAwO1xuICAgIGZvciAoY29uc3Qgc2VsZWN0aW9uTm9kZSBvZiBzZWxlY3Rpb25zKSB7XG4gICAgICAgIHN3aXRjaCAoc2VsZWN0aW9uTm9kZS5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIEtpbmQuRklFTEQ6XG4gICAgICAgICAgICAgICAgc2NvcmUrKztcbiAgICAgICAgICAgICAgICBpZiAoc2VsZWN0aW9uTm9kZS5zZWxlY3Rpb25TZXQ/LnNlbGVjdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcmUgKz0gY2FsY3VsYXRlU2VsZWN0aW9uU2NvcmUoc2VsZWN0aW9uTm9kZS5zZWxlY3Rpb25TZXQuc2VsZWN0aW9ucyk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBLaW5kLklOTElORV9GUkFHTUVOVDpcbiAgICAgICAgICAgICAgICBzY29yZSArPSBjYWxjdWxhdGVTZWxlY3Rpb25TY29yZShzZWxlY3Rpb25Ob2RlLnNlbGVjdGlvblNldC5zZWxlY3Rpb25zKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gc2NvcmU7XG59XG5mdW5jdGlvbiBnZXRTdGl0Y2hpbmdJbmZvKHNjaGVtYSkge1xuICAgIGNvbnN0IHN0aXRjaGluZ0luZm8gPSBzY2hlbWEuZXh0ZW5zaW9ucz8uWydzdGl0Y2hpbmdJbmZvJ107XG4gICAgaWYgKCFzdGl0Y2hpbmdJbmZvKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgU2NoZW1hIGlzIG5vdCBhIHN0aXRjaGVkIHNjaGVtYS5gKTtcbiAgICB9XG4gICAgcmV0dXJuIHN0aXRjaGluZ0luZm87XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRGVsZWdhdGlvblBsYW5CdWlsZGVyKG1lcmdlZFR5cGVJbmZvKSB7XG4gICAgcmV0dXJuIG1lbW9pemU1KGZ1bmN0aW9uIGRlbGVnYXRpb25QbGFuQnVpbGRlcihzY2hlbWEsIHNvdXJjZVN1YnNjaGVtYSwgdmFyaWFibGVWYWx1ZXMsIGZyYWdtZW50cywgZmllbGROb2Rlcykge1xuICAgICAgICBjb25zdCBzdGl0Y2hpbmdJbmZvID0gZ2V0U3RpdGNoaW5nSW5mbyhzY2hlbWEpO1xuICAgICAgICBjb25zdCB0YXJnZXRTdWJzY2hlbWFzID0gbWVyZ2VkVHlwZUluZm8/LnRhcmdldFN1YnNjaGVtYXMuZ2V0KHNvdXJjZVN1YnNjaGVtYSk7XG4gICAgICAgIGlmICghdGFyZ2V0U3Vic2NoZW1hcyB8fCAhdGFyZ2V0U3Vic2NoZW1hcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB0eXBlTmFtZSA9IG1lcmdlZFR5cGVJbmZvLnR5cGVOYW1lO1xuICAgICAgICBjb25zdCB0eXBlSW5TdWJzY2hlbWEgPSBzb3VyY2VTdWJzY2hlbWEudHJhbnNmb3JtZWRTY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSk7XG4gICAgICAgIGNvbnN0IGZpZWxkc05vdEluU3Vic2NoZW1hID0gZ2V0RmllbGRzTm90SW5TdWJzY2hlbWEoc2NoZW1hLCBzdGl0Y2hpbmdJbmZvLCBzY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSksIG1lcmdlZFR5cGVJbmZvLnR5cGVNYXBzLmdldChzb3VyY2VTdWJzY2hlbWEpPy5bdHlwZU5hbWVdLCBmaWVsZE5vZGVzLCBmcmFnbWVudHMsIHZhcmlhYmxlVmFsdWVzKTtcbiAgICAgICAgaWYgKCFmaWVsZHNOb3RJblN1YnNjaGVtYS5sZW5ndGgpIHtcbiAgICAgICAgICAgIHJldHVybiBbXTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkZWxlZ2F0aW9uTWFwcyA9IFtdO1xuICAgICAgICBsZXQgc291cmNlU3Vic2NoZW1hcyA9IGNyZWF0ZVN1YnNjaGVtYXMoc291cmNlU3Vic2NoZW1hKTtcbiAgICAgICAgbGV0IGRlbGVnYXRpb25TdGFnZSA9IGNhbGN1bGF0ZURlbGVnYXRpb25TdGFnZShtZXJnZWRUeXBlSW5mbywgc291cmNlU3Vic2NoZW1hcywgdGFyZ2V0U3Vic2NoZW1hcywgZmllbGRzTm90SW5TdWJzY2hlbWEpO1xuICAgICAgICBsZXQgeyBkZWxlZ2F0aW9uTWFwIH0gPSBkZWxlZ2F0aW9uU3RhZ2U7XG4gICAgICAgIHdoaWxlIChkZWxlZ2F0aW9uTWFwLnNpemUpIHtcbiAgICAgICAgICAgIGRlbGVnYXRpb25NYXBzLnB1c2goZGVsZWdhdGlvbk1hcCk7XG4gICAgICAgICAgICBjb25zdCB7IHByb3hpYWJsZVN1YnNjaGVtYXMsIG5vblByb3hpYWJsZVN1YnNjaGVtYXMsIHVucHJveGlhYmxlRmllbGROb2RlcyB9ID0gZGVsZWdhdGlvblN0YWdlO1xuICAgICAgICAgICAgc291cmNlU3Vic2NoZW1hcyA9IGNvbWJpbmVTdWJzY2hlbWFzKHNvdXJjZVN1YnNjaGVtYXMsIHByb3hpYWJsZVN1YnNjaGVtYXMpO1xuICAgICAgICAgICAgZGVsZWdhdGlvblN0YWdlID0gY2FsY3VsYXRlRGVsZWdhdGlvblN0YWdlKG1lcmdlZFR5cGVJbmZvLCBzb3VyY2VTdWJzY2hlbWFzLCBub25Qcm94aWFibGVTdWJzY2hlbWFzLCB1bnByb3hpYWJsZUZpZWxkTm9kZXMpO1xuICAgICAgICAgICAgZGVsZWdhdGlvbk1hcCA9IGRlbGVnYXRpb25TdGFnZS5kZWxlZ2F0aW9uTWFwO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0Fic3RyYWN0VHlwZSh0eXBlSW5TdWJzY2hlbWEpICYmXG4gICAgICAgICAgICBmaWVsZHNOb3RJblN1YnNjaGVtYS5zb21lKGZpZWxkTm9kZSA9PiBmaWVsZE5vZGUubmFtZS52YWx1ZSA9PT0gJ19fdHlwZW5hbWUnKSkge1xuICAgICAgICAgICAgY29uc3QgaW5saW5lRnJhZ21lbnRzID0gW107XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTm9kZSBvZiBmaWVsZE5vZGVzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGZpZWxkTm9kZS5zZWxlY3Rpb25TZXQpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBzZWxlY3Rpb24gb2YgZmllbGROb2RlLnNlbGVjdGlvblNldC5zZWxlY3Rpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0aW9uLmtpbmQgPT09IEtpbmQuSU5MSU5FX0ZSQUdNRU5UKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5saW5lRnJhZ21lbnRzLnB1c2goc2VsZWN0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGltcGxlbWVudGVkU3Vic2NoZW1hcyA9IHRhcmdldFN1YnNjaGVtYXMuZmlsdGVyKHN1YnNjaGVtYSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgdHlwZUluVGFyZ2V0U3Vic2NoZW1hID0gbWVyZ2VkVHlwZUluZm8udHlwZU1hcHMuZ2V0KHN1YnNjaGVtYSk/Llt0eXBlTmFtZV07XG4gICAgICAgICAgICAgICAgcmV0dXJuIChpc0Fic3RyYWN0VHlwZSh0eXBlSW5UYXJnZXRTdWJzY2hlbWEpICYmXG4gICAgICAgICAgICAgICAgICAgIHN1YnNjaGVtYS50cmFuc2Zvcm1lZFNjaGVtYS5nZXRQb3NzaWJsZVR5cGVzKHR5cGVJblRhcmdldFN1YnNjaGVtYSkubGVuZ3RoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgbGV0IGFkZGVkID0gZmFsc2U7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGltcGxlbWVudGVkU3ViZ3JhcGhzIG9mIGltcGxlbWVudGVkU3Vic2NoZW1hcykge1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZGVsZWdhdGlvbk1hcCBvZiBkZWxlZ2F0aW9uTWFwcykge1xuICAgICAgICAgICAgICAgICAgICAvLyBTZWxlY3Rpb25Ob2RlIGlzIG5vdCByZWFkLW9ubHlcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdTZWxlY3Rpb25zID0gZGVsZWdhdGlvbk1hcC5nZXQoaW1wbGVtZW50ZWRTdWJncmFwaHMpXG4gICAgICAgICAgICAgICAgICAgICAgICA/LnNlbGVjdGlvbnM7XG4gICAgICAgICAgICAgICAgICAgIGlmIChleGlzdGluZ1NlbGVjdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nU2VsZWN0aW9ucy5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBraW5kOiBLaW5kLkZJRUxELFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogJ19fdHlwZW5hbWUnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4aXN0aW5nU2VsZWN0aW9ucy5wdXNoKC4uLmlubGluZUZyYWdtZW50cyk7XG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRlZCA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBpZiAoYWRkZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFhZGRlZCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IHN1YnNjaGVtYVdpdGhUeXBlTmFtZSA9IGltcGxlbWVudGVkU3Vic2NoZW1hc1swXTtcbiAgICAgICAgICAgICAgICBpZiAoc3Vic2NoZW1hV2l0aFR5cGVOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGRlbGVnYXRpb25TdGFnZVRvRmV0Y2hUeXBlTmFtZSA9IG5ldyBNYXAoKTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZWdhdGlvblN0YWdlVG9GZXRjaFR5cGVOYW1lLnNldChzdWJzY2hlbWFXaXRoVHlwZU5hbWUsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0VMRUNUSU9OX1NFVCxcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdGlvbnM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuRklFTEQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiAnX190eXBlbmFtZScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5pbmxpbmVGcmFnbWVudHMsXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgZGVsZWdhdGlvbk1hcHMucHVzaChkZWxlZ2F0aW9uU3RhZ2VUb0ZldGNoVHlwZU5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZGVsZWdhdGlvblN0YWdlLnVucHJveGlhYmxlRmllbGROb2Rlcy5sZW5ndGggJiZcbiAgICAgICAgICAgIGRlbGVnYXRpb25TdGFnZS5ub25Qcm94aWFibGVTdWJzY2hlbWFzLmxlbmd0aCkge1xuICAgICAgICAgICAgbGVmdE92ZXJCeURlbGVnYXRpb25QbGFuLnNldChkZWxlZ2F0aW9uTWFwcywge1xuICAgICAgICAgICAgICAgIHVucHJveGlhYmxlRmllbGROb2RlczogZGVsZWdhdGlvblN0YWdlLnVucHJveGlhYmxlRmllbGROb2RlcyxcbiAgICAgICAgICAgICAgICBub25Qcm94aWFibGVTdWJzY2hlbWFzOiBkZWxlZ2F0aW9uU3RhZ2Uubm9uUHJveGlhYmxlU3Vic2NoZW1hcyxcbiAgICAgICAgICAgICAgICBtaXNzaW5nRmllbGRzUGFyZW50TWFwOiBuZXcgTWFwKCksXG4gICAgICAgICAgICAgICAgbWlzc2luZ0ZpZWxkc1BhcmVudERlZmVycmVkTWFwOiBuZXcgTWFwKCksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZGVsZWdhdGlvbk1hcHM7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBvcHRpbWl6ZURlbGVnYXRpb25NYXAoZGVsZWdhdGlvbk1hcCwgdHlwZU5hbWUpIHtcbiAgICBmb3IgKGNvbnN0IFtzdWJzY2hlbWEsIHNlbGVjdGlvblNldF0gb2YgZGVsZWdhdGlvbk1hcCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtzdWJzY2hlbWEyLCBzZWxlY3Rpb25TZXQyXSBvZiBkZWxlZ2F0aW9uTWFwKSB7XG4gICAgICAgICAgICBpZiAoc3Vic2NoZW1hID09PSBzdWJzY2hlbWEyKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB1bmF2YWlsYWJsZUZpZWxkcyA9IGV4dHJhY3RVbmF2YWlsYWJsZUZpZWxkc0Zyb21TZWxlY3Rpb25TZXQoc3Vic2NoZW1hMi50cmFuc2Zvcm1lZFNjaGVtYSwgXG4gICAgICAgICAgICAvLyBVbmZvcnR1bmF0ZWx5LCBnZXRUeXBlIHJldHVybnMgR3JhcGhRTE5hbWVkVHlwZSwgYnV0IHdlIGFscmVhZHkga25vdyB0aGUgdHlwZSBpcyBhIEdyYXBoUUxPYmplY3RUeXBlLCBzbyB3ZSBjYW4gY2FzdCBpdC5cbiAgICAgICAgICAgIHN1YnNjaGVtYTIudHJhbnNmb3JtZWRTY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSksIHNlbGVjdGlvblNldCwgKCkgPT4gdHJ1ZSk7XG4gICAgICAgICAgICBpZiAoIXVuYXZhaWxhYmxlRmllbGRzLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgIGRlbGVnYXRpb25NYXAuc2V0KHN1YnNjaGVtYTIsIHtcbiAgICAgICAgICAgICAgICAgICAga2luZDogS2luZC5TRUxFQ1RJT05fU0VULFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3Rpb25zOiBbLi4uc2VsZWN0aW9uU2V0Mi5zZWxlY3Rpb25zLCAuLi5zZWxlY3Rpb25TZXQuc2VsZWN0aW9uc10sXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgZGVsZWdhdGlvbk1hcC5kZWxldGUoc3Vic2NoZW1hKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGVsZWdhdGlvbk1hcDtcbn1cbmNvbnN0IGNyZWF0ZVN1YnNjaGVtYXMgPSBtZW1vaXplMShmdW5jdGlvbiBjcmVhdGVTdWJzY2hlbWFzKHNvdXJjZVN1YnNjaGVtYSkge1xuICAgIHJldHVybiBbc291cmNlU3Vic2NoZW1hXTtcbn0pO1xuY29uc3QgY29tYmluZVN1YnNjaGVtYXMgPSBtZW1vaXplMihmdW5jdGlvbiBjb21iaW5lU3Vic2NoZW1hcyhzb3VyY2VTdWJzY2hlbWFzLCBhZGRpdGlvbmFsU3Vic2NoZW1hcykge1xuICAgIHJldHVybiBzb3VyY2VTdWJzY2hlbWFzLmNvbmNhdChhZGRpdGlvbmFsU3Vic2NoZW1hcyk7XG59KTtcbmNvbnN0IHN1YnNjaGVtYVR5cGVzQ29udGFpblNlbGVjdGlvblNldCA9IG1lbW9pemUzKGZ1bmN0aW9uIHN1YnNjaGVtYVR5cGVzQ29udGFpblNlbGVjdGlvblNldChtZXJnZWRUeXBlSW5mbywgc291cmNlU3ViY2hlbWFzLCBzZWxlY3Rpb25TZXQpIHtcbiAgICByZXR1cm4gdHlwZXNDb250YWluU2VsZWN0aW9uU2V0KHNvdXJjZVN1YmNoZW1hcy5tYXAoc291cmNlU3Vic2NoZW1hID0+IHNvdXJjZVN1YnNjaGVtYS50cmFuc2Zvcm1lZFNjaGVtYS5nZXRUeXBlKG1lcmdlZFR5cGVJbmZvLnR5cGVOYW1lKSksIHNlbGVjdGlvblNldCk7XG59KTtcbmZ1bmN0aW9uIHR5cGVzQ29udGFpblNlbGVjdGlvblNldCh0eXBlcywgc2VsZWN0aW9uU2V0KSB7XG4gICAgY29uc3QgZmllbGRNYXBzID0gdHlwZXMubWFwKHR5cGUgPT4gdHlwZS5nZXRGaWVsZHMoKSk7XG4gICAgZm9yIChjb25zdCBzZWxlY3Rpb24gb2Ygc2VsZWN0aW9uU2V0LnNlbGVjdGlvbnMpIHtcbiAgICAgICAgaWYgKHNlbGVjdGlvbi5raW5kID09PSBLaW5kLkZJRUxEKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZHMgPSBmaWVsZE1hcHNcbiAgICAgICAgICAgICAgICAubWFwKGZpZWxkTWFwID0+IGZpZWxkTWFwW3NlbGVjdGlvbi5uYW1lLnZhbHVlXSlcbiAgICAgICAgICAgICAgICAuZmlsdGVyKGZpZWxkID0+IGZpZWxkICE9IG51bGwpO1xuICAgICAgICAgICAgaWYgKCFmaWVsZHMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHNlbGVjdGlvbi5zZWxlY3Rpb25TZXQgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlc0NvbnRhaW5TZWxlY3Rpb25TZXQoZmllbGRzLm1hcChmaWVsZCA9PiBnZXROYW1lZFR5cGUoZmllbGQudHlwZSkpLCBzZWxlY3Rpb24uc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChzZWxlY3Rpb24ua2luZCA9PT0gS2luZC5JTkxJTkVfRlJBR01FTlQgJiZcbiAgICAgICAgICAgIHNlbGVjdGlvbi50eXBlQ29uZGl0aW9uPy5uYW1lLnZhbHVlID09PSB0eXBlc1swXS5uYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gdHlwZXNDb250YWluU2VsZWN0aW9uU2V0KHR5cGVzLCBzZWxlY3Rpb24uc2VsZWN0aW9uU2V0KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createMergedTypeResolver: () => (/* binding */ createMergedTypeResolver)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_batch_delegate__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/batch-delegate */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n\n\n\nfunction createMergedTypeResolver(mergedTypeResolverOptions, mergedType) {\n    const { fieldName, argsFromKeys, valuesFromResults, args } = mergedTypeResolverOptions;\n    if (argsFromKeys != null) {\n        return function mergedBatchedTypeResolver(_originalResult, context, info, subschema, selectionSet, key, type = mergedType || (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(info.returnType)) {\n            return (0,_graphql_tools_batch_delegate__WEBPACK_IMPORTED_MODULE_1__.batchDelegateToSchema)({\n                schema: subschema,\n                operation: 'query',\n                fieldName,\n                returnType: new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(type),\n                key,\n                argsFromKeys,\n                valuesFromResults,\n                selectionSet,\n                context,\n                info,\n                skipTypeMerging: true,\n                dataLoaderOptions: mergedTypeResolverOptions.dataLoaderOptions,\n            });\n        };\n    }\n    if (args != null) {\n        return function mergedTypeResolver(originalResult, context, info, subschema, selectionSet, _key, type = mergedType || (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(info.returnType)) {\n            return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.delegateToSchema)({\n                schema: subschema,\n                operation: 'query',\n                fieldName,\n                returnType: type,\n                args: args(originalResult),\n                selectionSet,\n                context,\n                info,\n                skipTypeMerging: true,\n            });\n        };\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vY3JlYXRlTWVyZ2VkVHlwZVJlc29sdmVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Q7QUFDa0I7QUFDVjtBQUNyRDtBQUNQLFlBQVksbURBQW1EO0FBQy9EO0FBQ0EscUlBQXFJLHFEQUFZO0FBQ2pKLG1CQUFtQixvRkFBcUI7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLGdEQUFXO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsOEhBQThILHFEQUFZO0FBQzFJLG1CQUFtQix5RUFBZ0I7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9jcmVhdGVNZXJnZWRUeXBlUmVzb2x2ZXIuanM/YjBlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW1lZFR5cGUsIEdyYXBoUUxMaXN0IH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBiYXRjaERlbGVnYXRlVG9TY2hlbWEgfSBmcm9tICdAZ3JhcGhxbC10b29scy9iYXRjaC1kZWxlZ2F0ZSc7XG5pbXBvcnQgeyBkZWxlZ2F0ZVRvU2NoZW1hLCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVNZXJnZWRUeXBlUmVzb2x2ZXIobWVyZ2VkVHlwZVJlc29sdmVyT3B0aW9ucywgbWVyZ2VkVHlwZSkge1xuICAgIGNvbnN0IHsgZmllbGROYW1lLCBhcmdzRnJvbUtleXMsIHZhbHVlc0Zyb21SZXN1bHRzLCBhcmdzIH0gPSBtZXJnZWRUeXBlUmVzb2x2ZXJPcHRpb25zO1xuICAgIGlmIChhcmdzRnJvbUtleXMgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VkQmF0Y2hlZFR5cGVSZXNvbHZlcihfb3JpZ2luYWxSZXN1bHQsIGNvbnRleHQsIGluZm8sIHN1YnNjaGVtYSwgc2VsZWN0aW9uU2V0LCBrZXksIHR5cGUgPSBtZXJnZWRUeXBlIHx8IGdldE5hbWVkVHlwZShpbmZvLnJldHVyblR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gYmF0Y2hEZWxlZ2F0ZVRvU2NoZW1hKHtcbiAgICAgICAgICAgICAgICBzY2hlbWE6IHN1YnNjaGVtYSxcbiAgICAgICAgICAgICAgICBvcGVyYXRpb246ICdxdWVyeScsXG4gICAgICAgICAgICAgICAgZmllbGROYW1lLFxuICAgICAgICAgICAgICAgIHJldHVyblR5cGU6IG5ldyBHcmFwaFFMTGlzdCh0eXBlKSxcbiAgICAgICAgICAgICAgICBrZXksXG4gICAgICAgICAgICAgICAgYXJnc0Zyb21LZXlzLFxuICAgICAgICAgICAgICAgIHZhbHVlc0Zyb21SZXN1bHRzLFxuICAgICAgICAgICAgICAgIHNlbGVjdGlvblNldCxcbiAgICAgICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICAgICAgc2tpcFR5cGVNZXJnaW5nOiB0cnVlLFxuICAgICAgICAgICAgICAgIGRhdGFMb2FkZXJPcHRpb25zOiBtZXJnZWRUeXBlUmVzb2x2ZXJPcHRpb25zLmRhdGFMb2FkZXJPcHRpb25zLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIGlmIChhcmdzICE9IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIG1lcmdlZFR5cGVSZXNvbHZlcihvcmlnaW5hbFJlc3VsdCwgY29udGV4dCwgaW5mbywgc3Vic2NoZW1hLCBzZWxlY3Rpb25TZXQsIF9rZXksIHR5cGUgPSBtZXJnZWRUeXBlIHx8IGdldE5hbWVkVHlwZShpbmZvLnJldHVyblR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gZGVsZWdhdGVUb1NjaGVtYSh7XG4gICAgICAgICAgICAgICAgc2NoZW1hOiBzdWJzY2hlbWEsXG4gICAgICAgICAgICAgICAgb3BlcmF0aW9uOiAncXVlcnknLFxuICAgICAgICAgICAgICAgIGZpZWxkTmFtZSxcbiAgICAgICAgICAgICAgICByZXR1cm5UeXBlOiB0eXBlLFxuICAgICAgICAgICAgICAgIGFyZ3M6IGFyZ3Mob3JpZ2luYWxSZXN1bHQpLFxuICAgICAgICAgICAgICAgIHNlbGVjdGlvblNldCxcbiAgICAgICAgICAgICAgICBjb250ZXh0LFxuICAgICAgICAgICAgICAgIGluZm8sXG4gICAgICAgICAgICAgICAgc2tpcFR5cGVNZXJnaW5nOiB0cnVlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/definitions.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/definitions.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractDefinitions: () => (/* binding */ extractDefinitions)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction extractDefinitions(ast) {\n    const typeDefinitions = [];\n    const directiveDefs = [];\n    const schemaDefs = [];\n    const schemaExtensions = [];\n    const extensionDefs = [];\n    for (const def of ast.definitions) {\n        switch (def.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_DEFINITION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_DEFINITION:\n                typeDefinitions.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DIRECTIVE_DEFINITION:\n                directiveDefs.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_DEFINITION:\n                schemaDefs.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCHEMA_EXTENSION:\n                schemaExtensions.push(def);\n                break;\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_EXTENSION:\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_EXTENSION:\n                extensionDefs.push(def);\n                break;\n        }\n    }\n    return {\n        typeDefinitions,\n        directiveDefs,\n        schemaDefs,\n        schemaExtensions,\n        extensionDefs,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vZGVmaW5pdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0M7QUFDekI7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix5Q0FBSTtBQUNyQixpQkFBaUIseUNBQUk7QUFDckIsaUJBQWlCLHlDQUFJO0FBQ3JCLGlCQUFpQix5Q0FBSTtBQUNyQixpQkFBaUIseUNBQUk7QUFDckIsaUJBQWlCLHlDQUFJO0FBQ3JCO0FBQ0E7QUFDQSxpQkFBaUIseUNBQUk7QUFDckI7QUFDQTtBQUNBLGlCQUFpQix5Q0FBSTtBQUNyQjtBQUNBO0FBQ0EsaUJBQWlCLHlDQUFJO0FBQ3JCO0FBQ0E7QUFDQSxpQkFBaUIseUNBQUk7QUFDckIsaUJBQWlCLHlDQUFJO0FBQ3JCLGlCQUFpQix5Q0FBSTtBQUNyQixpQkFBaUIseUNBQUk7QUFDckIsaUJBQWlCLHlDQUFJO0FBQ3JCLGlCQUFpQix5Q0FBSTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvZXNtL2RlZmluaXRpb25zLmpzPzBjYTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0RGVmaW5pdGlvbnMoYXN0KSB7XG4gICAgY29uc3QgdHlwZURlZmluaXRpb25zID0gW107XG4gICAgY29uc3QgZGlyZWN0aXZlRGVmcyA9IFtdO1xuICAgIGNvbnN0IHNjaGVtYURlZnMgPSBbXTtcbiAgICBjb25zdCBzY2hlbWFFeHRlbnNpb25zID0gW107XG4gICAgY29uc3QgZXh0ZW5zaW9uRGVmcyA9IFtdO1xuICAgIGZvciAoY29uc3QgZGVmIG9mIGFzdC5kZWZpbml0aW9ucykge1xuICAgICAgICBzd2l0Y2ggKGRlZi5raW5kKSB7XG4gICAgICAgICAgICBjYXNlIEtpbmQuT0JKRUNUX1RZUEVfREVGSU5JVElPTjpcbiAgICAgICAgICAgIGNhc2UgS2luZC5JTlRFUkZBQ0VfVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLklOUFVUX09CSkVDVF9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICBjYXNlIEtpbmQuVU5JT05fVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLkVOVU1fVFlQRV9ERUZJTklUSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLlNDQUxBUl9UWVBFX0RFRklOSVRJT046XG4gICAgICAgICAgICAgICAgdHlwZURlZmluaXRpb25zLnB1c2goZGVmKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2luZC5ESVJFQ1RJVkVfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICBkaXJlY3RpdmVEZWZzLnB1c2goZGVmKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2luZC5TQ0hFTUFfREVGSU5JVElPTjpcbiAgICAgICAgICAgICAgICBzY2hlbWFEZWZzLnB1c2goZGVmKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgS2luZC5TQ0hFTUFfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgIHNjaGVtYUV4dGVuc2lvbnMucHVzaChkZWYpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBLaW5kLk9CSkVDVF9UWVBFX0VYVEVOU0lPTjpcbiAgICAgICAgICAgIGNhc2UgS2luZC5JTlRFUkZBQ0VfVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICBjYXNlIEtpbmQuSU5QVVRfT0JKRUNUX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLlVOSU9OX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgY2FzZSBLaW5kLkVOVU1fVFlQRV9FWFRFTlNJT046XG4gICAgICAgICAgICBjYXNlIEtpbmQuU0NBTEFSX1RZUEVfRVhURU5TSU9OOlxuICAgICAgICAgICAgICAgIGV4dGVuc2lvbkRlZnMucHVzaChkZWYpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGVEZWZpbml0aW9ucyxcbiAgICAgICAgZGlyZWN0aXZlRGVmcyxcbiAgICAgICAgc2NoZW1hRGVmcyxcbiAgICAgICAgc2NoZW1hRXh0ZW5zaW9ucyxcbiAgICAgICAgZXh0ZW5zaW9uRGVmcyxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/definitions.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFieldsNotInSubschema: () => (/* binding */ getFieldsNotInSubschema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/extractUnavailableFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/collectFields.js\");\n\n\n\nfunction getFieldsNotInSubschema(schema, stitchingInfo, gatewayType, subschemaType, fieldNodes, fragments, variableValues) {\n    let { fields: subFieldNodesByResponseKey, patches } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.collectSubFields)(schema, fragments, variableValues, gatewayType, fieldNodes);\n    let mapChanged = false;\n    // Collect deferred fields\n    if (patches.length) {\n        subFieldNodesByResponseKey = new Map(subFieldNodesByResponseKey);\n        for (const patch of patches) {\n            for (const [responseKey, fields] of patch.fields) {\n                if (!mapChanged) {\n                    subFieldNodesByResponseKey = new Map(subFieldNodesByResponseKey);\n                    mapChanged = true;\n                }\n                const existingSubFieldNodes = subFieldNodesByResponseKey.get(responseKey);\n                if (existingSubFieldNodes) {\n                    existingSubFieldNodes.push(...fields);\n                }\n                else {\n                    subFieldNodesByResponseKey.set(responseKey, fields);\n                }\n            }\n        }\n    }\n    const fieldsNotInSchema = new Set();\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isAbstractType)(gatewayType)) {\n        fieldsNotInSchema.add({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.FIELD,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NAME,\n                value: '__typename',\n            },\n        });\n        for (const possibleType of schema.getPossibleTypes(gatewayType)) {\n            const { fields: subFieldNodesOfPossibleType, patches } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.collectSubFields)(schema, fragments, variableValues, possibleType, fieldNodes);\n            for (const patch of patches) {\n                for (const [responseKey, fields] of patch.fields) {\n                    if (!mapChanged) {\n                        subFieldNodesByResponseKey = new Map(subFieldNodesByResponseKey);\n                        mapChanged = true;\n                    }\n                    const existingSubFieldNodes = subFieldNodesByResponseKey.get(responseKey);\n                    if (existingSubFieldNodes) {\n                        existingSubFieldNodes.push(...fields);\n                    }\n                    else {\n                        subFieldNodesByResponseKey.set(responseKey, fields);\n                    }\n                }\n            }\n            for (const [responseKey, subFieldNodes] of subFieldNodesOfPossibleType) {\n                if (!mapChanged) {\n                    subFieldNodesByResponseKey = new Map(subFieldNodesByResponseKey);\n                    mapChanged = true;\n                }\n                const existingSubFieldNodes = subFieldNodesByResponseKey.get(responseKey);\n                if (existingSubFieldNodes) {\n                    existingSubFieldNodes.push(...subFieldNodes);\n                }\n                else {\n                    subFieldNodesByResponseKey.set(responseKey, subFieldNodes);\n                }\n            }\n        }\n    }\n    // TODO: Verify whether it is safe that extensions always exists.\n    const fieldNodesByField = stitchingInfo?.fieldNodesByField;\n    const shouldAdd = (fieldType, selection) => !fieldNodesByField?.[fieldType.name]?.[selection.name.value];\n    const fields = subschemaType.getFields();\n    for (const [, subFieldNodes] of subFieldNodesByResponseKey) {\n        const fieldName = subFieldNodes[0].name.value;\n        if (!fields[fieldName]) {\n            for (const subFieldNode of subFieldNodes) {\n                fieldsNotInSchema.add(subFieldNode);\n            }\n        }\n        else {\n            const field = fields[fieldName];\n            for (const subFieldNode of subFieldNodes) {\n                const unavailableFields = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_3__.extractUnavailableFields)(schema, field, subFieldNode, shouldAdd);\n                if (unavailableFields.length) {\n                    fieldsNotInSchema.add({\n                        ...subFieldNode,\n                        selectionSet: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.SELECTION_SET,\n                            selections: unavailableFields,\n                        },\n                    });\n                }\n            }\n        }\n        let addedSubFieldNodes = false;\n        const fieldNodesByFieldForType = fieldNodesByField?.[gatewayType.name];\n        const visitedFieldNames = new Set();\n        if (fieldNodesByFieldForType) {\n            addMissingRequiredFields({\n                fieldName,\n                fields,\n                fieldsNotInSchema,\n                visitedFieldNames,\n                onAdd: () => {\n                    if (!addedSubFieldNodes) {\n                        for (const subFieldNode of subFieldNodes) {\n                            fieldsNotInSchema.add(subFieldNode);\n                        }\n                        addedSubFieldNodes = true;\n                    }\n                },\n                fieldNodesByField: fieldNodesByFieldForType,\n            });\n        }\n    }\n    return Array.from(fieldsNotInSchema);\n}\nfunction addMissingRequiredFields({ fieldName, fields, fieldsNotInSchema, onAdd, fieldNodesByField, visitedFieldNames, }) {\n    if (visitedFieldNames.has(fieldName)) {\n        return;\n    }\n    visitedFieldNames.add(fieldName);\n    const fieldNodesForField = fieldNodesByField?.[fieldName];\n    if (fieldNodesForField) {\n        for (const fieldNode of fieldNodesForField) {\n            if (fieldNode.name.value !== '__typename' && !fields[fieldNode.name.value]) {\n                onAdd();\n                fieldsNotInSchema.add(fieldNode);\n                addMissingRequiredFields({\n                    fieldName: fieldNode.name.value,\n                    fields,\n                    fieldsNotInSchema,\n                    onAdd,\n                    fieldNodesByField,\n                    visitedFieldNames,\n                });\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/getFieldsNotInSubschema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeCandidates.js":
/*!********************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/mergeCandidates.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefaultFieldConfigMerger: () => (/* binding */ getDefaultFieldConfigMerger),\n/* harmony export */   mergeCandidates: () => (/* binding */ mergeCandidates)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/type.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/input-type.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/interface.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/union.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/enum.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/scalar.js\");\n/* harmony import */ var _mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mergeValidations.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeValidations.js\");\n\n\n\n\nfunction mergeCandidates(typeName, candidates, typeMergingOptions) {\n    const initialCandidateType = candidates[0].type;\n    if (candidates.some(candidate => candidate.type.constructor !== initialCandidateType.constructor)) {\n        throw new Error(`Cannot merge different type categories into common type ${typeName}.`);\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(initialCandidateType)) {\n        return mergeObjectTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(initialCandidateType)) {\n        return mergeInputObjectTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(initialCandidateType)) {\n        return mergeInterfaceTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(initialCandidateType)) {\n        return mergeUnionTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(initialCandidateType)) {\n        return mergeEnumTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(initialCandidateType)) {\n        return mergeScalarTypeCandidates(typeName, candidates, typeMergingOptions);\n    }\n    else {\n        // not reachable.\n        throw new Error(`Type ${typeName} has unknown GraphQL type.`);\n    }\n}\nfunction mergeObjectTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const fields = fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const typeConfigs = candidates.map(candidate => candidate.type.toConfig());\n    const interfaceMap = typeConfigs\n        .map(typeConfig => typeConfig.interfaces)\n        .reduce((acc, interfaces) => {\n        if (interfaces != null) {\n            for (const iface of interfaces) {\n                acc[iface.name] = iface;\n            }\n        }\n        return acc;\n    }, Object.create(null));\n    const interfaces = Object.values(interfaceMap);\n    const astNodes = pluck('astNode', candidates);\n    const fieldAstNodes = canonicalFieldNamesForType(candidates)\n        .map(fieldName => fields[fieldName]?.astNode)\n        .filter(n => n != null);\n    if (astNodes.length > 1 && fieldAstNodes.length) {\n        astNodes.push({\n            ...astNodes[astNodes.length - 1],\n            fields: JSON.parse(JSON.stringify(fieldAstNodes)),\n        });\n    }\n    const astNode = astNodes.slice(1).reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_1__.mergeType)(astNode, acc, {\n        ignoreFieldConflicts: true,\n    }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        fields,\n        interfaces,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType(typeConfig);\n}\nfunction mergeInputObjectTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const fields = inputFieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const astNodes = pluck('astNode', candidates);\n    const fieldAstNodes = canonicalFieldNamesForType(candidates)\n        .map(fieldName => fields[fieldName]?.astNode)\n        .filter(n => n != null);\n    if (astNodes.length > 1 && fieldAstNodes.length) {\n        astNodes.push({\n            ...astNodes[astNodes.length - 1],\n            fields: JSON.parse(JSON.stringify(fieldAstNodes)),\n        });\n    }\n    const astNode = astNodes.slice(1).reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_2__.mergeInputType)(astNode, acc, {\n        ignoreFieldConflicts: true,\n    }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        fields,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType(typeConfig);\n}\nfunction pluck(typeProperty, candidates) {\n    return candidates\n        .map(candidate => candidate.type[typeProperty])\n        .filter(value => value != null);\n}\nfunction mergeInterfaceTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const fields = fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const typeConfigs = candidates.map(candidate => candidate.type.toConfig());\n    const interfaceMap = typeConfigs\n        .map(typeConfig => ('interfaces' in typeConfig ? typeConfig.interfaces : []))\n        .reduce((acc, interfaces) => {\n        if (interfaces != null) {\n            for (const iface of interfaces) {\n                acc[iface.name] = iface;\n            }\n        }\n        return acc;\n    }, Object.create(null));\n    const interfaces = Object.values(interfaceMap);\n    const astNodes = pluck('astNode', candidates);\n    const fieldAstNodes = canonicalFieldNamesForType(candidates)\n        .map(fieldName => fields[fieldName]?.astNode)\n        .filter(n => n != null);\n    if (astNodes.length > 1 && fieldAstNodes.length) {\n        astNodes.push({\n            ...astNodes[astNodes.length - 1],\n            fields: JSON.parse(JSON.stringify(fieldAstNodes)),\n        });\n    }\n    const astNode = astNodes.slice(1).reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_3__.mergeInterface)(astNode, acc, {\n        ignoreFieldConflicts: true,\n    }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        fields,\n        interfaces,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType(typeConfig);\n}\nfunction mergeUnionTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const typeConfigs = candidates.map(candidate => {\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(candidate.type)) {\n            throw new Error(`Expected ${candidate.type} to be a union type!`);\n        }\n        return candidate.type.toConfig();\n    });\n    const typeMap = typeConfigs.reduce((acc, typeConfig) => {\n        for (const type of typeConfig.types) {\n            acc[type.name] = type;\n        }\n        return acc;\n    }, Object.create(null));\n    const types = Object.values(typeMap);\n    const astNodes = pluck('astNode', candidates);\n    const astNode = astNodes\n        .slice(1)\n        .reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_4__.mergeUnion)(astNode, acc), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        types,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType(typeConfig);\n}\nfunction mergeEnumTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const values = enumValueConfigMapFromTypeCandidates(candidates, typeMergingOptions);\n    const astNodes = pluck('astNode', candidates);\n    const astNode = astNodes.slice(1).reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__.mergeEnum)(astNode, acc, {\n        consistentEnumMerge: true,\n    }), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    const typeConfig = {\n        name: typeName,\n        description,\n        values,\n        astNode,\n        extensionASTNodes,\n        extensions,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType(typeConfig);\n}\nfunction enumValueConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    const enumValueConfigCandidatesMap = Object.create(null);\n    for (const candidate of candidates) {\n        const valueMap = candidate.type.toConfig().values;\n        for (const enumValue in valueMap) {\n            const enumValueConfigCandidate = {\n                enumValueConfig: valueMap[enumValue],\n                enumValue,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (enumValue in enumValueConfigCandidatesMap) {\n                enumValueConfigCandidatesMap[enumValue].push(enumValueConfigCandidate);\n            }\n            else {\n                enumValueConfigCandidatesMap[enumValue] = [enumValueConfigCandidate];\n            }\n        }\n    }\n    const enumValueConfigMap = Object.create(null);\n    for (const enumValue in enumValueConfigCandidatesMap) {\n        const enumValueConfigMerger = typeMergingOptions?.enumValueConfigMerger ?? defaultEnumValueConfigMerger;\n        enumValueConfigMap[enumValue] = enumValueConfigMerger(enumValueConfigCandidatesMap[enumValue]);\n    }\n    return enumValueConfigMap;\n}\nfunction defaultEnumValueConfigMerger(candidates) {\n    const preferred = candidates.find(({ type, transformedSubschema }) => (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema) && transformedSubschema.merge?.[type.name]?.canonical);\n    return (preferred || candidates[candidates.length - 1]).enumValueConfig;\n}\nfunction mergeScalarTypeCandidates(typeName, candidates, typeMergingOptions) {\n    candidates = orderedTypeCandidates(candidates, typeMergingOptions);\n    const description = mergeTypeDescriptions(candidates, typeMergingOptions);\n    const serializeFns = pluck('serialize', candidates);\n    const serialize = serializeFns[serializeFns.length - 1];\n    const parseValueFns = pluck('parseValue', candidates);\n    const parseValue = parseValueFns[parseValueFns.length - 1];\n    const parseLiteralFns = pluck('parseLiteral', candidates);\n    const parseLiteral = parseLiteralFns[parseLiteralFns.length - 1];\n    const astNodes = pluck('astNode', candidates);\n    const astNode = astNodes\n        .slice(1)\n        .reduce((acc, astNode) => (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_7__.mergeScalar)(astNode, acc), astNodes[0]);\n    const extensionASTNodes = pluck('extensionASTNodes', candidates);\n    const extensions = Object.assign({}, ...pluck('extensions', candidates));\n    let specifiedByURL;\n    for (const candidate of candidates) {\n        if ('specifiedByURL' in candidate.type && candidate.type.specifiedByURL) {\n            specifiedByURL = candidate.type.specifiedByURL;\n            break;\n        }\n    }\n    const typeConfig = {\n        name: typeName,\n        description,\n        serialize,\n        parseValue,\n        parseLiteral,\n        astNode,\n        extensionASTNodes,\n        extensions,\n        specifiedByURL,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType(typeConfig);\n}\nfunction orderedTypeCandidates(candidates, typeMergingOptions) {\n    const typeCandidateMerger = typeMergingOptions?.typeCandidateMerger ?? defaultTypeCandidateMerger;\n    const candidate = typeCandidateMerger(candidates);\n    return candidates.filter(c => c !== candidate).concat([candidate]);\n}\nfunction defaultTypeCandidateMerger(candidates) {\n    const canonical = candidates.filter(({ type, transformedSubschema }) => (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema)\n        ? transformedSubschema.merge?.[type.name]?.canonical\n        : false);\n    if (canonical.length > 1) {\n        throw new Error(`Multiple canonical definitions for \"${canonical[0].type.name}\"`);\n    }\n    else if (canonical.length) {\n        return canonical[0];\n    }\n    return candidates[candidates.length - 1];\n}\nfunction mergeTypeDescriptions(candidates, typeMergingOptions) {\n    const typeDescriptionsMerger = typeMergingOptions?.typeDescriptionsMerger ?? defaultTypeDescriptionMerger;\n    return typeDescriptionsMerger(candidates);\n}\nfunction defaultTypeDescriptionMerger(candidates) {\n    return candidates[candidates.length - 1].type.description;\n}\nfunction fieldConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    const fieldConfigCandidatesMap = Object.create(null);\n    for (const candidate of candidates) {\n        const typeConfig = candidate.type.toConfig();\n        const fieldConfigMap = typeConfig.fields;\n        for (const fieldName in fieldConfigMap) {\n            const fieldConfig = fieldConfigMap[fieldName];\n            const fieldConfigCandidate = {\n                fieldConfig,\n                fieldName,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (fieldName in fieldConfigCandidatesMap) {\n                fieldConfigCandidatesMap[fieldName].push(fieldConfigCandidate);\n            }\n            else {\n                fieldConfigCandidatesMap[fieldName] = [fieldConfigCandidate];\n            }\n        }\n    }\n    const fieldConfigMap = Object.create(null);\n    for (const fieldName in fieldConfigCandidatesMap) {\n        fieldConfigMap[fieldName] = mergeFieldConfigs(fieldConfigCandidatesMap[fieldName], typeMergingOptions);\n    }\n    return fieldConfigMap;\n}\nfunction mergeFieldConfigs(candidates, typeMergingOptions) {\n    const fieldConfigMerger = typeMergingOptions?.fieldConfigMerger ??\n        getDefaultFieldConfigMerger(typeMergingOptions?.useNonNullableFieldOnConflict);\n    const finalFieldConfig = fieldConfigMerger(candidates);\n    (0,_mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__.validateFieldConsistency)(finalFieldConfig, candidates, typeMergingOptions);\n    return finalFieldConfig;\n}\nfunction getDefaultFieldConfigMerger(useNonNullableFieldOnConflict = false) {\n    return function defaultFieldConfigMerger(candidates) {\n        const nullables = [];\n        const nonNullables = [];\n        const canonicalByField = [];\n        const canonicalByType = [];\n        for (const { type, fieldName, fieldConfig, transformedSubschema } of candidates) {\n            if (!(0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema))\n                continue;\n            if (transformedSubschema.merge?.[type.name]?.fields?.[fieldName]?.canonical) {\n                canonicalByField.push(fieldConfig);\n            }\n            else if (transformedSubschema.merge?.[type.name]?.canonical) {\n                canonicalByType.push(fieldConfig);\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNullableType)(fieldConfig.type)) {\n                nullables.push(fieldConfig);\n            }\n            else {\n                nonNullables.push(fieldConfig);\n            }\n        }\n        const nonNullableFinalField = nonNullables.length > 0 && nullables.length > 0 && useNonNullableFieldOnConflict;\n        if (canonicalByField.length > 1) {\n            throw new Error(`Multiple canonical definitions for \"${candidates[0].type.name}.${candidates[0].fieldName}\"`);\n        }\n        else if (canonicalByField.length) {\n            const finalField = canonicalByField[0];\n            if (nonNullableFinalField) {\n                return {\n                    ...finalField,\n                    type: (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(finalField.type),\n                };\n            }\n            return finalField;\n        }\n        else if (canonicalByType.length) {\n            const finalField = canonicalByType[0];\n            if (nonNullableFinalField) {\n                return {\n                    ...finalField,\n                    type: (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(finalField.type),\n                };\n            }\n            return finalField;\n        }\n        const finalField = candidates[candidates.length - 1].fieldConfig;\n        if (nonNullableFinalField) {\n            return {\n                ...finalField,\n                type: (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(finalField.type),\n            };\n        }\n        return finalField;\n    };\n}\nfunction inputFieldConfigMapFromTypeCandidates(candidates, typeMergingOptions) {\n    const inputFieldConfigCandidatesMap = Object.create(null);\n    const fieldInclusionMap = Object.create(null);\n    for (const candidate of candidates) {\n        const typeConfig = candidate.type.toConfig();\n        const inputFieldConfigMap = typeConfig.fields;\n        for (const fieldName in inputFieldConfigMap) {\n            const inputFieldConfig = inputFieldConfigMap[fieldName];\n            fieldInclusionMap[fieldName] = fieldInclusionMap[fieldName] || 0;\n            fieldInclusionMap[fieldName] += 1;\n            const inputFieldConfigCandidate = {\n                inputFieldConfig,\n                fieldName,\n                type: candidate.type,\n                subschema: candidate.subschema,\n                transformedSubschema: candidate.transformedSubschema,\n            };\n            if (fieldName in inputFieldConfigCandidatesMap) {\n                inputFieldConfigCandidatesMap[fieldName].push(inputFieldConfigCandidate);\n            }\n            else {\n                inputFieldConfigCandidatesMap[fieldName] = [inputFieldConfigCandidate];\n            }\n        }\n    }\n    (0,_mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__.validateInputObjectConsistency)(fieldInclusionMap, candidates, typeMergingOptions);\n    const inputFieldConfigMap = Object.create(null);\n    for (const fieldName in inputFieldConfigCandidatesMap) {\n        const inputFieldConfigMerger = typeMergingOptions?.inputFieldConfigMerger ?? defaultInputFieldConfigMerger;\n        inputFieldConfigMap[fieldName] = inputFieldConfigMerger(inputFieldConfigCandidatesMap[fieldName]);\n        (0,_mergeValidations_js__WEBPACK_IMPORTED_MODULE_8__.validateInputFieldConsistency)(inputFieldConfigMap[fieldName], inputFieldConfigCandidatesMap[fieldName], typeMergingOptions);\n    }\n    return inputFieldConfigMap;\n}\nfunction defaultInputFieldConfigMerger(candidates) {\n    const canonicalByField = [];\n    const canonicalByType = [];\n    for (const { type, fieldName, inputFieldConfig, transformedSubschema } of candidates) {\n        if (!(0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema))\n            continue;\n        if (transformedSubschema.merge?.[type.name]?.fields?.[fieldName]?.canonical) {\n            canonicalByField.push(inputFieldConfig);\n        }\n        else if (transformedSubschema.merge?.[type.name]?.canonical) {\n            canonicalByType.push(inputFieldConfig);\n        }\n    }\n    if (canonicalByField.length > 1) {\n        throw new Error(`Multiple canonical definitions for \"${candidates[0].type.name}.${candidates[0].fieldName}\"`);\n    }\n    else if (canonicalByField.length) {\n        return canonicalByField[0];\n    }\n    else if (canonicalByType.length) {\n        return canonicalByType[0];\n    }\n    return candidates[candidates.length - 1].inputFieldConfig;\n}\nfunction canonicalFieldNamesForType(candidates) {\n    const canonicalFieldNames = Object.create(null);\n    for (const { type, transformedSubschema } of candidates) {\n        if (!(0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_6__.isSubschemaConfig)(transformedSubschema))\n            continue;\n        const mergeConfig = transformedSubschema.merge?.[type.name];\n        if (mergeConfig != null && mergeConfig.fields != null && !mergeConfig.canonical) {\n            for (const fieldName in mergeConfig.fields) {\n                const mergedFieldConfig = mergeConfig.fields[fieldName];\n                if (mergedFieldConfig.canonical) {\n                    canonicalFieldNames[fieldName] = true;\n                }\n            }\n        }\n    }\n    return Object.keys(canonicalFieldNames);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeCandidates.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeDirectives.js":
/*!********************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/mergeDirectives.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDirectives: () => (/* binding */ mergeDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mergeDeep.js\");\n\n\nfunction mergeDirectives(directives) {\n    if (directives.size === 0) {\n        return undefined;\n    }\n    if (directives.size === 1) {\n        const directive = directives.values().next().value;\n        return directive;\n    }\n    let name;\n    let description;\n    const locations = new Set();\n    const args = {};\n    const extensionsSet = new Set();\n    let isRepeatable = false;\n    for (const directive of directives) {\n        name = directive.name;\n        if (directive.description) {\n            description = directive.description;\n        }\n        for (const location of directive.locations) {\n            locations.add(location);\n        }\n        for (const arg of directive.args) {\n            args[arg.name] = arg;\n        }\n        isRepeatable = isRepeatable || directive.isRepeatable;\n        if (directive.extensions) {\n            extensionsSet.add(directive.extensions);\n        }\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n        name: name,\n        description: description,\n        locations: Array.from(locations),\n        args,\n        isRepeatable,\n        extensions: extensionsSet.size > 0 ? (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.mergeDeep)([...extensionsSet]) : undefined,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vbWVyZ2VEaXJlY3RpdmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEyQztBQUNNO0FBQzFDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUscURBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2Q0FBNkMsK0RBQVM7QUFDdEQsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9tZXJnZURpcmVjdGl2ZXMuanM/M2Q3YSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMRGlyZWN0aXZlIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBtZXJnZURlZXAgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5leHBvcnQgZnVuY3Rpb24gbWVyZ2VEaXJlY3RpdmVzKGRpcmVjdGl2ZXMpIHtcbiAgICBpZiAoZGlyZWN0aXZlcy5zaXplID09PSAwKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGlmIChkaXJlY3RpdmVzLnNpemUgPT09IDEpIHtcbiAgICAgICAgY29uc3QgZGlyZWN0aXZlID0gZGlyZWN0aXZlcy52YWx1ZXMoKS5uZXh0KCkudmFsdWU7XG4gICAgICAgIHJldHVybiBkaXJlY3RpdmU7XG4gICAgfVxuICAgIGxldCBuYW1lO1xuICAgIGxldCBkZXNjcmlwdGlvbjtcbiAgICBjb25zdCBsb2NhdGlvbnMgPSBuZXcgU2V0KCk7XG4gICAgY29uc3QgYXJncyA9IHt9O1xuICAgIGNvbnN0IGV4dGVuc2lvbnNTZXQgPSBuZXcgU2V0KCk7XG4gICAgbGV0IGlzUmVwZWF0YWJsZSA9IGZhbHNlO1xuICAgIGZvciAoY29uc3QgZGlyZWN0aXZlIG9mIGRpcmVjdGl2ZXMpIHtcbiAgICAgICAgbmFtZSA9IGRpcmVjdGl2ZS5uYW1lO1xuICAgICAgICBpZiAoZGlyZWN0aXZlLmRlc2NyaXB0aW9uKSB7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGRpcmVjdGl2ZS5kZXNjcmlwdGlvbjtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IGxvY2F0aW9uIG9mIGRpcmVjdGl2ZS5sb2NhdGlvbnMpIHtcbiAgICAgICAgICAgIGxvY2F0aW9ucy5hZGQobG9jYXRpb24pO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgYXJnIG9mIGRpcmVjdGl2ZS5hcmdzKSB7XG4gICAgICAgICAgICBhcmdzW2FyZy5uYW1lXSA9IGFyZztcbiAgICAgICAgfVxuICAgICAgICBpc1JlcGVhdGFibGUgPSBpc1JlcGVhdGFibGUgfHwgZGlyZWN0aXZlLmlzUmVwZWF0YWJsZTtcbiAgICAgICAgaWYgKGRpcmVjdGl2ZS5leHRlbnNpb25zKSB7XG4gICAgICAgICAgICBleHRlbnNpb25zU2V0LmFkZChkaXJlY3RpdmUuZXh0ZW5zaW9ucyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ldyBHcmFwaFFMRGlyZWN0aXZlKHtcbiAgICAgICAgbmFtZTogbmFtZSxcbiAgICAgICAgZGVzY3JpcHRpb246IGRlc2NyaXB0aW9uLFxuICAgICAgICBsb2NhdGlvbnM6IEFycmF5LmZyb20obG9jYXRpb25zKSxcbiAgICAgICAgYXJncyxcbiAgICAgICAgaXNSZXBlYXRhYmxlLFxuICAgICAgICBleHRlbnNpb25zOiBleHRlbnNpb25zU2V0LnNpemUgPiAwID8gbWVyZ2VEZWVwKFsuLi5leHRlbnNpb25zU2V0XSkgOiB1bmRlZmluZWQsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeDirectives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeValidations.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/mergeValidations.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getValidationSettings: () => (/* binding */ getValidationSettings),\n/* harmony export */   validateFieldConsistency: () => (/* binding */ validateFieldConsistency),\n/* harmony export */   validateInputEnumConsistency: () => (/* binding */ validateInputEnumConsistency),\n/* harmony export */   validateInputFieldConsistency: () => (/* binding */ validateInputFieldConsistency),\n/* harmony export */   validateInputObjectConsistency: () => (/* binding */ validateInputObjectConsistency),\n/* harmony export */   validateTypeConsistency: () => (/* binding */ validateTypeConsistency)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/types.js\");\n\n\nfunction validateFieldConsistency(finalFieldConfig, candidates, typeMergingOptions) {\n    const fieldNamespace = `${candidates[0].type.name}.${candidates[0].fieldName}`;\n    const finalFieldNull = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(finalFieldConfig.type);\n    validateTypeConsistency(finalFieldConfig, candidates.map(c => c.fieldConfig), 'field', fieldNamespace, typeMergingOptions);\n    if (getValidationSettings(fieldNamespace, typeMergingOptions).strictNullComparison &&\n        candidates.some(c => finalFieldNull !== (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.fieldConfig.type))) {\n        validationMessage(`Nullability of field \"${fieldNamespace}\" does not match across subschemas. Disable typeMergingOptions.validationSettings.strictNullComparison to permit safe divergences.`, fieldNamespace, typeMergingOptions);\n    }\n    else if (finalFieldNull && candidates.some(c => !(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.fieldConfig.type))) {\n        validationMessage(`Canonical definition of field \"${fieldNamespace}\" is not-null while some subschemas permit null. This will be an automatic error in future versions.`, fieldNamespace, typeMergingOptions);\n    }\n    const argCandidatesMap = Object.create(null);\n    for (const { fieldConfig } of candidates) {\n        if (fieldConfig.args == null) {\n            continue;\n        }\n        for (const argName in fieldConfig.args) {\n            const arg = fieldConfig.args[argName];\n            argCandidatesMap[argName] = argCandidatesMap[argName] || [];\n            argCandidatesMap[argName].push(arg);\n        }\n    }\n    if (Object.values(argCandidatesMap).some(argCandidates => candidates.length !== argCandidates.length)) {\n        validationMessage(`Canonical definition of field \"${fieldNamespace}\" implements inconsistent argument names across subschemas. Input may be filtered from some requests.`, fieldNamespace, typeMergingOptions);\n    }\n    for (const argName in argCandidatesMap) {\n        if (finalFieldConfig.args == null) {\n            continue;\n        }\n        const argCandidates = argCandidatesMap[argName];\n        const argNamespace = `${fieldNamespace}.${argName}`;\n        const finalArgConfig = finalFieldConfig.args[argName] || argCandidates[argCandidates.length - 1];\n        const finalArgType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(finalArgConfig.type);\n        const finalArgNull = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(finalArgConfig.type);\n        validateTypeConsistency(finalArgConfig, argCandidates, 'argument', argNamespace, typeMergingOptions);\n        if (getValidationSettings(argNamespace, typeMergingOptions).strictNullComparison &&\n            argCandidates.some(c => finalArgNull !== (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.type))) {\n            validationMessage(`Nullability of argument \"${argNamespace}\" does not match across subschemas. Disable typeMergingOptions.validationSettings.strictNullComparison to permit safe divergences.`, argNamespace, typeMergingOptions);\n        }\n        else if (!finalArgNull && argCandidates.some(c => (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.type))) {\n            validationMessage(`Canonical definition of argument \"${argNamespace}\" permits null while some subschemas require not-null. This will be an automatic error in future versions.`, argNamespace, typeMergingOptions);\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(finalArgType)) {\n            validateInputEnumConsistency(finalArgType, argCandidates, typeMergingOptions);\n        }\n    }\n}\nfunction validateInputObjectConsistency(fieldInclusionMap, candidates, typeMergingOptions) {\n    for (const fieldName in fieldInclusionMap) {\n        const count = fieldInclusionMap[fieldName];\n        if (candidates.length !== count) {\n            const namespace = `${candidates[0].type.name}.${fieldName}`;\n            validationMessage(`Definition of input field \"${namespace}\" is not implemented by all subschemas. Input may be filtered from some requests.`, namespace, typeMergingOptions);\n        }\n    }\n}\nfunction validateInputFieldConsistency(finalInputFieldConfig, candidates, typeMergingOptions) {\n    const inputFieldNamespace = `${candidates[0].type.name}.${candidates[0].fieldName}`;\n    const inputFieldConfigs = candidates.map(c => c.inputFieldConfig);\n    const finalInputFieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(finalInputFieldConfig.type);\n    const finalInputFieldNull = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(finalInputFieldConfig.type);\n    validateTypeConsistency(finalInputFieldConfig, inputFieldConfigs, 'input field', inputFieldNamespace, typeMergingOptions);\n    if (getValidationSettings(inputFieldNamespace, typeMergingOptions).strictNullComparison &&\n        candidates.some(c => finalInputFieldNull !== (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.inputFieldConfig.type))) {\n        validationMessage(`Nullability of input field \"${inputFieldNamespace}\" does not match across subschemas. Disable typeMergingOptions.validationSettings.strictNullComparison to permit safe divergences.`, inputFieldNamespace, typeMergingOptions);\n    }\n    else if (!finalInputFieldNull && candidates.some(c => (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(c.inputFieldConfig.type))) {\n        validationMessage(`Canonical definition of input field \"${inputFieldNamespace}\" permits null while some subschemas require not-null. This will be an automatic error in future versions.`, inputFieldNamespace, typeMergingOptions);\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(finalInputFieldType)) {\n        validateInputEnumConsistency(finalInputFieldType, inputFieldConfigs, typeMergingOptions);\n    }\n}\nfunction validateTypeConsistency(finalElementConfig, candidates, definitionType, settingNamespace, typeMergingOptions) {\n    const finalNamedType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(finalElementConfig.type);\n    const finalIsScalar = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(finalNamedType);\n    const finalIsList = hasListType(finalElementConfig.type);\n    for (const c of candidates) {\n        if (finalIsList !== hasListType(c.type)) {\n            throw new Error(`Definitions of ${definitionType} \"${settingNamespace}\" implement inconsistent list types across subschemas and cannot be merged.`);\n        }\n        const currentNamedType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(c.type);\n        if (finalNamedType.toString() !== currentNamedType.toString()) {\n            const proxiableScalar = !!typeMergingOptions?.validationSettings?.proxiableScalars?.[finalNamedType.toString()]?.includes(currentNamedType.toString());\n            const bothScalars = finalIsScalar && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(currentNamedType);\n            const permitScalar = proxiableScalar && bothScalars;\n            if (proxiableScalar && !bothScalars) {\n                throw new Error(`Types ${finalNamedType} and ${currentNamedType} are not proxiable scalars.`);\n            }\n            if (!permitScalar) {\n                validationMessage(`Definitions of ${definitionType} \"${settingNamespace}\" implement inconsistent named types across subschemas. This will be an automatic error in future versions.`, settingNamespace, typeMergingOptions);\n            }\n        }\n    }\n}\nfunction hasListType(type) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)((0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type));\n}\nfunction validateInputEnumConsistency(inputEnumType, candidates, typeMergingOptions) {\n    const enumValueInclusionMap = Object.create(null);\n    for (const candidate of candidates) {\n        const enumType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(candidate.type);\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(enumType)) {\n            for (const { value } of enumType.getValues()) {\n                enumValueInclusionMap[value] = enumValueInclusionMap[value] || 0;\n                enumValueInclusionMap[value] += 1;\n            }\n        }\n    }\n    if (Object.values(enumValueInclusionMap).some(count => candidates.length !== count)) {\n        validationMessage(`Enum \"${inputEnumType.name}\" is used as an input with inconsistent values across subschemas. This will be an automatic error in future versions.`, inputEnumType.name, typeMergingOptions);\n    }\n}\nfunction validationMessage(message, settingNamespace, typeMergingOptions) {\n    const override = `typeMergingOptions.validationScopes['${settingNamespace}'].validationLevel`;\n    const settings = getValidationSettings(settingNamespace, typeMergingOptions);\n    switch (settings.validationLevel ?? _types_js__WEBPACK_IMPORTED_MODULE_1__.ValidationLevel.Warn) {\n        case _types_js__WEBPACK_IMPORTED_MODULE_1__.ValidationLevel.Off:\n            return;\n        case _types_js__WEBPACK_IMPORTED_MODULE_1__.ValidationLevel.Error:\n            throw new Error(`${message} If this is intentional, you may disable this error by setting ${override} = \"warn|off\"`);\n        default:\n            console.warn(`${message} To disable this warning or elevate it to an error, set ${override} = \"error|off\"`);\n    }\n}\nfunction getValidationSettings(settingNamespace, typeMergingOptions) {\n    return {\n        ...(typeMergingOptions?.validationSettings ?? {}),\n        ...(typeMergingOptions?.validationScopes?.[settingNamespace] ?? {}),\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeValidations.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/stitchSchemas.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/stitchSchemas.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   stitchSchemas: () => (/* binding */ stitchSchemas)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/extendSchema.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/Subschema.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/merge-resolvers.js\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/extensions.js\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js\");\n/* harmony import */ var _graphql_tools_schema__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/schema */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js\");\n/* harmony import */ var _stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stitchingInfo.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/stitchingInfo.js\");\n/* harmony import */ var _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./subschemaConfigTransforms/index.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js\");\n/* harmony import */ var _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./subschemaConfigTransforms/index.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js\");\n/* harmony import */ var _typeCandidates_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./typeCandidates.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/typeCandidates.js\");\n\n\n\n\n\n\n\nfunction stitchSchemas({ subschemas = [], types = [], typeDefs = [], onTypeConflict, mergeDirectives, mergeTypes = true, typeMergingOptions, subschemaConfigTransforms = [], resolvers = {}, inheritResolversFromInterfaces = false, resolverValidationOptions = {}, updateResolversInPlace = true, schemaExtensions, ...rest }) {\n    const transformedSubschemas = [];\n    const subschemaMap = new Map();\n    const originalSubschemaMap = new Map();\n    for (const subschema of subschemas) {\n        for (const transformedSubschemaConfig of applySubschemaConfigTransforms(subschemaConfigTransforms, subschema, subschemaMap, originalSubschemaMap)) {\n            transformedSubschemas.push(transformedSubschemaConfig);\n        }\n    }\n    const directiveMap = Object.create(null);\n    for (const directive of graphql__WEBPACK_IMPORTED_MODULE_0__.specifiedDirectives) {\n        directiveMap[directive.name] = directive;\n    }\n    const schemaDefs = Object.create(null);\n    const [typeCandidates, rootTypeNameMap, extensions] = (0,_typeCandidates_js__WEBPACK_IMPORTED_MODULE_1__.buildTypeCandidates)({\n        subschemas: transformedSubschemas,\n        originalSubschemaMap,\n        types,\n        typeDefs: typeDefs || [],\n        parseOptions: rest,\n        directiveMap,\n        schemaDefs,\n        mergeDirectives,\n    });\n    let stitchingInfo = (0,_stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__.createStitchingInfo)(subschemaMap, typeCandidates, mergeTypes);\n    const { typeMap: newTypeMap, directives: newDirectives } = (0,_typeCandidates_js__WEBPACK_IMPORTED_MODULE_1__.buildTypes)({\n        typeCandidates,\n        directives: Object.values(directiveMap),\n        stitchingInfo,\n        rootTypeNames: Object.values(rootTypeNameMap),\n        onTypeConflict,\n        mergeTypes,\n        typeMergingOptions,\n    });\n    let schema = new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        query: newTypeMap[rootTypeNameMap.query],\n        mutation: newTypeMap[rootTypeNameMap.mutation],\n        subscription: newTypeMap[rootTypeNameMap.subscription],\n        types: Object.values(newTypeMap),\n        directives: newDirectives,\n        astNode: schemaDefs.schemaDef,\n        extensionASTNodes: schemaDefs.schemaExtensions,\n        extensions: null,\n    });\n    for (const extension of extensions) {\n        schema = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.extendSchema)(schema, extension, {\n            commentDescriptions: true,\n        });\n    }\n    // We allow passing in an array of resolver maps, in which case we merge them\n    const resolverMap = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_5__.mergeResolvers)(resolvers);\n    const finalResolvers = inheritResolversFromInterfaces\n        ? (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_6__.extendResolversFromInterfaces)(schema, resolverMap)\n        : resolverMap;\n    stitchingInfo = (0,_stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__.completeStitchingInfo)(stitchingInfo, finalResolvers, schema);\n    schema = (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_7__.addResolversToSchema)({\n        schema,\n        defaultFieldResolver: _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_8__.defaultMergedResolver,\n        resolvers: finalResolvers,\n        resolverValidationOptions,\n        inheritResolversFromInterfaces: false,\n        updateResolversInPlace,\n    });\n    const resolverValidationOptionsEntries = Object.entries(resolverValidationOptions);\n    if (resolverValidationOptionsEntries.length > 0 &&\n        resolverValidationOptionsEntries.some(([, o]) => o !== 'ignore')) {\n        (0,_graphql_tools_schema__WEBPACK_IMPORTED_MODULE_9__.assertResolversPresent)(schema, resolverValidationOptions);\n    }\n    (0,_stitchingInfo_js__WEBPACK_IMPORTED_MODULE_2__.addStitchingInfo)(schema, stitchingInfo);\n    if (schemaExtensions) {\n        if (Array.isArray(schemaExtensions)) {\n            schemaExtensions = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_10__.mergeExtensions)(schemaExtensions);\n        }\n        (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_10__.applyExtensions)(schema, schemaExtensions);\n    }\n    return schema;\n}\nconst subschemaConfigTransformerPresets = [\n    _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_11__.isolateComputedFieldsTransformer,\n    _subschemaConfigTransforms_index_js__WEBPACK_IMPORTED_MODULE_12__.splitMergedTypeEntryPointsTransformer,\n];\nfunction applySubschemaConfigTransforms(subschemaConfigTransforms, subschemaOrSubschemaConfig, subschemaMap, originalSubschemaMap) {\n    let subschemaConfig;\n    if ((0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_13__.isSubschemaConfig)(subschemaOrSubschemaConfig)) {\n        subschemaConfig = subschemaOrSubschemaConfig;\n    }\n    else if (subschemaOrSubschemaConfig instanceof graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema) {\n        subschemaConfig = { schema: subschemaOrSubschemaConfig };\n    }\n    else {\n        throw new TypeError('Received invalid input.');\n    }\n    const transformedSubschemaConfigs = subschemaConfigTransforms\n        .concat(subschemaConfigTransformerPresets)\n        .reduce((transformedSubschemaConfigs, subschemaConfigTransform) => transformedSubschemaConfigs.flatMap(ssConfig => subschemaConfigTransform(ssConfig)), [subschemaConfig]);\n    const transformedSubschemas = transformedSubschemaConfigs.map(ssConfig => new _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_14__.Subschema(ssConfig));\n    const baseSubschema = transformedSubschemas[0];\n    subschemaMap.set(subschemaOrSubschemaConfig, baseSubschema);\n    for (const subschema of transformedSubschemas) {\n        originalSubschemaMap.set(subschema, subschemaOrSubschemaConfig);\n    }\n    return transformedSubschemas;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/stitchSchemas.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/stitchingInfo.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/stitchingInfo.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addStitchingInfo: () => (/* binding */ addStitchingInfo),\n/* harmony export */   completeStitchingInfo: () => (/* binding */ completeStitchingInfo),\n/* harmony export */   createStitchingInfo: () => (/* binding */ createStitchingInfo),\n/* harmony export */   selectionSetContainsTopLevelField: () => (/* binding */ selectionSetContainsTopLevelField)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/selectionSets.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _createDelegationPlanBuilder_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./createDelegationPlanBuilder.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/createDelegationPlanBuilder.js\");\n/* harmony import */ var _createMergedTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./createMergedTypeResolver.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/createMergedTypeResolver.js\");\n\n\n\n\n\nfunction createStitchingInfo(subschemaMap, typeCandidates, mergeTypes) {\n    const mergedTypes = createMergedTypes(typeCandidates, mergeTypes);\n    return {\n        subschemaMap,\n        fieldNodesByType: Object.create(null),\n        fieldNodesByField: Object.create(null),\n        dynamicSelectionSetsByField: Object.create(null),\n        mergedTypes,\n    };\n}\nfunction createMergedTypes(typeCandidates, mergeTypes) {\n    const mergedTypes = Object.create(null);\n    const typeInterfacesMap = Object.create(null);\n    for (const typeName in typeCandidates) {\n        for (const { type } of typeCandidates[typeName]) {\n            if ('getInterfaces' in type) {\n                const interfaces = type.getInterfaces();\n                for (const iface of interfaces) {\n                    const interfaceName = iface.name;\n                    let implementingTypes = typeInterfacesMap[typeName];\n                    if (implementingTypes == null) {\n                        implementingTypes = new Set();\n                        typeInterfacesMap[typeName] = implementingTypes;\n                    }\n                    implementingTypes.add(interfaceName);\n                }\n            }\n        }\n    }\n    for (const typeName in typeCandidates) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(typeCandidates[typeName][0].type) ||\n            (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(typeCandidates[typeName][0].type)) {\n            const typeCandidatesWithMergedTypeConfig = typeCandidates[typeName].filter(typeCandidate => typeCandidate.transformedSubschema != null &&\n                typeCandidate.transformedSubschema.merge != null &&\n                typeName in typeCandidate.transformedSubschema.merge);\n            if (mergeTypes === true ||\n                (typeof mergeTypes === 'function' && mergeTypes(typeCandidates[typeName], typeName)) ||\n                (Array.isArray(mergeTypes) && mergeTypes.includes(typeName)) ||\n                typeCandidatesWithMergedTypeConfig.length) {\n                const targetSubschemas = [];\n                const typeMaps = new Map();\n                const supportedBySubschemas = Object.create({});\n                const selectionSets = new Map();\n                const fieldSelectionSets = new Map();\n                const resolvers = new Map();\n                for (const typeCandidate of typeCandidates[typeName]) {\n                    const subschema = typeCandidate.transformedSubschema;\n                    if (subschema == null) {\n                        continue;\n                    }\n                    typeMaps.set(subschema, subschema.transformedSchema.getTypeMap());\n                    let mergedTypeConfig = subschema?.merge?.[typeName];\n                    if (!mergedTypeConfig) {\n                        for (const interfaceName of typeInterfacesMap[typeName] ?? []) {\n                            mergedTypeConfig = subschema?.merge?.[interfaceName];\n                            if (mergedTypeConfig) {\n                                break;\n                            }\n                        }\n                    }\n                    if (mergedTypeConfig == null) {\n                        continue;\n                    }\n                    if (mergedTypeConfig.selectionSet) {\n                        const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(mergedTypeConfig.selectionSet, {\n                            noLocation: true,\n                        });\n                        selectionSets.set(subschema, selectionSet);\n                    }\n                    if (mergedTypeConfig.fields) {\n                        const parsedFieldSelectionSets = Object.create(null);\n                        for (const fieldName in mergedTypeConfig.fields) {\n                            if (mergedTypeConfig.fields[fieldName].selectionSet) {\n                                const rawFieldSelectionSet = mergedTypeConfig.fields[fieldName].selectionSet;\n                                parsedFieldSelectionSets[fieldName] = rawFieldSelectionSet\n                                    ? (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(rawFieldSelectionSet, { noLocation: true })\n                                    : undefined;\n                            }\n                        }\n                        fieldSelectionSets.set(subschema, parsedFieldSelectionSets);\n                    }\n                    // We already know that the type is an object or interface type\n                    const type = subschema.transformedSchema.getType(typeName);\n                    const resolver = mergedTypeConfig.resolve ?? (0,_createMergedTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__.createMergedTypeResolver)(mergedTypeConfig, type);\n                    if (resolver == null) {\n                        continue;\n                    }\n                    const keyFn = mergedTypeConfig.key;\n                    resolvers.set(subschema, keyFn\n                        ? function batchMergedTypeResolverWrapper(originalResult, context, info, subschema, selectionSet, type) {\n                            return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => keyFn(originalResult))\n                                .then(key => resolver(originalResult, context, info, subschema, selectionSet, key, type))\n                                .resolve();\n                        }\n                        : resolver);\n                    targetSubschemas.push(subschema);\n                    const fieldMap = type.getFields();\n                    const selectionSet = selectionSets.get(subschema);\n                    for (const fieldName in fieldMap) {\n                        const field = fieldMap[fieldName];\n                        const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type);\n                        if (selectionSet &&\n                            (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(fieldType) &&\n                            selectionSetContainsTopLevelField(selectionSet, fieldName)) {\n                            continue;\n                        }\n                        if (!(fieldName in supportedBySubschemas)) {\n                            supportedBySubschemas[fieldName] = [];\n                        }\n                        supportedBySubschemas[fieldName].push(subschema);\n                    }\n                }\n                const sourceSubschemas = typeCandidates[typeName]\n                    .map(typeCandidate => typeCandidate?.transformedSubschema)\n                    .filter(_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.isSome);\n                const targetSubschemasBySubschema = new Map();\n                for (const subschema of sourceSubschemas) {\n                    const filteredSubschemas = targetSubschemas.filter(s => s !== subschema);\n                    if (filteredSubschemas.length) {\n                        targetSubschemasBySubschema.set(subschema, filteredSubschemas);\n                    }\n                }\n                mergedTypes[typeName] = {\n                    typeName,\n                    targetSubschemas: targetSubschemasBySubschema,\n                    typeMaps,\n                    selectionSets,\n                    fieldSelectionSets,\n                    uniqueFields: Object.create({}),\n                    nonUniqueFields: Object.create({}),\n                    resolvers,\n                };\n                mergedTypes[typeName].delegationPlanBuilder = (0,_createDelegationPlanBuilder_js__WEBPACK_IMPORTED_MODULE_5__.createDelegationPlanBuilder)(mergedTypes[typeName]);\n                for (const fieldName in supportedBySubschemas) {\n                    if (supportedBySubschemas[fieldName].length === 1) {\n                        mergedTypes[typeName].uniqueFields[fieldName] = supportedBySubschemas[fieldName][0];\n                    }\n                    else {\n                        mergedTypes[typeName].nonUniqueFields[fieldName] = supportedBySubschemas[fieldName];\n                    }\n                }\n            }\n        }\n    }\n    return mergedTypes;\n}\nfunction completeStitchingInfo(stitchingInfo, resolvers, schema) {\n    const { fieldNodesByType, fieldNodesByField, dynamicSelectionSetsByField, mergedTypes } = stitchingInfo;\n    // must add __typename to query and mutation root types to handle type merging with nested root types\n    // cannot add __typename to subscription root types, but they cannot be nested\n    const rootTypes = [schema.getQueryType(), schema.getMutationType()];\n    for (const rootType of rootTypes) {\n        if (rootType) {\n            fieldNodesByType[rootType.name] = [\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)('{ __typename }', { noLocation: true }).selections[0],\n            ];\n        }\n    }\n    const selectionSetsByField = Object.create(null);\n    for (const typeName in mergedTypes) {\n        const mergedTypeInfo = mergedTypes[typeName];\n        if (mergedTypeInfo.selectionSets == null && mergedTypeInfo.fieldSelectionSets == null) {\n            continue;\n        }\n        for (const [subschemaConfig, selectionSet] of mergedTypeInfo.selectionSets) {\n            const schema = subschemaConfig.transformedSchema;\n            const type = schema.getType(typeName);\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type);\n                if (selectionSet &&\n                    (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(fieldType) &&\n                    selectionSetContainsTopLevelField(selectionSet, fieldName)) {\n                    continue;\n                }\n                updateSelectionSetMap(selectionSetsByField, typeName, fieldName, selectionSet, true);\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isAbstractType)(type)) {\n                updateSelectionSetMap(selectionSetsByField, typeName, '__typename', selectionSet);\n            }\n        }\n        for (const [, selectionSetFieldMap] of mergedTypeInfo.fieldSelectionSets) {\n            for (const fieldName in selectionSetFieldMap) {\n                const selectionSet = selectionSetFieldMap[fieldName];\n                updateSelectionSetMap(selectionSetsByField, typeName, fieldName, selectionSet, true);\n            }\n        }\n    }\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        if (type === undefined || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            continue;\n        }\n        const resolver = resolvers[typeName];\n        for (const fieldName in resolver) {\n            const field = resolver[fieldName];\n            if (typeof field.selectionSet === 'function') {\n                if (!(typeName in dynamicSelectionSetsByField)) {\n                    dynamicSelectionSetsByField[typeName] = Object.create(null);\n                }\n                if (!(fieldName in dynamicSelectionSetsByField[typeName])) {\n                    dynamicSelectionSetsByField[typeName][fieldName] = [];\n                }\n                dynamicSelectionSetsByField[typeName][fieldName].push(field.selectionSet);\n            }\n            else if (field.selectionSet) {\n                const selectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(field.selectionSet, { noLocation: true });\n                updateSelectionSetMap(selectionSetsByField, typeName, fieldName, selectionSet);\n            }\n        }\n    }\n    const variableValues = Object.create(null);\n    const fragments = Object.create(null);\n    const fieldNodeMap = Object.create(null);\n    for (const typeName in selectionSetsByField) {\n        const type = schema.getType(typeName);\n        for (const fieldName in selectionSetsByField[typeName]) {\n            for (const selectionSet of selectionSetsByField[typeName][fieldName]) {\n                const { fields } = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.collectFields)(schema, fragments, variableValues, type, selectionSet);\n                for (const [, fieldNodes] of fields) {\n                    for (const fieldNode of fieldNodes) {\n                        const key = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.print)(fieldNode);\n                        if (fieldNodeMap[key] == null) {\n                            fieldNodeMap[key] = fieldNode;\n                            updateArrayMap(fieldNodesByField, typeName, fieldName, fieldNode);\n                        }\n                        else {\n                            updateArrayMap(fieldNodesByField, typeName, fieldName, fieldNodeMap[key]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    return stitchingInfo;\n}\nfunction updateSelectionSetMap(map, typeName, fieldName, selectionSet, includeTypename) {\n    if (includeTypename) {\n        const typenameSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)('{ __typename }', { noLocation: true });\n        updateArrayMap(map, typeName, fieldName, selectionSet, typenameSelectionSet);\n        return;\n    }\n    updateArrayMap(map, typeName, fieldName, selectionSet);\n}\nfunction updateArrayMap(map, typeName, fieldName, value, initialValue) {\n    if (map[typeName] == null) {\n        const initialItems = initialValue === undefined ? [value] : [initialValue, value];\n        map[typeName] = {\n            [fieldName]: initialItems,\n        };\n    }\n    else if (map[typeName][fieldName] == null) {\n        const initialItems = initialValue === undefined ? [value] : [initialValue, value];\n        map[typeName][fieldName] = initialItems;\n    }\n    else {\n        map[typeName][fieldName].push(value);\n    }\n}\nfunction addStitchingInfo(stitchedSchema, stitchingInfo) {\n    stitchedSchema.extensions = {\n        ...stitchedSchema.extensions,\n        stitchingInfo,\n    };\n}\nfunction selectionSetContainsTopLevelField(selectionSet, fieldName) {\n    return selectionSet.selections.some(selection => selection.kind === graphql__WEBPACK_IMPORTED_MODULE_8__.Kind.FIELD && selection.name.value === fieldName);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/stitchingInfo.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isolateComputedFieldsTransformer: () => (/* binding */ isolateComputedFieldsTransformer)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/get-implementing-types.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/selectionSets.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/prune.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/filterSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/FilterTypes.js\");\n\n\n\nfunction isolateComputedFieldsTransformer(subschemaConfig) {\n    if (subschemaConfig.merge == null) {\n        return [subschemaConfig];\n    }\n    const baseSchemaTypes = Object.create(null);\n    const isolatedSchemaTypes = Object.create(null);\n    for (const typeName in subschemaConfig.merge) {\n        const mergedTypeConfig = subschemaConfig.merge[typeName];\n        const objectType = subschemaConfig.schema.getType(typeName);\n        baseSchemaTypes[typeName] = mergedTypeConfig;\n        if (mergedTypeConfig.fields) {\n            const baseFields = Object.create(null);\n            const isolatedFields = Object.create(null);\n            for (const fieldName in mergedTypeConfig.fields) {\n                const mergedFieldConfig = mergedTypeConfig.fields[fieldName];\n                if (mergedFieldConfig.computed && mergedFieldConfig.selectionSet) {\n                    isolatedFields[fieldName] = mergedFieldConfig;\n                }\n                else if (mergedFieldConfig.computed) {\n                    throw new Error(`A selectionSet is required for computed field \"${typeName}.${fieldName}\"`);\n                }\n                else {\n                    baseFields[fieldName] = mergedFieldConfig;\n                }\n            }\n            const isolatedFieldCount = Object.keys(isolatedFields).length;\n            if (isolatedFieldCount && isolatedFieldCount !== Object.keys(objectType.getFields()).length) {\n                baseSchemaTypes[typeName] = {\n                    ...mergedTypeConfig,\n                    fields: baseFields,\n                };\n                isolatedSchemaTypes[typeName] = {\n                    ...mergedTypeConfig,\n                    // there might already be key fields\n                    keyFieldNames: isolatedSchemaTypes[typeName]?.keyFieldNames || [],\n                    fields: { ...(isolatedSchemaTypes[typeName]?.fields ?? {}), ...isolatedFields },\n                    canonical: undefined,\n                };\n                for (const fieldName in isolatedFields) {\n                    const returnType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(objectType.getFields()[fieldName].type);\n                    const returnTypes = [returnType];\n                    // for interfaces and unions the implementations/members need to be handled as well\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(returnType)) {\n                        returnTypes.push(...(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getImplementingTypes)(returnType.name, subschemaConfig.schema).map(name => subschemaConfig.schema.getType(name)));\n                    }\n                    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(returnType)) {\n                        returnTypes.push(...returnType.getTypes());\n                    }\n                    for (const type of returnTypes) {\n                        const returnTypeMergeConfig = subschemaConfig.merge[type.name];\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n                            const returnTypeSelectionSet = returnTypeMergeConfig?.selectionSet;\n                            if (returnTypeSelectionSet) {\n                                // this is a merged type, include the selection set\n                                const keyFieldNames = [];\n                                const parsedSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(returnTypeSelectionSet);\n                                const keyFields = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.collectFields)(subschemaConfig.schema, {}, {}, type, parsedSelectionSet);\n                                keyFieldNames.push(...Array.from(keyFields.fields.keys()));\n                                for (const entryPoint of returnTypeMergeConfig.entryPoints ?? []) {\n                                    if (entryPoint.selectionSet) {\n                                        const parsedSelectionSet = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.parseSelectionSet)(entryPoint.selectionSet);\n                                        const keyFields = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.collectFields)(subschemaConfig.schema, {}, {}, type, parsedSelectionSet);\n                                        keyFieldNames.push(...Array.from(keyFields.fields.keys()));\n                                    }\n                                }\n                                isolatedSchemaTypes[type.name] = {\n                                    ...returnTypeMergeConfig,\n                                    keyFieldNames,\n                                    fields: {\n                                        ...(isolatedSchemaTypes[type.name]?.fields ?? {}),\n                                    },\n                                };\n                            }\n                            else if (!returnTypeMergeConfig) {\n                                // this is an unmerged type, add all fields to the isolated schema\n                                const fields = {\n                                    ...isolatedSchemaTypes[type.name]?.fields,\n                                };\n                                if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(type)) {\n                                    for (const implementingType of (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getImplementingTypes)(type.name, subschemaConfig.schema)) {\n                                        const implementingTypeFields = isolatedSchemaTypes[implementingType]?.fields;\n                                        if (implementingTypeFields) {\n                                            for (const fieldName in implementingTypeFields) {\n                                                if (implementingTypeFields[fieldName]) {\n                                                    fields[fieldName] = {\n                                                        ...implementingTypeFields[fieldName],\n                                                        ...fields[fieldName],\n                                                    };\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                                if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n                                    for (const fieldName in type.getFields()) {\n                                        fields[fieldName] ||= {};\n                                    }\n                                }\n                                isolatedSchemaTypes[type.name] = {\n                                    keyFieldNames: [],\n                                    fields,\n                                    canonical: true,\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if (Object.keys(isolatedSchemaTypes).length) {\n        return [\n            filterBaseSubschema({ ...subschemaConfig, merge: baseSchemaTypes }, isolatedSchemaTypes),\n            filterIsolatedSubschema({ ...subschemaConfig, merge: isolatedSchemaTypes }),\n        ];\n    }\n    return [subschemaConfig];\n}\nfunction _createCompositeFieldFilter(schema) {\n    // create TransformCompositeFields that will remove any field not in schema,\n    const filteredFields = {};\n    for (const typeName in schema.getTypeMap()) {\n        const type = schema.getType(typeName);\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n            filteredFields[typeName] = { __typename: true };\n            const fieldMap = type.getFields();\n            for (const fieldName in fieldMap) {\n                filteredFields[typeName][fieldName] = true;\n            }\n        }\n    }\n    return new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_4__[\"default\"]((typeName, fieldName) => (filteredFields[typeName]?.[fieldName] ? undefined : null), (typeName, fieldName) => (filteredFields[typeName]?.[fieldName] ? undefined : null));\n}\nfunction isIsolatedField(typeName, fieldName, isolatedSchemaTypes) {\n    const fieldConfig = isolatedSchemaTypes[typeName]?.fields?.[fieldName];\n    if (fieldConfig) {\n        return true;\n    }\n    return false;\n}\nfunction filterBaseSubschema(subschemaConfig, isolatedSchemaTypes) {\n    const schema = subschemaConfig.schema;\n    const typesForInterface = {};\n    const filteredSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.pruneSchema)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.filterSchema)({\n        schema,\n        objectFieldFilter: (typeName, fieldName) => !isIsolatedField(typeName, fieldName, isolatedSchemaTypes) ||\n            (isolatedSchemaTypes[typeName]?.keyFieldNames ?? []).includes(fieldName),\n        interfaceFieldFilter: (typeName, fieldName) => {\n            if (!typesForInterface[typeName]) {\n                typesForInterface[typeName] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getImplementingTypes)(typeName, schema);\n            }\n            const isIsolatedFieldName = [typeName, ...typesForInterface[typeName]].some(implementingTypeName => isIsolatedField(implementingTypeName, fieldName, isolatedSchemaTypes));\n            return (!isIsolatedFieldName ||\n                (isolatedSchemaTypes[typeName]?.keyFieldNames ?? []).includes(fieldName));\n        },\n    }));\n    const filteredSubschema = {\n        ...subschemaConfig,\n        merge: subschemaConfig.merge\n            ? {\n                ...subschemaConfig.merge,\n            }\n            : undefined,\n        transforms: (subschemaConfig.transforms ?? []).concat([\n            _createCompositeFieldFilter(filteredSchema),\n            new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_7__[\"default\"](// filter out empty types\n            // filter out empty types\n            type => (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type) && !(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) ||\n                Object.keys(type.getFields()).length > 0),\n        ]),\n    };\n    const remainingTypes = filteredSchema.getTypeMap();\n    const mergeConfig = filteredSubschema.merge;\n    if (mergeConfig) {\n        for (const mergeType in mergeConfig) {\n            if (!remainingTypes[mergeType]) {\n                delete mergeConfig[mergeType];\n            }\n        }\n        if (!Object.keys(mergeConfig).length) {\n            delete filteredSubschema.merge;\n        }\n    }\n    return filteredSubschema;\n}\nfunction filterIsolatedSubschema(subschemaConfig) {\n    const queryRootFields = {};\n    const computedFieldTypes = {}; // contains types of computed fields that have no root field\n    function listReachableTypesToIsolate(subschemaConfig, type, typeNames = new Set()) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(type)) {\n            return typeNames;\n        }\n        else if (((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) &&\n            subschemaConfig.merge &&\n            subschemaConfig.merge[type.name] &&\n            subschemaConfig.merge[type.name].selectionSet) {\n            // this is a merged type, no need to descend further\n            typeNames.add(type.name);\n            return typeNames;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(type)) {\n            typeNames.add(type.name);\n            // descent into all field types potentially via interfaces implementations/unions members\n            const types = new Set();\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n                types.add(type);\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n                (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getImplementingTypes)(type.name, subschemaConfig.schema).forEach(name => types.add(subschemaConfig.schema.getType(name)));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n                type.getTypes().forEach(t => types.add(t));\n            }\n            for (const type of types) {\n                typeNames.add(type.name);\n                for (const f of Object.values(type.getFields())) {\n                    const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(f.type);\n                    if (!typeNames.has(fieldType.name) && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(fieldType)) {\n                        listReachableTypesToIsolate(subschemaConfig, fieldType, typeNames);\n                    }\n                }\n            }\n            return typeNames;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n            typeNames.add(type.name);\n            type.getTypes().forEach(t => listReachableTypesToIsolate(subschemaConfig, t, typeNames));\n            return typeNames;\n        }\n        else {\n            return typeNames;\n        }\n    }\n    const queryType = subschemaConfig.schema.getQueryType();\n    for (const typeName in subschemaConfig.merge) {\n        const mergedTypeConfig = subschemaConfig.merge[typeName];\n        const entryPoints = mergedTypeConfig.entryPoints ?? [mergedTypeConfig];\n        const queryTypeFields = queryType?.getFields();\n        for (const entryPoint of entryPoints) {\n            if (entryPoint.fieldName != null) {\n                queryRootFields[entryPoint.fieldName] = true;\n                const rootField = queryTypeFields?.[entryPoint.fieldName];\n                if (rootField) {\n                    const rootFieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(rootField.type);\n                    computedFieldTypes[rootFieldType.name] = true;\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(rootFieldType)) {\n                        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getImplementingTypes)(rootFieldType.name, subschemaConfig.schema).forEach(tn => {\n                            computedFieldTypes[tn] = true;\n                        });\n                    }\n                }\n            }\n        }\n        const computedFields = [\n            ...Object.entries(mergedTypeConfig.fields || {})\n                .map(([k, v]) => (v.computed ? k : null))\n                .filter(fn => fn !== null),\n        ].filter(fn => !queryRootFields[fn]);\n        const type = subschemaConfig.schema.getType(typeName);\n        for (const fieldName of computedFields) {\n            const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type.getFields()[fieldName].type);\n            computedFieldTypes[fieldType.name] = true;\n            listReachableTypesToIsolate(subschemaConfig, fieldType).forEach(tn => {\n                computedFieldTypes[tn] = true;\n            });\n        }\n    }\n    const rootTypeNames = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.getRootTypeNames)(subschemaConfig.schema);\n    const typesForInterface = {};\n    const filteredSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.pruneSchema)((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.filterSchema)({\n        schema: subschemaConfig.schema,\n        rootFieldFilter: (typeName, fieldName, config) => {\n            // if the field is a root field, it should be included\n            if (rootTypeNames.has(typeName)) {\n                // if this is a query field, we should check if it is a computed field\n                if (queryType?.name === typeName) {\n                    if (queryRootFields[fieldName]) {\n                        return true;\n                    }\n                }\n                else {\n                    return true;\n                }\n            }\n            const returnType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(config.type);\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isAbstractType)(returnType)) {\n                const typesForInterface = [\n                    returnType.name,\n                    ...(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getImplementingTypes)(returnType.name, subschemaConfig.schema),\n                ];\n                return typesForInterface.some(t => computedFieldTypes[t] != null);\n            }\n            return computedFieldTypes[returnType.name] != null;\n        },\n        objectFieldFilter: (typeName, fieldName, config) => {\n            if (computedFieldTypes[typeName]) {\n                return true;\n            }\n            const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(config.type);\n            if (computedFieldTypes[fieldType.name]) {\n                return true;\n            }\n            return (subschemaConfig.merge[typeName] == null ||\n                subschemaConfig.merge[typeName]?.fields?.[fieldName] != null ||\n                (subschemaConfig.merge[typeName]?.keyFieldNames ?? []).includes(fieldName));\n        },\n        interfaceFieldFilter: (typeName, fieldName, config) => {\n            if (computedFieldTypes[typeName]) {\n                return true;\n            }\n            const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(config.type);\n            if (computedFieldTypes[fieldType.name]) {\n                return true;\n            }\n            if (!typesForInterface[typeName]) {\n                typesForInterface[typeName] = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getImplementingTypes)(typeName, subschemaConfig.schema);\n            }\n            const isIsolatedFieldName = typesForInterface[typeName].some(implementingTypeName => isIsolatedField(implementingTypeName, fieldName, subschemaConfig.merge)) || subschemaConfig.merge[typeName]?.fields?.[fieldName] != null;\n            const isComputedFieldType = typesForInterface[typeName].some(implementingTypeName => {\n                if (computedFieldTypes[implementingTypeName]) {\n                    return true;\n                }\n                const type = subschemaConfig.schema.getType(implementingTypeName);\n                const field = type.getFields()[fieldName];\n                if (field == null) {\n                    return false;\n                }\n                const fieldType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(field.type);\n                return computedFieldTypes[fieldType.name] != null;\n            });\n            return (isIsolatedFieldName ||\n                isComputedFieldType ||\n                (subschemaConfig.merge[typeName]?.keyFieldNames ?? []).includes(fieldName));\n        },\n    }), { skipPruning: typ => computedFieldTypes[typ.name] != null });\n    const merge = Object.fromEntries(\n    // get rid of keyFieldNames again\n    Object.entries(subschemaConfig.merge).map(([typeName, { keyFieldNames, ...config }]) => [\n        typeName,\n        config,\n    ]));\n    const filteredSubschema = {\n        ...subschemaConfig,\n        merge,\n        transforms: (subschemaConfig.transforms ?? []).concat([\n            _createCompositeFieldFilter(filteredSchema),\n            new _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_7__[\"default\"](// filter out empty types\n            // filter out empty types\n            type => (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type) && !(0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) ||\n                Object.keys(type.getFields()).length > 0),\n        ]),\n    };\n    return filteredSubschema;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/isolateComputedFieldsTransformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js":
/*!********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js ***!
  \********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   splitMergedTypeEntryPointsTransformer: () => (/* binding */ splitMergedTypeEntryPointsTransformer)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/subschemaConfig.js\");\n\nfunction splitMergedTypeEntryPointsTransformer(subschemaConfig) {\n    if (!subschemaConfig.merge)\n        return [subschemaConfig];\n    const maxEntryPoints = Object.values(subschemaConfig.merge).reduce((max, mergedTypeConfig) => {\n        return Math.max(max, mergedTypeConfig?.entryPoints?.length ?? 0);\n    }, 0);\n    if (maxEntryPoints === 0)\n        return [subschemaConfig];\n    const subschemaPermutations = [];\n    for (let i = 0; i < maxEntryPoints; i += 1) {\n        const subschemaPermutation = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_0__.cloneSubschemaConfig)(subschemaConfig);\n        const mergedTypesCopy = subschemaPermutation.merge ?? Object.create(null);\n        let currentMerge = mergedTypesCopy;\n        if (i > 0) {\n            subschemaPermutation.merge = currentMerge = Object.create(null);\n        }\n        for (const typeName in mergedTypesCopy) {\n            const mergedTypeConfig = mergedTypesCopy[typeName];\n            const mergedTypeEntryPoint = mergedTypeConfig?.entryPoints?.[i];\n            if (mergedTypeEntryPoint) {\n                if (mergedTypeConfig.selectionSet ??\n                    mergedTypeConfig.fieldName ??\n                    mergedTypeConfig.resolve) {\n                    throw new Error(`Merged type ${typeName} may not define entryPoints in addition to selectionSet, fieldName, or resolve`);\n                }\n                Object.assign(mergedTypeConfig, mergedTypeEntryPoint);\n                delete mergedTypeConfig.entryPoints;\n                if (i > 0) {\n                    delete mergedTypeConfig.canonical;\n                    if (mergedTypeConfig.fields != null) {\n                        for (const mergedFieldName in mergedTypeConfig.fields) {\n                            const mergedFieldConfig = mergedTypeConfig.fields[mergedFieldName];\n                            delete mergedFieldConfig.canonical;\n                        }\n                    }\n                }\n                currentMerge[typeName] = mergedTypeConfig;\n            }\n        }\n        subschemaPermutations.push(subschemaPermutation);\n    }\n    return subschemaPermutations;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vc3Vic2NoZW1hQ29uZmlnVHJhbnNmb3Jtcy9zcGxpdE1lcmdlZFR5cGVFbnRyeVBvaW50c1RyYW5zZm9ybWVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStEO0FBQ3hEO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9CQUFvQjtBQUN4QyxxQ0FBcUMsNkVBQW9CO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCxVQUFVO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL2VzbS9zdWJzY2hlbWFDb25maWdUcmFuc2Zvcm1zL3NwbGl0TWVyZ2VkVHlwZUVudHJ5UG9pbnRzVHJhbnNmb3JtZXIuanM/Y2JmNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbG9uZVN1YnNjaGVtYUNvbmZpZyB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlJztcbmV4cG9ydCBmdW5jdGlvbiBzcGxpdE1lcmdlZFR5cGVFbnRyeVBvaW50c1RyYW5zZm9ybWVyKHN1YnNjaGVtYUNvbmZpZykge1xuICAgIGlmICghc3Vic2NoZW1hQ29uZmlnLm1lcmdlKVxuICAgICAgICByZXR1cm4gW3N1YnNjaGVtYUNvbmZpZ107XG4gICAgY29uc3QgbWF4RW50cnlQb2ludHMgPSBPYmplY3QudmFsdWVzKHN1YnNjaGVtYUNvbmZpZy5tZXJnZSkucmVkdWNlKChtYXgsIG1lcmdlZFR5cGVDb25maWcpID0+IHtcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KG1heCwgbWVyZ2VkVHlwZUNvbmZpZz8uZW50cnlQb2ludHM/Lmxlbmd0aCA/PyAwKTtcbiAgICB9LCAwKTtcbiAgICBpZiAobWF4RW50cnlQb2ludHMgPT09IDApXG4gICAgICAgIHJldHVybiBbc3Vic2NoZW1hQ29uZmlnXTtcbiAgICBjb25zdCBzdWJzY2hlbWFQZXJtdXRhdGlvbnMgPSBbXTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IG1heEVudHJ5UG9pbnRzOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3Qgc3Vic2NoZW1hUGVybXV0YXRpb24gPSBjbG9uZVN1YnNjaGVtYUNvbmZpZyhzdWJzY2hlbWFDb25maWcpO1xuICAgICAgICBjb25zdCBtZXJnZWRUeXBlc0NvcHkgPSBzdWJzY2hlbWFQZXJtdXRhdGlvbi5tZXJnZSA/PyBPYmplY3QuY3JlYXRlKG51bGwpO1xuICAgICAgICBsZXQgY3VycmVudE1lcmdlID0gbWVyZ2VkVHlwZXNDb3B5O1xuICAgICAgICBpZiAoaSA+IDApIHtcbiAgICAgICAgICAgIHN1YnNjaGVtYVBlcm11dGF0aW9uLm1lcmdlID0gY3VycmVudE1lcmdlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIG1lcmdlZFR5cGVzQ29weSkge1xuICAgICAgICAgICAgY29uc3QgbWVyZ2VkVHlwZUNvbmZpZyA9IG1lcmdlZFR5cGVzQ29weVt0eXBlTmFtZV07XG4gICAgICAgICAgICBjb25zdCBtZXJnZWRUeXBlRW50cnlQb2ludCA9IG1lcmdlZFR5cGVDb25maWc/LmVudHJ5UG9pbnRzPy5baV07XG4gICAgICAgICAgICBpZiAobWVyZ2VkVHlwZUVudHJ5UG9pbnQpIHtcbiAgICAgICAgICAgICAgICBpZiAobWVyZ2VkVHlwZUNvbmZpZy5zZWxlY3Rpb25TZXQgPz9cbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VkVHlwZUNvbmZpZy5maWVsZE5hbWUgPz9cbiAgICAgICAgICAgICAgICAgICAgbWVyZ2VkVHlwZUNvbmZpZy5yZXNvbHZlKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgTWVyZ2VkIHR5cGUgJHt0eXBlTmFtZX0gbWF5IG5vdCBkZWZpbmUgZW50cnlQb2ludHMgaW4gYWRkaXRpb24gdG8gc2VsZWN0aW9uU2V0LCBmaWVsZE5hbWUsIG9yIHJlc29sdmVgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihtZXJnZWRUeXBlQ29uZmlnLCBtZXJnZWRUeXBlRW50cnlQb2ludCk7XG4gICAgICAgICAgICAgICAgZGVsZXRlIG1lcmdlZFR5cGVDb25maWcuZW50cnlQb2ludHM7XG4gICAgICAgICAgICAgICAgaWYgKGkgPiAwKSB7XG4gICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBtZXJnZWRUeXBlQ29uZmlnLmNhbm9uaWNhbDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG1lcmdlZFR5cGVDb25maWcuZmllbGRzICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgbWVyZ2VkRmllbGROYW1lIGluIG1lcmdlZFR5cGVDb25maWcuZmllbGRzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWVyZ2VkRmllbGRDb25maWcgPSBtZXJnZWRUeXBlQ29uZmlnLmZpZWxkc1ttZXJnZWRGaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBtZXJnZWRGaWVsZENvbmZpZy5jYW5vbmljYWw7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY3VycmVudE1lcmdlW3R5cGVOYW1lXSA9IG1lcmdlZFR5cGVDb25maWc7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgc3Vic2NoZW1hUGVybXV0YXRpb25zLnB1c2goc3Vic2NoZW1hUGVybXV0YXRpb24pO1xuICAgIH1cbiAgICByZXR1cm4gc3Vic2NoZW1hUGVybXV0YXRpb25zO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/subschemaConfigTransforms/splitMergedTypeEntryPointsTransformer.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/typeCandidates.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/typeCandidates.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildTypeCandidates: () => (/* binding */ buildTypeCandidates),\n/* harmony export */   buildTypes: () => (/* binding */ buildTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _graphql_tools_merge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/merge */ \"(ssr)/../node_modules/@graphql-tools/merge/esm/typedefs-mergers/merge-typedefs.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/wrap */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/wrapSchema.js\");\n/* harmony import */ var _definitions_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definitions.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/definitions.js\");\n/* harmony import */ var _mergeCandidates_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./mergeCandidates.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeCandidates.js\");\n/* harmony import */ var _mergeDirectives_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./mergeDirectives.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/mergeDirectives.js\");\n/* harmony import */ var _typeFromAST_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./typeFromAST.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/esm/typeFromAST.js\");\n\n\n\n\n\n\n\n\nfunction buildTypeCandidates({ subschemas, originalSubschemaMap, types, typeDefs, parseOptions, directiveMap, schemaDefs, mergeDirectives: isMergeDirectives, }) {\n    const directiveCandidates = new Map(Object.entries(directiveMap).map(([name, directive]) => [name, new Set([directive])]));\n    const extensions = [];\n    const typeCandidates = Object.create(null);\n    let schemaDef;\n    let schemaExtensions = [];\n    let document;\n    let extraction;\n    if ((typeDefs && !Array.isArray(typeDefs)) || (Array.isArray(typeDefs) && typeDefs.length)) {\n        document = (0,_graphql_tools_merge__WEBPACK_IMPORTED_MODULE_0__.mergeTypeDefs)(typeDefs, parseOptions);\n        extraction = (0,_definitions_js__WEBPACK_IMPORTED_MODULE_1__.extractDefinitions)(document);\n        schemaDef = extraction.schemaDefs[0];\n        schemaExtensions = schemaExtensions.concat(extraction.schemaExtensions);\n    }\n    schemaDefs.schemaDef = schemaDef ?? schemaDefs.schemaDef;\n    schemaDefs.schemaExtensions = schemaExtensions;\n    const rootTypeNameMap = getRootTypeNameMap(schemaDefs);\n    for (const subschema of subschemas) {\n        const schema = (subschema.transformedSchema = (0,_graphql_tools_wrap__WEBPACK_IMPORTED_MODULE_2__.wrapSchema)(subschema));\n        const rootTypeMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getRootTypeMap)(schema);\n        const rootTypes = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.getRootTypes)(schema);\n        for (const [operation, rootType] of rootTypeMap.entries()) {\n            addTypeCandidate(typeCandidates, rootTypeNameMap[operation], {\n                type: rootType,\n                subschema: originalSubschemaMap.get(subschema),\n                transformedSubschema: subschema,\n            });\n        }\n        if (isMergeDirectives === true) {\n            for (const directive of schema.getDirectives()) {\n                let directiveCandidatesForName = directiveCandidates.get(directive.name);\n                if (directiveCandidatesForName == null) {\n                    directiveCandidatesForName = new Set();\n                    directiveCandidates.set(directive.name, directiveCandidatesForName);\n                }\n                directiveCandidatesForName.add(directive);\n            }\n        }\n        const originalTypeMap = schema.getTypeMap();\n        for (const typeName in originalTypeMap) {\n            const type = originalTypeMap[typeName];\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isNamedType)(type) &&\n                (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNamedType)(type).name.slice(0, 2) !== '__' &&\n                !rootTypes.has(type)) {\n                addTypeCandidate(typeCandidates, type.name, {\n                    type,\n                    subschema: originalSubschemaMap.get(subschema),\n                    transformedSubschema: subschema,\n                });\n            }\n        }\n    }\n    if (document != null && extraction != null) {\n        for (const def of extraction.typeDefinitions) {\n            const type = (0,_typeFromAST_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(def);\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_4__.isNamedType)(type)) {\n                throw new Error(`Expected to get named typed but got ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(def)}`);\n            }\n            if (type != null) {\n                addTypeCandidate(typeCandidates, type.name, { type });\n            }\n        }\n        for (const def of extraction.directiveDefs) {\n            const directive = (0,_typeFromAST_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(def);\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_7__.isDirective)(directive)) {\n                throw new Error(`Expected to get directive type but got ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.inspect)(def)}`);\n            }\n            let directiveCandidatesForName = directiveCandidates.get(directive.name);\n            if (directiveCandidatesForName == null) {\n                directiveCandidatesForName = new Set();\n                directiveCandidates.set(directive.name, directiveCandidatesForName);\n            }\n            directiveCandidatesForName.add(directive);\n        }\n        if (extraction.extensionDefs.length > 0) {\n            extensions.push({\n                ...document,\n                definitions: extraction.extensionDefs,\n            });\n        }\n    }\n    for (const type of types) {\n        addTypeCandidate(typeCandidates, type.name, { type });\n    }\n    for (const [directiveName, directiveCandidatesForName] of directiveCandidates) {\n        directiveMap[directiveName] = (0,_mergeDirectives_js__WEBPACK_IMPORTED_MODULE_8__.mergeDirectives)(directiveCandidatesForName);\n    }\n    return [typeCandidates, rootTypeNameMap, extensions];\n}\nfunction getRootTypeNameMap({ schemaDef, schemaExtensions, }) {\n    const rootTypeNameMap = {\n        query: 'Query',\n        mutation: 'Mutation',\n        subscription: 'Subscription',\n    };\n    const allNodes = schemaExtensions.slice();\n    if (schemaDef != null) {\n        allNodes.unshift(schemaDef);\n    }\n    for (const node of allNodes) {\n        if (node.operationTypes != null) {\n            for (const operationType of node.operationTypes) {\n                rootTypeNameMap[operationType.operation] = operationType.type.name.value;\n            }\n        }\n    }\n    return rootTypeNameMap;\n}\nfunction addTypeCandidate(typeCandidates, name, typeCandidate) {\n    if (!(name in typeCandidates)) {\n        typeCandidates[name] = [];\n    }\n    typeCandidates[name].push(typeCandidate);\n}\nfunction buildTypes({ typeCandidates, directives, stitchingInfo, rootTypeNames, onTypeConflict, mergeTypes, typeMergingOptions, }) {\n    const typeMap = Object.create(null);\n    for (const typeName in typeCandidates) {\n        if (rootTypeNames.includes(typeName) ||\n            (mergeTypes === true &&\n                !typeCandidates[typeName].some(candidate => (0,graphql__WEBPACK_IMPORTED_MODULE_9__.isSpecifiedScalarType)(candidate.type))) ||\n            (typeof mergeTypes === 'function' && mergeTypes(typeCandidates[typeName], typeName)) ||\n            (Array.isArray(mergeTypes) && mergeTypes.includes(typeName)) ||\n            (stitchingInfo != null && typeName in stitchingInfo.mergedTypes)) {\n            typeMap[typeName] = (0,_mergeCandidates_js__WEBPACK_IMPORTED_MODULE_10__.mergeCandidates)(typeName, typeCandidates[typeName], typeMergingOptions);\n        }\n        else {\n            const candidateSelector = onTypeConflict != null\n                ? onTypeConflictToCandidateSelector(onTypeConflict)\n                : (cands) => cands[cands.length - 1];\n            typeMap[typeName] = candidateSelector(typeCandidates[typeName]).type;\n        }\n    }\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_11__.rewireTypes)(typeMap, directives);\n}\nfunction onTypeConflictToCandidateSelector(onTypeConflict) {\n    return cands => cands.reduce((prev, next) => {\n        const type = onTypeConflict(prev.type, next.type, {\n            left: {\n                subschema: prev.subschema,\n                transformedSubschema: prev.transformedSubschema,\n            },\n            right: {\n                subschema: next.subschema,\n                transformedSubschema: next.transformedSubschema,\n            },\n        });\n        if (prev.type === type) {\n            return prev;\n        }\n        else if (next.type === type) {\n            return next;\n        }\n        return {\n            schemaName: 'unknown',\n            type,\n        };\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/typeCandidates.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/typeFromAST.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/typeFromAST.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromASTUntyped.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/comments.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nconst backcompatOptions = { commentDescriptions: true };\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (typeFromAST);\nfunction typeFromAST(node) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_TYPE_DEFINITION:\n            return makeObjectType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INTERFACE_TYPE_DEFINITION:\n            return makeInterfaceType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ENUM_TYPE_DEFINITION:\n            return makeEnumType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.UNION_TYPE_DEFINITION:\n            return makeUnionType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.SCALAR_TYPE_DEFINITION:\n            return makeScalarType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INPUT_OBJECT_TYPE_DEFINITION:\n            return makeInputObjectType(node);\n        case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DIRECTIVE_DEFINITION:\n            return makeDirective(node);\n        default:\n            return null;\n    }\n}\nfunction makeObjectType(node) {\n    const config = {\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        interfaces: () => node.interfaces?.map(iface => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createNamedStub)(iface.name.value, 'interface')) || [],\n        fields: () => (node.fields != null ? makeFields(node.fields) : {}),\n        astNode: node,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLObjectType(config);\n}\nfunction makeInterfaceType(node) {\n    const config = {\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        interfaces: () => node.interfaces?.map(iface => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createNamedStub)(iface.name.value, 'interface')),\n        fields: () => (node.fields != null ? makeFields(node.fields) : {}),\n        astNode: node,\n    };\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInterfaceType(config);\n}\nfunction makeEnumType(node) {\n    const values = node.values?.reduce((prev, value) => ({\n        ...prev,\n        [value.name.value]: {\n            description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(value, backcompatOptions),\n            deprecationReason: getDeprecationReason(value),\n            astNode: value,\n        },\n    }), {}) ?? {};\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLEnumType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        values,\n        astNode: node,\n    });\n}\nfunction makeUnionType(node) {\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLUnionType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        types: () => node.types?.map(type => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createNamedStub)(type.name.value, 'object')) ?? [],\n        astNode: node,\n    });\n}\nfunction makeScalarType(node) {\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLScalarType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        astNode: node,\n        // TODO: serialize default property setting can be dropped once\n        // upstream graphql-js TypeScript typings are updated, likely in v16\n        serialize: value => value,\n    });\n}\nfunction makeInputObjectType(node) {\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInputObjectType({\n        name: node.name.value,\n        description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n        fields: () => (node.fields ? makeValues(node.fields) : {}),\n        astNode: node,\n    });\n}\nfunction makeFields(nodes) {\n    return nodes.reduce((prev, node) => ({\n        ...prev,\n        [node.name.value]: {\n            type: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createStub)(node.type, 'output'),\n            description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n            args: makeValues(node.arguments ?? []),\n            deprecationReason: getDeprecationReason(node),\n            astNode: node,\n        },\n    }), {});\n}\nfunction makeValues(nodes) {\n    return nodes.reduce((prev, node) => ({\n        ...prev,\n        [node.name.value]: {\n            type: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createStub)(node.type, 'input'),\n            defaultValue: node.defaultValue !== undefined ? (0,graphql__WEBPACK_IMPORTED_MODULE_4__.valueFromASTUntyped)(node.defaultValue) : undefined,\n            description: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getDescription)(node, backcompatOptions),\n            astNode: node,\n        },\n    }), {});\n}\nfunction isLocationValue(value) {\n    return value in graphql__WEBPACK_IMPORTED_MODULE_5__.DirectiveLocation;\n}\nfunction makeDirective(node) {\n    const locations = [];\n    for (const location of node.locations) {\n        const locationValue = location.value;\n        if (isLocationValue(locationValue)) {\n            locations.push(locationValue);\n        }\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLDirective({\n        name: node.name.value,\n        description: node.description != null ? node.description.value : null,\n        locations: locations,\n        isRepeatable: node.repeatable,\n        args: makeValues(node.arguments ?? []),\n        astNode: node,\n    });\n}\nfunction getDeprecationReason(node) {\n    const deprecated = (0,graphql__WEBPACK_IMPORTED_MODULE_7__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeprecatedDirective, node);\n    return deprecated?.['reason'];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/typeFromAST.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/esm/types.js":
/*!**********************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/esm/types.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ValidationLevel: () => (/* binding */ ValidationLevel)\n/* harmony export */ });\nvar ValidationLevel;\n(function (ValidationLevel) {\n    ValidationLevel[\"Error\"] = \"error\";\n    ValidationLevel[\"Warn\"] = \"warn\";\n    ValidationLevel[\"Off\"] = \"off\";\n})(ValidationLevel || (ValidationLevel = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBDQUEwQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9lc20vdHlwZXMuanM/OGVmYSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdmFyIFZhbGlkYXRpb25MZXZlbDtcbihmdW5jdGlvbiAoVmFsaWRhdGlvbkxldmVsKSB7XG4gICAgVmFsaWRhdGlvbkxldmVsW1wiRXJyb3JcIl0gPSBcImVycm9yXCI7XG4gICAgVmFsaWRhdGlvbkxldmVsW1wiV2FyblwiXSA9IFwid2FyblwiO1xuICAgIFZhbGlkYXRpb25MZXZlbFtcIk9mZlwiXSA9IFwib2ZmXCI7XG59KShWYWxpZGF0aW9uTGV2ZWwgfHwgKFZhbGlkYXRpb25MZXZlbCA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/esm/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batchDelegateToSchema: () => (/* binding */ batchDelegateToSchema)\n/* harmony export */ });\n/* harmony import */ var _getLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getLoader.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js\");\n\nfunction batchDelegateToSchema(options) {\n    const key = options.key;\n    if (key == null) {\n        return null;\n    }\n    else if (Array.isArray(key) && !key.length) {\n        return [];\n    }\n    const loader = (0,_getLoader_js__WEBPACK_IMPORTED_MODULE_0__.getLoader)(options);\n    return Array.isArray(key) ? loader.loadMany(key) : loader.load(key);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvYmF0Y2gtZGVsZWdhdGUvZXNtL2JhdGNoRGVsZWdhdGVUb1NjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQztBQUNwQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFTO0FBQzVCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL2VzbS9iYXRjaERlbGVnYXRlVG9TY2hlbWEuanM/MDY2MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRMb2FkZXIgfSBmcm9tICcuL2dldExvYWRlci5qcyc7XG5leHBvcnQgZnVuY3Rpb24gYmF0Y2hEZWxlZ2F0ZVRvU2NoZW1hKG9wdGlvbnMpIHtcbiAgICBjb25zdCBrZXkgPSBvcHRpb25zLmtleTtcbiAgICBpZiAoa2V5ID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoa2V5KSAmJiAha2V5Lmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gW107XG4gICAgfVxuICAgIGNvbnN0IGxvYWRlciA9IGdldExvYWRlcihvcHRpb25zKTtcbiAgICByZXR1cm4gQXJyYXkuaXNBcnJheShrZXkpID8gbG9hZGVyLmxvYWRNYW55KGtleSkgOiBsb2FkZXIubG9hZChrZXkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/batchDelegateToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js":
/*!*********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLoader: () => (/* binding */ getLoader)\n/* harmony export */ });\n/* harmony import */ var dataloader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dataloader */ \"(ssr)/../node_modules/dataloader/index.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\n\n\nfunction createBatchFn(options) {\n    const argsFromKeys = options.argsFromKeys ?? ((keys) => ({ ids: keys }));\n    const fieldName = options.fieldName ?? options.info.fieldName;\n    const { valuesFromResults, lazyOptionsFn } = options;\n    return function batchFn(keys) {\n        return new value_or_promise__WEBPACK_IMPORTED_MODULE_1__.ValueOrPromise(() => (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.delegateToSchema)({\n            returnType: new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLList((0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(options.returnType || options.info.returnType)),\n            onLocatedError: originalError => {\n                if (originalError.path == null) {\n                    return originalError;\n                }\n                const [pathFieldName, pathNumber] = originalError.path;\n                if (pathFieldName !== fieldName) {\n                    return originalError;\n                }\n                const pathNumberType = typeof pathNumber;\n                if (pathNumberType !== 'number') {\n                    return originalError;\n                }\n                return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.relocatedError)(originalError, originalError.path.slice(0, 0).concat(originalError.path.slice(2)));\n            },\n            args: argsFromKeys(keys),\n            ...(lazyOptionsFn == null ? options : lazyOptionsFn(options, keys)),\n        })).then(results => {\n            if (results instanceof Error) {\n                return keys.map(() => results);\n            }\n            const values = valuesFromResults == null ? results : valuesFromResults(results, keys);\n            return Array.isArray(values) ? values : keys.map(() => values);\n        });\n    };\n}\nconst getLoadersMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize2)(function getLoadersMap(_context, _schema) {\n    return new Map();\n});\nconst GLOBAL_CONTEXT = {};\nconst memoizedJsonStringify = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize1)(function jsonStringify(value) {\n    return JSON.stringify(value);\n});\nconst memoizedPrint = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.memoize1)(graphql__WEBPACK_IMPORTED_MODULE_6__.print);\nfunction defaultCacheKeyFn(key) {\n    if (typeof key === 'object') {\n        return memoizedJsonStringify(key);\n    }\n    return key;\n}\nfunction getLoader(options) {\n    const { schema, context, info, fieldName = info.fieldName, dataLoaderOptions, fieldNodes = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_7__.getActualFieldNodes)(info.fieldNodes[0]), selectionSet = fieldNodes[0].selectionSet, returnType = info.returnType, } = options;\n    const loaders = getLoadersMap(context ?? GLOBAL_CONTEXT, schema);\n    let cacheKey = fieldName;\n    if (returnType) {\n        const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(returnType);\n        cacheKey += '@' + namedType.name;\n    }\n    if (selectionSet != null) {\n        cacheKey += memoizedPrint(selectionSet);\n    }\n    let loader = loaders.get(cacheKey);\n    if (loader === undefined) {\n        const batchFn = createBatchFn(options);\n        loader = new dataloader__WEBPACK_IMPORTED_MODULE_0__(batchFn, {\n            // Prevents the keys to be passed with the same structure\n            cacheKeyFn: defaultCacheKeyFn,\n            ...dataLoaderOptions,\n        });\n        loaders.set(cacheKey, loader);\n    }\n    return loader;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvYmF0Y2gtZGVsZWdhdGUvZXNtL2dldExvYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBb0M7QUFDdUI7QUFDVDtBQUM4QjtBQUNOO0FBQzFFO0FBQ0EsK0RBQStELFdBQVc7QUFDMUU7QUFDQSxZQUFZLG1DQUFtQztBQUMvQztBQUNBLG1CQUFtQiw0REFBYyxPQUFPLHlFQUFnQjtBQUN4RCw0QkFBNEIsZ0RBQVcsQ0FBQyxxREFBWTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsb0VBQWM7QUFDckMsYUFBYTtBQUNiO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0Esc0JBQXNCLDhEQUFRO0FBQzlCO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsOEJBQThCLDhEQUFRO0FBQ3RDO0FBQ0EsQ0FBQztBQUNELHNCQUFzQiw4REFBUSxDQUFDLDBDQUFLO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxtRkFBbUYsNEVBQW1CLGlHQUFpRztBQUNuTjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIscURBQVk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQix1Q0FBVTtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL2JhdGNoLWRlbGVnYXRlL2VzbS9nZXRMb2FkZXIuanM/YmI4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGF0YUxvYWRlciBmcm9tICdkYXRhbG9hZGVyJztcbmltcG9ydCB7IGdldE5hbWVkVHlwZSwgR3JhcGhRTExpc3QsIHByaW50IH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBWYWx1ZU9yUHJvbWlzZSB9IGZyb20gJ3ZhbHVlLW9yLXByb21pc2UnO1xuaW1wb3J0IHsgZGVsZWdhdGVUb1NjaGVtYSwgZ2V0QWN0dWFsRmllbGROb2RlcyB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL2RlbGVnYXRlJztcbmltcG9ydCB7IG1lbW9pemUxLCBtZW1vaXplMiwgcmVsb2NhdGVkRXJyb3IgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5mdW5jdGlvbiBjcmVhdGVCYXRjaEZuKG9wdGlvbnMpIHtcbiAgICBjb25zdCBhcmdzRnJvbUtleXMgPSBvcHRpb25zLmFyZ3NGcm9tS2V5cyA/PyAoKGtleXMpID0+ICh7IGlkczoga2V5cyB9KSk7XG4gICAgY29uc3QgZmllbGROYW1lID0gb3B0aW9ucy5maWVsZE5hbWUgPz8gb3B0aW9ucy5pbmZvLmZpZWxkTmFtZTtcbiAgICBjb25zdCB7IHZhbHVlc0Zyb21SZXN1bHRzLCBsYXp5T3B0aW9uc0ZuIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBmdW5jdGlvbiBiYXRjaEZuKGtleXMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBWYWx1ZU9yUHJvbWlzZSgoKSA9PiBkZWxlZ2F0ZVRvU2NoZW1hKHtcbiAgICAgICAgICAgIHJldHVyblR5cGU6IG5ldyBHcmFwaFFMTGlzdChnZXROYW1lZFR5cGUob3B0aW9ucy5yZXR1cm5UeXBlIHx8IG9wdGlvbnMuaW5mby5yZXR1cm5UeXBlKSksXG4gICAgICAgICAgICBvbkxvY2F0ZWRFcnJvcjogb3JpZ2luYWxFcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKG9yaWdpbmFsRXJyb3IucGF0aCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBbcGF0aEZpZWxkTmFtZSwgcGF0aE51bWJlcl0gPSBvcmlnaW5hbEVycm9yLnBhdGg7XG4gICAgICAgICAgICAgICAgaWYgKHBhdGhGaWVsZE5hbWUgIT09IGZpZWxkTmFtZSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gb3JpZ2luYWxFcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aE51bWJlclR5cGUgPSB0eXBlb2YgcGF0aE51bWJlcjtcbiAgICAgICAgICAgICAgICBpZiAocGF0aE51bWJlclR5cGUgIT09ICdudW1iZXInKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbEVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gcmVsb2NhdGVkRXJyb3Iob3JpZ2luYWxFcnJvciwgb3JpZ2luYWxFcnJvci5wYXRoLnNsaWNlKDAsIDApLmNvbmNhdChvcmlnaW5hbEVycm9yLnBhdGguc2xpY2UoMikpKTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhcmdzOiBhcmdzRnJvbUtleXMoa2V5cyksXG4gICAgICAgICAgICAuLi4obGF6eU9wdGlvbnNGbiA9PSBudWxsID8gb3B0aW9ucyA6IGxhenlPcHRpb25zRm4ob3B0aW9ucywga2V5cykpLFxuICAgICAgICB9KSkudGhlbihyZXN1bHRzID0+IHtcbiAgICAgICAgICAgIGlmIChyZXN1bHRzIGluc3RhbmNlb2YgRXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ga2V5cy5tYXAoKCkgPT4gcmVzdWx0cyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB2YWx1ZXMgPSB2YWx1ZXNGcm9tUmVzdWx0cyA9PSBudWxsID8gcmVzdWx0cyA6IHZhbHVlc0Zyb21SZXN1bHRzKHJlc3VsdHMsIGtleXMpO1xuICAgICAgICAgICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWVzKSA/IHZhbHVlcyA6IGtleXMubWFwKCgpID0+IHZhbHVlcyk7XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5jb25zdCBnZXRMb2FkZXJzTWFwID0gbWVtb2l6ZTIoZnVuY3Rpb24gZ2V0TG9hZGVyc01hcChfY29udGV4dCwgX3NjaGVtYSkge1xuICAgIHJldHVybiBuZXcgTWFwKCk7XG59KTtcbmNvbnN0IEdMT0JBTF9DT05URVhUID0ge307XG5jb25zdCBtZW1vaXplZEpzb25TdHJpbmdpZnkgPSBtZW1vaXplMShmdW5jdGlvbiBqc29uU3RyaW5naWZ5KHZhbHVlKSB7XG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbn0pO1xuY29uc3QgbWVtb2l6ZWRQcmludCA9IG1lbW9pemUxKHByaW50KTtcbmZ1bmN0aW9uIGRlZmF1bHRDYWNoZUtleUZuKGtleSkge1xuICAgIGlmICh0eXBlb2Yga2V5ID09PSAnb2JqZWN0Jykge1xuICAgICAgICByZXR1cm4gbWVtb2l6ZWRKc29uU3RyaW5naWZ5KGtleSk7XG4gICAgfVxuICAgIHJldHVybiBrZXk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0TG9hZGVyKG9wdGlvbnMpIHtcbiAgICBjb25zdCB7IHNjaGVtYSwgY29udGV4dCwgaW5mbywgZmllbGROYW1lID0gaW5mby5maWVsZE5hbWUsIGRhdGFMb2FkZXJPcHRpb25zLCBmaWVsZE5vZGVzID0gZ2V0QWN0dWFsRmllbGROb2RlcyhpbmZvLmZpZWxkTm9kZXNbMF0pLCBzZWxlY3Rpb25TZXQgPSBmaWVsZE5vZGVzWzBdLnNlbGVjdGlvblNldCwgcmV0dXJuVHlwZSA9IGluZm8ucmV0dXJuVHlwZSwgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgbG9hZGVycyA9IGdldExvYWRlcnNNYXAoY29udGV4dCA/PyBHTE9CQUxfQ09OVEVYVCwgc2NoZW1hKTtcbiAgICBsZXQgY2FjaGVLZXkgPSBmaWVsZE5hbWU7XG4gICAgaWYgKHJldHVyblR5cGUpIHtcbiAgICAgICAgY29uc3QgbmFtZWRUeXBlID0gZ2V0TmFtZWRUeXBlKHJldHVyblR5cGUpO1xuICAgICAgICBjYWNoZUtleSArPSAnQCcgKyBuYW1lZFR5cGUubmFtZTtcbiAgICB9XG4gICAgaWYgKHNlbGVjdGlvblNldCAhPSBudWxsKSB7XG4gICAgICAgIGNhY2hlS2V5ICs9IG1lbW9pemVkUHJpbnQoc2VsZWN0aW9uU2V0KTtcbiAgICB9XG4gICAgbGV0IGxvYWRlciA9IGxvYWRlcnMuZ2V0KGNhY2hlS2V5KTtcbiAgICBpZiAobG9hZGVyID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgY29uc3QgYmF0Y2hGbiA9IGNyZWF0ZUJhdGNoRm4ob3B0aW9ucyk7XG4gICAgICAgIGxvYWRlciA9IG5ldyBEYXRhTG9hZGVyKGJhdGNoRm4sIHtcbiAgICAgICAgICAgIC8vIFByZXZlbnRzIHRoZSBrZXlzIHRvIGJlIHBhc3NlZCB3aXRoIHRoZSBzYW1lIHN0cnVjdHVyZVxuICAgICAgICAgICAgY2FjaGVLZXlGbjogZGVmYXVsdENhY2hlS2V5Rm4sXG4gICAgICAgICAgICAuLi5kYXRhTG9hZGVyT3B0aW9ucyxcbiAgICAgICAgfSk7XG4gICAgICAgIGxvYWRlcnMuc2V0KGNhY2hlS2V5LCBsb2FkZXIpO1xuICAgIH1cbiAgICByZXR1cm4gbG9hZGVyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/batch-delegate/esm/getLoader.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js":
/*!************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addResolversToSchema: () => (/* binding */ addResolversToSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/heal.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachField.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _checkForResolveTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./checkForResolveTypeResolver.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js\");\n/* harmony import */ var _extendResolversFromInterfaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extendResolversFromInterfaces.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\");\n\n\n\n\nfunction addResolversToSchema({ schema, resolvers: inputResolvers, defaultFieldResolver, resolverValidationOptions = {}, inheritResolversFromInterfaces = false, updateResolversInPlace = false, }) {\n    const { requireResolversToMatchSchema = 'error', requireResolversForResolveType } = resolverValidationOptions;\n    const resolvers = inheritResolversFromInterfaces\n        ? (0,_extendResolversFromInterfaces_js__WEBPACK_IMPORTED_MODULE_0__.extendResolversFromInterfaces)(schema, inputResolvers)\n        : inputResolvers;\n    for (const typeName in resolvers) {\n        const resolverValue = resolvers[typeName];\n        const resolverType = typeof resolverValue;\n        if (resolverType !== 'object') {\n            throw new Error(`\"${typeName}\" defined in resolvers, but has invalid value \"${resolverValue}\". The resolver's value must be of type object.`);\n        }\n        const type = schema.getType(typeName);\n        if (type == null) {\n            const msg = `\"${typeName}\" defined in resolvers, but not in schema`;\n            if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'error') {\n                if (requireResolversToMatchSchema === 'warn') {\n                    console.warn(msg);\n                }\n                continue;\n            }\n            throw new Error(msg);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type)) {\n            // allow -- without recommending -- overriding of specified scalar types\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n            const values = type.getValues();\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    !values.some(value => value.name === fieldName) &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    const msg = `${type.name}.${fieldName} was defined in resolvers, but not present within ${type.name}`;\n                    if (requireResolversToMatchSchema === 'error') {\n                        throw new Error(msg);\n                    }\n                    else {\n                        console.warn(msg);\n                    }\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__') &&\n                    requireResolversToMatchSchema &&\n                    requireResolversToMatchSchema !== 'ignore') {\n                    const msg = `${type.name}.${fieldName} was defined in resolvers, but ${type.name} is not an object or interface type`;\n                    if (requireResolversToMatchSchema === 'error') {\n                        throw new Error(msg);\n                    }\n                    else {\n                        console.warn(msg);\n                    }\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (!fieldName.startsWith('__')) {\n                    const fields = type.getFields();\n                    const field = fields[fieldName];\n                    if (field == null) {\n                        // Field present in resolver but not in schema\n                        if (requireResolversToMatchSchema && requireResolversToMatchSchema !== 'ignore') {\n                            const msg = `${typeName}.${fieldName} defined in resolvers, but not in schema`;\n                            if (requireResolversToMatchSchema === 'error') {\n                                throw new Error(msg);\n                            }\n                            else {\n                                console.error(msg);\n                            }\n                        }\n                    }\n                    else {\n                        // Field present in both the resolver and schema\n                        const fieldResolve = resolverValue[fieldName];\n                        if (typeof fieldResolve !== 'function' && typeof fieldResolve !== 'object') {\n                            throw new Error(`Resolver ${typeName}.${fieldName} must be object or function`);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    schema = updateResolversInPlace\n        ? addResolversToExistingSchema(schema, resolvers, defaultFieldResolver)\n        : createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver);\n    if (requireResolversForResolveType && requireResolversForResolveType !== 'ignore') {\n        (0,_checkForResolveTypeResolver_js__WEBPACK_IMPORTED_MODULE_3__.checkForResolveTypeResolver)(schema, requireResolversForResolveType);\n    }\n    return schema;\n}\nfunction addResolversToExistingSchema(schema, resolvers, defaultFieldResolver) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in resolvers) {\n        const type = schema.getType(typeName);\n        const resolverValue = resolvers[typeName];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isScalarType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && type.astNode != null) {\n                    type.astNode = {\n                        ...type.astNode,\n                        description: resolverValue?.astNode?.description ??\n                            type.astNode.description,\n                        directives: (type.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && type.extensionASTNodes != null) {\n                    type.extensionASTNodes = type.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else {\n                    type[fieldName] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isEnumType)(type)) {\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    config[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n                else if (fieldName === 'astNode' && config.astNode != null) {\n                    config.astNode = {\n                        ...config.astNode,\n                        description: resolverValue?.astNode?.description ??\n                            config.astNode.description,\n                        directives: (config.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                    };\n                }\n                else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                    config.extensionASTNodes = config.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                }\n                else if (fieldName === 'extensions' &&\n                    type.extensions != null &&\n                    resolverValue.extensions != null) {\n                    type.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                }\n                else if (enumValueConfigMap[fieldName]) {\n                    enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                }\n            }\n            typeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType(config);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isUnionType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                }\n            }\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isInterfaceType)(type)) {\n            for (const fieldName in resolverValue) {\n                if (fieldName.startsWith('__')) {\n                    // this is for isTypeOf and resolveType and all the other stuff.\n                    type[fieldName.substring(2)] = resolverValue[fieldName];\n                    continue;\n                }\n                const fields = type.getFields();\n                const field = fields[fieldName];\n                if (field != null) {\n                    const fieldResolve = resolverValue[fieldName];\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        field.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(field, fieldResolve);\n                    }\n                }\n            }\n        }\n    }\n    // serialize all default values prior to healing fields with new scalar/enum types.\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.forEachDefaultValue)(schema, _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.serializeInputValue);\n    // schema may have new scalar/enum types that require healing\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.healSchema)(schema);\n    // reparse all default values with new parsing functions.\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.forEachDefaultValue)(schema, _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_5__.parseInputValue);\n    if (defaultFieldResolver != null) {\n        (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.forEachField)(schema, field => {\n            if (!field.resolve) {\n                field.resolve = defaultFieldResolver;\n            }\n        });\n    }\n    return schema;\n}\nfunction createNewSchemaWithResolvers(schema, resolvers, defaultFieldResolver) {\n    schema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.SCALAR_TYPE]: type => {\n            const config = type.toConfig();\n            const resolverValue = resolvers[type.name];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type) && resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: resolverValue?.astNode?.description ??\n                                config.astNode.description,\n                            directives: (config.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else {\n                        config[fieldName] = resolverValue[fieldName];\n                    }\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLScalarType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.ENUM_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            const config = type.toConfig();\n            const enumValueConfigMap = config.values;\n            if (resolverValue != null) {\n                for (const fieldName in resolverValue) {\n                    if (fieldName.startsWith('__')) {\n                        config[fieldName.substring(2)] = resolverValue[fieldName];\n                    }\n                    else if (fieldName === 'astNode' && config.astNode != null) {\n                        config.astNode = {\n                            ...config.astNode,\n                            description: resolverValue?.astNode?.description ??\n                                config.astNode.description,\n                            directives: (config.astNode.directives ?? []).concat(resolverValue?.astNode?.directives ?? []),\n                        };\n                    }\n                    else if (fieldName === 'extensionASTNodes' && config.extensionASTNodes != null) {\n                        config.extensionASTNodes = config.extensionASTNodes.concat(resolverValue?.extensionASTNodes ?? []);\n                    }\n                    else if (fieldName === 'extensions' &&\n                        config.extensions != null &&\n                        resolverValue.extensions != null) {\n                        config.extensions = Object.assign(Object.create(null), type.extensions, resolverValue.extensions);\n                    }\n                    else if (enumValueConfigMap[fieldName]) {\n                        enumValueConfigMap[fieldName].value = resolverValue[fieldName];\n                    }\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLEnumType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.UNION_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLUnionType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.OBJECT_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__isTypeOf']) {\n                    config.isTypeOf = resolverValue['__isTypeOf'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.INTERFACE_TYPE]: type => {\n            const resolverValue = resolvers[type.name];\n            if (resolverValue != null) {\n                const config = type.toConfig();\n                if (resolverValue['__resolveType']) {\n                    config.resolveType = resolverValue['__resolveType'];\n                }\n                return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLInterfaceType(config);\n            }\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n            const resolverValue = resolvers[typeName];\n            if (resolverValue != null) {\n                const fieldResolve = resolverValue[fieldName];\n                if (fieldResolve != null) {\n                    const newFieldConfig = { ...fieldConfig };\n                    if (typeof fieldResolve === 'function') {\n                        // for convenience. Allows shorter syntax in resolver definition file\n                        newFieldConfig.resolve = fieldResolve.bind(resolverValue);\n                    }\n                    else {\n                        setFieldProperties(newFieldConfig, fieldResolve);\n                    }\n                    return newFieldConfig;\n                }\n            }\n        },\n    });\n    if (defaultFieldResolver != null) {\n        schema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_8__.mapSchema)(schema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_9__.MapperKind.OBJECT_FIELD]: fieldConfig => ({\n                ...fieldConfig,\n                resolve: fieldConfig.resolve != null ? fieldConfig.resolve : defaultFieldResolver,\n            }),\n        });\n    }\n    return schema;\n}\nfunction setFieldProperties(field, propertiesObj) {\n    for (const propertyName in propertiesObj) {\n        field[propertyName] = propertiesObj[propertyName];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/addResolversToSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js":
/*!**************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assertResolversPresent: () => (/* binding */ assertResolversPresent)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachField.js\");\n\n\nfunction assertResolversPresent(schema, resolverValidationOptions = {}) {\n    const { requireResolversForArgs, requireResolversForNonScalar, requireResolversForAllFields } = resolverValidationOptions;\n    if (requireResolversForAllFields && (requireResolversForArgs || requireResolversForNonScalar)) {\n        throw new TypeError('requireResolversForAllFields takes precedence over the more specific assertions. ' +\n            'Please configure either requireResolversForAllFields or requireResolversForArgs / ' +\n            'requireResolversForNonScalar, but not a combination of them.');\n    }\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.forEachField)(schema, (field, typeName, fieldName) => {\n        // requires a resolver for *every* field.\n        if (requireResolversForAllFields) {\n            expectResolver('requireResolversForAllFields', requireResolversForAllFields, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that has arguments\n        if (requireResolversForArgs && field.args.length > 0) {\n            expectResolver('requireResolversForArgs', requireResolversForArgs, field, typeName, fieldName);\n        }\n        // requires a resolver on every field that returns a non-scalar type\n        if (requireResolversForNonScalar !== 'ignore' && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)((0,graphql__WEBPACK_IMPORTED_MODULE_1__.getNamedType)(field.type))) {\n            expectResolver('requireResolversForNonScalar', requireResolversForNonScalar, field, typeName, fieldName);\n        }\n    });\n}\nfunction expectResolver(validator, behavior, field, typeName, fieldName) {\n    if (!field.resolve) {\n        const message = `Resolver missing for \"${typeName}.${fieldName}\".\nTo disable this validator, use:\n  resolverValidationOptions: {\n    ${validator}: 'ignore'\n  }`;\n        if (behavior === 'error') {\n            throw new Error(message);\n        }\n        if (behavior === 'warn') {\n            console.warn(message);\n        }\n        return;\n    }\n    if (typeof field.resolve !== 'function') {\n        throw new Error(`Resolver \"${typeName}.${fieldName}\" must be a function`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9hc3NlcnRSZXNvbHZlcnNQcmVzZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFxRDtBQUNEO0FBQzdDLHNFQUFzRTtBQUM3RSxZQUFZLHNGQUFzRjtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSxrRUFBWTtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBMEQscURBQVksQ0FBQyxxREFBWTtBQUNuRjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLGlEQUFpRCxTQUFTLEdBQUcsVUFBVTtBQUN2RTtBQUNBO0FBQ0EsTUFBTSxVQUFVO0FBQ2hCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUMsU0FBUyxHQUFHLFVBQVU7QUFDM0Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9hc3NlcnRSZXNvbHZlcnNQcmVzZW50LmpzPzZhNWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFtZWRUeXBlLCBpc1NjYWxhclR5cGUgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGZvckVhY2hGaWVsZCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRSZXNvbHZlcnNQcmVzZW50KHNjaGVtYSwgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgeyByZXF1aXJlUmVzb2x2ZXJzRm9yQXJncywgcmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhciwgcmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcyB9ID0gcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucztcbiAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcyAmJiAocmVxdWlyZVJlc29sdmVyc0ZvckFyZ3MgfHwgcmVxdWlyZVJlc29sdmVyc0Zvck5vblNjYWxhcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcigncmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcyB0YWtlcyBwcmVjZWRlbmNlIG92ZXIgdGhlIG1vcmUgc3BlY2lmaWMgYXNzZXJ0aW9ucy4gJyArXG4gICAgICAgICAgICAnUGxlYXNlIGNvbmZpZ3VyZSBlaXRoZXIgcmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcyBvciByZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyAvICcgK1xuICAgICAgICAgICAgJ3JlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIsIGJ1dCBub3QgYSBjb21iaW5hdGlvbiBvZiB0aGVtLicpO1xuICAgIH1cbiAgICBmb3JFYWNoRmllbGQoc2NoZW1hLCAoZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpID0+IHtcbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlciBmb3IgKmV2ZXJ5KiBmaWVsZC5cbiAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JBbGxGaWVsZHMpIHtcbiAgICAgICAgICAgIGV4cGVjdFJlc29sdmVyKCdyZXF1aXJlUmVzb2x2ZXJzRm9yQWxsRmllbGRzJywgcmVxdWlyZVJlc29sdmVyc0ZvckFsbEZpZWxkcywgZmllbGQsIHR5cGVOYW1lLCBmaWVsZE5hbWUpO1xuICAgICAgICB9XG4gICAgICAgIC8vIHJlcXVpcmVzIGEgcmVzb2x2ZXIgb24gZXZlcnkgZmllbGQgdGhhdCBoYXMgYXJndW1lbnRzXG4gICAgICAgIGlmIChyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncyAmJiBmaWVsZC5hcmdzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIGV4cGVjdFJlc29sdmVyKCdyZXF1aXJlUmVzb2x2ZXJzRm9yQXJncycsIHJlcXVpcmVSZXNvbHZlcnNGb3JBcmdzLCBmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgLy8gcmVxdWlyZXMgYSByZXNvbHZlciBvbiBldmVyeSBmaWVsZCB0aGF0IHJldHVybnMgYSBub24tc2NhbGFyIHR5cGVcbiAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXIgIT09ICdpZ25vcmUnICYmICFpc1NjYWxhclR5cGUoZ2V0TmFtZWRUeXBlKGZpZWxkLnR5cGUpKSkge1xuICAgICAgICAgICAgZXhwZWN0UmVzb2x2ZXIoJ3JlcXVpcmVSZXNvbHZlcnNGb3JOb25TY2FsYXInLCByZXF1aXJlUmVzb2x2ZXJzRm9yTm9uU2NhbGFyLCBmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGV4cGVjdFJlc29sdmVyKHZhbGlkYXRvciwgYmVoYXZpb3IsIGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKSB7XG4gICAgaWYgKCFmaWVsZC5yZXNvbHZlKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgUmVzb2x2ZXIgbWlzc2luZyBmb3IgXCIke3R5cGVOYW1lfS4ke2ZpZWxkTmFtZX1cIi5cblRvIGRpc2FibGUgdGhpcyB2YWxpZGF0b3IsIHVzZTpcbiAgcmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9uczoge1xuICAgICR7dmFsaWRhdG9yfTogJ2lnbm9yZSdcbiAgfWA7XG4gICAgICAgIGlmIChiZWhhdmlvciA9PT0gJ2Vycm9yJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChiZWhhdmlvciA9PT0gJ3dhcm4nKSB7XG4gICAgICAgICAgICBjb25zb2xlLndhcm4obWVzc2FnZSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGZpZWxkLnJlc29sdmUgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXNvbHZlciBcIiR7dHlwZU5hbWV9LiR7ZmllbGROYW1lfVwiIG11c3QgYmUgYSBmdW5jdGlvbmApO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/assertResolversPresent.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js":
/*!*******************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js ***!
  \*******************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkForResolveTypeResolver: () => (/* binding */ checkForResolveTypeResolver)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n\n// If we have any union or interface types throw if no there is no resolveType resolver\nfunction checkForResolveTypeResolver(schema, requireResolversForResolveType) {\n    (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ABSTRACT_TYPE]: type => {\n            if (!type.resolveType) {\n                const message = `Type \"${type.name}\" is missing a \"__resolveType\" resolver. Pass 'ignore' into ` +\n                    '\"resolverValidationOptions.requireResolversForResolveType\" to disable this error.';\n                if (requireResolversForResolveType === 'error') {\n                    throw new Error(message);\n                }\n                if (requireResolversForResolveType === 'warn') {\n                    console.warn(message);\n                }\n            }\n            return undefined;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9jaGVja0ZvclJlc29sdmVUeXBlUmVzb2x2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZEO0FBQzdEO0FBQ087QUFDUCxJQUFJLCtEQUFTO0FBQ2IsU0FBUyw0REFBVTtBQUNuQjtBQUNBLHlDQUF5QyxVQUFVO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyLmpzPzk0MGIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFwcGVyS2luZCwgbWFwU2NoZW1hIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuLy8gSWYgd2UgaGF2ZSBhbnkgdW5pb24gb3IgaW50ZXJmYWNlIHR5cGVzIHRocm93IGlmIG5vIHRoZXJlIGlzIG5vIHJlc29sdmVUeXBlIHJlc29sdmVyXG5leHBvcnQgZnVuY3Rpb24gY2hlY2tGb3JSZXNvbHZlVHlwZVJlc29sdmVyKHNjaGVtYSwgcmVxdWlyZVJlc29sdmVyc0ZvclJlc29sdmVUeXBlKSB7XG4gICAgbWFwU2NoZW1hKHNjaGVtYSwge1xuICAgICAgICBbTWFwcGVyS2luZC5BQlNUUkFDVF9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICBpZiAoIXR5cGUucmVzb2x2ZVR5cGUpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBtZXNzYWdlID0gYFR5cGUgXCIke3R5cGUubmFtZX1cIiBpcyBtaXNzaW5nIGEgXCJfX3Jlc29sdmVUeXBlXCIgcmVzb2x2ZXIuIFBhc3MgJ2lnbm9yZScgaW50byBgICtcbiAgICAgICAgICAgICAgICAgICAgJ1wicmVzb2x2ZXJWYWxpZGF0aW9uT3B0aW9ucy5yZXF1aXJlUmVzb2x2ZXJzRm9yUmVzb2x2ZVR5cGVcIiB0byBkaXNhYmxlIHRoaXMgZXJyb3IuJztcbiAgICAgICAgICAgICAgICBpZiAocmVxdWlyZVJlc29sdmVyc0ZvclJlc29sdmVUeXBlID09PSAnZXJyb3InKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHJlcXVpcmVSZXNvbHZlcnNGb3JSZXNvbHZlVHlwZSA9PT0gJ3dhcm4nKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUud2FybihtZXNzYWdlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/checkForResolveTypeResolver.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js":
/*!*********************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js ***!
  \*********************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extendResolversFromInterfaces: () => (/* binding */ extendResolversFromInterfaces)\n/* harmony export */ });\nfunction extendResolversFromInterfaces(schema, resolvers) {\n    const extendedResolvers = {};\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if ('getInterfaces' in type) {\n            extendedResolvers[typeName] = {};\n            for (const iFace of type.getInterfaces()) {\n                if (resolvers[iFace.name]) {\n                    for (const fieldName in resolvers[iFace.name]) {\n                        if (fieldName === '__isTypeOf' || !fieldName.startsWith('__')) {\n                            extendedResolvers[typeName][fieldName] = resolvers[iFace.name][fieldName];\n                        }\n                    }\n                }\n            }\n            const typeResolvers = resolvers[typeName];\n            extendedResolvers[typeName] = {\n                ...extendedResolvers[typeName],\n                ...typeResolvers,\n            };\n        }\n        else {\n            const typeResolvers = resolvers[typeName];\n            if (typeResolvers != null) {\n                extendedResolvers[typeName] = typeResolvers;\n            }\n        }\n    }\n    return extendedResolvers;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc2NoZW1hL2VzbS9leHRlbmRSZXNvbHZlcnNGcm9tSW50ZXJmYWNlcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3NjaGVtYS9lc20vZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMuanM/NjY1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZXh0ZW5kUmVzb2x2ZXJzRnJvbUludGVyZmFjZXMoc2NoZW1hLCByZXNvbHZlcnMpIHtcbiAgICBjb25zdCBleHRlbmRlZFJlc29sdmVycyA9IHt9O1xuICAgIGNvbnN0IHR5cGVNYXAgPSBzY2hlbWEuZ2V0VHlwZU1hcCgpO1xuICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gdHlwZU1hcCkge1xuICAgICAgICBjb25zdCB0eXBlID0gdHlwZU1hcFt0eXBlTmFtZV07XG4gICAgICAgIGlmICgnZ2V0SW50ZXJmYWNlcycgaW4gdHlwZSkge1xuICAgICAgICAgICAgZXh0ZW5kZWRSZXNvbHZlcnNbdHlwZU5hbWVdID0ge307XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGlGYWNlIG9mIHR5cGUuZ2V0SW50ZXJmYWNlcygpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc29sdmVyc1tpRmFjZS5uYW1lXSkge1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiByZXNvbHZlcnNbaUZhY2UubmFtZV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZE5hbWUgPT09ICdfX2lzVHlwZU9mJyB8fCAhZmllbGROYW1lLnN0YXJ0c1dpdGgoJ19fJykpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV1bZmllbGROYW1lXSA9IHJlc29sdmVyc1tpRmFjZS5uYW1lXVtmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHlwZVJlc29sdmVycyA9IHJlc29sdmVyc1t0eXBlTmFtZV07XG4gICAgICAgICAgICBleHRlbmRlZFJlc29sdmVyc1t0eXBlTmFtZV0gPSB7XG4gICAgICAgICAgICAgICAgLi4uZXh0ZW5kZWRSZXNvbHZlcnNbdHlwZU5hbWVdLFxuICAgICAgICAgICAgICAgIC4uLnR5cGVSZXNvbHZlcnMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgdHlwZVJlc29sdmVycyA9IHJlc29sdmVyc1t0eXBlTmFtZV07XG4gICAgICAgICAgICBpZiAodHlwZVJlc29sdmVycyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZXh0ZW5kZWRSZXNvbHZlcnNbdHlwZU5hbWVdID0gdHlwZVJlc29sdmVycztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZXh0ZW5kZWRSZXNvbHZlcnM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/schema/esm/extendResolversFromInterfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js":
/*!*****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccumulatorMap: () => (/* binding */ AccumulatorMap)\n/* harmony export */ });\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n    get [Symbol.toStringTag]() {\n        return 'AccumulatorMap';\n    }\n    add(key, item) {\n        const group = this.get(key);\n        if (group === undefined) {\n            this.set(key, [item]);\n        }\n        else {\n            group.push(item);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0FjY3VtdWxhdG9yTWFwLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vQWNjdW11bGF0b3JNYXAuanM/OWZlMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEVTNiBNYXAgd2l0aCBhZGRpdGlvbmFsIGBhZGRgIG1ldGhvZCB0byBhY2N1bXVsYXRlIGl0ZW1zLlxuICovXG5leHBvcnQgY2xhc3MgQWNjdW11bGF0b3JNYXAgZXh0ZW5kcyBNYXAge1xuICAgIGdldCBbU3ltYm9sLnRvU3RyaW5nVGFnXSgpIHtcbiAgICAgICAgcmV0dXJuICdBY2N1bXVsYXRvck1hcCc7XG4gICAgfVxuICAgIGFkZChrZXksIGl0ZW0pIHtcbiAgICAgICAgY29uc3QgZ3JvdXAgPSB0aGlzLmdldChrZXkpO1xuICAgICAgICBpZiAoZ3JvdXAgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhpcy5zZXQoa2V5LCBbaXRlbV0pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZ3JvdXAucHVzaChpdGVtKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperKind: () => (/* binding */ MapperKind)\n/* harmony export */ });\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind || (MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0ludGVyZmFjZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vSW50ZXJmYWNlcy5qcz9mOWJkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgTWFwcGVyS2luZDtcbihmdW5jdGlvbiAoTWFwcGVyS2luZCkge1xuICAgIE1hcHBlcktpbmRbXCJUWVBFXCJdID0gXCJNYXBwZXJLaW5kLlRZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiU0NBTEFSX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuU0NBTEFSX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiRU5VTV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkVOVU1fVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJDT01QT1NJVEVfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5DT01QT1NJVEVfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJPQkpFQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5PQkpFQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlBVVF9PQkpFQ1RfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJBQlNUUkFDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkFCU1RSQUNUX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiVU5JT05fVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5VTklPTl9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIklOVEVSRkFDRV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLklOVEVSRkFDRV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIlJPT1RfT0JKRUNUXCJdID0gXCJNYXBwZXJLaW5kLlJPT1RfT0JKRUNUXCI7XG4gICAgTWFwcGVyS2luZFtcIlFVRVJZXCJdID0gXCJNYXBwZXJLaW5kLlFVRVJZXCI7XG4gICAgTWFwcGVyS2luZFtcIk1VVEFUSU9OXCJdID0gXCJNYXBwZXJLaW5kLk1VVEFUSU9OXCI7XG4gICAgTWFwcGVyS2luZFtcIlNVQlNDUklQVElPTlwiXSA9IFwiTWFwcGVyS2luZC5TVUJTQ1JJUFRJT05cIjtcbiAgICBNYXBwZXJLaW5kW1wiRElSRUNUSVZFXCJdID0gXCJNYXBwZXJLaW5kLkRJUkVDVElWRVwiO1xuICAgIE1hcHBlcktpbmRbXCJGSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJDT01QT1NJVEVfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuQ09NUE9TSVRFX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIk9CSkVDVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5PQkpFQ1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIlFVRVJZX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuUVVFUllfUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJNVVRBVElPTl9ST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLk1VVEFUSU9OX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiU1VCU0NSSVBUSU9OX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuU1VCU0NSSVBUSU9OX1JPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5URVJGQUNFX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLklOVEVSRkFDRV9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlBVVF9PQkpFQ1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuSU5QVVRfT0JKRUNUX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIkFSR1VNRU5UXCJdID0gXCJNYXBwZXJLaW5kLkFSR1VNRU5UXCI7XG4gICAgTWFwcGVyS2luZFtcIkVOVU1fVkFMVUVcIl0gPSBcIk1hcHBlcktpbmQuRU5VTV9WQUxVRVwiO1xufSkoTWFwcGVyS2luZCB8fCAoTWFwcGVyS2luZCA9IHt9KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/collectFields.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/collectFields.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectFields: () => (/* binding */ collectFields),\n/* harmony export */   collectSubFields: () => (/* binding */ collectSubFields),\n/* harmony export */   doesFragmentConditionMatch: () => (/* binding */ doesFragmentConditionMatch),\n/* harmony export */   getDeferValues: () => (/* binding */ getDeferValues),\n/* harmony export */   getFieldEntryKey: () => (/* binding */ getFieldEntryKey),\n/* harmony export */   shouldIncludeNode: () => (/* binding */ shouldIncludeNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccumulatorMap.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\n\nfunction collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                fields.add(getFieldEntryKey(selection), selection);\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (visitedFragmentNames.has(fragName) && !defer) {\n                    continue;\n                }\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                if (!defer) {\n                    visitedFragmentNames.add(fragName);\n                }\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n        }\n    }\n}\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n */\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet) {\n    const fields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const patches = [];\n    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, new Set());\n    return { fields, patches };\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSkipDirective, node, variableValues);\n    if (skip?.['if'] === true) {\n        return false;\n    }\n    const include = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLIncludeDirective, node, variableValues);\n    if (include?.['if'] === false) {\n        return false;\n    }\n    return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.typeFromAST)(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_5__.isAbstractType)(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Returns an object containing the `@defer` arguments if a field should be\n * deferred based on the experimental flag, defer directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getDeferValues(variableValues, node) {\n    const defer = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(_directives_js__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeferDirective, node, variableValues);\n    if (!defer) {\n        return;\n    }\n    if (defer['if'] === false) {\n        return;\n    }\n    return {\n        label: typeof defer['label'] === 'string' ? defer['label'] : undefined,\n    };\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n */\nconst collectSubFields = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_7__.memoize5)(function collectSubfields(schema, fragments, variableValues, returnType, fieldNodes) {\n    const subFieldNodes = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const visitedFragmentNames = new Set();\n    const subPatches = [];\n    const subFieldsAndPatches = {\n        fields: subFieldNodes,\n        patches: subPatches,\n    };\n    for (const node of fieldNodes) {\n        if (node.selectionSet) {\n            collectFieldsImpl(schema, fragments, variableValues, returnType, node.selectionSet, subFieldNodes, subPatches, visitedFragmentNames);\n        }\n    }\n    return subFieldsAndPatches;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/collectFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/comments.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/comments.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectComment: () => (/* binding */ collectComment),\n/* harmony export */   dedentBlockStringValue: () => (/* binding */ dedentBlockStringValue),\n/* harmony export */   getBlockStringIndentation: () => (/* binding */ getBlockStringIndentation),\n/* harmony export */   getComment: () => (/* binding */ getComment),\n/* harmony export */   getDescription: () => (/* binding */ getDescription),\n/* harmony export */   getLeadingCommentBlock: () => (/* binding */ getLeadingCommentBlock),\n/* harmony export */   printComment: () => (/* binding */ printComment),\n/* harmony export */   printWithComments: () => (/* binding */ printWithComments),\n/* harmony export */   pushComment: () => (/* binding */ pushComment),\n/* harmony export */   resetComments: () => (/* binding */ resetComments)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/tokenKind.mjs\");\n\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nfunction resetComments() {\n    commentsRegistry = {};\n}\nfunction collectComment(node) {\n    const entityName = node.name?.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nfunction pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nfunction printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    return maybeArray?.some(str => str.includes('\\n')) ?? false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, parent?.name?.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend type',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join([\n            'extend interface',\n            name,\n            wrap('implements ', join(interfaces, ' & ')),\n            join(directives, ' '),\n            block(fields),\n        ], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction printWithComments(ast) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(ast, printDocASTReducerWithComments);\n}\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options?.commentDescriptions) {\n        return getComment(node);\n    }\n}\nfunction getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\n/**\n * @internal\n */\nfunction getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/comments.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/directives.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/directives.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLDeferDirective: () => (/* binding */ GraphQLDeferDirective),\n/* harmony export */   GraphQLStreamDirective: () => (/* binding */ GraphQLStreamDirective)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n\n/**\n * Used to conditionally defer fragments.\n */\nconst GraphQLDeferDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'defer',\n    description: 'Directs the executor to defer this fragment when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FRAGMENT_SPREAD, graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.INLINE_FRAGMENT],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Deferred when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n    },\n});\n/**\n * Used to conditionally stream list fields.\n */\nconst GraphQLStreamDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'stream',\n    description: 'Directs the executor to stream plural fields when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FIELD],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Stream when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n        initialCount: {\n            defaultValue: 0,\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInt,\n            description: 'Number of items to return immediately',\n        },\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2RpcmVjdGl2ZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTBIO0FBQzFIO0FBQ0E7QUFDQTtBQUNPLGtDQUFrQyxxREFBZ0I7QUFDekQ7QUFDQTtBQUNBLGdCQUFnQixzREFBaUIsa0JBQWtCLHNEQUFpQjtBQUNwRTtBQUNBO0FBQ0Esc0JBQXNCLG1EQUFjLENBQUMsbURBQWM7QUFDbkQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLGtCQUFrQixrREFBYTtBQUMvQjtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNPLG1DQUFtQyxxREFBZ0I7QUFDMUQ7QUFDQTtBQUNBLGdCQUFnQixzREFBaUI7QUFDakM7QUFDQTtBQUNBLHNCQUFzQixtREFBYyxDQUFDLG1EQUFjO0FBQ25EO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxrQkFBa0Isa0RBQWE7QUFDL0I7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGtCQUFrQiwrQ0FBVTtBQUM1QjtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2RpcmVjdGl2ZXMuanM/YTllNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmVMb2NhdGlvbiwgR3JhcGhRTEJvb2xlYW4sIEdyYXBoUUxEaXJlY3RpdmUsIEdyYXBoUUxJbnQsIEdyYXBoUUxOb25OdWxsLCBHcmFwaFFMU3RyaW5nLCB9IGZyb20gJ2dyYXBocWwnO1xuLyoqXG4gKiBVc2VkIHRvIGNvbmRpdGlvbmFsbHkgZGVmZXIgZnJhZ21lbnRzLlxuICovXG5leHBvcnQgY29uc3QgR3JhcGhRTERlZmVyRGlyZWN0aXZlID0gbmV3IEdyYXBoUUxEaXJlY3RpdmUoe1xuICAgIG5hbWU6ICdkZWZlcicsXG4gICAgZGVzY3JpcHRpb246ICdEaXJlY3RzIHRoZSBleGVjdXRvciB0byBkZWZlciB0aGlzIGZyYWdtZW50IHdoZW4gdGhlIGBpZmAgYXJndW1lbnQgaXMgdHJ1ZSBvciB1bmRlZmluZWQuJyxcbiAgICBsb2NhdGlvbnM6IFtEaXJlY3RpdmVMb2NhdGlvbi5GUkFHTUVOVF9TUFJFQUQsIERpcmVjdGl2ZUxvY2F0aW9uLklOTElORV9GUkFHTUVOVF0sXG4gICAgYXJnczoge1xuICAgICAgICBpZjoge1xuICAgICAgICAgICAgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxCb29sZWFuKSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnRGVmZXJyZWQgd2hlbiB0cnVlIG9yIHVuZGVmaW5lZC4nLFxuICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiB0cnVlLFxuICAgICAgICB9LFxuICAgICAgICBsYWJlbDoge1xuICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnVW5pcXVlIG5hbWUnLFxuICAgICAgICB9LFxuICAgIH0sXG59KTtcbi8qKlxuICogVXNlZCB0byBjb25kaXRpb25hbGx5IHN0cmVhbSBsaXN0IGZpZWxkcy5cbiAqL1xuZXhwb3J0IGNvbnN0IEdyYXBoUUxTdHJlYW1EaXJlY3RpdmUgPSBuZXcgR3JhcGhRTERpcmVjdGl2ZSh7XG4gICAgbmFtZTogJ3N0cmVhbScsXG4gICAgZGVzY3JpcHRpb246ICdEaXJlY3RzIHRoZSBleGVjdXRvciB0byBzdHJlYW0gcGx1cmFsIGZpZWxkcyB3aGVuIHRoZSBgaWZgIGFyZ3VtZW50IGlzIHRydWUgb3IgdW5kZWZpbmVkLicsXG4gICAgbG9jYXRpb25zOiBbRGlyZWN0aXZlTG9jYXRpb24uRklFTERdLFxuICAgIGFyZ3M6IHtcbiAgICAgICAgaWY6IHtcbiAgICAgICAgICAgIHR5cGU6IG5ldyBHcmFwaFFMTm9uTnVsbChHcmFwaFFMQm9vbGVhbiksXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1N0cmVhbSB3aGVuIHRydWUgb3IgdW5kZWZpbmVkLicsXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICB0eXBlOiBHcmFwaFFMU3RyaW5nLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdVbmlxdWUgbmFtZScsXG4gICAgICAgIH0sXG4gICAgICAgIGluaXRpYWxDb3VudDoge1xuICAgICAgICAgICAgZGVmYXVsdFZhbHVlOiAwLFxuICAgICAgICAgICAgdHlwZTogR3JhcGhRTEludCxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnTnVtYmVyIG9mIGl0ZW1zIHRvIHJldHVybiBpbW1lZGlhdGVseScsXG4gICAgICAgIH0sXG4gICAgfSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/errors.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2Vycm9ycy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLGdEQUFXO0FBQ25CLG1CQUFtQixpREFBWTtBQUMvQjtBQUNBLGVBQWUsaURBQVk7QUFDM0I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXJyb3JzLmpzPzg0ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTEVycm9yLCB2ZXJzaW9uSW5mbyB9IGZyb20gJ2dyYXBocWwnO1xuY29uc3QgcG9zc2libGVHcmFwaFFMRXJyb3JQcm9wZXJ0aWVzID0gW1xuICAgICdtZXNzYWdlJyxcbiAgICAnbG9jYXRpb25zJyxcbiAgICAncGF0aCcsXG4gICAgJ25vZGVzJyxcbiAgICAnc291cmNlJyxcbiAgICAncG9zaXRpb25zJyxcbiAgICAnb3JpZ2luYWxFcnJvcicsXG4gICAgJ25hbWUnLFxuICAgICdzdGFjaycsXG4gICAgJ2V4dGVuc2lvbnMnLFxuXTtcbmZ1bmN0aW9uIGlzR3JhcGhRTEVycm9yTGlrZShlcnJvcikge1xuICAgIHJldHVybiAoZXJyb3IgIT0gbnVsbCAmJlxuICAgICAgICB0eXBlb2YgZXJyb3IgPT09ICdvYmplY3QnICYmXG4gICAgICAgIE9iamVjdC5rZXlzKGVycm9yKS5ldmVyeShrZXkgPT4gcG9zc2libGVHcmFwaFFMRXJyb3JQcm9wZXJ0aWVzLmluY2x1ZGVzKGtleSkpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zPy5vcmlnaW5hbEVycm9yICYmXG4gICAgICAgICEob3B0aW9ucy5vcmlnaW5hbEVycm9yIGluc3RhbmNlb2YgRXJyb3IpICYmXG4gICAgICAgIGlzR3JhcGhRTEVycm9yTGlrZShvcHRpb25zLm9yaWdpbmFsRXJyb3IpKSB7XG4gICAgICAgIG9wdGlvbnMub3JpZ2luYWxFcnJvciA9IGNyZWF0ZUdyYXBoUUxFcnJvcihvcHRpb25zLm9yaWdpbmFsRXJyb3IubWVzc2FnZSwgb3B0aW9ucy5vcmlnaW5hbEVycm9yKTtcbiAgICB9XG4gICAgaWYgKHZlcnNpb25JbmZvLm1ham9yID49IDE3KSB7XG4gICAgICAgIHJldHVybiBuZXcgR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zPy5ub2Rlcywgb3B0aW9ucz8uc291cmNlLCBvcHRpb25zPy5wb3NpdGlvbnMsIG9wdGlvbnM/LnBhdGgsIG9wdGlvbnM/Lm9yaWdpbmFsRXJyb3IsIG9wdGlvbnM/LmV4dGVuc2lvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9jYXRlZEVycm9yKG9yaWdpbmFsRXJyb3IsIHBhdGgpIHtcbiAgICByZXR1cm4gY3JlYXRlR3JhcGhRTEVycm9yKG9yaWdpbmFsRXJyb3IubWVzc2FnZSwge1xuICAgICAgICBub2Rlczogb3JpZ2luYWxFcnJvci5ub2RlcyxcbiAgICAgICAgc291cmNlOiBvcmlnaW5hbEVycm9yLnNvdXJjZSxcbiAgICAgICAgcG9zaXRpb25zOiBvcmlnaW5hbEVycm9yLnBvc2l0aW9ucyxcbiAgICAgICAgcGF0aDogcGF0aCA9PSBudWxsID8gb3JpZ2luYWxFcnJvci5wYXRoIDogcGF0aCxcbiAgICAgICAgb3JpZ2luYWxFcnJvcixcbiAgICAgICAgZXh0ZW5zaW9uczogb3JpZ2luYWxFcnJvci5leHRlbnNpb25zLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/filterSchema.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/filterSchema.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterSchema: () => (/* binding */ filterSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _mapSchema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapSchema.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n\n\n\nfunction filterSchema({ schema, typeFilter = () => true, fieldFilter = undefined, rootFieldFilter = undefined, objectFieldFilter = undefined, interfaceFieldFilter = undefined, inputObjectFieldFilter = undefined, argumentFilter = undefined, directiveFilter = undefined, enumValueFilter = undefined, }) {\n    const filteredSchema = (0,_mapSchema_js__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.QUERY]: (type) => filterRootFields(type, 'Query', rootFieldFilter, argumentFilter),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.MUTATION]: (type) => filterRootFields(type, 'Mutation', rootFieldFilter, argumentFilter),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.SUBSCRIPTION]: (type) => filterRootFields(type, 'Subscription', rootFieldFilter, argumentFilter),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType, type, objectFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.INTERFACE_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLInterfaceType, type, interfaceFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.INPUT_OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLInputObjectType, type, inputObjectFieldFilter || fieldFilter)\n            : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.UNION_TYPE]: (type) => typeFilter(type.name, type) ? undefined : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ENUM_TYPE]: (type) => typeFilter(type.name, type) ? undefined : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.SCALAR_TYPE]: (type) => typeFilter(type.name, type) ? undefined : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.DIRECTIVE]: directive => directiveFilter && !directiveFilter(directive.name, directive) ? null : undefined,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ENUM_VALUE]: (valueConfig, typeName, _schema, externalValue) => enumValueFilter && !enumValueFilter(typeName, externalValue, valueConfig) ? null : undefined,\n    });\n    return filteredSchema;\n}\nfunction filterRootFields(type, operation, rootFieldFilter, argumentFilter) {\n    if (rootFieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (rootFieldFilter && !rootFieldFilter(operation, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && field.args) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(type.name, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType(config);\n    }\n    return type;\n}\nfunction filterElementFields(ElementConstructor, type, fieldFilter, argumentFilter) {\n    if (fieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (fieldFilter && !fieldFilter(type.name, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && 'args' in field) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(type.name, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new ElementConstructor(config);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ZpbHRlclNjaGVtYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJGO0FBQzdDO0FBQ0g7QUFDcEMsd0JBQXdCLG1SQUFtUjtBQUNsVCwyQkFBMkIsd0RBQVM7QUFDcEMsU0FBUyxzREFBVTtBQUNuQixTQUFTLHNEQUFVO0FBQ25CLFNBQVMsc0RBQVU7QUFDbkIsU0FBUyxzREFBVTtBQUNuQixrQ0FBa0Msc0RBQWlCO0FBQ25EO0FBQ0EsU0FBUyxzREFBVTtBQUNuQixrQ0FBa0MseURBQW9CO0FBQ3REO0FBQ0EsU0FBUyxzREFBVTtBQUNuQixrQ0FBa0MsMkRBQXNCO0FBQ3hEO0FBQ0EsU0FBUyxzREFBVTtBQUNuQixTQUFTLHNEQUFVO0FBQ25CLFNBQVMsc0RBQVU7QUFDbkIsU0FBUyxzREFBVTtBQUNuQixTQUFTLHNEQUFVO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0RBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZmlsdGVyU2NoZW1hLmpzP2VkYmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTElucHV0T2JqZWN0VHlwZSwgR3JhcGhRTEludGVyZmFjZVR5cGUsIEdyYXBoUUxPYmplY3RUeXBlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgTWFwcGVyS2luZCwgfSBmcm9tICcuL0ludGVyZmFjZXMuanMnO1xuaW1wb3J0IHsgbWFwU2NoZW1hIH0gZnJvbSAnLi9tYXBTY2hlbWEuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlclNjaGVtYSh7IHNjaGVtYSwgdHlwZUZpbHRlciA9ICgpID0+IHRydWUsIGZpZWxkRmlsdGVyID0gdW5kZWZpbmVkLCByb290RmllbGRGaWx0ZXIgPSB1bmRlZmluZWQsIG9iamVjdEZpZWxkRmlsdGVyID0gdW5kZWZpbmVkLCBpbnRlcmZhY2VGaWVsZEZpbHRlciA9IHVuZGVmaW5lZCwgaW5wdXRPYmplY3RGaWVsZEZpbHRlciA9IHVuZGVmaW5lZCwgYXJndW1lbnRGaWx0ZXIgPSB1bmRlZmluZWQsIGRpcmVjdGl2ZUZpbHRlciA9IHVuZGVmaW5lZCwgZW51bVZhbHVlRmlsdGVyID0gdW5kZWZpbmVkLCB9KSB7XG4gICAgY29uc3QgZmlsdGVyZWRTY2hlbWEgPSBtYXBTY2hlbWEoc2NoZW1hLCB7XG4gICAgICAgIFtNYXBwZXJLaW5kLlFVRVJZXTogKHR5cGUpID0+IGZpbHRlclJvb3RGaWVsZHModHlwZSwgJ1F1ZXJ5Jywgcm9vdEZpZWxkRmlsdGVyLCBhcmd1bWVudEZpbHRlciksXG4gICAgICAgIFtNYXBwZXJLaW5kLk1VVEFUSU9OXTogKHR5cGUpID0+IGZpbHRlclJvb3RGaWVsZHModHlwZSwgJ011dGF0aW9uJywgcm9vdEZpZWxkRmlsdGVyLCBhcmd1bWVudEZpbHRlciksXG4gICAgICAgIFtNYXBwZXJLaW5kLlNVQlNDUklQVElPTl06ICh0eXBlKSA9PiBmaWx0ZXJSb290RmllbGRzKHR5cGUsICdTdWJzY3JpcHRpb24nLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSxcbiAgICAgICAgW01hcHBlcktpbmQuT0JKRUNUX1RZUEVdOiAodHlwZSkgPT4gdHlwZUZpbHRlcih0eXBlLm5hbWUsIHR5cGUpXG4gICAgICAgICAgICA/IGZpbHRlckVsZW1lbnRGaWVsZHMoR3JhcGhRTE9iamVjdFR5cGUsIHR5cGUsIG9iamVjdEZpZWxkRmlsdGVyIHx8IGZpZWxkRmlsdGVyLCBhcmd1bWVudEZpbHRlcilcbiAgICAgICAgICAgIDogbnVsbCxcbiAgICAgICAgW01hcHBlcktpbmQuSU5URVJGQUNFX1RZUEVdOiAodHlwZSkgPT4gdHlwZUZpbHRlcih0eXBlLm5hbWUsIHR5cGUpXG4gICAgICAgICAgICA/IGZpbHRlckVsZW1lbnRGaWVsZHMoR3JhcGhRTEludGVyZmFjZVR5cGUsIHR5cGUsIGludGVyZmFjZUZpZWxkRmlsdGVyIHx8IGZpZWxkRmlsdGVyLCBhcmd1bWVudEZpbHRlcilcbiAgICAgICAgICAgIDogbnVsbCxcbiAgICAgICAgW01hcHBlcktpbmQuSU5QVVRfT0JKRUNUX1RZUEVdOiAodHlwZSkgPT4gdHlwZUZpbHRlcih0eXBlLm5hbWUsIHR5cGUpXG4gICAgICAgICAgICA/IGZpbHRlckVsZW1lbnRGaWVsZHMoR3JhcGhRTElucHV0T2JqZWN0VHlwZSwgdHlwZSwgaW5wdXRPYmplY3RGaWVsZEZpbHRlciB8fCBmaWVsZEZpbHRlcilcbiAgICAgICAgICAgIDogbnVsbCxcbiAgICAgICAgW01hcHBlcktpbmQuVU5JT05fVFlQRV06ICh0eXBlKSA9PiB0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSkgPyB1bmRlZmluZWQgOiBudWxsLFxuICAgICAgICBbTWFwcGVyS2luZC5FTlVNX1RZUEVdOiAodHlwZSkgPT4gdHlwZUZpbHRlcih0eXBlLm5hbWUsIHR5cGUpID8gdW5kZWZpbmVkIDogbnVsbCxcbiAgICAgICAgW01hcHBlcktpbmQuU0NBTEFSX1RZUEVdOiAodHlwZSkgPT4gdHlwZUZpbHRlcih0eXBlLm5hbWUsIHR5cGUpID8gdW5kZWZpbmVkIDogbnVsbCxcbiAgICAgICAgW01hcHBlcktpbmQuRElSRUNUSVZFXTogZGlyZWN0aXZlID0+IGRpcmVjdGl2ZUZpbHRlciAmJiAhZGlyZWN0aXZlRmlsdGVyKGRpcmVjdGl2ZS5uYW1lLCBkaXJlY3RpdmUpID8gbnVsbCA6IHVuZGVmaW5lZCxcbiAgICAgICAgW01hcHBlcktpbmQuRU5VTV9WQUxVRV06ICh2YWx1ZUNvbmZpZywgdHlwZU5hbWUsIF9zY2hlbWEsIGV4dGVybmFsVmFsdWUpID0+IGVudW1WYWx1ZUZpbHRlciAmJiAhZW51bVZhbHVlRmlsdGVyKHR5cGVOYW1lLCBleHRlcm5hbFZhbHVlLCB2YWx1ZUNvbmZpZykgPyBudWxsIDogdW5kZWZpbmVkLFxuICAgIH0pO1xuICAgIHJldHVybiBmaWx0ZXJlZFNjaGVtYTtcbn1cbmZ1bmN0aW9uIGZpbHRlclJvb3RGaWVsZHModHlwZSwgb3BlcmF0aW9uLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSB7XG4gICAgaWYgKHJvb3RGaWVsZEZpbHRlciB8fCBhcmd1bWVudEZpbHRlcikge1xuICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gY29uZmlnLmZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgaWYgKHJvb3RGaWVsZEZpbHRlciAmJiAhcm9vdEZpZWxkRmlsdGVyKG9wZXJhdGlvbiwgZmllbGROYW1lLCBjb25maWcuZmllbGRzW2ZpZWxkTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFyZ3VtZW50RmlsdGVyICYmIGZpZWxkLmFyZ3MpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZ05hbWUgaW4gZmllbGQuYXJncykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWFyZ3VtZW50RmlsdGVyKHR5cGUubmFtZSwgZmllbGROYW1lLCBhcmdOYW1lLCBmaWVsZC5hcmdzW2FyZ05hbWVdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGZpZWxkLmFyZ3NbYXJnTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMT2JqZWN0VHlwZShjb25maWcpO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZTtcbn1cbmZ1bmN0aW9uIGZpbHRlckVsZW1lbnRGaWVsZHMoRWxlbWVudENvbnN0cnVjdG9yLCB0eXBlLCBmaWVsZEZpbHRlciwgYXJndW1lbnRGaWx0ZXIpIHtcbiAgICBpZiAoZmllbGRGaWx0ZXIgfHwgYXJndW1lbnRGaWx0ZXIpIHtcbiAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBjb25maWcuZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIGlmIChmaWVsZEZpbHRlciAmJiAhZmllbGRGaWx0ZXIodHlwZS5uYW1lLCBmaWVsZE5hbWUsIGNvbmZpZy5maWVsZHNbZmllbGROYW1lXSkpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgY29uZmlnLmZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoYXJndW1lbnRGaWx0ZXIgJiYgJ2FyZ3MnIGluIGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhcmdOYW1lIGluIGZpZWxkLmFyZ3MpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFhcmd1bWVudEZpbHRlcih0eXBlLm5hbWUsIGZpZWxkTmFtZSwgYXJnTmFtZSwgZmllbGQuYXJnc1thcmdOYW1lXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBmaWVsZC5hcmdzW2FyZ05hbWVdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgRWxlbWVudENvbnN0cnVjdG9yKGNvbmZpZyk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/filterSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forEachDefaultValue: () => (/* binding */ forEachDefaultValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction forEachDefaultValue(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type).name.startsWith('__')) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    for (const arg of field.args) {\n                        arg.defaultValue = fn(arg.type, arg.defaultValue);\n                    }\n                }\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    field.defaultValue = fn(field.type, field.defaultValue);\n                }\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ZvckVhY2hEZWZhdWx0VmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0U7QUFDakU7QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLHFEQUFZO0FBQ3pCLGdCQUFnQixxREFBWTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLDBEQUFpQjtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9mb3JFYWNoRGVmYXVsdFZhbHVlLmpzPzBiOTgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFtZWRUeXBlLCBpc0lucHV0T2JqZWN0VHlwZSwgaXNPYmplY3RUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZm9yRWFjaERlZmF1bHRWYWx1ZShzY2hlbWEsIGZuKSB7XG4gICAgY29uc3QgdHlwZU1hcCA9IHNjaGVtYS5nZXRUeXBlTWFwKCk7XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiB0eXBlTWFwKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0eXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgaWYgKCFnZXROYW1lZFR5cGUodHlwZSkubmFtZS5zdGFydHNXaXRoKCdfXycpKSB7XG4gICAgICAgICAgICBpZiAoaXNPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBhcmcgb2YgZmllbGQuYXJncykge1xuICAgICAgICAgICAgICAgICAgICAgICAgYXJnLmRlZmF1bHRWYWx1ZSA9IGZuKGFyZy50eXBlLCBhcmcuZGVmYXVsdFZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzSW5wdXRPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgZmllbGQuZGVmYXVsdFZhbHVlID0gZm4oZmllbGQudHlwZSwgZmllbGQuZGVmYXVsdFZhbHVlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachField.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachField.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forEachField: () => (/* binding */ forEachField)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction forEachField(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type).name.startsWith('__') && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                fn(field, typeName, fieldName);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ZvckVhY2hGaWVsZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFxRDtBQUM5QztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxREFBWSxnQ0FBZ0MscURBQVk7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ZvckVhY2hGaWVsZC5qcz81MjY4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE5hbWVkVHlwZSwgaXNPYmplY3RUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZm9yRWFjaEZpZWxkKHNjaGVtYSwgZm4pIHtcbiAgICBjb25zdCB0eXBlTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIHR5cGVNYXApIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHR5cGVNYXBbdHlwZU5hbWVdO1xuICAgICAgICAvLyBUT0RPOiBtYXliZSBoYXZlIGFuIG9wdGlvbiB0byBpbmNsdWRlIHRoZXNlP1xuICAgICAgICBpZiAoIWdldE5hbWVkVHlwZSh0eXBlKS5uYW1lLnN0YXJ0c1dpdGgoJ19fJykgJiYgaXNPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gZmllbGRzKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICBmbihmaWVsZCwgdHlwZU5hbWUsIGZpZWxkTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/forEachField.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/get-implementing-types.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/get-implementing-types.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getImplementingTypes: () => (/* binding */ getImplementingTypes)\n/* harmony export */ });\nfunction getImplementingTypes(interfaceName, schema) {\n    const allTypesMap = schema.getTypeMap();\n    const result = [];\n    for (const graphqlTypeName in allTypesMap) {\n        const graphqlType = allTypesMap[graphqlTypeName];\n        if ('getInterfaces' in graphqlType) {\n            const allInterfaces = graphqlType.getInterfaces();\n            if (allInterfaces.find(int => int.name === interfaceName)) {\n                result.push(graphqlType.name);\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldC1pbXBsZW1lbnRpbmctdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXQtaW1wbGVtZW50aW5nLXR5cGVzLmpzPzhlYTAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldEltcGxlbWVudGluZ1R5cGVzKGludGVyZmFjZU5hbWUsIHNjaGVtYSkge1xuICAgIGNvbnN0IGFsbFR5cGVzTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGdyYXBocWxUeXBlTmFtZSBpbiBhbGxUeXBlc01hcCkge1xuICAgICAgICBjb25zdCBncmFwaHFsVHlwZSA9IGFsbFR5cGVzTWFwW2dyYXBocWxUeXBlTmFtZV07XG4gICAgICAgIGlmICgnZ2V0SW50ZXJmYWNlcycgaW4gZ3JhcGhxbFR5cGUpIHtcbiAgICAgICAgICAgIGNvbnN0IGFsbEludGVyZmFjZXMgPSBncmFwaHFsVHlwZS5nZXRJbnRlcmZhY2VzKCk7XG4gICAgICAgICAgICBpZiAoYWxsSW50ZXJmYWNlcy5maW5kKGludCA9PiBpbnQubmFtZSA9PT0gaW50ZXJmYWNlTmFtZSkpIHtcbiAgICAgICAgICAgICAgICByZXN1bHQucHVzaChncmFwaHFsVHlwZS5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/get-implementing-types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getObjectTypeFromTypeMap: () => (/* binding */ getObjectTypeFromTypeMap)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldE9iamVjdFR5cGVGcm9tVHlwZU1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF1QztBQUNoQztBQUNQO0FBQ0E7QUFDQSxZQUFZLHFEQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwLmpzP2RhYTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPYmplY3RUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwKHR5cGVNYXAsIHR5cGUpIHtcbiAgICBpZiAodHlwZSkge1xuICAgICAgICBjb25zdCBtYXliZU9iamVjdFR5cGUgPSB0eXBlTWFwW3R5cGUubmFtZV07XG4gICAgICAgIGlmIChpc09iamVjdFR5cGUobWF5YmVPYmplY3RUeXBlKSkge1xuICAgICAgICAgICAgcmV0dXJuIG1heWJlT2JqZWN0VHlwZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/heal.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/heal.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   healSchema: () => (/* binding */ healSchema),\n/* harmony export */   healTypes: () => (/* binding */ healTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\n//\n// healSchema and its callers (visitSchema/visitSchemaDirectives) all modify the schema in place.\n// Therefore, private variables (such as the stored implementation map and the proper root types)\n// are not updated.\n//\n// If this causes issues, the schema could be more aggressively healed as follows:\n//\n// healSchema(schema);\n// const config = schema.toConfig()\n// const healedSchema = new GraphQLSchema({\n//   ...config,\n//   query: schema.getType('<desired new root query type name>'),\n//   mutation: schema.getType('<desired new root mutation type name>'),\n//   subscription: schema.getType('<desired new root subscription type name>'),\n// });\n//\n// One can then also -- if necessary --  assign the correct private variables to the initial schema\n// as follows:\n// Object.assign(schema, healedSchema);\n//\n// These steps are not taken automatically to preserve backwards compatibility with graphql-tools v4.\n// See https://github.com/ardatan/graphql-tools/issues/1462\n//\n// They were briefly taken in v5, but can now be phased out as they were only required when other\n// areas of the codebase were using healSchema and visitSchema more extensively.\n//\nfunction healSchema(schema) {\n    healTypes(schema.getTypeMap(), schema.getDirectives());\n    return schema;\n}\nfunction healTypes(originalTypeMap, directives) {\n    const actualNamedTypeMap = Object.create(null);\n    // If any of the .name properties of the GraphQLNamedType objects in\n    // schema.getTypeMap() have changed, the keys of the type map need to\n    // be updated accordingly.\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const actualName = namedType.name;\n        if (actualName.startsWith('__')) {\n            continue;\n        }\n        if (actualNamedTypeMap[actualName] != null) {\n            console.warn(`Duplicate schema type name ${actualName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        actualNamedTypeMap[actualName] = namedType;\n        // Note: we are deliberately leaving namedType in the schema by its\n        // original name (which might be different from actualName), so that\n        // references by that name can be healed.\n    }\n    // Now add back every named type by its actual name.\n    for (const typeName in actualNamedTypeMap) {\n        const namedType = actualNamedTypeMap[typeName];\n        originalTypeMap[typeName] = namedType;\n    }\n    // Directive declaration argument types can refer to named types.\n    for (const decl of directives) {\n        decl.args = decl.args.filter(arg => {\n            arg.type = healType(arg.type);\n            return arg.type !== null;\n        });\n    }\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        // Heal all named types, except for dangling references, kept only to redirect.\n        if (!typeName.startsWith('__') && typeName in actualNamedTypeMap) {\n            if (namedType != null) {\n                healNamedType(namedType);\n            }\n        }\n    }\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__') && !(typeName in actualNamedTypeMap)) {\n            delete originalTypeMap[typeName];\n        }\n    }\n    function healNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n            healFields(type);\n            healInterfaces(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n            healFields(type);\n            if ('getInterfaces' in type) {\n                healInterfaces(type);\n            }\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n            healUnderlyingTypes(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n            healInputFields(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n            return;\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function healFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.args\n                .map(arg => {\n                arg.type = healType(arg.type);\n                return arg.type === null ? null : arg;\n            })\n                .filter(Boolean);\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healInterfaces(type) {\n        if ('getInterfaces' in type) {\n            const interfaces = type.getInterfaces();\n            interfaces.push(...interfaces\n                .splice(0)\n                .map(iface => healType(iface))\n                .filter(Boolean));\n        }\n    }\n    function healInputFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healUnderlyingTypes(type) {\n        const types = type.getTypes();\n        types.push(...types\n            .splice(0)\n            .map(t => healType(t))\n            .filter(Boolean));\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(healedType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(healedType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNamedType)(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            // Note that new types can still be simply added by adding a field, as\n            // the official type will be undefined, not null.\n            const officialType = originalTypeMap[type.name];\n            if (officialType && type !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/heal.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWdDO0FBQ3pCO0FBQ1A7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsOENBQUs7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanM/NGI1OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGNvbnN0IGFzQXJyYXkgPSAoZm5zKSA9PiAoQXJyYXkuaXNBcnJheShmbnMpID8gZm5zIDogZm5zID8gW2Zuc10gOiBbXSk7XG5jb25zdCBpbnZhbGlkRG9jUmVnZXggPSAvXFwuW2EtejAtOV0rJC9pO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9jdW1lbnRTdHJpbmcoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gWFhYOiBpcy12YWxpZC1wYXRoIG9yIGlzLWdsb2IgdHJlYXQgU0RMIGFzIGEgdmFsaWQgcGF0aFxuICAgIC8vIChgc2NhbGFyIERhdGVgIGZvciBleGFtcGxlKVxuICAgIC8vIHRoaXMgd2h5IGNoZWNraW5nIHRoZSBleHRlbnNpb24gaXMgZmFzdCBlbm91Z2hcbiAgICAvLyBhbmQgcHJldmVudCBmcm9tIHBhcnNpbmcgdGhlIHN0cmluZyBpbiBvcmRlciB0byBmaW5kIG91dFxuICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgYSBTRExcbiAgICBpZiAoaW52YWxpZERvY1JlZ2V4LnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHBhcnNlKHN0cik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkgeyB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuY29uc3QgaW52YWxpZFBhdGhSZWdleCA9IC9b4oCY4oCcISVePD5gXFxuXS87XG4vKipcbiAqIENoZWNrZXMgd2hldGhlciB0aGUgYHN0cmAgY29udGFpbnMgYW55IHBhdGggaWxsZWdhbCBjaGFyYWN0ZXJzLlxuICpcbiAqIEEgc3RyaW5nIG1heSBzb21ldGltZXMgbG9vayBsaWtlIGEgcGF0aCBidXQgaXMgbm90IChsaWtlIGFuIFNETCBvZiBhIHNpbXBsZVxuICogR3JhcGhRTCBzY2hlbWEpLiBUbyBtYWtlIHN1cmUgd2UgZG9uJ3QgeWllbGQgZmFsc2UtcG9zaXRpdmVzIGluIHN1Y2ggY2FzZXMsXG4gKiB3ZSBkaXNhbGxvdyBuZXcgbGluZXMgaW4gcGF0aHMgKGV2ZW4gdGhvdWdoIG1vc3QgVW5peCBzeXN0ZW1zIHN1cHBvcnQgbmV3XG4gKiBsaW5lcyBpbiBmaWxlIG5hbWVzKS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRQYXRoKHN0cikge1xuICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJiAhaW52YWxpZFBhdGhSZWdleC50ZXN0KHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVN0cmluZ3MoYSwgYikge1xuICAgIGlmIChTdHJpbmcoYSkgPCBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBpZiAoU3RyaW5nKGEpID4gU3RyaW5nKGIpKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBub2RlVG9TdHJpbmcoYSkge1xuICAgIGxldCBuYW1lO1xuICAgIGlmICgnYWxpYXMnIGluIGEpIHtcbiAgICAgICAgbmFtZSA9IGEuYWxpYXM/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsICYmICduYW1lJyBpbiBhKSB7XG4gICAgICAgIG5hbWUgPSBhLm5hbWU/LnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsKSB7XG4gICAgICAgIG5hbWUgPSBhLmtpbmQ7XG4gICAgfVxuICAgIHJldHVybiBuYW1lO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvbXBhcmVOb2RlcyhhLCBiLCBjdXN0b21Gbikge1xuICAgIGNvbnN0IGFTdHIgPSBub2RlVG9TdHJpbmcoYSk7XG4gICAgY29uc3QgYlN0ciA9IG5vZGVUb1N0cmluZyhiKTtcbiAgICBpZiAodHlwZW9mIGN1c3RvbUZuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHJldHVybiBjdXN0b21GbihhU3RyLCBiU3RyKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvbXBhcmVTdHJpbmdzKGFTdHIsIGJTdHIpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzU29tZShpbnB1dCkge1xuICAgIHJldHVybiBpbnB1dCAhPSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFzc2VydFNvbWUoaW5wdXQsIG1lc3NhZ2UgPSAnVmFsdWUgc2hvdWxkIGJlIHNvbWV0aGluZycpIHtcbiAgICBpZiAoaW5wdXQgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IobWVzc2FnZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mapSchema.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mapSchema.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correctASTNodes: () => (/* binding */ correctASTNodes),\n/* harmony export */   mapSchema: () => (/* binding */ mapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rewire_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rewire.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformInputValue.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n\n\n\n\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.serializeInputValue), schema, schemaMapper, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.parseInputValue), schema, schemaMapper, type => !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0,_rewire_js__WEBPACK_IMPORTED_MODULE_2__.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] =\n                        newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.TYPE];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_TYPE);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.UNION_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.FIELD];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_FIELD);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper ?? null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mergeDeep.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mergeDeep.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction mergeDeep(sources, respectPrototype = false, respectArrays = false, respectArrayLength = false) {\n    if (respectArrays && respectArrayLength) {\n        let expectedLength;\n        const areArraysInTheSameLength = sources.every(source => {\n            if (Array.isArray(source)) {\n                if (expectedLength === undefined) {\n                    expectedLength = source.length;\n                    return true;\n                }\n                else if (expectedLength === source.length) {\n                    return true;\n                }\n            }\n            return false;\n        });\n        if (areArraysInTheSameLength) {\n            return new Array(expectedLength).fill(null).map((_, index) => mergeDeep(sources.map(source => source[index]), respectPrototype, respectArrays, respectArrayLength));\n        }\n    }\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(sources[0])));\n    }\n    for (const source of sources) {\n        if (isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isSome)(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                    }\n                }\n                else if (respectArrays && Array.isArray(output[key])) {\n                    if (Array.isArray(source[key])) {\n                        if (respectArrayLength && output[key].length === source[key].length) {\n                            output[key] = mergeDeep([output[key], source[key]], respectPrototype, respectArrays, respectArrayLength);\n                        }\n                        else {\n                            output[key].push(...source[key]);\n                        }\n                    }\n                    else {\n                        output[key].push(source[key]);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL21lcmdlRGVlcC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzQztBQUMvQjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG1EQUFNO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnREFBZ0Qsb0JBQW9CO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDLG9CQUFvQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy9zdGl0Y2gvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tZXJnZURlZXAuanM/OWM1MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1NvbWUgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcChzb3VyY2VzLCByZXNwZWN0UHJvdG90eXBlID0gZmFsc2UsIHJlc3BlY3RBcnJheXMgPSBmYWxzZSwgcmVzcGVjdEFycmF5TGVuZ3RoID0gZmFsc2UpIHtcbiAgICBpZiAocmVzcGVjdEFycmF5cyAmJiByZXNwZWN0QXJyYXlMZW5ndGgpIHtcbiAgICAgICAgbGV0IGV4cGVjdGVkTGVuZ3RoO1xuICAgICAgICBjb25zdCBhcmVBcnJheXNJblRoZVNhbWVMZW5ndGggPSBzb3VyY2VzLmV2ZXJ5KHNvdXJjZSA9PiB7XG4gICAgICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShzb3VyY2UpKSB7XG4gICAgICAgICAgICAgICAgaWYgKGV4cGVjdGVkTGVuZ3RoID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgZXhwZWN0ZWRMZW5ndGggPSBzb3VyY2UubGVuZ3RoO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoZXhwZWN0ZWRMZW5ndGggPT09IHNvdXJjZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKGFyZUFycmF5c0luVGhlU2FtZUxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBBcnJheShleHBlY3RlZExlbmd0aCkuZmlsbChudWxsKS5tYXAoKF8sIGluZGV4KSA9PiBtZXJnZURlZXAoc291cmNlcy5tYXAoc291cmNlID0+IHNvdXJjZVtpbmRleF0pLCByZXNwZWN0UHJvdG90eXBlLCByZXNwZWN0QXJyYXlzLCByZXNwZWN0QXJyYXlMZW5ndGgpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBvdXRwdXQgPSB7fTtcbiAgICBpZiAocmVzcGVjdFByb3RvdHlwZSkge1xuICAgICAgICBPYmplY3Quc2V0UHJvdG90eXBlT2Yob3V0cHV0LCBPYmplY3QuY3JlYXRlKE9iamVjdC5nZXRQcm90b3R5cGVPZihzb3VyY2VzWzBdKSkpO1xuICAgIH1cbiAgICBmb3IgKGNvbnN0IHNvdXJjZSBvZiBzb3VyY2VzKSB7XG4gICAgICAgIGlmIChpc09iamVjdChzb3VyY2UpKSB7XG4gICAgICAgICAgICBpZiAocmVzcGVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG91dHB1dFByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvdXRwdXQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNvdXJjZVByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihzb3VyY2UpO1xuICAgICAgICAgICAgICAgIGlmIChzb3VyY2VQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoc291cmNlUHJvdG90eXBlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlUHJvdG90eXBlLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzU29tZShkZXNjcmlwdG9yKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvdXRwdXRQcm90b3R5cGUsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGtleSBpbiBvdXRwdXQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKG91dHB1dCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRba2V5XSA9IG1lcmdlRGVlcChbb3V0cHV0W2tleV0sIHNvdXJjZVtrZXldXSwgcmVzcGVjdFByb3RvdHlwZSwgcmVzcGVjdEFycmF5cywgcmVzcGVjdEFycmF5TGVuZ3RoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChyZXNwZWN0QXJyYXlzICYmIEFycmF5LmlzQXJyYXkob3V0cHV0W2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHNvdXJjZVtrZXldKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3BlY3RBcnJheUxlbmd0aCAmJiBvdXRwdXRba2V5XS5sZW5ndGggPT09IHNvdXJjZVtrZXldLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dFtrZXldID0gbWVyZ2VEZWVwKFtvdXRwdXRba2V5XSwgc291cmNlW2tleV1dLCByZXNwZWN0UHJvdG90eXBlLCByZXNwZWN0QXJyYXlzLCByZXNwZWN0QXJyYXlMZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0W2tleV0ucHVzaCguLi5zb3VyY2Vba2V5XSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRba2V5XS5wdXNoKHNvdXJjZVtrZXldKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgT2JqZWN0LmFzc2lnbihvdXRwdXQsIHsgW2tleV06IHNvdXJjZVtrZXldIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuZnVuY3Rpb24gaXNPYmplY3QoaXRlbSkge1xuICAgIHJldHVybiBpdGVtICYmIHR5cGVvZiBpdGVtID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShpdGVtKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mergeDeep.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/prune.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/prune.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pruneSchema: () => (/* binding */ pruneSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _get_implementing_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./get-implementing-types.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/get-implementing-types.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _mapSchema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapSchema.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n\n\n\n\n\n/**\n * Prunes the provided schema, removing unused and empty types\n * @param schema The schema to prune\n * @param options Additional options for removing unused types from the schema\n */\nfunction pruneSchema(schema, options = {}) {\n    const { skipEmptyCompositeTypePruning, skipEmptyUnionPruning, skipPruning, skipUnimplementedInterfacesPruning, skipUnusedTypesPruning, } = options;\n    let prunedTypes = []; // Pruned types during mapping\n    let prunedSchema = schema;\n    do {\n        let visited = visitSchema(prunedSchema);\n        // Custom pruning  was defined, so we need to pre-emptively revisit the schema accounting for this\n        if (skipPruning) {\n            const revisit = [];\n            for (const typeName in prunedSchema.getTypeMap()) {\n                if (typeName.startsWith('__')) {\n                    continue;\n                }\n                const type = prunedSchema.getType(typeName);\n                // if we want to skip pruning for this type, add it to the list of types to revisit\n                if (type && skipPruning(type)) {\n                    revisit.push(typeName);\n                }\n            }\n            visited = visitQueue(revisit, prunedSchema, visited); // visit again\n        }\n        prunedTypes = [];\n        prunedSchema = (0,_mapSchema_js__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(prunedSchema, {\n            [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.TYPE]: type => {\n                if (!visited.has(type.name) && !(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n                        // skipUnusedTypesPruning: skip pruning unused types\n                        if (skipUnusedTypesPruning) {\n                            return type;\n                        }\n                        // skipEmptyUnionPruning: skip pruning empty unions\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type) &&\n                            skipEmptyUnionPruning &&\n                            !Object.keys(type.getTypes()).length) {\n                            return type;\n                        }\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n                            // skipEmptyCompositeTypePruning: skip pruning object types or interfaces with no fields\n                            if (skipEmptyCompositeTypePruning && !Object.keys(type.getFields()).length) {\n                                return type;\n                            }\n                        }\n                        // skipUnimplementedInterfacesPruning: skip pruning interfaces that are not implemented by any other types\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) && skipUnimplementedInterfacesPruning) {\n                            return type;\n                        }\n                    }\n                    prunedTypes.push(type.name);\n                    visited.delete(type.name);\n                    return null;\n                }\n                return type;\n            },\n        });\n    } while (prunedTypes.length); // Might have empty types and need to prune again\n    return prunedSchema;\n}\nfunction visitSchema(schema) {\n    const queue = []; // queue of nodes to visit\n    // Grab the root types and start there\n    for (const type of (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_4__.getRootTypes)(schema)) {\n        queue.push(type.name);\n    }\n    return visitQueue(queue, schema);\n}\nfunction visitQueue(queue, schema, visited = new Set()) {\n    // Interfaces encountered that are field return types need to be revisited to add their implementations\n    const revisit = new Map();\n    // Navigate all types starting with pre-queued types (root types)\n    while (queue.length) {\n        const typeName = queue.pop();\n        // Skip types we already visited unless it is an interface type that needs revisiting\n        if (visited.has(typeName) && revisit[typeName] !== true) {\n            continue;\n        }\n        const type = schema.getType(typeName);\n        if (type) {\n            // Get types for union\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n                queue.push(...type.getTypes().map(type => type.name));\n            }\n            // If it is an interface and it is a returned type, grab all implementations so we can use proper __typename in fragments\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) && revisit[typeName] === true) {\n                queue.push(...(0,_get_implementing_types_js__WEBPACK_IMPORTED_MODULE_5__.getImplementingTypes)(type.name, schema));\n                // No need to revisit this interface again\n                revisit[typeName] = false;\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n                // Visit enum values directives argument types\n                queue.push(...type.getValues().flatMap(value => getDirectivesArgumentsTypeNames(schema, value)));\n            }\n            // Visit interfaces this type is implementing if they haven't been visited yet\n            if ('getInterfaces' in type) {\n                // Only pushes to queue to visit but not return types\n                queue.push(...type.getInterfaces().map(iface => iface.name));\n            }\n            // If the type has fields visit those field types\n            if ('getFields' in type) {\n                const fields = type.getFields();\n                const entries = Object.entries(fields);\n                if (!entries.length) {\n                    continue;\n                }\n                for (const [, field] of entries) {\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n                        // Visit arg types and arg directives arguments types\n                        queue.push(...field.args.flatMap(arg => {\n                            const typeNames = [(0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(arg.type).name];\n                            typeNames.push(...getDirectivesArgumentsTypeNames(schema, arg));\n                            return typeNames;\n                        }));\n                    }\n                    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(field.type);\n                    queue.push(namedType.name);\n                    queue.push(...getDirectivesArgumentsTypeNames(schema, field));\n                    // Interfaces returned on fields need to be revisited to add their implementations\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(namedType) && !(namedType.name in revisit)) {\n                        revisit[namedType.name] = true;\n                    }\n                }\n            }\n            queue.push(...getDirectivesArgumentsTypeNames(schema, type));\n            visited.add(typeName); // Mark as visited (and therefore it is used and should be kept)\n        }\n    }\n    return visited;\n}\nfunction getDirectivesArgumentsTypeNames(schema, directableObj) {\n    const argTypeNames = new Set();\n    if (directableObj.astNode?.directives) {\n        for (const directiveNode of directableObj.astNode.directives) {\n            const directive = schema.getDirective(directiveNode.name.value);\n            if (directive?.args) {\n                for (const arg of directive.args) {\n                    const argType = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(arg.type);\n                    argTypeNames.add(argType.name);\n                }\n            }\n        }\n    }\n    if (directableObj.extensions?.['directives']) {\n        for (const directiveName in directableObj.extensions['directives']) {\n            const directive = schema.getDirective(directiveName);\n            if (directive?.args) {\n                for (const arg of directive.args) {\n                    const argType = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(arg.type);\n                    argTypeNames.add(argType.name);\n                }\n            }\n        }\n    }\n    return [...argTypeNames];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/prune.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rewire.js":
/*!*********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rewire.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewireTypes: () => (/* binding */ rewireTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _stub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stub.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLUnionType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(enumConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.isNamedStub)(type) ? (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rewire.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3Jvb3RUeXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBaUQ7QUFDVDtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBLGNBQWMsOERBQWtCLHdDQUF3QyxXQUFXO0FBQ25GO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNPLHlCQUF5QixxREFBUTtBQUN4QztBQUNBO0FBQ0EsQ0FBQztBQUNNLHFCQUFxQixxREFBUTtBQUNwQztBQUNBO0FBQ0EsQ0FBQztBQUNNLHVCQUF1QixxREFBUTtBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3Jvb3RUeXBlcy5qcz8yMjQ5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZUdyYXBoUUxFcnJvciB9IGZyb20gJy4vZXJyb3JzLmpzJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnLi9tZW1vaXplLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREZWZpbmVkUm9vdFR5cGUoc2NoZW1hLCBvcGVyYXRpb24sIG5vZGVzKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBnZXRSb290VHlwZU1hcChzY2hlbWEpO1xuICAgIGNvbnN0IHJvb3RUeXBlID0gcm9vdFR5cGVNYXAuZ2V0KG9wZXJhdGlvbik7XG4gICAgaWYgKHJvb3RUeXBlID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBTY2hlbWEgaXMgbm90IGNvbmZpZ3VyZWQgdG8gZXhlY3V0ZSAke29wZXJhdGlvbn0gb3BlcmF0aW9uLmAsIHtcbiAgICAgICAgICAgIG5vZGVzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RUeXBlO1xufVxuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlTmFtZXMgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZU5hbWVzKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlcyA9IGdldFJvb3RUeXBlcyhzY2hlbWEpO1xuICAgIHJldHVybiBuZXcgU2V0KFsuLi5yb290VHlwZXNdLm1hcCh0eXBlID0+IHR5cGUubmFtZSkpO1xufSk7XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVzID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVzKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKTtcbiAgICByZXR1cm4gbmV3IFNldChyb290VHlwZU1hcC52YWx1ZXMoKSk7XG59KTtcbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZU1hcCA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlTWFwKHNjaGVtYSkge1xuICAgIGNvbnN0IHJvb3RUeXBlTWFwID0gbmV3IE1hcCgpO1xuICAgIGNvbnN0IHF1ZXJ5VHlwZSA9IHNjaGVtYS5nZXRRdWVyeVR5cGUoKTtcbiAgICBpZiAocXVlcnlUeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgncXVlcnknLCBxdWVyeVR5cGUpO1xuICAgIH1cbiAgICBjb25zdCBtdXRhdGlvblR5cGUgPSBzY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk7XG4gICAgaWYgKG11dGF0aW9uVHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ211dGF0aW9uJywgbXV0YXRpb25UeXBlKTtcbiAgICB9XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uVHlwZSA9IHNjaGVtYS5nZXRTdWJzY3JpcHRpb25UeXBlKCk7XG4gICAgaWYgKHN1YnNjcmlwdGlvblR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdzdWJzY3JpcHRpb24nLCBzdWJzY3JpcHRpb25UeXBlKTtcbiAgICB9XG4gICAgcmV0dXJuIHJvb3RUeXBlTWFwO1xufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/selectionSets.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/selectionSets.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSelectionSet: () => (/* binding */ parseSelectionSet)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nfunction parseSelectionSet(selectionSet, options) {\n    const query = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(selectionSet, options).definitions[0];\n    return query.selectionSet;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3NlbGVjdGlvblNldHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBZ0M7QUFDekI7QUFDUCxrQkFBa0IsOENBQUs7QUFDdkI7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3NlbGVjdGlvblNldHMuanM/NTZjZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlU2VsZWN0aW9uU2V0KHNlbGVjdGlvblNldCwgb3B0aW9ucykge1xuICAgIGNvbnN0IHF1ZXJ5ID0gcGFyc2Uoc2VsZWN0aW9uU2V0LCBvcHRpb25zKS5kZWZpbml0aW9uc1swXTtcbiAgICByZXR1cm4gcXVlcnkuc2VsZWN0aW9uU2V0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/selectionSets.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/stub.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/stub.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamedStub: () => (/* binding */ createNamedStub),\n/* harmony export */   createStub: () => (/* binding */ createStub),\n/* harmony export */   getBuiltInForStub: () => (/* binding */ getBuiltInForStub),\n/* harmony export */   isNamedStub: () => (/* binding */ isNamedStub)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.LIST_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(createStub(node.type, type));\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NON_NULL_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID;\n        default:\n            return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3N0dWIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFrTTtBQUMzTDtBQUNQO0FBQ0E7QUFDQSxzQkFBc0Isc0RBQWlCO0FBQ3ZDO0FBQ0E7QUFDQSxzQkFBc0IseURBQW9CO0FBQzFDO0FBQ0E7QUFDQSxzQkFBc0IsMkRBQXNCO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isa0RBQWE7QUFDbkMsYUFBYTtBQUNiLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0EsYUFBYSx5Q0FBSTtBQUNqQix1QkFBdUIsZ0RBQVc7QUFDbEMsYUFBYSx5Q0FBSTtBQUNqQix1QkFBdUIsbURBQWM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGFBQWEsK0NBQVU7QUFDdkIsbUJBQW1CLCtDQUFVO0FBQzdCLGFBQWEsaURBQVk7QUFDekIsbUJBQW1CLGlEQUFZO0FBQy9CLGFBQWEsa0RBQWE7QUFDMUIsbUJBQW1CLGtEQUFhO0FBQ2hDLGFBQWEsbURBQWM7QUFDM0IsbUJBQW1CLG1EQUFjO0FBQ2pDLGFBQWEsOENBQVM7QUFDdEIsbUJBQW1CLDhDQUFTO0FBQzVCO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvc3RpdGNoL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vc3R1Yi5qcz8zMjVlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxCb29sZWFuLCBHcmFwaFFMRmxvYXQsIEdyYXBoUUxJRCwgR3JhcGhRTElucHV0T2JqZWN0VHlwZSwgR3JhcGhRTEludCwgR3JhcGhRTEludGVyZmFjZVR5cGUsIEdyYXBoUUxMaXN0LCBHcmFwaFFMTm9uTnVsbCwgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxTdHJpbmcsIEtpbmQsIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlTmFtZWRTdHViKG5hbWUsIHR5cGUpIHtcbiAgICBsZXQgY29uc3RydWN0b3I7XG4gICAgaWYgKHR5cGUgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTE9iamVjdFR5cGU7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgPT09ICdpbnRlcmZhY2UnKSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTEludGVyZmFjZVR5cGU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdHJ1Y3RvciA9IEdyYXBoUUxJbnB1dE9iamVjdFR5cGU7XG4gICAgfVxuICAgIHJldHVybiBuZXcgY29uc3RydWN0b3Ioe1xuICAgICAgICBuYW1lLFxuICAgICAgICBmaWVsZHM6IHtcbiAgICAgICAgICAgIF9mYWtlOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlU3R1Yihub2RlLCB0eXBlKSB7XG4gICAgc3dpdGNoIChub2RlLmtpbmQpIHtcbiAgICAgICAgY2FzZSBLaW5kLkxJU1RfVFlQRTpcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTExpc3QoY3JlYXRlU3R1Yihub2RlLnR5cGUsIHR5cGUpKTtcbiAgICAgICAgY2FzZSBLaW5kLk5PTl9OVUxMX1RZUEU6XG4gICAgICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxOb25OdWxsKGNyZWF0ZVN0dWIobm9kZS50eXBlLCB0eXBlKSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICBpZiAodHlwZSA9PT0gJ291dHB1dCcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlTmFtZWRTdHViKG5vZGUubmFtZS52YWx1ZSwgJ29iamVjdCcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNyZWF0ZU5hbWVkU3R1Yihub2RlLm5hbWUudmFsdWUsICdpbnB1dCcpO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBpc05hbWVkU3R1Yih0eXBlKSB7XG4gICAgaWYgKCdnZXRGaWVsZHMnIGluIHR5cGUpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVucmVhY2hhYmxlLWxvb3BcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgcmV0dXJuIGZpZWxkLm5hbWUgPT09ICdfZmFrZSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEJ1aWx0SW5Gb3JTdHViKHR5cGUpIHtcbiAgICBzd2l0Y2ggKHR5cGUubmFtZSkge1xuICAgICAgICBjYXNlIEdyYXBoUUxJbnQubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMSW50O1xuICAgICAgICBjYXNlIEdyYXBoUUxGbG9hdC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxGbG9hdDtcbiAgICAgICAgY2FzZSBHcmFwaFFMU3RyaW5nLm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTFN0cmluZztcbiAgICAgICAgY2FzZSBHcmFwaFFMQm9vbGVhbi5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxCb29sZWFuO1xuICAgICAgICBjYXNlIEdyYXBoUUxJRC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxJRDtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/stub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!**********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null\n            ? inputLeafValueTransformer(nullableType, value)\n            : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null\n            ? inputObjectValueTransformer(nullableType, newValue)\n            : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3RyYW5zZm9ybUlucHV0VmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXNGO0FBQy9DO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHdEQUFlO0FBQ3hDLFFBQVEsbURBQVU7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLG1EQUFVO0FBQ3ZCLGVBQWUsb0RBQU87QUFDdEI7QUFDQSxhQUFhLDBEQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQLDBFQUEwRTtBQUMxRSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3N0aXRjaC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3RyYW5zZm9ybUlucHV0VmFsdWUuanM/YjYzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROdWxsYWJsZVR5cGUsIGlzSW5wdXRPYmplY3RUeXBlLCBpc0xlYWZUeXBlLCBpc0xpc3RUeXBlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgYXNBcnJheSB9IGZyb20gJy4vaGVscGVycy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciA9IG51bGwsIGlucHV0T2JqZWN0VmFsdWVUcmFuc2Zvcm1lciA9IG51bGwpIHtcbiAgICBpZiAodmFsdWUgPT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gdmFsdWU7XG4gICAgfVxuICAgIGNvbnN0IG51bGxhYmxlVHlwZSA9IGdldE51bGxhYmxlVHlwZSh0eXBlKTtcbiAgICBpZiAoaXNMZWFmVHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGxcbiAgICAgICAgICAgID8gaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lcihudWxsYWJsZVR5cGUsIHZhbHVlKVxuICAgICAgICAgICAgOiB2YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNMaXN0VHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBhc0FycmF5KHZhbHVlKS5tYXAoKGxpc3RNZW1iZXIpID0+IHRyYW5zZm9ybUlucHV0VmFsdWUobnVsbGFibGVUeXBlLm9mVHlwZSwgbGlzdE1lbWJlciwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzSW5wdXRPYmplY3RUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gbnVsbGFibGVUeXBlLmdldEZpZWxkcygpO1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNba2V5XTtcbiAgICAgICAgICAgIGlmIChmaWVsZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWVba2V5XSA9IHRyYW5zZm9ybUlucHV0VmFsdWUoZmllbGQudHlwZSwgdmFsdWVba2V5XSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGxcbiAgICAgICAgICAgID8gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKG51bGxhYmxlVHlwZSwgbmV3VmFsdWUpXG4gICAgICAgICAgICA6IG5ld1ZhbHVlO1xuICAgIH1cbiAgICAvLyB1bnJlYWNoYWJsZSwgbm8gb3RoZXIgcG9zc2libGUgcmV0dXJuIHZhbHVlXG59XG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgcmV0dXJuIHQuc2VyaWFsaXplKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnB1dFZhbHVlKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdC5wYXJzZVZhbHVlKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnB1dFZhbHVlTGl0ZXJhbCh0eXBlLCB2YWx1ZSkge1xuICAgIHJldHVybiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCAodCwgdikgPT4gdC5wYXJzZUxpdGVyYWwodiwge30pKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/stitch/node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/AccumulatorMap.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/AccumulatorMap.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccumulatorMap: () => (/* binding */ AccumulatorMap)\n/* harmony export */ });\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n    get [Symbol.toStringTag]() {\n        return 'AccumulatorMap';\n    }\n    add(key, item) {\n        const group = this.get(key);\n        if (group === undefined) {\n            this.set(key, [item]);\n        }\n        else {\n            group.push(item);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9BY2N1bXVsYXRvck1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9BY2N1bXVsYXRvck1hcC5qcz9jZDg5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRVM2IE1hcCB3aXRoIGFkZGl0aW9uYWwgYGFkZGAgbWV0aG9kIHRvIGFjY3VtdWxhdGUgaXRlbXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBY2N1bXVsYXRvck1hcCBleHRlbmRzIE1hcCB7XG4gICAgZ2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuICAgICAgICByZXR1cm4gJ0FjY3VtdWxhdG9yTWFwJztcbiAgICB9XG4gICAgYWRkKGtleSwgaXRlbSkge1xuICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuZ2V0KGtleSk7XG4gICAgICAgIGlmIChncm91cCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnNldChrZXksIFtpdGVtXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBncm91cC5wdXNoKGl0ZW0pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/AggregateError.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AggregateError: () => (/* binding */ AggregateErrorImpl),\n/* harmony export */   isAggregateError: () => (/* binding */ isAggregateError)\n/* harmony export */ });\nlet AggregateErrorImpl;\nif (typeof AggregateError === 'undefined') {\n    class AggregateErrorClass extends Error {\n        constructor(errors, message = '') {\n            super(message);\n            this.errors = errors;\n            this.name = 'AggregateError';\n            Error.captureStackTrace(this, AggregateErrorClass);\n        }\n    }\n    AggregateErrorImpl = function (errors, message) {\n        return new AggregateErrorClass(errors, message);\n    };\n}\nelse {\n    AggregateErrorImpl = AggregateError;\n}\n\nfunction isAggregateError(error) {\n    return 'errors' in error && Array.isArray(error['errors']);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9BZ2dyZWdhdGVFcnJvci5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDZ0Q7QUFDekM7QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL0FnZ3JlZ2F0ZUVycm9yLmpzP2FjYTAiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IEFnZ3JlZ2F0ZUVycm9ySW1wbDtcbmlmICh0eXBlb2YgQWdncmVnYXRlRXJyb3IgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgY2xhc3MgQWdncmVnYXRlRXJyb3JDbGFzcyBleHRlbmRzIEVycm9yIHtcbiAgICAgICAgY29uc3RydWN0b3IoZXJyb3JzLCBtZXNzYWdlID0gJycpIHtcbiAgICAgICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICAgICAgdGhpcy5lcnJvcnMgPSBlcnJvcnM7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSAnQWdncmVnYXRlRXJyb3InO1xuICAgICAgICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgQWdncmVnYXRlRXJyb3JDbGFzcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgQWdncmVnYXRlRXJyb3JJbXBsID0gZnVuY3Rpb24gKGVycm9ycywgbWVzc2FnZSkge1xuICAgICAgICByZXR1cm4gbmV3IEFnZ3JlZ2F0ZUVycm9yQ2xhc3MoZXJyb3JzLCBtZXNzYWdlKTtcbiAgICB9O1xufVxuZWxzZSB7XG4gICAgQWdncmVnYXRlRXJyb3JJbXBsID0gQWdncmVnYXRlRXJyb3I7XG59XG5leHBvcnQgeyBBZ2dyZWdhdGVFcnJvckltcGwgYXMgQWdncmVnYXRlRXJyb3IgfTtcbmV4cG9ydCBmdW5jdGlvbiBpc0FnZ3JlZ2F0ZUVycm9yKGVycm9yKSB7XG4gICAgcmV0dXJuICdlcnJvcnMnIGluIGVycm9yICYmIEFycmF5LmlzQXJyYXkoZXJyb3JbJ2Vycm9ycyddKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js":
/*!**************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/Interfaces.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperKind: () => (/* binding */ MapperKind)\n/* harmony export */ });\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind || (MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9JbnRlcmZhY2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9JbnRlcmZhY2VzLmpzPzA3NzkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBNYXBwZXJLaW5kO1xuKGZ1bmN0aW9uIChNYXBwZXJLaW5kKSB7XG4gICAgTWFwcGVyS2luZFtcIlRZUEVcIl0gPSBcIk1hcHBlcktpbmQuVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJTQ0FMQVJfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5TQ0FMQVJfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJFTlVNX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuRU5VTV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkNPTVBPU0lURV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkNPTVBPU0lURV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIk9CSkVDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLk9CSkVDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIklOUFVUX09CSkVDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkFCU1RSQUNUX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuQUJTVFJBQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJVTklPTl9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLlVOSU9OX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5URVJGQUNFX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuSU5URVJGQUNFX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiUk9PVF9PQkpFQ1RcIl0gPSBcIk1hcHBlcktpbmQuUk9PVF9PQkpFQ1RcIjtcbiAgICBNYXBwZXJLaW5kW1wiUVVFUllcIl0gPSBcIk1hcHBlcktpbmQuUVVFUllcIjtcbiAgICBNYXBwZXJLaW5kW1wiTVVUQVRJT05cIl0gPSBcIk1hcHBlcktpbmQuTVVUQVRJT05cIjtcbiAgICBNYXBwZXJLaW5kW1wiU1VCU0NSSVBUSU9OXCJdID0gXCJNYXBwZXJLaW5kLlNVQlNDUklQVElPTlwiO1xuICAgIE1hcHBlcktpbmRbXCJESVJFQ1RJVkVcIl0gPSBcIk1hcHBlcktpbmQuRElSRUNUSVZFXCI7XG4gICAgTWFwcGVyS2luZFtcIkZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLkZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIkNPTVBPU0lURV9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5DT01QT1NJVEVfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiT0JKRUNUX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLk9CSkVDVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLlJPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiUVVFUllfUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5RVUVSWV9ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIk1VVEFUSU9OX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuTVVUQVRJT05fUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJTVUJTQ1JJUFRJT05fUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5TVUJTQ1JJUFRJT05fUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlRFUkZBQ0VfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuSU5URVJGQUNFX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIklOUFVUX09CSkVDVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiQVJHVU1FTlRcIl0gPSBcIk1hcHBlcktpbmQuQVJHVU1FTlRcIjtcbiAgICBNYXBwZXJLaW5kW1wiRU5VTV9WQUxVRVwiXSA9IFwiTWFwcGVyS2luZC5FTlVNX1ZBTFVFXCI7XG59KShNYXBwZXJLaW5kIHx8IChNYXBwZXJLaW5kID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/Path.js":
/*!********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/Path.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addPath: () => (/* binding */ addPath),\n/* harmony export */   pathToArray: () => (/* binding */ pathToArray),\n/* harmony export */   printPathArray: () => (/* binding */ printPathArray)\n/* harmony export */ });\n/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nfunction addPath(prev, key, typename) {\n    return { prev, key, typename };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\nfunction pathToArray(path) {\n    const flattened = [];\n    let curr = path;\n    while (curr) {\n        flattened.push(curr.key);\n        curr = curr.prev;\n    }\n    return flattened.reverse();\n}\n/**\n * Build a string describing the path.\n */\nfunction printPathArray(path) {\n    return path.map(key => (typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key)).join('');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9QYXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL1BhdGguanM/MmIyMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGEgUGF0aCBhbmQgYSBrZXksIHJldHVybiBhIG5ldyBQYXRoIGNvbnRhaW5pbmcgdGhlIG5ldyBrZXkuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhZGRQYXRoKHByZXYsIGtleSwgdHlwZW5hbWUpIHtcbiAgICByZXR1cm4geyBwcmV2LCBrZXksIHR5cGVuYW1lIH07XG59XG4vKipcbiAqIEdpdmVuIGEgUGF0aCwgcmV0dXJuIGFuIEFycmF5IG9mIHRoZSBwYXRoIGtleXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXRoVG9BcnJheShwYXRoKSB7XG4gICAgY29uc3QgZmxhdHRlbmVkID0gW107XG4gICAgbGV0IGN1cnIgPSBwYXRoO1xuICAgIHdoaWxlIChjdXJyKSB7XG4gICAgICAgIGZsYXR0ZW5lZC5wdXNoKGN1cnIua2V5KTtcbiAgICAgICAgY3VyciA9IGN1cnIucHJldjtcbiAgICB9XG4gICAgcmV0dXJuIGZsYXR0ZW5lZC5yZXZlcnNlKCk7XG59XG4vKipcbiAqIEJ1aWxkIGEgc3RyaW5nIGRlc2NyaWJpbmcgdGhlIHBhdGguXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwcmludFBhdGhBcnJheShwYXRoKSB7XG4gICAgcmV0dXJuIHBhdGgubWFwKGtleSA9PiAodHlwZW9mIGtleSA9PT0gJ251bWJlcicgPyAnWycgKyBrZXkudG9TdHJpbmcoKSArICddJyA6ICcuJyArIGtleSkpLmpvaW4oJycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/Path.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/astFromType.js":
/*!***************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/astFromType.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromType: () => (/* binding */ astFromType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _inspect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inspect.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n\n\nfunction astFromType(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n        const innerType = astFromType(type.ofType);\n        if (innerType.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE) {\n            throw new Error(`Invalid type node ${(0,_inspect_js__WEBPACK_IMPORTED_MODULE_2__.inspect)(type)}. Inner type of non-null type cannot be a non-null type.`);\n        }\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NON_NULL_TYPE,\n            type: innerType,\n        };\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n        return {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.LIST_TYPE,\n            type: astFromType(type.ofType),\n        };\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAMED_TYPE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.NAME,\n            value: type.name,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVHlwZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBEO0FBQ25CO0FBQ2hDO0FBQ1AsUUFBUSxzREFBYTtBQUNyQjtBQUNBLCtCQUErQix5Q0FBSTtBQUNuQyxpREFBaUQsb0RBQU8sT0FBTztBQUMvRDtBQUNBO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0E7QUFDQTtBQUNBLGFBQWEsbURBQVU7QUFDdkI7QUFDQSxrQkFBa0IseUNBQUk7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLHlDQUFJO0FBQ2xCO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVR5cGUuanM/MzcyMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc05vbk51bGxUeXBlLCBLaW5kLCBpc0xpc3RUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBpbnNwZWN0IH0gZnJvbSAnLi9pbnNwZWN0LmpzJztcbmV4cG9ydCBmdW5jdGlvbiBhc3RGcm9tVHlwZSh0eXBlKSB7XG4gICAgaWYgKGlzTm9uTnVsbFR5cGUodHlwZSkpIHtcbiAgICAgICAgY29uc3QgaW5uZXJUeXBlID0gYXN0RnJvbVR5cGUodHlwZS5vZlR5cGUpO1xuICAgICAgICBpZiAoaW5uZXJUeXBlLmtpbmQgPT09IEtpbmQuTk9OX05VTExfVFlQRSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHR5cGUgbm9kZSAke2luc3BlY3QodHlwZSl9LiBJbm5lciB0eXBlIG9mIG5vbi1udWxsIHR5cGUgY2Fubm90IGJlIGEgbm9uLW51bGwgdHlwZS5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAga2luZDogS2luZC5OT05fTlVMTF9UWVBFLFxuICAgICAgICAgICAgdHlwZTogaW5uZXJUeXBlLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0xpc3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLkxJU1RfVFlQRSxcbiAgICAgICAgICAgIHR5cGU6IGFzdEZyb21UeXBlKHR5cGUub2ZUeXBlKSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAga2luZDogS2luZC5OQU1FRF9UWVBFLFxuICAgICAgICBuYW1lOiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLk5BTUUsXG4gICAgICAgICAgICB2YWx1ZTogdHlwZS5uYW1lLFxuICAgICAgICB9LFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/astFromType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromValueUntyped: () => (/* binding */ astFromValueUntyped)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using the following mapping.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String               |\n * | Number        | Int / Float          |\n * | null          | NullValue            |\n *\n */\nfunction astFromValueUntyped(value) {\n    // only explicit null, not undefined, NaN\n    if (value === null) {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NULL };\n    }\n    // undefined\n    if (value === undefined) {\n        return null;\n    }\n    // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n    // the value is not an array, convert the value using the list's item type.\n    if (Array.isArray(value)) {\n        const valuesNodes = [];\n        for (const item of value) {\n            const itemNode = astFromValueUntyped(item);\n            if (itemNode != null) {\n                valuesNodes.push(itemNode);\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.LIST, values: valuesNodes };\n    }\n    if (typeof value === 'object') {\n        const fieldNodes = [];\n        for (const fieldName in value) {\n            const fieldValue = value[fieldName];\n            const ast = astFromValueUntyped(fieldValue);\n            if (ast) {\n                fieldNodes.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT_FIELD,\n                    name: { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME, value: fieldName },\n                    value: ast,\n                });\n            }\n        }\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.OBJECT, fields: fieldNodes };\n    }\n    // Others serialize based on their corresponding JavaScript scalar types.\n    if (typeof value === 'boolean') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.BOOLEAN, value };\n    }\n    // JavaScript numbers can be Int or Float values.\n    if (typeof value === 'number' && isFinite(value)) {\n        const stringNum = String(value);\n        return integerStringRegExp.test(stringNum)\n            ? { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INT, value: stringNum }\n            : { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FLOAT, value: stringNum };\n    }\n    if (typeof value === 'string') {\n        return { kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.STRING, value };\n    }\n    throw new TypeError(`Cannot convert value to AST: ${value}.`);\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9hc3RGcm9tVmFsdWVVbnR5cGVkLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIseUNBQUk7QUFDOUIsNEJBQTRCLE1BQU0seUNBQUkseUJBQXlCO0FBQy9EO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsTUFBTSx5Q0FBSTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLE1BQU0seUNBQUk7QUFDMUIsZ0JBQWdCLE1BQU0seUNBQUk7QUFDMUI7QUFDQTtBQUNBLGlCQUFpQixNQUFNLHlDQUFJO0FBQzNCO0FBQ0Esd0RBQXdELE1BQU07QUFDOUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vYXN0RnJvbVZhbHVlVW50eXBlZC5qcz9mZTcwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbi8qKlxuICogUHJvZHVjZXMgYSBHcmFwaFFMIFZhbHVlIEFTVCBnaXZlbiBhIEphdmFTY3JpcHQgb2JqZWN0LlxuICogRnVuY3Rpb24gd2lsbCBtYXRjaCBKYXZhU2NyaXB0L0pTT04gdmFsdWVzIHRvIEdyYXBoUUwgQVNUIHNjaGVtYSBmb3JtYXRcbiAqIGJ5IHVzaW5nIHRoZSBmb2xsb3dpbmcgbWFwcGluZy5cbiAqXG4gKiB8IEpTT04gVmFsdWUgICAgfCBHcmFwaFFMIFZhbHVlICAgICAgICB8XG4gKiB8IC0tLS0tLS0tLS0tLS0gfCAtLS0tLS0tLS0tLS0tLS0tLS0tLSB8XG4gKiB8IE9iamVjdCAgICAgICAgfCBJbnB1dCBPYmplY3QgICAgICAgICB8XG4gKiB8IEFycmF5ICAgICAgICAgfCBMaXN0ICAgICAgICAgICAgICAgICB8XG4gKiB8IEJvb2xlYW4gICAgICAgfCBCb29sZWFuICAgICAgICAgICAgICB8XG4gKiB8IFN0cmluZyAgICAgICAgfCBTdHJpbmcgICAgICAgICAgICAgICB8XG4gKiB8IE51bWJlciAgICAgICAgfCBJbnQgLyBGbG9hdCAgICAgICAgICB8XG4gKiB8IG51bGwgICAgICAgICAgfCBOdWxsVmFsdWUgICAgICAgICAgICB8XG4gKlxuICovXG5leHBvcnQgZnVuY3Rpb24gYXN0RnJvbVZhbHVlVW50eXBlZCh2YWx1ZSkge1xuICAgIC8vIG9ubHkgZXhwbGljaXQgbnVsbCwgbm90IHVuZGVmaW5lZCwgTmFOXG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuTlVMTCB9O1xuICAgIH1cbiAgICAvLyB1bmRlZmluZWRcbiAgICBpZiAodmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG4gICAgLy8gQ29udmVydCBKYXZhU2NyaXB0IGFycmF5IHRvIEdyYXBoUUwgbGlzdC4gSWYgdGhlIEdyYXBoUUxUeXBlIGlzIGEgbGlzdCwgYnV0XG4gICAgLy8gdGhlIHZhbHVlIGlzIG5vdCBhbiBhcnJheSwgY29udmVydCB0aGUgdmFsdWUgdXNpbmcgdGhlIGxpc3QncyBpdGVtIHR5cGUuXG4gICAgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIGNvbnN0IHZhbHVlc05vZGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgaXRlbSBvZiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgaXRlbU5vZGUgPSBhc3RGcm9tVmFsdWVVbnR5cGVkKGl0ZW0pO1xuICAgICAgICAgICAgaWYgKGl0ZW1Ob2RlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICB2YWx1ZXNOb2Rlcy5wdXNoKGl0ZW1Ob2RlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkxJU1QsIHZhbHVlczogdmFsdWVzTm9kZXMgfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgY29uc3QgZmllbGROb2RlcyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGRWYWx1ZSA9IHZhbHVlW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICBjb25zdCBhc3QgPSBhc3RGcm9tVmFsdWVVbnR5cGVkKGZpZWxkVmFsdWUpO1xuICAgICAgICAgICAgaWYgKGFzdCkge1xuICAgICAgICAgICAgICAgIGZpZWxkTm9kZXMucHVzaCh7XG4gICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuT0JKRUNUX0ZJRUxELFxuICAgICAgICAgICAgICAgICAgICBuYW1lOiB7IGtpbmQ6IEtpbmQuTkFNRSwgdmFsdWU6IGZpZWxkTmFtZSB9LFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogYXN0LFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7IGtpbmQ6IEtpbmQuT0JKRUNULCBmaWVsZHM6IGZpZWxkTm9kZXMgfTtcbiAgICB9XG4gICAgLy8gT3RoZXJzIHNlcmlhbGl6ZSBiYXNlZCBvbiB0aGVpciBjb3JyZXNwb25kaW5nIEphdmFTY3JpcHQgc2NhbGFyIHR5cGVzLlxuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09ICdib29sZWFuJykge1xuICAgICAgICByZXR1cm4geyBraW5kOiBLaW5kLkJPT0xFQU4sIHZhbHVlIH07XG4gICAgfVxuICAgIC8vIEphdmFTY3JpcHQgbnVtYmVycyBjYW4gYmUgSW50IG9yIEZsb2F0IHZhbHVlcy5cbiAgICBpZiAodHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiBpc0Zpbml0ZSh2YWx1ZSkpIHtcbiAgICAgICAgY29uc3Qgc3RyaW5nTnVtID0gU3RyaW5nKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIGludGVnZXJTdHJpbmdSZWdFeHAudGVzdChzdHJpbmdOdW0pXG4gICAgICAgICAgICA/IHsga2luZDogS2luZC5JTlQsIHZhbHVlOiBzdHJpbmdOdW0gfVxuICAgICAgICAgICAgOiB7IGtpbmQ6IEtpbmQuRkxPQVQsIHZhbHVlOiBzdHJpbmdOdW0gfTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHsga2luZDogS2luZC5TVFJJTkcsIHZhbHVlIH07XG4gICAgfVxuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYENhbm5vdCBjb252ZXJ0IHZhbHVlIHRvIEFTVDogJHt2YWx1ZX0uYCk7XG59XG4vKipcbiAqIEludFZhbHVlOlxuICogICAtIE5lZ2F0aXZlU2lnbj8gMFxuICogICAtIE5lZ2F0aXZlU2lnbj8gTm9uWmVyb0RpZ2l0ICggRGlnaXQrICk/XG4gKi9cbmNvbnN0IGludGVnZXJTdHJpbmdSZWdFeHAgPSAvXi0/KD86MHxbMS05XVswLTldKikkLztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/collectFields.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectFields: () => (/* binding */ collectFields),\n/* harmony export */   collectSubFields: () => (/* binding */ collectSubFields),\n/* harmony export */   doesFragmentConditionMatch: () => (/* binding */ doesFragmentConditionMatch),\n/* harmony export */   getDeferValues: () => (/* binding */ getDeferValues),\n/* harmony export */   getFieldEntryKey: () => (/* binding */ getFieldEntryKey),\n/* harmony export */   shouldIncludeNode: () => (/* binding */ shouldIncludeNode)\n/* harmony export */ });\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccumulatorMap.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\");\n\n\n\n\nfunction collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                fields.add(getFieldEntryKey(selection), selection);\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (visitedFragmentNames.has(fragName) && !defer) {\n                    continue;\n                }\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                if (!defer) {\n                    visitedFragmentNames.add(fragName);\n                }\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n        }\n    }\n}\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n */\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet) {\n    const fields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const patches = [];\n    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, new Set());\n    return { fields, patches };\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSkipDirective, node, variableValues);\n    if ((skip === null || skip === void 0 ? void 0 : skip['if']) === true) {\n        return false;\n    }\n    const include = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLIncludeDirective, node, variableValues);\n    if ((include === null || include === void 0 ? void 0 : include['if']) === false) {\n        return false;\n    }\n    return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.typeFromAST)(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_5__.isAbstractType)(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Returns an object containing the `@defer` arguments if a field should be\n * deferred based on the experimental flag, defer directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getDeferValues(variableValues, node) {\n    const defer = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(_directives_js__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeferDirective, node, variableValues);\n    if (!defer) {\n        return;\n    }\n    if (defer['if'] === false) {\n        return;\n    }\n    return {\n        label: typeof defer['label'] === 'string' ? defer['label'] : undefined,\n    };\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n */\nconst collectSubFields = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_7__.memoize5)(function collectSubfields(schema, fragments, variableValues, returnType, fieldNodes) {\n    const subFieldNodes = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const visitedFragmentNames = new Set();\n    const subPatches = [];\n    const subFieldsAndPatches = {\n        fields: subFieldNodes,\n        patches: subPatches,\n    };\n    for (const node of fieldNodes) {\n        if (node.selectionSet) {\n            collectFieldsImpl(schema, fragments, variableValues, returnType, node.selectionSet, subFieldNodes, subPatches, visitedFragmentNames);\n        }\n    }\n    return subFieldsAndPatches;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/comments.js":
/*!************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/comments.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectComment: () => (/* binding */ collectComment),\n/* harmony export */   dedentBlockStringValue: () => (/* binding */ dedentBlockStringValue),\n/* harmony export */   getBlockStringIndentation: () => (/* binding */ getBlockStringIndentation),\n/* harmony export */   getComment: () => (/* binding */ getComment),\n/* harmony export */   getDescription: () => (/* binding */ getDescription),\n/* harmony export */   getLeadingCommentBlock: () => (/* binding */ getLeadingCommentBlock),\n/* harmony export */   printComment: () => (/* binding */ printComment),\n/* harmony export */   printWithComments: () => (/* binding */ printWithComments),\n/* harmony export */   pushComment: () => (/* binding */ pushComment),\n/* harmony export */   resetComments: () => (/* binding */ resetComments)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/tokenKind.mjs\");\n\nconst MAX_LINE_LENGTH = 80;\nlet commentsRegistry = {};\nfunction resetComments() {\n    commentsRegistry = {};\n}\nfunction collectComment(node) {\n    var _a;\n    const entityName = (_a = node.name) === null || _a === void 0 ? void 0 : _a.value;\n    if (entityName == null) {\n        return;\n    }\n    pushComment(node, entityName);\n    switch (node.kind) {\n        case 'EnumTypeDefinition':\n            if (node.values) {\n                for (const value of node.values) {\n                    pushComment(value, entityName, value.name.value);\n                }\n            }\n            break;\n        case 'ObjectTypeDefinition':\n        case 'InputObjectTypeDefinition':\n        case 'InterfaceTypeDefinition':\n            if (node.fields) {\n                for (const field of node.fields) {\n                    pushComment(field, entityName, field.name.value);\n                    if (isFieldDefinitionNode(field) && field.arguments) {\n                        for (const arg of field.arguments) {\n                            pushComment(arg, entityName, field.name.value, arg.name.value);\n                        }\n                    }\n                }\n            }\n            break;\n    }\n}\nfunction pushComment(node, entity, field, argument) {\n    const comment = getComment(node);\n    if (typeof comment !== 'string' || comment.length === 0) {\n        return;\n    }\n    const keys = [entity];\n    if (field) {\n        keys.push(field);\n        if (argument) {\n            keys.push(argument);\n        }\n    }\n    const path = keys.join('.');\n    if (!commentsRegistry[path]) {\n        commentsRegistry[path] = [];\n    }\n    commentsRegistry[path].push(comment);\n}\nfunction printComment(comment) {\n    return '\\n# ' + comment.replace(/\\n/g, '\\n# ');\n}\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/**\n * NOTE: ==> This file has been modified just to add comments to the printed AST\n * This is a temp measure, we will move to using the original non modified printer.js ASAP.\n */\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\nfunction join(maybeArray, separator) {\n    return maybeArray ? maybeArray.filter(x => x).join(separator || '') : '';\n}\nfunction hasMultilineItems(maybeArray) {\n    var _a;\n    return (_a = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.some(str => str.includes('\\n'))) !== null && _a !== void 0 ? _a : false;\n}\nfunction addDescription(cb) {\n    return (node, _key, _parent, path, ancestors) => {\n        var _a;\n        const keys = [];\n        const parent = path.reduce((prev, key) => {\n            if (['fields', 'arguments', 'values'].includes(key) && prev.name) {\n                keys.push(prev.name.value);\n            }\n            return prev[key];\n        }, ancestors[0]);\n        const key = [...keys, (_a = parent === null || parent === void 0 ? void 0 : parent.name) === null || _a === void 0 ? void 0 : _a.value].filter(Boolean).join('.');\n        const items = [];\n        if (node.kind.includes('Definition') && commentsRegistry[key]) {\n            items.push(...commentsRegistry[key]);\n        }\n        return join([...items.map(printComment), node.description, cb(node, _key, _parent, path, ancestors)], '\\n');\n    };\n}\nfunction indent(maybeString) {\n    return maybeString && `  ${maybeString.replace(/\\n/g, '\\n  ')}`;\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\nfunction block(array) {\n    return array && array.length !== 0 ? `{\\n${indent(join(array, '\\n'))}\\n}` : '';\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise\n * print an empty string.\n */\nfunction wrap(start, maybeString, end) {\n    return maybeString ? start + maybeString + (end || '') : '';\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n */\nfunction printBlockString(value, isDescription = false) {\n    const escaped = value.replace(/\"\"\"/g, '\\\\\"\"\"');\n    return (value[0] === ' ' || value[0] === '\\t') && value.indexOf('\\n') === -1\n        ? `\"\"\"${escaped.replace(/\"$/, '\"\\n')}\"\"\"`\n        : `\"\"\"\\n${isDescription ? escaped : indent(escaped)}\\n\"\"\"`;\n}\nconst printDocASTReducer = {\n    Name: { leave: node => node.value },\n    Variable: { leave: node => '$' + node.name },\n    // Document\n    Document: {\n        leave: node => join(node.definitions, '\\n\\n'),\n    },\n    OperationDefinition: {\n        leave: node => {\n            const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n            const prefix = join([node.operation, join([node.name, varDefs]), join(node.directives, ' ')], ' ');\n            // the query short form.\n            return prefix + ' ' + node.selectionSet;\n        },\n    },\n    VariableDefinition: {\n        leave: ({ variable, type, defaultValue, directives }) => variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' ')),\n    },\n    SelectionSet: { leave: ({ selections }) => block(selections) },\n    Field: {\n        leave({ alias, name, arguments: args, directives, selectionSet }) {\n            const prefix = wrap('', alias, ': ') + name;\n            let argsLine = prefix + wrap('(', join(args, ', '), ')');\n            if (argsLine.length > MAX_LINE_LENGTH) {\n                argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n            }\n            return join([argsLine, join(directives, ' '), selectionSet], ' ');\n        },\n    },\n    Argument: { leave: ({ name, value }) => name + ': ' + value },\n    // Fragments\n    FragmentSpread: {\n        leave: ({ name, directives }) => '...' + name + wrap(' ', join(directives, ' ')),\n    },\n    InlineFragment: {\n        leave: ({ typeCondition, directives, selectionSet }) => join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' '),\n    },\n    FragmentDefinition: {\n        leave: ({ name, typeCondition, variableDefinitions, directives, selectionSet }) => \n        // Note: fragment variable definitions are experimental and may be changed\n        // or removed in the future.\n        `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n            `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n            selectionSet,\n    },\n    // Value\n    IntValue: { leave: ({ value }) => value },\n    FloatValue: { leave: ({ value }) => value },\n    StringValue: {\n        leave: ({ value, block: isBlockString }) => {\n            if (isBlockString) {\n                return printBlockString(value);\n            }\n            return JSON.stringify(value);\n        },\n    },\n    BooleanValue: { leave: ({ value }) => (value ? 'true' : 'false') },\n    NullValue: { leave: () => 'null' },\n    EnumValue: { leave: ({ value }) => value },\n    ListValue: { leave: ({ values }) => '[' + join(values, ', ') + ']' },\n    ObjectValue: { leave: ({ fields }) => '{' + join(fields, ', ') + '}' },\n    ObjectField: { leave: ({ name, value }) => name + ': ' + value },\n    // Directive\n    Directive: {\n        leave: ({ name, arguments: args }) => '@' + name + wrap('(', join(args, ', '), ')'),\n    },\n    // Type\n    NamedType: { leave: ({ name }) => name },\n    ListType: { leave: ({ type }) => '[' + type + ']' },\n    NonNullType: { leave: ({ type }) => type + '!' },\n    // Type System Definitions\n    SchemaDefinition: {\n        leave: ({ directives, operationTypes }) => join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    OperationTypeDefinition: {\n        leave: ({ operation, type }) => operation + ': ' + type,\n    },\n    ScalarTypeDefinition: {\n        leave: ({ name, directives }) => join(['scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    FieldDefinition: {\n        leave: ({ name, arguments: args, type, directives }) => name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            ': ' +\n            type +\n            wrap(' ', join(directives, ' ')),\n    },\n    InputValueDefinition: {\n        leave: ({ name, type, defaultValue, directives }) => join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' '),\n    },\n    InterfaceTypeDefinition: {\n        leave: ({ name, interfaces, directives, fields }) => join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeDefinition: {\n        leave: ({ name, directives, types }) => join(['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeDefinition: {\n        leave: ({ name, directives, values }) => join(['enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    EnumValueDefinition: {\n        leave: ({ name, directives }) => join([name, join(directives, ' ')], ' '),\n    },\n    InputObjectTypeDefinition: {\n        leave: ({ name, directives, fields }) => join(['input', name, join(directives, ' '), block(fields)], ' '),\n    },\n    DirectiveDefinition: {\n        leave: ({ name, arguments: args, repeatable, locations }) => 'directive @' +\n            name +\n            (hasMultilineItems(args)\n                ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n                : wrap('(', join(args, ', '), ')')) +\n            (repeatable ? ' repeatable' : '') +\n            ' on ' +\n            join(locations, ' | '),\n    },\n    SchemaExtension: {\n        leave: ({ directives, operationTypes }) => join(['extend schema', join(directives, ' '), block(operationTypes)], ' '),\n    },\n    ScalarTypeExtension: {\n        leave: ({ name, directives }) => join(['extend scalar', name, join(directives, ' ')], ' '),\n    },\n    ObjectTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    InterfaceTypeExtension: {\n        leave: ({ name, interfaces, directives, fields }) => join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' '),\n    },\n    UnionTypeExtension: {\n        leave: ({ name, directives, types }) => join(['extend union', name, join(directives, ' '), wrap('= ', join(types, ' | '))], ' '),\n    },\n    EnumTypeExtension: {\n        leave: ({ name, directives, values }) => join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n    },\n    InputObjectTypeExtension: {\n        leave: ({ name, directives, fields }) => join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n    },\n};\nconst printDocASTReducerWithComments = Object.keys(printDocASTReducer).reduce((prev, key) => ({\n    ...prev,\n    [key]: {\n        leave: addDescription(printDocASTReducer[key].leave),\n    },\n}), {});\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\nfunction printWithComments(ast) {\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(ast, printDocASTReducerWithComments);\n}\nfunction isFieldDefinitionNode(node) {\n    return node.kind === 'FieldDefinition';\n}\n// graphql < v13 and > v15 does not export getDescription\nfunction getDescription(node, options) {\n    if (node.description != null) {\n        return node.description.value;\n    }\n    if (options === null || options === void 0 ? void 0 : options.commentDescriptions) {\n        return getComment(node);\n    }\n}\nfunction getComment(node) {\n    const rawValue = getLeadingCommentBlock(node);\n    if (rawValue !== undefined) {\n        return dedentBlockStringValue(`\\n${rawValue}`);\n    }\n}\nfunction getLeadingCommentBlock(node) {\n    const loc = node.loc;\n    if (!loc) {\n        return;\n    }\n    const comments = [];\n    let token = loc.startToken.prev;\n    while (token != null &&\n        token.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.TokenKind.COMMENT &&\n        token.next != null &&\n        token.prev != null &&\n        token.line + 1 === token.next.line &&\n        token.line !== token.prev.line) {\n        const value = String(token.value);\n        comments.push(value);\n        token = token.prev;\n    }\n    return comments.length > 0 ? comments.reverse().join('\\n') : undefined;\n}\nfunction dedentBlockStringValue(rawString) {\n    // Expand a block string's raw value into independent lines.\n    const lines = rawString.split(/\\r\\n|[\\n\\r]/g);\n    // Remove common indentation from all lines but first.\n    const commonIndent = getBlockStringIndentation(lines);\n    if (commonIndent !== 0) {\n        for (let i = 1; i < lines.length; i++) {\n            lines[i] = lines[i].slice(commonIndent);\n        }\n    }\n    // Remove leading and trailing blank lines.\n    while (lines.length > 0 && isBlank(lines[0])) {\n        lines.shift();\n    }\n    while (lines.length > 0 && isBlank(lines[lines.length - 1])) {\n        lines.pop();\n    }\n    // Return a string of the lines joined with U+000A.\n    return lines.join('\\n');\n}\n/**\n * @internal\n */\nfunction getBlockStringIndentation(lines) {\n    let commonIndent = null;\n    for (let i = 1; i < lines.length; i++) {\n        const line = lines[i];\n        const indent = leadingWhitespace(line);\n        if (indent === line.length) {\n            continue; // skip empty lines\n        }\n        if (commonIndent === null || indent < commonIndent) {\n            commonIndent = indent;\n            if (commonIndent === 0) {\n                break;\n            }\n        }\n    }\n    return commonIndent === null ? 0 : commonIndent;\n}\nfunction leadingWhitespace(str) {\n    let i = 0;\n    while (i < str.length && (str[i] === ' ' || str[i] === '\\t')) {\n        i++;\n    }\n    return i;\n}\nfunction isBlank(str) {\n    return leadingWhitespace(str) === str.length;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/comments.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/directives.js":
/*!**************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/directives.js ***!
  \**************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLDeferDirective: () => (/* binding */ GraphQLDeferDirective),\n/* harmony export */   GraphQLStreamDirective: () => (/* binding */ GraphQLStreamDirective)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n\n/**\n * Used to conditionally defer fragments.\n */\nconst GraphQLDeferDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'defer',\n    description: 'Directs the executor to defer this fragment when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FRAGMENT_SPREAD, graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.INLINE_FRAGMENT],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Deferred when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n    },\n});\n/**\n * Used to conditionally stream list fields.\n */\nconst GraphQLStreamDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'stream',\n    description: 'Directs the executor to stream plural fields when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FIELD],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Stream when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n        initialCount: {\n            defaultValue: 0,\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInt,\n            description: 'Number of items to return immediately',\n        },\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9kaXJlY3RpdmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwSDtBQUMxSDtBQUNBO0FBQ0E7QUFDTyxrQ0FBa0MscURBQWdCO0FBQ3pEO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQWlCLGtCQUFrQixzREFBaUI7QUFDcEU7QUFDQTtBQUNBLHNCQUFzQixtREFBYyxDQUFDLG1EQUFjO0FBQ25EO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxrQkFBa0Isa0RBQWE7QUFDL0I7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDTyxtQ0FBbUMscURBQWdCO0FBQzFEO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxzQkFBc0IsbURBQWMsQ0FBQyxtREFBYztBQUNuRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esa0JBQWtCLGtEQUFhO0FBQy9CO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsK0NBQVU7QUFDNUI7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZGlyZWN0aXZlcy5qcz83ZWQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZUxvY2F0aW9uLCBHcmFwaFFMQm9vbGVhbiwgR3JhcGhRTERpcmVjdGl2ZSwgR3JhcGhRTEludCwgR3JhcGhRTE5vbk51bGwsIEdyYXBoUUxTdHJpbmcsIH0gZnJvbSAnZ3JhcGhxbCc7XG4vKipcbiAqIFVzZWQgdG8gY29uZGl0aW9uYWxseSBkZWZlciBmcmFnbWVudHMuXG4gKi9cbmV4cG9ydCBjb25zdCBHcmFwaFFMRGVmZXJEaXJlY3RpdmUgPSBuZXcgR3JhcGhRTERpcmVjdGl2ZSh7XG4gICAgbmFtZTogJ2RlZmVyJyxcbiAgICBkZXNjcmlwdGlvbjogJ0RpcmVjdHMgdGhlIGV4ZWN1dG9yIHRvIGRlZmVyIHRoaXMgZnJhZ21lbnQgd2hlbiB0aGUgYGlmYCBhcmd1bWVudCBpcyB0cnVlIG9yIHVuZGVmaW5lZC4nLFxuICAgIGxvY2F0aW9uczogW0RpcmVjdGl2ZUxvY2F0aW9uLkZSQUdNRU5UX1NQUkVBRCwgRGlyZWN0aXZlTG9jYXRpb24uSU5MSU5FX0ZSQUdNRU5UXSxcbiAgICBhcmdzOiB7XG4gICAgICAgIGlmOiB7XG4gICAgICAgICAgICB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTEJvb2xlYW4pLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdEZWZlcnJlZCB3aGVuIHRydWUgb3IgdW5kZWZpbmVkLicsXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICB0eXBlOiBHcmFwaFFMU3RyaW5nLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdVbmlxdWUgbmFtZScsXG4gICAgICAgIH0sXG4gICAgfSxcbn0pO1xuLyoqXG4gKiBVc2VkIHRvIGNvbmRpdGlvbmFsbHkgc3RyZWFtIGxpc3QgZmllbGRzLlxuICovXG5leHBvcnQgY29uc3QgR3JhcGhRTFN0cmVhbURpcmVjdGl2ZSA9IG5ldyBHcmFwaFFMRGlyZWN0aXZlKHtcbiAgICBuYW1lOiAnc3RyZWFtJyxcbiAgICBkZXNjcmlwdGlvbjogJ0RpcmVjdHMgdGhlIGV4ZWN1dG9yIHRvIHN0cmVhbSBwbHVyYWwgZmllbGRzIHdoZW4gdGhlIGBpZmAgYXJndW1lbnQgaXMgdHJ1ZSBvciB1bmRlZmluZWQuJyxcbiAgICBsb2NhdGlvbnM6IFtEaXJlY3RpdmVMb2NhdGlvbi5GSUVMRF0sXG4gICAgYXJnczoge1xuICAgICAgICBpZjoge1xuICAgICAgICAgICAgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxCb29sZWFuKSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnU3RyZWFtIHdoZW4gdHJ1ZSBvciB1bmRlZmluZWQuJyxcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxTdHJpbmcsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1VuaXF1ZSBuYW1lJyxcbiAgICAgICAgfSxcbiAgICAgICAgaW5pdGlhbENvdW50OiB7XG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IDAsXG4gICAgICAgICAgICB0eXBlOiBHcmFwaFFMSW50LFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdOdW1iZXIgb2YgaXRlbXMgdG8gcmV0dXJuIGltbWVkaWF0ZWx5JyxcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js":
/*!**********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/errors.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nfunction createGraphQLError(message, options) {\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options === null || options === void 0 ? void 0 : options.nodes, options === null || options === void 0 ? void 0 : options.source, options === null || options === void 0 ? void 0 : options.positions, options === null || options === void 0 ? void 0 : options.path, options === null || options === void 0 ? void 0 : options.originalError, options === null || options === void 0 ? void 0 : options.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUM3QztBQUNQLFFBQVEsZ0RBQVc7QUFDbkIsbUJBQW1CLGlEQUFZO0FBQy9CO0FBQ0EsZUFBZSxpREFBWTtBQUMzQjtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZXJyb3JzLmpzP2Q4MGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTEVycm9yLCB2ZXJzaW9uSW5mbyB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgaWYgKHZlcnNpb25JbmZvLm1ham9yID49IDE3KSB7XG4gICAgICAgIHJldHVybiBuZXcgR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnMpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IEdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMubm9kZXMsIG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5zb3VyY2UsIG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5wb3NpdGlvbnMsIG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5wYXRoLCBvcHRpb25zID09PSBudWxsIHx8IG9wdGlvbnMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG9wdGlvbnMub3JpZ2luYWxFcnJvciwgb3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLmV4dGVuc2lvbnMpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbG9jYXRlZEVycm9yKG9yaWdpbmFsRXJyb3IsIHBhdGgpIHtcbiAgICByZXR1cm4gY3JlYXRlR3JhcGhRTEVycm9yKG9yaWdpbmFsRXJyb3IubWVzc2FnZSwge1xuICAgICAgICBub2Rlczogb3JpZ2luYWxFcnJvci5ub2RlcyxcbiAgICAgICAgc291cmNlOiBvcmlnaW5hbEVycm9yLnNvdXJjZSxcbiAgICAgICAgcG9zaXRpb25zOiBvcmlnaW5hbEVycm9yLnBvc2l0aW9ucyxcbiAgICAgICAgcGF0aDogcGF0aCA9PSBudWxsID8gb3JpZ2luYWxFcnJvci5wYXRoIDogcGF0aCxcbiAgICAgICAgb3JpZ2luYWxFcnJvcixcbiAgICAgICAgZXh0ZW5zaW9uczogb3JpZ2luYWxFcnJvci5leHRlbnNpb25zLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js":
/*!*******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   extractExtensionsFromSchema: () => (/* binding */ extractExtensionsFromSchema)\n/* harmony export */ });\n/* harmony import */ var _mapSchema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapSchema.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n\n\nfunction extractExtensionsFromSchema(schema) {\n    const result = {\n        schemaExtensions: schema.extensions || {},\n        types: {},\n    };\n    (0,_mapSchema_js__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.OBJECT_TYPE]: type => {\n            result.types[type.name] = { fields: {}, type: 'object', extensions: type.extensions || {} };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.INTERFACE_TYPE]: type => {\n            result.types[type.name] = { fields: {}, type: 'interface', extensions: type.extensions || {} };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.FIELD]: (field, fieldName, typeName) => {\n            result.types[typeName].fields[fieldName] = {\n                arguments: {},\n                extensions: field.extensions || {},\n            };\n            const args = field.args;\n            if (args != null) {\n                for (const argName in args) {\n                    result.types[typeName].fields[fieldName].arguments[argName] =\n                        args[argName].extensions || {};\n                }\n            }\n            return field;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ENUM_TYPE]: type => {\n            result.types[type.name] = { values: {}, type: 'enum', extensions: type.extensions || {} };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ENUM_VALUE]: (value, typeName, _schema, valueName) => {\n            result.types[typeName].values[valueName] = value.extensions || {};\n            return value;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.SCALAR_TYPE]: type => {\n            result.types[type.name] = { type: 'scalar', extensions: type.extensions || {} };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.UNION_TYPE]: type => {\n            result.types[type.name] = { type: 'union', extensions: type.extensions || {} };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.INPUT_OBJECT_TYPE]: type => {\n            result.types[type.name] = { fields: {}, type: 'input', extensions: type.extensions || {} };\n            return type;\n        },\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.INPUT_OBJECT_FIELD]: (field, fieldName, typeName) => {\n            result.types[typeName].fields[fieldName] = {\n                extensions: field.extensions || {},\n            };\n            return field;\n        },\n    });\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9leHRyYWN0RXh0ZW5zaW9uc0Zyb21TY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ0U7QUFDdEM7QUFDUDtBQUNBLGlEQUFpRDtBQUNqRCxpQkFBaUI7QUFDakI7QUFDQSxJQUFJLHdEQUFTO0FBQ2IsU0FBUyxzREFBVTtBQUNuQix3Q0FBd0MsVUFBVTtBQUNsRDtBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CLHdDQUF3QyxVQUFVO0FBQ2xEO0FBQ0EsU0FBUztBQUNULFNBQVMsc0RBQVU7QUFDbkI7QUFDQSw2QkFBNkI7QUFDN0Isa0RBQWtEO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CLHdDQUF3QyxVQUFVO0FBQ2xEO0FBQ0EsU0FBUztBQUNULFNBQVMsc0RBQVU7QUFDbkI7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CLHdDQUF3QztBQUN4QztBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CLHdDQUF3QztBQUN4QztBQUNBLFNBQVM7QUFDVCxTQUFTLHNEQUFVO0FBQ25CLHdDQUF3QyxVQUFVO0FBQ2xEO0FBQ0EsU0FBUztBQUNULFNBQVMsc0RBQVU7QUFDbkI7QUFDQSxrREFBa0Q7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9leHRyYWN0RXh0ZW5zaW9uc0Zyb21TY2hlbWEuanM/NmY3OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBtYXBTY2hlbWEgfSBmcm9tICcuL21hcFNjaGVtYS5qcyc7XG5pbXBvcnQgeyBNYXBwZXJLaW5kIH0gZnJvbSAnLi9JbnRlcmZhY2VzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBleHRyYWN0RXh0ZW5zaW9uc0Zyb21TY2hlbWEoc2NoZW1hKSB7XG4gICAgY29uc3QgcmVzdWx0ID0ge1xuICAgICAgICBzY2hlbWFFeHRlbnNpb25zOiBzY2hlbWEuZXh0ZW5zaW9ucyB8fCB7fSxcbiAgICAgICAgdHlwZXM6IHt9LFxuICAgIH07XG4gICAgbWFwU2NoZW1hKHNjaGVtYSwge1xuICAgICAgICBbTWFwcGVyS2luZC5PQkpFQ1RfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGUubmFtZV0gPSB7IGZpZWxkczoge30sIHR5cGU6ICdvYmplY3QnLCBleHRlbnNpb25zOiB0eXBlLmV4dGVuc2lvbnMgfHwge30gfTtcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5JTlRFUkZBQ0VfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGUubmFtZV0gPSB7IGZpZWxkczoge30sIHR5cGU6ICdpbnRlcmZhY2UnLCBleHRlbnNpb25zOiB0eXBlLmV4dGVuc2lvbnMgfHwge30gfTtcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5GSUVMRF06IChmaWVsZCwgZmllbGROYW1lLCB0eXBlTmFtZSkgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGVOYW1lXS5maWVsZHNbZmllbGROYW1lXSA9IHtcbiAgICAgICAgICAgICAgICBhcmd1bWVudHM6IHt9LFxuICAgICAgICAgICAgICAgIGV4dGVuc2lvbnM6IGZpZWxkLmV4dGVuc2lvbnMgfHwge30sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgYXJncyA9IGZpZWxkLmFyZ3M7XG4gICAgICAgICAgICBpZiAoYXJncyAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhcmdOYW1lIGluIGFyZ3MpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGVOYW1lXS5maWVsZHNbZmllbGROYW1lXS5hcmd1bWVudHNbYXJnTmFtZV0gPVxuICAgICAgICAgICAgICAgICAgICAgICAgYXJnc1thcmdOYW1lXS5leHRlbnNpb25zIHx8IHt9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmaWVsZDtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuRU5VTV9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICByZXN1bHQudHlwZXNbdHlwZS5uYW1lXSA9IHsgdmFsdWVzOiB7fSwgdHlwZTogJ2VudW0nLCBleHRlbnNpb25zOiB0eXBlLmV4dGVuc2lvbnMgfHwge30gfTtcbiAgICAgICAgICAgIHJldHVybiB0eXBlO1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5FTlVNX1ZBTFVFXTogKHZhbHVlLCB0eXBlTmFtZSwgX3NjaGVtYSwgdmFsdWVOYW1lKSA9PiB7XG4gICAgICAgICAgICByZXN1bHQudHlwZXNbdHlwZU5hbWVdLnZhbHVlc1t2YWx1ZU5hbWVdID0gdmFsdWUuZXh0ZW5zaW9ucyB8fCB7fTtcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuU0NBTEFSX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIHJlc3VsdC50eXBlc1t0eXBlLm5hbWVdID0geyB0eXBlOiAnc2NhbGFyJywgZXh0ZW5zaW9uczogdHlwZS5leHRlbnNpb25zIHx8IHt9IH07XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuVU5JT05fVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgcmVzdWx0LnR5cGVzW3R5cGUubmFtZV0gPSB7IHR5cGU6ICd1bmlvbicsIGV4dGVuc2lvbnM6IHR5cGUuZXh0ZW5zaW9ucyB8fCB7fSB9O1xuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICAgIH0sXG4gICAgICAgIFtNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9UWVBFXTogdHlwZSA9PiB7XG4gICAgICAgICAgICByZXN1bHQudHlwZXNbdHlwZS5uYW1lXSA9IHsgZmllbGRzOiB7fSwgdHlwZTogJ2lucHV0JywgZXh0ZW5zaW9uczogdHlwZS5leHRlbnNpb25zIHx8IHt9IH07XG4gICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuSU5QVVRfT0JKRUNUX0ZJRUxEXTogKGZpZWxkLCBmaWVsZE5hbWUsIHR5cGVOYW1lKSA9PiB7XG4gICAgICAgICAgICByZXN1bHQudHlwZXNbdHlwZU5hbWVdLmZpZWxkc1tmaWVsZE5hbWVdID0ge1xuICAgICAgICAgICAgICAgIGV4dGVuc2lvbnM6IGZpZWxkLmV4dGVuc2lvbnMgfHwge30sXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgcmV0dXJuIGZpZWxkO1xuICAgICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/extractExtensionsFromSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/filterSchema.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/filterSchema.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filterSchema: () => (/* binding */ filterSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _mapSchema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapSchema.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n\n\n\nfunction filterSchema({ schema, typeFilter = () => true, fieldFilter = undefined, rootFieldFilter = undefined, objectFieldFilter = undefined, interfaceFieldFilter = undefined, inputObjectFieldFilter = undefined, argumentFilter = undefined, }) {\n    const filteredSchema = (0,_mapSchema_js__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.QUERY]: (type) => filterRootFields(type, 'Query', rootFieldFilter, argumentFilter),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.MUTATION]: (type) => filterRootFields(type, 'Mutation', rootFieldFilter, argumentFilter),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.SUBSCRIPTION]: (type) => filterRootFields(type, 'Subscription', rootFieldFilter, argumentFilter),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType, type, objectFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.INTERFACE_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLInterfaceType, type, interfaceFieldFilter || fieldFilter, argumentFilter)\n            : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.INPUT_OBJECT_TYPE]: (type) => typeFilter(type.name, type)\n            ? filterElementFields(graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLInputObjectType, type, inputObjectFieldFilter || fieldFilter)\n            : null,\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.UNION_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ENUM_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.SCALAR_TYPE]: (type) => (typeFilter(type.name, type) ? undefined : null),\n    });\n    return filteredSchema;\n}\nfunction filterRootFields(type, operation, rootFieldFilter, argumentFilter) {\n    if (rootFieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (rootFieldFilter && !rootFieldFilter(operation, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && field.args) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(operation, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLObjectType(config);\n    }\n    return type;\n}\nfunction filterElementFields(ElementConstructor, type, fieldFilter, argumentFilter) {\n    if (fieldFilter || argumentFilter) {\n        const config = type.toConfig();\n        for (const fieldName in config.fields) {\n            const field = config.fields[fieldName];\n            if (fieldFilter && !fieldFilter(type.name, fieldName, config.fields[fieldName])) {\n                delete config.fields[fieldName];\n            }\n            else if (argumentFilter && 'args' in field) {\n                for (const argName in field.args) {\n                    if (!argumentFilter(type.name, fieldName, argName, field.args[argName])) {\n                        delete field.args[argName];\n                    }\n                }\n            }\n        }\n        return new ElementConstructor(config);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9maWx0ZXJTY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUEyRjtBQUM5QztBQUNGO0FBQ3BDLHdCQUF3Qix5TkFBeU47QUFDeFAsMkJBQTJCLHdEQUFTO0FBQ3BDLFNBQVMsc0RBQVU7QUFDbkIsU0FBUyxzREFBVTtBQUNuQixTQUFTLHNEQUFVO0FBQ25CLFNBQVMsc0RBQVU7QUFDbkIsa0NBQWtDLHNEQUFpQjtBQUNuRDtBQUNBLFNBQVMsc0RBQVU7QUFDbkIsa0NBQWtDLHlEQUFvQjtBQUN0RDtBQUNBLFNBQVMsc0RBQVU7QUFDbkIsa0NBQWtDLDJEQUFzQjtBQUN4RDtBQUNBLFNBQVMsc0RBQVU7QUFDbkIsU0FBUyxzREFBVTtBQUNuQixTQUFTLHNEQUFVO0FBQ25CLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsc0RBQWlCO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ZpbHRlclNjaGVtYS5qcz9hNmFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEdyYXBoUUxJbnB1dE9iamVjdFR5cGUsIEdyYXBoUUxJbnRlcmZhY2VUeXBlLCBHcmFwaFFMT2JqZWN0VHlwZSwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IE1hcHBlcktpbmQgfSBmcm9tICcuL0ludGVyZmFjZXMuanMnO1xuaW1wb3J0IHsgbWFwU2NoZW1hIH0gZnJvbSAnLi9tYXBTY2hlbWEuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlclNjaGVtYSh7IHNjaGVtYSwgdHlwZUZpbHRlciA9ICgpID0+IHRydWUsIGZpZWxkRmlsdGVyID0gdW5kZWZpbmVkLCByb290RmllbGRGaWx0ZXIgPSB1bmRlZmluZWQsIG9iamVjdEZpZWxkRmlsdGVyID0gdW5kZWZpbmVkLCBpbnRlcmZhY2VGaWVsZEZpbHRlciA9IHVuZGVmaW5lZCwgaW5wdXRPYmplY3RGaWVsZEZpbHRlciA9IHVuZGVmaW5lZCwgYXJndW1lbnRGaWx0ZXIgPSB1bmRlZmluZWQsIH0pIHtcbiAgICBjb25zdCBmaWx0ZXJlZFNjaGVtYSA9IG1hcFNjaGVtYShzY2hlbWEsIHtcbiAgICAgICAgW01hcHBlcktpbmQuUVVFUlldOiAodHlwZSkgPT4gZmlsdGVyUm9vdEZpZWxkcyh0eXBlLCAnUXVlcnknLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSxcbiAgICAgICAgW01hcHBlcktpbmQuTVVUQVRJT05dOiAodHlwZSkgPT4gZmlsdGVyUm9vdEZpZWxkcyh0eXBlLCAnTXV0YXRpb24nLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSxcbiAgICAgICAgW01hcHBlcktpbmQuU1VCU0NSSVBUSU9OXTogKHR5cGUpID0+IGZpbHRlclJvb3RGaWVsZHModHlwZSwgJ1N1YnNjcmlwdGlvbicsIHJvb3RGaWVsZEZpbHRlciwgYXJndW1lbnRGaWx0ZXIpLFxuICAgICAgICBbTWFwcGVyS2luZC5PQkpFQ1RfVFlQRV06ICh0eXBlKSA9PiB0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSlcbiAgICAgICAgICAgID8gZmlsdGVyRWxlbWVudEZpZWxkcyhHcmFwaFFMT2JqZWN0VHlwZSwgdHlwZSwgb2JqZWN0RmllbGRGaWx0ZXIgfHwgZmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKVxuICAgICAgICAgICAgOiBudWxsLFxuICAgICAgICBbTWFwcGVyS2luZC5JTlRFUkZBQ0VfVFlQRV06ICh0eXBlKSA9PiB0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSlcbiAgICAgICAgICAgID8gZmlsdGVyRWxlbWVudEZpZWxkcyhHcmFwaFFMSW50ZXJmYWNlVHlwZSwgdHlwZSwgaW50ZXJmYWNlRmllbGRGaWx0ZXIgfHwgZmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKVxuICAgICAgICAgICAgOiBudWxsLFxuICAgICAgICBbTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV06ICh0eXBlKSA9PiB0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSlcbiAgICAgICAgICAgID8gZmlsdGVyRWxlbWVudEZpZWxkcyhHcmFwaFFMSW5wdXRPYmplY3RUeXBlLCB0eXBlLCBpbnB1dE9iamVjdEZpZWxkRmlsdGVyIHx8IGZpZWxkRmlsdGVyKVxuICAgICAgICAgICAgOiBudWxsLFxuICAgICAgICBbTWFwcGVyS2luZC5VTklPTl9UWVBFXTogKHR5cGUpID0+ICh0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSkgPyB1bmRlZmluZWQgOiBudWxsKSxcbiAgICAgICAgW01hcHBlcktpbmQuRU5VTV9UWVBFXTogKHR5cGUpID0+ICh0eXBlRmlsdGVyKHR5cGUubmFtZSwgdHlwZSkgPyB1bmRlZmluZWQgOiBudWxsKSxcbiAgICAgICAgW01hcHBlcktpbmQuU0NBTEFSX1RZUEVdOiAodHlwZSkgPT4gKHR5cGVGaWx0ZXIodHlwZS5uYW1lLCB0eXBlKSA/IHVuZGVmaW5lZCA6IG51bGwpLFxuICAgIH0pO1xuICAgIHJldHVybiBmaWx0ZXJlZFNjaGVtYTtcbn1cbmZ1bmN0aW9uIGZpbHRlclJvb3RGaWVsZHModHlwZSwgb3BlcmF0aW9uLCByb290RmllbGRGaWx0ZXIsIGFyZ3VtZW50RmlsdGVyKSB7XG4gICAgaWYgKHJvb3RGaWVsZEZpbHRlciB8fCBhcmd1bWVudEZpbHRlcikge1xuICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gY29uZmlnLmZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgaWYgKHJvb3RGaWVsZEZpbHRlciAmJiAhcm9vdEZpZWxkRmlsdGVyKG9wZXJhdGlvbiwgZmllbGROYW1lLCBjb25maWcuZmllbGRzW2ZpZWxkTmFtZV0pKSB7XG4gICAgICAgICAgICAgICAgZGVsZXRlIGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGFyZ3VtZW50RmlsdGVyICYmIGZpZWxkLmFyZ3MpIHtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZ05hbWUgaW4gZmllbGQuYXJncykge1xuICAgICAgICAgICAgICAgICAgICBpZiAoIWFyZ3VtZW50RmlsdGVyKG9wZXJhdGlvbiwgZmllbGROYW1lLCBhcmdOYW1lLCBmaWVsZC5hcmdzW2FyZ05hbWVdKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGZpZWxkLmFyZ3NbYXJnTmFtZV07XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMT2JqZWN0VHlwZShjb25maWcpO1xuICAgIH1cbiAgICByZXR1cm4gdHlwZTtcbn1cbmZ1bmN0aW9uIGZpbHRlckVsZW1lbnRGaWVsZHMoRWxlbWVudENvbnN0cnVjdG9yLCB0eXBlLCBmaWVsZEZpbHRlciwgYXJndW1lbnRGaWx0ZXIpIHtcbiAgICBpZiAoZmllbGRGaWx0ZXIgfHwgYXJndW1lbnRGaWx0ZXIpIHtcbiAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBjb25maWcuZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgIGlmIChmaWVsZEZpbHRlciAmJiAhZmllbGRGaWx0ZXIodHlwZS5uYW1lLCBmaWVsZE5hbWUsIGNvbmZpZy5maWVsZHNbZmllbGROYW1lXSkpIHtcbiAgICAgICAgICAgICAgICBkZWxldGUgY29uZmlnLmZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoYXJndW1lbnRGaWx0ZXIgJiYgJ2FyZ3MnIGluIGZpZWxkKSB7XG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBhcmdOYW1lIGluIGZpZWxkLmFyZ3MpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFhcmd1bWVudEZpbHRlcih0eXBlLm5hbWUsIGZpZWxkTmFtZSwgYXJnTmFtZSwgZmllbGQuYXJnc1thcmdOYW1lXSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGRlbGV0ZSBmaWVsZC5hcmdzW2FyZ05hbWVdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgRWxlbWVudENvbnN0cnVjdG9yKGNvbmZpZyk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/filterSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forEachDefaultValue: () => (/* binding */ forEachDefaultValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction forEachDefaultValue(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type).name.startsWith('__')) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    for (const arg of field.args) {\n                        arg.defaultValue = fn(arg.type, arg.defaultValue);\n                    }\n                }\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    field.defaultValue = fn(field.type, field.defaultValue);\n                }\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9mb3JFYWNoRGVmYXVsdFZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXdFO0FBQ2pFO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsYUFBYSxxREFBWTtBQUN6QixnQkFBZ0IscURBQVk7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiwwREFBaUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2ZvckVhY2hEZWZhdWx0VmFsdWUuanM/YjM5NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROYW1lZFR5cGUsIGlzT2JqZWN0VHlwZSwgaXNJbnB1dE9iamVjdFR5cGUgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBmb3JFYWNoRGVmYXVsdFZhbHVlKHNjaGVtYSwgZm4pIHtcbiAgICBjb25zdCB0eXBlTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIHR5cGVNYXApIHtcbiAgICAgICAgY29uc3QgdHlwZSA9IHR5cGVNYXBbdHlwZU5hbWVdO1xuICAgICAgICBpZiAoIWdldE5hbWVkVHlwZSh0eXBlKS5uYW1lLnN0YXJ0c1dpdGgoJ19fJykpIHtcbiAgICAgICAgICAgIGlmIChpc09iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGFyZyBvZiBmaWVsZC5hcmdzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBhcmcuZGVmYXVsdFZhbHVlID0gZm4oYXJnLnR5cGUsIGFyZy5kZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNJbnB1dE9iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGZpZWxkcykge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgICAgICBmaWVsZC5kZWZhdWx0VmFsdWUgPSBmbihmaWVsZC50eXBlLCBmaWVsZC5kZWZhdWx0VmFsdWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/forEachDefaultValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/forEachField.js":
/*!****************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/forEachField.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   forEachField: () => (/* binding */ forEachField)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction forEachField(schema, fn) {\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        const type = typeMap[typeName];\n        // TODO: maybe have an option to include these?\n        if (!(0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNamedType)(type).name.startsWith('__') && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n            const fields = type.getFields();\n            for (const fieldName in fields) {\n                const field = fields[fieldName];\n                fn(field, typeName, fieldName);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9mb3JFYWNoRmllbGQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBcUQ7QUFDOUM7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEscURBQVksZ0NBQWdDLHFEQUFZO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZm9yRWFjaEZpZWxkLmpzPzkzNGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFtZWRUeXBlLCBpc09iamVjdFR5cGUgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBmb3JFYWNoRmllbGQoc2NoZW1hLCBmbikge1xuICAgIGNvbnN0IHR5cGVNYXAgPSBzY2hlbWEuZ2V0VHlwZU1hcCgpO1xuICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gdHlwZU1hcCkge1xuICAgICAgICBjb25zdCB0eXBlID0gdHlwZU1hcFt0eXBlTmFtZV07XG4gICAgICAgIC8vIFRPRE86IG1heWJlIGhhdmUgYW4gb3B0aW9uIHRvIGluY2x1ZGUgdGhlc2U/XG4gICAgICAgIGlmICghZ2V0TmFtZWRUeXBlKHR5cGUpLm5hbWUuc3RhcnRzV2l0aCgnX18nKSAmJiBpc09iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkcyA9IHR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgIGZuKGZpZWxkLCB0eXBlTmFtZSwgZmllbGROYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/forEachField.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/get-directives.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/get-directives.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDirective: () => (/* binding */ getDirective),\n/* harmony export */   getDirectiveInExtensions: () => (/* binding */ getDirectiveInExtensions),\n/* harmony export */   getDirectives: () => (/* binding */ getDirectives),\n/* harmony export */   getDirectivesInExtensions: () => (/* binding */ getDirectivesInExtensions)\n/* harmony export */ });\n/* harmony import */ var _getArgumentValues_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getArgumentValues.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getArgumentValues.js\");\n\nfunction getDirectivesInExtensions(node, pathToDirectivesInExtensions = ['directives']) {\n    return pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n}\nfunction _getDirectiveInExtensions(directivesInExtensions, directiveName) {\n    const directiveInExtensions = directivesInExtensions.filter(directiveAnnotation => directiveAnnotation.name === directiveName);\n    if (!directiveInExtensions.length) {\n        return undefined;\n    }\n    return directiveInExtensions.map(directive => { var _a; return (_a = directive.args) !== null && _a !== void 0 ? _a : {}; });\n}\nfunction getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = pathToDirectivesInExtensions.reduce((acc, pathSegment) => (acc == null ? acc : acc[pathSegment]), node === null || node === void 0 ? void 0 : node.extensions);\n    if (directivesInExtensions === undefined) {\n        return undefined;\n    }\n    if (Array.isArray(directivesInExtensions)) {\n        return _getDirectiveInExtensions(directivesInExtensions, directiveName);\n    }\n    // Support condensed format by converting to longer format\n    // The condensed format does not preserve ordering of directives when  repeatable directives are used.\n    // See https://github.com/ardatan/graphql-tools/issues/2534\n    const reformattedDirectivesInExtensions = [];\n    for (const [name, argsOrArrayOfArgs] of Object.entries(directivesInExtensions)) {\n        if (Array.isArray(argsOrArrayOfArgs)) {\n            for (const args of argsOrArrayOfArgs) {\n                reformattedDirectivesInExtensions.push({ name, args });\n            }\n        }\n        else {\n            reformattedDirectivesInExtensions.push({ name, args: argsOrArrayOfArgs });\n        }\n    }\n    return _getDirectiveInExtensions(reformattedDirectivesInExtensions, directiveName);\n}\nfunction getDirectives(schema, node, pathToDirectivesInExtensions = ['directives']) {\n    const directivesInExtensions = getDirectivesInExtensions(node, pathToDirectivesInExtensions);\n    if (directivesInExtensions != null && directivesInExtensions.length > 0) {\n        return directivesInExtensions;\n    }\n    const schemaDirectives = schema && schema.getDirectives ? schema.getDirectives() : [];\n    const schemaDirectiveMap = schemaDirectives.reduce((schemaDirectiveMap, schemaDirective) => {\n        schemaDirectiveMap[schemaDirective.name] = schemaDirective;\n        return schemaDirectiveMap;\n    }, {});\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                const schemaDirective = schemaDirectiveMap[directiveNode.name.value];\n                if (schemaDirective) {\n                    result.push({ name: directiveNode.name.value, args: (0,_getArgumentValues_js__WEBPACK_IMPORTED_MODULE_0__.getArgumentValues)(schemaDirective, directiveNode) });\n                }\n            }\n        }\n    }\n    return result;\n}\nfunction getDirective(schema, node, directiveName, pathToDirectivesInExtensions = ['directives']) {\n    const directiveInExtensions = getDirectiveInExtensions(node, directiveName, pathToDirectivesInExtensions);\n    if (directiveInExtensions != null) {\n        return directiveInExtensions;\n    }\n    const schemaDirective = schema && schema.getDirective ? schema.getDirective(directiveName) : undefined;\n    if (schemaDirective == null) {\n        return undefined;\n    }\n    let astNodes = [];\n    if (node.astNode) {\n        astNodes.push(node.astNode);\n    }\n    if ('extensionASTNodes' in node && node.extensionASTNodes) {\n        astNodes = [...astNodes, ...node.extensionASTNodes];\n    }\n    const result = [];\n    for (const astNode of astNodes) {\n        if (astNode.directives) {\n            for (const directiveNode of astNode.directives) {\n                if (directiveNode.name.value === directiveName) {\n                    result.push((0,_getArgumentValues_js__WEBPACK_IMPORTED_MODULE_0__.getArgumentValues)(schemaDirective, directiveNode));\n                }\n            }\n        }\n    }\n    if (!result.length) {\n        return undefined;\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXQtZGlyZWN0aXZlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEyRDtBQUNwRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0RBQW9ELFFBQVEsbUVBQW1FO0FBQy9IO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseURBQXlELFlBQVk7QUFDckU7QUFDQTtBQUNBO0FBQ0EscURBQXFELCtCQUErQjtBQUNwRjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUssSUFBSTtBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLHNDQUFzQyx3RUFBaUIsa0NBQWtDO0FBQzNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx3RUFBaUI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldC1kaXJlY3RpdmVzLmpzPzVjYjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QXJndW1lbnRWYWx1ZXMgfSBmcm9tICcuL2dldEFyZ3VtZW50VmFsdWVzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVzSW5FeHRlbnNpb25zKG5vZGUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgPSBbJ2RpcmVjdGl2ZXMnXSkge1xuICAgIHJldHVybiBwYXRoVG9EaXJlY3RpdmVzSW5FeHRlbnNpb25zLnJlZHVjZSgoYWNjLCBwYXRoU2VnbWVudCkgPT4gKGFjYyA9PSBudWxsID8gYWNjIDogYWNjW3BhdGhTZWdtZW50XSksIG5vZGUgPT09IG51bGwgfHwgbm9kZSA9PT0gdm9pZCAwID8gdm9pZCAwIDogbm9kZS5leHRlbnNpb25zKTtcbn1cbmZ1bmN0aW9uIF9nZXREaXJlY3RpdmVJbkV4dGVuc2lvbnMoZGlyZWN0aXZlc0luRXh0ZW5zaW9ucywgZGlyZWN0aXZlTmFtZSkge1xuICAgIGNvbnN0IGRpcmVjdGl2ZUluRXh0ZW5zaW9ucyA9IGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnMuZmlsdGVyKGRpcmVjdGl2ZUFubm90YXRpb24gPT4gZGlyZWN0aXZlQW5ub3RhdGlvbi5uYW1lID09PSBkaXJlY3RpdmVOYW1lKTtcbiAgICBpZiAoIWRpcmVjdGl2ZUluRXh0ZW5zaW9ucy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIGRpcmVjdGl2ZUluRXh0ZW5zaW9ucy5tYXAoZGlyZWN0aXZlID0+IHsgdmFyIF9hOyByZXR1cm4gKF9hID0gZGlyZWN0aXZlLmFyZ3MpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9OyB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVJbkV4dGVuc2lvbnMobm9kZSwgZGlyZWN0aXZlTmFtZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMucmVkdWNlKChhY2MsIHBhdGhTZWdtZW50KSA9PiAoYWNjID09IG51bGwgPyBhY2MgOiBhY2NbcGF0aFNlZ21lbnRdKSwgbm9kZSA9PT0gbnVsbCB8fCBub2RlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBub2RlLmV4dGVuc2lvbnMpO1xuICAgIGlmIChkaXJlY3RpdmVzSW5FeHRlbnNpb25zID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoZGlyZWN0aXZlc0luRXh0ZW5zaW9ucykpIHtcbiAgICAgICAgcmV0dXJuIF9nZXREaXJlY3RpdmVJbkV4dGVuc2lvbnMoZGlyZWN0aXZlc0luRXh0ZW5zaW9ucywgZGlyZWN0aXZlTmFtZSk7XG4gICAgfVxuICAgIC8vIFN1cHBvcnQgY29uZGVuc2VkIGZvcm1hdCBieSBjb252ZXJ0aW5nIHRvIGxvbmdlciBmb3JtYXRcbiAgICAvLyBUaGUgY29uZGVuc2VkIGZvcm1hdCBkb2VzIG5vdCBwcmVzZXJ2ZSBvcmRlcmluZyBvZiBkaXJlY3RpdmVzIHdoZW4gIHJlcGVhdGFibGUgZGlyZWN0aXZlcyBhcmUgdXNlZC5cbiAgICAvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2FyZGF0YW4vZ3JhcGhxbC10b29scy9pc3N1ZXMvMjUzNFxuICAgIGNvbnN0IHJlZm9ybWF0dGVkRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFtdO1xuICAgIGZvciAoY29uc3QgW25hbWUsIGFyZ3NPckFycmF5T2ZBcmdzXSBvZiBPYmplY3QuZW50cmllcyhkaXJlY3RpdmVzSW5FeHRlbnNpb25zKSkge1xuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShhcmdzT3JBcnJheU9mQXJncykpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgYXJncyBvZiBhcmdzT3JBcnJheU9mQXJncykge1xuICAgICAgICAgICAgICAgIHJlZm9ybWF0dGVkRGlyZWN0aXZlc0luRXh0ZW5zaW9ucy5wdXNoKHsgbmFtZSwgYXJncyB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJlZm9ybWF0dGVkRGlyZWN0aXZlc0luRXh0ZW5zaW9ucy5wdXNoKHsgbmFtZSwgYXJnczogYXJnc09yQXJyYXlPZkFyZ3MgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIF9nZXREaXJlY3RpdmVJbkV4dGVuc2lvbnMocmVmb3JtYXR0ZWREaXJlY3RpdmVzSW5FeHRlbnNpb25zLCBkaXJlY3RpdmVOYW1lKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXREaXJlY3RpdmVzKHNjaGVtYSwgbm9kZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IGdldERpcmVjdGl2ZXNJbkV4dGVuc2lvbnMobm9kZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyk7XG4gICAgaWYgKGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnMgIT0gbnVsbCAmJiBkaXJlY3RpdmVzSW5FeHRlbnNpb25zLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmV0dXJuIGRpcmVjdGl2ZXNJbkV4dGVuc2lvbnM7XG4gICAgfVxuICAgIGNvbnN0IHNjaGVtYURpcmVjdGl2ZXMgPSBzY2hlbWEgJiYgc2NoZW1hLmdldERpcmVjdGl2ZXMgPyBzY2hlbWEuZ2V0RGlyZWN0aXZlcygpIDogW107XG4gICAgY29uc3Qgc2NoZW1hRGlyZWN0aXZlTWFwID0gc2NoZW1hRGlyZWN0aXZlcy5yZWR1Y2UoKHNjaGVtYURpcmVjdGl2ZU1hcCwgc2NoZW1hRGlyZWN0aXZlKSA9PiB7XG4gICAgICAgIHNjaGVtYURpcmVjdGl2ZU1hcFtzY2hlbWFEaXJlY3RpdmUubmFtZV0gPSBzY2hlbWFEaXJlY3RpdmU7XG4gICAgICAgIHJldHVybiBzY2hlbWFEaXJlY3RpdmVNYXA7XG4gICAgfSwge30pO1xuICAgIGxldCBhc3ROb2RlcyA9IFtdO1xuICAgIGlmIChub2RlLmFzdE5vZGUpIHtcbiAgICAgICAgYXN0Tm9kZXMucHVzaChub2RlLmFzdE5vZGUpO1xuICAgIH1cbiAgICBpZiAoJ2V4dGVuc2lvbkFTVE5vZGVzJyBpbiBub2RlICYmIG5vZGUuZXh0ZW5zaW9uQVNUTm9kZXMpIHtcbiAgICAgICAgYXN0Tm9kZXMgPSBbLi4uYXN0Tm9kZXMsIC4uLm5vZGUuZXh0ZW5zaW9uQVNUTm9kZXNdO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGFzdE5vZGUgb2YgYXN0Tm9kZXMpIHtcbiAgICAgICAgaWYgKGFzdE5vZGUuZGlyZWN0aXZlcykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlY3RpdmVOb2RlIG9mIGFzdE5vZGUuZGlyZWN0aXZlcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHNjaGVtYURpcmVjdGl2ZSA9IHNjaGVtYURpcmVjdGl2ZU1hcFtkaXJlY3RpdmVOb2RlLm5hbWUudmFsdWVdO1xuICAgICAgICAgICAgICAgIGlmIChzY2hlbWFEaXJlY3RpdmUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goeyBuYW1lOiBkaXJlY3RpdmVOb2RlLm5hbWUudmFsdWUsIGFyZ3M6IGdldEFyZ3VtZW50VmFsdWVzKHNjaGVtYURpcmVjdGl2ZSwgZGlyZWN0aXZlTm9kZSkgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlyZWN0aXZlKHNjaGVtYSwgbm9kZSwgZGlyZWN0aXZlTmFtZSwgcGF0aFRvRGlyZWN0aXZlc0luRXh0ZW5zaW9ucyA9IFsnZGlyZWN0aXZlcyddKSB7XG4gICAgY29uc3QgZGlyZWN0aXZlSW5FeHRlbnNpb25zID0gZ2V0RGlyZWN0aXZlSW5FeHRlbnNpb25zKG5vZGUsIGRpcmVjdGl2ZU5hbWUsIHBhdGhUb0RpcmVjdGl2ZXNJbkV4dGVuc2lvbnMpO1xuICAgIGlmIChkaXJlY3RpdmVJbkV4dGVuc2lvbnMgIT0gbnVsbCkge1xuICAgICAgICByZXR1cm4gZGlyZWN0aXZlSW5FeHRlbnNpb25zO1xuICAgIH1cbiAgICBjb25zdCBzY2hlbWFEaXJlY3RpdmUgPSBzY2hlbWEgJiYgc2NoZW1hLmdldERpcmVjdGl2ZSA/IHNjaGVtYS5nZXREaXJlY3RpdmUoZGlyZWN0aXZlTmFtZSkgOiB1bmRlZmluZWQ7XG4gICAgaWYgKHNjaGVtYURpcmVjdGl2ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGxldCBhc3ROb2RlcyA9IFtdO1xuICAgIGlmIChub2RlLmFzdE5vZGUpIHtcbiAgICAgICAgYXN0Tm9kZXMucHVzaChub2RlLmFzdE5vZGUpO1xuICAgIH1cbiAgICBpZiAoJ2V4dGVuc2lvbkFTVE5vZGVzJyBpbiBub2RlICYmIG5vZGUuZXh0ZW5zaW9uQVNUTm9kZXMpIHtcbiAgICAgICAgYXN0Tm9kZXMgPSBbLi4uYXN0Tm9kZXMsIC4uLm5vZGUuZXh0ZW5zaW9uQVNUTm9kZXNdO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGFzdE5vZGUgb2YgYXN0Tm9kZXMpIHtcbiAgICAgICAgaWYgKGFzdE5vZGUuZGlyZWN0aXZlcykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBkaXJlY3RpdmVOb2RlIG9mIGFzdE5vZGUuZGlyZWN0aXZlcykge1xuICAgICAgICAgICAgICAgIGlmIChkaXJlY3RpdmVOb2RlLm5hbWUudmFsdWUgPT09IGRpcmVjdGl2ZU5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goZ2V0QXJndW1lbnRWYWx1ZXMoc2NoZW1hRGlyZWN0aXZlLCBkaXJlY3RpdmVOb2RlKSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmICghcmVzdWx0Lmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/get-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/get-implementing-types.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/get-implementing-types.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getImplementingTypes: () => (/* binding */ getImplementingTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getImplementingTypes(interfaceName, schema) {\n    const allTypesMap = schema.getTypeMap();\n    const result = [];\n    for (const graphqlTypeName in allTypesMap) {\n        const graphqlType = allTypesMap[graphqlTypeName];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(graphqlType)) {\n            const allInterfaces = graphqlType.getInterfaces();\n            if (allInterfaces.find(int => int.name === interfaceName)) {\n                result.push(graphqlType.name);\n            }\n        }\n    }\n    return result;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXQtaW1wbGVtZW50aW5nLXR5cGVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXVDO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHFEQUFZO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0LWltcGxlbWVudGluZy10eXBlcy5qcz9iOTYyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzT2JqZWN0VHlwZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldEltcGxlbWVudGluZ1R5cGVzKGludGVyZmFjZU5hbWUsIHNjaGVtYSkge1xuICAgIGNvbnN0IGFsbFR5cGVzTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcbiAgICBmb3IgKGNvbnN0IGdyYXBocWxUeXBlTmFtZSBpbiBhbGxUeXBlc01hcCkge1xuICAgICAgICBjb25zdCBncmFwaHFsVHlwZSA9IGFsbFR5cGVzTWFwW2dyYXBocWxUeXBlTmFtZV07XG4gICAgICAgIGlmIChpc09iamVjdFR5cGUoZ3JhcGhxbFR5cGUpKSB7XG4gICAgICAgICAgICBjb25zdCBhbGxJbnRlcmZhY2VzID0gZ3JhcGhxbFR5cGUuZ2V0SW50ZXJmYWNlcygpO1xuICAgICAgICAgICAgaWYgKGFsbEludGVyZmFjZXMuZmluZChpbnQgPT4gaW50Lm5hbWUgPT09IGludGVyZmFjZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0LnB1c2goZ3JhcGhxbFR5cGUubmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/get-implementing-types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/getArgumentValues.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/getArgumentValues.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getArgumentValues: () => (/* binding */ getArgumentValues)\n/* harmony export */ });\n/* harmony import */ var _jsutils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./jsutils.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/jsutils.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/valueFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _inspect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./inspect.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\");\n\n\n\n\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nfunction getArgumentValues(def, node, variableValues = {}) {\n    var _a;\n    const coercedValues = {};\n    const argumentNodes = (_a = node.arguments) !== null && _a !== void 0 ? _a : [];\n    const argNodeMap = argumentNodes.reduce((prev, arg) => ({\n        ...prev,\n        [arg.name.value]: arg,\n    }), {});\n    for (const { name, type: argType, defaultValue } of def.args) {\n        const argumentNode = argNodeMap[name];\n        if (!argumentNode) {\n            if (defaultValue !== undefined) {\n                coercedValues[name] = defaultValue;\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,_inspect_js__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'was not provided.', {\n                    nodes: [node],\n                });\n            }\n            continue;\n        }\n        const valueNode = argumentNode.value;\n        let isNull = valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.NULL;\n        if (valueNode.kind === graphql__WEBPACK_IMPORTED_MODULE_3__.Kind.VARIABLE) {\n            const variableName = valueNode.name.value;\n            if (variableValues == null || !(0,_jsutils_js__WEBPACK_IMPORTED_MODULE_4__.hasOwnProperty)(variableValues, variableName)) {\n                if (defaultValue !== undefined) {\n                    coercedValues[name] = defaultValue;\n                }\n                else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n                    throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of required type \"${(0,_inspect_js__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` +\n                        `was provided the variable \"$${variableName}\" which was not provided a runtime value.`, {\n                        nodes: [valueNode],\n                    });\n                }\n                continue;\n            }\n            isNull = variableValues[variableName] == null;\n        }\n        if (isNull && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(argType)) {\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" of non-null type \"${(0,_inspect_js__WEBPACK_IMPORTED_MODULE_2__.inspect)(argType)}\" ` + 'must not be null.', {\n                nodes: [valueNode],\n            });\n        }\n        const coercedValue = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.valueFromAST)(valueNode, argType, variableValues);\n        if (coercedValue === undefined) {\n            // Note: ValuesOfCorrectTypeRule validation should catch this before\n            // execution. This is a runtime check to ensure execution does not\n            // continue with an invalid argument value.\n            throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.createGraphQLError)(`Argument \"${name}\" has invalid value ${(0,graphql__WEBPACK_IMPORTED_MODULE_6__.print)(valueNode)}.`, {\n                nodes: [valueNode],\n            });\n        }\n        coercedValues[name] = coercedValue;\n    }\n    return coercedValues;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRBcmd1bWVudFZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE4QztBQUNzQjtBQUNuQjtBQUNWO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5REFBeUQ7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxLQUFLO0FBQ1YsaUJBQWlCLG9DQUFvQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHNEQUFhO0FBQ2xDLHNCQUFzQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQixvREFBTyxVQUFVO0FBQ2xHO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0NBQXdDLHlDQUFJO0FBQzVDLCtCQUErQix5Q0FBSTtBQUNuQztBQUNBLDJDQUEyQywyREFBYztBQUN6RDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsc0RBQWE7QUFDdEMsMEJBQTBCLDhEQUFrQixjQUFjLEtBQUssc0JBQXNCLG9EQUFPLFVBQVU7QUFDdEcsdURBQXVELGFBQWE7QUFDcEU7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQixzREFBYTtBQUNuQyxrQkFBa0IsOERBQWtCLGNBQWMsS0FBSyxzQkFBc0Isb0RBQU8sVUFBVTtBQUM5RjtBQUNBLGFBQWE7QUFDYjtBQUNBLDZCQUE2QixxREFBWTtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiw4REFBa0IsY0FBYyxLQUFLLHNCQUFzQiw4Q0FBSyxZQUFZO0FBQzlGO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0QXJndW1lbnRWYWx1ZXMuanM/Y2VmOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBoYXNPd25Qcm9wZXJ0eSB9IGZyb20gJy4vanN1dGlscy5qcyc7XG5pbXBvcnQgeyB2YWx1ZUZyb21BU1QsIGlzTm9uTnVsbFR5cGUsIEtpbmQsIHByaW50LCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgY3JlYXRlR3JhcGhRTEVycm9yIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgaW5zcGVjdCB9IGZyb20gJy4vaW5zcGVjdC5qcyc7XG4vKipcbiAqIFByZXBhcmVzIGFuIG9iamVjdCBtYXAgb2YgYXJndW1lbnQgdmFsdWVzIGdpdmVuIGEgbGlzdCBvZiBhcmd1bWVudFxuICogZGVmaW5pdGlvbnMgYW5kIGxpc3Qgb2YgYXJndW1lbnQgQVNUIG5vZGVzLlxuICpcbiAqIE5vdGU6IFRoZSByZXR1cm5lZCB2YWx1ZSBpcyBhIHBsYWluIE9iamVjdCB3aXRoIGEgcHJvdG90eXBlLCBzaW5jZSBpdCBpc1xuICogZXhwb3NlZCB0byB1c2VyIGNvZGUuIENhcmUgc2hvdWxkIGJlIHRha2VuIHRvIG5vdCBwdWxsIHZhbHVlcyBmcm9tIHRoZVxuICogT2JqZWN0IHByb3RvdHlwZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldEFyZ3VtZW50VmFsdWVzKGRlZiwgbm9kZSwgdmFyaWFibGVWYWx1ZXMgPSB7fSkge1xuICAgIHZhciBfYTtcbiAgICBjb25zdCBjb2VyY2VkVmFsdWVzID0ge307XG4gICAgY29uc3QgYXJndW1lbnROb2RlcyA9IChfYSA9IG5vZGUuYXJndW1lbnRzKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICBjb25zdCBhcmdOb2RlTWFwID0gYXJndW1lbnROb2Rlcy5yZWR1Y2UoKHByZXYsIGFyZykgPT4gKHtcbiAgICAgICAgLi4ucHJldixcbiAgICAgICAgW2FyZy5uYW1lLnZhbHVlXTogYXJnLFxuICAgIH0pLCB7fSk7XG4gICAgZm9yIChjb25zdCB7IG5hbWUsIHR5cGU6IGFyZ1R5cGUsIGRlZmF1bHRWYWx1ZSB9IG9mIGRlZi5hcmdzKSB7XG4gICAgICAgIGNvbnN0IGFyZ3VtZW50Tm9kZSA9IGFyZ05vZGVNYXBbbmFtZV07XG4gICAgICAgIGlmICghYXJndW1lbnROb2RlKSB7XG4gICAgICAgICAgICBpZiAoZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb2VyY2VkVmFsdWVzW25hbWVdID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNOb25OdWxsVHlwZShhcmdUeXBlKSkge1xuICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgb2YgcmVxdWlyZWQgdHlwZSBcIiR7aW5zcGVjdChhcmdUeXBlKX1cIiBgICsgJ3dhcyBub3QgcHJvdmlkZWQuJywge1xuICAgICAgICAgICAgICAgICAgICBub2RlczogW25vZGVdLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdmFsdWVOb2RlID0gYXJndW1lbnROb2RlLnZhbHVlO1xuICAgICAgICBsZXQgaXNOdWxsID0gdmFsdWVOb2RlLmtpbmQgPT09IEtpbmQuTlVMTDtcbiAgICAgICAgaWYgKHZhbHVlTm9kZS5raW5kID09PSBLaW5kLlZBUklBQkxFKSB7XG4gICAgICAgICAgICBjb25zdCB2YXJpYWJsZU5hbWUgPSB2YWx1ZU5vZGUubmFtZS52YWx1ZTtcbiAgICAgICAgICAgIGlmICh2YXJpYWJsZVZhbHVlcyA9PSBudWxsIHx8ICFoYXNPd25Qcm9wZXJ0eSh2YXJpYWJsZVZhbHVlcywgdmFyaWFibGVOYW1lKSkge1xuICAgICAgICAgICAgICAgIGlmIChkZWZhdWx0VmFsdWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICBjb2VyY2VkVmFsdWVzW25hbWVdID0gZGVmYXVsdFZhbHVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChpc05vbk51bGxUeXBlKGFyZ1R5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgb2YgcmVxdWlyZWQgdHlwZSBcIiR7aW5zcGVjdChhcmdUeXBlKX1cIiBgICtcbiAgICAgICAgICAgICAgICAgICAgICAgIGB3YXMgcHJvdmlkZWQgdGhlIHZhcmlhYmxlIFwiJCR7dmFyaWFibGVOYW1lfVwiIHdoaWNoIHdhcyBub3QgcHJvdmlkZWQgYSBydW50aW1lIHZhbHVlLmAsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5vZGVzOiBbdmFsdWVOb2RlXSxcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXNOdWxsID0gdmFyaWFibGVWYWx1ZXNbdmFyaWFibGVOYW1lXSA9PSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc051bGwgJiYgaXNOb25OdWxsVHlwZShhcmdUeXBlKSkge1xuICAgICAgICAgICAgdGhyb3cgY3JlYXRlR3JhcGhRTEVycm9yKGBBcmd1bWVudCBcIiR7bmFtZX1cIiBvZiBub24tbnVsbCB0eXBlIFwiJHtpbnNwZWN0KGFyZ1R5cGUpfVwiIGAgKyAnbXVzdCBub3QgYmUgbnVsbC4nLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgY29lcmNlZFZhbHVlID0gdmFsdWVGcm9tQVNUKHZhbHVlTm9kZSwgYXJnVHlwZSwgdmFyaWFibGVWYWx1ZXMpO1xuICAgICAgICBpZiAoY29lcmNlZFZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIC8vIE5vdGU6IFZhbHVlc09mQ29ycmVjdFR5cGVSdWxlIHZhbGlkYXRpb24gc2hvdWxkIGNhdGNoIHRoaXMgYmVmb3JlXG4gICAgICAgICAgICAvLyBleGVjdXRpb24uIFRoaXMgaXMgYSBydW50aW1lIGNoZWNrIHRvIGVuc3VyZSBleGVjdXRpb24gZG9lcyBub3RcbiAgICAgICAgICAgIC8vIGNvbnRpbnVlIHdpdGggYW4gaW52YWxpZCBhcmd1bWVudCB2YWx1ZS5cbiAgICAgICAgICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQXJndW1lbnQgXCIke25hbWV9XCIgaGFzIGludmFsaWQgdmFsdWUgJHtwcmludCh2YWx1ZU5vZGUpfS5gLCB7XG4gICAgICAgICAgICAgICAgbm9kZXM6IFt2YWx1ZU5vZGVdLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY29lcmNlZFZhbHVlc1tuYW1lXSA9IGNvZXJjZWRWYWx1ZTtcbiAgICB9XG4gICAgcmV0dXJuIGNvZXJjZWRWYWx1ZXM7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/getArgumentValues.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getObjectTypeFromTypeMap: () => (/* binding */ getObjectTypeFromTypeMap)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDaEM7QUFDUDtBQUNBO0FBQ0EsWUFBWSxxREFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAuanM/YWI0ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09iamVjdFR5cGUgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAodHlwZU1hcCwgdHlwZSkge1xuICAgIGlmICh0eXBlKSB7XG4gICAgICAgIGNvbnN0IG1heWJlT2JqZWN0VHlwZSA9IHR5cGVNYXBbdHlwZS5uYW1lXTtcbiAgICAgICAgaWYgKGlzT2JqZWN0VHlwZShtYXliZU9iamVjdFR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbWF5YmVPYmplY3RUeXBlO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationASTFromDocument: () => (/* binding */ getOperationASTFromDocument),\n/* harmony export */   getOperationASTFromRequest: () => (/* binding */ getOperationASTFromRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nconst getOperationASTFromRequest = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ0Y7QUFDakM7QUFDUCxnQkFBZ0Isd0RBQWU7QUFDL0I7QUFDQSxrREFBa0Qsb0JBQW9CO0FBQ3RFO0FBQ0E7QUFDQTtBQUNPLG1DQUFtQyxxREFBUTtBQUNsRDtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QuanM/YzM1ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcGVyYXRpb25BU1QgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnLi9tZW1vaXplLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRpb25BU1RGcm9tRG9jdW1lbnQoZG9jdW1lbnROb2RlLCBvcGVyYXRpb25OYW1lKSB7XG4gICAgY29uc3QgZG9jID0gZ2V0T3BlcmF0aW9uQVNUKGRvY3VtZW50Tm9kZSwgb3BlcmF0aW9uTmFtZSk7XG4gICAgaWYgKCFkb2MpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgaW5mZXIgb3BlcmF0aW9uICR7b3BlcmF0aW9uTmFtZSB8fCAnJ31gKTtcbiAgICB9XG4gICAgcmV0dXJuIGRvYztcbn1cbmV4cG9ydCBjb25zdCBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdCA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gZ2V0T3BlcmF0aW9uQVNURnJvbURvY3VtZW50KHJlcXVlc3QuZG9jdW1lbnQsIHJlcXVlc3Qub3BlcmF0aW9uTmFtZSk7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/getResolversFromSchema.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/getResolversFromSchema.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getResolversFromSchema: () => (/* binding */ getResolversFromSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n\nfunction getResolversFromSchema(schema, \n// Include default merged resolvers\nincludeDefaultMergedResolver) {\n    var _a, _b;\n    const resolvers = Object.create(null);\n    const typeMap = schema.getTypeMap();\n    for (const typeName in typeMap) {\n        if (!typeName.startsWith('__')) {\n            const type = typeMap[typeName];\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(type)) {\n                if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type)) {\n                    const config = type.toConfig();\n                    delete config.astNode; // avoid AST duplication elsewhere\n                    resolvers[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType(config);\n                }\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n                resolvers[typeName] = {};\n                const values = type.getValues();\n                for (const value of values) {\n                    resolvers[typeName][value.name] = value.value;\n                }\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n                if (type.resolveType != null) {\n                    resolvers[typeName] = {\n                        __resolveType: type.resolveType,\n                    };\n                }\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n                resolvers[typeName] = {};\n                if (type.isTypeOf != null) {\n                    resolvers[typeName].__isTypeOf = type.isTypeOf;\n                }\n                const fields = type.getFields();\n                for (const fieldName in fields) {\n                    const field = fields[fieldName];\n                    if (field.subscribe != null) {\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].subscribe = field.subscribe;\n                    }\n                    if (field.resolve != null && ((_a = field.resolve) === null || _a === void 0 ? void 0 : _a.name) !== 'defaultFieldResolver') {\n                        switch ((_b = field.resolve) === null || _b === void 0 ? void 0 : _b.name) {\n                            case 'defaultMergedResolver':\n                                if (!includeDefaultMergedResolver) {\n                                    continue;\n                                }\n                                break;\n                            case 'defaultFieldResolver':\n                                continue;\n                        }\n                        resolvers[typeName][fieldName] = resolvers[typeName][fieldName] || {};\n                        resolvers[typeName][fieldName].resolve = field.resolve;\n                    }\n                }\n            }\n        }\n    }\n    return resolvers;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRSZXNvbHZlcnNGcm9tU2NoZW1hLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwSTtBQUNuSTtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQVk7QUFDNUIscUJBQXFCLDhEQUFxQjtBQUMxQztBQUNBLDJDQUEyQztBQUMzQyw4Q0FBOEMsc0RBQWlCO0FBQy9EO0FBQ0E7QUFDQSxxQkFBcUIsbURBQVU7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHdEQUFlO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQixvREFBVztBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIscURBQVk7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldFJlc29sdmVyc0Zyb21TY2hlbWEuanM/MDcwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMU2NhbGFyVHlwZSwgaXNTY2FsYXJUeXBlLCBpc0VudW1UeXBlLCBpc0ludGVyZmFjZVR5cGUsIGlzVW5pb25UeXBlLCBpc09iamVjdFR5cGUsIGlzU3BlY2lmaWVkU2NhbGFyVHlwZSwgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRSZXNvbHZlcnNGcm9tU2NoZW1hKHNjaGVtYSwgXG4vLyBJbmNsdWRlIGRlZmF1bHQgbWVyZ2VkIHJlc29sdmVyc1xuaW5jbHVkZURlZmF1bHRNZXJnZWRSZXNvbHZlcikge1xuICAgIHZhciBfYSwgX2I7XG4gICAgY29uc3QgcmVzb2x2ZXJzID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICBjb25zdCB0eXBlTWFwID0gc2NoZW1hLmdldFR5cGVNYXAoKTtcbiAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIHR5cGVNYXApIHtcbiAgICAgICAgaWYgKCF0eXBlTmFtZS5zdGFydHNXaXRoKCdfXycpKSB7XG4gICAgICAgICAgICBjb25zdCB0eXBlID0gdHlwZU1hcFt0eXBlTmFtZV07XG4gICAgICAgICAgICBpZiAoaXNTY2FsYXJUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFpc1NwZWNpZmllZFNjYWxhclR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgY29uZmlnLmFzdE5vZGU7IC8vIGF2b2lkIEFTVCBkdXBsaWNhdGlvbiBlbHNld2hlcmVcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXSA9IG5ldyBHcmFwaFFMU2NhbGFyVHlwZShjb25maWcpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGlzRW51bVR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdID0ge307XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWVzID0gdHlwZS5nZXRWYWx1ZXMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHZhbHVlIG9mIHZhbHVlcykge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdW3ZhbHVlLm5hbWVdID0gdmFsdWUudmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNJbnRlcmZhY2VUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGUucmVzb2x2ZVR5cGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgX19yZXNvbHZlVHlwZTogdHlwZS5yZXNvbHZlVHlwZSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpc1VuaW9uVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgICAgIGlmICh0eXBlLnJlc29sdmVUeXBlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9fcmVzb2x2ZVR5cGU6IHR5cGUucmVzb2x2ZVR5cGUsXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXSA9IHt9O1xuICAgICAgICAgICAgICAgIGlmICh0eXBlLmlzVHlwZU9mICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXS5fX2lzVHlwZU9mID0gdHlwZS5pc1R5cGVPZjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGZpZWxkLnN1YnNjcmliZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gPSByZXNvbHZlcnNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0gfHwge307XG4gICAgICAgICAgICAgICAgICAgICAgICByZXNvbHZlcnNbdHlwZU5hbWVdW2ZpZWxkTmFtZV0uc3Vic2NyaWJlID0gZmllbGQuc3Vic2NyaWJlO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGlmIChmaWVsZC5yZXNvbHZlICE9IG51bGwgJiYgKChfYSA9IGZpZWxkLnJlc29sdmUpID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5uYW1lKSAhPT0gJ2RlZmF1bHRGaWVsZFJlc29sdmVyJykge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3dpdGNoICgoX2IgPSBmaWVsZC5yZXNvbHZlKSA9PT0gbnVsbCB8fCBfYiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2IubmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgJ2RlZmF1bHRNZXJnZWRSZXNvbHZlcic6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaW5jbHVkZURlZmF1bHRNZXJnZWRSZXNvbHZlcikge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSAnZGVmYXVsdEZpZWxkUmVzb2x2ZXInOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV1bZmllbGROYW1lXSA9IHJlc29sdmVyc1t0eXBlTmFtZV1bZmllbGROYW1lXSB8fCB7fTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV1bZmllbGROYW1lXS5yZXNvbHZlID0gZmllbGQucmVzb2x2ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmVzb2x2ZXJzO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/getResolversFromSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getResponseKeyFromInfo: () => (/* binding */ getResponseKeyFromInfo)\n/* harmony export */ });\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias != null ? info.fieldNodes[0].alias.value : info.fieldName;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRSZXNwb25zZUtleUZyb21JbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldFJlc3BvbnNlS2V5RnJvbUluZm8uanM/OGZlYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldCB0aGUga2V5IHVuZGVyIHdoaWNoIHRoZSByZXN1bHQgb2YgdGhpcyByZXNvbHZlciB3aWxsIGJlIHBsYWNlZCBpbiB0aGUgcmVzcG9uc2UgSlNPTi4gQmFzaWNhbGx5LCBqdXN0XG4gKiByZXNvbHZlcyBhbGlhc2VzLlxuICogQHBhcmFtIGluZm8gVGhlIGluZm8gYXJndW1lbnQgdG8gdGhlIHJlc29sdmVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyhpbmZvKSB7XG4gICAgcmV0dXJuIGluZm8uZmllbGROb2Rlc1swXS5hbGlhcyAhPSBudWxsID8gaW5mby5maWVsZE5vZGVzWzBdLmFsaWFzLnZhbHVlIDogaW5mby5maWVsZE5hbWU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/heal.js":
/*!********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/heal.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   healSchema: () => (/* binding */ healSchema),\n/* harmony export */   healTypes: () => (/* binding */ healTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\n// Update any references to named schema types that disagree with the named\n// types found in schema.getTypeMap().\n//\n// healSchema and its callers (visitSchema/visitSchemaDirectives) all modify the schema in place.\n// Therefore, private variables (such as the stored implementation map and the proper root types)\n// are not updated.\n//\n// If this causes issues, the schema could be more aggressively healed as follows:\n//\n// healSchema(schema);\n// const config = schema.toConfig()\n// const healedSchema = new GraphQLSchema({\n//   ...config,\n//   query: schema.getType('<desired new root query type name>'),\n//   mutation: schema.getType('<desired new root mutation type name>'),\n//   subscription: schema.getType('<desired new root subscription type name>'),\n// });\n//\n// One can then also -- if necessary --  assign the correct private variables to the initial schema\n// as follows:\n// Object.assign(schema, healedSchema);\n//\n// These steps are not taken automatically to preserve backwards compatibility with graphql-tools v4.\n// See https://github.com/ardatan/graphql-tools/issues/1462\n//\n// They were briefly taken in v5, but can now be phased out as they were only required when other\n// areas of the codebase were using healSchema and visitSchema more extensively.\n//\nfunction healSchema(schema) {\n    healTypes(schema.getTypeMap(), schema.getDirectives());\n    return schema;\n}\nfunction healTypes(originalTypeMap, directives) {\n    const actualNamedTypeMap = Object.create(null);\n    // If any of the .name properties of the GraphQLNamedType objects in\n    // schema.getTypeMap() have changed, the keys of the type map need to\n    // be updated accordingly.\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const actualName = namedType.name;\n        if (actualName.startsWith('__')) {\n            continue;\n        }\n        if (actualNamedTypeMap[actualName] != null) {\n            console.warn(`Duplicate schema type name ${actualName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        actualNamedTypeMap[actualName] = namedType;\n        // Note: we are deliberately leaving namedType in the schema by its\n        // original name (which might be different from actualName), so that\n        // references by that name can be healed.\n    }\n    // Now add back every named type by its actual name.\n    for (const typeName in actualNamedTypeMap) {\n        const namedType = actualNamedTypeMap[typeName];\n        originalTypeMap[typeName] = namedType;\n    }\n    // Directive declaration argument types can refer to named types.\n    for (const decl of directives) {\n        decl.args = decl.args.filter(arg => {\n            arg.type = healType(arg.type);\n            return arg.type !== null;\n        });\n    }\n    for (const typeName in originalTypeMap) {\n        const namedType = originalTypeMap[typeName];\n        // Heal all named types, except for dangling references, kept only to redirect.\n        if (!typeName.startsWith('__') && typeName in actualNamedTypeMap) {\n            if (namedType != null) {\n                healNamedType(namedType);\n            }\n        }\n    }\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__') && !(typeName in actualNamedTypeMap)) {\n            delete originalTypeMap[typeName];\n        }\n    }\n    function healNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n            healFields(type);\n            healInterfaces(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n            healFields(type);\n            if ('getInterfaces' in type) {\n                healInterfaces(type);\n            }\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n            healUnderlyingTypes(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n            healInputFields(type);\n            return;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(type)) {\n            return;\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function healFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.args\n                .map(arg => {\n                arg.type = healType(arg.type);\n                return arg.type === null ? null : arg;\n            })\n                .filter(Boolean);\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healInterfaces(type) {\n        if ('getInterfaces' in type) {\n            const interfaces = type.getInterfaces();\n            interfaces.push(...interfaces\n                .splice(0)\n                .map(iface => healType(iface))\n                .filter(Boolean));\n        }\n    }\n    function healInputFields(type) {\n        const fieldMap = type.getFields();\n        for (const [key, field] of Object.entries(fieldMap)) {\n            field.type = healType(field.type);\n            if (field.type === null) {\n                delete fieldMap[key];\n            }\n        }\n    }\n    function healUnderlyingTypes(type) {\n        const types = type.getTypes();\n        types.push(...types\n            .splice(0)\n            .map(t => healType(t))\n            .filter(Boolean));\n    }\n    function healType(type) {\n        // Unwrap the two known wrapper types\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(healedType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNonNullType)(type)) {\n            const healedType = healType(type.ofType);\n            return healedType != null ? new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(healedType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isNamedType)(type)) {\n            // If a type annotation on a field or an argument or a union member is\n            // any `GraphQLNamedType` with a `name`, then it must end up identical\n            // to `schema.getType(name)`, since `schema.getTypeMap()` is the source\n            // of truth for all named schema types.\n            // Note that new types can still be simply added by adding a field, as\n            // the official type will be undefined, not null.\n            const officialType = originalTypeMap[type.name];\n            if (officialType && type !== officialType) {\n                return officialType;\n            }\n        }\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/heal.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js":
/*!***********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<=>`]/;\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    var _a, _b;\n    let name;\n    if ('alias' in a) {\n        name = (_a = a.alias) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    if (name == null && 'name' in a) {\n        name = (_b = a.name) === null || _b === void 0 ? void 0 : _b.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFnQztBQUN6QjtBQUNQO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhDQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2hlbHBlcnMuanM/NWExZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBwYXJzZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGNvbnN0IGFzQXJyYXkgPSAoZm5zKSA9PiAoQXJyYXkuaXNBcnJheShmbnMpID8gZm5zIDogZm5zID8gW2Zuc10gOiBbXSk7XG5jb25zdCBpbnZhbGlkRG9jUmVnZXggPSAvXFwuW2EtejAtOV0rJC9pO1xuZXhwb3J0IGZ1bmN0aW9uIGlzRG9jdW1lbnRTdHJpbmcoc3RyKSB7XG4gICAgaWYgKHR5cGVvZiBzdHIgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgLy8gWFhYOiBpcy12YWxpZC1wYXRoIG9yIGlzLWdsb2IgdHJlYXQgU0RMIGFzIGEgdmFsaWQgcGF0aFxuICAgIC8vIChgc2NhbGFyIERhdGVgIGZvciBleGFtcGxlKVxuICAgIC8vIHRoaXMgd2h5IGNoZWNraW5nIHRoZSBleHRlbnNpb24gaXMgZmFzdCBlbm91Z2hcbiAgICAvLyBhbmQgcHJldmVudCBmcm9tIHBhcnNpbmcgdGhlIHN0cmluZyBpbiBvcmRlciB0byBmaW5kIG91dFxuICAgIC8vIGlmIHRoZSBzdHJpbmcgaXMgYSBTRExcbiAgICBpZiAoaW52YWxpZERvY1JlZ2V4LnRlc3Qoc3RyKSkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHRyeSB7XG4gICAgICAgIHBhcnNlKHN0cik7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBjYXRjaCAoZSkgeyB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuY29uc3QgaW52YWxpZFBhdGhSZWdleCA9IC9b4oCY4oCcISVePD0+YF0vO1xuZXhwb3J0IGZ1bmN0aW9uIGlzVmFsaWRQYXRoKHN0cikge1xuICAgIHJldHVybiB0eXBlb2Ygc3RyID09PSAnc3RyaW5nJyAmJiAhaW52YWxpZFBhdGhSZWdleC50ZXN0KHN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZVN0cmluZ3MoYSwgYikge1xuICAgIGlmIChTdHJpbmcoYSkgPCBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgIH1cbiAgICBpZiAoU3RyaW5nKGEpID4gU3RyaW5nKGIpKSB7XG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBub2RlVG9TdHJpbmcoYSkge1xuICAgIHZhciBfYSwgX2I7XG4gICAgbGV0IG5hbWU7XG4gICAgaWYgKCdhbGlhcycgaW4gYSkge1xuICAgICAgICBuYW1lID0gKF9hID0gYS5hbGlhcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLnZhbHVlO1xuICAgIH1cbiAgICBpZiAobmFtZSA9PSBudWxsICYmICduYW1lJyBpbiBhKSB7XG4gICAgICAgIG5hbWUgPSAoX2IgPSBhLm5hbWUpID09PSBudWxsIHx8IF9iID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYi52YWx1ZTtcbiAgICB9XG4gICAgaWYgKG5hbWUgPT0gbnVsbCkge1xuICAgICAgICBuYW1lID0gYS5raW5kO1xuICAgIH1cbiAgICByZXR1cm4gbmFtZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlTm9kZXMoYSwgYiwgY3VzdG9tRm4pIHtcbiAgICBjb25zdCBhU3RyID0gbm9kZVRvU3RyaW5nKGEpO1xuICAgIGNvbnN0IGJTdHIgPSBub2RlVG9TdHJpbmcoYik7XG4gICAgaWYgKHR5cGVvZiBjdXN0b21GbiA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICByZXR1cm4gY3VzdG9tRm4oYVN0ciwgYlN0cik7XG4gICAgfVxuICAgIHJldHVybiBjb21wYXJlU3RyaW5ncyhhU3RyLCBiU3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1NvbWUoaW5wdXQpIHtcbiAgICByZXR1cm4gaW5wdXQgIT0gbnVsbDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhc3NlcnRTb21lKGlucHV0LCBtZXNzYWdlID0gJ1ZhbHVlIHNob3VsZCBiZSBzb21ldGhpbmcnKSB7XG4gICAgaWYgKGlucHV0ID09IG51bGwpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKG1lc3NhZ2UpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/implementsAbstractType.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/implementsAbstractType.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   implementsAbstractType: () => (/* binding */ implementsAbstractType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeComparators.mjs\");\n\nfunction implementsAbstractType(schema, typeA, typeB) {\n    if (typeB == null || typeA == null) {\n        return false;\n    }\n    else if (typeA === typeB) {\n        return true;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(typeA) && (0,graphql__WEBPACK_IMPORTED_MODULE_0__.isCompositeType)(typeB)) {\n        return (0,graphql__WEBPACK_IMPORTED_MODULE_1__.doTypesOverlap)(schema, typeA, typeB);\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pbXBsZW1lbnRzQWJzdHJhY3RUeXBlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwRDtBQUNuRDtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsd0RBQWUsV0FBVyx3REFBZTtBQUN0RCxlQUFlLHVEQUFjO0FBQzdCO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pbXBsZW1lbnRzQWJzdHJhY3RUeXBlLmpzPzc1YmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZG9UeXBlc092ZXJsYXAsIGlzQ29tcG9zaXRlVHlwZSB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGZ1bmN0aW9uIGltcGxlbWVudHNBYnN0cmFjdFR5cGUoc2NoZW1hLCB0eXBlQSwgdHlwZUIpIHtcbiAgICBpZiAodHlwZUIgPT0gbnVsbCB8fCB0eXBlQSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZUEgPT09IHR5cGVCKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0NvbXBvc2l0ZVR5cGUodHlwZUEpICYmIGlzQ29tcG9zaXRlVHlwZSh0eXBlQikpIHtcbiAgICAgICAgcmV0dXJuIGRvVHlwZXNPdmVybGFwKHNjaGVtYSwgdHlwZUEsIHR5cGVCKTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/implementsAbstractType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js":
/*!***********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/inspect.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   inspect: () => (/* binding */ inspect)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n/* harmony import */ var _AggregateError_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AggregateError.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/AggregateError.js\");\n// Taken from graphql-js\n// https://github.com/graphql/graphql-js/blob/main/src/jsutils/inspect.ts\n\n\nconst MAX_RECURSIVE_DEPTH = 3;\n/**\n * Used to print values in error messages.\n */\nfunction inspect(value) {\n    return formatValue(value, []);\n}\nfunction formatValue(value, seenValues) {\n    switch (typeof value) {\n        case 'string':\n            return JSON.stringify(value);\n        case 'function':\n            return value.name ? `[function ${value.name}]` : '[function]';\n        case 'object':\n            return formatObjectValue(value, seenValues);\n        default:\n            return String(value);\n    }\n}\nfunction formatError(value) {\n    if (value instanceof graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLError) {\n        return value.toString();\n    }\n    return `${value.name}: ${value.message};\\n ${value.stack}`;\n}\nfunction formatObjectValue(value, previouslySeenValues) {\n    if (value === null) {\n        return 'null';\n    }\n    if (value instanceof Error) {\n        if ((0,_AggregateError_js__WEBPACK_IMPORTED_MODULE_1__.isAggregateError)(value)) {\n            return formatError(value) + '\\n' + formatArray(value.errors, previouslySeenValues);\n        }\n        return formatError(value);\n    }\n    if (previouslySeenValues.includes(value)) {\n        return '[Circular]';\n    }\n    const seenValues = [...previouslySeenValues, value];\n    if (isJSONable(value)) {\n        const jsonValue = value.toJSON();\n        // check for infinite recursion\n        if (jsonValue !== value) {\n            return typeof jsonValue === 'string' ? jsonValue : formatValue(jsonValue, seenValues);\n        }\n    }\n    else if (Array.isArray(value)) {\n        return formatArray(value, seenValues);\n    }\n    return formatObject(value, seenValues);\n}\nfunction isJSONable(value) {\n    return typeof value.toJSON === 'function';\n}\nfunction formatObject(object, seenValues) {\n    const entries = Object.entries(object);\n    if (entries.length === 0) {\n        return '{}';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[' + getObjectTag(object) + ']';\n    }\n    const properties = entries.map(([key, value]) => key + ': ' + formatValue(value, seenValues));\n    return '{ ' + properties.join(', ') + ' }';\n}\nfunction formatArray(array, seenValues) {\n    if (array.length === 0) {\n        return '[]';\n    }\n    if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n        return '[Array]';\n    }\n    const len = array.length;\n    const items = [];\n    for (let i = 0; i < len; ++i) {\n        items.push(formatValue(array[i], seenValues));\n    }\n    return '[' + items.join(', ') + ']';\n}\nfunction getObjectTag(object) {\n    const tag = Object.prototype.toString\n        .call(object)\n        .replace(/^\\[object /, '')\n        .replace(/]$/, '');\n    if (tag === 'Object' && typeof object.constructor === 'function') {\n        const name = object.constructor.name;\n        if (typeof name === 'string' && name !== '') {\n            return name;\n        }\n    }\n    return tag;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pbnNwZWN0LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDdUM7QUFDZ0I7QUFDdkQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkNBQTZDLFdBQVc7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsaURBQVk7QUFDckM7QUFDQTtBQUNBLGNBQWMsV0FBVyxJQUFJLGVBQWUsS0FBSyxZQUFZO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksb0VBQWdCO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsK0JBQStCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFNBQVM7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pbnNwZWN0LmpzP2NmNTAiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gVGFrZW4gZnJvbSBncmFwaHFsLWpzXG4vLyBodHRwczovL2dpdGh1Yi5jb20vZ3JhcGhxbC9ncmFwaHFsLWpzL2Jsb2IvbWFpbi9zcmMvanN1dGlscy9pbnNwZWN0LnRzXG5pbXBvcnQgeyBHcmFwaFFMRXJyb3IgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGlzQWdncmVnYXRlRXJyb3IgfSBmcm9tICcuL0FnZ3JlZ2F0ZUVycm9yLmpzJztcbmNvbnN0IE1BWF9SRUNVUlNJVkVfREVQVEggPSAzO1xuLyoqXG4gKiBVc2VkIHRvIHByaW50IHZhbHVlcyBpbiBlcnJvciBtZXNzYWdlcy5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGluc3BlY3QodmFsdWUpIHtcbiAgICByZXR1cm4gZm9ybWF0VmFsdWUodmFsdWUsIFtdKTtcbn1cbmZ1bmN0aW9uIGZvcm1hdFZhbHVlKHZhbHVlLCBzZWVuVmFsdWVzKSB7XG4gICAgc3dpdGNoICh0eXBlb2YgdmFsdWUpIHtcbiAgICAgICAgY2FzZSAnc3RyaW5nJzpcbiAgICAgICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG4gICAgICAgIGNhc2UgJ2Z1bmN0aW9uJzpcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZS5uYW1lID8gYFtmdW5jdGlvbiAke3ZhbHVlLm5hbWV9XWAgOiAnW2Z1bmN0aW9uXSc7XG4gICAgICAgIGNhc2UgJ29iamVjdCc6XG4gICAgICAgICAgICByZXR1cm4gZm9ybWF0T2JqZWN0VmFsdWUodmFsdWUsIHNlZW5WYWx1ZXMpO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIFN0cmluZyh2YWx1ZSk7XG4gICAgfVxufVxuZnVuY3Rpb24gZm9ybWF0RXJyb3IodmFsdWUpIHtcbiAgICBpZiAodmFsdWUgaW5zdGFuY2VvZiBHcmFwaFFMRXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XG4gICAgfVxuICAgIHJldHVybiBgJHt2YWx1ZS5uYW1lfTogJHt2YWx1ZS5tZXNzYWdlfTtcXG4gJHt2YWx1ZS5zdGFja31gO1xufVxuZnVuY3Rpb24gZm9ybWF0T2JqZWN0VmFsdWUodmFsdWUsIHByZXZpb3VzbHlTZWVuVmFsdWVzKSB7XG4gICAgaWYgKHZhbHVlID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAnbnVsbCc7XG4gICAgfVxuICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICAgIGlmIChpc0FnZ3JlZ2F0ZUVycm9yKHZhbHVlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGZvcm1hdEVycm9yKHZhbHVlKSArICdcXG4nICsgZm9ybWF0QXJyYXkodmFsdWUuZXJyb3JzLCBwcmV2aW91c2x5U2VlblZhbHVlcyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZvcm1hdEVycm9yKHZhbHVlKTtcbiAgICB9XG4gICAgaWYgKHByZXZpb3VzbHlTZWVuVmFsdWVzLmluY2x1ZGVzKHZhbHVlKSkge1xuICAgICAgICByZXR1cm4gJ1tDaXJjdWxhcl0nO1xuICAgIH1cbiAgICBjb25zdCBzZWVuVmFsdWVzID0gWy4uLnByZXZpb3VzbHlTZWVuVmFsdWVzLCB2YWx1ZV07XG4gICAgaWYgKGlzSlNPTmFibGUodmFsdWUpKSB7XG4gICAgICAgIGNvbnN0IGpzb25WYWx1ZSA9IHZhbHVlLnRvSlNPTigpO1xuICAgICAgICAvLyBjaGVjayBmb3IgaW5maW5pdGUgcmVjdXJzaW9uXG4gICAgICAgIGlmIChqc29uVmFsdWUgIT09IHZhbHVlKSB7XG4gICAgICAgICAgICByZXR1cm4gdHlwZW9mIGpzb25WYWx1ZSA9PT0gJ3N0cmluZycgPyBqc29uVmFsdWUgOiBmb3JtYXRWYWx1ZShqc29uVmFsdWUsIHNlZW5WYWx1ZXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICAgIHJldHVybiBmb3JtYXRBcnJheSh2YWx1ZSwgc2VlblZhbHVlcyk7XG4gICAgfVxuICAgIHJldHVybiBmb3JtYXRPYmplY3QodmFsdWUsIHNlZW5WYWx1ZXMpO1xufVxuZnVuY3Rpb24gaXNKU09OYWJsZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUudG9KU09OID09PSAnZnVuY3Rpb24nO1xufVxuZnVuY3Rpb24gZm9ybWF0T2JqZWN0KG9iamVjdCwgc2VlblZhbHVlcykge1xuICAgIGNvbnN0IGVudHJpZXMgPSBPYmplY3QuZW50cmllcyhvYmplY3QpO1xuICAgIGlmIChlbnRyaWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gJ3t9JztcbiAgICB9XG4gICAgaWYgKHNlZW5WYWx1ZXMubGVuZ3RoID4gTUFYX1JFQ1VSU0lWRV9ERVBUSCkge1xuICAgICAgICByZXR1cm4gJ1snICsgZ2V0T2JqZWN0VGFnKG9iamVjdCkgKyAnXSc7XG4gICAgfVxuICAgIGNvbnN0IHByb3BlcnRpZXMgPSBlbnRyaWVzLm1hcCgoW2tleSwgdmFsdWVdKSA9PiBrZXkgKyAnOiAnICsgZm9ybWF0VmFsdWUodmFsdWUsIHNlZW5WYWx1ZXMpKTtcbiAgICByZXR1cm4gJ3sgJyArIHByb3BlcnRpZXMuam9pbignLCAnKSArICcgfSc7XG59XG5mdW5jdGlvbiBmb3JtYXRBcnJheShhcnJheSwgc2VlblZhbHVlcykge1xuICAgIGlmIChhcnJheS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuICdbXSc7XG4gICAgfVxuICAgIGlmIChzZWVuVmFsdWVzLmxlbmd0aCA+IE1BWF9SRUNVUlNJVkVfREVQVEgpIHtcbiAgICAgICAgcmV0dXJuICdbQXJyYXldJztcbiAgICB9XG4gICAgY29uc3QgbGVuID0gYXJyYXkubGVuZ3RoO1xuICAgIGNvbnN0IGl0ZW1zID0gW107XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBsZW47ICsraSkge1xuICAgICAgICBpdGVtcy5wdXNoKGZvcm1hdFZhbHVlKGFycmF5W2ldLCBzZWVuVmFsdWVzKSk7XG4gICAgfVxuICAgIHJldHVybiAnWycgKyBpdGVtcy5qb2luKCcsICcpICsgJ10nO1xufVxuZnVuY3Rpb24gZ2V0T2JqZWN0VGFnKG9iamVjdCkge1xuICAgIGNvbnN0IHRhZyA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdcbiAgICAgICAgLmNhbGwob2JqZWN0KVxuICAgICAgICAucmVwbGFjZSgvXlxcW29iamVjdCAvLCAnJylcbiAgICAgICAgLnJlcGxhY2UoL10kLywgJycpO1xuICAgIGlmICh0YWcgPT09ICdPYmplY3QnICYmIHR5cGVvZiBvYmplY3QuY29uc3RydWN0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IG9iamVjdC5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgICAgICBpZiAodHlwZW9mIG5hbWUgPT09ICdzdHJpbmcnICYmIG5hbWUgIT09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm4gbmFtZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gdGFnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/inspect.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/isAsyncIterable.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/isAsyncIterable.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nfunction isAsyncIterable(value) {\n    return (typeof value === 'object' &&\n        value != null &&\n        Symbol.asyncIterator in value &&\n        typeof value[Symbol.asyncIterator] === 'function');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0FzeW5jSXRlcmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0FzeW5jSXRlcmFibGUuanM/ZWI3MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmXG4gICAgICAgIHZhbHVlICE9IG51bGwgJiZcbiAgICAgICAgU3ltYm9sLmFzeW5jSXRlcmF0b3IgaW4gdmFsdWUgJiZcbiAgICAgICAgdHlwZW9mIHZhbHVlW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSA9PT0gJ2Z1bmN0aW9uJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/isDocumentNode.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/isDocumentNode.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isDocumentNode: () => (/* binding */ isDocumentNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction isDocumentNode(object) {\n    return object && typeof object === 'object' && 'kind' in object && object.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.DOCUMENT;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0RvY3VtZW50Tm9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErQjtBQUN4QjtBQUNQLHVGQUF1Rix5Q0FBSTtBQUMzRiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0RvY3VtZW50Tm9kZS5qcz8wYTkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBpc0RvY3VtZW50Tm9kZShvYmplY3QpIHtcbiAgICByZXR1cm4gb2JqZWN0ICYmIHR5cGVvZiBvYmplY3QgPT09ICdvYmplY3QnICYmICdraW5kJyBpbiBvYmplY3QgJiYgb2JqZWN0LmtpbmQgPT09IEtpbmQuRE9DVU1FTlQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/isDocumentNode.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/jsutils.js":
/*!***********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/jsutils.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasOwnProperty: () => (/* binding */ hasOwnProperty),\n/* harmony export */   isIterableObject: () => (/* binding */ isIterableObject),\n/* harmony export */   isObjectLike: () => (/* binding */ isObjectLike),\n/* harmony export */   isPromise: () => (/* binding */ isPromise),\n/* harmony export */   promiseReduce: () => (/* binding */ promiseReduce)\n/* harmony export */ });\nfunction isIterableObject(value) {\n    return value != null && typeof value === 'object' && Symbol.iterator in value;\n}\nfunction isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nfunction isPromise(value) {\n    return isObjectLike(value) && typeof value['then'] === 'function';\n}\nfunction promiseReduce(values, callbackFn, initialValue) {\n    let accumulator = initialValue;\n    for (const value of values) {\n        accumulator = isPromise(accumulator)\n            ? accumulator.then(resolved => callbackFn(resolved, value))\n            : callbackFn(accumulator, value);\n    }\n    return accumulator;\n}\nfunction hasOwnProperty(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9qc3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU87QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2pzdXRpbHMuanM/NTQ0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNJdGVyYWJsZU9iamVjdCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgU3ltYm9sLml0ZXJhdG9yIGluIHZhbHVlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICAgIHJldHVybiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICE9PSBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGlzUHJvbWlzZSh2YWx1ZSkge1xuICAgIHJldHVybiBpc09iamVjdExpa2UodmFsdWUpICYmIHR5cGVvZiB2YWx1ZVsndGhlbiddID09PSAnZnVuY3Rpb24nO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHByb21pc2VSZWR1Y2UodmFsdWVzLCBjYWxsYmFja0ZuLCBpbml0aWFsVmFsdWUpIHtcbiAgICBsZXQgYWNjdW11bGF0b3IgPSBpbml0aWFsVmFsdWU7XG4gICAgZm9yIChjb25zdCB2YWx1ZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgYWNjdW11bGF0b3IgPSBpc1Byb21pc2UoYWNjdW11bGF0b3IpXG4gICAgICAgICAgICA/IGFjY3VtdWxhdG9yLnRoZW4ocmVzb2x2ZWQgPT4gY2FsbGJhY2tGbihyZXNvbHZlZCwgdmFsdWUpKVxuICAgICAgICAgICAgOiBjYWxsYmFja0ZuKGFjY3VtdWxhdG9yLCB2YWx1ZSk7XG4gICAgfVxuICAgIHJldHVybiBhY2N1bXVsYXRvcjtcbn1cbmV4cG9ydCBmdW5jdGlvbiBoYXNPd25Qcm9wZXJ0eShvYmosIHByb3ApIHtcbiAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/jsutils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js":
/*!********************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapAsyncIterator: () => (/* binding */ mapAsyncIterator)\n/* harmony export */ });\n/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nfunction mapAsyncIterator(iterator, callback, rejectCallback) {\n    let $return;\n    let abruptClose;\n    if (typeof iterator.return === 'function') {\n        $return = iterator.return;\n        abruptClose = (error) => {\n            const rethrow = () => Promise.reject(error);\n            return $return.call(iterator).then(rethrow, rethrow);\n        };\n    }\n    function mapResult(result) {\n        return result.done ? result : asyncMapValue(result.value, callback).then(iteratorResult, abruptClose);\n    }\n    let mapReject;\n    if (rejectCallback) {\n        // Capture rejectCallback to ensure it cannot be null.\n        const reject = rejectCallback;\n        mapReject = (error) => asyncMapValue(error, reject).then(iteratorResult, abruptClose);\n    }\n    return {\n        next() {\n            return iterator.next().then(mapResult, mapReject);\n        },\n        return() {\n            return $return\n                ? $return.call(iterator).then(mapResult, mapReject)\n                : Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            if (typeof iterator.throw === 'function') {\n                return iterator.throw(error).then(mapResult, mapReject);\n            }\n            return Promise.reject(error).catch(abruptClose);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\nfunction asyncMapValue(value, callback) {\n    return new Promise(resolve => resolve(callback(value)));\n}\nfunction iteratorResult(value) {\n    return { value, done: false };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tYXBBc3luY0l0ZXJhdG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyw4QkFBOEI7QUFDbEUsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vbWFwQXN5bmNJdGVyYXRvci5qcz9hNTFhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2l2ZW4gYW4gQXN5bmNJdGVyYWJsZSBhbmQgYSBjYWxsYmFjayBmdW5jdGlvbiwgcmV0dXJuIGFuIEFzeW5jSXRlcmF0b3JcbiAqIHdoaWNoIHByb2R1Y2VzIHZhbHVlcyBtYXBwZWQgdmlhIGNhbGxpbmcgdGhlIGNhbGxiYWNrIGZ1bmN0aW9uLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwQXN5bmNJdGVyYXRvcihpdGVyYXRvciwgY2FsbGJhY2ssIHJlamVjdENhbGxiYWNrKSB7XG4gICAgbGV0ICRyZXR1cm47XG4gICAgbGV0IGFicnVwdENsb3NlO1xuICAgIGlmICh0eXBlb2YgaXRlcmF0b3IucmV0dXJuID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICRyZXR1cm4gPSBpdGVyYXRvci5yZXR1cm47XG4gICAgICAgIGFicnVwdENsb3NlID0gKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zdCByZXRocm93ID0gKCkgPT4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgcmV0dXJuICRyZXR1cm4uY2FsbChpdGVyYXRvcikudGhlbihyZXRocm93LCByZXRocm93KTtcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZnVuY3Rpb24gbWFwUmVzdWx0KHJlc3VsdCkge1xuICAgICAgICByZXR1cm4gcmVzdWx0LmRvbmUgPyByZXN1bHQgOiBhc3luY01hcFZhbHVlKHJlc3VsdC52YWx1ZSwgY2FsbGJhY2spLnRoZW4oaXRlcmF0b3JSZXN1bHQsIGFicnVwdENsb3NlKTtcbiAgICB9XG4gICAgbGV0IG1hcFJlamVjdDtcbiAgICBpZiAocmVqZWN0Q2FsbGJhY2spIHtcbiAgICAgICAgLy8gQ2FwdHVyZSByZWplY3RDYWxsYmFjayB0byBlbnN1cmUgaXQgY2Fubm90IGJlIG51bGwuXG4gICAgICAgIGNvbnN0IHJlamVjdCA9IHJlamVjdENhbGxiYWNrO1xuICAgICAgICBtYXBSZWplY3QgPSAoZXJyb3IpID0+IGFzeW5jTWFwVmFsdWUoZXJyb3IsIHJlamVjdCkudGhlbihpdGVyYXRvclJlc3VsdCwgYWJydXB0Q2xvc2UpO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBuZXh0KCkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLm5leHQoKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KTtcbiAgICAgICAgfSxcbiAgICAgICAgcmV0dXJuKCkge1xuICAgICAgICAgICAgcmV0dXJuICRyZXR1cm5cbiAgICAgICAgICAgICAgICA/ICRyZXR1cm4uY2FsbChpdGVyYXRvcikudGhlbihtYXBSZXN1bHQsIG1hcFJlamVjdClcbiAgICAgICAgICAgICAgICA6IFByb21pc2UucmVzb2x2ZSh7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHRocm93KGVycm9yKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGl0ZXJhdG9yLnRocm93ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLnRocm93KGVycm9yKS50aGVuKG1hcFJlc3VsdCwgbWFwUmVqZWN0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcikuY2F0Y2goYWJydXB0Q2xvc2UpO1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbmZ1bmN0aW9uIGFzeW5jTWFwVmFsdWUodmFsdWUsIGNhbGxiYWNrKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4gcmVzb2x2ZShjYWxsYmFjayh2YWx1ZSkpKTtcbn1cbmZ1bmN0aW9uIGl0ZXJhdG9yUmVzdWx0KHZhbHVlKSB7XG4gICAgcmV0dXJuIHsgdmFsdWUsIGRvbmU6IGZhbHNlIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/mapAsyncIterator.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js":
/*!*************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/mapSchema.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correctASTNodes: () => (/* binding */ correctASTNodes),\n/* harmony export */   mapSchema: () => (/* binding */ mapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rewire_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rewire.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformInputValue.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n\n\n\n\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.serializeInputValue), schema, schemaMapper, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.parseInputValue), schema, schemaMapper, type => !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0,_rewire_js__WEBPACK_IMPORTED_MODULE_2__.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] = newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.TYPE];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_TYPE);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.UNION_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    var _a, _b, _c;\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.FIELD];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_FIELD);\n        if (typeName === ((_a = schema.getQueryType()) === null || _a === void 0 ? void 0 : _a.name)) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === ((_b = schema.getMutationType()) === null || _b === void 0 ? void 0 : _b.name)) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === ((_c = schema.getSubscriptionType()) === null || _c === void 0 ? void 0 : _c.name)) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper !== null && fieldMapper !== void 0 ? fieldMapper : null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js":
/*!***********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/mergeDeep.js":
/*!*************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/mergeDeep.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mergeDeep: () => (/* binding */ mergeDeep)\n/* harmony export */ });\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n\nfunction mergeDeep(sources, respectPrototype = false) {\n    const target = sources[0] || {};\n    const output = {};\n    if (respectPrototype) {\n        Object.setPrototypeOf(output, Object.create(Object.getPrototypeOf(target)));\n    }\n    for (const source of sources) {\n        if (isObject(target) && isObject(source)) {\n            if (respectPrototype) {\n                const outputPrototype = Object.getPrototypeOf(output);\n                const sourcePrototype = Object.getPrototypeOf(source);\n                if (sourcePrototype) {\n                    for (const key of Object.getOwnPropertyNames(sourcePrototype)) {\n                        const descriptor = Object.getOwnPropertyDescriptor(sourcePrototype, key);\n                        if ((0,_helpers_js__WEBPACK_IMPORTED_MODULE_0__.isSome)(descriptor)) {\n                            Object.defineProperty(outputPrototype, key, descriptor);\n                        }\n                    }\n                }\n            }\n            for (const key in source) {\n                if (isObject(source[key])) {\n                    if (!(key in output)) {\n                        Object.assign(output, { [key]: source[key] });\n                    }\n                    else {\n                        output[key] = mergeDeep([output[key], source[key]], respectPrototype);\n                    }\n                }\n                else {\n                    Object.assign(output, { [key]: source[key] });\n                }\n            }\n        }\n    }\n    return output;\n}\nfunction isObject(item) {\n    return item && typeof item === 'object' && !Array.isArray(item);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tZXJnZURlZXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0M7QUFDL0I7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixtREFBTTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0RBQWdELG9CQUFvQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tZXJnZURlZXAuanM/NGUxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1NvbWUgfSBmcm9tICcuL2hlbHBlcnMuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1lcmdlRGVlcChzb3VyY2VzLCByZXNwZWN0UHJvdG90eXBlID0gZmFsc2UpIHtcbiAgICBjb25zdCB0YXJnZXQgPSBzb3VyY2VzWzBdIHx8IHt9O1xuICAgIGNvbnN0IG91dHB1dCA9IHt9O1xuICAgIGlmIChyZXNwZWN0UHJvdG90eXBlKSB7XG4gICAgICAgIE9iamVjdC5zZXRQcm90b3R5cGVPZihvdXRwdXQsIE9iamVjdC5jcmVhdGUoT2JqZWN0LmdldFByb3RvdHlwZU9mKHRhcmdldCkpKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBzb3VyY2Ugb2Ygc291cmNlcykge1xuICAgICAgICBpZiAoaXNPYmplY3QodGFyZ2V0KSAmJiBpc09iamVjdChzb3VyY2UpKSB7XG4gICAgICAgICAgICBpZiAocmVzcGVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG91dHB1dFByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihvdXRwdXQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IHNvdXJjZVByb3RvdHlwZSA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihzb3VyY2UpO1xuICAgICAgICAgICAgICAgIGlmIChzb3VyY2VQcm90b3R5cGUpIHtcbiAgICAgICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXMoc291cmNlUHJvdG90eXBlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgZGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Ioc291cmNlUHJvdG90eXBlLCBrZXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGlzU29tZShkZXNjcmlwdG9yKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvdXRwdXRQcm90b3R5cGUsIGtleSwgZGVzY3JpcHRvcik7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBzb3VyY2UpIHtcbiAgICAgICAgICAgICAgICBpZiAoaXNPYmplY3Qoc291cmNlW2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICghKGtleSBpbiBvdXRwdXQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBPYmplY3QuYXNzaWduKG91dHB1dCwgeyBba2V5XTogc291cmNlW2tleV0gfSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXRba2V5XSA9IG1lcmdlRGVlcChbb3V0cHV0W2tleV0sIHNvdXJjZVtrZXldXSwgcmVzcGVjdFByb3RvdHlwZSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ob3V0cHV0LCB7IFtrZXldOiBzb3VyY2Vba2V5XSB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbmZ1bmN0aW9uIGlzT2JqZWN0KGl0ZW0pIHtcbiAgICByZXR1cm4gaXRlbSAmJiB0eXBlb2YgaXRlbSA9PT0gJ29iamVjdCcgJiYgIUFycmF5LmlzQXJyYXkoaXRlbSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/mergeDeep.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   observableToAsyncIterable: () => (/* binding */ observableToAsyncIterable)\n/* harmony export */ });\nfunction observableToAsyncIterable(observable) {\n    const pullQueue = [];\n    const pushQueue = [];\n    let listening = true;\n    const pushValue = (value) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value, done: false });\n        }\n        else {\n            pushQueue.push({ value, done: false });\n        }\n    };\n    const pushError = (error) => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ value: { errors: [error] }, done: false });\n        }\n        else {\n            pushQueue.push({ value: { errors: [error] }, done: false });\n        }\n    };\n    const pushDone = () => {\n        if (pullQueue.length !== 0) {\n            // It is safe to use the ! operator here as we check the length.\n            pullQueue.shift()({ done: true });\n        }\n        else {\n            pushQueue.push({ done: true });\n        }\n    };\n    const pullValue = () => new Promise(resolve => {\n        if (pushQueue.length !== 0) {\n            const element = pushQueue.shift();\n            // either {value: {errors: [...]}} or {value: ...}\n            resolve(element);\n        }\n        else {\n            pullQueue.push(resolve);\n        }\n    });\n    const subscription = observable.subscribe({\n        next(value) {\n            pushValue(value);\n        },\n        error(err) {\n            pushError(err);\n        },\n        complete() {\n            pushDone();\n        },\n    });\n    const emptyQueue = () => {\n        if (listening) {\n            listening = false;\n            subscription.unsubscribe();\n            for (const resolve of pullQueue) {\n                resolve({ value: undefined, done: true });\n            }\n            pullQueue.length = 0;\n            pushQueue.length = 0;\n        }\n    };\n    return {\n        next() {\n            // return is a defined method, so it is safe to call it.\n            return listening ? pullValue() : this.return();\n        },\n        return() {\n            emptyQueue();\n            return Promise.resolve({ value: undefined, done: true });\n        },\n        throw(error) {\n            emptyQueue();\n            return Promise.reject(error);\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9vYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxvQkFBb0I7QUFDcEQ7QUFDQTtBQUNBLDZCQUE2QixvQkFBb0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxTQUFTLGlCQUFpQixlQUFlO0FBQ3pFO0FBQ0E7QUFDQSw2QkFBNkIsU0FBUyxpQkFBaUIsZUFBZTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0NBQWdDLFlBQVk7QUFDNUM7QUFDQTtBQUNBLDZCQUE2QixZQUFZO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsUUFBUSxnQkFBZ0IsSUFBSTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOEJBQThCO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EscUNBQXFDLDhCQUE4QjtBQUNuRSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9vYnNlcnZhYmxlVG9Bc3luY0l0ZXJhYmxlLmpzPzRjMTMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIG9ic2VydmFibGVUb0FzeW5jSXRlcmFibGUob2JzZXJ2YWJsZSkge1xuICAgIGNvbnN0IHB1bGxRdWV1ZSA9IFtdO1xuICAgIGNvbnN0IHB1c2hRdWV1ZSA9IFtdO1xuICAgIGxldCBsaXN0ZW5pbmcgPSB0cnVlO1xuICAgIGNvbnN0IHB1c2hWYWx1ZSA9ICh2YWx1ZSkgPT4ge1xuICAgICAgICBpZiAocHVsbFF1ZXVlLmxlbmd0aCAhPT0gMCkge1xuICAgICAgICAgICAgLy8gSXQgaXMgc2FmZSB0byB1c2UgdGhlICEgb3BlcmF0b3IgaGVyZSBhcyB3ZSBjaGVjayB0aGUgbGVuZ3RoLlxuICAgICAgICAgICAgcHVsbFF1ZXVlLnNoaWZ0KCkoeyB2YWx1ZSwgZG9uZTogZmFsc2UgfSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBwdXNoUXVldWUucHVzaCh7IHZhbHVlLCBkb25lOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgcHVzaEVycm9yID0gKGVycm9yKSA9PiB7XG4gICAgICAgIGlmIChwdWxsUXVldWUubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAvLyBJdCBpcyBzYWZlIHRvIHVzZSB0aGUgISBvcGVyYXRvciBoZXJlIGFzIHdlIGNoZWNrIHRoZSBsZW5ndGguXG4gICAgICAgICAgICBwdWxsUXVldWUuc2hpZnQoKSh7IHZhbHVlOiB7IGVycm9yczogW2Vycm9yXSB9LCBkb25lOiBmYWxzZSB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHB1c2hRdWV1ZS5wdXNoKHsgdmFsdWU6IHsgZXJyb3JzOiBbZXJyb3JdIH0sIGRvbmU6IGZhbHNlIH0pO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBjb25zdCBwdXNoRG9uZSA9ICgpID0+IHtcbiAgICAgICAgaWYgKHB1bGxRdWV1ZS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIC8vIEl0IGlzIHNhZmUgdG8gdXNlIHRoZSAhIG9wZXJhdG9yIGhlcmUgYXMgd2UgY2hlY2sgdGhlIGxlbmd0aC5cbiAgICAgICAgICAgIHB1bGxRdWV1ZS5zaGlmdCgpKHsgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHB1c2hRdWV1ZS5wdXNoKHsgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgY29uc3QgcHVsbFZhbHVlID0gKCkgPT4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIGlmIChwdXNoUXVldWUubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gcHVzaFF1ZXVlLnNoaWZ0KCk7XG4gICAgICAgICAgICAvLyBlaXRoZXIge3ZhbHVlOiB7ZXJyb3JzOiBbLi4uXX19IG9yIHt2YWx1ZTogLi4ufVxuICAgICAgICAgICAgcmVzb2x2ZShlbGVtZW50KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHB1bGxRdWV1ZS5wdXNoKHJlc29sdmUpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgY29uc3Qgc3Vic2NyaXB0aW9uID0gb2JzZXJ2YWJsZS5zdWJzY3JpYmUoe1xuICAgICAgICBuZXh0KHZhbHVlKSB7XG4gICAgICAgICAgICBwdXNoVmFsdWUodmFsdWUpO1xuICAgICAgICB9LFxuICAgICAgICBlcnJvcihlcnIpIHtcbiAgICAgICAgICAgIHB1c2hFcnJvcihlcnIpO1xuICAgICAgICB9LFxuICAgICAgICBjb21wbGV0ZSgpIHtcbiAgICAgICAgICAgIHB1c2hEb25lKCk7XG4gICAgICAgIH0sXG4gICAgfSk7XG4gICAgY29uc3QgZW1wdHlRdWV1ZSA9ICgpID0+IHtcbiAgICAgICAgaWYgKGxpc3RlbmluZykge1xuICAgICAgICAgICAgbGlzdGVuaW5nID0gZmFsc2U7XG4gICAgICAgICAgICBzdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgcmVzb2x2ZSBvZiBwdWxsUXVldWUpIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHsgdmFsdWU6IHVuZGVmaW5lZCwgZG9uZTogdHJ1ZSB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHB1bGxRdWV1ZS5sZW5ndGggPSAwO1xuICAgICAgICAgICAgcHVzaFF1ZXVlLmxlbmd0aCA9IDA7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB7XG4gICAgICAgIG5leHQoKSB7XG4gICAgICAgICAgICAvLyByZXR1cm4gaXMgYSBkZWZpbmVkIG1ldGhvZCwgc28gaXQgaXMgc2FmZSB0byBjYWxsIGl0LlxuICAgICAgICAgICAgcmV0dXJuIGxpc3RlbmluZyA/IHB1bGxWYWx1ZSgpIDogdGhpcy5yZXR1cm4oKTtcbiAgICAgICAgfSxcbiAgICAgICAgcmV0dXJuKCkge1xuICAgICAgICAgICAgZW1wdHlRdWV1ZSgpO1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7IHZhbHVlOiB1bmRlZmluZWQsIGRvbmU6IHRydWUgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIHRocm93KGVycm9yKSB7XG4gICAgICAgICAgICBlbXB0eVF1ZXVlKCk7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpO1xuICAgICAgICB9LFxuICAgICAgICBbU3ltYm9sLmFzeW5jSXRlcmF0b3JdKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgICAgIH0sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/observableToAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js":
/*!********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   astFromArg: () => (/* binding */ astFromArg),\n/* harmony export */   astFromDirective: () => (/* binding */ astFromDirective),\n/* harmony export */   astFromEnumType: () => (/* binding */ astFromEnumType),\n/* harmony export */   astFromEnumValue: () => (/* binding */ astFromEnumValue),\n/* harmony export */   astFromField: () => (/* binding */ astFromField),\n/* harmony export */   astFromInputField: () => (/* binding */ astFromInputField),\n/* harmony export */   astFromInputObjectType: () => (/* binding */ astFromInputObjectType),\n/* harmony export */   astFromInterfaceType: () => (/* binding */ astFromInterfaceType),\n/* harmony export */   astFromObjectType: () => (/* binding */ astFromObjectType),\n/* harmony export */   astFromScalarType: () => (/* binding */ astFromScalarType),\n/* harmony export */   astFromSchema: () => (/* binding */ astFromSchema),\n/* harmony export */   astFromUnionType: () => (/* binding */ astFromUnionType),\n/* harmony export */   getDeprecatableDirectiveNodes: () => (/* binding */ getDeprecatableDirectiveNodes),\n/* harmony export */   getDirectiveNodes: () => (/* binding */ getDirectiveNodes),\n/* harmony export */   getDocumentNodeFromSchema: () => (/* binding */ getDocumentNodeFromSchema),\n/* harmony export */   makeDeprecatedDirective: () => (/* binding */ makeDeprecatedDirective),\n/* harmony export */   makeDirectiveNode: () => (/* binding */ makeDirectiveNode),\n/* harmony export */   makeDirectiveNodes: () => (/* binding */ makeDirectiveNodes),\n/* harmony export */   printSchemaWithDirectives: () => (/* binding */ printSchemaWithDirectives)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/printer.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/astFromValue.mjs\");\n/* harmony import */ var _astFromType_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./astFromType.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/astFromType.js\");\n/* harmony import */ var _get_directives_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./get-directives.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/get-directives.js\");\n/* harmony import */ var _astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./astFromValueUntyped.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/astFromValueUntyped.js\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n\n\n\n\n\n\nfunction getDocumentNodeFromSchema(schema, options = {}) {\n    const pathToDirectivesInExtensions = options.pathToDirectivesInExtensions;\n    const typesMap = schema.getTypeMap();\n    const schemaNode = astFromSchema(schema, pathToDirectivesInExtensions);\n    const definitions = schemaNode != null ? [schemaNode] : [];\n    const directives = schema.getDirectives();\n    for (const directive of directives) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            continue;\n        }\n        definitions.push(astFromDirective(directive, schema, pathToDirectivesInExtensions));\n    }\n    for (const typeName in typesMap) {\n        const type = typesMap[typeName];\n        const isPredefinedScalar = (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isSpecifiedScalarType)(type);\n        const isIntrospection = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.isIntrospectionType)(type);\n        if (isPredefinedScalar || isIntrospection) {\n            continue;\n        }\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n            definitions.push(astFromObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type)) {\n            definitions.push(astFromInterfaceType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n            definitions.push(astFromUnionType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type)) {\n            definitions.push(astFromInputObjectType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n            definitions.push(astFromEnumType(type, schema, pathToDirectivesInExtensions));\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n            definitions.push(astFromScalarType(type, schema, pathToDirectivesInExtensions));\n        }\n        else {\n            throw new Error(`Unknown type ${type}.`);\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DOCUMENT,\n        definitions,\n    };\n}\n// this approach uses the default schema printer rather than a custom solution, so may be more backwards compatible\n// currently does not allow customization of printSchema options having to do with comments.\nfunction printSchemaWithDirectives(schema, options = {}) {\n    const documentNode = getDocumentNodeFromSchema(schema, options);\n    return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.print)(documentNode);\n}\nfunction astFromSchema(schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const operationTypeMap = new Map([\n        ['query', undefined],\n        ['mutation', undefined],\n        ['subscription', undefined],\n    ]);\n    const nodes = [];\n    if (schema.astNode != null) {\n        nodes.push(schema.astNode);\n    }\n    if (schema.extensionASTNodes != null) {\n        for (const extensionASTNode of schema.extensionASTNodes) {\n            nodes.push(extensionASTNode);\n        }\n    }\n    for (const node of nodes) {\n        if (node.operationTypes) {\n            for (const operationTypeDefinitionNode of node.operationTypes) {\n                operationTypeMap.set(operationTypeDefinitionNode.operation, operationTypeDefinitionNode);\n            }\n        }\n    }\n    const rootTypeMap = (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_6__.getRootTypeMap)(schema);\n    for (const [operationTypeNode, operationTypeDefinitionNode] of operationTypeMap) {\n        const rootType = rootTypeMap.get(operationTypeNode);\n        if (rootType != null) {\n            const rootTypeAST = (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(rootType);\n            if (operationTypeDefinitionNode != null) {\n                operationTypeDefinitionNode.type = rootTypeAST;\n            }\n            else {\n                operationTypeMap.set(operationTypeNode, {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OPERATION_TYPE_DEFINITION,\n                    operation: operationTypeNode,\n                    type: rootTypeAST,\n                });\n            }\n        }\n    }\n    const operationTypes = [...operationTypeMap.values()].filter(_helpers_js__WEBPACK_IMPORTED_MODULE_8__.isSome);\n    const directives = getDirectiveNodes(schema, schema, pathToDirectivesInExtensions);\n    if (!operationTypes.length && !directives.length) {\n        return null;\n    }\n    const schemaNode = {\n        kind: operationTypes != null ? graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_DEFINITION : graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCHEMA_EXTENSION,\n        operationTypes,\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n    // This code is so weird because it needs to support GraphQL.js 14\n    // In GraphQL.js 14 there is no `description` value on schemaNode\n    schemaNode.description =\n        ((_b = (_a = schema.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : schema.description != null)\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: schema.description,\n                block: true,\n            }\n            : undefined;\n    return schemaNode;\n}\nfunction astFromDirective(directive, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c, _d;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE_DEFINITION,\n        description: (_b = (_a = directive.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (directive.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: directive.description,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: directive.name,\n        },\n        arguments: (_c = directive.args) === null || _c === void 0 ? void 0 : _c.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        repeatable: directive.isRepeatable,\n        locations: ((_d = directive.locations) === null || _d === void 0 ? void 0 : _d.map(location => ({\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: location,\n        }))) || [],\n    };\n}\nfunction getDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_9__.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let nodes = [];\n    if (entity.astNode != null) {\n        nodes.push(entity.astNode);\n    }\n    if ('extensionASTNodes' in entity && entity.extensionASTNodes != null) {\n        nodes = nodes.concat(entity.extensionASTNodes);\n    }\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = [];\n        for (const node of nodes) {\n            if (node.directives) {\n                directives.push(...node.directives);\n            }\n        }\n    }\n    return directives;\n}\nfunction getDeprecatableDirectiveNodes(entity, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    let directiveNodesBesidesDeprecated = [];\n    let deprecatedDirectiveNode = null;\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_9__.getDirectivesInExtensions)(entity, pathToDirectivesInExtensions);\n    let directives;\n    if (directivesInExtensions != null) {\n        directives = makeDirectiveNodes(schema, directivesInExtensions);\n    }\n    else {\n        directives = (_a = entity.astNode) === null || _a === void 0 ? void 0 : _a.directives;\n    }\n    if (directives != null) {\n        directiveNodesBesidesDeprecated = directives.filter(directive => directive.name.value !== 'deprecated');\n        if (entity.deprecationReason != null) {\n            deprecatedDirectiveNode = (_b = directives.filter(directive => directive.name.value === 'deprecated')) === null || _b === void 0 ? void 0 : _b[0];\n        }\n    }\n    if (entity.deprecationReason != null &&\n        deprecatedDirectiveNode == null) {\n        deprecatedDirectiveNode = makeDeprecatedDirective(entity.deprecationReason);\n    }\n    return deprecatedDirectiveNode == null\n        ? directiveNodesBesidesDeprecated\n        : [deprecatedDirectiveNode].concat(directiveNodesBesidesDeprecated);\n}\nfunction astFromArg(arg, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = arg.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (arg.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: arg.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: arg.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(arg.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        defaultValue: arg.defaultValue !== undefined ? (_c = (0,graphql__WEBPACK_IMPORTED_MODULE_10__.astFromValue)(arg.defaultValue, arg.type)) !== null && _c !== void 0 ? _c : undefined : undefined,\n        directives: getDeprecatableDirectiveNodes(arg, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        interfaces: Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInterfaceType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    const node = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INTERFACE_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromField(field, schema, pathToDirectivesInExtensions)),\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n    if ('getInterfaces' in type) {\n        node.interfaces = Object.values(type.getInterfaces()).map(iFace => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(iFace));\n    }\n    return node;\n}\nfunction astFromUnionType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.UNION_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n        types: type.getTypes().map(type => (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(type)),\n    };\n}\nfunction astFromInputObjectType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        fields: Object.values(type.getFields()).map(field => astFromInputField(field, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromEnumType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_TYPE_DEFINITION,\n        description: (_b = (_a = type.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (type.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        values: Object.values(type.getValues()).map(value => astFromEnumValue(value, schema, pathToDirectivesInExtensions)),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDirectiveNodes(type, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromScalarType(type, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    const directivesInExtensions = (0,_get_directives_js__WEBPACK_IMPORTED_MODULE_9__.getDirectivesInExtensions)(type, pathToDirectivesInExtensions);\n    const directives = directivesInExtensions\n        ? makeDirectiveNodes(schema, directivesInExtensions)\n        : ((_a = type.astNode) === null || _a === void 0 ? void 0 : _a.directives) || [];\n    const specifiedByValue = (type['specifiedByUrl'] || type['specifiedByURL']);\n    if (specifiedByValue && !directives.some(directiveNode => directiveNode.name.value === 'specifiedBy')) {\n        const specifiedByArgs = {\n            url: specifiedByValue,\n        };\n        directives.push(makeDirectiveNode('specifiedBy', specifiedByArgs));\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SCALAR_TYPE_DEFINITION,\n        description: (_c = (_b = type.astNode) === null || _b === void 0 ? void 0 : _b.description) !== null && _c !== void 0 ? _c : (type.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: type.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: type.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: directives,\n    };\n}\nfunction astFromField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        arguments: field.args.map(arg => astFromArg(arg, schema, pathToDirectivesInExtensions)),\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction astFromInputField(field, schema, pathToDirectivesInExtensions) {\n    var _a, _b, _c;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.INPUT_VALUE_DEFINITION,\n        description: (_b = (_a = field.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (field.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: field.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: field.name,\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_7__.astFromType)(field.type),\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(field, schema, pathToDirectivesInExtensions),\n        defaultValue: (_c = (0,graphql__WEBPACK_IMPORTED_MODULE_10__.astFromValue)(field.defaultValue, field.type)) !== null && _c !== void 0 ? _c : undefined,\n    };\n}\nfunction astFromEnumValue(value, schema, pathToDirectivesInExtensions) {\n    var _a, _b;\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ENUM_VALUE_DEFINITION,\n        description: (_b = (_a = value.astNode) === null || _a === void 0 ? void 0 : _a.description) !== null && _b !== void 0 ? _b : (value.description\n            ? {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.STRING,\n                value: value.description,\n                block: true,\n            }\n            : undefined),\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: value.name,\n        },\n        // ConstXNode has been introduced in v16 but it is not compatible with XNode so we do `as any` for backwards compatibility\n        directives: getDeprecatableDirectiveNodes(value, schema, pathToDirectivesInExtensions),\n    };\n}\nfunction makeDeprecatedDirective(deprecationReason) {\n    return makeDirectiveNode('deprecated', { reason: deprecationReason }, graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDeprecatedDirective);\n}\nfunction makeDirectiveNode(name, args, directive) {\n    const directiveArguments = [];\n    if (directive != null) {\n        for (const arg of directive.args) {\n            const argName = arg.name;\n            const argValue = args[argName];\n            if (argValue !== undefined) {\n                const value = (0,graphql__WEBPACK_IMPORTED_MODULE_10__.astFromValue)(argValue, arg.type);\n                if (value) {\n                    directiveArguments.push({\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ARGUMENT,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                            value: argName,\n                        },\n                        value,\n                    });\n                }\n            }\n        }\n    }\n    else {\n        for (const argName in args) {\n            const argValue = args[argName];\n            const value = (0,_astFromValueUntyped_js__WEBPACK_IMPORTED_MODULE_11__.astFromValueUntyped)(argValue);\n            if (value) {\n                directiveArguments.push({\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.ARGUMENT,\n                    name: {\n                        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                        value: argName,\n                    },\n                    value,\n                });\n            }\n        }\n    }\n    return {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.DIRECTIVE,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n            value: name,\n        },\n        arguments: directiveArguments,\n    };\n}\nfunction makeDirectiveNodes(schema, directiveValues) {\n    const directiveNodes = [];\n    for (const directiveName in directiveValues) {\n        const arrayOrSingleValue = directiveValues[directiveName];\n        const directive = schema === null || schema === void 0 ? void 0 : schema.getDirective(directiveName);\n        if (Array.isArray(arrayOrSingleValue)) {\n            for (const value of arrayOrSingleValue) {\n                directiveNodes.push(makeDirectiveNode(directiveName, value, directive));\n            }\n        }\n        else {\n            directiveNodes.push(makeDirectiveNode(directiveName, arrayOrSingleValue, directive));\n        }\n    }\n    return directiveNodes;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/print-schema-with-directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/prune.js":
/*!*********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/prune.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pruneSchema: () => (/* binding */ pruneSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _mapSchema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapSchema.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rootTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./rootTypes.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _get_implementing_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./get-implementing-types.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/get-implementing-types.js\");\n\n\n\n\n\n/**\n * Prunes the provided schema, removing unused and empty types\n * @param schema The schema to prune\n * @param options Additional options for removing unused types from the schema\n */\nfunction pruneSchema(schema, options = {}) {\n    const { skipEmptyCompositeTypePruning, skipEmptyUnionPruning, skipPruning, skipUnimplementedInterfacesPruning, skipUnusedTypesPruning, } = options;\n    let prunedTypes = []; // Pruned types during mapping\n    let prunedSchema = schema;\n    do {\n        let visited = visitSchema(prunedSchema);\n        // Custom pruning  was defined, so we need to pre-emptively revisit the schema accounting for this\n        if (skipPruning) {\n            const revisit = [];\n            for (const typeName in prunedSchema.getTypeMap()) {\n                if (typeName.startsWith('__')) {\n                    continue;\n                }\n                const type = prunedSchema.getType(typeName);\n                // if we want to skip pruning for this type, add it to the list of types to revisit\n                if (type && skipPruning(type)) {\n                    revisit.push(typeName);\n                }\n            }\n            visited = visitQueue(revisit, prunedSchema, visited); // visit again\n        }\n        prunedTypes = [];\n        prunedSchema = (0,_mapSchema_js__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(prunedSchema, {\n            [_Interfaces_js__WEBPACK_IMPORTED_MODULE_1__.MapperKind.TYPE]: type => {\n                if (!visited.has(type.name) && !(0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type) ||\n                        (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type)) {\n                        // skipUnusedTypesPruning: skip pruning unused types\n                        if (skipUnusedTypesPruning) {\n                            return type;\n                        }\n                        // skipEmptyUnionPruning: skip pruning empty unions\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type) && skipEmptyUnionPruning && !Object.keys(type.getTypes()).length) {\n                            return type;\n                        }\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInputObjectType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) || (0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n                            // skipEmptyCompositeTypePruning: skip pruning object types or interfaces with no fields\n                            if (skipEmptyCompositeTypePruning && !Object.keys(type.getFields()).length) {\n                                return type;\n                            }\n                        }\n                        // skipUnimplementedInterfacesPruning: skip pruning interfaces that are not implemented by any other types\n                        if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) && skipUnimplementedInterfacesPruning) {\n                            return type;\n                        }\n                    }\n                    prunedTypes.push(type.name);\n                    visited.delete(type.name);\n                    return null;\n                }\n                return type;\n            },\n        });\n    } while (prunedTypes.length); // Might have empty types and need to prune again\n    return prunedSchema;\n}\nfunction visitSchema(schema) {\n    const queue = []; // queue of nodes to visit\n    // Grab the root types and start there\n    for (const type of (0,_rootTypes_js__WEBPACK_IMPORTED_MODULE_4__.getRootTypes)(schema)) {\n        queue.push(type.name);\n    }\n    return visitQueue(queue, schema);\n}\nfunction visitQueue(queue, schema, visited = new Set()) {\n    // Interfaces encountered that are field return types need to be revisited to add their implementations\n    const revisit = new Map();\n    // Navigate all types starting with pre-queued types (root types)\n    while (queue.length) {\n        const typeName = queue.pop();\n        // Skip types we already visited unless it is an interface type that needs revisiting\n        if (visited.has(typeName) && revisit[typeName] !== true) {\n            continue;\n        }\n        const type = schema.getType(typeName);\n        if (type) {\n            // Get types for union\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isUnionType)(type)) {\n                queue.push(...type.getTypes().map(type => type.name));\n            }\n            // If it is an interface and it is a returned type, grab all implementations so we can use proper __typename in fragments\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(type) && revisit[typeName] === true) {\n                queue.push(...(0,_get_implementing_types_js__WEBPACK_IMPORTED_MODULE_5__.getImplementingTypes)(type.name, schema));\n                // No need to revisit this interface again\n                revisit[typeName] = false;\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isEnumType)(type)) {\n                // Visit enum values directives argument types\n                queue.push(...type.getValues().flatMap(value => {\n                    if (value.astNode) {\n                        return getDirectivesArgumentsTypeNames(schema, value.astNode);\n                    }\n                    return [];\n                }));\n            }\n            // Visit interfaces this type is implementing if they haven't been visited yet\n            if ('getInterfaces' in type) {\n                // Only pushes to queue to visit but not return types\n                queue.push(...type.getInterfaces().map(iface => iface.name));\n            }\n            // If the type has fields visit those field types\n            if ('getFields' in type) {\n                const fields = type.getFields();\n                const entries = Object.entries(fields);\n                if (!entries.length) {\n                    continue;\n                }\n                for (const [, field] of entries) {\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isObjectType)(type)) {\n                        // Visit arg types and arg directives arguments types\n                        queue.push(...field.args.flatMap(arg => {\n                            const typeNames = [(0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(arg.type).name];\n                            if (arg.astNode) {\n                                typeNames.push(...getDirectivesArgumentsTypeNames(schema, arg.astNode));\n                            }\n                            return typeNames;\n                        }));\n                    }\n                    const namedType = (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(field.type);\n                    queue.push(namedType.name);\n                    if (field.astNode) {\n                        queue.push(...getDirectivesArgumentsTypeNames(schema, field.astNode));\n                    }\n                    // Interfaces returned on fields need to be revisited to add their implementations\n                    if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isInterfaceType)(namedType) && !(namedType.name in revisit)) {\n                        revisit[namedType.name] = true;\n                    }\n                }\n            }\n            if (type.astNode) {\n                queue.push(...getDirectivesArgumentsTypeNames(schema, type.astNode));\n            }\n            visited.add(typeName); // Mark as visited (and therefore it is used and should be kept)\n        }\n    }\n    return visited;\n}\nfunction getDirectivesArgumentsTypeNames(schema, astNode) {\n    var _a;\n    return ((_a = astNode.directives) !== null && _a !== void 0 ? _a : []).flatMap(directive => { var _a, _b; return (_b = (_a = schema.getDirective(directive.name.value)) === null || _a === void 0 ? void 0 : _a.args.map(arg => (0,graphql__WEBPACK_IMPORTED_MODULE_3__.getNamedType)(arg.type).name)) !== null && _b !== void 0 ? _b : []; });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9wcnVuZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXdKO0FBQzdHO0FBQ0U7QUFDQztBQUNxQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08seUNBQXlDO0FBQ2hELFlBQVksaUlBQWlJO0FBQzdJLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0EsdUJBQXVCLHdEQUFTO0FBQ2hDLGFBQWEsc0RBQVU7QUFDdkIsZ0RBQWdELDhEQUFxQjtBQUNyRSx3QkFBd0Isb0RBQVc7QUFDbkMsd0JBQXdCLDBEQUFpQjtBQUN6Qyx3QkFBd0Isd0RBQWU7QUFDdkMsd0JBQXdCLHFEQUFZO0FBQ3BDLHdCQUF3QixxREFBWTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLG9EQUFXO0FBQ3ZDO0FBQ0E7QUFDQSw0QkFBNEIsMERBQWlCLFVBQVUsd0RBQWUsVUFBVSxxREFBWTtBQUM1RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsd0RBQWU7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsTUFBTSw0QkFBNEI7QUFDbEM7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCO0FBQ3RCO0FBQ0EsdUJBQXVCLDJEQUFZO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0Isb0RBQVc7QUFDM0I7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHdEQUFlO0FBQy9CLDhCQUE4QixnRkFBb0I7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLG1EQUFVO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHFEQUFZO0FBQ3BDO0FBQ0E7QUFDQSwrQ0FBK0MscURBQVk7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQSxzQ0FBc0MscURBQVk7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix3REFBZTtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrR0FBa0csWUFBWSxzSEFBc0gscURBQVksd0RBQXdEO0FBQ3hTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3BydW5lLmpzP2JlZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmFtZWRUeXBlLCBpc09iamVjdFR5cGUsIGlzSW50ZXJmYWNlVHlwZSwgaXNVbmlvblR5cGUsIGlzSW5wdXRPYmplY3RUeXBlLCBpc1NwZWNpZmllZFNjYWxhclR5cGUsIGlzU2NhbGFyVHlwZSwgaXNFbnVtVHlwZSwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1hcFNjaGVtYSB9IGZyb20gJy4vbWFwU2NoZW1hLmpzJztcbmltcG9ydCB7IE1hcHBlcktpbmQgfSBmcm9tICcuL0ludGVyZmFjZXMuanMnO1xuaW1wb3J0IHsgZ2V0Um9vdFR5cGVzIH0gZnJvbSAnLi9yb290VHlwZXMuanMnO1xuaW1wb3J0IHsgZ2V0SW1wbGVtZW50aW5nVHlwZXMgfSBmcm9tICcuL2dldC1pbXBsZW1lbnRpbmctdHlwZXMuanMnO1xuLyoqXG4gKiBQcnVuZXMgdGhlIHByb3ZpZGVkIHNjaGVtYSwgcmVtb3ZpbmcgdW51c2VkIGFuZCBlbXB0eSB0eXBlc1xuICogQHBhcmFtIHNjaGVtYSBUaGUgc2NoZW1hIHRvIHBydW5lXG4gKiBAcGFyYW0gb3B0aW9ucyBBZGRpdGlvbmFsIG9wdGlvbnMgZm9yIHJlbW92aW5nIHVudXNlZCB0eXBlcyBmcm9tIHRoZSBzY2hlbWFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBydW5lU2NoZW1hKHNjaGVtYSwgb3B0aW9ucyA9IHt9KSB7XG4gICAgY29uc3QgeyBza2lwRW1wdHlDb21wb3NpdGVUeXBlUHJ1bmluZywgc2tpcEVtcHR5VW5pb25QcnVuaW5nLCBza2lwUHJ1bmluZywgc2tpcFVuaW1wbGVtZW50ZWRJbnRlcmZhY2VzUHJ1bmluZywgc2tpcFVudXNlZFR5cGVzUHJ1bmluZywgfSA9IG9wdGlvbnM7XG4gICAgbGV0IHBydW5lZFR5cGVzID0gW107IC8vIFBydW5lZCB0eXBlcyBkdXJpbmcgbWFwcGluZ1xuICAgIGxldCBwcnVuZWRTY2hlbWEgPSBzY2hlbWE7XG4gICAgZG8ge1xuICAgICAgICBsZXQgdmlzaXRlZCA9IHZpc2l0U2NoZW1hKHBydW5lZFNjaGVtYSk7XG4gICAgICAgIC8vIEN1c3RvbSBwcnVuaW5nICB3YXMgZGVmaW5lZCwgc28gd2UgbmVlZCB0byBwcmUtZW1wdGl2ZWx5IHJldmlzaXQgdGhlIHNjaGVtYSBhY2NvdW50aW5nIGZvciB0aGlzXG4gICAgICAgIGlmIChza2lwUHJ1bmluZykge1xuICAgICAgICAgICAgY29uc3QgcmV2aXNpdCA9IFtdO1xuICAgICAgICAgICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBwcnVuZWRTY2hlbWEuZ2V0VHlwZU1hcCgpKSB7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVOYW1lLnN0YXJ0c1dpdGgoJ19fJykpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNvbnN0IHR5cGUgPSBwcnVuZWRTY2hlbWEuZ2V0VHlwZSh0eXBlTmFtZSk7XG4gICAgICAgICAgICAgICAgLy8gaWYgd2Ugd2FudCB0byBza2lwIHBydW5pbmcgZm9yIHRoaXMgdHlwZSwgYWRkIGl0IHRvIHRoZSBsaXN0IG9mIHR5cGVzIHRvIHJldmlzaXRcbiAgICAgICAgICAgICAgICBpZiAodHlwZSAmJiBza2lwUHJ1bmluZyh0eXBlKSkge1xuICAgICAgICAgICAgICAgICAgICByZXZpc2l0LnB1c2godHlwZU5hbWUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZpc2l0ZWQgPSB2aXNpdFF1ZXVlKHJldmlzaXQsIHBydW5lZFNjaGVtYSwgdmlzaXRlZCk7IC8vIHZpc2l0IGFnYWluXG4gICAgICAgIH1cbiAgICAgICAgcHJ1bmVkVHlwZXMgPSBbXTtcbiAgICAgICAgcHJ1bmVkU2NoZW1hID0gbWFwU2NoZW1hKHBydW5lZFNjaGVtYSwge1xuICAgICAgICAgICAgW01hcHBlcktpbmQuVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghdmlzaXRlZC5oYXModHlwZS5uYW1lKSAmJiAhaXNTcGVjaWZpZWRTY2FsYXJUeXBlKHR5cGUpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1VuaW9uVHlwZSh0eXBlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNJbnB1dE9iamVjdFR5cGUodHlwZSkgfHxcbiAgICAgICAgICAgICAgICAgICAgICAgIGlzSW50ZXJmYWNlVHlwZSh0eXBlKSB8fFxuICAgICAgICAgICAgICAgICAgICAgICAgaXNPYmplY3RUeXBlKHR5cGUpIHx8XG4gICAgICAgICAgICAgICAgICAgICAgICBpc1NjYWxhclR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNraXBVbnVzZWRUeXBlc1BydW5pbmc6IHNraXAgcHJ1bmluZyB1bnVzZWQgdHlwZXNcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChza2lwVW51c2VkVHlwZXNQcnVuaW5nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBza2lwRW1wdHlVbmlvblBydW5pbmc6IHNraXAgcHJ1bmluZyBlbXB0eSB1bmlvbnNcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1VuaW9uVHlwZSh0eXBlKSAmJiBza2lwRW1wdHlVbmlvblBydW5pbmcgJiYgIU9iamVjdC5rZXlzKHR5cGUuZ2V0VHlwZXMoKSkubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNJbnB1dE9iamVjdFR5cGUodHlwZSkgfHwgaXNJbnRlcmZhY2VUeXBlKHR5cGUpIHx8IGlzT2JqZWN0VHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNraXBFbXB0eUNvbXBvc2l0ZVR5cGVQcnVuaW5nOiBza2lwIHBydW5pbmcgb2JqZWN0IHR5cGVzIG9yIGludGVyZmFjZXMgd2l0aCBubyBmaWVsZHNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoc2tpcEVtcHR5Q29tcG9zaXRlVHlwZVBydW5pbmcgJiYgIU9iamVjdC5rZXlzKHR5cGUuZ2V0RmllbGRzKCkpLmxlbmd0aCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBza2lwVW5pbXBsZW1lbnRlZEludGVyZmFjZXNQcnVuaW5nOiBza2lwIHBydW5pbmcgaW50ZXJmYWNlcyB0aGF0IGFyZSBub3QgaW1wbGVtZW50ZWQgYnkgYW55IG90aGVyIHR5cGVzXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoaXNJbnRlcmZhY2VUeXBlKHR5cGUpICYmIHNraXBVbmltcGxlbWVudGVkSW50ZXJmYWNlc1BydW5pbmcpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBwcnVuZWRUeXBlcy5wdXNoKHR5cGUubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHZpc2l0ZWQuZGVsZXRlKHR5cGUubmFtZSk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gdHlwZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH0gd2hpbGUgKHBydW5lZFR5cGVzLmxlbmd0aCk7IC8vIE1pZ2h0IGhhdmUgZW1wdHkgdHlwZXMgYW5kIG5lZWQgdG8gcHJ1bmUgYWdhaW5cbiAgICByZXR1cm4gcHJ1bmVkU2NoZW1hO1xufVxuZnVuY3Rpb24gdmlzaXRTY2hlbWEoc2NoZW1hKSB7XG4gICAgY29uc3QgcXVldWUgPSBbXTsgLy8gcXVldWUgb2Ygbm9kZXMgdG8gdmlzaXRcbiAgICAvLyBHcmFiIHRoZSByb290IHR5cGVzIGFuZCBzdGFydCB0aGVyZVxuICAgIGZvciAoY29uc3QgdHlwZSBvZiBnZXRSb290VHlwZXMoc2NoZW1hKSkge1xuICAgICAgICBxdWV1ZS5wdXNoKHR5cGUubmFtZSk7XG4gICAgfVxuICAgIHJldHVybiB2aXNpdFF1ZXVlKHF1ZXVlLCBzY2hlbWEpO1xufVxuZnVuY3Rpb24gdmlzaXRRdWV1ZShxdWV1ZSwgc2NoZW1hLCB2aXNpdGVkID0gbmV3IFNldCgpKSB7XG4gICAgLy8gSW50ZXJmYWNlcyBlbmNvdW50ZXJlZCB0aGF0IGFyZSBmaWVsZCByZXR1cm4gdHlwZXMgbmVlZCB0byBiZSByZXZpc2l0ZWQgdG8gYWRkIHRoZWlyIGltcGxlbWVudGF0aW9uc1xuICAgIGNvbnN0IHJldmlzaXQgPSBuZXcgTWFwKCk7XG4gICAgLy8gTmF2aWdhdGUgYWxsIHR5cGVzIHN0YXJ0aW5nIHdpdGggcHJlLXF1ZXVlZCB0eXBlcyAocm9vdCB0eXBlcylcbiAgICB3aGlsZSAocXVldWUubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IHR5cGVOYW1lID0gcXVldWUucG9wKCk7XG4gICAgICAgIC8vIFNraXAgdHlwZXMgd2UgYWxyZWFkeSB2aXNpdGVkIHVubGVzcyBpdCBpcyBhbiBpbnRlcmZhY2UgdHlwZSB0aGF0IG5lZWRzIHJldmlzaXRpbmdcbiAgICAgICAgaWYgKHZpc2l0ZWQuaGFzKHR5cGVOYW1lKSAmJiByZXZpc2l0W3R5cGVOYW1lXSAhPT0gdHJ1ZSkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgdHlwZSA9IHNjaGVtYS5nZXRUeXBlKHR5cGVOYW1lKTtcbiAgICAgICAgaWYgKHR5cGUpIHtcbiAgICAgICAgICAgIC8vIEdldCB0eXBlcyBmb3IgdW5pb25cbiAgICAgICAgICAgIGlmIChpc1VuaW9uVHlwZSh0eXBlKSkge1xuICAgICAgICAgICAgICAgIHF1ZXVlLnB1c2goLi4udHlwZS5nZXRUeXBlcygpLm1hcCh0eXBlID0+IHR5cGUubmFtZSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gSWYgaXQgaXMgYW4gaW50ZXJmYWNlIGFuZCBpdCBpcyBhIHJldHVybmVkIHR5cGUsIGdyYWIgYWxsIGltcGxlbWVudGF0aW9ucyBzbyB3ZSBjYW4gdXNlIHByb3BlciBfX3R5cGVuYW1lIGluIGZyYWdtZW50c1xuICAgICAgICAgICAgaWYgKGlzSW50ZXJmYWNlVHlwZSh0eXBlKSAmJiByZXZpc2l0W3R5cGVOYW1lXSA9PT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHF1ZXVlLnB1c2goLi4uZ2V0SW1wbGVtZW50aW5nVHlwZXModHlwZS5uYW1lLCBzY2hlbWEpKTtcbiAgICAgICAgICAgICAgICAvLyBObyBuZWVkIHRvIHJldmlzaXQgdGhpcyBpbnRlcmZhY2UgYWdhaW5cbiAgICAgICAgICAgICAgICByZXZpc2l0W3R5cGVOYW1lXSA9IGZhbHNlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGlzRW51bVR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICAvLyBWaXNpdCBlbnVtIHZhbHVlcyBkaXJlY3RpdmVzIGFyZ3VtZW50IHR5cGVzXG4gICAgICAgICAgICAgICAgcXVldWUucHVzaCguLi50eXBlLmdldFZhbHVlcygpLmZsYXRNYXAodmFsdWUgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAodmFsdWUuYXN0Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGdldERpcmVjdGl2ZXNBcmd1bWVudHNUeXBlTmFtZXMoc2NoZW1hLCB2YWx1ZS5hc3ROb2RlKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gW107XG4gICAgICAgICAgICAgICAgfSkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVmlzaXQgaW50ZXJmYWNlcyB0aGlzIHR5cGUgaXMgaW1wbGVtZW50aW5nIGlmIHRoZXkgaGF2ZW4ndCBiZWVuIHZpc2l0ZWQgeWV0XG4gICAgICAgICAgICBpZiAoJ2dldEludGVyZmFjZXMnIGluIHR5cGUpIHtcbiAgICAgICAgICAgICAgICAvLyBPbmx5IHB1c2hlcyB0byBxdWV1ZSB0byB2aXNpdCBidXQgbm90IHJldHVybiB0eXBlc1xuICAgICAgICAgICAgICAgIHF1ZXVlLnB1c2goLi4udHlwZS5nZXRJbnRlcmZhY2VzKCkubWFwKGlmYWNlID0+IGlmYWNlLm5hbWUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIHRoZSB0eXBlIGhhcyBmaWVsZHMgdmlzaXQgdGhvc2UgZmllbGQgdHlwZXNcbiAgICAgICAgICAgIGlmICgnZ2V0RmllbGRzJyBpbiB0eXBlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZmllbGRzID0gdHlwZS5nZXRGaWVsZHMoKTtcbiAgICAgICAgICAgICAgICBjb25zdCBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMoZmllbGRzKTtcbiAgICAgICAgICAgICAgICBpZiAoIWVudHJpZXMubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IFssIGZpZWxkXSBvZiBlbnRyaWVzKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc09iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIFZpc2l0IGFyZyB0eXBlcyBhbmQgYXJnIGRpcmVjdGl2ZXMgYXJndW1lbnRzIHR5cGVzXG4gICAgICAgICAgICAgICAgICAgICAgICBxdWV1ZS5wdXNoKC4uLmZpZWxkLmFyZ3MuZmxhdE1hcChhcmcgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHR5cGVOYW1lcyA9IFtnZXROYW1lZFR5cGUoYXJnLnR5cGUpLm5hbWVdO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhcmcuYXN0Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlTmFtZXMucHVzaCguLi5nZXREaXJlY3RpdmVzQXJndW1lbnRzVHlwZU5hbWVzKHNjaGVtYSwgYXJnLmFzdE5vZGUpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHR5cGVOYW1lcztcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuYW1lZFR5cGUgPSBnZXROYW1lZFR5cGUoZmllbGQudHlwZSk7XG4gICAgICAgICAgICAgICAgICAgIHF1ZXVlLnB1c2gobmFtZWRUeXBlLm5hbWUpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoZmllbGQuYXN0Tm9kZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcXVldWUucHVzaCguLi5nZXREaXJlY3RpdmVzQXJndW1lbnRzVHlwZU5hbWVzKHNjaGVtYSwgZmllbGQuYXN0Tm9kZSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIEludGVyZmFjZXMgcmV0dXJuZWQgb24gZmllbGRzIG5lZWQgdG8gYmUgcmV2aXNpdGVkIHRvIGFkZCB0aGVpciBpbXBsZW1lbnRhdGlvbnNcbiAgICAgICAgICAgICAgICAgICAgaWYgKGlzSW50ZXJmYWNlVHlwZShuYW1lZFR5cGUpICYmICEobmFtZWRUeXBlLm5hbWUgaW4gcmV2aXNpdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldmlzaXRbbmFtZWRUeXBlLm5hbWVdID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlLmFzdE5vZGUpIHtcbiAgICAgICAgICAgICAgICBxdWV1ZS5wdXNoKC4uLmdldERpcmVjdGl2ZXNBcmd1bWVudHNUeXBlTmFtZXMoc2NoZW1hLCB0eXBlLmFzdE5vZGUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHZpc2l0ZWQuYWRkKHR5cGVOYW1lKTsgLy8gTWFyayBhcyB2aXNpdGVkIChhbmQgdGhlcmVmb3JlIGl0IGlzIHVzZWQgYW5kIHNob3VsZCBiZSBrZXB0KVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB2aXNpdGVkO1xufVxuZnVuY3Rpb24gZ2V0RGlyZWN0aXZlc0FyZ3VtZW50c1R5cGVOYW1lcyhzY2hlbWEsIGFzdE5vZGUpIHtcbiAgICB2YXIgX2E7XG4gICAgcmV0dXJuICgoX2EgPSBhc3ROb2RlLmRpcmVjdGl2ZXMpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IFtdKS5mbGF0TWFwKGRpcmVjdGl2ZSA9PiB7IHZhciBfYSwgX2I7IHJldHVybiAoX2IgPSAoX2EgPSBzY2hlbWEuZ2V0RGlyZWN0aXZlKGRpcmVjdGl2ZS5uYW1lLnZhbHVlKSkgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hLmFyZ3MubWFwKGFyZyA9PiBnZXROYW1lZFR5cGUoYXJnLnR5cGUpLm5hbWUpKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBbXTsgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/prune.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/rewire.js":
/*!**********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/rewire.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewireTypes: () => (/* binding */ rewireTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _stub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stub.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLUnionType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(enumConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.isNamedStub)(type) ? (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/rewire.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!*************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9yb290VHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlEO0FBQ1Q7QUFDakM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDhEQUFrQix3Q0FBd0MsV0FBVztBQUNuRjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDTyx5QkFBeUIscURBQVE7QUFDeEM7QUFDQTtBQUNBLENBQUM7QUFDTSxxQkFBcUIscURBQVE7QUFDcEM7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIscURBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vcm9vdFR5cGVzLmpzPzNlMDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlR3JhcGhRTEVycm9yIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgbWVtb2l6ZTEgfSBmcm9tICcuL21lbW9pemUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmluZWRSb290VHlwZShzY2hlbWEsIG9wZXJhdGlvbiwgbm9kZXMpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IGdldFJvb3RUeXBlTWFwKHNjaGVtYSk7XG4gICAgY29uc3Qgcm9vdFR5cGUgPSByb290VHlwZU1hcC5nZXQob3BlcmF0aW9uKTtcbiAgICBpZiAocm9vdFR5cGUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYFNjaGVtYSBpcyBub3QgY29uZmlndXJlZCB0byBleGVjdXRlICR7b3BlcmF0aW9ufSBvcGVyYXRpb24uYCwge1xuICAgICAgICAgICAgbm9kZXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdFR5cGU7XG59XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVOYW1lcyA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlTmFtZXMoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVzID0gZ2V0Um9vdFR5cGVzKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQoWy4uLnJvb3RUeXBlc10ubWFwKHR5cGUgPT4gdHlwZS5uYW1lKSk7XG59KTtcbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZXMgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZXMoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBnZXRSb290VHlwZU1hcChzY2hlbWEpO1xuICAgIHJldHVybiBuZXcgU2V0KHJvb3RUeXBlTWFwLnZhbHVlcygpKTtcbn0pO1xuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlTWFwID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBuZXcgTWFwKCk7XG4gICAgY29uc3QgcXVlcnlUeXBlID0gc2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgIGlmIChxdWVyeVR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdxdWVyeScsIHF1ZXJ5VHlwZSk7XG4gICAgfVxuICAgIGNvbnN0IG11dGF0aW9uVHlwZSA9IHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKTtcbiAgICBpZiAobXV0YXRpb25UeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgnbXV0YXRpb24nLCBtdXRhdGlvblR5cGUpO1xuICAgIH1cbiAgICBjb25zdCBzdWJzY3JpcHRpb25UeXBlID0gc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKTtcbiAgICBpZiAoc3Vic2NyaXB0aW9uVHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ3N1YnNjcmlwdGlvbicsIHN1YnNjcmlwdGlvblR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdFR5cGVNYXA7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/selectionSets.js":
/*!*****************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/selectionSets.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseSelectionSet: () => (/* binding */ parseSelectionSet)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nfunction parseSelectionSet(selectionSet, options) {\n    const query = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(selectionSet, options).definitions[0];\n    return query.selectionSet;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zZWxlY3Rpb25TZXRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWdDO0FBQ3pCO0FBQ1Asa0JBQWtCLDhDQUFLO0FBQ3ZCO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vc2VsZWN0aW9uU2V0cy5qcz8zMzU2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VTZWxlY3Rpb25TZXQoc2VsZWN0aW9uU2V0LCBvcHRpb25zKSB7XG4gICAgY29uc3QgcXVlcnkgPSBwYXJzZShzZWxlY3Rpb25TZXQsIG9wdGlvbnMpLmRlZmluaXRpb25zWzBdO1xuICAgIHJldHVybiBxdWVyeS5zZWxlY3Rpb25TZXQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/selectionSets.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/stub.js":
/*!********************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/stub.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamedStub: () => (/* binding */ createNamedStub),\n/* harmony export */   createStub: () => (/* binding */ createStub),\n/* harmony export */   getBuiltInForStub: () => (/* binding */ getBuiltInForStub),\n/* harmony export */   isNamedStub: () => (/* binding */ isNamedStub)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.LIST_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(createStub(node.type, type));\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NON_NULL_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID;\n        default:\n            return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zdHViLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa007QUFDM0w7QUFDUDtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFpQjtBQUN2QztBQUNBO0FBQ0Esc0JBQXNCLHlEQUFvQjtBQUMxQztBQUNBO0FBQ0Esc0JBQXNCLDJEQUFzQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFhO0FBQ25DLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBLGFBQWEseUNBQUk7QUFDakIsdUJBQXVCLGdEQUFXO0FBQ2xDLGFBQWEseUNBQUk7QUFDakIsdUJBQXVCLG1EQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLCtDQUFVO0FBQ3ZCLG1CQUFtQiwrQ0FBVTtBQUM3QixhQUFhLGlEQUFZO0FBQ3pCLG1CQUFtQixpREFBWTtBQUMvQixhQUFhLGtEQUFhO0FBQzFCLG1CQUFtQixrREFBYTtBQUNoQyxhQUFhLG1EQUFjO0FBQzNCLG1CQUFtQixtREFBYztBQUNqQyxhQUFhLDhDQUFTO0FBQ3RCLG1CQUFtQiw4Q0FBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zdHViLmpzP2FlMmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxJbnRlcmZhY2VUeXBlLCBHcmFwaFFMSW5wdXRPYmplY3RUeXBlLCBHcmFwaFFMU3RyaW5nLCBHcmFwaFFMSW50LCBHcmFwaFFMRmxvYXQsIEdyYXBoUUxCb29sZWFuLCBHcmFwaFFMSUQsIEtpbmQsIEdyYXBoUUxMaXN0LCBHcmFwaFFMTm9uTnVsbCwgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOYW1lZFN0dWIobmFtZSwgdHlwZSkge1xuICAgIGxldCBjb25zdHJ1Y3RvcjtcbiAgICBpZiAodHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBHcmFwaFFMT2JqZWN0VHlwZTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZSA9PT0gJ2ludGVyZmFjZScpIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBHcmFwaFFMSW50ZXJmYWNlVHlwZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTElucHV0T2JqZWN0VHlwZTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBjb25zdHJ1Y3Rvcih7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGZpZWxkczoge1xuICAgICAgICAgICAgX2Zha2U6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBHcmFwaFFMU3RyaW5nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdHViKG5vZGUsIHR5cGUpIHtcbiAgICBzd2l0Y2ggKG5vZGUua2luZCkge1xuICAgICAgICBjYXNlIEtpbmQuTElTVF9UWVBFOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMTGlzdChjcmVhdGVTdHViKG5vZGUudHlwZSwgdHlwZSkpO1xuICAgICAgICBjYXNlIEtpbmQuTk9OX05VTExfVFlQRTpcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTE5vbk51bGwoY3JlYXRlU3R1Yihub2RlLnR5cGUsIHR5cGUpKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnb3V0cHV0Jykge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVOYW1lZFN0dWIobm9kZS5uYW1lLnZhbHVlLCAnb2JqZWN0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTmFtZWRTdHViKG5vZGUubmFtZS52YWx1ZSwgJ2lucHV0Jyk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTmFtZWRTdHViKHR5cGUpIHtcbiAgICBpZiAoJ2dldEZpZWxkcycgaW4gdHlwZSkge1xuICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5yZWFjaGFibGUtbG9vcFxuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICByZXR1cm4gZmllbGQubmFtZSA9PT0gJ19mYWtlJztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QnVpbHRJbkZvclN0dWIodHlwZSkge1xuICAgIHN3aXRjaCAodHlwZS5uYW1lKSB7XG4gICAgICAgIGNhc2UgR3JhcGhRTEludC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxJbnQ7XG4gICAgICAgIGNhc2UgR3JhcGhRTEZsb2F0Lm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTEZsb2F0O1xuICAgICAgICBjYXNlIEdyYXBoUUxTdHJpbmcubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMU3RyaW5nO1xuICAgICAgICBjYXNlIEdyYXBoUUxCb29sZWFuLm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTEJvb2xlYW47XG4gICAgICAgIGNhc2UgR3JhcGhRTElELm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTElEO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/stub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null ? inputLeafValueTransformer(nullableType, value) : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null ? inputObjectValueTransformer(nullableType, newValue) : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch (_a) {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS90cmFuc2Zvcm1JbnB1dFZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxRjtBQUM5QztBQUNoQztBQUNQO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix3REFBZTtBQUN4QyxRQUFRLG1EQUFVO0FBQ2xCO0FBQ0E7QUFDQSxhQUFhLG1EQUFVO0FBQ3ZCLGVBQWUsb0RBQU87QUFDdEI7QUFDQSxhQUFhLDBEQUFpQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNPO0FBQ1AsMEVBQTBFO0FBQzFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL3RyYW5zZm9ybUlucHV0VmFsdWUuanM/OTVhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXROdWxsYWJsZVR5cGUsIGlzTGVhZlR5cGUsIGlzTGlzdFR5cGUsIGlzSW5wdXRPYmplY3RUeXBlIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBhc0FycmF5IH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyID0gbnVsbCwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyID0gbnVsbCkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgY29uc3QgbnVsbGFibGVUeXBlID0gZ2V0TnVsbGFibGVUeXBlKHR5cGUpO1xuICAgIGlmIChpc0xlYWZUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIgIT0gbnVsbCA/IGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIobnVsbGFibGVUeXBlLCB2YWx1ZSkgOiB2YWx1ZTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNMaXN0VHlwZShudWxsYWJsZVR5cGUpKSB7XG4gICAgICAgIHJldHVybiBhc0FycmF5KHZhbHVlKS5tYXAoKGxpc3RNZW1iZXIpID0+IHRyYW5zZm9ybUlucHV0VmFsdWUobnVsbGFibGVUeXBlLm9mVHlwZSwgbGlzdE1lbWJlciwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzSW5wdXRPYmplY3RUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgY29uc3QgZmllbGRzID0gbnVsbGFibGVUeXBlLmdldEZpZWxkcygpO1xuICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHt9O1xuICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiB2YWx1ZSkge1xuICAgICAgICAgICAgY29uc3QgZmllbGQgPSBmaWVsZHNba2V5XTtcbiAgICAgICAgICAgIGlmIChmaWVsZCAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgbmV3VmFsdWVba2V5XSA9IHRyYW5zZm9ybUlucHV0VmFsdWUoZmllbGQudHlwZSwgdmFsdWVba2V5XSwgaW5wdXRMZWFmVmFsdWVUcmFuc2Zvcm1lciwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyICE9IG51bGwgPyBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIobnVsbGFibGVUeXBlLCBuZXdWYWx1ZSkgOiBuZXdWYWx1ZTtcbiAgICB9XG4gICAgLy8gdW5yZWFjaGFibGUsIG5vIG90aGVyIHBvc3NpYmxlIHJldHVybiB2YWx1ZVxufVxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZUlucHV0VmFsdWUodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB0LnNlcmlhbGl6ZSh2KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoX2EpIHtcbiAgICAgICAgICAgIHJldHVybiB2O1xuICAgICAgICB9XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcGFyc2VJbnB1dFZhbHVlKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdC5wYXJzZVZhbHVlKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChfYSkge1xuICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlucHV0VmFsdWVMaXRlcmFsKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB0LnBhcnNlTGl0ZXJhbCh2LCB7fSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/updateArgument.js":
/*!******************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/updateArgument.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createVariableNameGenerator: () => (/* binding */ createVariableNameGenerator),\n/* harmony export */   updateArgument: () => (/* binding */ updateArgument)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _astFromType_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./astFromType.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/astFromType.js\");\n\n\nfunction updateArgument(argumentNodes, variableDefinitionsMap, variableValues, argName, varName, type, value) {\n    argumentNodes[argName] = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.ARGUMENT,\n        name: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n            value: argName,\n        },\n        value: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n                value: varName,\n            },\n        },\n    };\n    variableDefinitionsMap[varName] = {\n        kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE_DEFINITION,\n        variable: {\n            kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.VARIABLE,\n            name: {\n                kind: graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.NAME,\n                value: varName,\n            },\n        },\n        type: (0,_astFromType_js__WEBPACK_IMPORTED_MODULE_1__.astFromType)(type),\n    };\n    if (value !== undefined) {\n        variableValues[varName] = value;\n        return;\n    }\n    // including the variable in the map with value of `undefined`\n    // will actually be translated by graphql-js into `null`\n    // see https://github.com/graphql/graphql-js/issues/2533\n    if (varName in variableValues) {\n        delete variableValues[varName];\n    }\n}\nfunction createVariableNameGenerator(variableDefinitionMap) {\n    let varCounter = 0;\n    return (argName) => {\n        let varName;\n        do {\n            varName = `_v${(varCounter++).toString()}_${argName}`;\n        } while (varName in variableDefinitionMap);\n        return varName;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS91cGRhdGVBcmd1bWVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQStCO0FBQ2dCO0FBQ3hDO0FBQ1A7QUFDQSxjQUFjLHlDQUFJO0FBQ2xCO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0EsU0FBUztBQUNUO0FBQ0Esa0JBQWtCLHlDQUFJO0FBQ3RCO0FBQ0Esc0JBQXNCLHlDQUFJO0FBQzFCO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EsY0FBYyx5Q0FBSTtBQUNsQjtBQUNBLGtCQUFrQix5Q0FBSTtBQUN0QjtBQUNBLHNCQUFzQix5Q0FBSTtBQUMxQjtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsY0FBYyw0REFBVztBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDBCQUEwQixHQUFHLFFBQVE7QUFDaEUsVUFBVTtBQUNWO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS91cGRhdGVBcmd1bWVudC5qcz9lYTAyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEtpbmQgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IGFzdEZyb21UeXBlIH0gZnJvbSAnLi9hc3RGcm9tVHlwZS5qcyc7XG5leHBvcnQgZnVuY3Rpb24gdXBkYXRlQXJndW1lbnQoYXJndW1lbnROb2RlcywgdmFyaWFibGVEZWZpbml0aW9uc01hcCwgdmFyaWFibGVWYWx1ZXMsIGFyZ05hbWUsIHZhck5hbWUsIHR5cGUsIHZhbHVlKSB7XG4gICAgYXJndW1lbnROb2Rlc1thcmdOYW1lXSA9IHtcbiAgICAgICAga2luZDogS2luZC5BUkdVTUVOVCxcbiAgICAgICAgbmFtZToge1xuICAgICAgICAgICAga2luZDogS2luZC5OQU1FLFxuICAgICAgICAgICAgdmFsdWU6IGFyZ05hbWUsXG4gICAgICAgIH0sXG4gICAgICAgIHZhbHVlOiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLlZBUklBQkxFLFxuICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFyTmFtZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfTtcbiAgICB2YXJpYWJsZURlZmluaXRpb25zTWFwW3Zhck5hbWVdID0ge1xuICAgICAgICBraW5kOiBLaW5kLlZBUklBQkxFX0RFRklOSVRJT04sXG4gICAgICAgIHZhcmlhYmxlOiB7XG4gICAgICAgICAgICBraW5kOiBLaW5kLlZBUklBQkxFLFxuICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRSxcbiAgICAgICAgICAgICAgICB2YWx1ZTogdmFyTmFtZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHR5cGU6IGFzdEZyb21UeXBlKHR5cGUpLFxuICAgIH07XG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdmFyaWFibGVWYWx1ZXNbdmFyTmFtZV0gPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICAvLyBpbmNsdWRpbmcgdGhlIHZhcmlhYmxlIGluIHRoZSBtYXAgd2l0aCB2YWx1ZSBvZiBgdW5kZWZpbmVkYFxuICAgIC8vIHdpbGwgYWN0dWFsbHkgYmUgdHJhbnNsYXRlZCBieSBncmFwaHFsLWpzIGludG8gYG51bGxgXG4gICAgLy8gc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9ncmFwaHFsL2dyYXBocWwtanMvaXNzdWVzLzI1MzNcbiAgICBpZiAodmFyTmFtZSBpbiB2YXJpYWJsZVZhbHVlcykge1xuICAgICAgICBkZWxldGUgdmFyaWFibGVWYWx1ZXNbdmFyTmFtZV07XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVZhcmlhYmxlTmFtZUdlbmVyYXRvcih2YXJpYWJsZURlZmluaXRpb25NYXApIHtcbiAgICBsZXQgdmFyQ291bnRlciA9IDA7XG4gICAgcmV0dXJuIChhcmdOYW1lKSA9PiB7XG4gICAgICAgIGxldCB2YXJOYW1lO1xuICAgICAgICBkbyB7XG4gICAgICAgICAgICB2YXJOYW1lID0gYF92JHsodmFyQ291bnRlcisrKS50b1N0cmluZygpfV8ke2FyZ05hbWV9YDtcbiAgICAgICAgfSB3aGlsZSAodmFyTmFtZSBpbiB2YXJpYWJsZURlZmluaXRpb25NYXApO1xuICAgICAgICByZXR1cm4gdmFyTmFtZTtcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/updateArgument.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/utils/esm/visitResult.js":
/*!***************************************************************!*\
  !*** ../node_modules/@graphql-tools/utils/esm/visitResult.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   visitData: () => (/* binding */ visitData),\n/* harmony export */   visitErrors: () => (/* binding */ visitErrors),\n/* harmony export */   visitResult: () => (/* binding */ visitResult)\n/* harmony export */ });\n/* harmony import */ var _getOperationASTFromRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getOperationASTFromRequest.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _collectFields_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collectFields.js */ \"(ssr)/../node_modules/@graphql-tools/utils/esm/collectFields.js\");\n\n\n\nfunction visitData(data, enter, leave) {\n    if (Array.isArray(data)) {\n        return data.map(value => visitData(value, enter, leave));\n    }\n    else if (typeof data === 'object') {\n        const newData = enter != null ? enter(data) : data;\n        if (newData != null) {\n            for (const key in newData) {\n                const value = newData[key];\n                Object.defineProperty(newData, key, {\n                    value: visitData(value, enter, leave),\n                });\n            }\n        }\n        return leave != null ? leave(newData) : newData;\n    }\n    return data;\n}\nfunction visitErrors(errors, visitor) {\n    return errors.map(error => visitor(error));\n}\nfunction visitResult(result, request, schema, resultVisitorMap, errorVisitorMap) {\n    const fragments = request.document.definitions.reduce((acc, def) => {\n        if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION) {\n            acc[def.name.value] = def;\n        }\n        return acc;\n    }, {});\n    const variableValues = request.variables || {};\n    const errorInfo = {\n        segmentInfoMap: new Map(),\n        unpathedErrors: new Set(),\n    };\n    const data = result.data;\n    const errors = result.errors;\n    const visitingErrors = errors != null && errorVisitorMap != null;\n    const operationDocumentNode = (0,_getOperationASTFromRequest_js__WEBPACK_IMPORTED_MODULE_1__.getOperationASTFromRequest)(request);\n    if (data != null && operationDocumentNode != null) {\n        result.data = visitRoot(data, operationDocumentNode, schema, fragments, variableValues, resultVisitorMap, visitingErrors ? errors : undefined, errorInfo);\n    }\n    if (errors != null && errorVisitorMap) {\n        result.errors = visitErrorsByType(errors, errorVisitorMap, errorInfo);\n    }\n    return result;\n}\nfunction visitErrorsByType(errors, errorVisitorMap, errorInfo) {\n    const segmentInfoMap = errorInfo.segmentInfoMap;\n    const unpathedErrors = errorInfo.unpathedErrors;\n    const unpathedErrorVisitor = errorVisitorMap['__unpathed'];\n    return errors.map(originalError => {\n        const pathSegmentsInfo = segmentInfoMap.get(originalError);\n        const newError = pathSegmentsInfo == null\n            ? originalError\n            : pathSegmentsInfo.reduceRight((acc, segmentInfo) => {\n                const typeName = segmentInfo.type.name;\n                const typeVisitorMap = errorVisitorMap[typeName];\n                if (typeVisitorMap == null) {\n                    return acc;\n                }\n                const errorVisitor = typeVisitorMap[segmentInfo.fieldName];\n                return errorVisitor == null ? acc : errorVisitor(acc, segmentInfo.pathIndex);\n            }, originalError);\n        if (unpathedErrorVisitor && unpathedErrors.has(originalError)) {\n            return unpathedErrorVisitor(newError);\n        }\n        return newError;\n    });\n}\nfunction getOperationRootType(schema, operationDef) {\n    switch (operationDef.operation) {\n        case 'query':\n            return schema.getQueryType();\n        case 'mutation':\n            return schema.getMutationType();\n        case 'subscription':\n            return schema.getSubscriptionType();\n    }\n}\nfunction visitRoot(root, operation, schema, fragments, variableValues, resultVisitorMap, errors, errorInfo) {\n    const operationRootType = getOperationRootType(schema, operation);\n    const { fields: collectedFields } = (0,_collectFields_js__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, operationRootType, operation.selectionSet);\n    return visitObjectValue(root, operationRootType, collectedFields, schema, fragments, variableValues, resultVisitorMap, 0, errors, errorInfo);\n}\nfunction visitObjectValue(object, type, fieldNodeMap, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    var _a;\n    const fieldMap = type.getFields();\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[type.name];\n    const enterObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__enter;\n    const newObject = enterObject != null ? enterObject(object) : object;\n    let sortedErrors;\n    let errorMap = null;\n    if (errors != null) {\n        sortedErrors = sortErrorsByPathSegment(errors, pathIndex);\n        errorMap = sortedErrors.errorMap;\n        for (const error of sortedErrors.unpathedErrors) {\n            errorInfo.unpathedErrors.add(error);\n        }\n    }\n    for (const [responseKey, subFieldNodes] of fieldNodeMap) {\n        const fieldName = subFieldNodes[0].name.value;\n        let fieldType = (_a = fieldMap[fieldName]) === null || _a === void 0 ? void 0 : _a.type;\n        if (fieldType == null) {\n            switch (fieldName) {\n                case '__typename':\n                    fieldType = graphql__WEBPACK_IMPORTED_MODULE_3__.TypeNameMetaFieldDef.type;\n                    break;\n                case '__schema':\n                    fieldType = graphql__WEBPACK_IMPORTED_MODULE_3__.SchemaMetaFieldDef.type;\n                    break;\n                case '__type':\n                    fieldType = graphql__WEBPACK_IMPORTED_MODULE_3__.TypeMetaFieldDef.type;\n                    break;\n            }\n        }\n        const newPathIndex = pathIndex + 1;\n        let fieldErrors;\n        if (errorMap) {\n            fieldErrors = errorMap[responseKey];\n            if (fieldErrors != null) {\n                delete errorMap[responseKey];\n            }\n            addPathSegmentInfo(type, fieldName, newPathIndex, fieldErrors, errorInfo);\n        }\n        const newValue = visitFieldValue(object[responseKey], fieldType, subFieldNodes, schema, fragments, variableValues, resultVisitorMap, newPathIndex, fieldErrors, errorInfo);\n        updateObject(newObject, responseKey, newValue, typeVisitorMap, fieldName);\n    }\n    const oldTypename = newObject.__typename;\n    if (oldTypename != null) {\n        updateObject(newObject, '__typename', oldTypename, typeVisitorMap, '__typename');\n    }\n    if (errorMap) {\n        for (const errorsKey in errorMap) {\n            const errors = errorMap[errorsKey];\n            for (const error of errors) {\n                errorInfo.unpathedErrors.add(error);\n            }\n        }\n    }\n    const leaveObject = typeVisitorMap === null || typeVisitorMap === void 0 ? void 0 : typeVisitorMap.__leave;\n    return leaveObject != null ? leaveObject(newObject) : newObject;\n}\nfunction updateObject(object, responseKey, newValue, typeVisitorMap, fieldName) {\n    if (typeVisitorMap == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const fieldVisitor = typeVisitorMap[fieldName];\n    if (fieldVisitor == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const visitedValue = fieldVisitor(newValue);\n    if (visitedValue === undefined) {\n        delete object[responseKey];\n        return;\n    }\n    object[responseKey] = visitedValue;\n}\nfunction visitListValue(list, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    return list.map(listMember => visitFieldValue(listMember, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex + 1, errors, errorInfo));\n}\nfunction visitFieldValue(value, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors = [], errorInfo) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNullableType)(returnType);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isListType)(nullableType)) {\n        return visitListValue(value, nullableType.ofType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(nullableType)) {\n        const finalType = schema.getType(value.__typename);\n        const { fields: collectedFields } = (0,_collectFields_js__WEBPACK_IMPORTED_MODULE_2__.collectSubFields)(schema, fragments, variableValues, finalType, fieldNodes);\n        return visitObjectValue(value, finalType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isObjectType)(nullableType)) {\n        const { fields: collectedFields } = (0,_collectFields_js__WEBPACK_IMPORTED_MODULE_2__.collectSubFields)(schema, fragments, variableValues, nullableType, fieldNodes);\n        return visitObjectValue(value, nullableType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    const typeVisitorMap = resultVisitorMap === null || resultVisitorMap === void 0 ? void 0 : resultVisitorMap[nullableType.name];\n    if (typeVisitorMap == null) {\n        return value;\n    }\n    const visitedValue = typeVisitorMap(value);\n    return visitedValue === undefined ? value : visitedValue;\n}\nfunction sortErrorsByPathSegment(errors, pathIndex) {\n    var _a;\n    const errorMap = Object.create(null);\n    const unpathedErrors = new Set();\n    for (const error of errors) {\n        const pathSegment = (_a = error.path) === null || _a === void 0 ? void 0 : _a[pathIndex];\n        if (pathSegment == null) {\n            unpathedErrors.add(error);\n            continue;\n        }\n        if (pathSegment in errorMap) {\n            errorMap[pathSegment].push(error);\n        }\n        else {\n            errorMap[pathSegment] = [error];\n        }\n    }\n    return {\n        errorMap,\n        unpathedErrors,\n    };\n}\nfunction addPathSegmentInfo(type, fieldName, pathIndex, errors = [], errorInfo) {\n    for (const error of errors) {\n        const segmentInfo = {\n            type,\n            fieldName,\n            pathIndex,\n        };\n        const pathSegmentsInfo = errorInfo.segmentInfoMap.get(error);\n        if (pathSegmentsInfo == null) {\n            errorInfo.segmentInfoMap.set(error, [segmentInfo]);\n        }\n        else {\n            pathSegmentsInfo.push(segmentInfo);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/utils/esm/visitResult.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js":
/*!****************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultCreateProxyingResolver: () => (/* binding */ defaultCreateProxyingResolver),\n/* harmony export */   generateProxyingResolvers: () => (/* binding */ generateProxyingResolvers)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/mergeFields.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/resolveExternalValue.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/delegateToSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rootTypes.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\");\n\n\nfunction generateProxyingResolvers(subschemaConfig) {\n    const targetSchema = subschemaConfig.schema;\n    const createProxyingResolver = subschemaConfig.createProxyingResolver ?? defaultCreateProxyingResolver;\n    const rootTypeMap = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.getRootTypeMap)(targetSchema);\n    const resolvers = {};\n    for (const [operation, rootType] of rootTypeMap.entries()) {\n        const typeName = rootType.name;\n        const fields = rootType.getFields();\n        resolvers[typeName] = {};\n        for (const fieldName in fields) {\n            const proxyingResolver = createProxyingResolver({\n                subschemaConfig,\n                operation,\n                fieldName,\n            });\n            const finalResolver = createPossiblyNestedProxyingResolver(subschemaConfig, proxyingResolver);\n            if (operation === 'subscription') {\n                resolvers[typeName][fieldName] = {\n                    subscribe: finalResolver,\n                    resolve: identical,\n                };\n            }\n            else {\n                resolvers[typeName][fieldName] = {\n                    resolve: finalResolver,\n                };\n            }\n        }\n    }\n    return resolvers;\n}\nfunction identical(value) {\n    return value;\n}\nfunction createPossiblyNestedProxyingResolver(subschemaConfig, proxyingResolver) {\n    return function possiblyNestedProxyingResolver(parent, args, context, info) {\n        if (parent != null) {\n            const responseKey = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.getResponseKeyFromInfo)(info);\n            // Check to see if the parent contains a proxied result\n            if ((0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.isExternalObject)(parent)) {\n                const unpathedErrors = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.getUnpathedErrors)(parent);\n                const subschema = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.getSubschema)(parent, responseKey);\n                // If there is a proxied result from this subschema, return it\n                // This can happen even for a root field when the root type ia\n                // also nested as a field within a different type.\n                if (subschemaConfig === subschema && parent[responseKey] !== undefined) {\n                    return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_3__.resolveExternalValue)(parent[responseKey], unpathedErrors, subschema, context, info);\n                }\n            }\n        }\n        return proxyingResolver(parent, args, context, info);\n    };\n}\nfunction defaultCreateProxyingResolver({ subschemaConfig, operation, }) {\n    return function proxyingResolver(_parent, _args, context, info) {\n        return (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_4__.delegateToSchema)({\n            schema: subschemaConfig,\n            operation,\n            context,\n            info,\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL2dlbmVyYXRlUHJveHlpbmdSZXNvbHZlcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFxSTtBQUN2RDtBQUN2RTtBQUNQO0FBQ0E7QUFDQSx3QkFBd0Isb0VBQWM7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsNEVBQXNCO0FBQ3REO0FBQ0EsZ0JBQWdCLHlFQUFnQjtBQUNoQyx1Q0FBdUMsMEVBQWlCO0FBQ3hELGtDQUFrQyxxRUFBWTtBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiw2RUFBb0I7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08seUNBQXlDLDZCQUE2QjtBQUM3RTtBQUNBLGVBQWUseUVBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL2VzbS9nZW5lcmF0ZVByb3h5aW5nUmVzb2x2ZXJzLmpzPzU5ZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVsZWdhdGVUb1NjaGVtYSwgZ2V0U3Vic2NoZW1hLCBnZXRVbnBhdGhlZEVycm9ycywgaXNFeHRlcm5hbE9iamVjdCwgcmVzb2x2ZUV4dGVybmFsVmFsdWUsIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvZGVsZWdhdGUnO1xuaW1wb3J0IHsgZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbywgZ2V0Um9vdFR5cGVNYXAgfSBmcm9tICdAZ3JhcGhxbC10b29scy91dGlscyc7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVQcm94eWluZ1Jlc29sdmVycyhzdWJzY2hlbWFDb25maWcpIHtcbiAgICBjb25zdCB0YXJnZXRTY2hlbWEgPSBzdWJzY2hlbWFDb25maWcuc2NoZW1hO1xuICAgIGNvbnN0IGNyZWF0ZVByb3h5aW5nUmVzb2x2ZXIgPSBzdWJzY2hlbWFDb25maWcuY3JlYXRlUHJveHlpbmdSZXNvbHZlciA/PyBkZWZhdWx0Q3JlYXRlUHJveHlpbmdSZXNvbHZlcjtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IGdldFJvb3RUeXBlTWFwKHRhcmdldFNjaGVtYSk7XG4gICAgY29uc3QgcmVzb2x2ZXJzID0ge307XG4gICAgZm9yIChjb25zdCBbb3BlcmF0aW9uLCByb290VHlwZV0gb2Ygcm9vdFR5cGVNYXAuZW50cmllcygpKSB7XG4gICAgICAgIGNvbnN0IHR5cGVOYW1lID0gcm9vdFR5cGUubmFtZTtcbiAgICAgICAgY29uc3QgZmllbGRzID0gcm9vdFR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgIHJlc29sdmVyc1t0eXBlTmFtZV0gPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gZmllbGRzKSB7XG4gICAgICAgICAgICBjb25zdCBwcm94eWluZ1Jlc29sdmVyID0gY3JlYXRlUHJveHlpbmdSZXNvbHZlcih7XG4gICAgICAgICAgICAgICAgc3Vic2NoZW1hQ29uZmlnLFxuICAgICAgICAgICAgICAgIG9wZXJhdGlvbixcbiAgICAgICAgICAgICAgICBmaWVsZE5hbWUsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IGZpbmFsUmVzb2x2ZXIgPSBjcmVhdGVQb3NzaWJseU5lc3RlZFByb3h5aW5nUmVzb2x2ZXIoc3Vic2NoZW1hQ29uZmlnLCBwcm94eWluZ1Jlc29sdmVyKTtcbiAgICAgICAgICAgIGlmIChvcGVyYXRpb24gPT09ICdzdWJzY3JpcHRpb24nKSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICBzdWJzY3JpYmU6IGZpbmFsUmVzb2x2ZXIsXG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmU6IGlkZW50aWNhbCxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZXJzW3R5cGVOYW1lXVtmaWVsZE5hbWVdID0ge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlOiBmaW5hbFJlc29sdmVyLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJlc29sdmVycztcbn1cbmZ1bmN0aW9uIGlkZW50aWNhbCh2YWx1ZSkge1xuICAgIHJldHVybiB2YWx1ZTtcbn1cbmZ1bmN0aW9uIGNyZWF0ZVBvc3NpYmx5TmVzdGVkUHJveHlpbmdSZXNvbHZlcihzdWJzY2hlbWFDb25maWcsIHByb3h5aW5nUmVzb2x2ZXIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gcG9zc2libHlOZXN0ZWRQcm94eWluZ1Jlc29sdmVyKHBhcmVudCwgYXJncywgY29udGV4dCwgaW5mbykge1xuICAgICAgICBpZiAocGFyZW50ICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlS2V5ID0gZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyhpbmZvKTtcbiAgICAgICAgICAgIC8vIENoZWNrIHRvIHNlZSBpZiB0aGUgcGFyZW50IGNvbnRhaW5zIGEgcHJveGllZCByZXN1bHRcbiAgICAgICAgICAgIGlmIChpc0V4dGVybmFsT2JqZWN0KHBhcmVudCkpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB1bnBhdGhlZEVycm9ycyA9IGdldFVucGF0aGVkRXJyb3JzKHBhcmVudCk7XG4gICAgICAgICAgICAgICAgY29uc3Qgc3Vic2NoZW1hID0gZ2V0U3Vic2NoZW1hKHBhcmVudCwgcmVzcG9uc2VLZXkpO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZXJlIGlzIGEgcHJveGllZCByZXN1bHQgZnJvbSB0aGlzIHN1YnNjaGVtYSwgcmV0dXJuIGl0XG4gICAgICAgICAgICAgICAgLy8gVGhpcyBjYW4gaGFwcGVuIGV2ZW4gZm9yIGEgcm9vdCBmaWVsZCB3aGVuIHRoZSByb290IHR5cGUgaWFcbiAgICAgICAgICAgICAgICAvLyBhbHNvIG5lc3RlZCBhcyBhIGZpZWxkIHdpdGhpbiBhIGRpZmZlcmVudCB0eXBlLlxuICAgICAgICAgICAgICAgIGlmIChzdWJzY2hlbWFDb25maWcgPT09IHN1YnNjaGVtYSAmJiBwYXJlbnRbcmVzcG9uc2VLZXldICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlc29sdmVFeHRlcm5hbFZhbHVlKHBhcmVudFtyZXNwb25zZUtleV0sIHVucGF0aGVkRXJyb3JzLCBzdWJzY2hlbWEsIGNvbnRleHQsIGluZm8pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcHJveHlpbmdSZXNvbHZlcihwYXJlbnQsIGFyZ3MsIGNvbnRleHQsIGluZm8pO1xuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gZGVmYXVsdENyZWF0ZVByb3h5aW5nUmVzb2x2ZXIoeyBzdWJzY2hlbWFDb25maWcsIG9wZXJhdGlvbiwgfSkge1xuICAgIHJldHVybiBmdW5jdGlvbiBwcm94eWluZ1Jlc29sdmVyKF9wYXJlbnQsIF9hcmdzLCBjb250ZXh0LCBpbmZvKSB7XG4gICAgICAgIHJldHVybiBkZWxlZ2F0ZVRvU2NoZW1hKHtcbiAgICAgICAgICAgIHNjaGVtYTogc3Vic2NoZW1hQ29uZmlnLFxuICAgICAgICAgICAgb3BlcmF0aW9uLFxuICAgICAgICAgICAgY29udGV4dCxcbiAgICAgICAgICAgIGluZm8sXG4gICAgICAgIH0pO1xuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/introspect.js":
/*!*************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/introspect.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   schemaFromExecutor: () => (/* binding */ schemaFromExecutor)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/buildClientSchema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getIntrospectionQuery.mjs\");\n/* harmony import */ var value_or_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! value-or-promise */ \"(ssr)/../node_modules/value-or-promise/build/module/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/cross-inspect/esm/index.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\");\n\n\n\nfunction getSchemaFromIntrospection(introspectionResult, options) {\n    if (introspectionResult?.data?.__schema) {\n        return (0,graphql__WEBPACK_IMPORTED_MODULE_1__.buildClientSchema)(introspectionResult.data, options);\n    }\n    if (introspectionResult?.errors) {\n        const graphqlErrors = introspectionResult.errors.map(error => (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createGraphQLError)(error.message, error));\n        if (introspectionResult.errors.length === 1) {\n            throw graphqlErrors[0];\n        }\n        else {\n            throw new AggregateError(graphqlErrors, 'Could not obtain introspection result');\n        }\n    }\n    throw (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_2__.createGraphQLError)(`Could not obtain introspection result, received the following as response; \\n ${(0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.inspect)(introspectionResult)}`);\n}\nfunction schemaFromExecutor(executor, context, options) {\n    const parsedIntrospectionQuery = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.parse)((0,graphql__WEBPACK_IMPORTED_MODULE_5__.getIntrospectionQuery)(options), options);\n    return new value_or_promise__WEBPACK_IMPORTED_MODULE_0__.ValueOrPromise(() => executor({\n        document: parsedIntrospectionQuery,\n        context,\n    }))\n        .then(introspection => {\n        if ((0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_6__.isAsyncIterable)(introspection)) {\n            const iterator = introspection[Symbol.asyncIterator]();\n            return iterator.next().then(({ value }) => value);\n        }\n        return introspection;\n    })\n        .then(introspection => getSchemaFromIntrospection(introspection, options))\n        .resolve();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL2ludHJvc3BlY3QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMkU7QUFDekI7QUFDbUM7QUFDckY7QUFDQTtBQUNBLGVBQWUsMERBQWlCO0FBQ2hDO0FBQ0E7QUFDQSxzRUFBc0Usd0VBQWtCO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSx3RUFBa0IsNkVBQTZFLEtBQUssNkRBQU8sc0JBQXNCO0FBQzNJO0FBQ087QUFDUCxxQ0FBcUMsOENBQUssQ0FBQyw4REFBcUI7QUFDaEUsZUFBZSw0REFBYztBQUM3QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsWUFBWSxxRUFBZTtBQUMzQjtBQUNBLDJDQUEyQyxPQUFPO0FBQ2xEO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9lc20vaW50cm9zcGVjdC5qcz8xMTkyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJ1aWxkQ2xpZW50U2NoZW1hLCBnZXRJbnRyb3NwZWN0aW9uUXVlcnksIHBhcnNlLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgVmFsdWVPclByb21pc2UgfSBmcm9tICd2YWx1ZS1vci1wcm9taXNlJztcbmltcG9ydCB7IGNyZWF0ZUdyYXBoUUxFcnJvciwgaW5zcGVjdCwgaXNBc3luY0l0ZXJhYmxlLCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmZ1bmN0aW9uIGdldFNjaGVtYUZyb21JbnRyb3NwZWN0aW9uKGludHJvc3BlY3Rpb25SZXN1bHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoaW50cm9zcGVjdGlvblJlc3VsdD8uZGF0YT8uX19zY2hlbWEpIHtcbiAgICAgICAgcmV0dXJuIGJ1aWxkQ2xpZW50U2NoZW1hKGludHJvc3BlY3Rpb25SZXN1bHQuZGF0YSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIGlmIChpbnRyb3NwZWN0aW9uUmVzdWx0Py5lcnJvcnMpIHtcbiAgICAgICAgY29uc3QgZ3JhcGhxbEVycm9ycyA9IGludHJvc3BlY3Rpb25SZXN1bHQuZXJyb3JzLm1hcChlcnJvciA9PiBjcmVhdGVHcmFwaFFMRXJyb3IoZXJyb3IubWVzc2FnZSwgZXJyb3IpKTtcbiAgICAgICAgaWYgKGludHJvc3BlY3Rpb25SZXN1bHQuZXJyb3JzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgICAgICAgdGhyb3cgZ3JhcGhxbEVycm9yc1swXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBBZ2dyZWdhdGVFcnJvcihncmFwaHFsRXJyb3JzLCAnQ291bGQgbm90IG9idGFpbiBpbnRyb3NwZWN0aW9uIHJlc3VsdCcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRocm93IGNyZWF0ZUdyYXBoUUxFcnJvcihgQ291bGQgbm90IG9idGFpbiBpbnRyb3NwZWN0aW9uIHJlc3VsdCwgcmVjZWl2ZWQgdGhlIGZvbGxvd2luZyBhcyByZXNwb25zZTsgXFxuICR7aW5zcGVjdChpbnRyb3NwZWN0aW9uUmVzdWx0KX1gKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzY2hlbWFGcm9tRXhlY3V0b3IoZXhlY3V0b3IsIGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBjb25zdCBwYXJzZWRJbnRyb3NwZWN0aW9uUXVlcnkgPSBwYXJzZShnZXRJbnRyb3NwZWN0aW9uUXVlcnkob3B0aW9ucyksIG9wdGlvbnMpO1xuICAgIHJldHVybiBuZXcgVmFsdWVPclByb21pc2UoKCkgPT4gZXhlY3V0b3Ioe1xuICAgICAgICBkb2N1bWVudDogcGFyc2VkSW50cm9zcGVjdGlvblF1ZXJ5LFxuICAgICAgICBjb250ZXh0LFxuICAgIH0pKVxuICAgICAgICAudGhlbihpbnRyb3NwZWN0aW9uID0+IHtcbiAgICAgICAgaWYgKGlzQXN5bmNJdGVyYWJsZShpbnRyb3NwZWN0aW9uKSkge1xuICAgICAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBpbnRyb3NwZWN0aW9uW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpO1xuICAgICAgICAgICAgcmV0dXJuIGl0ZXJhdG9yLm5leHQoKS50aGVuKCh7IHZhbHVlIH0pID0+IHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaW50cm9zcGVjdGlvbjtcbiAgICB9KVxuICAgICAgICAudGhlbihpbnRyb3NwZWN0aW9uID0+IGdldFNjaGVtYUZyb21JbnRyb3NwZWN0aW9uKGludHJvc3BlY3Rpb24sIG9wdGlvbnMpKVxuICAgICAgICAucmVzb2x2ZSgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/introspect.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/FilterTypes.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/transforms/FilterTypes.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FilterTypes)\n/* harmony export */ });\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n\nclass FilterTypes {\n    constructor(filter) {\n        this.filter = filter;\n    }\n    transformSchema(originalWrappingSchema, _subschemaConfig) {\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(originalWrappingSchema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.TYPE]: (type) => {\n                if (this.filter(type)) {\n                    return undefined;\n                }\n                return null;\n            },\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3RyYW5zZm9ybXMvRmlsdGVyVHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZEO0FBQzlDO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtEQUFTO0FBQ3hCLGFBQWEsNERBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL2VzbS90cmFuc2Zvcm1zL0ZpbHRlclR5cGVzLmpzPzVmNWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFwcGVyS2luZCwgbWFwU2NoZW1hIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRmlsdGVyVHlwZXMge1xuICAgIGNvbnN0cnVjdG9yKGZpbHRlcikge1xuICAgICAgICB0aGlzLmZpbHRlciA9IGZpbHRlcjtcbiAgICB9XG4gICAgdHJhbnNmb3JtU2NoZW1hKG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEsIF9zdWJzY2hlbWFDb25maWcpIHtcbiAgICAgICAgcmV0dXJuIG1hcFNjaGVtYShvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCB7XG4gICAgICAgICAgICBbTWFwcGVyS2luZC5UWVBFXTogKHR5cGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5maWx0ZXIodHlwZSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/FilterTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/RenameRootFields.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/transforms/RenameRootFields.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RenameRootFields)\n/* harmony export */ });\n/* harmony import */ var _TransformRootFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TransformRootFields.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformRootFields.js\");\n\nclass RenameRootFields {\n    constructor(renamer) {\n        this.transformer = new _TransformRootFields_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]((operation, fieldName, fieldConfig) => [renamer(operation, fieldName, fieldConfig), fieldConfig]);\n    }\n    transformSchema(originalWrappingSchema, subschemaConfig) {\n        return this.transformer.transformSchema(originalWrappingSchema, subschemaConfig);\n    }\n    transformRequest(originalRequest, delegationContext, transformationContext) {\n        return this.transformer.transformRequest(originalRequest, delegationContext, transformationContext);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3RyYW5zZm9ybXMvUmVuYW1lUm9vdEZpZWxkcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyRDtBQUM1QztBQUNmO0FBQ0EsK0JBQStCLCtEQUFtQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9lc20vdHJhbnNmb3Jtcy9SZW5hbWVSb290RmllbGRzLmpzP2JlNjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRyYW5zZm9ybVJvb3RGaWVsZHMgZnJvbSAnLi9UcmFuc2Zvcm1Sb290RmllbGRzLmpzJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlbmFtZVJvb3RGaWVsZHMge1xuICAgIGNvbnN0cnVjdG9yKHJlbmFtZXIpIHtcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1lciA9IG5ldyBUcmFuc2Zvcm1Sb290RmllbGRzKChvcGVyYXRpb24sIGZpZWxkTmFtZSwgZmllbGRDb25maWcpID0+IFtyZW5hbWVyKG9wZXJhdGlvbiwgZmllbGROYW1lLCBmaWVsZENvbmZpZyksIGZpZWxkQ29uZmlnXSk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVNjaGVtYShvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCBzdWJzY2hlbWFDb25maWcpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNmb3JtZXIudHJhbnNmb3JtU2NoZW1hKG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEsIHN1YnNjaGVtYUNvbmZpZyk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRyYW5zZm9ybWVyLnRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/RenameRootFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/RenameTypes.js":
/*!*************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/transforms/RenameTypes.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RenameTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/renameType.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/visitResult.js\");\n\n\nclass RenameTypes {\n    constructor(renamer, options) {\n        this.renamer = renamer;\n        this.map = Object.create(null);\n        this.reverseMap = Object.create(null);\n        const { renameBuiltins = false, renameScalars = true } = options != null ? options : {};\n        this.renameBuiltins = renameBuiltins;\n        this.renameScalars = renameScalars;\n    }\n    transformSchema(originalWrappingSchema, _subschemaConfig) {\n        const typeNames = new Set(Object.keys(originalWrappingSchema.getTypeMap()));\n        return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(originalWrappingSchema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.TYPE]: (type) => {\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type) && !this.renameBuiltins) {\n                    return undefined;\n                }\n                if ((0,graphql__WEBPACK_IMPORTED_MODULE_3__.isScalarType)(type) && !this.renameScalars) {\n                    return undefined;\n                }\n                const oldName = type.name;\n                const newName = this.renamer(oldName);\n                if (newName !== undefined && newName !== oldName) {\n                    if (typeNames.has(newName)) {\n                        console.warn(`New type name ${newName} for ${oldName} already exists in the schema. Skip renaming.`);\n                        return;\n                    }\n                    this.map[oldName] = newName;\n                    this.reverseMap[newName] = oldName;\n                    typeNames.delete(oldName);\n                    typeNames.add(newName);\n                    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.renameType)(type, newName);\n                }\n            },\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.ROOT_OBJECT]() {\n                return undefined;\n            },\n        });\n    }\n    transformRequest(originalRequest, _delegationContext, _transformationContext) {\n        const document = (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(originalRequest.document, {\n            [graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.NAMED_TYPE]: (node) => {\n                const name = node.name.value;\n                if (name in this.reverseMap) {\n                    return {\n                        ...node,\n                        name: {\n                            kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.NAME,\n                            value: this.reverseMap[name],\n                        },\n                    };\n                }\n            },\n        });\n        return {\n            ...originalRequest,\n            document,\n        };\n    }\n    transformResult(originalResult, _delegationContext, _transformationContext) {\n        return {\n            ...originalResult,\n            data: (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_7__.visitData)(originalResult.data, object => {\n                const typeName = object?.__typename;\n                if (typeName != null && typeName in this.map) {\n                    object.__typename = this.map[typeName];\n                }\n                return object;\n            }),\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3RyYW5zZm9ybXMvUmVuYW1lVHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTRFO0FBQ1M7QUFDdEU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwrQ0FBK0M7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0RBQVM7QUFDeEIsYUFBYSw0REFBVTtBQUN2QixvQkFBb0IsOERBQXFCO0FBQ3pDO0FBQ0E7QUFDQSxvQkFBb0IscURBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELFNBQVMsTUFBTSxTQUFTO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQixnRUFBVTtBQUNyQztBQUNBLGFBQWE7QUFDYixhQUFhLDREQUFVO0FBQ3ZCO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0EseUJBQXlCLDhDQUFLO0FBQzlCLGFBQWEseUNBQUk7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyx5Q0FBSTtBQUN0QztBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLCtEQUFTO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9lc20vdHJhbnNmb3Jtcy9SZW5hbWVUeXBlcy5qcz8yZWIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzU2NhbGFyVHlwZSwgaXNTcGVjaWZpZWRTY2FsYXJUeXBlLCBLaW5kLCB2aXNpdCwgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IE1hcHBlcktpbmQsIG1hcFNjaGVtYSwgcmVuYW1lVHlwZSwgdmlzaXREYXRhLCB9IGZyb20gJ0BncmFwaHFsLXRvb2xzL3V0aWxzJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlbmFtZVR5cGVzIHtcbiAgICBjb25zdHJ1Y3RvcihyZW5hbWVyLCBvcHRpb25zKSB7XG4gICAgICAgIHRoaXMucmVuYW1lciA9IHJlbmFtZXI7XG4gICAgICAgIHRoaXMubWFwID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgdGhpcy5yZXZlcnNlTWFwID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgICAgICAgY29uc3QgeyByZW5hbWVCdWlsdGlucyA9IGZhbHNlLCByZW5hbWVTY2FsYXJzID0gdHJ1ZSB9ID0gb3B0aW9ucyAhPSBudWxsID8gb3B0aW9ucyA6IHt9O1xuICAgICAgICB0aGlzLnJlbmFtZUJ1aWx0aW5zID0gcmVuYW1lQnVpbHRpbnM7XG4gICAgICAgIHRoaXMucmVuYW1lU2NhbGFycyA9IHJlbmFtZVNjYWxhcnM7XG4gICAgfVxuICAgIHRyYW5zZm9ybVNjaGVtYShvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCBfc3Vic2NoZW1hQ29uZmlnKSB7XG4gICAgICAgIGNvbnN0IHR5cGVOYW1lcyA9IG5ldyBTZXQoT2JqZWN0LmtleXMob3JpZ2luYWxXcmFwcGluZ1NjaGVtYS5nZXRUeXBlTWFwKCkpKTtcbiAgICAgICAgcmV0dXJuIG1hcFNjaGVtYShvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCB7XG4gICAgICAgICAgICBbTWFwcGVyS2luZC5UWVBFXTogKHR5cGUpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoaXNTcGVjaWZpZWRTY2FsYXJUeXBlKHR5cGUpICYmICF0aGlzLnJlbmFtZUJ1aWx0aW5zKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChpc1NjYWxhclR5cGUodHlwZSkgJiYgIXRoaXMucmVuYW1lU2NhbGFycykge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBvbGROYW1lID0gdHlwZS5uYW1lO1xuICAgICAgICAgICAgICAgIGNvbnN0IG5ld05hbWUgPSB0aGlzLnJlbmFtZXIob2xkTmFtZSk7XG4gICAgICAgICAgICAgICAgaWYgKG5ld05hbWUgIT09IHVuZGVmaW5lZCAmJiBuZXdOYW1lICE9PSBvbGROYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0eXBlTmFtZXMuaGFzKG5ld05hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oYE5ldyB0eXBlIG5hbWUgJHtuZXdOYW1lfSBmb3IgJHtvbGROYW1lfSBhbHJlYWR5IGV4aXN0cyBpbiB0aGUgc2NoZW1hLiBTa2lwIHJlbmFtaW5nLmApO1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHRoaXMubWFwW29sZE5hbWVdID0gbmV3TmFtZTtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yZXZlcnNlTWFwW25ld05hbWVdID0gb2xkTmFtZTtcbiAgICAgICAgICAgICAgICAgICAgdHlwZU5hbWVzLmRlbGV0ZShvbGROYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgdHlwZU5hbWVzLmFkZChuZXdOYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlbmFtZVR5cGUodHlwZSwgbmV3TmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFtNYXBwZXJLaW5kLlJPT1RfT0JKRUNUXSgpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBfZGVsZWdhdGlvbkNvbnRleHQsIF90cmFuc2Zvcm1hdGlvbkNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgZG9jdW1lbnQgPSB2aXNpdChvcmlnaW5hbFJlcXVlc3QuZG9jdW1lbnQsIHtcbiAgICAgICAgICAgIFtLaW5kLk5BTUVEX1RZUEVdOiAobm9kZSkgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5hbWUgPSBub2RlLm5hbWUudmFsdWU7XG4gICAgICAgICAgICAgICAgaWYgKG5hbWUgaW4gdGhpcy5yZXZlcnNlTWFwKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuTkFNRSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogdGhpcy5yZXZlcnNlTWFwW25hbWVdLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLm9yaWdpbmFsUmVxdWVzdCxcbiAgICAgICAgICAgIGRvY3VtZW50LFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0cmFuc2Zvcm1SZXN1bHQob3JpZ2luYWxSZXN1bHQsIF9kZWxlZ2F0aW9uQ29udGV4dCwgX3RyYW5zZm9ybWF0aW9uQ29udGV4dCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgLi4ub3JpZ2luYWxSZXN1bHQsXG4gICAgICAgICAgICBkYXRhOiB2aXNpdERhdGEob3JpZ2luYWxSZXN1bHQuZGF0YSwgb2JqZWN0ID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB0eXBlTmFtZSA9IG9iamVjdD8uX190eXBlbmFtZTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZU5hbWUgIT0gbnVsbCAmJiB0eXBlTmFtZSBpbiB0aGlzLm1hcCkge1xuICAgICAgICAgICAgICAgICAgICBvYmplY3QuX190eXBlbmFtZSA9IHRoaXMubWFwW3R5cGVOYW1lXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIG9iamVjdDtcbiAgICAgICAgICAgIH0pLFxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/RenameTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransformCompositeFields)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/TypeInfo.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/visitResult.js\");\n\n\nclass TransformCompositeFields {\n    constructor(fieldTransformer, fieldNodeTransformer, dataTransformer, errorsTransformer) {\n        this.fieldTransformer = fieldTransformer;\n        this.fieldNodeTransformer = fieldNodeTransformer;\n        this.dataTransformer = dataTransformer;\n        this.errorsTransformer = errorsTransformer;\n        this.mapping = {};\n    }\n    _getTypeInfo() {\n        const typeInfo = this.typeInfo;\n        if (typeInfo === undefined) {\n            throw new Error(`The TransformCompositeFields transform's  \"transformRequest\" and \"transformResult\" methods cannot be used without first calling \"transformSchema\".`);\n        }\n        return typeInfo;\n    }\n    transformSchema(originalWrappingSchema, _subschemaConfig) {\n        this.transformedSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.mapSchema)(originalWrappingSchema, {\n            [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_1__.MapperKind.COMPOSITE_FIELD]: (fieldConfig, fieldName, typeName) => {\n                const transformedField = this.fieldTransformer(typeName, fieldName, fieldConfig);\n                if (Array.isArray(transformedField)) {\n                    const newFieldName = transformedField[0];\n                    if (newFieldName !== fieldName) {\n                        if (!(typeName in this.mapping)) {\n                            this.mapping[typeName] = {};\n                        }\n                        this.mapping[typeName][newFieldName] = fieldName;\n                    }\n                }\n                return transformedField;\n            },\n        });\n        this.typeInfo = new graphql__WEBPACK_IMPORTED_MODULE_2__.TypeInfo(this.transformedSchema);\n        this.subscriptionTypeName = originalWrappingSchema.getSubscriptionType()?.name;\n        return this.transformedSchema;\n    }\n    transformRequest(originalRequest, _delegationContext, transformationContext) {\n        const document = originalRequest.document;\n        return {\n            ...originalRequest,\n            document: this.transformDocument(document, transformationContext),\n        };\n    }\n    transformResult(result, _delegationContext, transformationContext) {\n        const dataTransformer = this.dataTransformer;\n        if (dataTransformer != null) {\n            result.data = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.visitData)(result.data, value => dataTransformer(value, transformationContext));\n        }\n        if (this.errorsTransformer != null && Array.isArray(result.errors)) {\n            result.errors = this.errorsTransformer(result.errors, transformationContext);\n        }\n        return result;\n    }\n    transformDocument(document, transformationContext) {\n        const fragments = Object.create(null);\n        for (const def of document.definitions) {\n            if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FRAGMENT_DEFINITION) {\n                fragments[def.name.value] = def;\n            }\n        }\n        return (0,graphql__WEBPACK_IMPORTED_MODULE_5__.visit)(document, (0,graphql__WEBPACK_IMPORTED_MODULE_2__.visitWithTypeInfo)(this._getTypeInfo(), {\n            [graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.SELECTION_SET]: {\n                leave: node => this.transformSelectionSet(node, this._getTypeInfo(), fragments, transformationContext),\n            },\n        }));\n    }\n    transformSelectionSet(node, typeInfo, fragments, transformationContext) {\n        const parentType = typeInfo.getParentType();\n        if (parentType == null) {\n            return undefined;\n        }\n        const parentTypeName = parentType.name;\n        let newSelections = [];\n        let isTypenameSelected = false;\n        for (const selection of node.selections) {\n            if (selection.kind !== graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD) {\n                newSelections.push(selection);\n                continue;\n            }\n            // The `__typename` selection should not be aliased\n            // to be accessible with this name\n            if (selection.name.value === '__typename' &&\n                (!selection.alias || selection.alias.value === '__typename')) {\n                isTypenameSelected = true;\n            }\n            const newName = selection.name.value;\n            let transformedSelection;\n            if (this.fieldNodeTransformer == null) {\n                transformedSelection = selection;\n            }\n            else {\n                transformedSelection = this.fieldNodeTransformer(parentTypeName, newName, selection, fragments, transformationContext);\n                transformedSelection =\n                    transformedSelection === undefined ? selection : transformedSelection;\n            }\n            if (transformedSelection == null) {\n                continue;\n            }\n            else if (Array.isArray(transformedSelection)) {\n                newSelections = newSelections.concat(transformedSelection);\n                continue;\n            }\n            else if (transformedSelection.kind !== graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD) {\n                newSelections.push(transformedSelection);\n                continue;\n            }\n            const typeMapping = this.mapping[parentTypeName];\n            if (typeMapping == null) {\n                newSelections.push(transformedSelection);\n                continue;\n            }\n            const oldName = this.mapping[parentTypeName][newName];\n            if (oldName == null) {\n                newSelections.push(transformedSelection);\n                continue;\n            }\n            newSelections.push({\n                ...transformedSelection,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: oldName,\n                },\n                alias: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: transformedSelection.alias?.value ?? newName,\n                },\n            });\n        }\n        // See https://github.com/ardatan/graphql-tools/issues/2282\n        if (!isTypenameSelected &&\n            (this.dataTransformer != null || this.errorsTransformer != null) &&\n            (this.subscriptionTypeName == null || parentTypeName !== this.subscriptionTypeName)) {\n            newSelections.push({\n                kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.FIELD,\n                name: {\n                    kind: graphql__WEBPACK_IMPORTED_MODULE_4__.Kind.NAME,\n                    value: '__typename',\n                },\n            });\n        }\n        return {\n            ...node,\n            selections: newSelections,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformObjectFields.js":
/*!***********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/transforms/TransformObjectFields.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransformObjectFields)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _TransformCompositeFields_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TransformCompositeFields.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformCompositeFields.js\");\n\n\nclass TransformObjectFields {\n    constructor(objectFieldTransformer, fieldNodeTransformer) {\n        this.objectFieldTransformer = objectFieldTransformer;\n        this.fieldNodeTransformer = fieldNodeTransformer;\n    }\n    _getTransformer() {\n        const transformer = this.transformer;\n        if (transformer === undefined) {\n            throw new Error(`The TransformObjectFields transform's  \"transformRequest\" and \"transformResult\" methods cannot be used without first calling \"transformSchema\".`);\n        }\n        return transformer;\n    }\n    transformSchema(originalWrappingSchema, subschemaConfig) {\n        const compositeToObjectFieldTransformer = (typeName, fieldName, fieldConfig) => {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(originalWrappingSchema.getType(typeName))) {\n                return this.objectFieldTransformer(typeName, fieldName, fieldConfig);\n            }\n            return undefined;\n        };\n        this.transformer = new _TransformCompositeFields_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](compositeToObjectFieldTransformer, this.fieldNodeTransformer);\n        return this.transformer.transformSchema(originalWrappingSchema, subschemaConfig);\n    }\n    transformRequest(originalRequest, delegationContext, transformationContext) {\n        return this._getTransformer().transformRequest(originalRequest, delegationContext, transformationContext);\n    }\n    transformResult(originalResult, delegationContext, transformationContext) {\n        return this._getTransformer().transformResult(originalResult, delegationContext, transformationContext);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3RyYW5zZm9ybXMvVHJhbnNmb3JtT2JqZWN0RmllbGRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF1QztBQUM4QjtBQUN0RDtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHFEQUFZO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLG9FQUF3QjtBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL2VzbS90cmFuc2Zvcm1zL1RyYW5zZm9ybU9iamVjdEZpZWxkcy5qcz9lMDRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzT2JqZWN0VHlwZSB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IFRyYW5zZm9ybUNvbXBvc2l0ZUZpZWxkcyBmcm9tICcuL1RyYW5zZm9ybUNvbXBvc2l0ZUZpZWxkcy5qcyc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFuc2Zvcm1PYmplY3RGaWVsZHMge1xuICAgIGNvbnN0cnVjdG9yKG9iamVjdEZpZWxkVHJhbnNmb3JtZXIsIGZpZWxkTm9kZVRyYW5zZm9ybWVyKSB7XG4gICAgICAgIHRoaXMub2JqZWN0RmllbGRUcmFuc2Zvcm1lciA9IG9iamVjdEZpZWxkVHJhbnNmb3JtZXI7XG4gICAgICAgIHRoaXMuZmllbGROb2RlVHJhbnNmb3JtZXIgPSBmaWVsZE5vZGVUcmFuc2Zvcm1lcjtcbiAgICB9XG4gICAgX2dldFRyYW5zZm9ybWVyKCkge1xuICAgICAgICBjb25zdCB0cmFuc2Zvcm1lciA9IHRoaXMudHJhbnNmb3JtZXI7XG4gICAgICAgIGlmICh0cmFuc2Zvcm1lciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoZSBUcmFuc2Zvcm1PYmplY3RGaWVsZHMgdHJhbnNmb3JtJ3MgIFwidHJhbnNmb3JtUmVxdWVzdFwiIGFuZCBcInRyYW5zZm9ybVJlc3VsdFwiIG1ldGhvZHMgY2Fubm90IGJlIHVzZWQgd2l0aG91dCBmaXJzdCBjYWxsaW5nIFwidHJhbnNmb3JtU2NoZW1hXCIuYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRyYW5zZm9ybWVyO1xuICAgIH1cbiAgICB0cmFuc2Zvcm1TY2hlbWEob3JpZ2luYWxXcmFwcGluZ1NjaGVtYSwgc3Vic2NoZW1hQ29uZmlnKSB7XG4gICAgICAgIGNvbnN0IGNvbXBvc2l0ZVRvT2JqZWN0RmllbGRUcmFuc2Zvcm1lciA9ICh0eXBlTmFtZSwgZmllbGROYW1lLCBmaWVsZENvbmZpZykgPT4ge1xuICAgICAgICAgICAgaWYgKGlzT2JqZWN0VHlwZShvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLmdldFR5cGUodHlwZU5hbWUpKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm9iamVjdEZpZWxkVHJhbnNmb3JtZXIodHlwZU5hbWUsIGZpZWxkTmFtZSwgZmllbGRDb25maWcpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy50cmFuc2Zvcm1lciA9IG5ldyBUcmFuc2Zvcm1Db21wb3NpdGVGaWVsZHMoY29tcG9zaXRlVG9PYmplY3RGaWVsZFRyYW5zZm9ybWVyLCB0aGlzLmZpZWxkTm9kZVRyYW5zZm9ybWVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNmb3JtZXIudHJhbnNmb3JtU2NoZW1hKG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEsIHN1YnNjaGVtYUNvbmZpZyk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRUcmFuc2Zvcm1lcigpLnRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KTtcbiAgICB9XG4gICAgdHJhbnNmb3JtUmVzdWx0KG9yaWdpbmFsUmVzdWx0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRUcmFuc2Zvcm1lcigpLnRyYW5zZm9ybVJlc3VsdChvcmlnaW5hbFJlc3VsdCwgZGVsZWdhdGlvbkNvbnRleHQsIHRyYW5zZm9ybWF0aW9uQ29udGV4dCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformObjectFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformRootFields.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/transforms/TransformRootFields.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TransformRootFields)\n/* harmony export */ });\n/* harmony import */ var _TransformObjectFields_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TransformObjectFields.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformObjectFields.js\");\n\nclass TransformRootFields {\n    constructor(rootFieldTransformer, fieldNodeTransformer) {\n        this.rootFieldTransformer = rootFieldTransformer;\n        this.fieldNodeTransformer = fieldNodeTransformer;\n    }\n    _getTransformer() {\n        const transformer = this.transformer;\n        if (transformer === undefined) {\n            throw new Error(`The TransformRootFields transform's  \"transformRequest\" and \"transformResult\" methods cannot be used without first calling \"transformSchema\".`);\n        }\n        return transformer;\n    }\n    transformSchema(originalWrappingSchema, subschemaConfig) {\n        const rootToObjectFieldTransformer = (typeName, fieldName, fieldConfig) => {\n            if (typeName === originalWrappingSchema.getQueryType()?.name) {\n                return this.rootFieldTransformer('Query', fieldName, fieldConfig);\n            }\n            if (typeName === originalWrappingSchema.getMutationType()?.name) {\n                return this.rootFieldTransformer('Mutation', fieldName, fieldConfig);\n            }\n            if (typeName === originalWrappingSchema.getSubscriptionType()?.name) {\n                return this.rootFieldTransformer('Subscription', fieldName, fieldConfig);\n            }\n            return undefined;\n        };\n        this.transformer = new _TransformObjectFields_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](rootToObjectFieldTransformer, this.fieldNodeTransformer);\n        return this.transformer.transformSchema(originalWrappingSchema, subschemaConfig);\n    }\n    transformRequest(originalRequest, delegationContext, transformationContext) {\n        return this._getTransformer().transformRequest(originalRequest, delegationContext, transformationContext);\n    }\n    transformResult(originalResult, delegationContext, transformationContext) {\n        return this._getTransformer().transformResult(originalResult, delegationContext, transformationContext);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3RyYW5zZm9ybXMvVHJhbnNmb3JtUm9vdEZpZWxkcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUErRDtBQUNoRDtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixpRUFBcUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9lc20vdHJhbnNmb3Jtcy9UcmFuc2Zvcm1Sb290RmllbGRzLmpzP2VhMDgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFRyYW5zZm9ybU9iamVjdEZpZWxkcyBmcm9tICcuL1RyYW5zZm9ybU9iamVjdEZpZWxkcy5qcyc7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUcmFuc2Zvcm1Sb290RmllbGRzIHtcbiAgICBjb25zdHJ1Y3Rvcihyb290RmllbGRUcmFuc2Zvcm1lciwgZmllbGROb2RlVHJhbnNmb3JtZXIpIHtcbiAgICAgICAgdGhpcy5yb290RmllbGRUcmFuc2Zvcm1lciA9IHJvb3RGaWVsZFRyYW5zZm9ybWVyO1xuICAgICAgICB0aGlzLmZpZWxkTm9kZVRyYW5zZm9ybWVyID0gZmllbGROb2RlVHJhbnNmb3JtZXI7XG4gICAgfVxuICAgIF9nZXRUcmFuc2Zvcm1lcigpIHtcbiAgICAgICAgY29uc3QgdHJhbnNmb3JtZXIgPSB0aGlzLnRyYW5zZm9ybWVyO1xuICAgICAgICBpZiAodHJhbnNmb3JtZXIgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBUaGUgVHJhbnNmb3JtUm9vdEZpZWxkcyB0cmFuc2Zvcm0ncyAgXCJ0cmFuc2Zvcm1SZXF1ZXN0XCIgYW5kIFwidHJhbnNmb3JtUmVzdWx0XCIgbWV0aG9kcyBjYW5ub3QgYmUgdXNlZCB3aXRob3V0IGZpcnN0IGNhbGxpbmcgXCJ0cmFuc2Zvcm1TY2hlbWFcIi5gKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHJhbnNmb3JtZXI7XG4gICAgfVxuICAgIHRyYW5zZm9ybVNjaGVtYShvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLCBzdWJzY2hlbWFDb25maWcpIHtcbiAgICAgICAgY29uc3Qgcm9vdFRvT2JqZWN0RmllbGRUcmFuc2Zvcm1lciA9ICh0eXBlTmFtZSwgZmllbGROYW1lLCBmaWVsZENvbmZpZykgPT4ge1xuICAgICAgICAgICAgaWYgKHR5cGVOYW1lID09PSBvcmlnaW5hbFdyYXBwaW5nU2NoZW1hLmdldFF1ZXJ5VHlwZSgpPy5uYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucm9vdEZpZWxkVHJhbnNmb3JtZXIoJ1F1ZXJ5JywgZmllbGROYW1lLCBmaWVsZENvbmZpZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAodHlwZU5hbWUgPT09IG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEuZ2V0TXV0YXRpb25UeXBlKCk/Lm5hbWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yb290RmllbGRUcmFuc2Zvcm1lcignTXV0YXRpb24nLCBmaWVsZE5hbWUsIGZpZWxkQ29uZmlnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmICh0eXBlTmFtZSA9PT0gb3JpZ2luYWxXcmFwcGluZ1NjaGVtYS5nZXRTdWJzY3JpcHRpb25UeXBlKCk/Lm5hbWUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yb290RmllbGRUcmFuc2Zvcm1lcignU3Vic2NyaXB0aW9uJywgZmllbGROYW1lLCBmaWVsZENvbmZpZyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgICAgICB9O1xuICAgICAgICB0aGlzLnRyYW5zZm9ybWVyID0gbmV3IFRyYW5zZm9ybU9iamVjdEZpZWxkcyhyb290VG9PYmplY3RGaWVsZFRyYW5zZm9ybWVyLCB0aGlzLmZpZWxkTm9kZVRyYW5zZm9ybWVyKTtcbiAgICAgICAgcmV0dXJuIHRoaXMudHJhbnNmb3JtZXIudHJhbnNmb3JtU2NoZW1hKG9yaWdpbmFsV3JhcHBpbmdTY2hlbWEsIHN1YnNjaGVtYUNvbmZpZyk7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRUcmFuc2Zvcm1lcigpLnRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KTtcbiAgICB9XG4gICAgdHJhbnNmb3JtUmVzdWx0KG9yaWdpbmFsUmVzdWx0LCBkZWxlZ2F0aW9uQ29udGV4dCwgdHJhbnNmb3JtYXRpb25Db250ZXh0KSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9nZXRUcmFuc2Zvcm1lcigpLnRyYW5zZm9ybVJlc3VsdChvcmlnaW5hbFJlc3VsdCwgZGVsZWdhdGlvbkNvbnRleHQsIHRyYW5zZm9ybWF0aW9uQ29udGV4dCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/TransformRootFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/WrapQuery.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/transforms/WrapQuery.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WrapQuery)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/visitor.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nclass WrapQuery {\n    constructor(path, wrapper, extractor) {\n        this.path = path;\n        this.wrapper = wrapper;\n        this.extractor = extractor;\n    }\n    transformRequest(originalRequest, _delegationContext, _transformationContext) {\n        const fieldPath = [];\n        const ourPath = JSON.stringify(this.path);\n        const document = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.visit)(originalRequest.document, {\n            [graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.FIELD]: {\n                enter: (node) => {\n                    fieldPath.push(node.name.value);\n                    if (node.selectionSet != null && ourPath === JSON.stringify(fieldPath)) {\n                        const wrapResult = this.wrapper(node.selectionSet);\n                        // Selection can be either a single selection or a selection set. If it's just one selection,\n                        // let's wrap it in a selection set. Otherwise, keep it as is.\n                        const selectionSet = wrapResult != null && wrapResult.kind === graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET\n                            ? wrapResult\n                            : {\n                                kind: graphql__WEBPACK_IMPORTED_MODULE_1__.Kind.SELECTION_SET,\n                                selections: [wrapResult],\n                            };\n                        return {\n                            ...node,\n                            selectionSet,\n                        };\n                    }\n                },\n                leave: () => {\n                    fieldPath.pop();\n                },\n            },\n        });\n        return {\n            ...originalRequest,\n            document,\n        };\n    }\n    transformResult(originalResult, _delegationContext, _transformationContext) {\n        const rootData = originalResult.data;\n        if (rootData != null) {\n            let data = rootData;\n            const path = [...this.path];\n            while (path.length > 1) {\n                const next = path.shift();\n                if (data[next]) {\n                    data = data[next];\n                }\n            }\n            data[path[0]] = this.extractor(data[path[0]]);\n        }\n        return {\n            data: rootData,\n            errors: originalResult.errors,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3RyYW5zZm9ybXMvV3JhcFF1ZXJ5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUN2QjtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5QkFBeUIsOENBQUs7QUFDOUIsYUFBYSx5Q0FBSTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1RkFBdUYseUNBQUk7QUFDM0Y7QUFDQTtBQUNBLHNDQUFzQyx5Q0FBSTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9lc20vdHJhbnNmb3Jtcy9XcmFwUXVlcnkuanM/MzQyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBLaW5kLCB2aXNpdCB9IGZyb20gJ2dyYXBocWwnO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV3JhcFF1ZXJ5IHtcbiAgICBjb25zdHJ1Y3RvcihwYXRoLCB3cmFwcGVyLCBleHRyYWN0b3IpIHtcbiAgICAgICAgdGhpcy5wYXRoID0gcGF0aDtcbiAgICAgICAgdGhpcy53cmFwcGVyID0gd3JhcHBlcjtcbiAgICAgICAgdGhpcy5leHRyYWN0b3IgPSBleHRyYWN0b3I7XG4gICAgfVxuICAgIHRyYW5zZm9ybVJlcXVlc3Qob3JpZ2luYWxSZXF1ZXN0LCBfZGVsZWdhdGlvbkNvbnRleHQsIF90cmFuc2Zvcm1hdGlvbkNvbnRleHQpIHtcbiAgICAgICAgY29uc3QgZmllbGRQYXRoID0gW107XG4gICAgICAgIGNvbnN0IG91clBhdGggPSBKU09OLnN0cmluZ2lmeSh0aGlzLnBhdGgpO1xuICAgICAgICBjb25zdCBkb2N1bWVudCA9IHZpc2l0KG9yaWdpbmFsUmVxdWVzdC5kb2N1bWVudCwge1xuICAgICAgICAgICAgW0tpbmQuRklFTERdOiB7XG4gICAgICAgICAgICAgICAgZW50ZXI6IChub2RlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkUGF0aC5wdXNoKG5vZGUubmFtZS52YWx1ZSk7XG4gICAgICAgICAgICAgICAgICAgIGlmIChub2RlLnNlbGVjdGlvblNldCAhPSBudWxsICYmIG91clBhdGggPT09IEpTT04uc3RyaW5naWZ5KGZpZWxkUGF0aCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHdyYXBSZXN1bHQgPSB0aGlzLndyYXBwZXIobm9kZS5zZWxlY3Rpb25TZXQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gU2VsZWN0aW9uIGNhbiBiZSBlaXRoZXIgYSBzaW5nbGUgc2VsZWN0aW9uIG9yIGEgc2VsZWN0aW9uIHNldC4gSWYgaXQncyBqdXN0IG9uZSBzZWxlY3Rpb24sXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBsZXQncyB3cmFwIGl0IGluIGEgc2VsZWN0aW9uIHNldC4gT3RoZXJ3aXNlLCBrZWVwIGl0IGFzIGlzLlxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2VsZWN0aW9uU2V0ID0gd3JhcFJlc3VsdCAhPSBudWxsICYmIHdyYXBSZXN1bHQua2luZCA9PT0gS2luZC5TRUxFQ1RJT05fU0VUXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPyB3cmFwUmVzdWx0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuU0VMRUNUSU9OX1NFVCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uczogW3dyYXBSZXN1bHRdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLm5vZGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0aW9uU2V0LFxuICAgICAgICAgICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgbGVhdmU6ICgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRQYXRoLnBvcCgpO1xuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIC4uLm9yaWdpbmFsUmVxdWVzdCxcbiAgICAgICAgICAgIGRvY3VtZW50LFxuICAgICAgICB9O1xuICAgIH1cbiAgICB0cmFuc2Zvcm1SZXN1bHQob3JpZ2luYWxSZXN1bHQsIF9kZWxlZ2F0aW9uQ29udGV4dCwgX3RyYW5zZm9ybWF0aW9uQ29udGV4dCkge1xuICAgICAgICBjb25zdCByb290RGF0YSA9IG9yaWdpbmFsUmVzdWx0LmRhdGE7XG4gICAgICAgIGlmIChyb290RGF0YSAhPSBudWxsKSB7XG4gICAgICAgICAgICBsZXQgZGF0YSA9IHJvb3REYXRhO1xuICAgICAgICAgICAgY29uc3QgcGF0aCA9IFsuLi50aGlzLnBhdGhdO1xuICAgICAgICAgICAgd2hpbGUgKHBhdGgubGVuZ3RoID4gMSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG5leHQgPSBwYXRoLnNoaWZ0KCk7XG4gICAgICAgICAgICAgICAgaWYgKGRhdGFbbmV4dF0pIHtcbiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IGRhdGFbbmV4dF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZGF0YVtwYXRoWzBdXSA9IHRoaXMuZXh0cmFjdG9yKGRhdGFbcGF0aFswXV0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBkYXRhOiByb290RGF0YSxcbiAgICAgICAgICAgIGVycm9yczogb3JpZ2luYWxSZXN1bHQuZXJyb3JzLFxuICAgICAgICB9O1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/transforms/WrapQuery.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/esm/wrapSchema.js":
/*!*************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/esm/wrapSchema.js ***!
  \*************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   wrapSchema: () => (/* binding */ wrapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/applySchemaTransforms.js\");\n/* harmony import */ var _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @graphql-tools/delegate */ \"(ssr)/../node_modules/@graphql-tools/delegate/esm/defaultMergedResolver.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/memoize.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/mapSchema.js\");\n/* harmony import */ var _graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @graphql-tools/utils */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _generateProxyingResolvers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generateProxyingResolvers.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/esm/generateProxyingResolvers.js\");\n\n\n\n\nconst wrapSchema = (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_0__.memoize1)(function wrapSchema(subschemaConfig) {\n    const targetSchema = subschemaConfig.schema;\n    const proxyingResolvers = (0,_generateProxyingResolvers_js__WEBPACK_IMPORTED_MODULE_1__.generateProxyingResolvers)(subschemaConfig);\n    const schema = createWrappingSchema(targetSchema, proxyingResolvers);\n    const transformed = (0,_graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_2__.applySchemaTransforms)(schema, subschemaConfig);\n    return transformed;\n});\nfunction createWrappingSchema(schema, proxyingResolvers) {\n    return (0,_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_3__.mapSchema)(schema, {\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.ROOT_FIELD]: (fieldConfig, fieldName, typeName) => {\n            return {\n                ...fieldConfig,\n                ...proxyingResolvers[typeName]?.[fieldName],\n            };\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.OBJECT_FIELD]: fieldConfig => {\n            return {\n                ...fieldConfig,\n                resolve: _graphql_tools_delegate__WEBPACK_IMPORTED_MODULE_5__.defaultMergedResolver,\n                subscribe: undefined,\n            };\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.OBJECT_TYPE]: type => {\n            const config = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLObjectType({\n                ...config,\n                isTypeOf: undefined,\n            });\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.INTERFACE_TYPE]: type => {\n            const config = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLInterfaceType({\n                ...config,\n                resolveType: undefined,\n            });\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.UNION_TYPE]: type => {\n            const config = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_6__.GraphQLUnionType({\n                ...config,\n                resolveType: undefined,\n            });\n        },\n        [_graphql_tools_utils__WEBPACK_IMPORTED_MODULE_4__.MapperKind.ENUM_VALUE]: valueConfig => {\n            return {\n                ...valueConfig,\n                value: undefined,\n            };\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3dyYXBTY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBcUY7QUFDRztBQUNqQjtBQUNJO0FBQ3BFLG1CQUFtQiw4REFBUTtBQUNsQztBQUNBLDhCQUE4Qix3RkFBeUI7QUFDdkQ7QUFDQSx3QkFBd0IsOEVBQXFCO0FBQzdDO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsV0FBVywrREFBUztBQUNwQixTQUFTLDREQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULFNBQVMsNERBQVU7QUFDbkI7QUFDQTtBQUNBLHlCQUF5QiwwRUFBcUI7QUFDOUM7QUFDQTtBQUNBLFNBQVM7QUFDVCxTQUFTLDREQUFVO0FBQ25CO0FBQ0EsdUJBQXVCLHNEQUFpQjtBQUN4QztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxTQUFTLDREQUFVO0FBQ25CO0FBQ0EsdUJBQXVCLHlEQUFvQjtBQUMzQztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxTQUFTLDREQUFVO0FBQ25CO0FBQ0EsdUJBQXVCLHFEQUFnQjtBQUN2QztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVCxTQUFTLDREQUFVO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvZXNtL3dyYXBTY2hlbWEuanM/MzY0YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMSW50ZXJmYWNlVHlwZSwgR3JhcGhRTE9iamVjdFR5cGUsIEdyYXBoUUxVbmlvblR5cGUsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBhcHBseVNjaGVtYVRyYW5zZm9ybXMsIGRlZmF1bHRNZXJnZWRSZXNvbHZlciwgfSBmcm9tICdAZ3JhcGhxbC10b29scy9kZWxlZ2F0ZSc7XG5pbXBvcnQgeyBNYXBwZXJLaW5kLCBtYXBTY2hlbWEsIG1lbW9pemUxIH0gZnJvbSAnQGdyYXBocWwtdG9vbHMvdXRpbHMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVQcm94eWluZ1Jlc29sdmVycyB9IGZyb20gJy4vZ2VuZXJhdGVQcm94eWluZ1Jlc29sdmVycy5qcyc7XG5leHBvcnQgY29uc3Qgd3JhcFNjaGVtYSA9IG1lbW9pemUxKGZ1bmN0aW9uIHdyYXBTY2hlbWEoc3Vic2NoZW1hQ29uZmlnKSB7XG4gICAgY29uc3QgdGFyZ2V0U2NoZW1hID0gc3Vic2NoZW1hQ29uZmlnLnNjaGVtYTtcbiAgICBjb25zdCBwcm94eWluZ1Jlc29sdmVycyA9IGdlbmVyYXRlUHJveHlpbmdSZXNvbHZlcnMoc3Vic2NoZW1hQ29uZmlnKTtcbiAgICBjb25zdCBzY2hlbWEgPSBjcmVhdGVXcmFwcGluZ1NjaGVtYSh0YXJnZXRTY2hlbWEsIHByb3h5aW5nUmVzb2x2ZXJzKTtcbiAgICBjb25zdCB0cmFuc2Zvcm1lZCA9IGFwcGx5U2NoZW1hVHJhbnNmb3JtcyhzY2hlbWEsIHN1YnNjaGVtYUNvbmZpZyk7XG4gICAgcmV0dXJuIHRyYW5zZm9ybWVkO1xufSk7XG5mdW5jdGlvbiBjcmVhdGVXcmFwcGluZ1NjaGVtYShzY2hlbWEsIHByb3h5aW5nUmVzb2x2ZXJzKSB7XG4gICAgcmV0dXJuIG1hcFNjaGVtYShzY2hlbWEsIHtcbiAgICAgICAgW01hcHBlcktpbmQuUk9PVF9GSUVMRF06IChmaWVsZENvbmZpZywgZmllbGROYW1lLCB0eXBlTmFtZSkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5maWVsZENvbmZpZyxcbiAgICAgICAgICAgICAgICAuLi5wcm94eWluZ1Jlc29sdmVyc1t0eXBlTmFtZV0/LltmaWVsZE5hbWVdLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuT0JKRUNUX0ZJRUxEXTogZmllbGRDb25maWcgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICAuLi5maWVsZENvbmZpZyxcbiAgICAgICAgICAgICAgICByZXNvbHZlOiBkZWZhdWx0TWVyZ2VkUmVzb2x2ZXIsXG4gICAgICAgICAgICAgICAgc3Vic2NyaWJlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9LFxuICAgICAgICBbTWFwcGVyS2luZC5PQkpFQ1RfVFlQRV06IHR5cGUgPT4ge1xuICAgICAgICAgICAgY29uc3QgY29uZmlnID0gdHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgICAgIGlzVHlwZU9mOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuSU5URVJGQUNFX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTEludGVyZmFjZVR5cGUoe1xuICAgICAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICByZXNvbHZlVHlwZTogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG4gICAgICAgIFtNYXBwZXJLaW5kLlVOSU9OX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTFVuaW9uVHlwZSh7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgICAgIHJlc29sdmVUeXBlOiB1bmRlZmluZWQsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcbiAgICAgICAgW01hcHBlcktpbmQuRU5VTV9WQUxVRV06IHZhbHVlQ29uZmlnID0+IHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgLi4udmFsdWVDb25maWcsXG4gICAgICAgICAgICAgICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/esm/wrapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccumulatorMap: () => (/* binding */ AccumulatorMap)\n/* harmony export */ });\n/**\n * ES6 Map with additional `add` method to accumulate items.\n */\nclass AccumulatorMap extends Map {\n    get [Symbol.toStringTag]() {\n        return 'AccumulatorMap';\n    }\n    add(key, item) {\n        const group = this.get(key);\n        if (group === undefined) {\n            this.set(key, [item]);\n        }\n        else {\n            group.push(item);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9BY2N1bXVsYXRvck1hcC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9BY2N1bXVsYXRvck1hcC5qcz81ZTBjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRVM2IE1hcCB3aXRoIGFkZGl0aW9uYWwgYGFkZGAgbWV0aG9kIHRvIGFjY3VtdWxhdGUgaXRlbXMuXG4gKi9cbmV4cG9ydCBjbGFzcyBBY2N1bXVsYXRvck1hcCBleHRlbmRzIE1hcCB7XG4gICAgZ2V0IFtTeW1ib2wudG9TdHJpbmdUYWddKCkge1xuICAgICAgICByZXR1cm4gJ0FjY3VtdWxhdG9yTWFwJztcbiAgICB9XG4gICAgYWRkKGtleSwgaXRlbSkge1xuICAgICAgICBjb25zdCBncm91cCA9IHRoaXMuZ2V0KGtleSk7XG4gICAgICAgIGlmIChncm91cCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aGlzLnNldChrZXksIFtpdGVtXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBncm91cC5wdXNoKGl0ZW0pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapperKind: () => (/* binding */ MapperKind)\n/* harmony export */ });\nvar MapperKind;\n(function (MapperKind) {\n    MapperKind[\"TYPE\"] = \"MapperKind.TYPE\";\n    MapperKind[\"SCALAR_TYPE\"] = \"MapperKind.SCALAR_TYPE\";\n    MapperKind[\"ENUM_TYPE\"] = \"MapperKind.ENUM_TYPE\";\n    MapperKind[\"COMPOSITE_TYPE\"] = \"MapperKind.COMPOSITE_TYPE\";\n    MapperKind[\"OBJECT_TYPE\"] = \"MapperKind.OBJECT_TYPE\";\n    MapperKind[\"INPUT_OBJECT_TYPE\"] = \"MapperKind.INPUT_OBJECT_TYPE\";\n    MapperKind[\"ABSTRACT_TYPE\"] = \"MapperKind.ABSTRACT_TYPE\";\n    MapperKind[\"UNION_TYPE\"] = \"MapperKind.UNION_TYPE\";\n    MapperKind[\"INTERFACE_TYPE\"] = \"MapperKind.INTERFACE_TYPE\";\n    MapperKind[\"ROOT_OBJECT\"] = \"MapperKind.ROOT_OBJECT\";\n    MapperKind[\"QUERY\"] = \"MapperKind.QUERY\";\n    MapperKind[\"MUTATION\"] = \"MapperKind.MUTATION\";\n    MapperKind[\"SUBSCRIPTION\"] = \"MapperKind.SUBSCRIPTION\";\n    MapperKind[\"DIRECTIVE\"] = \"MapperKind.DIRECTIVE\";\n    MapperKind[\"FIELD\"] = \"MapperKind.FIELD\";\n    MapperKind[\"COMPOSITE_FIELD\"] = \"MapperKind.COMPOSITE_FIELD\";\n    MapperKind[\"OBJECT_FIELD\"] = \"MapperKind.OBJECT_FIELD\";\n    MapperKind[\"ROOT_FIELD\"] = \"MapperKind.ROOT_FIELD\";\n    MapperKind[\"QUERY_ROOT_FIELD\"] = \"MapperKind.QUERY_ROOT_FIELD\";\n    MapperKind[\"MUTATION_ROOT_FIELD\"] = \"MapperKind.MUTATION_ROOT_FIELD\";\n    MapperKind[\"SUBSCRIPTION_ROOT_FIELD\"] = \"MapperKind.SUBSCRIPTION_ROOT_FIELD\";\n    MapperKind[\"INTERFACE_FIELD\"] = \"MapperKind.INTERFACE_FIELD\";\n    MapperKind[\"INPUT_OBJECT_FIELD\"] = \"MapperKind.INPUT_OBJECT_FIELD\";\n    MapperKind[\"ARGUMENT\"] = \"MapperKind.ARGUMENT\";\n    MapperKind[\"ENUM_VALUE\"] = \"MapperKind.ENUM_VALUE\";\n})(MapperKind || (MapperKind = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9JbnRlcmZhY2VzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9JbnRlcmZhY2VzLmpzP2IxZGQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHZhciBNYXBwZXJLaW5kO1xuKGZ1bmN0aW9uIChNYXBwZXJLaW5kKSB7XG4gICAgTWFwcGVyS2luZFtcIlRZUEVcIl0gPSBcIk1hcHBlcktpbmQuVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJTQ0FMQVJfVFlQRVwiXSA9IFwiTWFwcGVyS2luZC5TQ0FMQVJfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJFTlVNX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuRU5VTV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkNPTVBPU0lURV9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLkNPTVBPU0lURV9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIk9CSkVDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLk9CSkVDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIklOUFVUX09CSkVDVF9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9UWVBFXCI7XG4gICAgTWFwcGVyS2luZFtcIkFCU1RSQUNUX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuQUJTVFJBQ1RfVFlQRVwiO1xuICAgIE1hcHBlcktpbmRbXCJVTklPTl9UWVBFXCJdID0gXCJNYXBwZXJLaW5kLlVOSU9OX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiSU5URVJGQUNFX1RZUEVcIl0gPSBcIk1hcHBlcktpbmQuSU5URVJGQUNFX1RZUEVcIjtcbiAgICBNYXBwZXJLaW5kW1wiUk9PVF9PQkpFQ1RcIl0gPSBcIk1hcHBlcktpbmQuUk9PVF9PQkpFQ1RcIjtcbiAgICBNYXBwZXJLaW5kW1wiUVVFUllcIl0gPSBcIk1hcHBlcktpbmQuUVVFUllcIjtcbiAgICBNYXBwZXJLaW5kW1wiTVVUQVRJT05cIl0gPSBcIk1hcHBlcktpbmQuTVVUQVRJT05cIjtcbiAgICBNYXBwZXJLaW5kW1wiU1VCU0NSSVBUSU9OXCJdID0gXCJNYXBwZXJLaW5kLlNVQlNDUklQVElPTlwiO1xuICAgIE1hcHBlcktpbmRbXCJESVJFQ1RJVkVcIl0gPSBcIk1hcHBlcktpbmQuRElSRUNUSVZFXCI7XG4gICAgTWFwcGVyS2luZFtcIkZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLkZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIkNPTVBPU0lURV9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5DT01QT1NJVEVfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiT0JKRUNUX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLk9CSkVDVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJST09UX0ZJRUxEXCJdID0gXCJNYXBwZXJLaW5kLlJPT1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiUVVFUllfUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5RVUVSWV9ST09UX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIk1VVEFUSU9OX1JPT1RfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuTVVUQVRJT05fUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJTVUJTQ1JJUFRJT05fUk9PVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5TVUJTQ1JJUFRJT05fUk9PVF9GSUVMRFwiO1xuICAgIE1hcHBlcktpbmRbXCJJTlRFUkZBQ0VfRklFTERcIl0gPSBcIk1hcHBlcktpbmQuSU5URVJGQUNFX0ZJRUxEXCI7XG4gICAgTWFwcGVyS2luZFtcIklOUFVUX09CSkVDVF9GSUVMRFwiXSA9IFwiTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfRklFTERcIjtcbiAgICBNYXBwZXJLaW5kW1wiQVJHVU1FTlRcIl0gPSBcIk1hcHBlcktpbmQuQVJHVU1FTlRcIjtcbiAgICBNYXBwZXJLaW5kW1wiRU5VTV9WQUxVRVwiXSA9IFwiTWFwcGVyS2luZC5FTlVNX1ZBTFVFXCI7XG59KShNYXBwZXJLaW5kIHx8IChNYXBwZXJLaW5kID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/collectFields.js":
/*!**************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/collectFields.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectFields: () => (/* binding */ collectFields),\n/* harmony export */   collectSubFields: () => (/* binding */ collectSubFields),\n/* harmony export */   doesFragmentConditionMatch: () => (/* binding */ doesFragmentConditionMatch),\n/* harmony export */   getDeferValues: () => (/* binding */ getDeferValues),\n/* harmony export */   getFieldEntryKey: () => (/* binding */ getFieldEntryKey),\n/* harmony export */   shouldIncludeNode: () => (/* binding */ shouldIncludeNode)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/execution/values.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/typeFromAST.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccumulatorMap.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/AccumulatorMap.js\");\n/* harmony import */ var _directives_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./directives.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/directives.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\n\n\nfunction collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, visitedFragmentNames) {\n    for (const selection of selectionSet.selections) {\n        switch (selection.kind) {\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FIELD: {\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                fields.add(getFieldEntryKey(selection), selection);\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.INLINE_FRAGMENT: {\n                if (!shouldIncludeNode(variableValues, selection) ||\n                    !doesFragmentConditionMatch(schema, selection, runtimeType)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selection.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n            case graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_SPREAD: {\n                const fragName = selection.name.value;\n                if (!shouldIncludeNode(variableValues, selection)) {\n                    continue;\n                }\n                const defer = getDeferValues(variableValues, selection);\n                if (visitedFragmentNames.has(fragName) && !defer) {\n                    continue;\n                }\n                const fragment = fragments[fragName];\n                if (!fragment || !doesFragmentConditionMatch(schema, fragment, runtimeType)) {\n                    continue;\n                }\n                if (!defer) {\n                    visitedFragmentNames.add(fragName);\n                }\n                if (defer) {\n                    const patchFields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, patchFields, patches, visitedFragmentNames);\n                    patches.push({\n                        label: defer.label,\n                        fields: patchFields,\n                    });\n                }\n                else {\n                    collectFieldsImpl(schema, fragments, variableValues, runtimeType, fragment.selectionSet, fields, patches, visitedFragmentNames);\n                }\n                break;\n            }\n        }\n    }\n}\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n */\nfunction collectFields(schema, fragments, variableValues, runtimeType, selectionSet) {\n    const fields = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const patches = [];\n    collectFieldsImpl(schema, fragments, variableValues, runtimeType, selectionSet, fields, patches, new Set());\n    return { fields, patches };\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\nfunction shouldIncludeNode(variableValues, node) {\n    const skip = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSkipDirective, node, variableValues);\n    if (skip?.['if'] === true) {\n        return false;\n    }\n    const include = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLIncludeDirective, node, variableValues);\n    if (include?.['if'] === false) {\n        return false;\n    }\n    return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n    const typeConditionNode = fragment.typeCondition;\n    if (!typeConditionNode) {\n        return true;\n    }\n    const conditionalType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.typeFromAST)(schema, typeConditionNode);\n    if (conditionalType === type) {\n        return true;\n    }\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_5__.isAbstractType)(conditionalType)) {\n        const possibleTypes = schema.getPossibleTypes(conditionalType);\n        return possibleTypes.includes(type);\n    }\n    return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\nfunction getFieldEntryKey(node) {\n    return node.alias ? node.alias.value : node.name.value;\n}\n/**\n * Returns an object containing the `@defer` arguments if a field should be\n * deferred based on the experimental flag, defer directive present and\n * not disabled by the \"if\" argument.\n */\nfunction getDeferValues(variableValues, node) {\n    const defer = (0,graphql__WEBPACK_IMPORTED_MODULE_2__.getDirectiveValues)(_directives_js__WEBPACK_IMPORTED_MODULE_6__.GraphQLDeferDirective, node, variableValues);\n    if (!defer) {\n        return;\n    }\n    if (defer['if'] === false) {\n        return;\n    }\n    return {\n        label: typeof defer['label'] === 'string' ? defer['label'] : undefined,\n    };\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n */\nconst collectSubFields = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_7__.memoize5)(function collectSubfields(schema, fragments, variableValues, returnType, fieldNodes) {\n    const subFieldNodes = new _AccumulatorMap_js__WEBPACK_IMPORTED_MODULE_1__.AccumulatorMap();\n    const visitedFragmentNames = new Set();\n    const subPatches = [];\n    const subFieldsAndPatches = {\n        fields: subFieldNodes,\n        patches: subPatches,\n    };\n    for (const node of fieldNodes) {\n        if (node.selectionSet) {\n            collectFieldsImpl(schema, fragments, variableValues, returnType, node.selectionSet, subFieldNodes, subPatches, visitedFragmentNames);\n        }\n    }\n    return subFieldsAndPatches;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/collectFields.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/directives.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/directives.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphQLDeferDirective: () => (/* binding */ GraphQLDeferDirective),\n/* harmony export */   GraphQLStreamDirective: () => (/* binding */ GraphQLStreamDirective)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/directiveLocation.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n\n/**\n * Used to conditionally defer fragments.\n */\nconst GraphQLDeferDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'defer',\n    description: 'Directs the executor to defer this fragment when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FRAGMENT_SPREAD, graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.INLINE_FRAGMENT],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Deferred when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n    },\n});\n/**\n * Used to conditionally stream list fields.\n */\nconst GraphQLStreamDirective = new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective({\n    name: 'stream',\n    description: 'Directs the executor to stream plural fields when the `if` argument is true or undefined.',\n    locations: [graphql__WEBPACK_IMPORTED_MODULE_1__.DirectiveLocation.FIELD],\n    args: {\n        if: {\n            type: new graphql__WEBPACK_IMPORTED_MODULE_2__.GraphQLNonNull(graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLBoolean),\n            description: 'Stream when true or undefined.',\n            defaultValue: true,\n        },\n        label: {\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLString,\n            description: 'Unique name',\n        },\n        initialCount: {\n            defaultValue: 0,\n            type: graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLInt,\n            description: 'Number of items to return immediately',\n        },\n    },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9kaXJlY3RpdmVzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEwSDtBQUMxSDtBQUNBO0FBQ0E7QUFDTyxrQ0FBa0MscURBQWdCO0FBQ3pEO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQWlCLGtCQUFrQixzREFBaUI7QUFDcEU7QUFDQTtBQUNBLHNCQUFzQixtREFBYyxDQUFDLG1EQUFjO0FBQ25EO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxrQkFBa0Isa0RBQWE7QUFDL0I7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDTyxtQ0FBbUMscURBQWdCO0FBQzFEO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQWlCO0FBQ2pDO0FBQ0E7QUFDQSxzQkFBc0IsbURBQWMsQ0FBQyxtREFBYztBQUNuRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0Esa0JBQWtCLGtEQUFhO0FBQy9CO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSxrQkFBa0IsK0NBQVU7QUFDNUI7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZGlyZWN0aXZlcy5qcz9mOGE4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZUxvY2F0aW9uLCBHcmFwaFFMQm9vbGVhbiwgR3JhcGhRTERpcmVjdGl2ZSwgR3JhcGhRTEludCwgR3JhcGhRTE5vbk51bGwsIEdyYXBoUUxTdHJpbmcsIH0gZnJvbSAnZ3JhcGhxbCc7XG4vKipcbiAqIFVzZWQgdG8gY29uZGl0aW9uYWxseSBkZWZlciBmcmFnbWVudHMuXG4gKi9cbmV4cG9ydCBjb25zdCBHcmFwaFFMRGVmZXJEaXJlY3RpdmUgPSBuZXcgR3JhcGhRTERpcmVjdGl2ZSh7XG4gICAgbmFtZTogJ2RlZmVyJyxcbiAgICBkZXNjcmlwdGlvbjogJ0RpcmVjdHMgdGhlIGV4ZWN1dG9yIHRvIGRlZmVyIHRoaXMgZnJhZ21lbnQgd2hlbiB0aGUgYGlmYCBhcmd1bWVudCBpcyB0cnVlIG9yIHVuZGVmaW5lZC4nLFxuICAgIGxvY2F0aW9uczogW0RpcmVjdGl2ZUxvY2F0aW9uLkZSQUdNRU5UX1NQUkVBRCwgRGlyZWN0aXZlTG9jYXRpb24uSU5MSU5FX0ZSQUdNRU5UXSxcbiAgICBhcmdzOiB7XG4gICAgICAgIGlmOiB7XG4gICAgICAgICAgICB0eXBlOiBuZXcgR3JhcGhRTE5vbk51bGwoR3JhcGhRTEJvb2xlYW4pLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdEZWZlcnJlZCB3aGVuIHRydWUgb3IgdW5kZWZpbmVkLicsXG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IHRydWUsXG4gICAgICAgIH0sXG4gICAgICAgIGxhYmVsOiB7XG4gICAgICAgICAgICB0eXBlOiBHcmFwaFFMU3RyaW5nLFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdVbmlxdWUgbmFtZScsXG4gICAgICAgIH0sXG4gICAgfSxcbn0pO1xuLyoqXG4gKiBVc2VkIHRvIGNvbmRpdGlvbmFsbHkgc3RyZWFtIGxpc3QgZmllbGRzLlxuICovXG5leHBvcnQgY29uc3QgR3JhcGhRTFN0cmVhbURpcmVjdGl2ZSA9IG5ldyBHcmFwaFFMRGlyZWN0aXZlKHtcbiAgICBuYW1lOiAnc3RyZWFtJyxcbiAgICBkZXNjcmlwdGlvbjogJ0RpcmVjdHMgdGhlIGV4ZWN1dG9yIHRvIHN0cmVhbSBwbHVyYWwgZmllbGRzIHdoZW4gdGhlIGBpZmAgYXJndW1lbnQgaXMgdHJ1ZSBvciB1bmRlZmluZWQuJyxcbiAgICBsb2NhdGlvbnM6IFtEaXJlY3RpdmVMb2NhdGlvbi5GSUVMRF0sXG4gICAgYXJnczoge1xuICAgICAgICBpZjoge1xuICAgICAgICAgICAgdHlwZTogbmV3IEdyYXBoUUxOb25OdWxsKEdyYXBoUUxCb29sZWFuKSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAnU3RyZWFtIHdoZW4gdHJ1ZSBvciB1bmRlZmluZWQuJyxcbiAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogdHJ1ZSxcbiAgICAgICAgfSxcbiAgICAgICAgbGFiZWw6IHtcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxTdHJpbmcsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ1VuaXF1ZSBuYW1lJyxcbiAgICAgICAgfSxcbiAgICAgICAgaW5pdGlhbENvdW50OiB7XG4gICAgICAgICAgICBkZWZhdWx0VmFsdWU6IDAsXG4gICAgICAgICAgICB0eXBlOiBHcmFwaFFMSW50LFxuICAgICAgICAgICAgZGVzY3JpcHRpb246ICdOdW1iZXIgb2YgaXRlbXMgdG8gcmV0dXJuIGltbWVkaWF0ZWx5JyxcbiAgICAgICAgfSxcbiAgICB9LFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/directives.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/errors.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/errors.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGraphQLError: () => (/* binding */ createGraphQLError),\n/* harmony export */   relocatedError: () => (/* binding */ relocatedError)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/version.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/error/GraphQLError.mjs\");\n\nconst possibleGraphQLErrorProperties = [\n    'message',\n    'locations',\n    'path',\n    'nodes',\n    'source',\n    'positions',\n    'originalError',\n    'name',\n    'stack',\n    'extensions',\n];\nfunction isGraphQLErrorLike(error) {\n    return (error != null &&\n        typeof error === 'object' &&\n        Object.keys(error).every(key => possibleGraphQLErrorProperties.includes(key)));\n}\nfunction createGraphQLError(message, options) {\n    if (options?.originalError &&\n        !(options.originalError instanceof Error) &&\n        isGraphQLErrorLike(options.originalError)) {\n        options.originalError = createGraphQLError(options.originalError.message, options.originalError);\n    }\n    if (graphql__WEBPACK_IMPORTED_MODULE_0__.versionInfo.major >= 17) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options);\n    }\n    return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLError(message, options?.nodes, options?.source, options?.positions, options?.path, options?.originalError, options?.extensions);\n}\nfunction relocatedError(originalError, path) {\n    return createGraphQLError(originalError.message, {\n        nodes: originalError.nodes,\n        source: originalError.source,\n        positions: originalError.positions,\n        path: path == null ? originalError.path : path,\n        originalError,\n        extensions: originalError.extensions,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9lcnJvcnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxnREFBVztBQUNuQixtQkFBbUIsaURBQVk7QUFDL0I7QUFDQSxlQUFlLGlEQUFZO0FBQzNCO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9lcnJvcnMuanM/OWIzZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMRXJyb3IsIHZlcnNpb25JbmZvIH0gZnJvbSAnZ3JhcGhxbCc7XG5jb25zdCBwb3NzaWJsZUdyYXBoUUxFcnJvclByb3BlcnRpZXMgPSBbXG4gICAgJ21lc3NhZ2UnLFxuICAgICdsb2NhdGlvbnMnLFxuICAgICdwYXRoJyxcbiAgICAnbm9kZXMnLFxuICAgICdzb3VyY2UnLFxuICAgICdwb3NpdGlvbnMnLFxuICAgICdvcmlnaW5hbEVycm9yJyxcbiAgICAnbmFtZScsXG4gICAgJ3N0YWNrJyxcbiAgICAnZXh0ZW5zaW9ucycsXG5dO1xuZnVuY3Rpb24gaXNHcmFwaFFMRXJyb3JMaWtlKGVycm9yKSB7XG4gICAgcmV0dXJuIChlcnJvciAhPSBudWxsICYmXG4gICAgICAgIHR5cGVvZiBlcnJvciA9PT0gJ29iamVjdCcgJiZcbiAgICAgICAgT2JqZWN0LmtleXMoZXJyb3IpLmV2ZXJ5KGtleSA9PiBwb3NzaWJsZUdyYXBoUUxFcnJvclByb3BlcnRpZXMuaW5jbHVkZXMoa2V5KSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUdyYXBoUUxFcnJvcihtZXNzYWdlLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnM/Lm9yaWdpbmFsRXJyb3IgJiZcbiAgICAgICAgIShvcHRpb25zLm9yaWdpbmFsRXJyb3IgaW5zdGFuY2VvZiBFcnJvcikgJiZcbiAgICAgICAgaXNHcmFwaFFMRXJyb3JMaWtlKG9wdGlvbnMub3JpZ2luYWxFcnJvcikpIHtcbiAgICAgICAgb3B0aW9ucy5vcmlnaW5hbEVycm9yID0gY3JlYXRlR3JhcGhRTEVycm9yKG9wdGlvbnMub3JpZ2luYWxFcnJvci5tZXNzYWdlLCBvcHRpb25zLm9yaWdpbmFsRXJyb3IpO1xuICAgIH1cbiAgICBpZiAodmVyc2lvbkluZm8ubWFqb3IgPj0gMTcpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMRXJyb3IobWVzc2FnZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgR3JhcGhRTEVycm9yKG1lc3NhZ2UsIG9wdGlvbnM/Lm5vZGVzLCBvcHRpb25zPy5zb3VyY2UsIG9wdGlvbnM/LnBvc2l0aW9ucywgb3B0aW9ucz8ucGF0aCwgb3B0aW9ucz8ub3JpZ2luYWxFcnJvciwgb3B0aW9ucz8uZXh0ZW5zaW9ucyk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVsb2NhdGVkRXJyb3Iob3JpZ2luYWxFcnJvciwgcGF0aCkge1xuICAgIHJldHVybiBjcmVhdGVHcmFwaFFMRXJyb3Iob3JpZ2luYWxFcnJvci5tZXNzYWdlLCB7XG4gICAgICAgIG5vZGVzOiBvcmlnaW5hbEVycm9yLm5vZGVzLFxuICAgICAgICBzb3VyY2U6IG9yaWdpbmFsRXJyb3Iuc291cmNlLFxuICAgICAgICBwb3NpdGlvbnM6IG9yaWdpbmFsRXJyb3IucG9zaXRpb25zLFxuICAgICAgICBwYXRoOiBwYXRoID09IG51bGwgPyBvcmlnaW5hbEVycm9yLnBhdGggOiBwYXRoLFxuICAgICAgICBvcmlnaW5hbEVycm9yLFxuICAgICAgICBleHRlbnNpb25zOiBvcmlnaW5hbEVycm9yLmV4dGVuc2lvbnMsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/errors.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js":
/*!*************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getObjectTypeFromTypeMap: () => (/* binding */ getObjectTypeFromTypeMap)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction getObjectTypeFromTypeMap(typeMap, type) {\n    if (type) {\n        const maybeObjectType = typeMap[type.name];\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(maybeObjectType)) {\n            return maybeObjectType;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUM7QUFDaEM7QUFDUDtBQUNBO0FBQ0EsWUFBWSxxREFBWTtBQUN4QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAuanM/ZmYzNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09iamVjdFR5cGUgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAodHlwZU1hcCwgdHlwZSkge1xuICAgIGlmICh0eXBlKSB7XG4gICAgICAgIGNvbnN0IG1heWJlT2JqZWN0VHlwZSA9IHR5cGVNYXBbdHlwZS5uYW1lXTtcbiAgICAgICAgaWYgKGlzT2JqZWN0VHlwZShtYXliZU9iamVjdFR5cGUpKSB7XG4gICAgICAgICAgICByZXR1cm4gbWF5YmVPYmplY3RUeXBlO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js":
/*!***************************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getOperationASTFromDocument: () => (/* binding */ getOperationASTFromDocument),\n/* harmony export */   getOperationASTFromRequest: () => (/* binding */ getOperationASTFromRequest)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/utilities/getOperationAST.mjs\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getOperationASTFromDocument(documentNode, operationName) {\n    const doc = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getOperationAST)(documentNode, operationName);\n    if (!doc) {\n        throw new Error(`Cannot infer operation ${operationName || ''}`);\n    }\n    return doc;\n}\nconst getOperationASTFromRequest = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getOperationASTFromRequest(request) {\n    return getOperationASTFromDocument(request.document, request.operationName);\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTBDO0FBQ0Y7QUFDakM7QUFDUCxnQkFBZ0Isd0RBQWU7QUFDL0I7QUFDQSxrREFBa0Qsb0JBQW9CO0FBQ3RFO0FBQ0E7QUFDQTtBQUNPLG1DQUFtQyxxREFBUTtBQUNsRDtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vZ2V0T3BlcmF0aW9uQVNURnJvbVJlcXVlc3QuanM/MWY4NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRPcGVyYXRpb25BU1QgfSBmcm9tICdncmFwaHFsJztcbmltcG9ydCB7IG1lbW9pemUxIH0gZnJvbSAnLi9tZW1vaXplLmpzJztcbmV4cG9ydCBmdW5jdGlvbiBnZXRPcGVyYXRpb25BU1RGcm9tRG9jdW1lbnQoZG9jdW1lbnROb2RlLCBvcGVyYXRpb25OYW1lKSB7XG4gICAgY29uc3QgZG9jID0gZ2V0T3BlcmF0aW9uQVNUKGRvY3VtZW50Tm9kZSwgb3BlcmF0aW9uTmFtZSk7XG4gICAgaWYgKCFkb2MpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3QgaW5mZXIgb3BlcmF0aW9uICR7b3BlcmF0aW9uTmFtZSB8fCAnJ31gKTtcbiAgICB9XG4gICAgcmV0dXJuIGRvYztcbn1cbmV4cG9ydCBjb25zdCBnZXRPcGVyYXRpb25BU1RGcm9tUmVxdWVzdCA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldE9wZXJhdGlvbkFTVEZyb21SZXF1ZXN0KHJlcXVlc3QpIHtcbiAgICByZXR1cm4gZ2V0T3BlcmF0aW9uQVNURnJvbURvY3VtZW50KHJlcXVlc3QuZG9jdW1lbnQsIHJlcXVlc3Qub3BlcmF0aW9uTmFtZSk7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js":
/*!***********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getResponseKeyFromInfo: () => (/* binding */ getResponseKeyFromInfo)\n/* harmony export */ });\n/**\n * Get the key under which the result of this resolver will be placed in the response JSON. Basically, just\n * resolves aliases.\n * @param info The info argument to the resolver.\n */\nfunction getResponseKeyFromInfo(info) {\n    return info.fieldNodes[0].alias != null ? info.fieldNodes[0].alias.value : info.fieldName;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9nZXRSZXNwb25zZUtleUZyb21JbmZvLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvd3JhcC9ub2RlX21vZHVsZXMvQGdyYXBocWwtdG9vbHMvdXRpbHMvZXNtL2dldFJlc3BvbnNlS2V5RnJvbUluZm8uanM/ZjcyYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdldCB0aGUga2V5IHVuZGVyIHdoaWNoIHRoZSByZXN1bHQgb2YgdGhpcyByZXNvbHZlciB3aWxsIGJlIHBsYWNlZCBpbiB0aGUgcmVzcG9uc2UgSlNPTi4gQmFzaWNhbGx5LCBqdXN0XG4gKiByZXNvbHZlcyBhbGlhc2VzLlxuICogQHBhcmFtIGluZm8gVGhlIGluZm8gYXJndW1lbnQgdG8gdGhlIHJlc29sdmVyLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmVzcG9uc2VLZXlGcm9tSW5mbyhpbmZvKSB7XG4gICAgcmV0dXJuIGluZm8uZmllbGROb2Rlc1swXS5hbGlhcyAhPSBudWxsID8gaW5mby5maWVsZE5vZGVzWzBdLmFsaWFzLnZhbHVlIDogaW5mby5maWVsZE5hbWU7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getResponseKeyFromInfo.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/helpers.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/helpers.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   asArray: () => (/* binding */ asArray),\n/* harmony export */   assertSome: () => (/* binding */ assertSome),\n/* harmony export */   compareNodes: () => (/* binding */ compareNodes),\n/* harmony export */   compareStrings: () => (/* binding */ compareStrings),\n/* harmony export */   isDocumentString: () => (/* binding */ isDocumentString),\n/* harmony export */   isSome: () => (/* binding */ isSome),\n/* harmony export */   isValidPath: () => (/* binding */ isValidPath),\n/* harmony export */   nodeToString: () => (/* binding */ nodeToString)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/parser.mjs\");\n\nconst asArray = (fns) => (Array.isArray(fns) ? fns : fns ? [fns] : []);\nconst invalidDocRegex = /\\.[a-z0-9]+$/i;\nfunction isDocumentString(str) {\n    if (typeof str !== 'string') {\n        return false;\n    }\n    // XXX: is-valid-path or is-glob treat SDL as a valid path\n    // (`scalar Date` for example)\n    // this why checking the extension is fast enough\n    // and prevent from parsing the string in order to find out\n    // if the string is a SDL\n    if (invalidDocRegex.test(str)) {\n        return false;\n    }\n    try {\n        (0,graphql__WEBPACK_IMPORTED_MODULE_0__.parse)(str);\n        return true;\n    }\n    catch (e) { }\n    return false;\n}\nconst invalidPathRegex = /[‘“!%^<>`\\n]/;\n/**\n * Checkes whether the `str` contains any path illegal characters.\n *\n * A string may sometimes look like a path but is not (like an SDL of a simple\n * GraphQL schema). To make sure we don't yield false-positives in such cases,\n * we disallow new lines in paths (even though most Unix systems support new\n * lines in file names).\n */\nfunction isValidPath(str) {\n    return typeof str === 'string' && !invalidPathRegex.test(str);\n}\nfunction compareStrings(a, b) {\n    if (String(a) < String(b)) {\n        return -1;\n    }\n    if (String(a) > String(b)) {\n        return 1;\n    }\n    return 0;\n}\nfunction nodeToString(a) {\n    let name;\n    if ('alias' in a) {\n        name = a.alias?.value;\n    }\n    if (name == null && 'name' in a) {\n        name = a.name?.value;\n    }\n    if (name == null) {\n        name = a.kind;\n    }\n    return name;\n}\nfunction compareNodes(a, b, customFn) {\n    const aStr = nodeToString(a);\n    const bStr = nodeToString(b);\n    if (typeof customFn === 'function') {\n        return customFn(aStr, bStr);\n    }\n    return compareStrings(aStr, bStr);\n}\nfunction isSome(input) {\n    return input != null;\n}\nfunction assertSome(input, message = 'Value should be something') {\n    if (input == null) {\n        throw new Error(message);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9oZWxwZXJzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFnQztBQUN6QjtBQUNQO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLDhDQUFLO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vaGVscGVycy5qcz84ODJkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHBhcnNlIH0gZnJvbSAnZ3JhcGhxbCc7XG5leHBvcnQgY29uc3QgYXNBcnJheSA9IChmbnMpID0+IChBcnJheS5pc0FycmF5KGZucykgPyBmbnMgOiBmbnMgPyBbZm5zXSA6IFtdKTtcbmNvbnN0IGludmFsaWREb2NSZWdleCA9IC9cXC5bYS16MC05XSskL2k7XG5leHBvcnQgZnVuY3Rpb24gaXNEb2N1bWVudFN0cmluZyhzdHIpIHtcbiAgICBpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBYWFg6IGlzLXZhbGlkLXBhdGggb3IgaXMtZ2xvYiB0cmVhdCBTREwgYXMgYSB2YWxpZCBwYXRoXG4gICAgLy8gKGBzY2FsYXIgRGF0ZWAgZm9yIGV4YW1wbGUpXG4gICAgLy8gdGhpcyB3aHkgY2hlY2tpbmcgdGhlIGV4dGVuc2lvbiBpcyBmYXN0IGVub3VnaFxuICAgIC8vIGFuZCBwcmV2ZW50IGZyb20gcGFyc2luZyB0aGUgc3RyaW5nIGluIG9yZGVyIHRvIGZpbmQgb3V0XG4gICAgLy8gaWYgdGhlIHN0cmluZyBpcyBhIFNETFxuICAgIGlmIChpbnZhbGlkRG9jUmVnZXgudGVzdChzdHIpKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgcGFyc2Uoc3RyKTtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIGNhdGNoIChlKSB7IH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5jb25zdCBpbnZhbGlkUGF0aFJlZ2V4ID0gL1vigJjigJwhJV48PmBcXG5dLztcbi8qKlxuICogQ2hlY2tlcyB3aGV0aGVyIHRoZSBgc3RyYCBjb250YWlucyBhbnkgcGF0aCBpbGxlZ2FsIGNoYXJhY3RlcnMuXG4gKlxuICogQSBzdHJpbmcgbWF5IHNvbWV0aW1lcyBsb29rIGxpa2UgYSBwYXRoIGJ1dCBpcyBub3QgKGxpa2UgYW4gU0RMIG9mIGEgc2ltcGxlXG4gKiBHcmFwaFFMIHNjaGVtYSkuIFRvIG1ha2Ugc3VyZSB3ZSBkb24ndCB5aWVsZCBmYWxzZS1wb3NpdGl2ZXMgaW4gc3VjaCBjYXNlcyxcbiAqIHdlIGRpc2FsbG93IG5ldyBsaW5lcyBpbiBwYXRocyAoZXZlbiB0aG91Z2ggbW9zdCBVbml4IHN5c3RlbXMgc3VwcG9ydCBuZXdcbiAqIGxpbmVzIGluIGZpbGUgbmFtZXMpLlxuICovXG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZFBhdGgoc3RyKSB7XG4gICAgcmV0dXJuIHR5cGVvZiBzdHIgPT09ICdzdHJpbmcnICYmICFpbnZhbGlkUGF0aFJlZ2V4LnRlc3Qoc3RyKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjb21wYXJlU3RyaW5ncyhhLCBiKSB7XG4gICAgaWYgKFN0cmluZyhhKSA8IFN0cmluZyhiKSkge1xuICAgICAgICByZXR1cm4gLTE7XG4gICAgfVxuICAgIGlmIChTdHJpbmcoYSkgPiBTdHJpbmcoYikpIHtcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG5vZGVUb1N0cmluZyhhKSB7XG4gICAgbGV0IG5hbWU7XG4gICAgaWYgKCdhbGlhcycgaW4gYSkge1xuICAgICAgICBuYW1lID0gYS5hbGlhcz8udmFsdWU7XG4gICAgfVxuICAgIGlmIChuYW1lID09IG51bGwgJiYgJ25hbWUnIGluIGEpIHtcbiAgICAgICAgbmFtZSA9IGEubmFtZT8udmFsdWU7XG4gICAgfVxuICAgIGlmIChuYW1lID09IG51bGwpIHtcbiAgICAgICAgbmFtZSA9IGEua2luZDtcbiAgICB9XG4gICAgcmV0dXJuIG5hbWU7XG59XG5leHBvcnQgZnVuY3Rpb24gY29tcGFyZU5vZGVzKGEsIGIsIGN1c3RvbUZuKSB7XG4gICAgY29uc3QgYVN0ciA9IG5vZGVUb1N0cmluZyhhKTtcbiAgICBjb25zdCBiU3RyID0gbm9kZVRvU3RyaW5nKGIpO1xuICAgIGlmICh0eXBlb2YgY3VzdG9tRm4gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgcmV0dXJuIGN1c3RvbUZuKGFTdHIsIGJTdHIpO1xuICAgIH1cbiAgICByZXR1cm4gY29tcGFyZVN0cmluZ3MoYVN0ciwgYlN0cik7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNTb21lKGlucHV0KSB7XG4gICAgcmV0dXJuIGlucHV0ICE9IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gYXNzZXJ0U29tZShpbnB1dCwgbWVzc2FnZSA9ICdWYWx1ZSBzaG91bGQgYmUgc29tZXRoaW5nJykge1xuICAgIGlmIChpbnB1dCA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/helpers.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js":
/*!****************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isAsyncIterable: () => (/* binding */ isAsyncIterable)\n/* harmony export */ });\nfunction isAsyncIterable(value) {\n    return value?.[Symbol.asyncIterator] != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0FzeW5jSXRlcmFibGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9pc0FzeW5jSXRlcmFibGUuanM/OTY4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gaXNBc3luY0l0ZXJhYmxlKHZhbHVlKSB7XG4gICAgcmV0dXJuIHZhbHVlPy5bU3ltYm9sLmFzeW5jSXRlcmF0b3JdICE9IG51bGw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/isAsyncIterable.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/mapSchema.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/mapSchema.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   correctASTNodes: () => (/* binding */ correctASTNodes),\n/* harmony export */   mapSchema: () => (/* binding */ mapSchema)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/schema.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var _getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getObjectTypeFromTypeMap.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getObjectTypeFromTypeMap.js\");\n/* harmony import */ var _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Interfaces.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/Interfaces.js\");\n/* harmony import */ var _rewire_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./rewire.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rewire.js\");\n/* harmony import */ var _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformInputValue.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/transformInputValue.js\");\n\n\n\n\n\nfunction mapSchema(schema, schemaMapper = {}) {\n    const newTypeMap = mapArguments(mapFields(mapTypes(mapDefaultValues(mapEnumValues(mapTypes(mapDefaultValues(schema.getTypeMap(), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.serializeInputValue), schema, schemaMapper, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, _transformInputValue_js__WEBPACK_IMPORTED_MODULE_0__.parseInputValue), schema, schemaMapper, type => !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isLeafType)(type)), schema, schemaMapper), schema, schemaMapper);\n    const originalDirectives = schema.getDirectives();\n    const newDirectives = mapDirectives(originalDirectives, schema, schemaMapper);\n    const { typeMap, directives } = (0,_rewire_js__WEBPACK_IMPORTED_MODULE_2__.rewireTypes)(newTypeMap, newDirectives);\n    return new graphql__WEBPACK_IMPORTED_MODULE_3__.GraphQLSchema({\n        ...schema.toConfig(),\n        query: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getQueryType())),\n        mutation: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getMutationType())),\n        subscription: (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(typeMap, (0,_getObjectTypeFromTypeMap_js__WEBPACK_IMPORTED_MODULE_4__.getObjectTypeFromTypeMap)(newTypeMap, schema.getSubscriptionType())),\n        types: Object.values(typeMap),\n        directives,\n    });\n}\nfunction mapTypes(originalTypeMap, schema, schemaMapper, testFn = () => true) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (originalType == null || !testFn(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const typeMapper = getTypeMapper(schema, schemaMapper, typeName);\n            if (typeMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const maybeNewType = typeMapper(originalType, schema);\n            if (maybeNewType === undefined) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            newTypeMap[typeName] = maybeNewType;\n        }\n    }\n    return newTypeMap;\n}\nfunction mapEnumValues(originalTypeMap, schema, schemaMapper) {\n    const enumValueMapper = getEnumValueMapper(schemaMapper);\n    if (!enumValueMapper) {\n        return originalTypeMap;\n    }\n    return mapTypes(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE]: type => {\n            const config = type.toConfig();\n            const originalEnumValueConfigMap = config.values;\n            const newEnumValueConfigMap = {};\n            for (const externalValue in originalEnumValueConfigMap) {\n                const originalEnumValueConfig = originalEnumValueConfigMap[externalValue];\n                const mappedEnumValue = enumValueMapper(originalEnumValueConfig, type.name, schema, externalValue);\n                if (mappedEnumValue === undefined) {\n                    newEnumValueConfigMap[externalValue] = originalEnumValueConfig;\n                }\n                else if (Array.isArray(mappedEnumValue)) {\n                    const [newExternalValue, newEnumValueConfig] = mappedEnumValue;\n                    newEnumValueConfigMap[newExternalValue] =\n                        newEnumValueConfig === undefined ? originalEnumValueConfig : newEnumValueConfig;\n                }\n                else if (mappedEnumValue !== null) {\n                    newEnumValueConfigMap[externalValue] = mappedEnumValue;\n                }\n            }\n            return correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType({\n                ...config,\n                values: newEnumValueConfigMap,\n            }));\n        },\n    }, type => (0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type));\n}\nfunction mapDefaultValues(originalTypeMap, schema, fn) {\n    const newTypeMap = mapArguments(originalTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT]: argumentConfig => {\n            if (argumentConfig.defaultValue === undefined) {\n                return argumentConfig;\n            }\n            const maybeNewType = getNewType(originalTypeMap, argumentConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...argumentConfig,\n                    defaultValue: fn(maybeNewType, argumentConfig.defaultValue),\n                };\n            }\n        },\n    });\n    return mapFields(newTypeMap, schema, {\n        [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD]: inputFieldConfig => {\n            if (inputFieldConfig.defaultValue === undefined) {\n                return inputFieldConfig;\n            }\n            const maybeNewType = getNewType(newTypeMap, inputFieldConfig.type);\n            if (maybeNewType != null) {\n                return {\n                    ...inputFieldConfig,\n                    defaultValue: fn(maybeNewType, inputFieldConfig.defaultValue),\n                };\n            }\n        },\n    });\n}\nfunction getNewType(newTypeMap, type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n        const newType = getNewType(newTypeMap, type.ofType);\n        return newType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(newType) : null;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n        const newType = newTypeMap[type.name];\n        return newType != null ? newType : null;\n    }\n    return null;\n}\nfunction mapFields(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType) &&\n                !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const fieldMapper = getFieldMapper(schema, schemaMapper, typeName);\n            if (fieldMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const mappedField = fieldMapper(originalFieldConfig, fieldName, typeName, schema);\n                if (mappedField === undefined) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                }\n                else if (Array.isArray(mappedField)) {\n                    const [newFieldName, newFieldConfig] = mappedField;\n                    if (newFieldConfig.astNode != null) {\n                        newFieldConfig.astNode = {\n                            ...newFieldConfig.astNode,\n                            name: {\n                                ...newFieldConfig.astNode.name,\n                                value: newFieldName,\n                            },\n                        };\n                    }\n                    newFieldConfigMap[newFieldName] =\n                        newFieldConfig === undefined ? originalFieldConfig : newFieldConfig;\n                }\n                else if (mappedField !== null) {\n                    newFieldConfigMap[fieldName] = mappedField;\n                }\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n            else {\n                newTypeMap[typeName] = correctASTNodes(new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                }));\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapArguments(originalTypeMap, schema, schemaMapper) {\n    const newTypeMap = {};\n    for (const typeName in originalTypeMap) {\n        if (!typeName.startsWith('__')) {\n            const originalType = originalTypeMap[typeName];\n            if (!(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType) && !(0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const argumentMapper = getArgumentMapper(schemaMapper);\n            if (argumentMapper == null) {\n                newTypeMap[typeName] = originalType;\n                continue;\n            }\n            const config = originalType.toConfig();\n            const originalFieldConfigMap = config.fields;\n            const newFieldConfigMap = {};\n            for (const fieldName in originalFieldConfigMap) {\n                const originalFieldConfig = originalFieldConfigMap[fieldName];\n                const originalArgumentConfigMap = originalFieldConfig.args;\n                if (originalArgumentConfigMap == null) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const argumentNames = Object.keys(originalArgumentConfigMap);\n                if (!argumentNames.length) {\n                    newFieldConfigMap[fieldName] = originalFieldConfig;\n                    continue;\n                }\n                const newArgumentConfigMap = {};\n                for (const argumentName of argumentNames) {\n                    const originalArgumentConfig = originalArgumentConfigMap[argumentName];\n                    const mappedArgument = argumentMapper(originalArgumentConfig, fieldName, typeName, schema);\n                    if (mappedArgument === undefined) {\n                        newArgumentConfigMap[argumentName] = originalArgumentConfig;\n                    }\n                    else if (Array.isArray(mappedArgument)) {\n                        const [newArgumentName, newArgumentConfig] = mappedArgument;\n                        newArgumentConfigMap[newArgumentName] = newArgumentConfig;\n                    }\n                    else if (mappedArgument !== null) {\n                        newArgumentConfigMap[argumentName] = mappedArgument;\n                    }\n                }\n                newFieldConfigMap[fieldName] = {\n                    ...originalFieldConfig,\n                    args: newArgumentConfigMap,\n                };\n            }\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(originalType)) {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n            else {\n                newTypeMap[typeName] = new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType({\n                    ...config,\n                    fields: newFieldConfigMap,\n                });\n            }\n        }\n    }\n    return newTypeMap;\n}\nfunction mapDirectives(originalDirectives, schema, schemaMapper) {\n    const directiveMapper = getDirectiveMapper(schemaMapper);\n    if (directiveMapper == null) {\n        return originalDirectives.slice();\n    }\n    const newDirectives = [];\n    for (const directive of originalDirectives) {\n        const mappedDirective = directiveMapper(directive, schema);\n        if (mappedDirective === undefined) {\n            newDirectives.push(directive);\n        }\n        else if (mappedDirective !== null) {\n            newDirectives.push(mappedDirective);\n        }\n    }\n    return newDirectives;\n}\nfunction getTypeSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.TYPE];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_TYPE);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_OBJECT, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ABSTRACT_TYPE, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.UNION_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_TYPE);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SCALAR_TYPE);\n    }\n    return specifiers;\n}\nfunction getTypeMapper(schema, schemaMapper, typeName) {\n    const specifiers = getTypeSpecifiers(schema, typeName);\n    let typeMapper;\n    const stack = [...specifiers];\n    while (!typeMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        typeMapper = schemaMapper[next];\n    }\n    return typeMapper != null ? typeMapper : null;\n}\nfunction getFieldSpecifiers(schema, typeName) {\n    const type = schema.getType(typeName);\n    const specifiers = [_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.FIELD];\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.OBJECT_FIELD);\n        if (typeName === schema.getQueryType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.QUERY_ROOT_FIELD);\n        }\n        else if (typeName === schema.getMutationType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.MUTATION_ROOT_FIELD);\n        }\n        else if (typeName === schema.getSubscriptionType()?.name) {\n            specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ROOT_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.SUBSCRIPTION_ROOT_FIELD);\n        }\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.COMPOSITE_FIELD, _Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INTERFACE_FIELD);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        specifiers.push(_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.INPUT_OBJECT_FIELD);\n    }\n    return specifiers;\n}\nfunction getFieldMapper(schema, schemaMapper, typeName) {\n    const specifiers = getFieldSpecifiers(schema, typeName);\n    let fieldMapper;\n    const stack = [...specifiers];\n    while (!fieldMapper && stack.length > 0) {\n        // It is safe to use the ! operator here as we check the length.\n        const next = stack.pop();\n        // TODO: fix this as unknown cast\n        fieldMapper = schemaMapper[next];\n    }\n    return fieldMapper ?? null;\n}\nfunction getArgumentMapper(schemaMapper) {\n    const argumentMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ARGUMENT];\n    return argumentMapper != null ? argumentMapper : null;\n}\nfunction getDirectiveMapper(schemaMapper) {\n    const directiveMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.DIRECTIVE];\n    return directiveMapper != null ? directiveMapper : null;\n}\nfunction getEnumValueMapper(schemaMapper) {\n    const enumValueMapper = schemaMapper[_Interfaces_js__WEBPACK_IMPORTED_MODULE_5__.MapperKind.ENUM_VALUE];\n    return enumValueMapper != null ? enumValueMapper : null;\n}\nfunction correctASTNodes(type) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INTERFACE_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const fields = [];\n            for (const fieldName in config.fields) {\n                const fieldConfig = config.fields[fieldName];\n                if (fieldConfig.astNode != null) {\n                    fields.push(fieldConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_DEFINITION,\n                fields,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                kind: graphql__WEBPACK_IMPORTED_MODULE_6__.Kind.INPUT_OBJECT_TYPE_EXTENSION,\n                fields: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(config);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n        const config = type.toConfig();\n        if (config.astNode != null) {\n            const values = [];\n            for (const enumKey in config.values) {\n                const enumValueConfig = config.values[enumKey];\n                if (enumValueConfig.astNode != null) {\n                    values.push(enumValueConfig.astNode);\n                }\n            }\n            config.astNode = {\n                ...config.astNode,\n                values,\n            };\n        }\n        if (config.extensionASTNodes != null) {\n            config.extensionASTNodes = config.extensionASTNodes.map(node => ({\n                ...node,\n                values: undefined,\n            }));\n        }\n        return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(config);\n    }\n    else {\n        return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tYXBTY2hlbWEuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJTO0FBQ2xPO0FBQzNCO0FBQ0o7QUFDc0M7QUFDekUsNENBQTRDO0FBQ25ELDZJQUE2SSx3RUFBbUIsaUNBQWlDLG1EQUFVLHdDQUF3QyxvRUFBZSxrQ0FBa0MsbURBQVU7QUFDOVM7QUFDQTtBQUNBLFlBQVksc0JBQXNCLEVBQUUsdURBQVc7QUFDL0MsZUFBZSxrREFBYTtBQUM1QjtBQUNBLGVBQWUsc0ZBQXdCLFVBQVUsc0ZBQXdCO0FBQ3pFLGtCQUFrQixzRkFBd0IsVUFBVSxzRkFBd0I7QUFDNUUsc0JBQXNCLHNGQUF3QixVQUFVLHNGQUF3QjtBQUNoRjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxzREFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsb0RBQWU7QUFDdEQ7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSyxVQUFVLG1EQUFVO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBLFNBQVMsc0RBQVU7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0EsU0FBUyxzREFBVTtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQTtBQUNBLFFBQVEsbURBQVU7QUFDbEI7QUFDQSxxQ0FBcUMsZ0RBQVc7QUFDaEQ7QUFDQSxhQUFhLHNEQUFhO0FBQzFCO0FBQ0EscUNBQXFDLG1EQUFjO0FBQ25EO0FBQ0EsYUFBYSxvREFBVztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQixxREFBWTtBQUM3QixpQkFBaUIsd0RBQWU7QUFDaEMsaUJBQWlCLDBEQUFpQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IscURBQVk7QUFDNUIsMkRBQTJELHNEQUFpQjtBQUM1RTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0EscUJBQXFCLHdEQUFlO0FBQ3BDLDJEQUEyRCx5REFBb0I7QUFDL0U7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0EsMkRBQTJELDJEQUFzQjtBQUNqRjtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLHFEQUFZLG1CQUFtQix3REFBZTtBQUMvRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixxREFBWTtBQUM1QiwyQ0FBMkMsc0RBQWlCO0FBQzVEO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQSxxQkFBcUIsd0RBQWU7QUFDcEMsMkNBQTJDLHlEQUFvQjtBQUMvRDtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQSwyQ0FBMkMsMkRBQXNCO0FBQ2pFO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHNEQUFVO0FBQ2xDLFFBQVEscURBQVk7QUFDcEIsd0JBQXdCLHNEQUFVLGlCQUFpQixzREFBVTtBQUM3RDtBQUNBLDRCQUE0QixzREFBVSxjQUFjLHNEQUFVO0FBQzlEO0FBQ0E7QUFDQSw0QkFBNEIsc0RBQVUsY0FBYyxzREFBVTtBQUM5RDtBQUNBO0FBQ0EsNEJBQTRCLHNEQUFVLGNBQWMsc0RBQVU7QUFDOUQ7QUFDQTtBQUNBLGFBQWEsMERBQWlCO0FBQzlCLHdCQUF3QixzREFBVTtBQUNsQztBQUNBLGFBQWEsd0RBQWU7QUFDNUIsd0JBQXdCLHNEQUFVLGlCQUFpQixzREFBVSxnQkFBZ0Isc0RBQVU7QUFDdkY7QUFDQSxhQUFhLG9EQUFXO0FBQ3hCLHdCQUF3QixzREFBVSxpQkFBaUIsc0RBQVUsZ0JBQWdCLHNEQUFVO0FBQ3ZGO0FBQ0EsYUFBYSxtREFBVTtBQUN2Qix3QkFBd0Isc0RBQVU7QUFDbEM7QUFDQSxhQUFhLHFEQUFZO0FBQ3pCLHdCQUF3QixzREFBVTtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixzREFBVTtBQUNsQyxRQUFRLHFEQUFZO0FBQ3BCLHdCQUF3QixzREFBVSxrQkFBa0Isc0RBQVU7QUFDOUQ7QUFDQSw0QkFBNEIsc0RBQVUsYUFBYSxzREFBVTtBQUM3RDtBQUNBO0FBQ0EsNEJBQTRCLHNEQUFVLGFBQWEsc0RBQVU7QUFDN0Q7QUFDQTtBQUNBLDRCQUE0QixzREFBVSxhQUFhLHNEQUFVO0FBQzdEO0FBQ0E7QUFDQSxhQUFhLHdEQUFlO0FBQzVCLHdCQUF3QixzREFBVSxrQkFBa0Isc0RBQVU7QUFDOUQ7QUFDQSxhQUFhLDBEQUFpQjtBQUM5Qix3QkFBd0Isc0RBQVU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0Msc0RBQVU7QUFDbEQ7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLHNEQUFVO0FBQ25EO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QyxzREFBVTtBQUNuRDtBQUNBO0FBQ087QUFDUCxRQUFRLHFEQUFZO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUNBQUk7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLHlDQUFJO0FBQzFCO0FBQ0EsYUFBYTtBQUNiO0FBQ0EsbUJBQW1CLHNEQUFpQjtBQUNwQztBQUNBLGFBQWEsd0RBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5Q0FBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUNBQUk7QUFDMUI7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtQkFBbUIseURBQW9CO0FBQ3ZDO0FBQ0EsYUFBYSwwREFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5Q0FBSTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUNBQUk7QUFDMUI7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtQkFBbUIsMkRBQXNCO0FBQ3pDO0FBQ0EsYUFBYSxtREFBVTtBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQSxtQkFBbUIsb0RBQWU7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9tYXBTY2hlbWEuanM/MzQ4YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBHcmFwaFFMRW51bVR5cGUsIEdyYXBoUUxJbnB1dE9iamVjdFR5cGUsIEdyYXBoUUxJbnRlcmZhY2VUeXBlLCBHcmFwaFFMTGlzdCwgR3JhcGhRTE5vbk51bGwsIEdyYXBoUUxPYmplY3RUeXBlLCBHcmFwaFFMU2NoZW1hLCBpc0VudW1UeXBlLCBpc0lucHV0T2JqZWN0VHlwZSwgaXNJbnRlcmZhY2VUeXBlLCBpc0xlYWZUeXBlLCBpc0xpc3RUeXBlLCBpc05hbWVkVHlwZSwgaXNOb25OdWxsVHlwZSwgaXNPYmplY3RUeXBlLCBpc1NjYWxhclR5cGUsIGlzVW5pb25UeXBlLCBLaW5kLCB9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHsgZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwIH0gZnJvbSAnLi9nZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAuanMnO1xuaW1wb3J0IHsgTWFwcGVyS2luZCwgfSBmcm9tICcuL0ludGVyZmFjZXMuanMnO1xuaW1wb3J0IHsgcmV3aXJlVHlwZXMgfSBmcm9tICcuL3Jld2lyZS5qcyc7XG5pbXBvcnQgeyBwYXJzZUlucHV0VmFsdWUsIHNlcmlhbGl6ZUlucHV0VmFsdWUgfSBmcm9tICcuL3RyYW5zZm9ybUlucHV0VmFsdWUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIG1hcFNjaGVtYShzY2hlbWEsIHNjaGVtYU1hcHBlciA9IHt9KSB7XG4gICAgY29uc3QgbmV3VHlwZU1hcCA9IG1hcEFyZ3VtZW50cyhtYXBGaWVsZHMobWFwVHlwZXMobWFwRGVmYXVsdFZhbHVlcyhtYXBFbnVtVmFsdWVzKG1hcFR5cGVzKG1hcERlZmF1bHRWYWx1ZXMoc2NoZW1hLmdldFR5cGVNYXAoKSwgc2NoZW1hLCBzZXJpYWxpemVJbnB1dFZhbHVlKSwgc2NoZW1hLCBzY2hlbWFNYXBwZXIsIHR5cGUgPT4gaXNMZWFmVHlwZSh0eXBlKSksIHNjaGVtYSwgc2NoZW1hTWFwcGVyKSwgc2NoZW1hLCBwYXJzZUlucHV0VmFsdWUpLCBzY2hlbWEsIHNjaGVtYU1hcHBlciwgdHlwZSA9PiAhaXNMZWFmVHlwZSh0eXBlKSksIHNjaGVtYSwgc2NoZW1hTWFwcGVyKSwgc2NoZW1hLCBzY2hlbWFNYXBwZXIpO1xuICAgIGNvbnN0IG9yaWdpbmFsRGlyZWN0aXZlcyA9IHNjaGVtYS5nZXREaXJlY3RpdmVzKCk7XG4gICAgY29uc3QgbmV3RGlyZWN0aXZlcyA9IG1hcERpcmVjdGl2ZXMob3JpZ2luYWxEaXJlY3RpdmVzLCBzY2hlbWEsIHNjaGVtYU1hcHBlcik7XG4gICAgY29uc3QgeyB0eXBlTWFwLCBkaXJlY3RpdmVzIH0gPSByZXdpcmVUeXBlcyhuZXdUeXBlTWFwLCBuZXdEaXJlY3RpdmVzKTtcbiAgICByZXR1cm4gbmV3IEdyYXBoUUxTY2hlbWEoe1xuICAgICAgICAuLi5zY2hlbWEudG9Db25maWcoKSxcbiAgICAgICAgcXVlcnk6IGdldE9iamVjdFR5cGVGcm9tVHlwZU1hcCh0eXBlTWFwLCBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAobmV3VHlwZU1hcCwgc2NoZW1hLmdldFF1ZXJ5VHlwZSgpKSksXG4gICAgICAgIG11dGF0aW9uOiBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAodHlwZU1hcCwgZ2V0T2JqZWN0VHlwZUZyb21UeXBlTWFwKG5ld1R5cGVNYXAsIHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKSkpLFxuICAgICAgICBzdWJzY3JpcHRpb246IGdldE9iamVjdFR5cGVGcm9tVHlwZU1hcCh0eXBlTWFwLCBnZXRPYmplY3RUeXBlRnJvbVR5cGVNYXAobmV3VHlwZU1hcCwgc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKSkpLFxuICAgICAgICB0eXBlczogT2JqZWN0LnZhbHVlcyh0eXBlTWFwKSxcbiAgICAgICAgZGlyZWN0aXZlcyxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIG1hcFR5cGVzKG9yaWdpbmFsVHlwZU1hcCwgc2NoZW1hLCBzY2hlbWFNYXBwZXIsIHRlc3RGbiA9ICgpID0+IHRydWUpIHtcbiAgICBjb25zdCBuZXdUeXBlTWFwID0ge307XG4gICAgZm9yIChjb25zdCB0eXBlTmFtZSBpbiBvcmlnaW5hbFR5cGVNYXApIHtcbiAgICAgICAgaWYgKCF0eXBlTmFtZS5zdGFydHNXaXRoKCdfXycpKSB7XG4gICAgICAgICAgICBjb25zdCBvcmlnaW5hbFR5cGUgPSBvcmlnaW5hbFR5cGVNYXBbdHlwZU5hbWVdO1xuICAgICAgICAgICAgaWYgKG9yaWdpbmFsVHlwZSA9PSBudWxsIHx8ICF0ZXN0Rm4ob3JpZ2luYWxUeXBlKSkge1xuICAgICAgICAgICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gb3JpZ2luYWxUeXBlO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgdHlwZU1hcHBlciA9IGdldFR5cGVNYXBwZXIoc2NoZW1hLCBzY2hlbWFNYXBwZXIsIHR5cGVOYW1lKTtcbiAgICAgICAgICAgIGlmICh0eXBlTWFwcGVyID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBuZXdUeXBlTWFwW3R5cGVOYW1lXSA9IG9yaWdpbmFsVHlwZTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG1heWJlTmV3VHlwZSA9IHR5cGVNYXBwZXIob3JpZ2luYWxUeXBlLCBzY2hlbWEpO1xuICAgICAgICAgICAgaWYgKG1heWJlTmV3VHlwZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgbmV3VHlwZU1hcFt0eXBlTmFtZV0gPSBvcmlnaW5hbFR5cGU7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBuZXdUeXBlTWFwW3R5cGVOYW1lXSA9IG1heWJlTmV3VHlwZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3VHlwZU1hcDtcbn1cbmZ1bmN0aW9uIG1hcEVudW1WYWx1ZXMob3JpZ2luYWxUeXBlTWFwLCBzY2hlbWEsIHNjaGVtYU1hcHBlcikge1xuICAgIGNvbnN0IGVudW1WYWx1ZU1hcHBlciA9IGdldEVudW1WYWx1ZU1hcHBlcihzY2hlbWFNYXBwZXIpO1xuICAgIGlmICghZW51bVZhbHVlTWFwcGVyKSB7XG4gICAgICAgIHJldHVybiBvcmlnaW5hbFR5cGVNYXA7XG4gICAgfVxuICAgIHJldHVybiBtYXBUeXBlcyhvcmlnaW5hbFR5cGVNYXAsIHNjaGVtYSwge1xuICAgICAgICBbTWFwcGVyS2luZC5FTlVNX1RZUEVdOiB0eXBlID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsRW51bVZhbHVlQ29uZmlnTWFwID0gY29uZmlnLnZhbHVlcztcbiAgICAgICAgICAgIGNvbnN0IG5ld0VudW1WYWx1ZUNvbmZpZ01hcCA9IHt9O1xuICAgICAgICAgICAgZm9yIChjb25zdCBleHRlcm5hbFZhbHVlIGluIG9yaWdpbmFsRW51bVZhbHVlQ29uZmlnTWFwKSB7XG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxFbnVtVmFsdWVDb25maWcgPSBvcmlnaW5hbEVudW1WYWx1ZUNvbmZpZ01hcFtleHRlcm5hbFZhbHVlXTtcbiAgICAgICAgICAgICAgICBjb25zdCBtYXBwZWRFbnVtVmFsdWUgPSBlbnVtVmFsdWVNYXBwZXIob3JpZ2luYWxFbnVtVmFsdWVDb25maWcsIHR5cGUubmFtZSwgc2NoZW1hLCBleHRlcm5hbFZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAobWFwcGVkRW51bVZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3RW51bVZhbHVlQ29uZmlnTWFwW2V4dGVybmFsVmFsdWVdID0gb3JpZ2luYWxFbnVtVmFsdWVDb25maWc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKEFycmF5LmlzQXJyYXkobWFwcGVkRW51bVZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBbbmV3RXh0ZXJuYWxWYWx1ZSwgbmV3RW51bVZhbHVlQ29uZmlnXSA9IG1hcHBlZEVudW1WYWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgbmV3RW51bVZhbHVlQ29uZmlnTWFwW25ld0V4dGVybmFsVmFsdWVdID1cbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0VudW1WYWx1ZUNvbmZpZyA9PT0gdW5kZWZpbmVkID8gb3JpZ2luYWxFbnVtVmFsdWVDb25maWcgOiBuZXdFbnVtVmFsdWVDb25maWc7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2UgaWYgKG1hcHBlZEVudW1WYWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBuZXdFbnVtVmFsdWVDb25maWdNYXBbZXh0ZXJuYWxWYWx1ZV0gPSBtYXBwZWRFbnVtVmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGNvcnJlY3RBU1ROb2RlcyhuZXcgR3JhcGhRTEVudW1UeXBlKHtcbiAgICAgICAgICAgICAgICAuLi5jb25maWcsXG4gICAgICAgICAgICAgICAgdmFsdWVzOiBuZXdFbnVtVmFsdWVDb25maWdNYXAsXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH0sXG4gICAgfSwgdHlwZSA9PiBpc0VudW1UeXBlKHR5cGUpKTtcbn1cbmZ1bmN0aW9uIG1hcERlZmF1bHRWYWx1ZXMob3JpZ2luYWxUeXBlTWFwLCBzY2hlbWEsIGZuKSB7XG4gICAgY29uc3QgbmV3VHlwZU1hcCA9IG1hcEFyZ3VtZW50cyhvcmlnaW5hbFR5cGVNYXAsIHNjaGVtYSwge1xuICAgICAgICBbTWFwcGVyS2luZC5BUkdVTUVOVF06IGFyZ3VtZW50Q29uZmlnID0+IHtcbiAgICAgICAgICAgIGlmIChhcmd1bWVudENvbmZpZy5kZWZhdWx0VmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBhcmd1bWVudENvbmZpZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG1heWJlTmV3VHlwZSA9IGdldE5ld1R5cGUob3JpZ2luYWxUeXBlTWFwLCBhcmd1bWVudENvbmZpZy50eXBlKTtcbiAgICAgICAgICAgIGlmIChtYXliZU5ld1R5cGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmFyZ3VtZW50Q29uZmlnLFxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0VmFsdWU6IGZuKG1heWJlTmV3VHlwZSwgYXJndW1lbnRDb25maWcuZGVmYXVsdFZhbHVlKSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xuICAgIHJldHVybiBtYXBGaWVsZHMobmV3VHlwZU1hcCwgc2NoZW1hLCB7XG4gICAgICAgIFtNYXBwZXJLaW5kLklOUFVUX09CSkVDVF9GSUVMRF06IGlucHV0RmllbGRDb25maWcgPT4ge1xuICAgICAgICAgICAgaWYgKGlucHV0RmllbGRDb25maWcuZGVmYXVsdFZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaW5wdXRGaWVsZENvbmZpZztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IG1heWJlTmV3VHlwZSA9IGdldE5ld1R5cGUobmV3VHlwZU1hcCwgaW5wdXRGaWVsZENvbmZpZy50eXBlKTtcbiAgICAgICAgICAgIGlmIChtYXliZU5ld1R5cGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIC4uLmlucHV0RmllbGRDb25maWcsXG4gICAgICAgICAgICAgICAgICAgIGRlZmF1bHRWYWx1ZTogZm4obWF5YmVOZXdUeXBlLCBpbnB1dEZpZWxkQ29uZmlnLmRlZmF1bHRWYWx1ZSksXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGdldE5ld1R5cGUobmV3VHlwZU1hcCwgdHlwZSkge1xuICAgIGlmIChpc0xpc3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIGNvbnN0IG5ld1R5cGUgPSBnZXROZXdUeXBlKG5ld1R5cGVNYXAsIHR5cGUub2ZUeXBlKTtcbiAgICAgICAgcmV0dXJuIG5ld1R5cGUgIT0gbnVsbCA/IG5ldyBHcmFwaFFMTGlzdChuZXdUeXBlKSA6IG51bGw7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzTm9uTnVsbFR5cGUodHlwZSkpIHtcbiAgICAgICAgY29uc3QgbmV3VHlwZSA9IGdldE5ld1R5cGUobmV3VHlwZU1hcCwgdHlwZS5vZlR5cGUpO1xuICAgICAgICByZXR1cm4gbmV3VHlwZSAhPSBudWxsID8gbmV3IEdyYXBoUUxOb25OdWxsKG5ld1R5cGUpIDogbnVsbDtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNOYW1lZFR5cGUodHlwZSkpIHtcbiAgICAgICAgY29uc3QgbmV3VHlwZSA9IG5ld1R5cGVNYXBbdHlwZS5uYW1lXTtcbiAgICAgICAgcmV0dXJuIG5ld1R5cGUgIT0gbnVsbCA/IG5ld1R5cGUgOiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbmZ1bmN0aW9uIG1hcEZpZWxkcyhvcmlnaW5hbFR5cGVNYXAsIHNjaGVtYSwgc2NoZW1hTWFwcGVyKSB7XG4gICAgY29uc3QgbmV3VHlwZU1hcCA9IHt9O1xuICAgIGZvciAoY29uc3QgdHlwZU5hbWUgaW4gb3JpZ2luYWxUeXBlTWFwKSB7XG4gICAgICAgIGlmICghdHlwZU5hbWUuc3RhcnRzV2l0aCgnX18nKSkge1xuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxUeXBlID0gb3JpZ2luYWxUeXBlTWFwW3R5cGVOYW1lXTtcbiAgICAgICAgICAgIGlmICghaXNPYmplY3RUeXBlKG9yaWdpbmFsVHlwZSkgJiZcbiAgICAgICAgICAgICAgICAhaXNJbnRlcmZhY2VUeXBlKG9yaWdpbmFsVHlwZSkgJiZcbiAgICAgICAgICAgICAgICAhaXNJbnB1dE9iamVjdFR5cGUob3JpZ2luYWxUeXBlKSkge1xuICAgICAgICAgICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gb3JpZ2luYWxUeXBlO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgZmllbGRNYXBwZXIgPSBnZXRGaWVsZE1hcHBlcihzY2hlbWEsIHNjaGVtYU1hcHBlciwgdHlwZU5hbWUpO1xuICAgICAgICAgICAgaWYgKGZpZWxkTWFwcGVyID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBuZXdUeXBlTWFwW3R5cGVOYW1lXSA9IG9yaWdpbmFsVHlwZTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IG9yaWdpbmFsVHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxGaWVsZENvbmZpZ01hcCA9IGNvbmZpZy5maWVsZHM7XG4gICAgICAgICAgICBjb25zdCBuZXdGaWVsZENvbmZpZ01hcCA9IHt9O1xuICAgICAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gb3JpZ2luYWxGaWVsZENvbmZpZ01hcCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsRmllbGRDb25maWcgPSBvcmlnaW5hbEZpZWxkQ29uZmlnTWFwW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgY29uc3QgbWFwcGVkRmllbGQgPSBmaWVsZE1hcHBlcihvcmlnaW5hbEZpZWxkQ29uZmlnLCBmaWVsZE5hbWUsIHR5cGVOYW1lLCBzY2hlbWEpO1xuICAgICAgICAgICAgICAgIGlmIChtYXBwZWRGaWVsZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld0ZpZWxkQ29uZmlnTWFwW2ZpZWxkTmFtZV0gPSBvcmlnaW5hbEZpZWxkQ29uZmlnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIGlmIChBcnJheS5pc0FycmF5KG1hcHBlZEZpZWxkKSkge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBbbmV3RmllbGROYW1lLCBuZXdGaWVsZENvbmZpZ10gPSBtYXBwZWRGaWVsZDtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0ZpZWxkQ29uZmlnLmFzdE5vZGUgIT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3RmllbGRDb25maWcuYXN0Tm9kZSA9IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAuLi5uZXdGaWVsZENvbmZpZy5hc3ROb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4ubmV3RmllbGRDb25maWcuYXN0Tm9kZS5uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogbmV3RmllbGROYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIG5ld0ZpZWxkQ29uZmlnTWFwW25ld0ZpZWxkTmFtZV0gPVxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3RmllbGRDb25maWcgPT09IHVuZGVmaW5lZCA/IG9yaWdpbmFsRmllbGRDb25maWcgOiBuZXdGaWVsZENvbmZpZztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAobWFwcGVkRmllbGQgIT09IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3RmllbGRDb25maWdNYXBbZmllbGROYW1lXSA9IG1hcHBlZEZpZWxkO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc09iamVjdFR5cGUob3JpZ2luYWxUeXBlKSkge1xuICAgICAgICAgICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gY29ycmVjdEFTVE5vZGVzKG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzOiBuZXdGaWVsZENvbmZpZ01hcCxcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChpc0ludGVyZmFjZVR5cGUob3JpZ2luYWxUeXBlKSkge1xuICAgICAgICAgICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gY29ycmVjdEFTVE5vZGVzKG5ldyBHcmFwaFFMSW50ZXJmYWNlVHlwZSh7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzOiBuZXdGaWVsZENvbmZpZ01hcCxcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBuZXdUeXBlTWFwW3R5cGVOYW1lXSA9IGNvcnJlY3RBU1ROb2RlcyhuZXcgR3JhcGhRTElucHV0T2JqZWN0VHlwZSh7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzOiBuZXdGaWVsZENvbmZpZ01hcCxcbiAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ld1R5cGVNYXA7XG59XG5mdW5jdGlvbiBtYXBBcmd1bWVudHMob3JpZ2luYWxUeXBlTWFwLCBzY2hlbWEsIHNjaGVtYU1hcHBlcikge1xuICAgIGNvbnN0IG5ld1R5cGVNYXAgPSB7fTtcbiAgICBmb3IgKGNvbnN0IHR5cGVOYW1lIGluIG9yaWdpbmFsVHlwZU1hcCkge1xuICAgICAgICBpZiAoIXR5cGVOYW1lLnN0YXJ0c1dpdGgoJ19fJykpIHtcbiAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsVHlwZSA9IG9yaWdpbmFsVHlwZU1hcFt0eXBlTmFtZV07XG4gICAgICAgICAgICBpZiAoIWlzT2JqZWN0VHlwZShvcmlnaW5hbFR5cGUpICYmICFpc0ludGVyZmFjZVR5cGUob3JpZ2luYWxUeXBlKSkge1xuICAgICAgICAgICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gb3JpZ2luYWxUeXBlO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uc3QgYXJndW1lbnRNYXBwZXIgPSBnZXRBcmd1bWVudE1hcHBlcihzY2hlbWFNYXBwZXIpO1xuICAgICAgICAgICAgaWYgKGFyZ3VtZW50TWFwcGVyID09IG51bGwpIHtcbiAgICAgICAgICAgICAgICBuZXdUeXBlTWFwW3R5cGVOYW1lXSA9IG9yaWdpbmFsVHlwZTtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNvbmZpZyA9IG9yaWdpbmFsVHlwZS50b0NvbmZpZygpO1xuICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxGaWVsZENvbmZpZ01hcCA9IGNvbmZpZy5maWVsZHM7XG4gICAgICAgICAgICBjb25zdCBuZXdGaWVsZENvbmZpZ01hcCA9IHt9O1xuICAgICAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gb3JpZ2luYWxGaWVsZENvbmZpZ01hcCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IG9yaWdpbmFsRmllbGRDb25maWcgPSBvcmlnaW5hbEZpZWxkQ29uZmlnTWFwW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxBcmd1bWVudENvbmZpZ01hcCA9IG9yaWdpbmFsRmllbGRDb25maWcuYXJncztcbiAgICAgICAgICAgICAgICBpZiAob3JpZ2luYWxBcmd1bWVudENvbmZpZ01hcCA9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIG5ld0ZpZWxkQ29uZmlnTWFwW2ZpZWxkTmFtZV0gPSBvcmlnaW5hbEZpZWxkQ29uZmlnO1xuICAgICAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgY29uc3QgYXJndW1lbnROYW1lcyA9IE9iamVjdC5rZXlzKG9yaWdpbmFsQXJndW1lbnRDb25maWdNYXApO1xuICAgICAgICAgICAgICAgIGlmICghYXJndW1lbnROYW1lcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgbmV3RmllbGRDb25maWdNYXBbZmllbGROYW1lXSA9IG9yaWdpbmFsRmllbGRDb25maWc7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBjb25zdCBuZXdBcmd1bWVudENvbmZpZ01hcCA9IHt9O1xuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgYXJndW1lbnROYW1lIG9mIGFyZ3VtZW50TmFtZXMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3JpZ2luYWxBcmd1bWVudENvbmZpZyA9IG9yaWdpbmFsQXJndW1lbnRDb25maWdNYXBbYXJndW1lbnROYW1lXTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbWFwcGVkQXJndW1lbnQgPSBhcmd1bWVudE1hcHBlcihvcmlnaW5hbEFyZ3VtZW50Q29uZmlnLCBmaWVsZE5hbWUsIHR5cGVOYW1lLCBzY2hlbWEpO1xuICAgICAgICAgICAgICAgICAgICBpZiAobWFwcGVkQXJndW1lbnQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3QXJndW1lbnRDb25maWdNYXBbYXJndW1lbnROYW1lXSA9IG9yaWdpbmFsQXJndW1lbnRDb25maWc7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShtYXBwZWRBcmd1bWVudCkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IFtuZXdBcmd1bWVudE5hbWUsIG5ld0FyZ3VtZW50Q29uZmlnXSA9IG1hcHBlZEFyZ3VtZW50O1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3QXJndW1lbnRDb25maWdNYXBbbmV3QXJndW1lbnROYW1lXSA9IG5ld0FyZ3VtZW50Q29uZmlnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGVsc2UgaWYgKG1hcHBlZEFyZ3VtZW50ICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBuZXdBcmd1bWVudENvbmZpZ01hcFthcmd1bWVudE5hbWVdID0gbWFwcGVkQXJndW1lbnQ7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV3RmllbGRDb25maWdNYXBbZmllbGROYW1lXSA9IHtcbiAgICAgICAgICAgICAgICAgICAgLi4ub3JpZ2luYWxGaWVsZENvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgYXJnczogbmV3QXJndW1lbnRDb25maWdNYXAsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpc09iamVjdFR5cGUob3JpZ2luYWxUeXBlKSkge1xuICAgICAgICAgICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcbiAgICAgICAgICAgICAgICAgICAgLi4uY29uZmlnLFxuICAgICAgICAgICAgICAgICAgICBmaWVsZHM6IG5ld0ZpZWxkQ29uZmlnTWFwLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAoaXNJbnRlcmZhY2VUeXBlKG9yaWdpbmFsVHlwZSkpIHtcbiAgICAgICAgICAgICAgICBuZXdUeXBlTWFwW3R5cGVOYW1lXSA9IG5ldyBHcmFwaFFMSW50ZXJmYWNlVHlwZSh7XG4gICAgICAgICAgICAgICAgICAgIC4uLmNvbmZpZyxcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzOiBuZXdGaWVsZENvbmZpZ01hcCxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIG5ld1R5cGVNYXBbdHlwZU5hbWVdID0gbmV3IEdyYXBoUUxJbnB1dE9iamVjdFR5cGUoe1xuICAgICAgICAgICAgICAgICAgICAuLi5jb25maWcsXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkczogbmV3RmllbGRDb25maWdNYXAsXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5ld1R5cGVNYXA7XG59XG5mdW5jdGlvbiBtYXBEaXJlY3RpdmVzKG9yaWdpbmFsRGlyZWN0aXZlcywgc2NoZW1hLCBzY2hlbWFNYXBwZXIpIHtcbiAgICBjb25zdCBkaXJlY3RpdmVNYXBwZXIgPSBnZXREaXJlY3RpdmVNYXBwZXIoc2NoZW1hTWFwcGVyKTtcbiAgICBpZiAoZGlyZWN0aXZlTWFwcGVyID09IG51bGwpIHtcbiAgICAgICAgcmV0dXJuIG9yaWdpbmFsRGlyZWN0aXZlcy5zbGljZSgpO1xuICAgIH1cbiAgICBjb25zdCBuZXdEaXJlY3RpdmVzID0gW107XG4gICAgZm9yIChjb25zdCBkaXJlY3RpdmUgb2Ygb3JpZ2luYWxEaXJlY3RpdmVzKSB7XG4gICAgICAgIGNvbnN0IG1hcHBlZERpcmVjdGl2ZSA9IGRpcmVjdGl2ZU1hcHBlcihkaXJlY3RpdmUsIHNjaGVtYSk7XG4gICAgICAgIGlmIChtYXBwZWREaXJlY3RpdmUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbmV3RGlyZWN0aXZlcy5wdXNoKGRpcmVjdGl2ZSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobWFwcGVkRGlyZWN0aXZlICE9PSBudWxsKSB7XG4gICAgICAgICAgICBuZXdEaXJlY3RpdmVzLnB1c2gobWFwcGVkRGlyZWN0aXZlKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbmV3RGlyZWN0aXZlcztcbn1cbmZ1bmN0aW9uIGdldFR5cGVTcGVjaWZpZXJzKHNjaGVtYSwgdHlwZU5hbWUpIHtcbiAgICBjb25zdCB0eXBlID0gc2NoZW1hLmdldFR5cGUodHlwZU5hbWUpO1xuICAgIGNvbnN0IHNwZWNpZmllcnMgPSBbTWFwcGVyS2luZC5UWVBFXTtcbiAgICBpZiAoaXNPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIHNwZWNpZmllcnMucHVzaChNYXBwZXJLaW5kLkNPTVBPU0lURV9UWVBFLCBNYXBwZXJLaW5kLk9CSkVDVF9UWVBFKTtcbiAgICAgICAgaWYgKHR5cGVOYW1lID09PSBzY2hlbWEuZ2V0UXVlcnlUeXBlKCk/Lm5hbWUpIHtcbiAgICAgICAgICAgIHNwZWNpZmllcnMucHVzaChNYXBwZXJLaW5kLlJPT1RfT0JKRUNULCBNYXBwZXJLaW5kLlFVRVJZKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlTmFtZSA9PT0gc2NoZW1hLmdldE11dGF0aW9uVHlwZSgpPy5uYW1lKSB7XG4gICAgICAgICAgICBzcGVjaWZpZXJzLnB1c2goTWFwcGVyS2luZC5ST09UX09CSkVDVCwgTWFwcGVyS2luZC5NVVRBVElPTik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZU5hbWUgPT09IHNjaGVtYS5nZXRTdWJzY3JpcHRpb25UeXBlKCk/Lm5hbWUpIHtcbiAgICAgICAgICAgIHNwZWNpZmllcnMucHVzaChNYXBwZXJLaW5kLlJPT1RfT0JKRUNULCBNYXBwZXJLaW5kLlNVQlNDUklQVElPTik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaXNJbnB1dE9iamVjdFR5cGUodHlwZSkpIHtcbiAgICAgICAgc3BlY2lmaWVycy5wdXNoKE1hcHBlcktpbmQuSU5QVVRfT0JKRUNUX1RZUEUpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0ludGVyZmFjZVR5cGUodHlwZSkpIHtcbiAgICAgICAgc3BlY2lmaWVycy5wdXNoKE1hcHBlcktpbmQuQ09NUE9TSVRFX1RZUEUsIE1hcHBlcktpbmQuQUJTVFJBQ1RfVFlQRSwgTWFwcGVyS2luZC5JTlRFUkZBQ0VfVFlQRSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzVW5pb25UeXBlKHR5cGUpKSB7XG4gICAgICAgIHNwZWNpZmllcnMucHVzaChNYXBwZXJLaW5kLkNPTVBPU0lURV9UWVBFLCBNYXBwZXJLaW5kLkFCU1RSQUNUX1RZUEUsIE1hcHBlcktpbmQuVU5JT05fVFlQRSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzRW51bVR5cGUodHlwZSkpIHtcbiAgICAgICAgc3BlY2lmaWVycy5wdXNoKE1hcHBlcktpbmQuRU5VTV9UWVBFKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNTY2FsYXJUeXBlKHR5cGUpKSB7XG4gICAgICAgIHNwZWNpZmllcnMucHVzaChNYXBwZXJLaW5kLlNDQUxBUl9UWVBFKTtcbiAgICB9XG4gICAgcmV0dXJuIHNwZWNpZmllcnM7XG59XG5mdW5jdGlvbiBnZXRUeXBlTWFwcGVyKHNjaGVtYSwgc2NoZW1hTWFwcGVyLCB0eXBlTmFtZSkge1xuICAgIGNvbnN0IHNwZWNpZmllcnMgPSBnZXRUeXBlU3BlY2lmaWVycyhzY2hlbWEsIHR5cGVOYW1lKTtcbiAgICBsZXQgdHlwZU1hcHBlcjtcbiAgICBjb25zdCBzdGFjayA9IFsuLi5zcGVjaWZpZXJzXTtcbiAgICB3aGlsZSAoIXR5cGVNYXBwZXIgJiYgc3RhY2subGVuZ3RoID4gMCkge1xuICAgICAgICAvLyBJdCBpcyBzYWZlIHRvIHVzZSB0aGUgISBvcGVyYXRvciBoZXJlIGFzIHdlIGNoZWNrIHRoZSBsZW5ndGguXG4gICAgICAgIGNvbnN0IG5leHQgPSBzdGFjay5wb3AoKTtcbiAgICAgICAgdHlwZU1hcHBlciA9IHNjaGVtYU1hcHBlcltuZXh0XTtcbiAgICB9XG4gICAgcmV0dXJuIHR5cGVNYXBwZXIgIT0gbnVsbCA/IHR5cGVNYXBwZXIgOiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0RmllbGRTcGVjaWZpZXJzKHNjaGVtYSwgdHlwZU5hbWUpIHtcbiAgICBjb25zdCB0eXBlID0gc2NoZW1hLmdldFR5cGUodHlwZU5hbWUpO1xuICAgIGNvbnN0IHNwZWNpZmllcnMgPSBbTWFwcGVyS2luZC5GSUVMRF07XG4gICAgaWYgKGlzT2JqZWN0VHlwZSh0eXBlKSkge1xuICAgICAgICBzcGVjaWZpZXJzLnB1c2goTWFwcGVyS2luZC5DT01QT1NJVEVfRklFTEQsIE1hcHBlcktpbmQuT0JKRUNUX0ZJRUxEKTtcbiAgICAgICAgaWYgKHR5cGVOYW1lID09PSBzY2hlbWEuZ2V0UXVlcnlUeXBlKCk/Lm5hbWUpIHtcbiAgICAgICAgICAgIHNwZWNpZmllcnMucHVzaChNYXBwZXJLaW5kLlJPT1RfRklFTEQsIE1hcHBlcktpbmQuUVVFUllfUk9PVF9GSUVMRCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZU5hbWUgPT09IHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKT8ubmFtZSkge1xuICAgICAgICAgICAgc3BlY2lmaWVycy5wdXNoKE1hcHBlcktpbmQuUk9PVF9GSUVMRCwgTWFwcGVyS2luZC5NVVRBVElPTl9ST09UX0ZJRUxEKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0eXBlTmFtZSA9PT0gc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKT8ubmFtZSkge1xuICAgICAgICAgICAgc3BlY2lmaWVycy5wdXNoKE1hcHBlcktpbmQuUk9PVF9GSUVMRCwgTWFwcGVyS2luZC5TVUJTQ1JJUFRJT05fUk9PVF9GSUVMRCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoaXNJbnRlcmZhY2VUeXBlKHR5cGUpKSB7XG4gICAgICAgIHNwZWNpZmllcnMucHVzaChNYXBwZXJLaW5kLkNPTVBPU0lURV9GSUVMRCwgTWFwcGVyS2luZC5JTlRFUkZBQ0VfRklFTEQpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0lucHV0T2JqZWN0VHlwZSh0eXBlKSkge1xuICAgICAgICBzcGVjaWZpZXJzLnB1c2goTWFwcGVyS2luZC5JTlBVVF9PQkpFQ1RfRklFTEQpO1xuICAgIH1cbiAgICByZXR1cm4gc3BlY2lmaWVycztcbn1cbmZ1bmN0aW9uIGdldEZpZWxkTWFwcGVyKHNjaGVtYSwgc2NoZW1hTWFwcGVyLCB0eXBlTmFtZSkge1xuICAgIGNvbnN0IHNwZWNpZmllcnMgPSBnZXRGaWVsZFNwZWNpZmllcnMoc2NoZW1hLCB0eXBlTmFtZSk7XG4gICAgbGV0IGZpZWxkTWFwcGVyO1xuICAgIGNvbnN0IHN0YWNrID0gWy4uLnNwZWNpZmllcnNdO1xuICAgIHdoaWxlICghZmllbGRNYXBwZXIgJiYgc3RhY2subGVuZ3RoID4gMCkge1xuICAgICAgICAvLyBJdCBpcyBzYWZlIHRvIHVzZSB0aGUgISBvcGVyYXRvciBoZXJlIGFzIHdlIGNoZWNrIHRoZSBsZW5ndGguXG4gICAgICAgIGNvbnN0IG5leHQgPSBzdGFjay5wb3AoKTtcbiAgICAgICAgLy8gVE9ETzogZml4IHRoaXMgYXMgdW5rbm93biBjYXN0XG4gICAgICAgIGZpZWxkTWFwcGVyID0gc2NoZW1hTWFwcGVyW25leHRdO1xuICAgIH1cbiAgICByZXR1cm4gZmllbGRNYXBwZXIgPz8gbnVsbDtcbn1cbmZ1bmN0aW9uIGdldEFyZ3VtZW50TWFwcGVyKHNjaGVtYU1hcHBlcikge1xuICAgIGNvbnN0IGFyZ3VtZW50TWFwcGVyID0gc2NoZW1hTWFwcGVyW01hcHBlcktpbmQuQVJHVU1FTlRdO1xuICAgIHJldHVybiBhcmd1bWVudE1hcHBlciAhPSBudWxsID8gYXJndW1lbnRNYXBwZXIgOiBudWxsO1xufVxuZnVuY3Rpb24gZ2V0RGlyZWN0aXZlTWFwcGVyKHNjaGVtYU1hcHBlcikge1xuICAgIGNvbnN0IGRpcmVjdGl2ZU1hcHBlciA9IHNjaGVtYU1hcHBlcltNYXBwZXJLaW5kLkRJUkVDVElWRV07XG4gICAgcmV0dXJuIGRpcmVjdGl2ZU1hcHBlciAhPSBudWxsID8gZGlyZWN0aXZlTWFwcGVyIDogbnVsbDtcbn1cbmZ1bmN0aW9uIGdldEVudW1WYWx1ZU1hcHBlcihzY2hlbWFNYXBwZXIpIHtcbiAgICBjb25zdCBlbnVtVmFsdWVNYXBwZXIgPSBzY2hlbWFNYXBwZXJbTWFwcGVyS2luZC5FTlVNX1ZBTFVFXTtcbiAgICByZXR1cm4gZW51bVZhbHVlTWFwcGVyICE9IG51bGwgPyBlbnVtVmFsdWVNYXBwZXIgOiBudWxsO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNvcnJlY3RBU1ROb2Rlcyh0eXBlKSB7XG4gICAgaWYgKGlzT2JqZWN0VHlwZSh0eXBlKSkge1xuICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgIGlmIChjb25maWcuYXN0Tm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZHMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZENvbmZpZyA9IGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAoZmllbGRDb25maWcuYXN0Tm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkcy5wdXNoKGZpZWxkQ29uZmlnLmFzdE5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbmZpZy5hc3ROb2RlID0ge1xuICAgICAgICAgICAgICAgIC4uLmNvbmZpZy5hc3ROb2RlLFxuICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuT0JKRUNUX1RZUEVfREVGSU5JVElPTixcbiAgICAgICAgICAgICAgICBmaWVsZHMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb25maWcuZXh0ZW5zaW9uQVNUTm9kZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uZmlnLmV4dGVuc2lvbkFTVE5vZGVzID0gY29uZmlnLmV4dGVuc2lvbkFTVE5vZGVzLm1hcChub2RlID0+ICh7XG4gICAgICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgICAgICBraW5kOiBLaW5kLk9CSkVDVF9UWVBFX0VYVEVOU0lPTixcbiAgICAgICAgICAgICAgICBmaWVsZHM6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxPYmplY3RUeXBlKGNvbmZpZyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzSW50ZXJmYWNlVHlwZSh0eXBlKSkge1xuICAgICAgICBjb25zdCBjb25maWcgPSB0eXBlLnRvQ29uZmlnKCk7XG4gICAgICAgIGlmIChjb25maWcuYXN0Tm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZHMgPSBbXTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGROYW1lIGluIGNvbmZpZy5maWVsZHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWVsZENvbmZpZyA9IGNvbmZpZy5maWVsZHNbZmllbGROYW1lXTtcbiAgICAgICAgICAgICAgICBpZiAoZmllbGRDb25maWcuYXN0Tm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkcy5wdXNoKGZpZWxkQ29uZmlnLmFzdE5vZGUpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbmZpZy5hc3ROb2RlID0ge1xuICAgICAgICAgICAgICAgIC4uLmNvbmZpZy5hc3ROb2RlLFxuICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuSU5URVJGQUNFX1RZUEVfREVGSU5JVElPTixcbiAgICAgICAgICAgICAgICBmaWVsZHMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb25maWcuZXh0ZW5zaW9uQVNUTm9kZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uZmlnLmV4dGVuc2lvbkFTVE5vZGVzID0gY29uZmlnLmV4dGVuc2lvbkFTVE5vZGVzLm1hcChub2RlID0+ICh7XG4gICAgICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgICAgICBraW5kOiBLaW5kLklOVEVSRkFDRV9UWVBFX0VYVEVOU0lPTixcbiAgICAgICAgICAgICAgICBmaWVsZHM6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxJbnRlcmZhY2VUeXBlKGNvbmZpZyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzSW5wdXRPYmplY3RUeXBlKHR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgaWYgKGNvbmZpZy5hc3ROb2RlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChjb25zdCBmaWVsZE5hbWUgaW4gY29uZmlnLmZpZWxkcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpZWxkQ29uZmlnID0gY29uZmlnLmZpZWxkc1tmaWVsZE5hbWVdO1xuICAgICAgICAgICAgICAgIGlmIChmaWVsZENvbmZpZy5hc3ROb2RlICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICAgICAgZmllbGRzLnB1c2goZmllbGRDb25maWcuYXN0Tm9kZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY29uZmlnLmFzdE5vZGUgPSB7XG4gICAgICAgICAgICAgICAgLi4uY29uZmlnLmFzdE5vZGUsXG4gICAgICAgICAgICAgICAga2luZDogS2luZC5JTlBVVF9PQkpFQ1RfVFlQRV9ERUZJTklUSU9OLFxuICAgICAgICAgICAgICAgIGZpZWxkcyxcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGNvbmZpZy5leHRlbnNpb25BU1ROb2RlcyAhPSBudWxsKSB7XG4gICAgICAgICAgICBjb25maWcuZXh0ZW5zaW9uQVNUTm9kZXMgPSBjb25maWcuZXh0ZW5zaW9uQVNUTm9kZXMubWFwKG5vZGUgPT4gKHtcbiAgICAgICAgICAgICAgICAuLi5ub2RlLFxuICAgICAgICAgICAgICAgIGtpbmQ6IEtpbmQuSU5QVVRfT0JKRUNUX1RZUEVfRVhURU5TSU9OLFxuICAgICAgICAgICAgICAgIGZpZWxkczogdW5kZWZpbmVkLFxuICAgICAgICAgICAgfSkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBuZXcgR3JhcGhRTElucHV0T2JqZWN0VHlwZShjb25maWcpO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0VudW1UeXBlKHR5cGUpKSB7XG4gICAgICAgIGNvbnN0IGNvbmZpZyA9IHR5cGUudG9Db25maWcoKTtcbiAgICAgICAgaWYgKGNvbmZpZy5hc3ROb2RlICE9IG51bGwpIHtcbiAgICAgICAgICAgIGNvbnN0IHZhbHVlcyA9IFtdO1xuICAgICAgICAgICAgZm9yIChjb25zdCBlbnVtS2V5IGluIGNvbmZpZy52YWx1ZXMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlbnVtVmFsdWVDb25maWcgPSBjb25maWcudmFsdWVzW2VudW1LZXldO1xuICAgICAgICAgICAgICAgIGlmIChlbnVtVmFsdWVDb25maWcuYXN0Tm9kZSAhPSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhbHVlcy5wdXNoKGVudW1WYWx1ZUNvbmZpZy5hc3ROb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25maWcuYXN0Tm9kZSA9IHtcbiAgICAgICAgICAgICAgICAuLi5jb25maWcuYXN0Tm9kZSxcbiAgICAgICAgICAgICAgICB2YWx1ZXMsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIGlmIChjb25maWcuZXh0ZW5zaW9uQVNUTm9kZXMgIT0gbnVsbCkge1xuICAgICAgICAgICAgY29uZmlnLmV4dGVuc2lvbkFTVE5vZGVzID0gY29uZmlnLmV4dGVuc2lvbkFTVE5vZGVzLm1hcChub2RlID0+ICh7XG4gICAgICAgICAgICAgICAgLi4ubm9kZSxcbiAgICAgICAgICAgICAgICB2YWx1ZXM6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbmV3IEdyYXBoUUxFbnVtVHlwZShjb25maWcpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/mapSchema.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/memoize.js":
/*!********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/memoize.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   memoize1: () => (/* binding */ memoize1),\n/* harmony export */   memoize2: () => (/* binding */ memoize2),\n/* harmony export */   memoize2of4: () => (/* binding */ memoize2of4),\n/* harmony export */   memoize2of5: () => (/* binding */ memoize2of5),\n/* harmony export */   memoize3: () => (/* binding */ memoize3),\n/* harmony export */   memoize4: () => (/* binding */ memoize4),\n/* harmony export */   memoize5: () => (/* binding */ memoize5)\n/* harmony export */ });\nfunction memoize1(fn) {\n    const memoize1cache = new WeakMap();\n    return function memoized(a1) {\n        const cachedValue = memoize1cache.get(a1);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1);\n            memoize1cache.set(a1, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2(fn) {\n    const memoize2cache = new WeakMap();\n    return function memoized(a1, a2) {\n        let cache2 = memoize2cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2cache.set(a1, cache2);\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize3(fn) {\n    const memoize3Cache = new WeakMap();\n    return function memoized(a1, a2, a3) {\n        let cache2 = memoize3Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize3Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        const cachedValue = cache3.get(a3);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3);\n            cache3.set(a3, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize4(fn) {\n    const memoize4Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize4Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize4Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cache4 = cache3.get(a3);\n        if (!cache4) {\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        const cachedValue = cache4.get(a4);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache4.set(a4, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize5(fn) {\n    const memoize5Cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize5Cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize5Cache.set(a1, cache2);\n            const cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache3 = cache2.get(a2);\n        if (!cache3) {\n            cache3 = new WeakMap();\n            cache2.set(a2, cache3);\n            const cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache4 = cache3.get(a3);\n        if (!cache4) {\n            cache4 = new WeakMap();\n            cache3.set(a3, cache4);\n            const cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        let cache5 = cache4.get(a4);\n        if (!cache5) {\n            cache5 = new WeakMap();\n            cache4.set(a4, cache5);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        const cachedValue = cache5.get(a5);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache5.set(a5, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of4(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\nfunction memoize2of5(fn) {\n    const memoize2of4cache = new WeakMap();\n    return function memoized(a1, a2, a3, a4, a5) {\n        let cache2 = memoize2of4cache.get(a1);\n        if (!cache2) {\n            cache2 = new WeakMap();\n            memoize2of4cache.set(a1, cache2);\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        const cachedValue = cache2.get(a2);\n        if (cachedValue === undefined) {\n            const newValue = fn(a1, a2, a3, a4, a5);\n            cache2.set(a2, newValue);\n            return newValue;\n        }\n        return cachedValue;\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/memoize.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/renameType.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/renameType.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   renameType: () => (/* binding */ renameType)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n\nfunction renameType(type, newTypeName) {\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isObjectType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInterfaceType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isUnionType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLUnionType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isEnumType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLEnumType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isScalarType)(type)) {\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLScalarType({\n            ...type.toConfig(),\n            name: newTypeName,\n            astNode: type.astNode == null\n                ? type.astNode\n                : {\n                    ...type.astNode,\n                    name: {\n                        ...type.astNode.name,\n                        value: newTypeName,\n                    },\n                },\n            extensionASTNodes: type.extensionASTNodes == null\n                ? type.extensionASTNodes\n                : type.extensionASTNodes.map(node => ({\n                    ...node,\n                    name: {\n                        ...node.name,\n                        value: newTypeName,\n                    },\n                })),\n        });\n    }\n    throw new Error(`Unknown type ${type}.`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/renameType.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rewire.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rewire.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   rewireTypes: () => (/* binding */ rewireTypes)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/directives.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var _stub_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stub.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/stub.js\");\n\n\nfunction rewireTypes(originalTypeMap, directives) {\n    const referenceTypeMap = Object.create(null);\n    for (const typeName in originalTypeMap) {\n        referenceTypeMap[typeName] = originalTypeMap[typeName];\n    }\n    const newTypeMap = Object.create(null);\n    for (const typeName in referenceTypeMap) {\n        const namedType = referenceTypeMap[typeName];\n        if (namedType == null || typeName.startsWith('__')) {\n            continue;\n        }\n        const newName = namedType.name;\n        if (newName.startsWith('__')) {\n            continue;\n        }\n        if (newTypeMap[newName] != null) {\n            console.warn(`Duplicate schema type name ${newName} found; keeping the existing one found in the schema`);\n            continue;\n        }\n        newTypeMap[newName] = namedType;\n    }\n    for (const typeName in newTypeMap) {\n        newTypeMap[typeName] = rewireNamedType(newTypeMap[typeName]);\n    }\n    const newDirectives = directives.map(directive => rewireDirective(directive));\n    return {\n        typeMap: newTypeMap,\n        directives: newDirectives,\n    };\n    function rewireDirective(directive) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isSpecifiedDirective)(directive)) {\n            return directive;\n        }\n        const directiveConfig = directive.toConfig();\n        directiveConfig.args = rewireArgs(directiveConfig.args);\n        return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLDirective(directiveConfig);\n    }\n    function rewireArgs(args) {\n        const rewiredArgs = {};\n        for (const argName in args) {\n            const arg = args[argName];\n            const rewiredArgType = rewireType(arg.type);\n            if (rewiredArgType != null) {\n                arg.type = rewiredArgType;\n                rewiredArgs[argName] = arg;\n            }\n        }\n        return rewiredArgs;\n    }\n    function rewireNamedType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n                interfaces: () => rewireNamedTypes(config.interfaces),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInterfaceType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireFields(config.fields),\n            };\n            if ('interfaces' in newConfig) {\n                newConfig.interfaces = () => rewireNamedTypes(config.interfaces);\n            }\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInterfaceType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isUnionType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                types: () => rewireNamedTypes(config.types),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLUnionType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isInputObjectType)(type)) {\n            const config = type.toConfig();\n            const newConfig = {\n                ...config,\n                fields: () => rewireInputFields(config.fields),\n            };\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInputObjectType(newConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isEnumType)(type)) {\n            const enumConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLEnumType(enumConfig);\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isScalarType)(type)) {\n            if ((0,graphql__WEBPACK_IMPORTED_MODULE_2__.isSpecifiedScalarType)(type)) {\n                return type;\n            }\n            const scalarConfig = type.toConfig();\n            return new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLScalarType(scalarConfig);\n        }\n        throw new Error(`Unexpected schema type: ${type}`);\n    }\n    function rewireFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null && field.args) {\n                field.type = rewiredFieldType;\n                field.args = rewireArgs(field.args);\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireInputFields(fields) {\n        const rewiredFields = {};\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            const rewiredFieldType = rewireType(field.type);\n            if (rewiredFieldType != null) {\n                field.type = rewiredFieldType;\n                rewiredFields[fieldName] = field;\n            }\n        }\n        return rewiredFields;\n    }\n    function rewireNamedTypes(namedTypes) {\n        const rewiredTypes = [];\n        for (const namedType of namedTypes) {\n            const rewiredType = rewireType(namedType);\n            if (rewiredType != null) {\n                rewiredTypes.push(rewiredType);\n            }\n        }\n        return rewiredTypes;\n    }\n    function rewireType(type) {\n        if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isListType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLList(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNonNullType)(type)) {\n            const rewiredType = rewireType(type.ofType);\n            return rewiredType != null ? new graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLNonNull(rewiredType) : null;\n        }\n        else if ((0,graphql__WEBPACK_IMPORTED_MODULE_1__.isNamedType)(type)) {\n            let rewiredType = referenceTypeMap[type.name];\n            if (rewiredType === undefined) {\n                rewiredType = (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.isNamedStub)(type) ? (0,_stub_js__WEBPACK_IMPORTED_MODULE_3__.getBuiltInForStub)(type) : rewireNamedType(type);\n                newTypeMap[rewiredType.name] = referenceTypeMap[type.name] = rewiredType;\n            }\n            return rewiredType != null ? newTypeMap[rewiredType.name] : null;\n        }\n        return null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rewire.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rootTypes.js":
/*!**********************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rootTypes.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDefinedRootType: () => (/* binding */ getDefinedRootType),\n/* harmony export */   getRootTypeMap: () => (/* binding */ getRootTypeMap),\n/* harmony export */   getRootTypeNames: () => (/* binding */ getRootTypeNames),\n/* harmony export */   getRootTypes: () => (/* binding */ getRootTypes)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/errors.js\");\n/* harmony import */ var _memoize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./memoize.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/memoize.js\");\n\n\nfunction getDefinedRootType(schema, operation, nodes) {\n    const rootTypeMap = getRootTypeMap(schema);\n    const rootType = rootTypeMap.get(operation);\n    if (rootType == null) {\n        throw (0,_errors_js__WEBPACK_IMPORTED_MODULE_0__.createGraphQLError)(`Schema is not configured to execute ${operation} operation.`, {\n            nodes,\n        });\n    }\n    return rootType;\n}\nconst getRootTypeNames = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeNames(schema) {\n    const rootTypes = getRootTypes(schema);\n    return new Set([...rootTypes].map(type => type.name));\n});\nconst getRootTypes = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypes(schema) {\n    const rootTypeMap = getRootTypeMap(schema);\n    return new Set(rootTypeMap.values());\n});\nconst getRootTypeMap = (0,_memoize_js__WEBPACK_IMPORTED_MODULE_1__.memoize1)(function getRootTypeMap(schema) {\n    const rootTypeMap = new Map();\n    const queryType = schema.getQueryType();\n    if (queryType) {\n        rootTypeMap.set('query', queryType);\n    }\n    const mutationType = schema.getMutationType();\n    if (mutationType) {\n        rootTypeMap.set('mutation', mutationType);\n    }\n    const subscriptionType = schema.getSubscriptionType();\n    if (subscriptionType) {\n        rootTypeMap.set('subscription', subscriptionType);\n    }\n    return rootTypeMap;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9yb290VHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWlEO0FBQ1Q7QUFDakM7QUFDUDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDhEQUFrQix3Q0FBd0MsV0FBVztBQUNuRjtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDTyx5QkFBeUIscURBQVE7QUFDeEM7QUFDQTtBQUNBLENBQUM7QUFDTSxxQkFBcUIscURBQVE7QUFDcEM7QUFDQTtBQUNBLENBQUM7QUFDTSx1QkFBdUIscURBQVE7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vcm9vdFR5cGVzLmpzPzIxYmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY3JlYXRlR3JhcGhRTEVycm9yIH0gZnJvbSAnLi9lcnJvcnMuanMnO1xuaW1wb3J0IHsgbWVtb2l6ZTEgfSBmcm9tICcuL21lbW9pemUuanMnO1xuZXhwb3J0IGZ1bmN0aW9uIGdldERlZmluZWRSb290VHlwZShzY2hlbWEsIG9wZXJhdGlvbiwgbm9kZXMpIHtcbiAgICBjb25zdCByb290VHlwZU1hcCA9IGdldFJvb3RUeXBlTWFwKHNjaGVtYSk7XG4gICAgY29uc3Qgcm9vdFR5cGUgPSByb290VHlwZU1hcC5nZXQob3BlcmF0aW9uKTtcbiAgICBpZiAocm9vdFR5cGUgPT0gbnVsbCkge1xuICAgICAgICB0aHJvdyBjcmVhdGVHcmFwaFFMRXJyb3IoYFNjaGVtYSBpcyBub3QgY29uZmlndXJlZCB0byBleGVjdXRlICR7b3BlcmF0aW9ufSBvcGVyYXRpb24uYCwge1xuICAgICAgICAgICAgbm9kZXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdFR5cGU7XG59XG5leHBvcnQgY29uc3QgZ2V0Um9vdFR5cGVOYW1lcyA9IG1lbW9pemUxKGZ1bmN0aW9uIGdldFJvb3RUeXBlTmFtZXMoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVzID0gZ2V0Um9vdFR5cGVzKHNjaGVtYSk7XG4gICAgcmV0dXJuIG5ldyBTZXQoWy4uLnJvb3RUeXBlc10ubWFwKHR5cGUgPT4gdHlwZS5uYW1lKSk7XG59KTtcbmV4cG9ydCBjb25zdCBnZXRSb290VHlwZXMgPSBtZW1vaXplMShmdW5jdGlvbiBnZXRSb290VHlwZXMoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBnZXRSb290VHlwZU1hcChzY2hlbWEpO1xuICAgIHJldHVybiBuZXcgU2V0KHJvb3RUeXBlTWFwLnZhbHVlcygpKTtcbn0pO1xuZXhwb3J0IGNvbnN0IGdldFJvb3RUeXBlTWFwID0gbWVtb2l6ZTEoZnVuY3Rpb24gZ2V0Um9vdFR5cGVNYXAoc2NoZW1hKSB7XG4gICAgY29uc3Qgcm9vdFR5cGVNYXAgPSBuZXcgTWFwKCk7XG4gICAgY29uc3QgcXVlcnlUeXBlID0gc2NoZW1hLmdldFF1ZXJ5VHlwZSgpO1xuICAgIGlmIChxdWVyeVR5cGUpIHtcbiAgICAgICAgcm9vdFR5cGVNYXAuc2V0KCdxdWVyeScsIHF1ZXJ5VHlwZSk7XG4gICAgfVxuICAgIGNvbnN0IG11dGF0aW9uVHlwZSA9IHNjaGVtYS5nZXRNdXRhdGlvblR5cGUoKTtcbiAgICBpZiAobXV0YXRpb25UeXBlKSB7XG4gICAgICAgIHJvb3RUeXBlTWFwLnNldCgnbXV0YXRpb24nLCBtdXRhdGlvblR5cGUpO1xuICAgIH1cbiAgICBjb25zdCBzdWJzY3JpcHRpb25UeXBlID0gc2NoZW1hLmdldFN1YnNjcmlwdGlvblR5cGUoKTtcbiAgICBpZiAoc3Vic2NyaXB0aW9uVHlwZSkge1xuICAgICAgICByb290VHlwZU1hcC5zZXQoJ3N1YnNjcmlwdGlvbicsIHN1YnNjcmlwdGlvblR5cGUpO1xuICAgIH1cbiAgICByZXR1cm4gcm9vdFR5cGVNYXA7XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/rootTypes.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/stub.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/stub.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNamedStub: () => (/* binding */ createNamedStub),\n/* harmony export */   createStub: () => (/* binding */ createStub),\n/* harmony export */   getBuiltInForStub: () => (/* binding */ getBuiltInForStub),\n/* harmony export */   isNamedStub: () => (/* binding */ isNamedStub)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/scalars.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n\nfunction createNamedStub(name, type) {\n    let constructor;\n    if (type === 'object') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLObjectType;\n    }\n    else if (type === 'interface') {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInterfaceType;\n    }\n    else {\n        constructor = graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLInputObjectType;\n    }\n    return new constructor({\n        name,\n        fields: {\n            _fake: {\n                type: graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString,\n            },\n        },\n    });\n}\nfunction createStub(node, type) {\n    switch (node.kind) {\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.LIST_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLList(createStub(node.type, type));\n        case graphql__WEBPACK_IMPORTED_MODULE_2__.Kind.NON_NULL_TYPE:\n            return new graphql__WEBPACK_IMPORTED_MODULE_0__.GraphQLNonNull(createStub(node.type, type));\n        default:\n            if (type === 'output') {\n                return createNamedStub(node.name.value, 'object');\n            }\n            return createNamedStub(node.name.value, 'input');\n    }\n}\nfunction isNamedStub(type) {\n    if ('getFields' in type) {\n        const fields = type.getFields();\n        // eslint-disable-next-line no-unreachable-loop\n        for (const fieldName in fields) {\n            const field = fields[fieldName];\n            return field.name === '_fake';\n        }\n    }\n    return false;\n}\nfunction getBuiltInForStub(type) {\n    switch (type.name) {\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLInt;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLFloat;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLString;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLBoolean;\n        case graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID.name:\n            return graphql__WEBPACK_IMPORTED_MODULE_1__.GraphQLID;\n        default:\n            return type;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zdHViLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBa007QUFDM0w7QUFDUDtBQUNBO0FBQ0Esc0JBQXNCLHNEQUFpQjtBQUN2QztBQUNBO0FBQ0Esc0JBQXNCLHlEQUFvQjtBQUMxQztBQUNBO0FBQ0Esc0JBQXNCLDJEQUFzQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGtEQUFhO0FBQ25DLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ087QUFDUDtBQUNBLGFBQWEseUNBQUk7QUFDakIsdUJBQXVCLGdEQUFXO0FBQ2xDLGFBQWEseUNBQUk7QUFDakIsdUJBQXVCLG1EQUFjO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxhQUFhLCtDQUFVO0FBQ3ZCLG1CQUFtQiwrQ0FBVTtBQUM3QixhQUFhLGlEQUFZO0FBQ3pCLG1CQUFtQixpREFBWTtBQUMvQixhQUFhLGtEQUFhO0FBQzFCLG1CQUFtQixrREFBYTtBQUNoQyxhQUFhLG1EQUFjO0FBQzNCLG1CQUFtQixtREFBYztBQUNqQyxhQUFhLDhDQUFTO0FBQ3RCLG1CQUFtQiw4Q0FBUztBQUM1QjtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS9zdHViLmpzPzIyZTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR3JhcGhRTEJvb2xlYW4sIEdyYXBoUUxGbG9hdCwgR3JhcGhRTElELCBHcmFwaFFMSW5wdXRPYmplY3RUeXBlLCBHcmFwaFFMSW50LCBHcmFwaFFMSW50ZXJmYWNlVHlwZSwgR3JhcGhRTExpc3QsIEdyYXBoUUxOb25OdWxsLCBHcmFwaFFMT2JqZWN0VHlwZSwgR3JhcGhRTFN0cmluZywgS2luZCwgfSBmcm9tICdncmFwaHFsJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOYW1lZFN0dWIobmFtZSwgdHlwZSkge1xuICAgIGxldCBjb25zdHJ1Y3RvcjtcbiAgICBpZiAodHlwZSA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBHcmFwaFFMT2JqZWN0VHlwZTtcbiAgICB9XG4gICAgZWxzZSBpZiAodHlwZSA9PT0gJ2ludGVyZmFjZScpIHtcbiAgICAgICAgY29uc3RydWN0b3IgPSBHcmFwaFFMSW50ZXJmYWNlVHlwZTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0cnVjdG9yID0gR3JhcGhRTElucHV0T2JqZWN0VHlwZTtcbiAgICB9XG4gICAgcmV0dXJuIG5ldyBjb25zdHJ1Y3Rvcih7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGZpZWxkczoge1xuICAgICAgICAgICAgX2Zha2U6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiBHcmFwaFFMU3RyaW5nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTdHViKG5vZGUsIHR5cGUpIHtcbiAgICBzd2l0Y2ggKG5vZGUua2luZCkge1xuICAgICAgICBjYXNlIEtpbmQuTElTVF9UWVBFOlxuICAgICAgICAgICAgcmV0dXJuIG5ldyBHcmFwaFFMTGlzdChjcmVhdGVTdHViKG5vZGUudHlwZSwgdHlwZSkpO1xuICAgICAgICBjYXNlIEtpbmQuTk9OX05VTExfVFlQRTpcbiAgICAgICAgICAgIHJldHVybiBuZXcgR3JhcGhRTE5vbk51bGwoY3JlYXRlU3R1Yihub2RlLnR5cGUsIHR5cGUpKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIGlmICh0eXBlID09PSAnb3V0cHV0Jykge1xuICAgICAgICAgICAgICAgIHJldHVybiBjcmVhdGVOYW1lZFN0dWIobm9kZS5uYW1lLnZhbHVlLCAnb2JqZWN0Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gY3JlYXRlTmFtZWRTdHViKG5vZGUubmFtZS52YWx1ZSwgJ2lucHV0Jyk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGlzTmFtZWRTdHViKHR5cGUpIHtcbiAgICBpZiAoJ2dldEZpZWxkcycgaW4gdHlwZSkge1xuICAgICAgICBjb25zdCBmaWVsZHMgPSB0eXBlLmdldEZpZWxkcygpO1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5yZWFjaGFibGUtbG9vcFxuICAgICAgICBmb3IgKGNvbnN0IGZpZWxkTmFtZSBpbiBmaWVsZHMpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpZWxkID0gZmllbGRzW2ZpZWxkTmFtZV07XG4gICAgICAgICAgICByZXR1cm4gZmllbGQubmFtZSA9PT0gJ19mYWtlJztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0QnVpbHRJbkZvclN0dWIodHlwZSkge1xuICAgIHN3aXRjaCAodHlwZS5uYW1lKSB7XG4gICAgICAgIGNhc2UgR3JhcGhRTEludC5uYW1lOlxuICAgICAgICAgICAgcmV0dXJuIEdyYXBoUUxJbnQ7XG4gICAgICAgIGNhc2UgR3JhcGhRTEZsb2F0Lm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTEZsb2F0O1xuICAgICAgICBjYXNlIEdyYXBoUUxTdHJpbmcubmFtZTpcbiAgICAgICAgICAgIHJldHVybiBHcmFwaFFMU3RyaW5nO1xuICAgICAgICBjYXNlIEdyYXBoUUxCb29sZWFuLm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTEJvb2xlYW47XG4gICAgICAgIGNhc2UgR3JhcGhRTElELm5hbWU6XG4gICAgICAgICAgICByZXR1cm4gR3JhcGhRTElEO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHR5cGU7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/stub.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/transformInputValue.js":
/*!********************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/transformInputValue.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseInputValue: () => (/* binding */ parseInputValue),\n/* harmony export */   parseInputValueLiteral: () => (/* binding */ parseInputValueLiteral),\n/* harmony export */   serializeInputValue: () => (/* binding */ serializeInputValue),\n/* harmony export */   transformInputValue: () => (/* binding */ transformInputValue)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _helpers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helpers.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/helpers.js\");\n\n\nfunction transformInputValue(type, value, inputLeafValueTransformer = null, inputObjectValueTransformer = null) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_0__.getNullableType)(type);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isLeafType)(nullableType)) {\n        return inputLeafValueTransformer != null\n            ? inputLeafValueTransformer(nullableType, value)\n            : value;\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isListType)(nullableType)) {\n        return (0,_helpers_js__WEBPACK_IMPORTED_MODULE_1__.asArray)(value).map((listMember) => transformInputValue(nullableType.ofType, listMember, inputLeafValueTransformer, inputObjectValueTransformer));\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_0__.isInputObjectType)(nullableType)) {\n        const fields = nullableType.getFields();\n        const newValue = {};\n        for (const key in value) {\n            const field = fields[key];\n            if (field != null) {\n                newValue[key] = transformInputValue(field.type, value[key], inputLeafValueTransformer, inputObjectValueTransformer);\n            }\n        }\n        return inputObjectValueTransformer != null\n            ? inputObjectValueTransformer(nullableType, newValue)\n            : newValue;\n    }\n    // unreachable, no other possible return value\n}\nfunction serializeInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.serialize(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValue(type, value) {\n    return transformInputValue(type, value, (t, v) => {\n        try {\n            return t.parseValue(v);\n        }\n        catch {\n            return v;\n        }\n    });\n}\nfunction parseInputValueLiteral(type, value) {\n    return transformInputValue(type, value, (t, v) => t.parseLiteral(v, {}));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3dyYXAvbm9kZV9tb2R1bGVzL0BncmFwaHFsLXRvb2xzL3V0aWxzL2VzbS90cmFuc2Zvcm1JbnB1dFZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRjtBQUMvQztBQUNoQztBQUNQO0FBQ0E7QUFDQTtBQUNBLHlCQUF5Qix3REFBZTtBQUN4QyxRQUFRLG1EQUFVO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSxtREFBVTtBQUN2QixlQUFlLG9EQUFPO0FBQ3RCO0FBQ0EsYUFBYSwwREFBaUI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ087QUFDUCwwRUFBMEU7QUFDMUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy93cmFwL25vZGVfbW9kdWxlcy9AZ3JhcGhxbC10b29scy91dGlscy9lc20vdHJhbnNmb3JtSW5wdXRWYWx1ZS5qcz80OGY5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldE51bGxhYmxlVHlwZSwgaXNJbnB1dE9iamVjdFR5cGUsIGlzTGVhZlR5cGUsIGlzTGlzdFR5cGUsIH0gZnJvbSAnZ3JhcGhxbCc7XG5pbXBvcnQgeyBhc0FycmF5IH0gZnJvbSAnLi9oZWxwZXJzLmpzJztcbmV4cG9ydCBmdW5jdGlvbiB0cmFuc2Zvcm1JbnB1dFZhbHVlKHR5cGUsIHZhbHVlLCBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyID0gbnVsbCwgaW5wdXRPYmplY3RWYWx1ZVRyYW5zZm9ybWVyID0gbnVsbCkge1xuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG4gICAgY29uc3QgbnVsbGFibGVUeXBlID0gZ2V0TnVsbGFibGVUeXBlKHR5cGUpO1xuICAgIGlmIChpc0xlYWZUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGlucHV0TGVhZlZhbHVlVHJhbnNmb3JtZXIgIT0gbnVsbFxuICAgICAgICAgICAgPyBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyKG51bGxhYmxlVHlwZSwgdmFsdWUpXG4gICAgICAgICAgICA6IHZhbHVlO1xuICAgIH1cbiAgICBlbHNlIGlmIChpc0xpc3RUeXBlKG51bGxhYmxlVHlwZSkpIHtcbiAgICAgICAgcmV0dXJuIGFzQXJyYXkodmFsdWUpLm1hcCgobGlzdE1lbWJlcikgPT4gdHJhbnNmb3JtSW5wdXRWYWx1ZShudWxsYWJsZVR5cGUub2ZUeXBlLCBsaXN0TWVtYmVyLCBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyLCBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNJbnB1dE9iamVjdFR5cGUobnVsbGFibGVUeXBlKSkge1xuICAgICAgICBjb25zdCBmaWVsZHMgPSBudWxsYWJsZVR5cGUuZ2V0RmllbGRzKCk7XG4gICAgICAgIGNvbnN0IG5ld1ZhbHVlID0ge307XG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIHZhbHVlKSB7XG4gICAgICAgICAgICBjb25zdCBmaWVsZCA9IGZpZWxkc1trZXldO1xuICAgICAgICAgICAgaWYgKGZpZWxkICE9IG51bGwpIHtcbiAgICAgICAgICAgICAgICBuZXdWYWx1ZVtrZXldID0gdHJhbnNmb3JtSW5wdXRWYWx1ZShmaWVsZC50eXBlLCB2YWx1ZVtrZXldLCBpbnB1dExlYWZWYWx1ZVRyYW5zZm9ybWVyLCBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIgIT0gbnVsbFxuICAgICAgICAgICAgPyBpbnB1dE9iamVjdFZhbHVlVHJhbnNmb3JtZXIobnVsbGFibGVUeXBlLCBuZXdWYWx1ZSlcbiAgICAgICAgICAgIDogbmV3VmFsdWU7XG4gICAgfVxuICAgIC8vIHVucmVhY2hhYmxlLCBubyBvdGhlciBwb3NzaWJsZSByZXR1cm4gdmFsdWVcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXJpYWxpemVJbnB1dFZhbHVlKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICByZXR1cm4gdC5zZXJpYWxpemUodik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlucHV0VmFsdWUodHlwZSwgdmFsdWUpIHtcbiAgICByZXR1cm4gdHJhbnNmb3JtSW5wdXRWYWx1ZSh0eXBlLCB2YWx1ZSwgKHQsIHYpID0+IHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHJldHVybiB0LnBhcnNlVmFsdWUodik7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2gge1xuICAgICAgICAgICAgcmV0dXJuIHY7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUlucHV0VmFsdWVMaXRlcmFsKHR5cGUsIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRyYW5zZm9ybUlucHV0VmFsdWUodHlwZSwgdmFsdWUsICh0LCB2KSA9PiB0LnBhcnNlTGl0ZXJhbCh2LCB7fSkpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/transformInputValue.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/visitResult.js":
/*!************************************************************************************************!*\
  !*** ../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/visitResult.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   visitData: () => (/* binding */ visitData),\n/* harmony export */   visitErrors: () => (/* binding */ visitErrors),\n/* harmony export */   visitResult: () => (/* binding */ visitResult)\n/* harmony export */ });\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/language/kinds.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/introspection.mjs\");\n/* harmony import */ var graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! graphql */ \"(ssr)/../node_modules/graphql/type/definition.mjs\");\n/* harmony import */ var _collectFields_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collectFields.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/collectFields.js\");\n/* harmony import */ var _getOperationASTFromRequest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getOperationASTFromRequest.js */ \"(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/getOperationASTFromRequest.js\");\n\n\n\nfunction visitData(data, enter, leave) {\n    if (Array.isArray(data)) {\n        return data.map(value => visitData(value, enter, leave));\n    }\n    else if (typeof data === 'object') {\n        const newData = enter != null ? enter(data) : data;\n        if (newData != null) {\n            for (const key in newData) {\n                const value = newData[key];\n                Object.defineProperty(newData, key, {\n                    value: visitData(value, enter, leave),\n                });\n            }\n        }\n        return leave != null ? leave(newData) : newData;\n    }\n    return data;\n}\nfunction visitErrors(errors, visitor) {\n    return errors.map(error => visitor(error));\n}\nfunction visitResult(result, request, schema, resultVisitorMap, errorVisitorMap) {\n    const fragments = request.document.definitions.reduce((acc, def) => {\n        if (def.kind === graphql__WEBPACK_IMPORTED_MODULE_0__.Kind.FRAGMENT_DEFINITION) {\n            acc[def.name.value] = def;\n        }\n        return acc;\n    }, {});\n    const variableValues = request.variables || {};\n    const errorInfo = {\n        segmentInfoMap: new Map(),\n        unpathedErrors: new Set(),\n    };\n    const data = result.data;\n    const errors = result.errors;\n    const visitingErrors = errors != null && errorVisitorMap != null;\n    const operationDocumentNode = (0,_getOperationASTFromRequest_js__WEBPACK_IMPORTED_MODULE_1__.getOperationASTFromRequest)(request);\n    if (data != null && operationDocumentNode != null) {\n        result.data = visitRoot(data, operationDocumentNode, schema, fragments, variableValues, resultVisitorMap, visitingErrors ? errors : undefined, errorInfo);\n    }\n    if (errors != null && errorVisitorMap) {\n        result.errors = visitErrorsByType(errors, errorVisitorMap, errorInfo);\n    }\n    return result;\n}\nfunction visitErrorsByType(errors, errorVisitorMap, errorInfo) {\n    const segmentInfoMap = errorInfo.segmentInfoMap;\n    const unpathedErrors = errorInfo.unpathedErrors;\n    const unpathedErrorVisitor = errorVisitorMap['__unpathed'];\n    return errors.map(originalError => {\n        const pathSegmentsInfo = segmentInfoMap.get(originalError);\n        const newError = pathSegmentsInfo == null\n            ? originalError\n            : pathSegmentsInfo.reduceRight((acc, segmentInfo) => {\n                const typeName = segmentInfo.type.name;\n                const typeVisitorMap = errorVisitorMap[typeName];\n                if (typeVisitorMap == null) {\n                    return acc;\n                }\n                const errorVisitor = typeVisitorMap[segmentInfo.fieldName];\n                return errorVisitor == null ? acc : errorVisitor(acc, segmentInfo.pathIndex);\n            }, originalError);\n        if (unpathedErrorVisitor && unpathedErrors.has(originalError)) {\n            return unpathedErrorVisitor(newError);\n        }\n        return newError;\n    });\n}\nfunction getOperationRootType(schema, operationDef) {\n    switch (operationDef.operation) {\n        case 'query':\n            return schema.getQueryType();\n        case 'mutation':\n            return schema.getMutationType();\n        case 'subscription':\n            return schema.getSubscriptionType();\n    }\n}\nfunction visitRoot(root, operation, schema, fragments, variableValues, resultVisitorMap, errors, errorInfo) {\n    const operationRootType = getOperationRootType(schema, operation);\n    const { fields: collectedFields } = (0,_collectFields_js__WEBPACK_IMPORTED_MODULE_2__.collectFields)(schema, fragments, variableValues, operationRootType, operation.selectionSet);\n    return visitObjectValue(root, operationRootType, collectedFields, schema, fragments, variableValues, resultVisitorMap, 0, errors, errorInfo);\n}\nfunction visitObjectValue(object, type, fieldNodeMap, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    const fieldMap = type.getFields();\n    const typeVisitorMap = resultVisitorMap?.[type.name];\n    const enterObject = typeVisitorMap?.__enter;\n    const newObject = enterObject != null ? enterObject(object) : object;\n    let sortedErrors;\n    let errorMap = null;\n    if (errors != null) {\n        sortedErrors = sortErrorsByPathSegment(errors, pathIndex);\n        errorMap = sortedErrors.errorMap;\n        for (const error of sortedErrors.unpathedErrors) {\n            errorInfo.unpathedErrors.add(error);\n        }\n    }\n    for (const [responseKey, subFieldNodes] of fieldNodeMap) {\n        const fieldName = subFieldNodes[0].name.value;\n        let fieldType = fieldMap[fieldName]?.type;\n        if (fieldType == null) {\n            switch (fieldName) {\n                case '__typename':\n                    fieldType = graphql__WEBPACK_IMPORTED_MODULE_3__.TypeNameMetaFieldDef.type;\n                    break;\n                case '__schema':\n                    fieldType = graphql__WEBPACK_IMPORTED_MODULE_3__.SchemaMetaFieldDef.type;\n                    break;\n                case '__type':\n                    fieldType = graphql__WEBPACK_IMPORTED_MODULE_3__.TypeMetaFieldDef.type;\n                    break;\n            }\n        }\n        const newPathIndex = pathIndex + 1;\n        let fieldErrors;\n        if (errorMap) {\n            fieldErrors = errorMap[responseKey];\n            if (fieldErrors != null) {\n                delete errorMap[responseKey];\n            }\n            addPathSegmentInfo(type, fieldName, newPathIndex, fieldErrors, errorInfo);\n        }\n        const newValue = visitFieldValue(object[responseKey], fieldType, subFieldNodes, schema, fragments, variableValues, resultVisitorMap, newPathIndex, fieldErrors, errorInfo);\n        updateObject(newObject, responseKey, newValue, typeVisitorMap, fieldName);\n    }\n    const oldTypename = newObject.__typename;\n    if (oldTypename != null) {\n        updateObject(newObject, '__typename', oldTypename, typeVisitorMap, '__typename');\n    }\n    if (errorMap) {\n        for (const errorsKey in errorMap) {\n            const errors = errorMap[errorsKey];\n            for (const error of errors) {\n                errorInfo.unpathedErrors.add(error);\n            }\n        }\n    }\n    const leaveObject = typeVisitorMap?.__leave;\n    return leaveObject != null ? leaveObject(newObject) : newObject;\n}\nfunction updateObject(object, responseKey, newValue, typeVisitorMap, fieldName) {\n    if (typeVisitorMap == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const fieldVisitor = typeVisitorMap[fieldName];\n    if (fieldVisitor == null) {\n        object[responseKey] = newValue;\n        return;\n    }\n    const visitedValue = fieldVisitor(newValue);\n    if (visitedValue === undefined) {\n        delete object[responseKey];\n        return;\n    }\n    object[responseKey] = visitedValue;\n}\nfunction visitListValue(list, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo) {\n    return list.map(listMember => visitFieldValue(listMember, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex + 1, errors, errorInfo));\n}\nfunction visitFieldValue(value, returnType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors = [], errorInfo) {\n    if (value == null) {\n        return value;\n    }\n    const nullableType = (0,graphql__WEBPACK_IMPORTED_MODULE_4__.getNullableType)(returnType);\n    if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isListType)(nullableType)) {\n        return visitListValue(value, nullableType.ofType, fieldNodes, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isAbstractType)(nullableType)) {\n        const finalType = schema.getType(value.__typename);\n        let { fields: collectedFields, patches } = (0,_collectFields_js__WEBPACK_IMPORTED_MODULE_2__.collectSubFields)(schema, fragments, variableValues, finalType, fieldNodes);\n        if (patches.length) {\n            collectedFields = new Map(collectedFields);\n            for (const patch of patches) {\n                for (const [responseKey, fields] of patch.fields) {\n                    const existingFields = collectedFields.get(responseKey);\n                    if (existingFields) {\n                        existingFields.push(...fields);\n                    }\n                    else {\n                        collectedFields.set(responseKey, fields);\n                    }\n                }\n            }\n        }\n        return visitObjectValue(value, finalType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    else if ((0,graphql__WEBPACK_IMPORTED_MODULE_4__.isObjectType)(nullableType)) {\n        let { fields: collectedFields, patches } = (0,_collectFields_js__WEBPACK_IMPORTED_MODULE_2__.collectSubFields)(schema, fragments, variableValues, nullableType, fieldNodes);\n        if (patches.length) {\n            collectedFields = new Map(collectedFields);\n            for (const patch of patches) {\n                for (const [responseKey, fields] of patch.fields) {\n                    const existingFields = collectedFields.get(responseKey);\n                    if (existingFields) {\n                        existingFields.push(...fields);\n                    }\n                    else {\n                        collectedFields.set(responseKey, fields);\n                    }\n                }\n            }\n        }\n        return visitObjectValue(value, nullableType, collectedFields, schema, fragments, variableValues, resultVisitorMap, pathIndex, errors, errorInfo);\n    }\n    const typeVisitorMap = resultVisitorMap?.[nullableType.name];\n    if (typeVisitorMap == null) {\n        return value;\n    }\n    const visitedValue = typeVisitorMap(value);\n    return visitedValue === undefined ? value : visitedValue;\n}\nfunction sortErrorsByPathSegment(errors, pathIndex) {\n    const errorMap = Object.create(null);\n    const unpathedErrors = new Set();\n    for (const error of errors) {\n        const pathSegment = error.path?.[pathIndex];\n        if (pathSegment == null) {\n            unpathedErrors.add(error);\n            continue;\n        }\n        if (pathSegment in errorMap) {\n            errorMap[pathSegment].push(error);\n        }\n        else {\n            errorMap[pathSegment] = [error];\n        }\n    }\n    return {\n        errorMap,\n        unpathedErrors,\n    };\n}\nfunction addPathSegmentInfo(type, fieldName, pathIndex, errors = [], errorInfo) {\n    for (const error of errors) {\n        const segmentInfo = {\n            type,\n            fieldName,\n            pathIndex,\n        };\n        const pathSegmentsInfo = errorInfo.segmentInfoMap.get(error);\n        if (pathSegmentsInfo == null) {\n            errorInfo.segmentInfoMap.set(error, [segmentInfo]);\n        }\n        else {\n            pathSegmentsInfo.push(segmentInfo);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@graphql-tools/wrap/node_modules/@graphql-tools/utils/esm/visitResult.js\n");

/***/ })

};
;