"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@sentry-internal";
exports.ids = ["vendor-chunks/@sentry-internal"];
exports.modules = {

/***/ "(ssr)/../node_modules/@sentry-internal/feedback/esm/index.js":
/*!**************************************************************!*\
  !*** ../node_modules/@sentry-internal/feedback/esm/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Feedback: () => (/* binding */ Feedback),\n/* harmony export */   feedbackIntegration: () => (/* binding */ feedbackIntegration),\n/* harmony export */   sendFeedback: () => (/* binding */ sendFeedback)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/worldwide.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/isBrowser.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/prepareEvent.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/envelope.js\");\n\n\n\n// exporting a separate copy of `WINDOW` rather than exporting the one from `@sentry/browser`\n// prevents the browser package from being bundled in the CDN bundle, and avoids a\n// circular dependency between the browser and feedback packages\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ ;\n\nconst LIGHT_BACKGROUND = '#ffffff';\nconst INHERIT = 'inherit';\nconst SUBMIT_COLOR = 'rgba(108, 95, 199, 1)';\nconst LIGHT_THEME = {\n  fontFamily: \"system-ui, 'Helvetica Neue', Arial, sans-serif\",\n  fontSize: '14px',\n\n  background: LIGHT_BACKGROUND,\n  backgroundHover: '#f6f6f7',\n  foreground: '#2b2233',\n  border: '1.5px solid rgba(41, 35, 47, 0.13)',\n  borderRadius: '25px',\n  boxShadow: '0px 4px 24px 0px rgba(43, 34, 51, 0.12)',\n\n  success: '#268d75',\n  error: '#df3338',\n\n  submitBackground: 'rgba(88, 74, 192, 1)',\n  submitBackgroundHover: SUBMIT_COLOR,\n  submitBorder: SUBMIT_COLOR,\n  submitOutlineFocus: '#29232f',\n  submitForeground: LIGHT_BACKGROUND,\n  submitForegroundHover: LIGHT_BACKGROUND,\n\n  cancelBackground: 'transparent',\n  cancelBackgroundHover: 'var(--background-hover)',\n  cancelBorder: 'var(--border)',\n  cancelOutlineFocus: 'var(--input-outline-focus)',\n  cancelForeground: 'var(--foreground)',\n  cancelForegroundHover: 'var(--foreground)',\n\n  inputBackground: INHERIT,\n  inputForeground: INHERIT,\n  inputBorder: 'var(--border)',\n  inputOutlineFocus: SUBMIT_COLOR,\n\n  formBorderRadius: '20px',\n  formContentBorderRadius: '6px',\n};\n\nconst DEFAULT_THEME = {\n  light: LIGHT_THEME,\n  dark: {\n    ...LIGHT_THEME,\n\n    background: '#29232f',\n    backgroundHover: '#352f3b',\n    foreground: '#ebe6ef',\n    border: '1.5px solid rgba(235, 230, 239, 0.15)',\n\n    success: '#2da98c',\n    error: '#f55459',\n  },\n};\n\nconst ACTOR_LABEL = 'Report a Bug';\nconst CANCEL_BUTTON_LABEL = 'Cancel';\nconst SUBMIT_BUTTON_LABEL = 'Send Bug Report';\nconst FORM_TITLE = 'Report a Bug';\nconst EMAIL_PLACEHOLDER = 'your.email@example.org';\nconst EMAIL_LABEL = 'Email';\nconst MESSAGE_PLACEHOLDER = \"What's the bug? What did you expect?\";\nconst MESSAGE_LABEL = 'Description';\nconst NAME_PLACEHOLDER = 'Your Name';\nconst NAME_LABEL = 'Name';\nconst IS_REQUIRED_LABEL = '(required)';\nconst SUCCESS_MESSAGE_TEXT = 'Thank you for your report!';\n\nconst FEEDBACK_WIDGET_SOURCE = 'widget';\nconst FEEDBACK_API_SOURCE = 'api';\n\n/**\n * Prepare a feedback event & enrich it with the SDK metadata.\n */\nasync function prepareFeedbackEvent({\n  client,\n  scope,\n  event,\n}) {\n  const eventHint = {};\n  if (client.emit) {\n    client.emit('preprocessEvent', event, eventHint);\n  }\n\n  const preparedEvent = (await (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.prepareEvent)(\n    client.getOptions(),\n    event,\n    eventHint,\n    scope,\n    client,\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.getIsolationScope)(),\n  )) ;\n\n  if (preparedEvent === null) {\n    // Taken from baseclient's `_processEvent` method, where this is handled for errors/transactions\n    client.recordDroppedEvent('event_processor', 'feedback', event);\n    return null;\n  }\n\n  // This normally happens in browser client \"_prepareEvent\"\n  // but since we do not use this private method from the client, but rather the plain import\n  // we need to do this manually.\n  preparedEvent.platform = preparedEvent.platform || 'javascript';\n\n  return preparedEvent;\n}\n\n/**\n * Send feedback using transport\n */\nasync function sendFeedbackRequest(\n  { feedback: { message, email, name, source, url } },\n  { includeReplay = true } = {},\n) {\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n  const transport = client && client.getTransport();\n  const dsn = client && client.getDsn();\n\n  if (!client || !transport || !dsn) {\n    return;\n  }\n\n  const baseEvent = {\n    contexts: {\n      feedback: {\n        contact_email: email,\n        name,\n        message,\n        url,\n        source,\n      },\n    },\n    type: 'feedback',\n  };\n\n  return (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.withScope)(async scope => {\n    // No use for breadcrumbs in feedback\n    scope.clearBreadcrumbs();\n\n    if ([FEEDBACK_API_SOURCE, FEEDBACK_WIDGET_SOURCE].includes(String(source))) {\n      scope.setLevel('info');\n    }\n\n    const feedbackEvent = await prepareFeedbackEvent({\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      scope: scope ,\n      client,\n      event: baseEvent,\n    });\n\n    if (!feedbackEvent) {\n      return;\n    }\n\n    if (client.emit) {\n      client.emit('beforeSendFeedback', feedbackEvent, { includeReplay: Boolean(includeReplay) });\n    }\n\n    const envelope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.createEventEnvelope)(feedbackEvent, dsn, client.getOptions()._metadata, client.getOptions().tunnel);\n\n    let response;\n\n    try {\n      response = await transport.send(envelope);\n    } catch (err) {\n      const error = new Error('Unable to send Feedback');\n\n      try {\n        // In case browsers don't allow this property to be writable\n        // @ts-expect-error This needs lib es2022 and newer\n        error.cause = err;\n      } catch (e) {\n        // nothing to do\n      }\n      throw error;\n    }\n\n    // TODO (v8): we can remove this guard once transport.send's type signature doesn't include void anymore\n    if (!response) {\n      return;\n    }\n\n    // Require valid status codes, otherwise can assume feedback was not sent successfully\n    if (typeof response.statusCode === 'number' && (response.statusCode < 200 || response.statusCode >= 300)) {\n      throw new Error('Unable to send Feedback');\n    }\n\n    return response;\n  });\n}\n\n/*\n * For reference, the fully built event looks something like this:\n * {\n *     \"type\": \"feedback\",\n *     \"event_id\": \"d2132d31b39445f1938d7e21b6bf0ec4\",\n *     \"timestamp\": 1597977777.6189718,\n *     \"dist\": \"1.12\",\n *     \"platform\": \"javascript\",\n *     \"environment\": \"production\",\n *     \"release\": 42,\n *     \"tags\": {\"transaction\": \"/organizations/:orgId/performance/:eventSlug/\"},\n *     \"sdk\": {\"name\": \"name\", \"version\": \"version\"},\n *     \"user\": {\n *         \"id\": \"123\",\n *         \"username\": \"user\",\n *         \"email\": \"user@site.com\",\n *         \"ip_address\": \"192.168.11.12\",\n *     },\n *     \"request\": {\n *         \"url\": None,\n *         \"headers\": {\n *             \"user-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.5 Safari/605.1.15\"\n *         },\n *     },\n *     \"contexts\": {\n *         \"feedback\": {\n *             \"message\": \"test message\",\n *             \"contact_email\": \"test@example.com\",\n *             \"type\": \"feedback\",\n *         },\n *         \"trace\": {\n *             \"trace_id\": \"4C79F60C11214EB38604F4AE0781BFB2\",\n *             \"span_id\": \"FA90FDEAD5F74052\",\n *             \"type\": \"trace\",\n *         },\n *         \"replay\": {\n *             \"replay_id\": \"e2d42047b1c5431c8cba85ee2a8ab25d\",\n *         },\n *     },\n *   }\n */\n\n/**\n * Public API to send a Feedback item to Sentry\n */\nfunction sendFeedback(\n  { name, email, message, source = FEEDBACK_API_SOURCE, url = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_5__.getLocationHref)() },\n  options = {},\n) {\n  if (!message) {\n    throw new Error('Unable to submit feedback with empty message');\n  }\n\n  return sendFeedbackRequest(\n    {\n      feedback: {\n        name,\n        email,\n        message,\n        url,\n        source,\n      },\n    },\n    options,\n  );\n}\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\n/**\n * Quick and dirty deep merge for the Feedback integration options\n */\nfunction mergeOptions(\n  defaultOptions,\n  optionOverrides,\n) {\n  return {\n    ...defaultOptions,\n    ...optionOverrides,\n    themeDark: {\n      ...defaultOptions.themeDark,\n      ...optionOverrides.themeDark,\n    },\n    themeLight: {\n      ...defaultOptions.themeLight,\n      ...optionOverrides.themeLight,\n    },\n  };\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nfunction createActorStyles(d) {\n  const style = d.createElement('style');\n  style.textContent = `\n.widget__actor {\n  position: fixed;\n  left: var(--left);\n  right: var(--right);\n  bottom: var(--bottom);\n  top: var(--top);\n  z-index: var(--z-index);\n\n  line-height: 16px;\n\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  border-radius: var(--border-radius);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  padding: 16px;\n  text-decoration: none;\n  z-index: 9000;\n\n  color: var(--foreground);\n  background-color: var(--background);\n  border: var(--border);\n  box-shadow: var(--box-shadow);\n  opacity: 1;\n  transition: opacity 0.1s ease-in-out;\n}\n\n.widget__actor:hover {\n  background-color: var(--background-hover);\n}\n\n.widget__actor svg {\n  width: 16px;\n  height: 16px;\n}\n\n.widget__actor--hidden {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n\n.widget__actor__text {\n}\n\n@media (max-width: 600px) {\n  .widget__actor__text {\n    display: none;\n  }\n}\n\n.feedback-icon path {\n  fill: var(--foreground);\n}\n`;\n\n  return style;\n}\n\n/**\n * Creates <style> element for widget dialog\n */\nfunction createDialogStyles(d) {\n  const style = d.createElement('style');\n\n  style.textContent = `\n.dialog {\n  line-height: 25px;\n  background-color: rgba(0, 0, 0, 0.05);\n  border: none;\n  position: fixed;\n  inset: 0;\n  z-index: 10000;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  opacity: 1;\n  transition: opacity 0.2s ease-in-out;\n}\n\n.dialog:not([open]) {\n  opacity: 0;\n  pointer-events: none;\n  visibility: hidden;\n}\n.dialog:not([open]) .dialog__content {\n  transform: translate(0, -16px) scale(0.98);\n}\n\n.dialog__content {\n  position: fixed;\n  left: var(--left);\n  right: var(--right);\n  bottom: var(--bottom);\n  top: var(--top);\n\n  border: var(--border);\n  border-radius: var(--form-border-radius);\n  background-color: var(--background);\n  color: var(--foreground);\n\n  width: 320px;\n  max-width: 100%;\n  max-height: calc(100% - 2rem);\n  display: flex;\n  flex-direction: column;\n  box-shadow: var(--box-shadow);\n  transition: transform 0.2s ease-in-out;\n  transform: translate(0, 0) scale(1);\n}\n\n.dialog__header {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n  font-weight: 600;\n  padding: 24px 24px 0 24px;\n  margin: 0;\n  margin-bottom: 16px;\n}\n\n.brand-link {\n  display: inline-flex;\n}\n\n.error {\n  color: var(--error);\n  margin-bottom: 16px;\n}\n\n.form {\n  display: grid;\n  overflow: auto;\n  flex-direction: column;\n  gap: 16px;\n  padding: 0 24px 24px;\n}\n\n.form__error-container {\n  color: var(--error);\n}\n\n.form__error-container--hidden {\n  display: none;\n}\n\n.form__label {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  margin: 0px;\n}\n\n.form__label__text {\n  display: grid;\n  gap: 4px;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-auto-columns: max-content;\n}\n\n.form__label__text--required {\n  font-size: 0.85em;\n}\n\n.form__input {\n  line-height: inherit;\n  background-color: var(--input-background);\n  box-sizing: border-box;\n  border: var(--input-border);\n  border-radius: var(--form-content-border-radius);\n  color: var(--input-foreground);\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 500;\n  padding: 6px 12px;\n}\n\n.form__input::placeholder {\n  color: var(--input-foreground);\n  opacity: 0.65;\n}\n\n.form__input:focus-visible {\n  outline: 1px auto var(--input-outline-focus);\n}\n\n.form__input--textarea {\n  font-family: inherit;\n  resize: vertical;\n}\n\n.btn-group {\n  display: grid;\n  gap: 8px;\n  margin-top: 8px;\n}\n\n.btn {\n  line-height: inherit;\n  border: var(--cancel-border);\n  border-radius: var(--form-content-border-radius);\n  cursor: pointer;\n  font-family: inherit;\n  font-size: var(--font-size);\n  font-weight: 600;\n  padding: 6px 16px;\n}\n.btn[disabled] {\n  opacity: 0.6;\n  pointer-events: none;\n}\n\n.btn--primary {\n  background-color: var(--submit-background);\n  border-color: var(--submit-border);\n  color: var(--submit-foreground);\n}\n.btn--primary:hover {\n  background-color: var(--submit-background-hover);\n  color: var(--submit-foreground-hover);\n}\n.btn--primary:focus-visible {\n  outline: 1px auto var(--submit-outline-focus);\n}\n\n.btn--default {\n  background-color: var(--cancel-background);\n  color: var(--cancel-foreground);\n  font-weight: 500;\n}\n.btn--default:hover {\n  background-color: var(--cancel-background-hover);\n  color: var(--cancel-foreground-hover);\n}\n.btn--default:focus-visible {\n  outline: 1px auto var(--cancel-outline-focus);\n}\n\n.success-message {\n  background-color: var(--background);\n  border: var(--border);\n  border-radius: var(--border-radius);\n  box-shadow: var(--box-shadow);\n  font-weight: 600;\n  color: var(--success);\n  padding: 12px 24px;\n  line-height: 25px;\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  gap: 6px;\n  cursor: default;\n}\n\n.success-icon path {\n  fill: var(--success);\n}\n`;\n\n  return style;\n}\n\nfunction getThemedCssVariables(theme) {\n  return `\n  --background: ${theme.background};\n  --background-hover: ${theme.backgroundHover};\n  --foreground: ${theme.foreground};\n  --error: ${theme.error};\n  --success: ${theme.success};\n  --border: ${theme.border};\n  --border-radius: ${theme.borderRadius};\n  --box-shadow: ${theme.boxShadow};\n\n  --submit-background: ${theme.submitBackground};\n  --submit-background-hover: ${theme.submitBackgroundHover};\n  --submit-border: ${theme.submitBorder};\n  --submit-outline-focus: ${theme.submitOutlineFocus};\n  --submit-foreground: ${theme.submitForeground};\n  --submit-foreground-hover: ${theme.submitForegroundHover};\n\n  --cancel-background: ${theme.cancelBackground};\n  --cancel-background-hover: ${theme.cancelBackgroundHover};\n  --cancel-border: ${theme.cancelBorder};\n  --cancel-outline-focus: ${theme.cancelOutlineFocus};\n  --cancel-foreground: ${theme.cancelForeground};\n  --cancel-foreground-hover: ${theme.cancelForegroundHover};\n\n  --input-background: ${theme.inputBackground};\n  --input-foreground: ${theme.inputForeground};\n  --input-border: ${theme.inputBorder};\n  --input-outline-focus: ${theme.inputOutlineFocus};\n\n  --form-border-radius: ${theme.formBorderRadius};\n  --form-content-border-radius: ${theme.formContentBorderRadius};\n  `;\n}\n\n/**\n * Creates <style> element for widget actor (button that opens the dialog)\n */\nfunction createMainStyles(\n  d,\n  colorScheme,\n  themes,\n) {\n  const style = d.createElement('style');\n  style.textContent = `\n:host {\n  --bottom: 1rem;\n  --right: 1rem;\n  --top: auto;\n  --left: auto;\n  --z-index: 100000;\n  --font-family: ${themes.light.fontFamily};\n  --font-size: ${themes.light.fontSize};\n\n  position: fixed;\n  left: var(--left);\n  right: var(--right);\n  bottom: var(--bottom);\n  top: var(--top);\n  z-index: var(--z-index);\n\n  font-family: var(--font-family);\n  font-size: var(--font-size);\n\n  ${getThemedCssVariables(colorScheme === 'dark' ? themes.dark : themes.light)}\n}\n\n${\n  colorScheme === 'system'\n    ? `\n@media (prefers-color-scheme: dark) {\n  :host {\n    ${getThemedCssVariables(themes.dark)}\n  }\n}`\n    : ''\n}\n}`;\n\n  return style;\n}\n\n/**\n * Creates shadow host\n */\nfunction createShadowHost({ id, colorScheme, themeDark, themeLight })\n\n {\n  try {\n    const doc = WINDOW.document;\n\n    // Create the host\n    const host = doc.createElement('div');\n    host.id = id;\n\n    // Create the shadow root\n    const shadow = host.attachShadow({ mode: 'open' });\n\n    shadow.appendChild(createMainStyles(doc, colorScheme, { dark: themeDark, light: themeLight }));\n    shadow.appendChild(createDialogStyles(doc));\n\n    return { shadow, host };\n  } catch (e) {\n    // Shadow DOM probably not supported\n    _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('[Feedback] Browser does not support shadow DOM API');\n    throw new Error('Browser does not support shadow DOM API.');\n  }\n}\n\n/**\n * Handles UI behavior of dialog when feedback is submitted, calls\n * `sendFeedback` to send feedback.\n */\nasync function handleFeedbackSubmit(\n  dialog,\n  feedback,\n  options,\n) {\n  if (!dialog) {\n    // Not sure when this would happen\n    return;\n  }\n\n  const showFetchError = () => {\n    if (!dialog) {\n      return;\n    }\n    dialog.showError('There was a problem submitting feedback, please wait and try again.');\n  };\n\n  dialog.hideError();\n\n  try {\n    const resp = await sendFeedback({ ...feedback, source: FEEDBACK_WIDGET_SOURCE }, options);\n\n    // Success!\n    return resp;\n  } catch (err) {\n    DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n    showFetchError();\n  }\n}\n\n/**\n * Helper function to set a dict of attributes on element (w/ specified namespace)\n */\nfunction setAttributesNS(el, attributes) {\n  Object.entries(attributes).forEach(([key, val]) => {\n    el.setAttributeNS(null, key, val);\n  });\n  return el;\n}\n\nconst SIZE = 20;\nconst XMLNS$2 = 'http://www.w3.org/2000/svg';\n\n/**\n * Feedback Icon\n */\nfunction Icon() {\n  const createElementNS = (tagName) =>\n    WINDOW.document.createElementNS(XMLNS$2, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'feedback-icon',\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    fill: 'none',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_80)',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M15.6622 15H12.3997C12.2129 14.9959 12.031 14.9396 11.8747 14.8375L8.04965 12.2H7.49956V19.1C7.4875 19.3348 7.3888 19.5568 7.22256 19.723C7.05632 19.8892 6.83435 19.9879 6.59956 20H2.04956C1.80193 19.9968 1.56535 19.8969 1.39023 19.7218C1.21511 19.5467 1.1153 19.3101 1.11206 19.0625V12.2H0.949652C0.824431 12.2017 0.700142 12.1783 0.584123 12.1311C0.468104 12.084 0.362708 12.014 0.274155 11.9255C0.185602 11.8369 0.115689 11.7315 0.0685419 11.6155C0.0213952 11.4995 -0.00202913 11.3752 -0.00034808 11.25V3.75C-0.00900498 3.62067 0.0092504 3.49095 0.0532651 3.36904C0.0972798 3.24712 0.166097 3.13566 0.255372 3.04168C0.344646 2.94771 0.452437 2.87327 0.571937 2.82307C0.691437 2.77286 0.82005 2.74798 0.949652 2.75H8.04965L11.8747 0.1625C12.031 0.0603649 12.2129 0.00407221 12.3997 0H15.6622C15.9098 0.00323746 16.1464 0.103049 16.3215 0.278167C16.4966 0.453286 16.5964 0.689866 16.5997 0.9375V3.25269C17.3969 3.42959 18.1345 3.83026 18.7211 4.41679C19.5322 5.22788 19.9878 6.32796 19.9878 7.47502C19.9878 8.62209 19.5322 9.72217 18.7211 10.5333C18.1345 11.1198 17.3969 11.5205 16.5997 11.6974V14.0125C16.6047 14.1393 16.5842 14.2659 16.5395 14.3847C16.4948 14.5035 16.4268 14.6121 16.3394 14.7042C16.252 14.7962 16.147 14.8698 16.0307 14.9206C15.9144 14.9714 15.7891 14.9984 15.6622 15ZM1.89695 10.325H1.88715V4.625H8.33715C8.52423 4.62301 8.70666 4.56654 8.86215 4.4625L12.6872 1.875H14.7247V13.125H12.6872L8.86215 10.4875C8.70666 10.3835 8.52423 10.327 8.33715 10.325H2.20217C2.15205 10.3167 2.10102 10.3125 2.04956 10.3125C1.9981 10.3125 1.94708 10.3167 1.89695 10.325ZM2.98706 12.2V18.1625H5.66206V12.2H2.98706ZM16.5997 9.93612V5.01393C16.6536 5.02355 16.7072 5.03495 16.7605 5.04814C17.1202 5.13709 17.4556 5.30487 17.7425 5.53934C18.0293 5.77381 18.2605 6.06912 18.4192 6.40389C18.578 6.73866 18.6603 7.10452 18.6603 7.47502C18.6603 7.84552 18.578 8.21139 18.4192 8.54616C18.2605 8.88093 18.0293 9.17624 17.7425 9.41071C17.4556 9.64518 17.1202 9.81296 16.7605 9.90191C16.7072 9.91509 16.6536 9.9265 16.5997 9.93612Z',\n  });\n  svg.appendChild(g).appendChild(path);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_80',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${SIZE}`,\n    height: `${SIZE}`,\n    fill: 'white',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n\n/**\n * Helper function to create an element. Could be used as a JSX factory\n * (i.e. React-like syntax).\n */\nfunction createElement(\n  tagName,\n  attributes,\n  ...children\n) {\n  const doc = WINDOW.document;\n  const element = doc.createElement(tagName);\n\n  if (attributes) {\n    Object.entries(attributes).forEach(([attribute, attributeValue]) => {\n      if (attribute === 'className' && typeof attributeValue === 'string') {\n        // JSX does not allow class as a valid name\n        element.setAttribute('class', attributeValue);\n      } else if (typeof attributeValue === 'boolean' && attributeValue) {\n        element.setAttribute(attribute, '');\n      } else if (typeof attributeValue === 'string') {\n        element.setAttribute(attribute, attributeValue);\n      } else if (attribute.startsWith('on') && typeof attributeValue === 'function') {\n        element.addEventListener(attribute.substring(2).toLowerCase(), attributeValue);\n      }\n    });\n  }\n  for (const child of children) {\n    appendChild(element, child);\n  }\n\n  return element;\n}\n\nfunction appendChild(parent, child) {\n  const doc = WINDOW.document;\n  if (typeof child === 'undefined' || child === null) {\n    return;\n  }\n\n  if (Array.isArray(child)) {\n    for (const value of child) {\n      appendChild(parent, value);\n    }\n  } else if (child === false) ; else if (typeof child === 'string') {\n    parent.appendChild(doc.createTextNode(child));\n  } else if (child instanceof Node) {\n    parent.appendChild(child);\n  } else {\n    parent.appendChild(doc.createTextNode(String(child)));\n  }\n}\n\n/**\n *\n */\nfunction Actor({ buttonLabel, onClick }) {\n  function _handleClick(e) {\n    onClick && onClick(e);\n  }\n\n  const el = createElement(\n    'button',\n    {\n      type: 'button',\n      className: 'widget__actor',\n      ['aria-label']: buttonLabel,\n      ['aria-hidden']: 'false',\n    },\n    Icon().el,\n    buttonLabel\n      ? createElement(\n          'span',\n          {\n            className: 'widget__actor__text',\n          },\n          buttonLabel,\n        )\n      : null,\n  );\n\n  el.addEventListener('click', _handleClick);\n\n  return {\n    get el() {\n      return el;\n    },\n    show: () => {\n      el.classList.remove('widget__actor--hidden');\n      el.setAttribute('aria-hidden', 'false');\n    },\n    hide: () => {\n      el.classList.add('widget__actor--hidden');\n      el.setAttribute('aria-hidden', 'true');\n    },\n  };\n}\n\n/**\n *\n */\nfunction SubmitButton({ label }) {\n  const el = createElement(\n    'button',\n    {\n      type: 'submit',\n      className: 'btn btn--primary',\n      ['aria-label']: label,\n    },\n    label,\n  );\n\n  return {\n    el,\n  };\n}\n\nfunction retrieveStringValue(formData, key) {\n  const value = formData.get(key);\n  if (typeof value === 'string') {\n    return value.trim();\n  }\n  return '';\n}\n\n/**\n * Creates the form element\n */\nfunction Form({\n  nameLabel,\n  namePlaceholder,\n  emailLabel,\n  emailPlaceholder,\n  messageLabel,\n  messagePlaceholder,\n  isRequiredLabel,\n  cancelButtonLabel,\n  submitButtonLabel,\n\n  showName,\n  showEmail,\n  isNameRequired,\n  isEmailRequired,\n\n  defaultName,\n  defaultEmail,\n  onCancel,\n  onSubmit,\n}) {\n  const { el: submitEl } = SubmitButton({\n    label: submitButtonLabel,\n  });\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!(e.target instanceof HTMLFormElement)) {\n      return;\n    }\n\n    try {\n      if (onSubmit) {\n        const formData = new FormData(e.target );\n        const feedback = {\n          name: retrieveStringValue(formData, 'name'),\n          email: retrieveStringValue(formData, 'email'),\n          message: retrieveStringValue(formData, 'message'),\n        };\n\n        onSubmit(feedback);\n      }\n    } catch (e2) {\n      // pass\n    }\n  }\n\n  const errorEl = createElement('div', {\n    className: 'form__error-container form__error-container--hidden',\n    ['aria-hidden']: 'true',\n  });\n\n  function showError(message) {\n    errorEl.textContent = message;\n    errorEl.classList.remove('form__error-container--hidden');\n    errorEl.setAttribute('aria-hidden', 'false');\n  }\n\n  function hideError() {\n    errorEl.textContent = '';\n    errorEl.classList.add('form__error-container--hidden');\n    errorEl.setAttribute('aria-hidden', 'true');\n  }\n\n  const nameEl = createElement('input', {\n    id: 'name',\n    type: showName ? 'text' : 'hidden',\n    ['aria-hidden']: showName ? 'false' : 'true',\n    name: 'name',\n    required: isNameRequired,\n    className: 'form__input',\n    placeholder: namePlaceholder,\n    value: defaultName,\n  });\n\n  const emailEl = createElement('input', {\n    id: 'email',\n    type: showEmail ? 'text' : 'hidden',\n    ['aria-hidden']: showEmail ? 'false' : 'true',\n    name: 'email',\n    required: isEmailRequired,\n    className: 'form__input',\n    placeholder: emailPlaceholder,\n    value: defaultEmail,\n  });\n\n  const messageEl = createElement('textarea', {\n    id: 'message',\n    autoFocus: 'true',\n    rows: '5',\n    name: 'message',\n    required: true,\n    className: 'form__input form__input--textarea',\n    placeholder: messagePlaceholder,\n  });\n\n  const cancelEl = createElement(\n    'button',\n    {\n      type: 'button',\n      className: 'btn btn--default',\n      ['aria-label']: cancelButtonLabel,\n      onClick: (e) => {\n        onCancel && onCancel(e);\n      },\n    },\n    cancelButtonLabel,\n  );\n\n  const formEl = createElement(\n    'form',\n    {\n      className: 'form',\n      onSubmit: handleSubmit,\n    },\n    [\n      errorEl,\n\n      showName &&\n        createElement(\n          'label',\n          {\n            htmlFor: 'name',\n            className: 'form__label',\n          },\n          [\n            createElement(\n              'span',\n              { className: 'form__label__text' },\n              nameLabel,\n              isNameRequired &&\n                createElement('span', { className: 'form__label__text--required' }, ` ${isRequiredLabel}`),\n            ),\n            nameEl,\n          ],\n        ),\n      !showName && nameEl,\n\n      showEmail &&\n        createElement(\n          'label',\n          {\n            htmlFor: 'email',\n            className: 'form__label',\n          },\n          [\n            createElement(\n              'span',\n              { className: 'form__label__text' },\n              emailLabel,\n              isEmailRequired &&\n                createElement('span', { className: 'form__label__text--required' }, ` ${isRequiredLabel}`),\n            ),\n            emailEl,\n          ],\n        ),\n      !showEmail && emailEl,\n\n      createElement(\n        'label',\n        {\n          htmlFor: 'message',\n          className: 'form__label',\n        },\n        [\n          createElement(\n            'span',\n            { className: 'form__label__text' },\n            messageLabel,\n            createElement('span', { className: 'form__label__text--required' }, ` ${isRequiredLabel}`),\n          ),\n          messageEl,\n        ],\n      ),\n\n      createElement(\n        'div',\n        {\n          className: 'btn-group',\n        },\n        [submitEl, cancelEl],\n      ),\n    ],\n  );\n\n  return {\n    get el() {\n      return formEl;\n    },\n    showError,\n    hideError,\n  };\n}\n\nconst XMLNS$1 = 'http://www.w3.org/2000/svg';\n\n/**\n * Sentry Logo\n */\nfunction Logo({ colorScheme }) {\n  const createElementNS = (tagName) =>\n    WINDOW.document.createElementNS(XMLNS$1, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'sentry-logo',\n    width: '32',\n    height: '30',\n    viewBox: '0 0 72 66',\n    fill: 'none',\n  });\n\n  const path = setAttributesNS(createElementNS('path'), {\n    transform: 'translate(11, 11)',\n    d: 'M29,2.26a4.67,4.67,0,0,0-8,0L14.42,13.53A32.21,32.21,0,0,1,32.17,40.19H27.55A27.68,27.68,0,0,0,12.09,17.47L6,28a15.92,15.92,0,0,1,9.23,12.17H4.62A.76.76,0,0,1,4,39.06l2.94-5a10.74,10.74,0,0,0-3.36-1.9l-2.91,5a4.54,4.54,0,0,0,1.69,6.24A4.66,4.66,0,0,0,4.62,44H19.15a19.4,19.4,0,0,0-8-17.31l2.31-4A23.87,23.87,0,0,1,23.76,44H36.07a35.88,35.88,0,0,0-16.41-31.8l4.67-8a.77.77,0,0,1,1.05-.27c.53.29,20.29,34.77,20.66,35.17a.76.76,0,0,1-.68,1.13H40.6q.09,1.91,0,3.81h4.78A4.59,4.59,0,0,0,50,39.43a4.49,4.49,0,0,0-.62-2.28Z',\n  });\n  svg.append(path);\n\n  const defs = createElementNS('defs');\n  const style = createElementNS('style');\n\n  style.textContent = `\n    path {\n      fill: ${colorScheme === 'dark' ? '#fff' : '#362d59'};\n    }`;\n\n  if (colorScheme === 'system') {\n    style.textContent += `\n    @media (prefers-color-scheme: dark) {\n      path: {\n        fill: '#fff';\n      }\n    }\n    `;\n  }\n\n  defs.append(style);\n  svg.append(defs);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n\n/**\n * Feedback dialog component that has the form\n */\nfunction Dialog({\n  formTitle,\n  showBranding,\n  showName,\n  showEmail,\n  isNameRequired,\n  isEmailRequired,\n  colorScheme,\n  defaultName,\n  defaultEmail,\n  onClosed,\n  onCancel,\n  onSubmit,\n  ...textLabels\n}) {\n  let el = null;\n\n  /**\n   * Handles when the dialog is clicked. In our case, the dialog is the\n   * semi-transparent bg behind the form. We want clicks outside of the form to\n   * hide the form.\n   */\n  function handleDialogClick() {\n    close();\n\n    // Only this should trigger `onClose`, we don't want the `close()` method to\n    // trigger it, otherwise it can cause cycles.\n    onClosed && onClosed();\n  }\n\n  /**\n   * Close the dialog\n   */\n  function close() {\n    if (el) {\n      el.open = false;\n    }\n  }\n\n  /**\n   * Opens the dialog\n   */\n  function open() {\n    if (el) {\n      el.open = true;\n    }\n  }\n\n  /**\n   * Check if dialog is currently opened\n   */\n  function checkIsOpen() {\n    return (el && el.open === true) || false;\n  }\n\n  const {\n    el: formEl,\n    showError,\n    hideError,\n  } = Form({\n    showEmail,\n    showName,\n    isEmailRequired,\n    isNameRequired,\n\n    defaultName,\n    defaultEmail,\n    onSubmit,\n    onCancel,\n    ...textLabels,\n  });\n\n  el = createElement(\n    'dialog',\n    {\n      className: 'dialog',\n      open: true,\n      onClick: handleDialogClick,\n    },\n    createElement(\n      'div',\n      {\n        className: 'dialog__content',\n        onClick: e => {\n          // Stop event propagation so clicks on content modal do not propagate to dialog (which will close dialog)\n          e.stopPropagation();\n        },\n      },\n      createElement(\n        'h2',\n        { className: 'dialog__header' },\n        formTitle,\n        showBranding &&\n          createElement(\n            'a',\n            {\n              className: 'brand-link',\n              target: '_blank',\n              href: 'https://sentry.io/welcome/',\n              title: 'Powered by Sentry',\n              rel: 'noopener noreferrer',\n            },\n            Logo({ colorScheme }).el,\n          ),\n      ),\n      formEl,\n    ),\n  );\n\n  return {\n    get el() {\n      return el;\n    },\n    showError,\n    hideError,\n    open,\n    close,\n    checkIsOpen,\n  };\n}\n\nconst WIDTH = 16;\nconst HEIGHT = 17;\nconst XMLNS = 'http://www.w3.org/2000/svg';\n\n/**\n * Success Icon (checkmark)\n */\nfunction SuccessIcon() {\n  const createElementNS = (tagName) =>\n    WINDOW.document.createElementNS(XMLNS, tagName);\n  const svg = setAttributesNS(createElementNS('svg'), {\n    class: 'success-icon',\n    width: `${WIDTH}`,\n    height: `${HEIGHT}`,\n    viewBox: `0 0 ${WIDTH} ${HEIGHT}`,\n    fill: 'none',\n  });\n\n  const g = setAttributesNS(createElementNS('g'), {\n    clipPath: 'url(#clip0_57_156)',\n  });\n\n  const path2 = setAttributesNS(createElementNS('path'), {\n    ['fill-rule']: 'evenodd',\n    ['clip-rule']: 'evenodd',\n    d: 'M3.55544 15.1518C4.87103 16.0308 6.41775 16.5 8 16.5C10.1217 16.5 12.1566 15.6571 13.6569 14.1569C15.1571 12.6566 16 10.6217 16 8.5C16 6.91775 15.5308 5.37103 14.6518 4.05544C13.7727 2.73985 12.5233 1.71447 11.0615 1.10897C9.59966 0.503466 7.99113 0.34504 6.43928 0.653721C4.88743 0.962403 3.46197 1.72433 2.34315 2.84315C1.22433 3.96197 0.462403 5.38743 0.153721 6.93928C-0.15496 8.49113 0.00346625 10.0997 0.608967 11.5615C1.21447 13.0233 2.23985 14.2727 3.55544 15.1518ZM4.40546 3.1204C5.46945 2.40946 6.72036 2.03 8 2.03C9.71595 2.03 11.3616 2.71166 12.575 3.92502C13.7883 5.13838 14.47 6.78405 14.47 8.5C14.47 9.77965 14.0905 11.0306 13.3796 12.0945C12.6687 13.1585 11.6582 13.9878 10.476 14.4775C9.29373 14.9672 7.99283 15.0953 6.73777 14.8457C5.48271 14.596 4.32987 13.9798 3.42502 13.075C2.52018 12.1701 1.90397 11.0173 1.65432 9.76224C1.40468 8.50718 1.5328 7.20628 2.0225 6.02404C2.5122 4.8418 3.34148 3.83133 4.40546 3.1204Z',\n  });\n  const path = setAttributesNS(createElementNS('path'), {\n    d: 'M6.68775 12.4297C6.78586 12.4745 6.89218 12.4984 7 12.5C7.11275 12.4955 7.22315 12.4664 7.32337 12.4145C7.4236 12.3627 7.51121 12.2894 7.58 12.2L12 5.63999C12.0848 5.47724 12.1071 5.28902 12.0625 5.11098C12.0178 4.93294 11.9095 4.77744 11.7579 4.67392C11.6064 4.57041 11.4221 4.52608 11.24 4.54931C11.0579 4.57254 10.8907 4.66173 10.77 4.79999L6.88 10.57L5.13 8.56999C5.06508 8.49566 4.98613 8.43488 4.89768 8.39111C4.80922 8.34735 4.713 8.32148 4.61453 8.31498C4.51605 8.30847 4.41727 8.32147 4.32382 8.35322C4.23038 8.38497 4.14413 8.43484 4.07 8.49999C3.92511 8.63217 3.83692 8.81523 3.82387 9.01092C3.81083 9.2066 3.87393 9.39976 4 9.54999L6.43 12.24C6.50187 12.3204 6.58964 12.385 6.68775 12.4297Z',\n  });\n\n  svg.appendChild(g).append(path, path2);\n\n  const speakerDefs = createElementNS('defs');\n  const speakerClipPathDef = setAttributesNS(createElementNS('clipPath'), {\n    id: 'clip0_57_156',\n  });\n\n  const speakerRect = setAttributesNS(createElementNS('rect'), {\n    width: `${WIDTH}`,\n    height: `${WIDTH}`,\n    fill: 'white',\n    transform: 'translate(0 0.5)',\n  });\n\n  speakerClipPathDef.appendChild(speakerRect);\n  speakerDefs.appendChild(speakerClipPathDef);\n\n  svg.appendChild(speakerDefs).appendChild(speakerClipPathDef).appendChild(speakerRect);\n\n  return {\n    get el() {\n      return svg;\n    },\n  };\n}\n\n/**\n * Feedback dialog component that has the form\n */\nfunction SuccessMessage({ message, onRemove }) {\n  function remove() {\n    if (!el) {\n      return;\n    }\n\n    el.remove();\n    onRemove && onRemove();\n  }\n\n  const el = createElement(\n    'div',\n    {\n      className: 'success-message',\n      onClick: remove,\n    },\n    SuccessIcon().el,\n    message,\n  );\n\n  return {\n    el,\n    remove,\n  };\n}\n\n/**\n * Creates a new widget. Returns public methods that control widget behavior.\n */\nfunction createWidget({\n  shadow,\n  options: { shouldCreateActor = true, ...options },\n  attachTo,\n}) {\n  let actor;\n  let dialog;\n  let isDialogOpen = false;\n\n  /**\n   * Show the success message for 5 seconds\n   */\n  function showSuccessMessage() {\n    if (!shadow) {\n      return;\n    }\n\n    try {\n      const success = SuccessMessage({\n        message: options.successMessageText,\n        onRemove: () => {\n          if (timeoutId) {\n            clearTimeout(timeoutId);\n          }\n          showActor();\n        },\n      });\n\n      if (!success.el) {\n        throw new Error('Unable to show success message');\n      }\n\n      shadow.appendChild(success.el);\n\n      const timeoutId = setTimeout(() => {\n        if (success) {\n          success.remove();\n        }\n      }, 5000);\n    } catch (err) {\n      // TODO: error handling\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n    }\n  }\n\n  /**\n   * Handler for when the feedback form is completed by the user. This will\n   * create and send the feedback message as an event.\n   */\n  async function _handleFeedbackSubmit(feedback) {\n    if (!dialog) {\n      return;\n    }\n\n    // Simple validation for now, just check for non-empty required fields\n    const emptyField = [];\n    if (options.isNameRequired && !feedback.name) {\n      emptyField.push(options.nameLabel);\n    }\n    if (options.isEmailRequired && !feedback.email) {\n      emptyField.push(options.emailLabel);\n    }\n    if (!feedback.message) {\n      emptyField.push(options.messageLabel);\n    }\n    if (emptyField.length > 0) {\n      dialog.showError(`Please enter in the following required fields: ${emptyField.join(', ')}`);\n      return;\n    }\n\n    const result = await handleFeedbackSubmit(dialog, feedback);\n\n    // Error submitting feedback\n    if (!result) {\n      if (options.onSubmitError) {\n        options.onSubmitError();\n      }\n\n      return;\n    }\n\n    // Success\n    removeDialog();\n    showSuccessMessage();\n\n    if (options.onSubmitSuccess) {\n      options.onSubmitSuccess();\n    }\n  }\n\n  /**\n   * Internal handler when dialog is opened\n   */\n  function handleOpenDialog() {\n    // Flush replay if integration exists\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getClient)();\n    const replay =\n      client &&\n      client.getIntegrationByName &&\n      client.getIntegrationByName('Replay');\n    if (!replay) {\n      return;\n    }\n    replay.flush().catch(err => {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n    });\n  }\n\n  /**\n   * Displays the default actor\n   */\n  function showActor() {\n    actor && actor.show();\n  }\n\n  /**\n   * Hides the default actor\n   */\n  function hideActor() {\n    actor && actor.hide();\n  }\n\n  /**\n   * Removes the default actor element\n   */\n  function removeActor() {\n    actor && actor.el && actor.el.remove();\n  }\n\n  /**\n   *\n   */\n  function openDialog() {\n    try {\n      if (dialog) {\n        dialog.open();\n        isDialogOpen = true;\n        if (options.onFormOpen) {\n          options.onFormOpen();\n        }\n        handleOpenDialog();\n        return;\n      }\n\n      const userKey = options.useSentryUser;\n      const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getCurrentScope)();\n      const user = scope && scope.getUser();\n\n      dialog = Dialog({\n        colorScheme: options.colorScheme,\n        showBranding: options.showBranding,\n        showName: options.showName || options.isNameRequired,\n        showEmail: options.showEmail || options.isEmailRequired,\n        isNameRequired: options.isNameRequired,\n        isEmailRequired: options.isEmailRequired,\n        formTitle: options.formTitle,\n        cancelButtonLabel: options.cancelButtonLabel,\n        submitButtonLabel: options.submitButtonLabel,\n        emailLabel: options.emailLabel,\n        emailPlaceholder: options.emailPlaceholder,\n        messageLabel: options.messageLabel,\n        messagePlaceholder: options.messagePlaceholder,\n        nameLabel: options.nameLabel,\n        namePlaceholder: options.namePlaceholder,\n        isRequiredLabel: options.isRequiredLabel,\n        defaultName: (userKey && user && user[userKey.name]) || '',\n        defaultEmail: (userKey && user && user[userKey.email]) || '',\n        onClosed: () => {\n          showActor();\n          isDialogOpen = false;\n\n          if (options.onFormClose) {\n            options.onFormClose();\n          }\n        },\n        onCancel: () => {\n          closeDialog();\n          showActor();\n        },\n        onSubmit: _handleFeedbackSubmit,\n      });\n\n      if (!dialog.el) {\n        throw new Error('Unable to open Feedback dialog');\n      }\n\n      shadow.appendChild(dialog.el);\n\n      // Hides the default actor whenever dialog is opened\n      hideActor();\n\n      if (options.onFormOpen) {\n        options.onFormOpen();\n      }\n      handleOpenDialog();\n    } catch (err) {\n      // TODO: Error handling?\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n    }\n  }\n\n  /**\n   * Closes the dialog\n   */\n  function closeDialog() {\n    if (dialog) {\n      dialog.close();\n      isDialogOpen = false;\n\n      if (options.onFormClose) {\n        options.onFormClose();\n      }\n    }\n  }\n\n  /**\n   * Removes the dialog element from DOM\n   */\n  function removeDialog() {\n    if (dialog) {\n      closeDialog();\n      const dialogEl = dialog.el;\n      dialogEl && dialogEl.remove();\n      dialog = undefined;\n    }\n  }\n\n  /**\n   *\n   */\n  function handleActorClick() {\n    // Open dialog\n    if (!isDialogOpen) {\n      openDialog();\n    }\n\n    // Hide actor button\n    hideActor();\n  }\n\n  if (attachTo) {\n    attachTo.addEventListener('click', handleActorClick);\n  } else if (shouldCreateActor) {\n    actor = Actor({ buttonLabel: options.buttonLabel, onClick: handleActorClick });\n    actor.el && shadow.appendChild(actor.el);\n  }\n\n  return {\n    get actor() {\n      return actor;\n    },\n    get dialog() {\n      return dialog;\n    },\n\n    showActor,\n    hideActor,\n    removeActor,\n\n    openDialog,\n    closeDialog,\n    removeDialog,\n  };\n}\n\nconst doc = WINDOW.document;\n\nconst feedbackIntegration = ((options) => {\n  // eslint-disable-next-line deprecation/deprecation\n  return new Feedback(options);\n}) ;\n\n/**\n * Feedback integration. When added as an integration to the SDK, it will\n * inject a button in the bottom-right corner of the window that opens a\n * feedback modal when clicked.\n *\n * @deprecated Use `feedbackIntegration()` instead.\n */\nclass Feedback  {\n  /**\n   * @inheritDoc\n   */\n   static __initStatic() {this.id = 'Feedback';}\n\n  /**\n   * @inheritDoc\n   */\n\n  /**\n   * Feedback configuration options\n   */\n\n  /**\n   * Reference to widget element that is created when autoInject is true\n   */\n\n  /**\n   * List of all widgets that are created from the integration\n   */\n\n  /**\n   * Reference to the host element where widget is inserted\n   */\n\n  /**\n   * Refernce to Shadow DOM root\n   */\n\n  /**\n   * Tracks if actor styles have ever been inserted into shadow DOM\n   */\n\n   constructor({\n    autoInject = true,\n    id = 'sentry-feedback',\n    isEmailRequired = false,\n    isNameRequired = false,\n    showBranding = true,\n    showEmail = true,\n    showName = true,\n    useSentryUser = {\n      email: 'email',\n      name: 'username',\n    },\n\n    themeDark,\n    themeLight,\n    colorScheme = 'system',\n\n    buttonLabel = ACTOR_LABEL,\n    cancelButtonLabel = CANCEL_BUTTON_LABEL,\n    submitButtonLabel = SUBMIT_BUTTON_LABEL,\n    formTitle = FORM_TITLE,\n    emailPlaceholder = EMAIL_PLACEHOLDER,\n    emailLabel = EMAIL_LABEL,\n    messagePlaceholder = MESSAGE_PLACEHOLDER,\n    messageLabel = MESSAGE_LABEL,\n    namePlaceholder = NAME_PLACEHOLDER,\n    nameLabel = NAME_LABEL,\n    isRequiredLabel = IS_REQUIRED_LABEL,\n    successMessageText = SUCCESS_MESSAGE_TEXT,\n\n    onFormClose,\n    onFormOpen,\n    onSubmitError,\n    onSubmitSuccess,\n  } = {}) {\n    // eslint-disable-next-line deprecation/deprecation\n    this.name = Feedback.id;\n\n    // tsc fails if these are not initialized explicitly constructor, e.g. can't call `_initialize()`\n    this._host = null;\n    this._shadow = null;\n    this._widget = null;\n    this._widgets = new Set();\n    this._hasInsertedActorStyles = false;\n\n    this.options = {\n      autoInject,\n      showBranding,\n      id,\n      isEmailRequired,\n      isNameRequired,\n      showEmail,\n      showName,\n      useSentryUser,\n\n      colorScheme,\n      themeDark: {\n        ...DEFAULT_THEME.dark,\n        ...themeDark,\n      },\n      themeLight: {\n        ...DEFAULT_THEME.light,\n        ...themeLight,\n      },\n\n      buttonLabel,\n      cancelButtonLabel,\n      submitButtonLabel,\n      formTitle,\n      emailLabel,\n      emailPlaceholder,\n      messageLabel,\n      messagePlaceholder,\n      nameLabel,\n      namePlaceholder,\n      isRequiredLabel,\n      successMessageText,\n\n      onFormClose,\n      onFormOpen,\n      onSubmitError,\n      onSubmitSuccess,\n    };\n  }\n\n  /**\n   * Setup and initialize feedback container\n   */\n   setupOnce() {\n    if (!(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.isBrowser)()) {\n      return;\n    }\n\n    try {\n      this._cleanupWidgetIfExists();\n\n      const { autoInject } = this.options;\n\n      if (!autoInject) {\n        // Nothing to do here\n        return;\n      }\n\n      this._createWidget(this.options);\n    } catch (err) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n    }\n  }\n\n  /**\n   * Allows user to open the dialog box. Creates a new widget if\n   * `autoInject` was false, otherwise re-uses the default widget that was\n   * created during initialization of the integration.\n   */\n   openDialog() {\n    if (!this._widget) {\n      this._createWidget({ ...this.options, shouldCreateActor: false });\n    }\n\n    if (!this._widget) {\n      return;\n    }\n\n    this._widget.openDialog();\n  }\n\n  /**\n   * Closes the dialog for the default widget, if it exists\n   */\n   closeDialog() {\n    if (!this._widget) {\n      // Nothing to do if widget does not exist\n      return;\n    }\n\n    this._widget.closeDialog();\n  }\n\n  /**\n   * Adds click listener to attached element to open a feedback dialog\n   */\n   attachTo(el, optionOverrides) {\n    try {\n      const options = mergeOptions(this.options, optionOverrides || {});\n\n      return this._ensureShadowHost(options, ({ shadow }) => {\n        const targetEl =\n          typeof el === 'string' ? doc.querySelector(el) : typeof el.addEventListener === 'function' ? el : null;\n\n        if (!targetEl) {\n          DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error('[Feedback] Unable to attach to target element');\n          return null;\n        }\n\n        const widget = createWidget({ shadow, options, attachTo: targetEl });\n        this._widgets.add(widget);\n\n        if (!this._widget) {\n          this._widget = widget;\n        }\n\n        return widget;\n      });\n    } catch (err) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n      return null;\n    }\n  }\n\n  /**\n   * Creates a new widget. Accepts partial options to override any options passed to constructor.\n   */\n   createWidget(\n    optionOverrides,\n  ) {\n    try {\n      return this._createWidget(mergeOptions(this.options, optionOverrides || {}));\n    } catch (err) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n      return null;\n    }\n  }\n\n  /**\n   * Removes a single widget\n   */\n   removeWidget(widget) {\n    if (!widget) {\n      return false;\n    }\n\n    try {\n      if (this._widgets.has(widget)) {\n        widget.removeActor();\n        widget.removeDialog();\n        this._widgets.delete(widget);\n\n        if (this._widget === widget) {\n          // TODO: is more clean-up needed? e.g. call remove()\n          this._widget = null;\n        }\n\n        return true;\n      }\n    } catch (err) {\n      DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error(err);\n    }\n\n    return false;\n  }\n\n  /**\n   * Returns the default (first-created) widget\n   */\n   getWidget() {\n    return this._widget;\n  }\n\n  /**\n   * Removes the Feedback integration (including host, shadow DOM, and all widgets)\n   */\n   remove() {\n    if (this._host) {\n      this._host.remove();\n    }\n    this._initialize();\n  }\n\n  /**\n   * Initializes values of protected properties\n   */\n   _initialize() {\n    this._host = null;\n    this._shadow = null;\n    this._widget = null;\n    this._widgets = new Set();\n    this._hasInsertedActorStyles = false;\n  }\n\n  /**\n   * Clean-up the widget if it already exists in the DOM. This shouldn't happen\n   * in prod, but can happen in development with hot module reloading.\n   */\n   _cleanupWidgetIfExists() {\n    if (this._host) {\n      this.remove();\n    }\n    const existingFeedback = doc.querySelector(`#${this.options.id}`);\n    if (existingFeedback) {\n      existingFeedback.remove();\n    }\n  }\n\n  /**\n   * Creates a new widget, after ensuring shadow DOM exists\n   */\n   _createWidget(options) {\n    return this._ensureShadowHost(options, ({ shadow }) => {\n      const widget = createWidget({ shadow, options });\n\n      if (!this._hasInsertedActorStyles && widget.actor) {\n        shadow.appendChild(createActorStyles(doc));\n        this._hasInsertedActorStyles = true;\n      }\n\n      this._widgets.add(widget);\n\n      if (!this._widget) {\n        this._widget = widget;\n      }\n\n      return widget;\n    });\n  }\n\n  /**\n   * Ensures that shadow DOM exists and is added to the DOM\n   */\n   _ensureShadowHost(\n    options,\n    cb,\n  ) {\n    let needsAppendHost = false;\n\n    // Don't create if it already exists\n    if (!this._shadow || !this._host) {\n      const { id, colorScheme, themeLight, themeDark } = options;\n      const { shadow, host } = createShadowHost({\n        id,\n        colorScheme,\n        themeLight,\n        themeDark,\n      });\n      this._shadow = shadow;\n      this._host = host;\n      needsAppendHost = true;\n    }\n\n    // set data attribute on host for different themes\n    this._host.dataset.sentryFeedbackColorscheme = options.colorScheme;\n\n    const result = cb({ shadow: this._shadow, host: this._host });\n\n    if (needsAppendHost) {\n      doc.body.appendChild(this._host);\n    }\n\n    return result;\n  }\n} Feedback.__initStatic();\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/feedback/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/replay-canvas/esm/index.js":
/*!*******************************************************************!*\
  !*** ../node_modules/@sentry-internal/replay-canvas/esm/index.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReplayCanvas: () => (/* binding */ ReplayCanvas),\n/* harmony export */   replayCanvasIntegration: () => (/* binding */ replayCanvasIntegration)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/buildPolyfills/_optionalChain.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/integration.js\");\n\n\n\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"Document\"] = 0] = \"Document\";\n    NodeType[NodeType[\"DocumentType\"] = 1] = \"DocumentType\";\n    NodeType[NodeType[\"Element\"] = 2] = \"Element\";\n    NodeType[NodeType[\"Text\"] = 3] = \"Text\";\n    NodeType[NodeType[\"CDATA\"] = 4] = \"CDATA\";\n    NodeType[NodeType[\"Comment\"] = 5] = \"Comment\";\n})(NodeType || (NodeType = {}));\nfunction elementClassMatchesRegex(el, regex) {\n    for (let eIndex = el.classList.length; eIndex--;) {\n        const className = el.classList[eIndex];\n        if (regex.test(className)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction distanceToMatch(node, matchPredicate, limit = Infinity, distance = 0) {\n    if (!node)\n        return -1;\n    if (node.nodeType !== node.ELEMENT_NODE)\n        return -1;\n    if (distance > limit)\n        return -1;\n    if (matchPredicate(node))\n        return distance;\n    return distanceToMatch(node.parentNode, matchPredicate, limit, distance + 1);\n}\nfunction createMatchPredicate(className, selector) {\n    return (node) => {\n        const el = node;\n        if (el === null)\n            return false;\n        try {\n            if (className) {\n                if (typeof className === 'string') {\n                    if (el.matches(`.${className}`))\n                        return true;\n                }\n                else if (elementClassMatchesRegex(el, className)) {\n                    return true;\n                }\n            }\n            if (selector && el.matches(selector))\n                return true;\n            return false;\n        }\n        catch (e2) {\n            return false;\n        }\n    };\n}\n\nconst DEPARTED_MIRROR_ACCESS_WARNING = 'Please stop import mirror directly. Instead of that,' +\n    '\\r\\n' +\n    'now you can use replayer.getMirror() to access the mirror instance of a replayer,' +\n    '\\r\\n' +\n    'or you can use record.mirror to access the mirror instance during recording.';\nlet _mirror = {\n    map: {},\n    getId() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return -1;\n    },\n    getNode() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return null;\n    },\n    removeNodeFromMap() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n    has() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n        return false;\n    },\n    reset() {\n        console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n    },\n};\nif (typeof window !== 'undefined' && window.Proxy && window.Reflect) {\n    _mirror = new Proxy(_mirror, {\n        get(target, prop, receiver) {\n            if (prop === 'map') {\n                console.error(DEPARTED_MIRROR_ACCESS_WARNING);\n            }\n            return Reflect.get(target, prop, receiver);\n        },\n    });\n}\nfunction hookSetter(target, key, d, isRevoked, win = window) {\n    const original = win.Object.getOwnPropertyDescriptor(target, key);\n    win.Object.defineProperty(target, key, isRevoked\n        ? d\n        : {\n            set(value) {\n                setTimeout(() => {\n                    d.set.call(this, value);\n                }, 0);\n                if (original && original.set) {\n                    original.set.call(this, value);\n                }\n            },\n        });\n    return () => hookSetter(target, key, original || {}, true);\n}\nfunction patch(source, name, replacement) {\n    try {\n        if (!(name in source)) {\n            return () => {\n            };\n        }\n        const original = source[name];\n        const wrapped = replacement(original);\n        if (typeof wrapped === 'function') {\n            wrapped.prototype = wrapped.prototype || {};\n            Object.defineProperties(wrapped, {\n                __rrweb_original__: {\n                    enumerable: false,\n                    value: original,\n                },\n            });\n        }\n        source[name] = wrapped;\n        return () => {\n            source[name] = original;\n        };\n    }\n    catch (e2) {\n        return () => {\n        };\n    }\n}\nif (!(/[1-9][0-9]{12}/.test(Date.now().toString()))) ;\nfunction closestElementOfNode(node) {\n    if (!node) {\n        return null;\n    }\n    const el = node.nodeType === node.ELEMENT_NODE\n        ? node\n        : node.parentElement;\n    return el;\n}\nfunction isBlocked(node, blockClass, blockSelector, unblockSelector, checkAncestors) {\n    if (!node) {\n        return false;\n    }\n    const el = closestElementOfNode(node);\n    if (!el) {\n        return false;\n    }\n    const blockedPredicate = createMatchPredicate(blockClass, blockSelector);\n    if (!checkAncestors) {\n        const isUnblocked = unblockSelector && el.matches(unblockSelector);\n        return blockedPredicate(el) && !isUnblocked;\n    }\n    const blockDistance = distanceToMatch(el, blockedPredicate);\n    let unblockDistance = -1;\n    if (blockDistance < 0) {\n        return false;\n    }\n    if (unblockSelector) {\n        unblockDistance = distanceToMatch(el, createMatchPredicate(null, unblockSelector));\n    }\n    if (blockDistance > -1 && unblockDistance < 0) {\n        return true;\n    }\n    return blockDistance < unblockDistance;\n}\nconst cachedImplementations = {};\nfunction getImplementation(name) {\n    const cached = cachedImplementations[name];\n    if (cached) {\n        return cached;\n    }\n    const document = window.document;\n    let impl = window[name];\n    if (document && typeof document.createElement === 'function') {\n        try {\n            const sandbox = document.createElement('iframe');\n            sandbox.hidden = true;\n            document.head.appendChild(sandbox);\n            const contentWindow = sandbox.contentWindow;\n            if (contentWindow && contentWindow[name]) {\n                impl =\n                    contentWindow[name];\n            }\n            document.head.removeChild(sandbox);\n        }\n        catch (e) {\n        }\n    }\n    return (cachedImplementations[name] = impl.bind(window));\n}\nfunction onRequestAnimationFrame(...rest) {\n    return getImplementation('requestAnimationFrame')(...rest);\n}\nfunction setTimeout(...rest) {\n    return getImplementation('setTimeout')(...rest);\n}\n\nvar CanvasContext = /* @__PURE__ */ ((CanvasContext2) => {\n  CanvasContext2[CanvasContext2[\"2D\"] = 0] = \"2D\";\n  CanvasContext2[CanvasContext2[\"WebGL\"] = 1] = \"WebGL\";\n  CanvasContext2[CanvasContext2[\"WebGL2\"] = 2] = \"WebGL2\";\n  return CanvasContext2;\n})(CanvasContext || {});\n\nlet errorHandler;\nfunction registerErrorHandler(handler) {\n    errorHandler = handler;\n}\nconst callbackWrapper = (cb) => {\n    if (!errorHandler) {\n        return cb;\n    }\n    const rrwebWrapped = ((...rest) => {\n        try {\n            return cb(...rest);\n        }\n        catch (error) {\n            if (errorHandler && errorHandler(error) === true) {\n                return () => {\n                };\n            }\n            throw error;\n        }\n    });\n    return rrwebWrapped;\n};\n\n/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\n\nconst canvasVarMap = new Map();\nfunction variableListFor(ctx, ctor) {\n    let contextMap = canvasVarMap.get(ctx);\n    if (!contextMap) {\n        contextMap = new Map();\n        canvasVarMap.set(ctx, contextMap);\n    }\n    if (!contextMap.has(ctor)) {\n        contextMap.set(ctor, []);\n    }\n    return contextMap.get(ctor);\n}\nconst saveWebGLVar = (value, win, ctx) => {\n    if (!value ||\n        !(isInstanceOfWebGLObject(value, win) || typeof value === 'object'))\n        return;\n    const name = value.constructor.name;\n    const list = variableListFor(ctx, name);\n    let index = list.indexOf(value);\n    if (index === -1) {\n        index = list.length;\n        list.push(value);\n    }\n    return index;\n};\nfunction serializeArg(value, win, ctx) {\n    if (value instanceof Array) {\n        return value.map((arg) => serializeArg(arg, win, ctx));\n    }\n    else if (value === null) {\n        return value;\n    }\n    else if (value instanceof Float32Array ||\n        value instanceof Float64Array ||\n        value instanceof Int32Array ||\n        value instanceof Uint32Array ||\n        value instanceof Uint8Array ||\n        value instanceof Uint16Array ||\n        value instanceof Int16Array ||\n        value instanceof Int8Array ||\n        value instanceof Uint8ClampedArray) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [Object.values(value)],\n        };\n    }\n    else if (value instanceof ArrayBuffer) {\n        const name = value.constructor.name;\n        const base64 = encode(value);\n        return {\n            rr_type: name,\n            base64,\n        };\n    }\n    else if (value instanceof DataView) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [\n                serializeArg(value.buffer, win, ctx),\n                value.byteOffset,\n                value.byteLength,\n            ],\n        };\n    }\n    else if (value instanceof HTMLImageElement) {\n        const name = value.constructor.name;\n        const { src } = value;\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof HTMLCanvasElement) {\n        const name = 'HTMLImageElement';\n        const src = value.toDataURL();\n        return {\n            rr_type: name,\n            src,\n        };\n    }\n    else if (value instanceof ImageData) {\n        const name = value.constructor.name;\n        return {\n            rr_type: name,\n            args: [serializeArg(value.data, win, ctx), value.width, value.height],\n        };\n    }\n    else if (isInstanceOfWebGLObject(value, win) || typeof value === 'object') {\n        const name = value.constructor.name;\n        const index = saveWebGLVar(value, win, ctx);\n        return {\n            rr_type: name,\n            index: index,\n        };\n    }\n    return value;\n}\nconst serializeArgs = (args, win, ctx) => {\n    return args.map((arg) => serializeArg(arg, win, ctx));\n};\nconst isInstanceOfWebGLObject = (value, win) => {\n    const webGLConstructorNames = [\n        'WebGLActiveInfo',\n        'WebGLBuffer',\n        'WebGLFramebuffer',\n        'WebGLProgram',\n        'WebGLRenderbuffer',\n        'WebGLShader',\n        'WebGLShaderPrecisionFormat',\n        'WebGLTexture',\n        'WebGLUniformLocation',\n        'WebGLVertexArrayObject',\n        'WebGLVertexArrayObjectOES',\n    ];\n    const supportedWebGLConstructorNames = webGLConstructorNames.filter((name) => typeof win[name] === 'function');\n    return Boolean(supportedWebGLConstructorNames.find((name) => value instanceof win[name]));\n};\n\nfunction initCanvas2DMutationObserver(cb, win, blockClass, blockSelector, unblockSelector) {\n    const handlers = [];\n    const props2D = Object.getOwnPropertyNames(win.CanvasRenderingContext2D.prototype);\n    for (const prop of props2D) {\n        try {\n            if (typeof win.CanvasRenderingContext2D.prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(win.CanvasRenderingContext2D.prototype, prop, function (original) {\n                return function (...args) {\n                    if (!isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        setTimeout(() => {\n                            const recordArgs = serializeArgs(args, win, this);\n                            cb(this.canvas, {\n                                type: CanvasContext['2D'],\n                                property: prop,\n                                args: recordArgs,\n                            });\n                        }, 0);\n                    }\n                    return original.apply(this, args);\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (e) {\n            const hookHandler = hookSetter(win.CanvasRenderingContext2D.prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type: CanvasContext['2D'],\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction getNormalizedContextName(contextType) {\n    return contextType === 'experimental-webgl' ? 'webgl' : contextType;\n}\nfunction initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, setPreserveDrawingBufferToTrue) {\n    const handlers = [];\n    try {\n        const restoreHandler = patch(win.HTMLCanvasElement.prototype, 'getContext', function (original) {\n            return function (contextType, ...args) {\n                if (!isBlocked(this, blockClass, blockSelector, unblockSelector, true)) {\n                    const ctxName = getNormalizedContextName(contextType);\n                    if (!('__context' in this))\n                        this.__context = ctxName;\n                    if (setPreserveDrawingBufferToTrue &&\n                        ['webgl', 'webgl2'].includes(ctxName)) {\n                        if (args[0] && typeof args[0] === 'object') {\n                            const contextAttributes = args[0];\n                            if (!contextAttributes.preserveDrawingBuffer) {\n                                contextAttributes.preserveDrawingBuffer = true;\n                            }\n                        }\n                        else {\n                            args.splice(0, 1, {\n                                preserveDrawingBuffer: true,\n                            });\n                        }\n                    }\n                }\n                return original.apply(this, [contextType, ...args]);\n            };\n        });\n        handlers.push(restoreHandler);\n    }\n    catch (e) {\n        console.error('failed to patch HTMLCanvasElement.prototype.getContext');\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nfunction patchGLPrototype(prototype, type, cb, blockClass, blockSelector, unblockSelector, mirror, win) {\n    const handlers = [];\n    const props = Object.getOwnPropertyNames(prototype);\n    for (const prop of props) {\n        if ([\n            'isContextLost',\n            'canvas',\n            'drawingBufferWidth',\n            'drawingBufferHeight',\n        ].includes(prop)) {\n            continue;\n        }\n        try {\n            if (typeof prototype[prop] !== 'function') {\n                continue;\n            }\n            const restoreHandler = patch(prototype, prop, function (original) {\n                return function (...args) {\n                    const result = original.apply(this, args);\n                    saveWebGLVar(result, win, this);\n                    if ('tagName' in this.canvas &&\n                        !isBlocked(this.canvas, blockClass, blockSelector, unblockSelector, true)) {\n                        const recordArgs = serializeArgs(args, win, this);\n                        const mutation = {\n                            type,\n                            property: prop,\n                            args: recordArgs,\n                        };\n                        cb(this.canvas, mutation);\n                    }\n                    return result;\n                };\n            });\n            handlers.push(restoreHandler);\n        }\n        catch (e) {\n            const hookHandler = hookSetter(prototype, prop, {\n                set(v) {\n                    cb(this.canvas, {\n                        type,\n                        property: prop,\n                        args: [v],\n                        setter: true,\n                    });\n                },\n            });\n            handlers.push(hookHandler);\n        }\n    }\n    return handlers;\n}\nfunction initCanvasWebGLMutationObserver(cb, win, blockClass, blockSelector, unblockSelector, mirror) {\n    const handlers = [];\n    handlers.push(...patchGLPrototype(win.WebGLRenderingContext.prototype, CanvasContext.WebGL, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    if (typeof win.WebGL2RenderingContext !== 'undefined') {\n        handlers.push(...patchGLPrototype(win.WebGL2RenderingContext.prototype, CanvasContext.WebGL2, cb, blockClass, blockSelector, unblockSelector, mirror, win));\n    }\n    return () => {\n        handlers.forEach((h) => h());\n    };\n}\n\nvar r = `for(var e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",t=\"undefined\"==typeof Uint8Array?[]:new Uint8Array(256),a=0;a<64;a++)t[e.charCodeAt(a)]=a;var n=function(t){var a,n=new Uint8Array(t),r=n.length,s=\"\";for(a=0;a<r;a+=3)s+=e[n[a]>>2],s+=e[(3&n[a])<<4|n[a+1]>>4],s+=e[(15&n[a+1])<<2|n[a+2]>>6],s+=e[63&n[a+2]];return r%3==2?s=s.substring(0,s.length-1)+\"=\":r%3==1&&(s=s.substring(0,s.length-2)+\"==\"),s};const r=new Map,s=new Map;const i=self;i.onmessage=async function(e){if(!(\"OffscreenCanvas\"in globalThis))return i.postMessage({id:e.data.id});{const{id:t,bitmap:a,width:o,height:f,maxCanvasSize:c,dataURLOptions:g}=e.data,u=async function(e,t,a){const r=e+\"-\"+t;if(\"OffscreenCanvas\"in globalThis){if(s.has(r))return s.get(r);const i=new OffscreenCanvas(e,t);i.getContext(\"2d\");const o=await i.convertToBlob(a),f=await o.arrayBuffer(),c=n(f);return s.set(r,c),c}return\"\"}(o,f,g),[h,d]=function(e,t,a){if(!a)return[e,t];const[n,r]=a;if(e<=n&&t<=r)return[e,t];let s=e,i=t;return s>n&&(i=Math.floor(n*t/e),s=n),i>r&&(s=Math.floor(r*e/t),i=r),[s,i]}(o,f,c),l=new OffscreenCanvas(h,d),w=l.getContext(\"bitmaprenderer\"),p=h===o&&d===f?a:await createImageBitmap(a,{resizeWidth:h,resizeHeight:d,resizeQuality:\"low\"});w.transferFromImageBitmap(p),a.close();const y=await l.convertToBlob(g),v=y.type,b=await y.arrayBuffer(),m=n(b);if(p.close(),!r.has(t)&&await u===m)return r.set(t,m),i.postMessage({id:t});if(r.get(t)===m)return i.postMessage({id:t});i.postMessage({id:t,type:v,base64:m,width:o,height:f}),r.set(t,m)}};`;\n\nfunction t(){const t=new Blob([r]);return URL.createObjectURL(t)}\n\nclass CanvasManager {\n    reset() {\n        this.pendingCanvasMutations.clear();\n        this.resetObservers && this.resetObservers();\n    }\n    freeze() {\n        this.frozen = true;\n    }\n    unfreeze() {\n        this.frozen = false;\n    }\n    lock() {\n        this.locked = true;\n    }\n    unlock() {\n        this.locked = false;\n    }\n    constructor(options) {\n        this.pendingCanvasMutations = new Map();\n        this.rafStamps = { latestId: 0, invokeId: null };\n        this.frozen = false;\n        this.locked = false;\n        this.processMutation = (target, mutation) => {\n            const newFrame = this.rafStamps.invokeId &&\n                this.rafStamps.latestId !== this.rafStamps.invokeId;\n            if (newFrame || !this.rafStamps.invokeId)\n                this.rafStamps.invokeId = this.rafStamps.latestId;\n            if (!this.pendingCanvasMutations.has(target)) {\n                this.pendingCanvasMutations.set(target, []);\n            }\n            this.pendingCanvasMutations.get(target).push(mutation);\n        };\n        const { sampling = 'all', win, blockClass, blockSelector, unblockSelector, maxCanvasSize, recordCanvas, dataURLOptions, errorHandler, } = options;\n        this.mutationCb = options.mutationCb;\n        this.mirror = options.mirror;\n        this.options = options;\n        if (errorHandler) {\n            registerErrorHandler(errorHandler);\n        }\n        if (options.enableManualSnapshot) {\n            return;\n        }\n        callbackWrapper(() => {\n            if (recordCanvas && sampling === 'all')\n                this.initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector);\n            if (recordCanvas && typeof sampling === 'number')\n                this.initCanvasFPSObserver(sampling, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, {\n                    dataURLOptions,\n                });\n        })();\n    }\n    initCanvasFPSObserver(fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options) {\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, true);\n        const rafId = this.takeSnapshot(false, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, options.dataURLOptions);\n        this.resetObservers = () => {\n            canvasContextReset();\n            cancelAnimationFrame(rafId);\n        };\n    }\n    initCanvasMutationObserver(win, blockClass, blockSelector, unblockSelector) {\n        this.startRAFTimestamping();\n        this.startPendingCanvasMutationFlusher();\n        const canvasContextReset = initCanvasContextObserver(win, blockClass, blockSelector, unblockSelector, false);\n        const canvas2DReset = initCanvas2DMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector);\n        const canvasWebGL1and2Reset = initCanvasWebGLMutationObserver(this.processMutation.bind(this), win, blockClass, blockSelector, unblockSelector, this.mirror);\n        this.resetObservers = () => {\n            canvasContextReset();\n            canvas2DReset();\n            canvasWebGL1and2Reset();\n        };\n    }\n    snapshot(canvasElement) {\n        const { options } = this;\n        const rafId = this.takeSnapshot(true, options.sampling === 'all' ? 2 : options.sampling || 2, options.win, options.blockClass, options.blockSelector, options.unblockSelector, options.maxCanvasSize, options.dataURLOptions, canvasElement);\n        this.resetObservers = () => {\n            cancelAnimationFrame(rafId);\n        };\n    }\n    takeSnapshot(isManualSnapshot, fps, win, blockClass, blockSelector, unblockSelector, maxCanvasSize, dataURLOptions, canvasElement) {\n        const snapshotInProgressMap = new Map();\n        const worker = new Worker(t());\n        worker.onmessage = (e) => {\n            const data = e.data;\n            const { id } = data;\n            snapshotInProgressMap.set(id, false);\n            if (!('base64' in data))\n                return;\n            const { base64, type, width, height } = data;\n            this.mutationCb({\n                id,\n                type: CanvasContext['2D'],\n                commands: [\n                    {\n                        property: 'clearRect',\n                        args: [0, 0, width, height],\n                    },\n                    {\n                        property: 'drawImage',\n                        args: [\n                            {\n                                rr_type: 'ImageBitmap',\n                                args: [\n                                    {\n                                        rr_type: 'Blob',\n                                        data: [{ rr_type: 'ArrayBuffer', base64 }],\n                                        type,\n                                    },\n                                ],\n                            },\n                            0,\n                            0,\n                            width,\n                            height,\n                        ],\n                    },\n                ],\n            });\n        };\n        const timeBetweenSnapshots = 1000 / fps;\n        let lastSnapshotTime = 0;\n        let rafId;\n        const getCanvas = (canvasElement) => {\n            if (canvasElement) {\n                return [canvasElement];\n            }\n            const matchedCanvas = [];\n            win.document.querySelectorAll('canvas').forEach((canvas) => {\n                if (!isBlocked(canvas, blockClass, blockSelector, unblockSelector, true)) {\n                    matchedCanvas.push(canvas);\n                }\n            });\n            return matchedCanvas;\n        };\n        const takeCanvasSnapshots = (timestamp) => {\n            if (lastSnapshotTime &&\n                timestamp - lastSnapshotTime < timeBetweenSnapshots) {\n                rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n                return;\n            }\n            lastSnapshotTime = timestamp;\n            getCanvas(canvasElement).forEach((canvas) => {\n                const id = this.mirror.getId(canvas);\n                if (snapshotInProgressMap.get(id))\n                    return;\n                if (!canvas.width || !canvas.height)\n                    return;\n                snapshotInProgressMap.set(id, true);\n                if (!isManualSnapshot &&\n                    ['webgl', 'webgl2'].includes(canvas.__context)) {\n                    const context = canvas.getContext(canvas.__context);\n                    if ((0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__._optionalChain)([context, 'optionalAccess', _ => _.getContextAttributes, 'call', _2 => _2(), 'optionalAccess', _3 => _3.preserveDrawingBuffer]) === false) {\n                        context.clear(context.COLOR_BUFFER_BIT);\n                    }\n                }\n                createImageBitmap(canvas)\n                    .then((bitmap) => {\n                    worker.postMessage({\n                        id,\n                        bitmap,\n                        width: canvas.width,\n                        height: canvas.height,\n                        dataURLOptions,\n                        maxCanvasSize,\n                    }, [bitmap]);\n                })\n                    .catch((error) => {\n                    callbackWrapper(() => {\n                        throw error;\n                    })();\n                });\n            });\n            rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        };\n        rafId = onRequestAnimationFrame(takeCanvasSnapshots);\n        return rafId;\n    }\n    startPendingCanvasMutationFlusher() {\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    startRAFTimestamping() {\n        const setLatestRAFTimestamp = (timestamp) => {\n            this.rafStamps.latestId = timestamp;\n            onRequestAnimationFrame(setLatestRAFTimestamp);\n        };\n        onRequestAnimationFrame(setLatestRAFTimestamp);\n    }\n    flushPendingCanvasMutations() {\n        this.pendingCanvasMutations.forEach((values, canvas) => {\n            const id = this.mirror.getId(canvas);\n            this.flushPendingCanvasMutationFor(canvas, id);\n        });\n        onRequestAnimationFrame(() => this.flushPendingCanvasMutations());\n    }\n    flushPendingCanvasMutationFor(canvas, id) {\n        if (this.frozen || this.locked) {\n            return;\n        }\n        const valuesWithType = this.pendingCanvasMutations.get(canvas);\n        if (!valuesWithType || id === -1)\n            return;\n        const values = valuesWithType.map((value) => {\n            const { type, ...rest } = value;\n            return rest;\n        });\n        const { type } = valuesWithType[0];\n        this.mutationCb({ id, type, commands: values });\n        this.pendingCanvasMutations.delete(canvas);\n    }\n}\n\nconst CANVAS_QUALITY = {\n  low: {\n    sampling: {\n      canvas: 1,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.25,\n    },\n  },\n  medium: {\n    sampling: {\n      canvas: 2,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.4,\n    },\n  },\n  high: {\n    sampling: {\n      canvas: 4,\n    },\n    dataURLOptions: {\n      type: 'image/webp',\n      quality: 0.5,\n    },\n  },\n};\n\nconst INTEGRATION_NAME = 'ReplayCanvas';\nconst DEFAULT_MAX_CANVAS_SIZE = 1280;\n\n/** Exported only for type safe tests. */\nconst _replayCanvasIntegration = ((options = {}) => {\n  const [maxCanvasWidth, maxCanvasHeight] = options.maxCanvasSize || [];\n  const _canvasOptions = {\n    quality: options.quality || 'medium',\n    enableManualSnapshot: options.enableManualSnapshot,\n    maxCanvasSize: [\n      maxCanvasWidth ? Math.min(maxCanvasWidth, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n      maxCanvasHeight ? Math.min(maxCanvasHeight, DEFAULT_MAX_CANVAS_SIZE) : DEFAULT_MAX_CANVAS_SIZE,\n    ] ,\n  };\n\n  let canvasManagerResolve;\n  const _canvasManager = new Promise(resolve => (canvasManagerResolve = resolve));\n\n  return {\n    name: INTEGRATION_NAME,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce() {},\n    getOptions() {\n      const { quality, enableManualSnapshot, maxCanvasSize } = _canvasOptions;\n\n      return {\n        enableManualSnapshot,\n        recordCanvas: true,\n        getCanvasManager: (getCanvasManagerOptions) => {\n          const manager = new CanvasManager({\n            ...getCanvasManagerOptions,\n            enableManualSnapshot,\n            maxCanvasSize,\n            errorHandler: (err) => {\n              try {\n                if (typeof err === 'object') {\n                  (err ).__rrweb__ = true;\n                }\n              } catch (error) {\n                // ignore errors here\n                // this can happen if the error is frozen or does not allow mutation for other reasons\n              }\n            },\n          });\n          canvasManagerResolve(manager);\n          return manager;\n        },\n        ...(CANVAS_QUALITY[quality || 'medium'] || CANVAS_QUALITY.medium),\n      };\n    },\n    async snapshot(canvasElement) {\n      const canvasManager = await _canvasManager;\n      canvasManager.snapshot(canvasElement);\n    },\n  };\n}) ;\n\n/**\n * Add this in addition to `replayIntegration()` to enable canvas recording.\n */\nconst replayCanvasIntegration = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.defineIntegration)(_replayCanvasIntegration);\n\n/**\n * @deprecated Use `replayCanvasIntegration()` instead\n */\n// eslint-disable-next-line deprecation/deprecation\nconst ReplayCanvas = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.convertIntegrationFnToClass)(INTEGRATION_NAME, replayCanvasIntegration)\n\n;\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/replay-canvas/esm/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   registerBackgroundTabDetection: () => (/* binding */ registerBackgroundTabDetection)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/debug-build.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n\n/**\n * Add a listener that cancels and finishes a transaction when the global\n * document is hidden.\n */\nfunction registerBackgroundTabDetection() {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.addEventListener('visibilitychange', () => {\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getActiveTransaction)() ;\n      if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.hidden && activeTransaction) {\n        const statusType = 'cancelled';\n\n        const { op, status } = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_2__.spanToJSON)(activeTransaction);\n\n        _common_debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.log(`[Tracing] Transaction: ${statusType} -> since tab moved to the background, op: ${op}`);\n        // We should not set status if it is already set, this prevent important statuses like\n        // error or data loss from being overwritten on transaction.\n        if (!status) {\n          activeTransaction.setStatus(statusType);\n        }\n        // TODO: Can we rewrite this to an attribute?\n        // eslint-disable-next-line deprecation/deprecation\n        activeTransaction.setTag('visibilitychange', 'document.hidden');\n        activeTransaction.end();\n      }\n    });\n  } else {\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_3__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_4__.logger.warn('[Tracing] Could not set up background tab detection due to lack of global document');\n  }\n}\n\n\n//# sourceMappingURL=backgroundtab.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci9iYWNrZ3JvdW5kdGFiLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFnRTtBQUN6QjtBQUNnQjtBQUNuQjs7QUFFcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNkNBQU07QUFDWixJQUFJLDZDQUFNO0FBQ1Y7QUFDQSxnQ0FBZ0Msa0VBQW9CO0FBQ3BELFVBQVUsNkNBQU07QUFDaEI7O0FBRUEsZ0JBQWdCLGFBQWEsRUFBRSx3REFBVTs7QUFFekMsUUFBUSwrREFBVztBQUNuQixVQUFVLGlEQUFNLCtCQUErQixZQUFZLDRDQUE0QyxHQUFHO0FBQzFHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLElBQUk7QUFDSixJQUFJLCtEQUFXLElBQUksaURBQU07QUFDekI7QUFDQTs7QUFFMEM7QUFDMUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvYmFja2dyb3VuZHRhYi5qcz9hNWJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldEFjdGl2ZVRyYW5zYWN0aW9uLCBzcGFuVG9KU09OIH0gZnJvbSAnQHNlbnRyeS9jb3JlJztcbmltcG9ydCB7IGxvZ2dlciB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuaW1wb3J0IHsgREVCVUdfQlVJTEQgfSBmcm9tICcuLi9jb21tb24vZGVidWctYnVpbGQuanMnO1xuaW1wb3J0IHsgV0lORE9XIH0gZnJvbSAnLi90eXBlcy5qcyc7XG5cbi8qKlxuICogQWRkIGEgbGlzdGVuZXIgdGhhdCBjYW5jZWxzIGFuZCBmaW5pc2hlcyBhIHRyYW5zYWN0aW9uIHdoZW4gdGhlIGdsb2JhbFxuICogZG9jdW1lbnQgaXMgaGlkZGVuLlxuICovXG5mdW5jdGlvbiByZWdpc3RlckJhY2tncm91bmRUYWJEZXRlY3Rpb24oKSB7XG4gIGlmIChXSU5ET1cuZG9jdW1lbnQpIHtcbiAgICBXSU5ET1cuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsICgpID0+IHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICAgICAgY29uc3QgYWN0aXZlVHJhbnNhY3Rpb24gPSBnZXRBY3RpdmVUcmFuc2FjdGlvbigpIDtcbiAgICAgIGlmIChXSU5ET1cuZG9jdW1lbnQuaGlkZGVuICYmIGFjdGl2ZVRyYW5zYWN0aW9uKSB7XG4gICAgICAgIGNvbnN0IHN0YXR1c1R5cGUgPSAnY2FuY2VsbGVkJztcblxuICAgICAgICBjb25zdCB7IG9wLCBzdGF0dXMgfSA9IHNwYW5Ub0pTT04oYWN0aXZlVHJhbnNhY3Rpb24pO1xuXG4gICAgICAgIERFQlVHX0JVSUxEICYmXG4gICAgICAgICAgbG9nZ2VyLmxvZyhgW1RyYWNpbmddIFRyYW5zYWN0aW9uOiAke3N0YXR1c1R5cGV9IC0+IHNpbmNlIHRhYiBtb3ZlZCB0byB0aGUgYmFja2dyb3VuZCwgb3A6ICR7b3B9YCk7XG4gICAgICAgIC8vIFdlIHNob3VsZCBub3Qgc2V0IHN0YXR1cyBpZiBpdCBpcyBhbHJlYWR5IHNldCwgdGhpcyBwcmV2ZW50IGltcG9ydGFudCBzdGF0dXNlcyBsaWtlXG4gICAgICAgIC8vIGVycm9yIG9yIGRhdGEgbG9zcyBmcm9tIGJlaW5nIG92ZXJ3cml0dGVuIG9uIHRyYW5zYWN0aW9uLlxuICAgICAgICBpZiAoIXN0YXR1cykge1xuICAgICAgICAgIGFjdGl2ZVRyYW5zYWN0aW9uLnNldFN0YXR1cyhzdGF0dXNUeXBlKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBUT0RPOiBDYW4gd2UgcmV3cml0ZSB0aGlzIHRvIGFuIGF0dHJpYnV0ZT9cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgICAgIGFjdGl2ZVRyYW5zYWN0aW9uLnNldFRhZygndmlzaWJpbGl0eWNoYW5nZScsICdkb2N1bWVudC5oaWRkZW4nKTtcbiAgICAgICAgYWN0aXZlVHJhbnNhY3Rpb24uZW5kKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0gZWxzZSB7XG4gICAgREVCVUdfQlVJTEQgJiYgbG9nZ2VyLndhcm4oJ1tUcmFjaW5nXSBDb3VsZCBub3Qgc2V0IHVwIGJhY2tncm91bmQgdGFiIGRldGVjdGlvbiBkdWUgdG8gbGFjayBvZiBnbG9iYWwgZG9jdW1lbnQnKTtcbiAgfVxufVxuXG5leHBvcnQgeyByZWdpc3RlckJhY2tncm91bmRUYWJEZXRlY3Rpb24gfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJhY2tncm91bmR0YWIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/browserTracingIntegration.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/browserTracingIntegration.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BROWSER_TRACING_INTEGRATION_ID: () => (/* binding */ BROWSER_TRACING_INTEGRATION_ID),\n/* harmony export */   browserTracingIntegration: () => (/* binding */ browserTracingIntegration),\n/* harmony export */   getMetaContent: () => (/* binding */ getMetaContent),\n/* harmony export */   startBrowserTracingNavigationSpan: () => (/* binding */ startBrowserTracingNavigationSpan),\n/* harmony export */   startBrowserTracingPageLoadSpan: () => (/* binding */ startBrowserTracingPageLoadSpan)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/instrument/history.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/debug-build.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js\");\n/* harmony import */ var _backgroundtab_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./backgroundtab.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./instrument.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/instrument.js\");\n/* harmony import */ var _metrics_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./metrics/index.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./request.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/request.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n\n\n\n\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_0__.TRACING_DEFAULTS,\n  instrumentNavigation: true,\n  instrumentPageLoad: true,\n  markBackgroundSpan: true,\n  enableLongTask: true,\n  enableInp: false,\n  interactionsSampleRate: 1,\n  _experiments: {},\n  ..._request_js__WEBPACK_IMPORTED_MODULE_1__.defaultRequestInstrumentationOptions,\n};\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * We explicitly export the proper type here, as this has to be extended in some cases.\n */\nconst browserTracingIntegration = ((_options = {}) => {\n  const _hasSetTracePropagationTargets = _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD\n    ? !!(\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      )\n    : false;\n\n  (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.addTracingExtensions)();\n\n  // TODO (v8): remove this block after tracingOrigins is removed\n  // Set tracePropagationTargets to tracingOrigins if specified by the user\n  // In case both are specified, tracePropagationTargets takes precedence\n  // eslint-disable-next-line deprecation/deprecation\n  if (!_options.tracePropagationTargets && _options.tracingOrigins) {\n    // eslint-disable-next-line deprecation/deprecation\n    _options.tracePropagationTargets = _options.tracingOrigins;\n  }\n\n  const options = {\n    ...DEFAULT_BROWSER_TRACING_OPTIONS,\n    ..._options,\n  };\n\n  const _collectWebVitals = (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingWebVitals)();\n\n  /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n  const interactionIdToRouteNameMapping = {};\n  if (options.enableInp) {\n    (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingINP)(interactionIdToRouteNameMapping, options.interactionsSampleRate);\n  }\n\n  if (options.enableLongTask) {\n    (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingLongTasks)();\n  }\n  if (options._experiments.enableInteractions) {\n    (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.startTrackingInteractions)();\n  }\n\n  const latestRoute\n\n = {\n    name: undefined,\n    context: undefined,\n  };\n\n  /** Create routing idle transaction. */\n  function _createRouteTransaction(context) {\n    // eslint-disable-next-line deprecation/deprecation\n    const hub = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getCurrentHub)();\n\n    const { beforeStartSpan, idleTimeout, finalTimeout, heartbeatInterval } = options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.propagationContextFromHeaders)(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const finalContext = beforeStartSpan ? beforeStartSpan(expandedContext) : expandedContext;\n\n    // If `beforeStartSpan` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    latestRoute.name = finalContext.name;\n    latestRoute.context = finalContext;\n\n    if (finalContext.sampled === false) {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW;\n\n    const idleTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction && _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document) {\n      _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.addEventListener('readystatechange', () => {\n        if (['interactive', 'complete'].includes(_types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      });\n\n      if (['interactive', 'complete'].includes(_types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document.readyState)) {\n        idleTransaction.sendAutoFinishSignal();\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      _collectWebVitals();\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_4__.addPerformanceEntries)(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  return {\n    name: BROWSER_TRACING_INTEGRATION_ID,\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    setupOnce: () => {},\n    afterAllSetup(client) {\n      const clientOptions = client.getOptions();\n\n      const { markBackgroundSpan, traceFetch, traceXHR, shouldCreateSpanForRequest, enableHTTPTimings, _experiments } =\n        options;\n\n      const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n      // There are three ways to configure tracePropagationTargets:\n      // 1. via top level client option `tracePropagationTargets`\n      // 2. via BrowserTracing option `tracePropagationTargets`\n      // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n      //\n      // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n      // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n      // This is done as it minimizes bundle size (we don't have to have undefined checks).\n      //\n      // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n      // eslint-disable-next-line deprecation/deprecation\n      const tracePropagationTargets = clientOptionsTracePropagationTargets || options.tracePropagationTargets;\n      if (_common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn(\n          '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n        );\n      }\n\n      let activeSpan;\n      let startingUrl = _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.location && _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.location.href;\n\n      if (client.on) {\n        client.on('startNavigationSpan', (context) => {\n          if (activeSpan) {\n            _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log(`[Tracing] Finishing current transaction with op: ${(0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.spanToJSON)(activeSpan).op}`);\n            // If there's an open transaction on the scope, we need to finish it before creating an new one.\n            activeSpan.end();\n          }\n          activeSpan = _createRouteTransaction({\n            op: 'navigation',\n            ...context,\n          });\n        });\n\n        client.on('startPageLoadSpan', (context) => {\n          if (activeSpan) {\n            _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.log(`[Tracing] Finishing current transaction with op: ${(0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.spanToJSON)(activeSpan).op}`);\n            // If there's an open transaction on the scope, we need to finish it before creating an new one.\n            activeSpan.end();\n          }\n          activeSpan = _createRouteTransaction({\n            op: 'pageload',\n            ...context,\n          });\n        });\n      }\n\n      if (options.instrumentPageLoad && client.emit && _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.location) {\n        const context = {\n          name: _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.location.pathname,\n          // pageload should always start at timeOrigin (and needs to be in s, not ms)\n          startTimestamp: _sentry_utils__WEBPACK_IMPORTED_MODULE_10__.browserPerformanceTimeOrigin ? _sentry_utils__WEBPACK_IMPORTED_MODULE_10__.browserPerformanceTimeOrigin / 1000 : undefined,\n          origin: 'auto.pageload.browser',\n          attributes: {\n            [_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n          },\n        };\n        startBrowserTracingPageLoadSpan(client, context);\n      }\n\n      if (options.instrumentNavigation && client.emit && _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.location) {\n        (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_12__.addHistoryInstrumentationHandler)(({ to, from }) => {\n          /**\n           * This early return is there to account for some cases where a navigation transaction starts right after\n           * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n           * create an uneccessary navigation transaction.\n           *\n           * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n           * only be caused in certain development environments where the usage of a hot module reloader is causing\n           * errors.\n           */\n          if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n            startingUrl = undefined;\n            return;\n          }\n\n          if (from !== to) {\n            startingUrl = undefined;\n            const context = {\n              name: _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.location.pathname,\n              origin: 'auto.navigation.browser',\n              attributes: {\n                [_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n              },\n            };\n\n            startBrowserTracingNavigationSpan(client, context);\n          }\n        });\n      }\n\n      if (markBackgroundSpan) {\n        (0,_backgroundtab_js__WEBPACK_IMPORTED_MODULE_13__.registerBackgroundTabDetection)();\n      }\n\n      if (_experiments.enableInteractions) {\n        registerInteractionListener(options, latestRoute);\n      }\n\n      if (options.enableInp) {\n        registerInpInteractionListener(interactionIdToRouteNameMapping, latestRoute);\n      }\n\n      (0,_request_js__WEBPACK_IMPORTED_MODULE_1__.instrumentOutgoingRequests)({\n        traceFetch,\n        traceXHR,\n        tracePropagationTargets,\n        shouldCreateSpanForRequest,\n        enableHTTPTimings,\n      });\n    },\n    // TODO v8: Remove this again\n    // This is private API that we use to fix converted BrowserTracing integrations in Next.js & SvelteKit\n    options,\n  };\n}) ;\n\n/**\n * Manually start a page load span.\n * This will only do something if the BrowserTracing integration has been setup.\n */\nfunction startBrowserTracingPageLoadSpan(client, spanOptions) {\n  if (!client.emit) {\n    return;\n  }\n\n  client.emit('startPageLoadSpan', spanOptions);\n\n  const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_14__.getActiveSpan)();\n  const op = span && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.spanToJSON)(span).op;\n  return op === 'pageload' ? span : undefined;\n}\n\n/**\n * Manually start a navigation span.\n * This will only do something if the BrowserTracing integration has been setup.\n */\nfunction startBrowserTracingNavigationSpan(client, spanOptions) {\n  if (!client.emit) {\n    return;\n  }\n\n  client.emit('startNavigationSpan', spanOptions);\n\n  const span = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_14__.getActiveSpan)();\n  const op = span && (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.spanToJSON)(span).op;\n  return op === 'navigation' ? span : undefined;\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_15__.getDomElement)(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\n/** Start listener for interaction transactions */\nfunction registerInteractionListener(\n  options,\n  latestRoute\n\n,\n) {\n  let inflightInteractionTransaction;\n  const registerInteractionTransaction = () => {\n    const { idleTimeout, finalTimeout, heartbeatInterval } = options;\n    const op = 'ui.action.click';\n\n    // eslint-disable-next-line deprecation/deprecation\n    const currentTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_16__.getActiveTransaction)();\n    if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn(\n          `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n        );\n      return undefined;\n    }\n\n    if (inflightInteractionTransaction) {\n      inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n      inflightInteractionTransaction.end();\n      inflightInteractionTransaction = undefined;\n    }\n\n    if (!latestRoute.name) {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_2__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_7__.logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n      return undefined;\n    }\n\n    const { location } = _types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW;\n\n    const context = {\n      name: latestRoute.name,\n      op,\n      trimEnd: true,\n      data: {\n        [_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: latestRoute.context ? getSource(latestRoute.context) : 'url',\n      },\n    };\n\n    inflightInteractionTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n      // eslint-disable-next-line deprecation/deprecation\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getCurrentHub)(),\n      context,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n    );\n  };\n\n  ['click'].forEach(type => {\n    if (_types_js__WEBPACK_IMPORTED_MODULE_8__.WINDOW.document) {\n      addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n    }\n  });\n}\n\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\nfunction registerInpInteractionListener(\n  interactionIdToRouteNameMapping,\n  latestRoute\n\n,\n) {\n  const handleEntries = ({ entries }) => {\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getClient)();\n    // We need to get the replay, user, and activeTransaction from the current scope\n    // so that we can associate replay id, profile id, and a user display to the span\n    const replay =\n      client !== undefined && client.getIntegrationByName !== undefined\n        ? (client.getIntegrationByName('Replay') )\n        : undefined;\n    const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const activeTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_16__.getActiveTransaction)();\n    const currentScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.getCurrentScope)();\n    const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n    entries.forEach(entry => {\n      if (isPerformanceEventTiming(entry)) {\n        const interactionId = entry.interactionId;\n        if (interactionId === undefined) {\n          return;\n        }\n        const existingInteraction = interactionIdToRouteNameMapping[interactionId];\n        const duration = entry.duration;\n        const startTime = entry.startTime;\n        const keys = Object.keys(interactionIdToRouteNameMapping);\n        const minInteractionId =\n          keys.length > 0\n            ? keys.reduce((a, b) => {\n                return interactionIdToRouteNameMapping[a].duration < interactionIdToRouteNameMapping[b].duration\n                  ? a\n                  : b;\n              })\n            : undefined;\n        // For a first input event to be considered, we must check that an interaction event does not already exist with the same duration and start time.\n        // This is also checked in the web-vitals library.\n        if (entry.entryType === 'first-input') {\n          const matchingEntry = keys\n            .map(key => interactionIdToRouteNameMapping[key])\n            .some(interaction => {\n              return interaction.duration === duration && interaction.startTime === startTime;\n            });\n          if (matchingEntry) {\n            return;\n          }\n        }\n        // Interactions with an id of 0 and are not first-input are not valid.\n        if (!interactionId) {\n          return;\n        }\n        // If the interaction already exists, we want to use the duration of the longest entry, since that is what the INP metric uses.\n        if (existingInteraction) {\n          existingInteraction.duration = Math.max(existingInteraction.duration, duration);\n        } else if (\n          keys.length < MAX_INTERACTIONS ||\n          minInteractionId === undefined ||\n          duration > interactionIdToRouteNameMapping[minInteractionId].duration\n        ) {\n          // If the interaction does not exist, we want to add it to the mapping if there is space, or if the duration is longer than the shortest entry.\n          const routeName = latestRoute.name;\n          const parentContext = latestRoute.context;\n          if (routeName && parentContext) {\n            if (minInteractionId && Object.keys(interactionIdToRouteNameMapping).length >= MAX_INTERACTIONS) {\n              // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n              delete interactionIdToRouteNameMapping[minInteractionId];\n            }\n            interactionIdToRouteNameMapping[interactionId] = {\n              routeName,\n              duration,\n              parentContext,\n              user,\n              activeTransaction,\n              replayId,\n              startTime,\n            };\n          }\n        }\n      }\n    });\n  };\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_18__.addPerformanceInstrumentationHandler)('event', handleEntries);\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_18__.addPerformanceInstrumentationHandler)('first-input', handleEntries);\n}\n\nfunction getSource(context) {\n  const sourceFromAttributes = context.attributes && context.attributes[_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\n\n//# sourceMappingURL=browserTracingIntegration.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/browserTracingIntegration.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js":
/*!******************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BROWSER_TRACING_INTEGRATION_ID: () => (/* binding */ BROWSER_TRACING_INTEGRATION_ID),\n/* harmony export */   BrowserTracing: () => (/* binding */ BrowserTracing),\n/* harmony export */   getMetaContent: () => (/* binding */ getMetaContent)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/idletransaction.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/hubextensions.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/debug-build.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js\");\n/* harmony import */ var _backgroundtab_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./backgroundtab.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/backgroundtab.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./instrument.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/instrument.js\");\n/* harmony import */ var _metrics_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./metrics/index.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js\");\n/* harmony import */ var _request_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./request.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/request.js\");\n/* harmony import */ var _router_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./router.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/router.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n\n\n\n\n\n\nconst BROWSER_TRACING_INTEGRATION_ID = 'BrowserTracing';\n\n/** Options for Browser Tracing integration */\n\nconst DEFAULT_BROWSER_TRACING_OPTIONS = {\n  ..._sentry_core__WEBPACK_IMPORTED_MODULE_0__.TRACING_DEFAULTS,\n  markBackgroundTransactions: true,\n  routingInstrumentation: _router_js__WEBPACK_IMPORTED_MODULE_1__.instrumentRoutingWithDefaults,\n  startTransactionOnLocationChange: true,\n  startTransactionOnPageLoad: true,\n  enableLongTask: true,\n  enableInp: false,\n  interactionsSampleRate: 1,\n  _experiments: {},\n  ..._request_js__WEBPACK_IMPORTED_MODULE_2__.defaultRequestInstrumentationOptions,\n};\n\n/** We store up to 10 interaction candidates max to cap memory usage. This is the same cap as getINP from web-vitals */\nconst MAX_INTERACTIONS = 10;\n\n/**\n * The Browser Tracing integration automatically instruments browser pageload/navigation\n * actions as transactions, and captures requests, metrics and errors as spans.\n *\n * The integration can be configured with a variety of options, and can be extended to use\n * any routing library. This integration uses {@see IdleTransaction} to create transactions.\n *\n * @deprecated Use `browserTracingIntegration()` instead.\n */\nclass BrowserTracing  {\n  // This class currently doesn't have a static `id` field like the other integration classes, because it prevented\n  // @sentry/tracing from being treeshaken. Tree shakers do not like static fields, because they behave like side effects.\n  // TODO: Come up with a better plan, than using static fields on integration classes, and use that plan on all\n  // integrations.\n\n  /** Browser Tracing integration options */\n\n  /**\n   * @inheritDoc\n   */\n\n  // eslint-disable-next-line deprecation/deprecation\n\n   constructor(_options) {\n    this.name = BROWSER_TRACING_INTEGRATION_ID;\n    this._hasSetTracePropagationTargets = false;\n\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.addTracingExtensions)();\n\n    if (_common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD) {\n      this._hasSetTracePropagationTargets = !!(\n        _options &&\n        // eslint-disable-next-line deprecation/deprecation\n        (_options.tracePropagationTargets || _options.tracingOrigins)\n      );\n    }\n\n    this.options = {\n      ...DEFAULT_BROWSER_TRACING_OPTIONS,\n      ..._options,\n    };\n\n    // Special case: enableLongTask can be set in _experiments\n    // TODO (v8): Remove this in v8\n    if (this.options._experiments.enableLongTask !== undefined) {\n      this.options.enableLongTask = this.options._experiments.enableLongTask;\n    }\n\n    // TODO (v8): remove this block after tracingOrigins is removed\n    // Set tracePropagationTargets to tracingOrigins if specified by the user\n    // In case both are specified, tracePropagationTargets takes precedence\n    // eslint-disable-next-line deprecation/deprecation\n    if (_options && !_options.tracePropagationTargets && _options.tracingOrigins) {\n      // eslint-disable-next-line deprecation/deprecation\n      this.options.tracePropagationTargets = _options.tracingOrigins;\n    }\n\n    this._collectWebVitals = (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_5__.startTrackingWebVitals)();\n    /** Stores a mapping of interactionIds from PerformanceEventTimings to the origin interaction path */\n    this._interactionIdToRouteNameMapping = {};\n\n    if (this.options.enableInp) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_5__.startTrackingINP)(this._interactionIdToRouteNameMapping, this.options.interactionsSampleRate);\n    }\n    if (this.options.enableLongTask) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_5__.startTrackingLongTasks)();\n    }\n    if (this.options._experiments.enableInteractions) {\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_5__.startTrackingInteractions)();\n    }\n\n    this._latestRoute = {\n      name: undefined,\n      context: undefined,\n    };\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line deprecation/deprecation\n   setupOnce(_, getCurrentHub) {\n    this._getCurrentHub = getCurrentHub;\n    const hub = getCurrentHub();\n    // eslint-disable-next-line deprecation/deprecation\n    const client = hub.getClient();\n    const clientOptions = client && client.getOptions();\n\n    const {\n      routingInstrumentation: instrumentRouting,\n      startTransactionOnLocationChange,\n      startTransactionOnPageLoad,\n      markBackgroundTransactions,\n      traceFetch,\n      traceXHR,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n      _experiments,\n    } = this.options;\n\n    const clientOptionsTracePropagationTargets = clientOptions && clientOptions.tracePropagationTargets;\n    // There are three ways to configure tracePropagationTargets:\n    // 1. via top level client option `tracePropagationTargets`\n    // 2. via BrowserTracing option `tracePropagationTargets`\n    // 3. via BrowserTracing option `tracingOrigins` (deprecated)\n    //\n    // To avoid confusion, favour top level client option `tracePropagationTargets`, and fallback to\n    // BrowserTracing option `tracePropagationTargets` and then `tracingOrigins` (deprecated).\n    // This is done as it minimizes bundle size (we don't have to have undefined checks).\n    //\n    // If both 1 and either one of 2 or 3 are set (from above), we log out a warning.\n    // eslint-disable-next-line deprecation/deprecation\n    const tracePropagationTargets = clientOptionsTracePropagationTargets || this.options.tracePropagationTargets;\n    if (_common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && this._hasSetTracePropagationTargets && clientOptionsTracePropagationTargets) {\n      _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn(\n        '[Tracing] The `tracePropagationTargets` option was set in the BrowserTracing integration and top level `Sentry.init`. The top level `Sentry.init` value is being used.',\n      );\n    }\n\n    instrumentRouting(\n      (context) => {\n        const transaction = this._createRouteTransaction(context);\n\n        this.options._experiments.onStartRouteTransaction &&\n          this.options._experiments.onStartRouteTransaction(transaction, context, getCurrentHub);\n\n        return transaction;\n      },\n      startTransactionOnPageLoad,\n      startTransactionOnLocationChange,\n    );\n\n    if (markBackgroundTransactions) {\n      (0,_backgroundtab_js__WEBPACK_IMPORTED_MODULE_7__.registerBackgroundTabDetection)();\n    }\n\n    if (_experiments.enableInteractions) {\n      this._registerInteractionListener();\n    }\n\n    if (this.options.enableInp) {\n      this._registerInpInteractionListener();\n    }\n\n    (0,_request_js__WEBPACK_IMPORTED_MODULE_2__.instrumentOutgoingRequests)({\n      traceFetch,\n      traceXHR,\n      tracePropagationTargets,\n      shouldCreateSpanForRequest,\n      enableHTTPTimings,\n    });\n  }\n\n  /** Create routing idle transaction. */\n   _createRouteTransaction(context) {\n    if (!this._getCurrentHub) {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn(`[Tracing] Did not create ${context.op} transaction because _getCurrentHub is invalid.`);\n      return undefined;\n    }\n\n    const hub = this._getCurrentHub();\n\n    const { beforeNavigate, idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n\n    const isPageloadTransaction = context.op === 'pageload';\n\n    let expandedContext;\n    if (isPageloadTransaction) {\n      const sentryTrace = isPageloadTransaction ? getMetaContent('sentry-trace') : '';\n      const baggage = isPageloadTransaction ? getMetaContent('baggage') : undefined;\n      const { traceId, dsc, parentSpanId, sampled } = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.propagationContextFromHeaders)(sentryTrace, baggage);\n      expandedContext = {\n        traceId,\n        parentSpanId,\n        parentSampled: sampled,\n        ...context,\n        metadata: {\n          // eslint-disable-next-line deprecation/deprecation\n          ...context.metadata,\n          dynamicSamplingContext: dsc,\n        },\n        trimEnd: true,\n      };\n    } else {\n      expandedContext = {\n        trimEnd: true,\n        ...context,\n      };\n    }\n\n    const modifiedContext = typeof beforeNavigate === 'function' ? beforeNavigate(expandedContext) : expandedContext;\n\n    // For backwards compatibility reasons, beforeNavigate can return undefined to \"drop\" the transaction (prevent it\n    // from being sent to Sentry).\n    const finalContext = modifiedContext === undefined ? { ...expandedContext, sampled: false } : modifiedContext;\n\n    // If `beforeNavigate` set a custom name, record that fact\n    // eslint-disable-next-line deprecation/deprecation\n    finalContext.metadata =\n      finalContext.name !== expandedContext.name\n        ? // eslint-disable-next-line deprecation/deprecation\n          { ...finalContext.metadata, source: 'custom' }\n        : // eslint-disable-next-line deprecation/deprecation\n          finalContext.metadata;\n\n    this._latestRoute.name = finalContext.name;\n    this._latestRoute.context = finalContext;\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (finalContext.sampled === false) {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log(`[Tracing] Will not send ${finalContext.op} transaction because of beforeNavigate.`);\n    }\n\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log(`[Tracing] Starting ${finalContext.op} transaction on scope`);\n\n    const { location } = _types_js__WEBPACK_IMPORTED_MODULE_9__.WINDOW;\n\n    const idleTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n      hub,\n      finalContext,\n      idleTimeout,\n      finalTimeout,\n      true,\n      { location }, // for use in the tracesSampler\n      heartbeatInterval,\n      isPageloadTransaction, // should wait for finish signal if it's a pageload transaction\n    );\n\n    if (isPageloadTransaction) {\n      if (_types_js__WEBPACK_IMPORTED_MODULE_9__.WINDOW.document) {\n        _types_js__WEBPACK_IMPORTED_MODULE_9__.WINDOW.document.addEventListener('readystatechange', () => {\n          if (['interactive', 'complete'].includes(_types_js__WEBPACK_IMPORTED_MODULE_9__.WINDOW.document.readyState)) {\n            idleTransaction.sendAutoFinishSignal();\n          }\n        });\n\n        if (['interactive', 'complete'].includes(_types_js__WEBPACK_IMPORTED_MODULE_9__.WINDOW.document.readyState)) {\n          idleTransaction.sendAutoFinishSignal();\n        }\n      }\n    }\n\n    idleTransaction.registerBeforeFinishCallback(transaction => {\n      this._collectWebVitals();\n      (0,_metrics_index_js__WEBPACK_IMPORTED_MODULE_5__.addPerformanceEntries)(transaction);\n    });\n\n    return idleTransaction ;\n  }\n\n  /** Start listener for interaction transactions */\n   _registerInteractionListener() {\n    let inflightInteractionTransaction;\n    const registerInteractionTransaction = () => {\n      const { idleTimeout, finalTimeout, heartbeatInterval } = this.options;\n      const op = 'ui.action.click';\n\n      // eslint-disable-next-line deprecation/deprecation\n      const currentTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.getActiveTransaction)();\n      if (currentTransaction && currentTransaction.op && ['navigation', 'pageload'].includes(currentTransaction.op)) {\n        _common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD &&\n          _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn(\n            `[Tracing] Did not create ${op} transaction because a pageload or navigation transaction is in progress.`,\n          );\n        return undefined;\n      }\n\n      if (inflightInteractionTransaction) {\n        inflightInteractionTransaction.setFinishReason('interactionInterrupted');\n        inflightInteractionTransaction.end();\n        inflightInteractionTransaction = undefined;\n      }\n\n      if (!this._getCurrentHub) {\n        _common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn(`[Tracing] Did not create ${op} transaction because _getCurrentHub is invalid.`);\n        return undefined;\n      }\n\n      if (!this._latestRoute.name) {\n        _common_debug_build_js__WEBPACK_IMPORTED_MODULE_4__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn(`[Tracing] Did not create ${op} transaction because _latestRouteName is missing.`);\n        return undefined;\n      }\n\n      const hub = this._getCurrentHub();\n      const { location } = _types_js__WEBPACK_IMPORTED_MODULE_9__.WINDOW;\n\n      const context = {\n        name: this._latestRoute.name,\n        op,\n        trimEnd: true,\n        data: {\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: this._latestRoute.context\n            ? getSource(this._latestRoute.context)\n            : 'url',\n        },\n      };\n\n      inflightInteractionTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startIdleTransaction)(\n        hub,\n        context,\n        idleTimeout,\n        finalTimeout,\n        true,\n        { location }, // for use in the tracesSampler\n        heartbeatInterval,\n      );\n    };\n\n    ['click'].forEach(type => {\n      if (_types_js__WEBPACK_IMPORTED_MODULE_9__.WINDOW.document) {\n        addEventListener(type, registerInteractionTransaction, { once: false, capture: true });\n      }\n    });\n  }\n\n  /** Creates a listener on interaction entries, and maps interactionIds to the origin path of the interaction */\n   _registerInpInteractionListener() {\n    const handleEntries = ({ entries }) => {\n      const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_12__.getClient)();\n      // We need to get the replay, user, and activeTransaction from the current scope\n      // so that we can associate replay id, profile id, and a user display to the span\n      const replay =\n        client !== undefined && client.getIntegrationByName !== undefined\n          ? (client.getIntegrationByName('Replay') )\n          : undefined;\n      const replayId = replay !== undefined ? replay.getReplayId() : undefined;\n      // eslint-disable-next-line deprecation/deprecation\n      const activeTransaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.getActiveTransaction)();\n      const currentScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_12__.getCurrentScope)();\n      const user = currentScope !== undefined ? currentScope.getUser() : undefined;\n      entries.forEach(entry => {\n        if (isPerformanceEventTiming(entry)) {\n          const interactionId = entry.interactionId;\n          if (interactionId === undefined) {\n            return;\n          }\n          const existingInteraction = this._interactionIdToRouteNameMapping[interactionId];\n          const duration = entry.duration;\n          const startTime = entry.startTime;\n          const keys = Object.keys(this._interactionIdToRouteNameMapping);\n          const minInteractionId =\n            keys.length > 0\n              ? keys.reduce((a, b) => {\n                  return this._interactionIdToRouteNameMapping[a].duration <\n                    this._interactionIdToRouteNameMapping[b].duration\n                    ? a\n                    : b;\n                })\n              : undefined;\n          // For a first input event to be considered, we must check that an interaction event does not already exist with the same duration and start time.\n          // This is also checked in the web-vitals library.\n          if (entry.entryType === 'first-input') {\n            const matchingEntry = keys\n              .map(key => this._interactionIdToRouteNameMapping[key])\n              .some(interaction => {\n                return interaction.duration === duration && interaction.startTime === startTime;\n              });\n            if (matchingEntry) {\n              return;\n            }\n          }\n          // Interactions with an id of 0 and are not first-input are not valid.\n          if (!interactionId) {\n            return;\n          }\n          // If the interaction already exists, we want to use the duration of the longest entry, since that is what the INP metric uses.\n          if (existingInteraction) {\n            existingInteraction.duration = Math.max(existingInteraction.duration, duration);\n          } else if (\n            keys.length < MAX_INTERACTIONS ||\n            minInteractionId === undefined ||\n            duration > this._interactionIdToRouteNameMapping[minInteractionId].duration\n          ) {\n            // If the interaction does not exist, we want to add it to the mapping if there is space, or if the duration is longer than the shortest entry.\n            const routeName = this._latestRoute.name;\n            const parentContext = this._latestRoute.context;\n            if (routeName && parentContext) {\n              if (minInteractionId && Object.keys(this._interactionIdToRouteNameMapping).length >= MAX_INTERACTIONS) {\n                // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                delete this._interactionIdToRouteNameMapping[minInteractionId];\n              }\n              this._interactionIdToRouteNameMapping[interactionId] = {\n                routeName,\n                duration,\n                parentContext,\n                user,\n                activeTransaction,\n                replayId,\n                startTime,\n              };\n            }\n          }\n        }\n      });\n    };\n    (0,_instrument_js__WEBPACK_IMPORTED_MODULE_13__.addPerformanceInstrumentationHandler)('event', handleEntries);\n    (0,_instrument_js__WEBPACK_IMPORTED_MODULE_13__.addPerformanceInstrumentationHandler)('first-input', handleEntries);\n  }\n}\n\n/** Returns the value of a meta tag */\nfunction getMetaContent(metaName) {\n  // Can't specify generic to `getDomElement` because tracing can be used\n  // in a variety of environments, have to disable `no-unsafe-member-access`\n  // as a result.\n  const metaTag = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_14__.getDomElement)(`meta[name=${metaName}]`);\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return metaTag ? metaTag.getAttribute('content') : undefined;\n}\n\nfunction getSource(context) {\n  const sourceFromAttributes = context.attributes && context.attributes[_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromData = context.data && context.data[_sentry_core__WEBPACK_IMPORTED_MODULE_11__.SEMANTIC_ATTRIBUTE_SENTRY_SOURCE];\n  // eslint-disable-next-line deprecation/deprecation\n  const sourceFromMetadata = context.metadata && context.metadata.source;\n\n  return sourceFromAttributes || sourceFromData || sourceFromMetadata;\n}\n\nfunction isPerformanceEventTiming(entry) {\n  return 'duration' in entry;\n}\n\n\n//# sourceMappingURL=browsertracing.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/browsertracing.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/instrument.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/instrument.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addClsInstrumentationHandler: () => (/* binding */ addClsInstrumentationHandler),\n/* harmony export */   addFidInstrumentationHandler: () => (/* binding */ addFidInstrumentationHandler),\n/* harmony export */   addInpInstrumentationHandler: () => (/* binding */ addInpInstrumentationHandler),\n/* harmony export */   addLcpInstrumentationHandler: () => (/* binding */ addLcpInstrumentationHandler),\n/* harmony export */   addPerformanceInstrumentationHandler: () => (/* binding */ addPerformanceInstrumentationHandler),\n/* harmony export */   addTtfbInstrumentationHandler: () => (/* binding */ addTtfbInstrumentationHandler)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/stacktrace.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/debug-build.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js\");\n/* harmony import */ var _web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./web-vitals/getCLS.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js\");\n/* harmony import */ var _web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./web-vitals/getFID.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js\");\n/* harmony import */ var _web_vitals_getINP_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./web-vitals/getINP.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getINP.js\");\n/* harmony import */ var _web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./web-vitals/getLCP.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js\");\n/* harmony import */ var _web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./web-vitals/lib/observe.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _web_vitals_onTTFB_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./web-vitals/onTTFB.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/onTTFB.js\");\n\n\n\n\n\n\n\n\n\nconst handlers = {};\nconst instrumented = {};\n\nlet _previousCls;\nlet _previousFid;\nlet _previousLcp;\nlet _previousTtfb;\nlet _previousInp;\n\n/**\n * Add a callback that will be triggered when a CLS metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for CLS when the cleanup callback is called.\n * This will lead to the CLS being finalized and frozen.\n */\nfunction addClsInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('cls', callback, instrumentCls, _previousCls, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a LCP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n *\n * Pass `stopOnCallback = true` to stop listening for LCP when the cleanup callback is called.\n * This will lead to the LCP being finalized and frozen.\n */\nfunction addLcpInstrumentationHandler(\n  callback,\n  stopOnCallback = false,\n) {\n  return addMetricObserver('lcp', callback, instrumentLcp, _previousLcp, stopOnCallback);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n */\nfunction addTtfbInstrumentationHandler(callback) {\n  return addMetricObserver('ttfb', callback, instrumentTtfb, _previousTtfb);\n}\n\n/**\n * Add a callback that will be triggered when a FID metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addFidInstrumentationHandler(callback) {\n  return addMetricObserver('fid', callback, instrumentFid, _previousFid);\n}\n\n/**\n * Add a callback that will be triggered when a INP metric is available.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addInpInstrumentationHandler(\n  callback,\n) {\n  return addMetricObserver('inp', callback, instrumentInp, _previousInp);\n}\n\n/**\n * Add a callback that will be triggered when a performance observer is triggered,\n * and receives the entries of the observer.\n * Returns a cleanup callback which can be called to remove the instrumentation handler.\n */\nfunction addPerformanceInstrumentationHandler(\n  type,\n  callback,\n) {\n  addHandler(type, callback);\n\n  if (!instrumented[type]) {\n    instrumentPerformanceObserver(type);\n    instrumented[type] = true;\n  }\n\n  return getCleanupCallback(type, callback);\n}\n\n/** Trigger all handlers of a given type. */\nfunction triggerHandlers(type, data) {\n  const typeHandlers = handlers[type];\n\n  if (!typeHandlers || !typeHandlers.length) {\n    return;\n  }\n\n  for (const handler of typeHandlers) {\n    try {\n      handler(data);\n    } catch (e) {\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_0__.DEBUG_BUILD &&\n        _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.logger.error(\n          `Error while triggering instrumentation handler.\\nType: ${type}\\nName: ${(0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.getFunctionName)(handler)}\\nError:`,\n          e,\n        );\n    }\n  }\n}\n\nfunction instrumentCls() {\n  return (0,_web_vitals_getCLS_js__WEBPACK_IMPORTED_MODULE_3__.onCLS)(\n    metric => {\n      triggerHandlers('cls', {\n        metric,\n      });\n      _previousCls = metric;\n    },\n    { reportAllChanges: true },\n  );\n}\n\nfunction instrumentFid() {\n  return (0,_web_vitals_getFID_js__WEBPACK_IMPORTED_MODULE_4__.onFID)(metric => {\n    triggerHandlers('fid', {\n      metric,\n    });\n    _previousFid = metric;\n  });\n}\n\nfunction instrumentLcp() {\n  return (0,_web_vitals_getLCP_js__WEBPACK_IMPORTED_MODULE_5__.onLCP)(metric => {\n    triggerHandlers('lcp', {\n      metric,\n    });\n    _previousLcp = metric;\n  });\n}\n\nfunction instrumentTtfb() {\n  return (0,_web_vitals_onTTFB_js__WEBPACK_IMPORTED_MODULE_6__.onTTFB)(metric => {\n    triggerHandlers('ttfb', {\n      metric,\n    });\n    _previousTtfb = metric;\n  });\n}\n\nfunction instrumentInp() {\n  return (0,_web_vitals_getINP_js__WEBPACK_IMPORTED_MODULE_7__.onINP)(metric => {\n    triggerHandlers('inp', {\n      metric,\n    });\n    _previousInp = metric;\n  });\n}\n\nfunction addMetricObserver(\n  type,\n  callback,\n  instrumentFn,\n  previousValue,\n  stopOnCallback = false,\n) {\n  addHandler(type, callback);\n\n  let stopListening;\n\n  if (!instrumented[type]) {\n    stopListening = instrumentFn();\n    instrumented[type] = true;\n  }\n\n  if (previousValue) {\n    callback({ metric: previousValue });\n  }\n\n  return getCleanupCallback(type, callback, stopOnCallback ? stopListening : undefined);\n}\n\nfunction instrumentPerformanceObserver(type) {\n  const options = {};\n\n  // Special per-type options we want to use\n  if (type === 'event') {\n    options.durationThreshold = 0;\n  }\n\n  (0,_web_vitals_lib_observe_js__WEBPACK_IMPORTED_MODULE_8__.observe)(\n    type,\n    entries => {\n      triggerHandlers(type, { entries });\n    },\n    options,\n  );\n}\n\nfunction addHandler(type, handler) {\n  handlers[type] = handlers[type] || [];\n  (handlers[type] ).push(handler);\n}\n\n// Get a callback which can be called to remove the instrumentation handler\nfunction getCleanupCallback(\n  type,\n  callback,\n  stopListening,\n) {\n  return () => {\n    if (stopListening) {\n      stopListening();\n    }\n\n    const typeHandlers = handlers[type];\n\n    if (!typeHandlers) {\n      return;\n    }\n\n    const index = typeHandlers.indexOf(callback);\n    if (index !== -1) {\n      typeHandlers.splice(index, 1);\n    }\n  };\n}\n\n\n//# sourceMappingURL=instrument.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/instrument.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _addMeasureSpans: () => (/* binding */ _addMeasureSpans),\n/* harmony export */   _addResourceSpans: () => (/* binding */ _addResourceSpans),\n/* harmony export */   addPerformanceEntries: () => (/* binding */ addPerformanceEntries),\n/* harmony export */   startTrackingINP: () => (/* binding */ startTrackingINP),\n/* harmony export */   startTrackingInteractions: () => (/* binding */ startTrackingInteractions),\n/* harmony export */   startTrackingLongTasks: () => (/* binding */ startTrackingLongTasks),\n/* harmony export */   startTrackingWebVitals: () => (/* binding */ startTrackingWebVitals)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/utils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/span.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/span.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/measurement.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/sampling.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/browser.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../common/debug-build.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../instrument.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/instrument.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../web-vitals/lib/getVisibilityWatcher.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js\");\n/* harmony import */ var _web_vitals_lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../web-vitals/lib/getNavigationEntry.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n\n\n\n\n\n\n\n\n\nconst MAX_INT_AS_BYTES = 2147483647;\n\n/**\n * Converts from milliseconds to seconds\n * @param time time in ms\n */\nfunction msToSec(time) {\n  return time / 1000;\n}\n\nfunction getBrowserPerformanceAPI() {\n  // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n  return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.addEventListener && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance;\n}\n\nlet _performanceCursor = 0;\n\nlet _measurements = {};\nlet _lcpEntry;\nlet _clsEntry;\n\n/**\n * Start tracking web vitals.\n * The callback returned by this function can be used to stop tracking & ensure all measurements are final & captured.\n *\n * @returns A function that forces web vitals collection\n */\nfunction startTrackingWebVitals() {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // @ts-expect-error we want to make sure all of these are available, even if TS is sure they are\n    if (performance.mark) {\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.mark('sentry-tracing-init');\n    }\n    const fidCallback = _trackFID();\n    const clsCallback = _trackCLS();\n    const lcpCallback = _trackLCP();\n    const ttfbCallback = _trackTtfb();\n\n    return () => {\n      fidCallback();\n      clsCallback();\n      lcpCallback();\n      ttfbCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/**\n * Start tracking long tasks.\n */\nfunction startTrackingLongTasks() {\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addPerformanceInstrumentationHandler)('longtask', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n      const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n      const duration = msToSec(entry.duration);\n\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.startChild({\n        description: 'Main UI thread blocked',\n        op: 'ui.long-task',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: startTime,\n        endTimestamp: startTime + duration,\n      });\n    }\n  });\n}\n\n/**\n * Start tracking interaction events.\n */\nfunction startTrackingInteractions() {\n  (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addPerformanceInstrumentationHandler)('event', ({ entries }) => {\n    for (const entry of entries) {\n      // eslint-disable-next-line deprecation/deprecation\n      const transaction = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.getActiveTransaction)() ;\n      if (!transaction) {\n        return;\n      }\n\n      if (entry.name === 'click') {\n        const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n        const duration = msToSec(entry.duration);\n\n        const span = {\n          description: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(entry.target),\n          op: `ui.interaction.${entry.name}`,\n          origin: 'auto.ui.browser.metrics',\n          startTimestamp: startTime,\n          endTimestamp: startTime + duration,\n        };\n\n        const componentName = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.getComponentName)(entry.target);\n        if (componentName) {\n          span.attributes = { 'ui.component_name': componentName };\n        }\n\n        // eslint-disable-next-line deprecation/deprecation\n        transaction.startChild(span);\n      }\n    }\n  });\n}\n\n/**\n * Start tracking INP webvital events.\n */\nfunction startTrackingINP(\n  interactionIdtoRouteNameMapping,\n  interactionsSampleRate,\n) {\n  const performance = getBrowserPerformanceAPI();\n  if (performance && _sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    const inpCallback = _trackINP(interactionIdtoRouteNameMapping, interactionsSampleRate);\n\n    return () => {\n      inpCallback();\n    };\n  }\n\n  return () => undefined;\n}\n\n/** Starts tracking the Cumulative Layout Shift on the current page. */\nfunction _trackCLS() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addClsInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding CLS');\n    _measurements['cls'] = { value: metric.value, unit: '' };\n    _clsEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the Largest Contentful Paint on the current page. */\nfunction _trackLCP() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addLcpInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding LCP');\n    _measurements['lcp'] = { value: metric.value, unit: 'millisecond' };\n    _lcpEntry = entry ;\n  }, true);\n}\n\n/** Starts tracking the First Input Delay on the current page. */\nfunction _trackFID() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addFidInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin );\n    const startTime = msToSec(entry.startTime);\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding FID');\n    _measurements['fid'] = { value: metric.value, unit: 'millisecond' };\n    _measurements['mark.fid'] = { value: timeOrigin + startTime, unit: 'second' };\n  });\n}\n\nfunction _trackTtfb() {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addTtfbInstrumentationHandler)(({ metric }) => {\n    const entry = metric.entries[metric.entries.length - 1];\n    if (!entry) {\n      return;\n    }\n\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding TTFB');\n    _measurements['ttfb'] = { value: metric.value, unit: 'millisecond' };\n  });\n}\n\nconst INP_ENTRY_MAP = {\n  click: 'click',\n  pointerdown: 'click',\n  pointerup: 'click',\n  mousedown: 'click',\n  mouseup: 'click',\n  touchstart: 'click',\n  touchend: 'click',\n  mouseover: 'hover',\n  mouseout: 'hover',\n  mouseenter: 'hover',\n  mouseleave: 'hover',\n  pointerover: 'hover',\n  pointerout: 'hover',\n  pointerenter: 'hover',\n  pointerleave: 'hover',\n  dragstart: 'drag',\n  dragend: 'drag',\n  drag: 'drag',\n  dragenter: 'drag',\n  dragleave: 'drag',\n  dragover: 'drag',\n  drop: 'drag',\n  keydown: 'press',\n  keyup: 'press',\n  keypress: 'press',\n  input: 'press',\n};\n\n/** Starts tracking the Interaction to Next Paint on the current page. */\nfunction _trackINP(\n  interactionIdToRouteNameMapping,\n  interactionsSampleRate,\n) {\n  return (0,_instrument_js__WEBPACK_IMPORTED_MODULE_2__.addInpInstrumentationHandler)(({ metric }) => {\n    if (metric.value === undefined) {\n      return;\n    }\n    const entry = metric.entries.find(\n      entry => entry.duration === metric.value && INP_ENTRY_MAP[entry.name] !== undefined,\n    );\n    const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_7__.getClient)();\n    if (!entry || !client) {\n      return;\n    }\n    const interactionType = INP_ENTRY_MAP[entry.name];\n    const options = client.getOptions();\n    /** Build the INP span, create an envelope from the span, and then send the envelope */\n    const startTime = msToSec((_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin ) + entry.startTime);\n    const duration = msToSec(metric.value);\n    const interaction =\n      entry.interactionId !== undefined ? interactionIdToRouteNameMapping[entry.interactionId] : undefined;\n    if (interaction === undefined) {\n      return;\n    }\n    const { routeName, parentContext, activeTransaction, user, replayId } = interaction;\n    const userDisplay = user !== undefined ? user.email || user.id || user.ip_address : undefined;\n    // eslint-disable-next-line deprecation/deprecation\n    const profileId = activeTransaction !== undefined ? activeTransaction.getProfileId() : undefined;\n    const span = new _sentry_core__WEBPACK_IMPORTED_MODULE_8__.Span({\n      startTimestamp: startTime,\n      endTimestamp: startTime + duration,\n      op: `ui.interaction.${interactionType}`,\n      name: (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(entry.target),\n      attributes: {\n        release: options.release,\n        environment: options.environment,\n        transaction: routeName,\n        ...(userDisplay !== undefined && userDisplay !== '' ? { user: userDisplay } : {}),\n        ...(profileId !== undefined ? { profile_id: profileId } : {}),\n        ...(replayId !== undefined ? { replay_id: replayId } : {}),\n      },\n      exclusiveTime: metric.value,\n      measurements: {\n        inp: { value: metric.value, unit: 'millisecond' },\n      },\n    });\n\n    /** Check to see if the span should be sampled */\n    const sampleRate = getSampleRate(parentContext, options, interactionsSampleRate);\n\n    if (!sampleRate) {\n      return;\n    }\n\n    if (Math.random() < (sampleRate )) {\n      const envelope = span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.createSpanEnvelope)([span], client.getDsn()) : undefined;\n      const transport = client && client.getTransport();\n      if (transport && envelope) {\n        transport.send(envelope).then(null, reason => {\n          _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.error('Error while sending interaction:', reason);\n        });\n      }\n      return;\n    }\n  });\n}\n\n/** Add performance related spans to a transaction */\nfunction addPerformanceEntries(transaction) {\n  const performance = getBrowserPerformanceAPI();\n  if (!performance || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.getEntries || !_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin) {\n    // Gatekeeper if performance API not available\n    return;\n  }\n\n  _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Tracing] Adding & adjusting spans using Performance API');\n  const timeOrigin = msToSec(_sentry_utils__WEBPACK_IMPORTED_MODULE_1__.browserPerformanceTimeOrigin);\n\n  const performanceEntries = performance.getEntries();\n\n  const { op, start_timestamp: transactionStartTime } = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.spanToJSON)(transaction);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  performanceEntries.slice(_performanceCursor).forEach((entry) => {\n    const startTime = msToSec(entry.startTime);\n    const duration = msToSec(entry.duration);\n\n    // eslint-disable-next-line deprecation/deprecation\n    if (transaction.op === 'navigation' && transactionStartTime && timeOrigin + startTime < transactionStartTime) {\n      return;\n    }\n\n    switch (entry.entryType) {\n      case 'navigation': {\n        _addNavigationSpans(transaction, entry, timeOrigin);\n        break;\n      }\n      case 'mark':\n      case 'paint':\n      case 'measure': {\n        _addMeasureSpans(transaction, entry, startTime, duration, timeOrigin);\n\n        // capture web vitals\n        const firstHidden = (0,_web_vitals_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_11__.getVisibilityWatcher)();\n        // Only report if the page wasn't hidden prior to the web vital.\n        const shouldRecord = entry.startTime < firstHidden.firstHiddenTime;\n\n        if (entry.name === 'first-paint' && shouldRecord) {\n          _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding FP');\n          _measurements['fp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        if (entry.name === 'first-contentful-paint' && shouldRecord) {\n          _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding FCP');\n          _measurements['fcp'] = { value: entry.startTime, unit: 'millisecond' };\n        }\n        break;\n      }\n      case 'resource': {\n        _addResourceSpans(transaction, entry, entry.name , startTime, duration, timeOrigin);\n        break;\n      }\n      // Ignore other entry types.\n    }\n  });\n\n  _performanceCursor = Math.max(performanceEntries.length - 1, 0);\n\n  _trackNavigator(transaction);\n\n  // Measurements are only available for pageload transactions\n  if (op === 'pageload') {\n    _addTtfbRequestTimeToMeasurements(_measurements);\n\n    ['fcp', 'fp', 'lcp'].forEach(name => {\n      if (!_measurements[name] || !transactionStartTime || timeOrigin >= transactionStartTime) {\n        return;\n      }\n      // The web vitals, fcp, fp, lcp, and ttfb, all measure relative to timeOrigin.\n      // Unfortunately, timeOrigin is not captured within the transaction span data, so these web vitals will need\n      // to be adjusted to be relative to transaction.startTimestamp.\n      const oldValue = _measurements[name].value;\n      const measurementTimestamp = timeOrigin + msToSec(oldValue);\n\n      // normalizedValue should be in milliseconds\n      const normalizedValue = Math.abs((measurementTimestamp - transactionStartTime) * 1000);\n      const delta = normalizedValue - oldValue;\n\n      _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log(`[Measurements] Normalized ${name} from ${oldValue} to ${normalizedValue} (${delta})`);\n      _measurements[name].value = normalizedValue;\n    });\n\n    const fidMark = _measurements['mark.fid'];\n    if (fidMark && _measurements['fid']) {\n      // create span for FID\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__._startChild)(transaction, {\n        description: 'first input delay',\n        endTimestamp: fidMark.value + msToSec(_measurements['fid'].value),\n        op: 'ui.action',\n        origin: 'auto.ui.browser.metrics',\n        startTimestamp: fidMark.value,\n      });\n\n      // Delete mark.fid as we don't want it to be part of final payload\n      delete _measurements['mark.fid'];\n    }\n\n    // If FCP is not recorded we should not record the cls value\n    // according to the new definition of CLS.\n    if (!('fcp' in _measurements)) {\n      delete _measurements.cls;\n    }\n\n    Object.keys(_measurements).forEach(measurementName => {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_13__.setMeasurement)(measurementName, _measurements[measurementName].value, _measurements[measurementName].unit);\n    });\n\n    _tagMetricInfo(transaction);\n  }\n\n  _lcpEntry = undefined;\n  _clsEntry = undefined;\n  _measurements = {};\n}\n\n/** Create measure related spans */\nfunction _addMeasureSpans(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  const measureStartTimestamp = timeOrigin + startTime;\n  const measureEndTimestamp = measureStartTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__._startChild)(transaction, {\n    description: entry.name ,\n    endTimestamp: measureEndTimestamp,\n    op: entry.entryType ,\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp: measureStartTimestamp,\n  });\n\n  return measureStartTimestamp;\n}\n\n/** Instrument navigation entries */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addNavigationSpans(transaction, entry, timeOrigin) {\n  ['unloadEvent', 'redirect', 'domContentLoadedEvent', 'loadEvent', 'connect'].forEach(event => {\n    _addPerformanceNavigationTiming(transaction, entry, event, timeOrigin);\n  });\n  _addPerformanceNavigationTiming(transaction, entry, 'secureConnection', timeOrigin, 'TLS/SSL', 'connectEnd');\n  _addPerformanceNavigationTiming(transaction, entry, 'fetch', timeOrigin, 'cache', 'domainLookupStart');\n  _addPerformanceNavigationTiming(transaction, entry, 'domainLookup', timeOrigin, 'DNS');\n  _addRequest(transaction, entry, timeOrigin);\n}\n\n/** Create performance navigation related spans */\nfunction _addPerformanceNavigationTiming(\n  transaction,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  entry,\n  event,\n  timeOrigin,\n  description,\n  eventEnd,\n) {\n  const end = eventEnd ? (entry[eventEnd] ) : (entry[`${event}End`] );\n  const start = entry[`${event}Start`] ;\n  if (!start || !end) {\n    return;\n  }\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__._startChild)(transaction, {\n    op: 'browser',\n    origin: 'auto.browser.browser.metrics',\n    description: description || event,\n    startTimestamp: timeOrigin + msToSec(start),\n    endTimestamp: timeOrigin + msToSec(end),\n  });\n}\n\n/** Create request and response related spans */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _addRequest(transaction, entry, timeOrigin) {\n  if (entry.responseEnd) {\n    // It is possible that we are collecting these metrics when the page hasn't finished loading yet, for example when the HTML slowly streams in.\n    // In this case, ie. when the document request hasn't finished yet, `entry.responseEnd` will be 0.\n    // In order not to produce faulty spans, where the end timestamp is before the start timestamp, we will only collect\n    // these spans when the responseEnd value is available. The backend (Relay) would drop the entire transaction if it contained faulty spans.\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__._startChild)(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'request',\n      startTimestamp: timeOrigin + msToSec(entry.requestStart ),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n    });\n\n    (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__._startChild)(transaction, {\n      op: 'browser',\n      origin: 'auto.browser.browser.metrics',\n      description: 'response',\n      startTimestamp: timeOrigin + msToSec(entry.responseStart ),\n      endTimestamp: timeOrigin + msToSec(entry.responseEnd ),\n    });\n  }\n}\n\n/** Create resource-related spans */\nfunction _addResourceSpans(\n  transaction,\n  entry,\n  resourceUrl,\n  startTime,\n  duration,\n  timeOrigin,\n) {\n  // we already instrument based on fetch and xhr, so we don't need to\n  // duplicate spans here.\n  if (entry.initiatorType === 'xmlhttprequest' || entry.initiatorType === 'fetch') {\n    return;\n  }\n\n  const parsedUrl = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_14__.parseUrl)(resourceUrl);\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const data = {};\n  setResourceEntrySizeData(data, entry, 'transferSize', 'http.response_transfer_size');\n  setResourceEntrySizeData(data, entry, 'encodedBodySize', 'http.response_content_length');\n  setResourceEntrySizeData(data, entry, 'decodedBodySize', 'http.decoded_response_content_length');\n\n  if ('renderBlockingStatus' in entry) {\n    data['resource.render_blocking_status'] = entry.renderBlockingStatus;\n  }\n  if (parsedUrl.protocol) {\n    data['url.scheme'] = parsedUrl.protocol.split(':').pop(); // the protocol returned by parseUrl includes a :, but OTEL spec does not, so we remove it.\n  }\n\n  if (parsedUrl.host) {\n    data['server.address'] = parsedUrl.host;\n  }\n\n  data['url.same_origin'] = resourceUrl.includes(_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.origin);\n\n  const startTimestamp = timeOrigin + startTime;\n  const endTimestamp = startTimestamp + duration;\n\n  (0,_utils_js__WEBPACK_IMPORTED_MODULE_12__._startChild)(transaction, {\n    description: resourceUrl.replace(_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.origin, ''),\n    endTimestamp,\n    op: entry.initiatorType ? `resource.${entry.initiatorType}` : 'resource.other',\n    origin: 'auto.resource.browser.metrics',\n    startTimestamp,\n    data,\n  });\n}\n\n/**\n * Capture the information of the user agent.\n */\nfunction _trackNavigator(transaction) {\n  const navigator = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.navigator ;\n  if (!navigator) {\n    return;\n  }\n\n  // track network connectivity\n  const connection = navigator.connection;\n  if (connection) {\n    if (connection.effectiveType) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('effectiveConnectionType', connection.effectiveType);\n    }\n\n    if (connection.type) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('connectionType', connection.type);\n    }\n\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_12__.isMeasurementValue)(connection.rtt)) {\n      _measurements['connection.rtt'] = { value: connection.rtt, unit: 'millisecond' };\n    }\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_12__.isMeasurementValue)(navigator.deviceMemory)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('deviceMemory', `${navigator.deviceMemory} GB`);\n  }\n\n  if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_12__.isMeasurementValue)(navigator.hardwareConcurrency)) {\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('hardwareConcurrency', String(navigator.hardwareConcurrency));\n  }\n}\n\n/** Add LCP / CLS data to transaction to allow debugging */\nfunction _tagMetricInfo(transaction) {\n  if (_lcpEntry) {\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding LCP Data');\n\n    // Capture Properties of the LCP element that contributes to the LCP.\n\n    if (_lcpEntry.element) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.element', (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(_lcpEntry.element));\n    }\n\n    if (_lcpEntry.id) {\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.id', _lcpEntry.id);\n    }\n\n    if (_lcpEntry.url) {\n      // Trim URL to the first 200 characters.\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag('lcp.url', _lcpEntry.url.trim().slice(0, 200));\n    }\n\n    // TODO: Can we rewrite this to an attribute?\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.setTag('lcp.size', _lcpEntry.size);\n  }\n\n  // See: https://developer.mozilla.org/en-US/docs/Web/API/LayoutShift\n  if (_clsEntry && _clsEntry.sources) {\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding CLS Data');\n    _clsEntry.sources.forEach((source, index) =>\n      // TODO: Can we rewrite this to an attribute?\n      // eslint-disable-next-line deprecation/deprecation\n      transaction.setTag(`cls.source.${index + 1}`, (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.htmlTreeAsString)(source.node)),\n    );\n  }\n}\n\nfunction setResourceEntrySizeData(\n  data,\n  entry,\n  key,\n  dataKey,\n) {\n  const entryVal = entry[key];\n  if (entryVal != null && entryVal < MAX_INT_AS_BYTES) {\n    data[dataKey] = entryVal;\n  }\n}\n\n/**\n * Add ttfb request time information to measurements.\n *\n * ttfb information is added via vendored web vitals library.\n */\nfunction _addTtfbRequestTimeToMeasurements(_measurements) {\n  const navEntry = (0,_web_vitals_lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_15__.getNavigationEntry)();\n  if (!navEntry) {\n    return;\n  }\n\n  const { responseStart, requestStart } = navEntry;\n\n  if (requestStart <= responseStart) {\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.log('[Measurements] Adding TTFB Request Time');\n    _measurements['ttfb.requestTime'] = {\n      value: responseStart - requestStart,\n      unit: 'millisecond',\n    };\n  }\n}\n\n/** Taken from @sentry/core sampling.ts */\nfunction getSampleRate(\n  transactionContext,\n  options,\n  interactionsSampleRate,\n) {\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_16__.hasTracingEnabled)(options)) {\n    return false;\n  }\n  let sampleRate;\n  if (transactionContext !== undefined && typeof options.tracesSampler === 'function') {\n    sampleRate = options.tracesSampler({\n      transactionContext,\n      name: transactionContext.name,\n      parentSampled: transactionContext.parentSampled,\n      attributes: {\n        // eslint-disable-next-line deprecation/deprecation\n        ...transactionContext.data,\n        ...transactionContext.attributes,\n      },\n      location: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location,\n    });\n  } else if (transactionContext !== undefined && transactionContext.sampled !== undefined) {\n    sampleRate = transactionContext.sampled;\n  } else if (typeof options.tracesSampleRate !== 'undefined') {\n    sampleRate = options.tracesSampleRate;\n  } else {\n    sampleRate = 1;\n  }\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_17__.isValidSampleRate)(sampleRate)) {\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_5__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_6__.logger.warn('[Tracing] Discarding interaction span because of invalid sample rate.');\n    return false;\n  }\n  if (sampleRate === true) {\n    return interactionsSampleRate;\n  } else if (sampleRate === false) {\n    return 0;\n  }\n  return sampleRate * interactionsSampleRate;\n}\n\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/metrics/index.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js":
/*!*****************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _startChild: () => (/* binding */ _startChild),\n/* harmony export */   isMeasurementValue: () => (/* binding */ isMeasurementValue)\n/* harmony export */ });\n/**\n * Checks if a given value is a valid measurement value.\n */\nfunction isMeasurementValue(value) {\n  return typeof value === 'number' && isFinite(value);\n}\n\n/**\n * Helper function to start child on transactions. This function will make sure that the transaction will\n * use the start timestamp of the created child span if it is earlier than the transactions actual\n * start timestamp.\n *\n * Note: this will not be possible anymore in v8,\n * unless we do some special handling for browser here...\n */\nfunction _startChild(transaction, { startTimestamp, ...ctx }) {\n  // eslint-disable-next-line deprecation/deprecation\n  if (startTimestamp && transaction.startTimestamp > startTimestamp) {\n    // eslint-disable-next-line deprecation/deprecation\n    transaction.startTimestamp = startTimestamp;\n  }\n\n  // eslint-disable-next-line deprecation/deprecation\n  return transaction.startChild({\n    startTimestamp,\n    ...ctx,\n  });\n}\n\n\n//# sourceMappingURL=utils.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci9tZXRyaWNzL3V0aWxzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0Msd0JBQXdCO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7O0FBRTJDO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL21ldHJpY3MvdXRpbHMuanM/NWM0YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBhIGdpdmVuIHZhbHVlIGlzIGEgdmFsaWQgbWVhc3VyZW1lbnQgdmFsdWUuXG4gKi9cbmZ1bmN0aW9uIGlzTWVhc3VyZW1lbnRWYWx1ZSh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnbnVtYmVyJyAmJiBpc0Zpbml0ZSh2YWx1ZSk7XG59XG5cbi8qKlxuICogSGVscGVyIGZ1bmN0aW9uIHRvIHN0YXJ0IGNoaWxkIG9uIHRyYW5zYWN0aW9ucy4gVGhpcyBmdW5jdGlvbiB3aWxsIG1ha2Ugc3VyZSB0aGF0IHRoZSB0cmFuc2FjdGlvbiB3aWxsXG4gKiB1c2UgdGhlIHN0YXJ0IHRpbWVzdGFtcCBvZiB0aGUgY3JlYXRlZCBjaGlsZCBzcGFuIGlmIGl0IGlzIGVhcmxpZXIgdGhhbiB0aGUgdHJhbnNhY3Rpb25zIGFjdHVhbFxuICogc3RhcnQgdGltZXN0YW1wLlxuICpcbiAqIE5vdGU6IHRoaXMgd2lsbCBub3QgYmUgcG9zc2libGUgYW55bW9yZSBpbiB2OCxcbiAqIHVubGVzcyB3ZSBkbyBzb21lIHNwZWNpYWwgaGFuZGxpbmcgZm9yIGJyb3dzZXIgaGVyZS4uLlxuICovXG5mdW5jdGlvbiBfc3RhcnRDaGlsZCh0cmFuc2FjdGlvbiwgeyBzdGFydFRpbWVzdGFtcCwgLi4uY3R4IH0pIHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGlmIChzdGFydFRpbWVzdGFtcCAmJiB0cmFuc2FjdGlvbi5zdGFydFRpbWVzdGFtcCA+IHN0YXJ0VGltZXN0YW1wKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gICAgdHJhbnNhY3Rpb24uc3RhcnRUaW1lc3RhbXAgPSBzdGFydFRpbWVzdGFtcDtcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICByZXR1cm4gdHJhbnNhY3Rpb24uc3RhcnRDaGlsZCh7XG4gICAgc3RhcnRUaW1lc3RhbXAsXG4gICAgLi4uY3R4LFxuICB9KTtcbn1cblxuZXhwb3J0IHsgX3N0YXJ0Q2hpbGQsIGlzTWVhc3VyZW1lbnRWYWx1ZSB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dXRpbHMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/metrics/utils.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/request.js":
/*!***********************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/request.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_TRACE_PROPAGATION_TARGETS: () => (/* binding */ DEFAULT_TRACE_PROPAGATION_TARGETS),\n/* harmony export */   defaultRequestInstrumentationOptions: () => (/* binding */ defaultRequestInstrumentationOptions),\n/* harmony export */   extractNetworkProtocol: () => (/* binding */ extractNetworkProtocol),\n/* harmony export */   instrumentOutgoingRequests: () => (/* binding */ instrumentOutgoingRequests),\n/* harmony export */   shouldAttachHeaders: () => (/* binding */ shouldAttachHeaders),\n/* harmony export */   xhrCallback: () => (/* binding */ xhrCallback)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/instrument/fetch.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/instrument/xhr.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/string.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _common_fetch_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/fetch.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/common/fetch.js\");\n/* harmony import */ var _instrument_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./instrument.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/instrument.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n\n\n/* eslint-disable max-lines */\n\nconst DEFAULT_TRACE_PROPAGATION_TARGETS = ['localhost', /^\\/(?!\\/)/];\n\n/** Options for Request Instrumentation */\n\nconst defaultRequestInstrumentationOptions = {\n  traceFetch: true,\n  traceXHR: true,\n  enableHTTPTimings: true,\n  // TODO (v8): Remove this property\n  tracingOrigins: DEFAULT_TRACE_PROPAGATION_TARGETS,\n  tracePropagationTargets: DEFAULT_TRACE_PROPAGATION_TARGETS,\n};\n\n/** Registers span creators for xhr and fetch requests  */\nfunction instrumentOutgoingRequests(_options) {\n  const {\n    traceFetch,\n    traceXHR,\n    // eslint-disable-next-line deprecation/deprecation\n    tracePropagationTargets,\n    // eslint-disable-next-line deprecation/deprecation\n    tracingOrigins,\n    shouldCreateSpanForRequest,\n    enableHTTPTimings,\n  } = {\n    traceFetch: defaultRequestInstrumentationOptions.traceFetch,\n    traceXHR: defaultRequestInstrumentationOptions.traceXHR,\n    ..._options,\n  };\n\n  const shouldCreateSpan =\n    typeof shouldCreateSpanForRequest === 'function' ? shouldCreateSpanForRequest : (_) => true;\n\n  // TODO(v8) Remove tracingOrigins here\n  // The only reason we're passing it in here is because this instrumentOutgoingRequests function is publicly exported\n  // and we don't want to break the API. We can remove it in v8.\n  const shouldAttachHeadersWithTargets = (url) =>\n    shouldAttachHeaders(url, tracePropagationTargets || tracingOrigins);\n\n  const spans = {};\n\n  if (traceFetch) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_0__.addFetchInstrumentationHandler)(handlerData => {\n      const createdSpan = (0,_common_fetch_js__WEBPACK_IMPORTED_MODULE_1__.instrumentFetchRequest)(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      // We cannot use `window.location` in the generic fetch instrumentation,\n      // but we need it for reliable `server.address` attribute.\n      // so we extend this in here\n      if (createdSpan) {\n        const fullUrl = getFullURL(handlerData.fetchData.url);\n        const host = fullUrl ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(fullUrl).host : undefined;\n        createdSpan.setAttributes({\n          'http.url': fullUrl,\n          'server.address': host,\n        });\n      }\n\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n\n  if (traceXHR) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.addXhrInstrumentationHandler)(handlerData => {\n      const createdSpan = xhrCallback(handlerData, shouldCreateSpan, shouldAttachHeadersWithTargets, spans);\n      if (enableHTTPTimings && createdSpan) {\n        addHTTPTimings(createdSpan);\n      }\n    });\n  }\n}\n\nfunction isPerformanceResourceTiming(entry) {\n  return (\n    entry.entryType === 'resource' &&\n    'initiatorType' in entry &&\n    typeof (entry ).nextHopProtocol === 'string' &&\n    (entry.initiatorType === 'fetch' || entry.initiatorType === 'xmlhttprequest')\n  );\n}\n\n/**\n * Creates a temporary observer to listen to the next fetch/xhr resourcing timings,\n * so that when timings hit their per-browser limit they don't need to be removed.\n *\n * @param span A span that has yet to be finished, must contain `url` on data.\n */\nfunction addHTTPTimings(span) {\n  const { url } = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.spanToJSON)(span).data || {};\n\n  if (!url || typeof url !== 'string') {\n    return;\n  }\n\n  const cleanup = (0,_instrument_js__WEBPACK_IMPORTED_MODULE_5__.addPerformanceInstrumentationHandler)('resource', ({ entries }) => {\n    entries.forEach(entry => {\n      if (isPerformanceResourceTiming(entry) && entry.name.endsWith(url)) {\n        const spanData = resourceTimingEntryToSpanData(entry);\n        spanData.forEach(data => span.setAttribute(...data));\n        // In the next tick, clean this handler up\n        // We have to wait here because otherwise this cleans itself up before it is fully done\n        setTimeout(cleanup);\n      }\n    });\n  });\n}\n\n/**\n * Converts ALPN protocol ids to name and version.\n *\n * (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids)\n * @param nextHopProtocol PerformanceResourceTiming.nextHopProtocol\n */\nfunction extractNetworkProtocol(nextHopProtocol) {\n  let name = 'unknown';\n  let version = 'unknown';\n  let _name = '';\n  for (const char of nextHopProtocol) {\n    // http/1.1 etc.\n    if (char === '/') {\n      [name, version] = nextHopProtocol.split('/');\n      break;\n    }\n    // h2, h3 etc.\n    if (!isNaN(Number(char))) {\n      name = _name === 'h' ? 'http' : _name;\n      version = nextHopProtocol.split(_name)[1];\n      break;\n    }\n    _name += char;\n  }\n  if (_name === nextHopProtocol) {\n    // webrtc, ftp, etc.\n    name = _name;\n  }\n  return { name, version };\n}\n\nfunction getAbsoluteTime(time = 0) {\n  return ((_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.browserPerformanceTimeOrigin || performance.timeOrigin) + time) / 1000;\n}\n\nfunction resourceTimingEntryToSpanData(resourceTiming) {\n  const { name, version } = extractNetworkProtocol(resourceTiming.nextHopProtocol);\n\n  const timingSpanData = [];\n\n  timingSpanData.push(['network.protocol.version', version], ['network.protocol.name', name]);\n\n  if (!_sentry_utils__WEBPACK_IMPORTED_MODULE_6__.browserPerformanceTimeOrigin) {\n    return timingSpanData;\n  }\n  return [\n    ...timingSpanData,\n    ['http.request.redirect_start', getAbsoluteTime(resourceTiming.redirectStart)],\n    ['http.request.fetch_start', getAbsoluteTime(resourceTiming.fetchStart)],\n    ['http.request.domain_lookup_start', getAbsoluteTime(resourceTiming.domainLookupStart)],\n    ['http.request.domain_lookup_end', getAbsoluteTime(resourceTiming.domainLookupEnd)],\n    ['http.request.connect_start', getAbsoluteTime(resourceTiming.connectStart)],\n    ['http.request.secure_connection_start', getAbsoluteTime(resourceTiming.secureConnectionStart)],\n    ['http.request.connection_end', getAbsoluteTime(resourceTiming.connectEnd)],\n    ['http.request.request_start', getAbsoluteTime(resourceTiming.requestStart)],\n    ['http.request.response_start', getAbsoluteTime(resourceTiming.responseStart)],\n    ['http.request.response_end', getAbsoluteTime(resourceTiming.responseEnd)],\n  ];\n}\n\n/**\n * A function that determines whether to attach tracing headers to a request.\n * This was extracted from `instrumentOutgoingRequests` to make it easier to test shouldAttachHeaders.\n * We only export this fuction for testing purposes.\n */\nfunction shouldAttachHeaders(url, tracePropagationTargets) {\n  return (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.stringMatchesSomePattern)(url, tracePropagationTargets || DEFAULT_TRACE_PROPAGATION_TARGETS);\n}\n\n/**\n * Create and track xhr request spans\n *\n * @returns Span if a span was created, otherwise void.\n */\n// eslint-disable-next-line complexity\nfunction xhrCallback(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n) {\n  const xhr = handlerData.xhr;\n  const sentryXhrData = xhr && xhr[_sentry_utils__WEBPACK_IMPORTED_MODULE_3__.SENTRY_XHR_DATA_KEY];\n\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_8__.hasTracingEnabled)() || !xhr || xhr.__sentry_own_request__ || !sentryXhrData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(sentryXhrData.url);\n\n  // check first if the request has finished and is tracked by an existing span which should now end\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = xhr.__sentry_xhr_span_id__;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span && sentryXhrData.status_code !== undefined) {\n      (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.setHttpStatus)(span, sentryXhrData.status_code);\n      span.end();\n\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.getCurrentScope)();\n  const isolationScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_11__.getIsolationScope)();\n\n  const fullUrl = getFullURL(sentryXhrData.url);\n  const host = fullUrl ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_12__.startInactiveSpan)({\n        name: `${sentryXhrData.method} ${sentryXhrData.url}`,\n        onlyIfParent: true,\n        attributes: {\n          type: 'xhr',\n          'http.method': sentryXhrData.method,\n          'http.url': fullUrl,\n          url: sentryXhrData.url,\n          'server.address': host,\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_13__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.http.browser',\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    xhr.__sentry_xhr_span_id__ = span.spanContext().spanId;\n    spans[xhr.__sentry_xhr_span_id__] = span;\n  }\n\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_10__.getClient)();\n\n  if (xhr.setRequestHeader && shouldAttachHeaders(sentryXhrData.url) && client) {\n    const { traceId, spanId, sampled, dsc } = {\n      ...isolationScope.getPropagationContext(),\n      ...scope.getPropagationContext(),\n    };\n\n    const sentryTraceHeader = span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_4__.spanToTraceHeader)(span) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_14__.generateSentryTraceHeader)(traceId, spanId, sampled);\n\n    const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_15__.dynamicSamplingContextToSentryBaggageHeader)(\n      dsc ||\n        (span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_16__.getDynamicSamplingContextFromSpan)(span) : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_16__.getDynamicSamplingContextFromClient)(traceId, client, scope)),\n    );\n\n    setHeaderOnXhr(xhr, sentryTraceHeader, sentryBaggageHeader);\n  }\n\n  return span;\n}\n\nfunction setHeaderOnXhr(\n  xhr,\n  sentryTraceHeader,\n  sentryBaggageHeader,\n) {\n  try {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    xhr.setRequestHeader('sentry-trace', sentryTraceHeader);\n    if (sentryBaggageHeader) {\n      // From MDN: \"If this method is called several times with the same header, the values are merged into one single request header.\"\n      // We can therefore simply set a baggage header without checking what was there before\n      // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      xhr.setRequestHeader(_sentry_utils__WEBPACK_IMPORTED_MODULE_15__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n  } catch (_) {\n    // Error: InvalidStateError: Failed to execute 'setRequestHeader' on 'XMLHttpRequest': The object's state must be OPENED.\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    // By adding a base URL to new URL(), this will also work for relative urls\n    // If `url` is a full URL, the base URL is ignored anyhow\n    const parsed = new URL(url, _types_js__WEBPACK_IMPORTED_MODULE_17__.WINDOW.location.origin);\n    return parsed.href;\n  } catch (e) {\n    return undefined;\n  }\n}\n\n\n//# sourceMappingURL=request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/request.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/router.js":
/*!**********************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/router.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   instrumentRoutingWithDefaults: () => (/* binding */ instrumentRoutingWithDefaults)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/logger.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/time.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/instrument/history.js\");\n/* harmony import */ var _common_debug_build_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/debug-build.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n\n\n/**\n * Default function implementing pageload and navigation transactions\n */\nfunction instrumentRoutingWithDefaults(\n  customStartTransaction,\n  startTransactionOnPageLoad = true,\n  startTransactionOnLocationChange = true,\n) {\n  if (!_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW || !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location) {\n    _common_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.warn('Could not initialize routing instrumentation due to invalid location');\n    return;\n  }\n\n  let startingUrl = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.href;\n\n  let activeTransaction;\n  if (startTransactionOnPageLoad) {\n    activeTransaction = customStartTransaction({\n      name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n      // pageload should always start at timeOrigin (and needs to be in s, not ms)\n      startTimestamp: _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.browserPerformanceTimeOrigin ? _sentry_utils__WEBPACK_IMPORTED_MODULE_3__.browserPerformanceTimeOrigin / 1000 : undefined,\n      op: 'pageload',\n      origin: 'auto.pageload.browser',\n      metadata: { source: 'url' },\n    });\n  }\n\n  if (startTransactionOnLocationChange) {\n    (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_4__.addHistoryInstrumentationHandler)(({ to, from }) => {\n      /**\n       * This early return is there to account for some cases where a navigation transaction starts right after\n       * long-running pageload. We make sure that if `from` is undefined and a valid `startingURL` exists, we don't\n       * create an uneccessary navigation transaction.\n       *\n       * This was hard to duplicate, but this behavior stopped as soon as this fix was applied. This issue might also\n       * only be caused in certain development environments where the usage of a hot module reloader is causing\n       * errors.\n       */\n      if (from === undefined && startingUrl && startingUrl.indexOf(to) !== -1) {\n        startingUrl = undefined;\n        return;\n      }\n\n      if (from !== to) {\n        startingUrl = undefined;\n        if (activeTransaction) {\n          _common_debug_build_js__WEBPACK_IMPORTED_MODULE_1__.DEBUG_BUILD && _sentry_utils__WEBPACK_IMPORTED_MODULE_2__.logger.log(`[Tracing] Finishing current transaction with op: ${activeTransaction.op}`);\n          // If there's an open transaction on the scope, we need to finish it before creating an new one.\n          activeTransaction.end();\n        }\n        activeTransaction = customStartTransaction({\n          name: _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.location.pathname,\n          op: 'navigation',\n          origin: 'auto.navigation.browser',\n          metadata: { source: 'url' },\n        });\n      }\n    });\n  }\n}\n\n\n//# sourceMappingURL=router.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci9yb3V0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXVHO0FBQ2hEO0FBQ25COztBQUVwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyw2Q0FBTSxLQUFLLDZDQUFNO0FBQ3hCLElBQUksK0RBQVcsSUFBSSxpREFBTTtBQUN6QjtBQUNBOztBQUVBLG9CQUFvQiw2Q0FBTTs7QUFFMUI7QUFDQTtBQUNBO0FBQ0EsWUFBWSw2Q0FBTTtBQUNsQjtBQUNBLHNCQUFzQix1RUFBNEIsR0FBRyx1RUFBNEI7QUFDakY7QUFDQTtBQUNBLGtCQUFrQixlQUFlO0FBQ2pDLEtBQUs7QUFDTDs7QUFFQTtBQUNBLElBQUksK0VBQWdDLElBQUksVUFBVTtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLCtEQUFXLElBQUksaURBQU0seURBQXlELHFCQUFxQjtBQUM3RztBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2Q0FBTTtBQUN0QjtBQUNBO0FBQ0Esc0JBQXNCLGVBQWU7QUFDckMsU0FBUztBQUNUO0FBQ0EsS0FBSztBQUNMO0FBQ0E7O0FBRXlDO0FBQ3pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3JvdXRlci5qcz9jYWNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGxvZ2dlciwgYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiwgYWRkSGlzdG9yeUluc3RydW1lbnRhdGlvbkhhbmRsZXIgfSBmcm9tICdAc2VudHJ5L3V0aWxzJztcbmltcG9ydCB7IERFQlVHX0JVSUxEIH0gZnJvbSAnLi4vY29tbW9uL2RlYnVnLWJ1aWxkLmpzJztcbmltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4vdHlwZXMuanMnO1xuXG4vKipcbiAqIERlZmF1bHQgZnVuY3Rpb24gaW1wbGVtZW50aW5nIHBhZ2Vsb2FkIGFuZCBuYXZpZ2F0aW9uIHRyYW5zYWN0aW9uc1xuICovXG5mdW5jdGlvbiBpbnN0cnVtZW50Um91dGluZ1dpdGhEZWZhdWx0cyhcbiAgY3VzdG9tU3RhcnRUcmFuc2FjdGlvbixcbiAgc3RhcnRUcmFuc2FjdGlvbk9uUGFnZUxvYWQgPSB0cnVlLFxuICBzdGFydFRyYW5zYWN0aW9uT25Mb2NhdGlvbkNoYW5nZSA9IHRydWUsXG4pIHtcbiAgaWYgKCFXSU5ET1cgfHwgIVdJTkRPVy5sb2NhdGlvbikge1xuICAgIERFQlVHX0JVSUxEICYmIGxvZ2dlci53YXJuKCdDb3VsZCBub3QgaW5pdGlhbGl6ZSByb3V0aW5nIGluc3RydW1lbnRhdGlvbiBkdWUgdG8gaW52YWxpZCBsb2NhdGlvbicpO1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGxldCBzdGFydGluZ1VybCA9IFdJTkRPVy5sb2NhdGlvbi5ocmVmO1xuXG4gIGxldCBhY3RpdmVUcmFuc2FjdGlvbjtcbiAgaWYgKHN0YXJ0VHJhbnNhY3Rpb25PblBhZ2VMb2FkKSB7XG4gICAgYWN0aXZlVHJhbnNhY3Rpb24gPSBjdXN0b21TdGFydFRyYW5zYWN0aW9uKHtcbiAgICAgIG5hbWU6IFdJTkRPVy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgIC8vIHBhZ2Vsb2FkIHNob3VsZCBhbHdheXMgc3RhcnQgYXQgdGltZU9yaWdpbiAoYW5kIG5lZWRzIHRvIGJlIGluIHMsIG5vdCBtcylcbiAgICAgIHN0YXJ0VGltZXN0YW1wOiBicm93c2VyUGVyZm9ybWFuY2VUaW1lT3JpZ2luID8gYnJvd3NlclBlcmZvcm1hbmNlVGltZU9yaWdpbiAvIDEwMDAgOiB1bmRlZmluZWQsXG4gICAgICBvcDogJ3BhZ2Vsb2FkJyxcbiAgICAgIG9yaWdpbjogJ2F1dG8ucGFnZWxvYWQuYnJvd3NlcicsXG4gICAgICBtZXRhZGF0YTogeyBzb3VyY2U6ICd1cmwnIH0sXG4gICAgfSk7XG4gIH1cblxuICBpZiAoc3RhcnRUcmFuc2FjdGlvbk9uTG9jYXRpb25DaGFuZ2UpIHtcbiAgICBhZGRIaXN0b3J5SW5zdHJ1bWVudGF0aW9uSGFuZGxlcigoeyB0bywgZnJvbSB9KSA9PiB7XG4gICAgICAvKipcbiAgICAgICAqIFRoaXMgZWFybHkgcmV0dXJuIGlzIHRoZXJlIHRvIGFjY291bnQgZm9yIHNvbWUgY2FzZXMgd2hlcmUgYSBuYXZpZ2F0aW9uIHRyYW5zYWN0aW9uIHN0YXJ0cyByaWdodCBhZnRlclxuICAgICAgICogbG9uZy1ydW5uaW5nIHBhZ2Vsb2FkLiBXZSBtYWtlIHN1cmUgdGhhdCBpZiBgZnJvbWAgaXMgdW5kZWZpbmVkIGFuZCBhIHZhbGlkIGBzdGFydGluZ1VSTGAgZXhpc3RzLCB3ZSBkb24ndFxuICAgICAgICogY3JlYXRlIGFuIHVuZWNjZXNzYXJ5IG5hdmlnYXRpb24gdHJhbnNhY3Rpb24uXG4gICAgICAgKlxuICAgICAgICogVGhpcyB3YXMgaGFyZCB0byBkdXBsaWNhdGUsIGJ1dCB0aGlzIGJlaGF2aW9yIHN0b3BwZWQgYXMgc29vbiBhcyB0aGlzIGZpeCB3YXMgYXBwbGllZC4gVGhpcyBpc3N1ZSBtaWdodCBhbHNvXG4gICAgICAgKiBvbmx5IGJlIGNhdXNlZCBpbiBjZXJ0YWluIGRldmVsb3BtZW50IGVudmlyb25tZW50cyB3aGVyZSB0aGUgdXNhZ2Ugb2YgYSBob3QgbW9kdWxlIHJlbG9hZGVyIGlzIGNhdXNpbmdcbiAgICAgICAqIGVycm9ycy5cbiAgICAgICAqL1xuICAgICAgaWYgKGZyb20gPT09IHVuZGVmaW5lZCAmJiBzdGFydGluZ1VybCAmJiBzdGFydGluZ1VybC5pbmRleE9mKHRvKSAhPT0gLTEpIHtcbiAgICAgICAgc3RhcnRpbmdVcmwgPSB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaWYgKGZyb20gIT09IHRvKSB7XG4gICAgICAgIHN0YXJ0aW5nVXJsID0gdW5kZWZpbmVkO1xuICAgICAgICBpZiAoYWN0aXZlVHJhbnNhY3Rpb24pIHtcbiAgICAgICAgICBERUJVR19CVUlMRCAmJiBsb2dnZXIubG9nKGBbVHJhY2luZ10gRmluaXNoaW5nIGN1cnJlbnQgdHJhbnNhY3Rpb24gd2l0aCBvcDogJHthY3RpdmVUcmFuc2FjdGlvbi5vcH1gKTtcbiAgICAgICAgICAvLyBJZiB0aGVyZSdzIGFuIG9wZW4gdHJhbnNhY3Rpb24gb24gdGhlIHNjb3BlLCB3ZSBuZWVkIHRvIGZpbmlzaCBpdCBiZWZvcmUgY3JlYXRpbmcgYW4gbmV3IG9uZS5cbiAgICAgICAgICBhY3RpdmVUcmFuc2FjdGlvbi5lbmQoKTtcbiAgICAgICAgfVxuICAgICAgICBhY3RpdmVUcmFuc2FjdGlvbiA9IGN1c3RvbVN0YXJ0VHJhbnNhY3Rpb24oe1xuICAgICAgICAgIG5hbWU6IFdJTkRPVy5sb2NhdGlvbi5wYXRobmFtZSxcbiAgICAgICAgICBvcDogJ25hdmlnYXRpb24nLFxuICAgICAgICAgIG9yaWdpbjogJ2F1dG8ubmF2aWdhdGlvbi5icm93c2VyJyxcbiAgICAgICAgICBtZXRhZGF0YTogeyBzb3VyY2U6ICd1cmwnIH0sXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCB7IGluc3RydW1lbnRSb3V0aW5nV2l0aERlZmF1bHRzIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yb3V0ZXIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/router.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js":
/*!*********************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/types.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WINDOW: () => (/* binding */ WINDOW)\n/* harmony export */ });\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/worldwide.js\");\n\n\nconst WINDOW = _sentry_utils__WEBPACK_IMPORTED_MODULE_0__.GLOBAL_OBJ\n\n;\n\n\n//# sourceMappingURL=types.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUEyQzs7QUFFM0MsZUFBZSxxREFBVTs7QUFFekI7O0FBRWtCO0FBQ2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3R5cGVzLmpzP2JkNDMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR0xPQkFMX09CSiB9IGZyb20gJ0BzZW50cnkvdXRpbHMnO1xuXG5jb25zdCBXSU5ET1cgPSBHTE9CQUxfT0JKXG5cbjtcblxuZXhwb3J0IHsgV0lORE9XIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD10eXBlcy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onCLS: () => (/* binding */ onCLS)\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/initMetric.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/observe.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/onHidden.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [CLS](https://web.dev/cls/) value for the current page and\n * calls the `callback` function once the value is ready to be reported, along\n * with all `layout-shift` performance entries that were used in the metric\n * value calculation. The reported value is a `double` (corresponding to a\n * [layout shift score](https://web.dev/cls/#layout-shift-score)).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** CLS should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onCLS = (\n  onReport,\n  options = {},\n) => {\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_0__.initMetric)('CLS', 0);\n  let report;\n\n  let sessionValue = 0;\n  let sessionEntries = [];\n\n  // const handleEntries = (entries: Metric['entries']) => {\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      // Only count layout shifts without recent user input.\n      if (!entry.hadRecentInput) {\n        const firstSessionEntry = sessionEntries[0];\n        const lastSessionEntry = sessionEntries[sessionEntries.length - 1];\n\n        // If the entry occurred less than 1 second after the previous entry and\n        // less than 5 seconds after the first entry in the session, include the\n        // entry in the current session. Otherwise, start a new session.\n        if (\n          sessionValue &&\n          sessionEntries.length !== 0 &&\n          entry.startTime - lastSessionEntry.startTime < 1000 &&\n          entry.startTime - firstSessionEntry.startTime < 5000\n        ) {\n          sessionValue += entry.value;\n          sessionEntries.push(entry);\n        } else {\n          sessionValue = entry.value;\n          sessionEntries = [entry];\n        }\n\n        // If the current session value is larger than the current CLS value,\n        // update CLS and the entries contributing to it.\n        if (sessionValue > metric.value) {\n          metric.value = sessionValue;\n          metric.entries = sessionEntries;\n          if (report) {\n            report();\n          }\n        }\n      }\n    });\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_1__.observe)('layout-shift', handleEntries);\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__.bindReporter)(onReport, metric, options.reportAllChanges);\n\n    const stopListening = () => {\n      handleEntries(po.takeRecords() );\n      report(true);\n    };\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_3__.onHidden)(stopListening);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getCLS.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2dldENMUy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUNKO0FBQ047QUFDRTs7QUFFN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQSxpQkFBaUIsOERBQVU7QUFDM0I7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVTtBQUNWO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQSxhQUFhLHdEQUFPO0FBQ3BCO0FBQ0EsYUFBYSxrRUFBWTs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSwwREFBUTs7QUFFWjtBQUNBOztBQUVBO0FBQ0E7O0FBRWlCO0FBQ2pCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvZ2V0Q0xTLmpzPzk3N2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYmluZFJlcG9ydGVyIH0gZnJvbSAnLi9saWIvYmluZFJlcG9ydGVyLmpzJztcbmltcG9ydCB7IGluaXRNZXRyaWMgfSBmcm9tICcuL2xpYi9pbml0TWV0cmljLmpzJztcbmltcG9ydCB7IG9ic2VydmUgfSBmcm9tICcuL2xpYi9vYnNlcnZlLmpzJztcbmltcG9ydCB7IG9uSGlkZGVuIH0gZnJvbSAnLi9saWIvb25IaWRkZW4uanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBbQ0xTXShodHRwczovL3dlYi5kZXYvY2xzLykgdmFsdWUgZm9yIHRoZSBjdXJyZW50IHBhZ2UgYW5kXG4gKiBjYWxscyB0aGUgYGNhbGxiYWNrYCBmdW5jdGlvbiBvbmNlIHRoZSB2YWx1ZSBpcyByZWFkeSB0byBiZSByZXBvcnRlZCwgYWxvbmdcbiAqIHdpdGggYWxsIGBsYXlvdXQtc2hpZnRgIHBlcmZvcm1hbmNlIGVudHJpZXMgdGhhdCB3ZXJlIHVzZWQgaW4gdGhlIG1ldHJpY1xuICogdmFsdWUgY2FsY3VsYXRpb24uIFRoZSByZXBvcnRlZCB2YWx1ZSBpcyBhIGBkb3VibGVgIChjb3JyZXNwb25kaW5nIHRvIGFcbiAqIFtsYXlvdXQgc2hpZnQgc2NvcmVdKGh0dHBzOi8vd2ViLmRldi9jbHMvI2xheW91dC1zaGlmdC1zY29yZSkpLlxuICpcbiAqIElmIHRoZSBgcmVwb3J0QWxsQ2hhbmdlc2AgY29uZmlndXJhdGlvbiBvcHRpb24gaXMgc2V0IHRvIGB0cnVlYCwgdGhlXG4gKiBgY2FsbGJhY2tgIGZ1bmN0aW9uIHdpbGwgYmUgY2FsbGVkIGFzIHNvb24gYXMgdGhlIHZhbHVlIGlzIGluaXRpYWxseVxuICogZGV0ZXJtaW5lZCBhcyB3ZWxsIGFzIGFueSB0aW1lIHRoZSB2YWx1ZSBjaGFuZ2VzIHRocm91Z2hvdXQgdGhlIHBhZ2VcbiAqIGxpZmVzcGFuLlxuICpcbiAqIF8qKkltcG9ydGFudDoqKiBDTFMgc2hvdWxkIGJlIGNvbnRpbnVhbGx5IG1vbml0b3JlZCBmb3IgY2hhbmdlcyB0aHJvdWdob3V0XG4gKiB0aGUgZW50aXJlIGxpZmVzcGFuIG9mIGEgcGFnZeKAlGluY2x1ZGluZyBpZiB0aGUgdXNlciByZXR1cm5zIHRvIHRoZSBwYWdlIGFmdGVyXG4gKiBpdCdzIGJlZW4gaGlkZGVuL2JhY2tncm91bmRlZC4gSG93ZXZlciwgc2luY2UgYnJvd3NlcnMgb2Z0ZW4gW3dpbGwgbm90IGZpcmVcbiAqIGFkZGl0aW9uYWwgY2FsbGJhY2tzIG9uY2UgdGhlIHVzZXIgaGFzIGJhY2tncm91bmRlZCBhXG4gKiBwYWdlXShodHRwczovL2RldmVsb3Blci5jaHJvbWUuY29tL2Jsb2cvcGFnZS1saWZlY3ljbGUtYXBpLyNhZHZpY2UtaGlkZGVuKSxcbiAqIGBjYWxsYmFja2AgaXMgYWx3YXlzIGNhbGxlZCB3aGVuIHRoZSBwYWdlJ3MgdmlzaWJpbGl0eSBzdGF0ZSBjaGFuZ2VzIHRvXG4gKiBoaWRkZW4uIEFzIGEgcmVzdWx0LCB0aGUgYGNhbGxiYWNrYCBmdW5jdGlvbiBtaWdodCBiZSBjYWxsZWQgbXVsdGlwbGUgdGltZXNcbiAqIGR1cmluZyB0aGUgc2FtZSBwYWdlIGxvYWQuX1xuICovXG5jb25zdCBvbkNMUyA9IChcbiAgb25SZXBvcnQsXG4gIG9wdGlvbnMgPSB7fSxcbikgPT4ge1xuICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdDTFMnLCAwKTtcbiAgbGV0IHJlcG9ydDtcblxuICBsZXQgc2Vzc2lvblZhbHVlID0gMDtcbiAgbGV0IHNlc3Npb25FbnRyaWVzID0gW107XG5cbiAgLy8gY29uc3QgaGFuZGxlRW50cmllcyA9IChlbnRyaWVzOiBNZXRyaWNbJ2VudHJpZXMnXSkgPT4ge1xuICBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXMpID0+IHtcbiAgICBlbnRyaWVzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgLy8gT25seSBjb3VudCBsYXlvdXQgc2hpZnRzIHdpdGhvdXQgcmVjZW50IHVzZXIgaW5wdXQuXG4gICAgICBpZiAoIWVudHJ5LmhhZFJlY2VudElucHV0KSB7XG4gICAgICAgIGNvbnN0IGZpcnN0U2Vzc2lvbkVudHJ5ID0gc2Vzc2lvbkVudHJpZXNbMF07XG4gICAgICAgIGNvbnN0IGxhc3RTZXNzaW9uRW50cnkgPSBzZXNzaW9uRW50cmllc1tzZXNzaW9uRW50cmllcy5sZW5ndGggLSAxXTtcblxuICAgICAgICAvLyBJZiB0aGUgZW50cnkgb2NjdXJyZWQgbGVzcyB0aGFuIDEgc2Vjb25kIGFmdGVyIHRoZSBwcmV2aW91cyBlbnRyeSBhbmRcbiAgICAgICAgLy8gbGVzcyB0aGFuIDUgc2Vjb25kcyBhZnRlciB0aGUgZmlyc3QgZW50cnkgaW4gdGhlIHNlc3Npb24sIGluY2x1ZGUgdGhlXG4gICAgICAgIC8vIGVudHJ5IGluIHRoZSBjdXJyZW50IHNlc3Npb24uIE90aGVyd2lzZSwgc3RhcnQgYSBuZXcgc2Vzc2lvbi5cbiAgICAgICAgaWYgKFxuICAgICAgICAgIHNlc3Npb25WYWx1ZSAmJlxuICAgICAgICAgIHNlc3Npb25FbnRyaWVzLmxlbmd0aCAhPT0gMCAmJlxuICAgICAgICAgIGVudHJ5LnN0YXJ0VGltZSAtIGxhc3RTZXNzaW9uRW50cnkuc3RhcnRUaW1lIDwgMTAwMCAmJlxuICAgICAgICAgIGVudHJ5LnN0YXJ0VGltZSAtIGZpcnN0U2Vzc2lvbkVudHJ5LnN0YXJ0VGltZSA8IDUwMDBcbiAgICAgICAgKSB7XG4gICAgICAgICAgc2Vzc2lvblZhbHVlICs9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgIHNlc3Npb25FbnRyaWVzLnB1c2goZW50cnkpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHNlc3Npb25WYWx1ZSA9IGVudHJ5LnZhbHVlO1xuICAgICAgICAgIHNlc3Npb25FbnRyaWVzID0gW2VudHJ5XTtcbiAgICAgICAgfVxuXG4gICAgICAgIC8vIElmIHRoZSBjdXJyZW50IHNlc3Npb24gdmFsdWUgaXMgbGFyZ2VyIHRoYW4gdGhlIGN1cnJlbnQgQ0xTIHZhbHVlLFxuICAgICAgICAvLyB1cGRhdGUgQ0xTIGFuZCB0aGUgZW50cmllcyBjb250cmlidXRpbmcgdG8gaXQuXG4gICAgICAgIGlmIChzZXNzaW9uVmFsdWUgPiBtZXRyaWMudmFsdWUpIHtcbiAgICAgICAgICBtZXRyaWMudmFsdWUgPSBzZXNzaW9uVmFsdWU7XG4gICAgICAgICAgbWV0cmljLmVudHJpZXMgPSBzZXNzaW9uRW50cmllcztcbiAgICAgICAgICBpZiAocmVwb3J0KSB7XG4gICAgICAgICAgICByZXBvcnQoKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBwbyA9IG9ic2VydmUoJ2xheW91dC1zaGlmdCcsIGhhbmRsZUVudHJpZXMpO1xuICBpZiAocG8pIHtcbiAgICByZXBvcnQgPSBiaW5kUmVwb3J0ZXIob25SZXBvcnQsIG1ldHJpYywgb3B0aW9ucy5yZXBvcnRBbGxDaGFuZ2VzKTtcblxuICAgIGNvbnN0IHN0b3BMaXN0ZW5pbmcgPSAoKSA9PiB7XG4gICAgICBoYW5kbGVFbnRyaWVzKHBvLnRha2VSZWNvcmRzKCkgKTtcbiAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICB9O1xuXG4gICAgb25IaWRkZW4oc3RvcExpc3RlbmluZyk7XG5cbiAgICByZXR1cm4gc3RvcExpc3RlbmluZztcbiAgfVxuXG4gIHJldHVybjtcbn07XG5cbmV4cG9ydCB7IG9uQ0xTIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRDTFMuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getCLS.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onFID: () => (/* binding */ onFID)\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/observe.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/onHidden.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Calculates the [FID](https://web.dev/fid/) value for the current page and\n * calls the `callback` function once the value is ready, along with the\n * relevant `first-input` performance entry used to determine the value. The\n * reported value is a `DOMHighResTimeStamp`.\n *\n * _**Important:** since FID is only reported after the user interacts with the\n * page, it's possible that it will not be reported for some page loads._\n */\nconst onFID = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('FID');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntry = (entry) => {\n    // Only report if the page wasn't hidden prior to the first input.\n    if (entry.startTime < visibilityWatcher.firstHiddenTime) {\n      metric.value = entry.processingStart - entry.startTime;\n      metric.entries.push(entry);\n      report(true);\n    }\n  };\n\n  const handleEntries = (entries) => {\n    (entries ).forEach(handleEntry);\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)('first-input', handleEntries);\n  report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__.bindReporter)(onReport, metric);\n\n  if (po) {\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__.onHidden)(() => {\n      handleEntries(po.takeRecords() );\n      po.disconnect();\n    }, true);\n  }\n};\n\n\n//# sourceMappingURL=getFID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2dldEZJRC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUQ7QUFDZ0I7QUFDcEI7QUFDTjtBQUNFOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0ZBQW9CO0FBQ2hELGlCQUFpQiw4REFBVTtBQUMzQjtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLGFBQWEsd0RBQU87QUFDcEIsV0FBVyxrRUFBWTs7QUFFdkI7QUFDQSxJQUFJLDBEQUFRO0FBQ1o7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVpQjtBQUNqQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2dldEZJRC5qcz85ODE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGJpbmRSZXBvcnRlciB9IGZyb20gJy4vbGliL2JpbmRSZXBvcnRlci5qcyc7XG5pbXBvcnQgeyBnZXRWaXNpYmlsaXR5V2F0Y2hlciB9IGZyb20gJy4vbGliL2dldFZpc2liaWxpdHlXYXRjaGVyLmpzJztcbmltcG9ydCB7IGluaXRNZXRyaWMgfSBmcm9tICcuL2xpYi9pbml0TWV0cmljLmpzJztcbmltcG9ydCB7IG9ic2VydmUgfSBmcm9tICcuL2xpYi9vYnNlcnZlLmpzJztcbmltcG9ydCB7IG9uSGlkZGVuIH0gZnJvbSAnLi9saWIvb25IaWRkZW4uanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBbRklEXShodHRwczovL3dlYi5kZXYvZmlkLykgdmFsdWUgZm9yIHRoZSBjdXJyZW50IHBhZ2UgYW5kXG4gKiBjYWxscyB0aGUgYGNhbGxiYWNrYCBmdW5jdGlvbiBvbmNlIHRoZSB2YWx1ZSBpcyByZWFkeSwgYWxvbmcgd2l0aCB0aGVcbiAqIHJlbGV2YW50IGBmaXJzdC1pbnB1dGAgcGVyZm9ybWFuY2UgZW50cnkgdXNlZCB0byBkZXRlcm1pbmUgdGhlIHZhbHVlLiBUaGVcbiAqIHJlcG9ydGVkIHZhbHVlIGlzIGEgYERPTUhpZ2hSZXNUaW1lU3RhbXBgLlxuICpcbiAqIF8qKkltcG9ydGFudDoqKiBzaW5jZSBGSUQgaXMgb25seSByZXBvcnRlZCBhZnRlciB0aGUgdXNlciBpbnRlcmFjdHMgd2l0aCB0aGVcbiAqIHBhZ2UsIGl0J3MgcG9zc2libGUgdGhhdCBpdCB3aWxsIG5vdCBiZSByZXBvcnRlZCBmb3Igc29tZSBwYWdlIGxvYWRzLl9cbiAqL1xuY29uc3Qgb25GSUQgPSAob25SZXBvcnQpID0+IHtcbiAgY29uc3QgdmlzaWJpbGl0eVdhdGNoZXIgPSBnZXRWaXNpYmlsaXR5V2F0Y2hlcigpO1xuICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdGSUQnKTtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1jb25zdFxuICBsZXQgcmVwb3J0O1xuXG4gIGNvbnN0IGhhbmRsZUVudHJ5ID0gKGVudHJ5KSA9PiB7XG4gICAgLy8gT25seSByZXBvcnQgaWYgdGhlIHBhZ2Ugd2Fzbid0IGhpZGRlbiBwcmlvciB0byB0aGUgZmlyc3QgaW5wdXQuXG4gICAgaWYgKGVudHJ5LnN0YXJ0VGltZSA8IHZpc2liaWxpdHlXYXRjaGVyLmZpcnN0SGlkZGVuVGltZSkge1xuICAgICAgbWV0cmljLnZhbHVlID0gZW50cnkucHJvY2Vzc2luZ1N0YXJ0IC0gZW50cnkuc3RhcnRUaW1lO1xuICAgICAgbWV0cmljLmVudHJpZXMucHVzaChlbnRyeSk7XG4gICAgICByZXBvcnQodHJ1ZSk7XG4gICAgfVxuICB9O1xuXG4gIGNvbnN0IGhhbmRsZUVudHJpZXMgPSAoZW50cmllcykgPT4ge1xuICAgIChlbnRyaWVzICkuZm9yRWFjaChoYW5kbGVFbnRyeSk7XG4gIH07XG5cbiAgY29uc3QgcG8gPSBvYnNlcnZlKCdmaXJzdC1pbnB1dCcsIGhhbmRsZUVudHJpZXMpO1xuICByZXBvcnQgPSBiaW5kUmVwb3J0ZXIob25SZXBvcnQsIG1ldHJpYyk7XG5cbiAgaWYgKHBvKSB7XG4gICAgb25IaWRkZW4oKCkgPT4ge1xuICAgICAgaGFuZGxlRW50cmllcyhwby50YWtlUmVjb3JkcygpICk7XG4gICAgICBwby5kaXNjb25uZWN0KCk7XG4gICAgfSwgdHJ1ZSk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IG9uRklEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRGSUQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getFID.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getINP.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getINP.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onINP: () => (/* binding */ onINP)\n/* harmony export */ });\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/observe.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/onHidden.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n/* harmony import */ var _lib_polyfills_interactionCountPolyfill_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/polyfills/interactionCountPolyfill.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/polyfills/interactionCountPolyfill.js\");\n\n\n\n\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Returns the interaction count since the last bfcache restore (or for the\n * full page lifecycle if there were no bfcache restores).\n */\nconst getInteractionCountForNavigation = () => {\n  return (0,_lib_polyfills_interactionCountPolyfill_js__WEBPACK_IMPORTED_MODULE_0__.getInteractionCount)();\n};\n\n// To prevent unnecessary memory usage on pages with lots of interactions,\n// store at most 10 of the longest interactions to consider as INP candidates.\nconst MAX_INTERACTIONS_TO_CONSIDER = 10;\n\n// A list of longest interactions on the page (by latency) sorted so the\n// longest one is first. The list is as most MAX_INTERACTIONS_TO_CONSIDER long.\nconst longestInteractionList = [];\n\n// A mapping of longest interactions by their interaction ID.\n// This is used for faster lookup.\nconst longestInteractionMap = {};\n\n/**\n * Takes a performance entry and adds it to the list of worst interactions\n * if its duration is long enough to make it among the worst. If the\n * entry is part of an existing interaction, it is merged and the latency\n * and entries list is updated as needed.\n */\nconst processEntry = (entry) => {\n  // The least-long of the 10 longest interactions.\n  const minLongestInteraction = longestInteractionList[longestInteractionList.length - 1];\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const existingInteraction = longestInteractionMap[entry.interactionId];\n\n  // Only process the entry if it's possibly one of the ten longest,\n  // or if it's part of an existing interaction.\n  if (\n    existingInteraction ||\n    longestInteractionList.length < MAX_INTERACTIONS_TO_CONSIDER ||\n    entry.duration > minLongestInteraction.latency\n  ) {\n    // If the interaction already exists, update it. Otherwise create one.\n    if (existingInteraction) {\n      existingInteraction.entries.push(entry);\n      existingInteraction.latency = Math.max(existingInteraction.latency, entry.duration);\n    } else {\n      const interaction = {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        id: entry.interactionId,\n        latency: entry.duration,\n        entries: [entry],\n      };\n      longestInteractionMap[interaction.id] = interaction;\n      longestInteractionList.push(interaction);\n    }\n\n    // Sort the entries by latency (descending) and keep only the top ten.\n    longestInteractionList.sort((a, b) => b.latency - a.latency);\n    longestInteractionList.splice(MAX_INTERACTIONS_TO_CONSIDER).forEach(i => {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete longestInteractionMap[i.id];\n    });\n  }\n};\n\n/**\n * Returns the estimated p98 longest interaction based on the stored\n * interaction candidates and the interaction count for the current page.\n */\nconst estimateP98LongestInteraction = () => {\n  const candidateInteractionIndex = Math.min(\n    longestInteractionList.length - 1,\n    Math.floor(getInteractionCountForNavigation() / 50),\n  );\n\n  return longestInteractionList[candidateInteractionIndex];\n};\n\n/**\n * Calculates the [INP](https://web.dev/responsiveness/) value for the current\n * page and calls the `callback` function once the value is ready, along with\n * the `event` performance entries reported for that interaction. The reported\n * value is a `DOMHighResTimeStamp`.\n *\n * A custom `durationThreshold` configuration option can optionally be passed to\n * control what `event-timing` entries are considered for INP reporting. The\n * default threshold is `40`, which means INP scores of less than 40 are\n * reported as 0. Note that this will not affect your 75th percentile INP value\n * unless that value is also less than 40 (well below the recommended\n * [good](https://web.dev/inp/#what-is-a-good-inp-score) threshold).\n *\n * If the `reportAllChanges` configuration option is set to `true`, the\n * `callback` function will be called as soon as the value is initially\n * determined as well as any time the value changes throughout the page\n * lifespan.\n *\n * _**Important:** INP should be continually monitored for changes throughout\n * the entire lifespan of a page—including if the user returns to the page after\n * it's been hidden/backgrounded. However, since browsers often [will not fire\n * additional callbacks once the user has backgrounded a\n * page](https://developer.chrome.com/blog/page-lifecycle-api/#advice-hidden),\n * `callback` is always called when the page's visibility state changes to\n * hidden. As a result, the `callback` function might be called multiple times\n * during the same page load._\n */\nconst onINP = (onReport, opts) => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/inp/#what's-a-%22good%22-inp-value\n  // const thresholds = [200, 500];\n\n  // TODO(philipwalton): remove once the polyfill is no longer needed.\n  (0,_lib_polyfills_interactionCountPolyfill_js__WEBPACK_IMPORTED_MODULE_0__.initInteractionCountPolyfill)();\n\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('INP');\n  // eslint-disable-next-line prefer-const\n  let report;\n\n  const handleEntries = (entries) => {\n    entries.forEach(entry => {\n      if (entry.interactionId) {\n        processEntry(entry);\n      }\n\n      // Entries of type `first-input` don't currently have an `interactionId`,\n      // so to consider them in INP we have to first check that an existing\n      // entry doesn't match the `duration` and `startTime`.\n      // Note that this logic assumes that `event` entries are dispatched\n      // before `first-input` entries. This is true in Chrome but it is not\n      // true in Firefox; however, Firefox doesn't support interactionId, so\n      // it's not an issue at the moment.\n      // TODO(philipwalton): remove once crbug.com/1325826 is fixed.\n      if (entry.entryType === 'first-input') {\n        const noMatchingEntry = !longestInteractionList.some(interaction => {\n          return interaction.entries.some(prevEntry => {\n            return entry.duration === prevEntry.duration && entry.startTime === prevEntry.startTime;\n          });\n        });\n        if (noMatchingEntry) {\n          processEntry(entry);\n        }\n      }\n    });\n\n    const inp = estimateP98LongestInteraction();\n\n    if (inp && inp.latency !== metric.value) {\n      metric.value = inp.latency;\n      metric.entries = inp.entries;\n      report();\n    }\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_2__.observe)('event', handleEntries, {\n    // Event Timing entries have their durations rounded to the nearest 8ms,\n    // so a duration of 40ms would be any event that spans 2.5 or more frames\n    // at 60Hz. This threshold is chosen to strike a balance between usefulness\n    // and performance. Running this callback for any interaction that spans\n    // just one or two frames is likely not worth the insight that could be\n    // gained.\n    durationThreshold: opts.durationThreshold || 40,\n  } );\n\n  report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_3__.bindReporter)(onReport, metric, opts.reportAllChanges);\n\n  if (po) {\n    // Also observe entries of type `first-input`. This is useful in cases\n    // where the first interaction is less than the `durationThreshold`.\n    po.observe({ type: 'first-input', buffered: true });\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_4__.onHidden)(() => {\n      handleEntries(po.takeRecords() );\n\n      // If the interaction count shows that there were interactions but\n      // none were captured by the PerformanceObserver, report a latency of 0.\n      if (metric.value < 0 && getInteractionCountForNavigation() > 0) {\n        metric.value = 0;\n        metric.entries = [];\n      }\n\n      report(true);\n    });\n  }\n};\n\n\n//# sourceMappingURL=getINP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getINP.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onLCP: () => (/* binding */ onLCP)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/getActivationStart.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/getVisibilityWatcher.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n/* harmony import */ var _lib_observe_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/observe.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n/* harmony import */ var _lib_onHidden_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./lib/onHidden.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst reportedMetricIDs = {};\n\n/**\n * Calculates the [LCP](https://web.dev/lcp/) value for the current page and\n * calls the `callback` function once the value is ready (along with the\n * relevant `largest-contentful-paint` performance entry used to determine the\n * value). The reported value is a `DOMHighResTimeStamp`.\n */\nconst onLCP = (onReport) => {\n  const visibilityWatcher = (0,_lib_getVisibilityWatcher_js__WEBPACK_IMPORTED_MODULE_0__.getVisibilityWatcher)();\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('LCP');\n  let report;\n\n  const handleEntries = (entries) => {\n    const lastEntry = entries[entries.length - 1] ;\n    if (lastEntry) {\n      // The startTime attribute returns the value of the renderTime if it is\n      // not 0, and the value of the loadTime otherwise. The activationStart\n      // reference is used because LCP should be relative to page activation\n      // rather than navigation start if the page was prerendered.\n      const value = Math.max(lastEntry.startTime - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)(), 0);\n\n      // Only report if the page wasn't hidden prior to LCP.\n      if (value < visibilityWatcher.firstHiddenTime) {\n        metric.value = value;\n        metric.entries = [lastEntry];\n        report();\n      }\n    }\n  };\n\n  const po = (0,_lib_observe_js__WEBPACK_IMPORTED_MODULE_3__.observe)('largest-contentful-paint', handleEntries);\n\n  if (po) {\n    report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_4__.bindReporter)(onReport, metric);\n\n    const stopListening = () => {\n      if (!reportedMetricIDs[metric.id]) {\n        handleEntries(po.takeRecords() );\n        po.disconnect();\n        reportedMetricIDs[metric.id] = true;\n        report(true);\n      }\n    };\n\n    // Stop listening after input. Note: while scrolling is an input that\n    // stop LCP observation, it's unreliable since it can be programmatically\n    // generated. See: https://github.com/GoogleChrome/web-vitals/issues/75\n    ['keydown', 'click'].forEach(type => {\n      if (_types_js__WEBPACK_IMPORTED_MODULE_5__.WINDOW.document) {\n        addEventListener(type, stopListening, { once: true, capture: true });\n      }\n    });\n\n    (0,_lib_onHidden_js__WEBPACK_IMPORTED_MODULE_6__.onHidden)(stopListening, true);\n\n    return stopListening;\n  }\n\n  return;\n};\n\n\n//# sourceMappingURL=getLCP.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2dldExDUC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFxQztBQUNnQjtBQUNZO0FBQ0k7QUFDcEI7QUFDTjtBQUNFOztBQUU3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsa0ZBQW9CO0FBQ2hELGlCQUFpQiw4REFBVTtBQUMzQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRCw4RUFBa0I7O0FBRXJFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsYUFBYSx3REFBTzs7QUFFcEI7QUFDQSxhQUFhLGtFQUFZOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsVUFBVSw2Q0FBTTtBQUNoQixnREFBZ0QsMkJBQTJCO0FBQzNFO0FBQ0EsS0FBSzs7QUFFTCxJQUFJLDBEQUFROztBQUVaO0FBQ0E7O0FBRUE7QUFDQTs7QUFFaUI7QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9nZXRMQ1AuanM/NzliNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi90eXBlcy5qcyc7XG5pbXBvcnQgeyBiaW5kUmVwb3J0ZXIgfSBmcm9tICcuL2xpYi9iaW5kUmVwb3J0ZXIuanMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZhdGlvblN0YXJ0IH0gZnJvbSAnLi9saWIvZ2V0QWN0aXZhdGlvblN0YXJ0LmpzJztcbmltcG9ydCB7IGdldFZpc2liaWxpdHlXYXRjaGVyIH0gZnJvbSAnLi9saWIvZ2V0VmlzaWJpbGl0eVdhdGNoZXIuanMnO1xuaW1wb3J0IHsgaW5pdE1ldHJpYyB9IGZyb20gJy4vbGliL2luaXRNZXRyaWMuanMnO1xuaW1wb3J0IHsgb2JzZXJ2ZSB9IGZyb20gJy4vbGliL29ic2VydmUuanMnO1xuaW1wb3J0IHsgb25IaWRkZW4gfSBmcm9tICcuL2xpYi9vbkhpZGRlbi5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5jb25zdCByZXBvcnRlZE1ldHJpY0lEcyA9IHt9O1xuXG4vKipcbiAqIENhbGN1bGF0ZXMgdGhlIFtMQ1BdKGh0dHBzOi8vd2ViLmRldi9sY3AvKSB2YWx1ZSBmb3IgdGhlIGN1cnJlbnQgcGFnZSBhbmRcbiAqIGNhbGxzIHRoZSBgY2FsbGJhY2tgIGZ1bmN0aW9uIG9uY2UgdGhlIHZhbHVlIGlzIHJlYWR5IChhbG9uZyB3aXRoIHRoZVxuICogcmVsZXZhbnQgYGxhcmdlc3QtY29udGVudGZ1bC1wYWludGAgcGVyZm9ybWFuY2UgZW50cnkgdXNlZCB0byBkZXRlcm1pbmUgdGhlXG4gKiB2YWx1ZSkuIFRoZSByZXBvcnRlZCB2YWx1ZSBpcyBhIGBET01IaWdoUmVzVGltZVN0YW1wYC5cbiAqL1xuY29uc3Qgb25MQ1AgPSAob25SZXBvcnQpID0+IHtcbiAgY29uc3QgdmlzaWJpbGl0eVdhdGNoZXIgPSBnZXRWaXNpYmlsaXR5V2F0Y2hlcigpO1xuICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdMQ1AnKTtcbiAgbGV0IHJlcG9ydDtcblxuICBjb25zdCBoYW5kbGVFbnRyaWVzID0gKGVudHJpZXMpID0+IHtcbiAgICBjb25zdCBsYXN0RW50cnkgPSBlbnRyaWVzW2VudHJpZXMubGVuZ3RoIC0gMV0gO1xuICAgIGlmIChsYXN0RW50cnkpIHtcbiAgICAgIC8vIFRoZSBzdGFydFRpbWUgYXR0cmlidXRlIHJldHVybnMgdGhlIHZhbHVlIG9mIHRoZSByZW5kZXJUaW1lIGlmIGl0IGlzXG4gICAgICAvLyBub3QgMCwgYW5kIHRoZSB2YWx1ZSBvZiB0aGUgbG9hZFRpbWUgb3RoZXJ3aXNlLiBUaGUgYWN0aXZhdGlvblN0YXJ0XG4gICAgICAvLyByZWZlcmVuY2UgaXMgdXNlZCBiZWNhdXNlIExDUCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gcGFnZSBhY3RpdmF0aW9uXG4gICAgICAvLyByYXRoZXIgdGhhbiBuYXZpZ2F0aW9uIHN0YXJ0IGlmIHRoZSBwYWdlIHdhcyBwcmVyZW5kZXJlZC5cbiAgICAgIGNvbnN0IHZhbHVlID0gTWF0aC5tYXgobGFzdEVudHJ5LnN0YXJ0VGltZSAtIGdldEFjdGl2YXRpb25TdGFydCgpLCAwKTtcblxuICAgICAgLy8gT25seSByZXBvcnQgaWYgdGhlIHBhZ2Ugd2Fzbid0IGhpZGRlbiBwcmlvciB0byBMQ1AuXG4gICAgICBpZiAodmFsdWUgPCB2aXNpYmlsaXR5V2F0Y2hlci5maXJzdEhpZGRlblRpbWUpIHtcbiAgICAgICAgbWV0cmljLnZhbHVlID0gdmFsdWU7XG4gICAgICAgIG1ldHJpYy5lbnRyaWVzID0gW2xhc3RFbnRyeV07XG4gICAgICAgIHJlcG9ydCgpO1xuICAgICAgfVxuICAgIH1cbiAgfTtcblxuICBjb25zdCBwbyA9IG9ic2VydmUoJ2xhcmdlc3QtY29udGVudGZ1bC1wYWludCcsIGhhbmRsZUVudHJpZXMpO1xuXG4gIGlmIChwbykge1xuICAgIHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljKTtcblxuICAgIGNvbnN0IHN0b3BMaXN0ZW5pbmcgPSAoKSA9PiB7XG4gICAgICBpZiAoIXJlcG9ydGVkTWV0cmljSURzW21ldHJpYy5pZF0pIHtcbiAgICAgICAgaGFuZGxlRW50cmllcyhwby50YWtlUmVjb3JkcygpICk7XG4gICAgICAgIHBvLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgcmVwb3J0ZWRNZXRyaWNJRHNbbWV0cmljLmlkXSA9IHRydWU7XG4gICAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgLy8gU3RvcCBsaXN0ZW5pbmcgYWZ0ZXIgaW5wdXQuIE5vdGU6IHdoaWxlIHNjcm9sbGluZyBpcyBhbiBpbnB1dCB0aGF0XG4gICAgLy8gc3RvcCBMQ1Agb2JzZXJ2YXRpb24sIGl0J3MgdW5yZWxpYWJsZSBzaW5jZSBpdCBjYW4gYmUgcHJvZ3JhbW1hdGljYWxseVxuICAgIC8vIGdlbmVyYXRlZC4gU2VlOiBodHRwczovL2dpdGh1Yi5jb20vR29vZ2xlQ2hyb21lL3dlYi12aXRhbHMvaXNzdWVzLzc1XG4gICAgWydrZXlkb3duJywgJ2NsaWNrJ10uZm9yRWFjaCh0eXBlID0+IHtcbiAgICAgIGlmIChXSU5ET1cuZG9jdW1lbnQpIHtcbiAgICAgICAgYWRkRXZlbnRMaXN0ZW5lcih0eXBlLCBzdG9wTGlzdGVuaW5nLCB7IG9uY2U6IHRydWUsIGNhcHR1cmU6IHRydWUgfSk7XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICBvbkhpZGRlbihzdG9wTGlzdGVuaW5nLCB0cnVlKTtcblxuICAgIHJldHVybiBzdG9wTGlzdGVuaW5nO1xuICB9XG5cbiAgcmV0dXJuO1xufTtcblxuZXhwb3J0IHsgb25MQ1AgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldExDUC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/getLCP.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js":
/*!*******************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   bindReporter: () => (/* binding */ bindReporter)\n/* harmony export */ });\nconst bindReporter = (\n  callback,\n  metric,\n  reportAllChanges,\n) => {\n  let prevValue;\n  let delta;\n  return (forceReport) => {\n    if (metric.value >= 0) {\n      if (forceReport || reportAllChanges) {\n        delta = metric.value - (prevValue || 0);\n\n        // Report the metric if there's a non-zero delta or if no previous\n        // value exists (which can happen in the case of the document becoming\n        // hidden when the metric value is 0).\n        // See: https://github.com/GoogleChrome/web-vitals/issues/14\n        if (delta || prevValue === undefined) {\n          prevValue = metric.value;\n          metric.delta = delta;\n          callback(metric);\n        }\n      }\n    }\n  };\n};\n\n\n//# sourceMappingURL=bindReporter.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9iaW5kUmVwb3J0ZXIuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXdCO0FBQ3hCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2JpbmRSZXBvcnRlci5qcz8yMWFhIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJpbmRSZXBvcnRlciA9IChcbiAgY2FsbGJhY2ssXG4gIG1ldHJpYyxcbiAgcmVwb3J0QWxsQ2hhbmdlcyxcbikgPT4ge1xuICBsZXQgcHJldlZhbHVlO1xuICBsZXQgZGVsdGE7XG4gIHJldHVybiAoZm9yY2VSZXBvcnQpID0+IHtcbiAgICBpZiAobWV0cmljLnZhbHVlID49IDApIHtcbiAgICAgIGlmIChmb3JjZVJlcG9ydCB8fCByZXBvcnRBbGxDaGFuZ2VzKSB7XG4gICAgICAgIGRlbHRhID0gbWV0cmljLnZhbHVlIC0gKHByZXZWYWx1ZSB8fCAwKTtcblxuICAgICAgICAvLyBSZXBvcnQgdGhlIG1ldHJpYyBpZiB0aGVyZSdzIGEgbm9uLXplcm8gZGVsdGEgb3IgaWYgbm8gcHJldmlvdXNcbiAgICAgICAgLy8gdmFsdWUgZXhpc3RzICh3aGljaCBjYW4gaGFwcGVuIGluIHRoZSBjYXNlIG9mIHRoZSBkb2N1bWVudCBiZWNvbWluZ1xuICAgICAgICAvLyBoaWRkZW4gd2hlbiB0aGUgbWV0cmljIHZhbHVlIGlzIDApLlxuICAgICAgICAvLyBTZWU6IGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvd2ViLXZpdGFscy9pc3N1ZXMvMTRcbiAgICAgICAgaWYgKGRlbHRhIHx8IHByZXZWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgcHJldlZhbHVlID0gbWV0cmljLnZhbHVlO1xuICAgICAgICAgIG1ldHJpYy5kZWx0YSA9IGRlbHRhO1xuICAgICAgICAgIGNhbGxiYWNrKG1ldHJpYyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgeyBiaW5kUmVwb3J0ZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWJpbmRSZXBvcnRlci5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js":
/*!***********************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateUniqueID: () => (/* binding */ generateUniqueID)\n/* harmony export */ });\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Performantly generate a unique, 30-char string by combining a version\n * number, the current timestamp with a 13-digit number integer.\n * @return {string}\n */\nconst generateUniqueID = () => {\n  return `v3-${Date.now()}-${Math.floor(Math.random() * (9e12 - 1)) + 1e12}`;\n};\n\n\n//# sourceMappingURL=generateUniqueID.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9nZW5lcmF0ZVVuaXF1ZUlELmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQSxlQUFlLFdBQVcsR0FBRyw4Q0FBOEM7QUFDM0U7O0FBRTRCO0FBQzVCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dlbmVyYXRlVW5pcXVlSUQuanM/MjI2OCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogQ29weXJpZ2h0IDIwMjAgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuLyoqXG4gKiBQZXJmb3JtYW50bHkgZ2VuZXJhdGUgYSB1bmlxdWUsIDMwLWNoYXIgc3RyaW5nIGJ5IGNvbWJpbmluZyBhIHZlcnNpb25cbiAqIG51bWJlciwgdGhlIGN1cnJlbnQgdGltZXN0YW1wIHdpdGggYSAxMy1kaWdpdCBudW1iZXIgaW50ZWdlci5cbiAqIEByZXR1cm4ge3N0cmluZ31cbiAqL1xuY29uc3QgZ2VuZXJhdGVVbmlxdWVJRCA9ICgpID0+IHtcbiAgcmV0dXJuIGB2My0ke0RhdGUubm93KCl9LSR7TWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogKDllMTIgLSAxKSkgKyAxZTEyfWA7XG59O1xuXG5leHBvcnQgeyBnZW5lcmF0ZVVuaXF1ZUlEIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZW5lcmF0ZVVuaXF1ZUlELmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getActivationStart: () => (/* binding */ getActivationStart)\n/* harmony export */ });\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getActivationStart = () => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  return (navEntry && navEntry.activationStart) || 0;\n};\n\n\n//# sourceMappingURL=getActivationStart.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9nZXRBY3RpdmF0aW9uU3RhcnQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkQ7O0FBRTdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLG1CQUFtQiwwRUFBa0I7QUFDckM7QUFDQTs7QUFFOEI7QUFDOUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9saWIvZ2V0QWN0aXZhdGlvblN0YXJ0LmpzPzBmMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0TmF2aWdhdGlvbkVudHJ5IH0gZnJvbSAnLi9nZXROYXZpZ2F0aW9uRW50cnkuanMnO1xuXG4vKlxuICogQ29weXJpZ2h0IDIwMjIgR29vZ2xlIExMQ1xuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBBcGFjaGUgTGljZW5zZSwgVmVyc2lvbiAyLjAgKHRoZSBcIkxpY2Vuc2VcIik7XG4gKiB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuXG4gKiBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXRcbiAqXG4gKiAgICAgaHR0cHM6Ly93d3cuYXBhY2hlLm9yZy9saWNlbnNlcy9MSUNFTlNFLTIuMFxuICpcbiAqIFVubGVzcyByZXF1aXJlZCBieSBhcHBsaWNhYmxlIGxhdyBvciBhZ3JlZWQgdG8gaW4gd3JpdGluZywgc29mdHdhcmVcbiAqIGRpc3RyaWJ1dGVkIHVuZGVyIHRoZSBMaWNlbnNlIGlzIGRpc3RyaWJ1dGVkIG9uIGFuIFwiQVMgSVNcIiBCQVNJUyxcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxuICogU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZFxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXG4gKi9cblxuY29uc3QgZ2V0QWN0aXZhdGlvblN0YXJ0ID0gKCkgPT4ge1xuICBjb25zdCBuYXZFbnRyeSA9IGdldE5hdmlnYXRpb25FbnRyeSgpO1xuICByZXR1cm4gKG5hdkVudHJ5ICYmIG5hdkVudHJ5LmFjdGl2YXRpb25TdGFydCkgfHwgMDtcbn07XG5cbmV4cG9ydCB7IGdldEFjdGl2YXRpb25TdGFydCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0QWN0aXZhdGlvblN0YXJ0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js":
/*!*************************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getNavigationEntry: () => (/* binding */ getNavigationEntry)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2022 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst getNavigationEntryFromPerformanceTiming = () => {\n  // eslint-disable-next-line deprecation/deprecation\n  const timing = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.timing;\n  // eslint-disable-next-line deprecation/deprecation\n  const type = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance.navigation.type;\n\n  const navigationEntry = {\n    entryType: 'navigation',\n    startTime: 0,\n    type: type == 2 ? 'back_forward' : type === 1 ? 'reload' : 'navigate',\n  };\n\n  for (const key in timing) {\n    if (key !== 'navigationStart' && key !== 'toJSON') {\n      // eslint-disable-next-line deprecation/deprecation\n      navigationEntry[key] = Math.max((timing[key ] ) - timing.navigationStart, 0);\n    }\n  }\n  return navigationEntry ;\n};\n\nconst getNavigationEntry = () => {\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.__WEB_VITALS_POLYFILL__) {\n    return (\n      _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance &&\n      ((performance.getEntriesByType && performance.getEntriesByType('navigation')[0]) ||\n        getNavigationEntryFromPerformanceTiming())\n    );\n  } else {\n    return _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.performance && performance.getEntriesByType && performance.getEntriesByType('navigation')[0];\n  }\n};\n\n\n//# sourceMappingURL=getNavigationEntry.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9nZXROYXZpZ2F0aW9uRW50cnkuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7O0FBRXhDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsaUJBQWlCLDZDQUFNO0FBQ3ZCO0FBQ0EsZUFBZSw2Q0FBTTs7QUFFckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsTUFBTSw2Q0FBTTtBQUNaO0FBQ0EsTUFBTSw2Q0FBTTtBQUNaO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixXQUFXLDZDQUFNO0FBQ2pCO0FBQ0E7O0FBRThCO0FBQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcz8wMGIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIyIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmNvbnN0IGdldE5hdmlnYXRpb25FbnRyeUZyb21QZXJmb3JtYW5jZVRpbWluZyA9ICgpID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGRlcHJlY2F0aW9uL2RlcHJlY2F0aW9uXG4gIGNvbnN0IHRpbWluZyA9IFdJTkRPVy5wZXJmb3JtYW5jZS50aW1pbmc7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBkZXByZWNhdGlvbi9kZXByZWNhdGlvblxuICBjb25zdCB0eXBlID0gV0lORE9XLnBlcmZvcm1hbmNlLm5hdmlnYXRpb24udHlwZTtcblxuICBjb25zdCBuYXZpZ2F0aW9uRW50cnkgPSB7XG4gICAgZW50cnlUeXBlOiAnbmF2aWdhdGlvbicsXG4gICAgc3RhcnRUaW1lOiAwLFxuICAgIHR5cGU6IHR5cGUgPT0gMiA/ICdiYWNrX2ZvcndhcmQnIDogdHlwZSA9PT0gMSA/ICdyZWxvYWQnIDogJ25hdmlnYXRlJyxcbiAgfTtcblxuICBmb3IgKGNvbnN0IGtleSBpbiB0aW1pbmcpIHtcbiAgICBpZiAoa2V5ICE9PSAnbmF2aWdhdGlvblN0YXJ0JyAmJiBrZXkgIT09ICd0b0pTT04nKSB7XG4gICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgICAgIG5hdmlnYXRpb25FbnRyeVtrZXldID0gTWF0aC5tYXgoKHRpbWluZ1trZXkgXSApIC0gdGltaW5nLm5hdmlnYXRpb25TdGFydCwgMCk7XG4gICAgfVxuICB9XG4gIHJldHVybiBuYXZpZ2F0aW9uRW50cnkgO1xufTtcblxuY29uc3QgZ2V0TmF2aWdhdGlvbkVudHJ5ID0gKCkgPT4ge1xuICBpZiAoV0lORE9XLl9fV0VCX1ZJVEFMU19QT0xZRklMTF9fKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIFdJTkRPVy5wZXJmb3JtYW5jZSAmJlxuICAgICAgKChwZXJmb3JtYW5jZS5nZXRFbnRyaWVzQnlUeXBlICYmIHBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUoJ25hdmlnYXRpb24nKVswXSkgfHxcbiAgICAgICAgZ2V0TmF2aWdhdGlvbkVudHJ5RnJvbVBlcmZvcm1hbmNlVGltaW5nKCkpXG4gICAgKTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gV0lORE9XLnBlcmZvcm1hbmNlICYmIHBlcmZvcm1hbmNlLmdldEVudHJpZXNCeVR5cGUgJiYgcGVyZm9ybWFuY2UuZ2V0RW50cmllc0J5VHlwZSgnbmF2aWdhdGlvbicpWzBdO1xuICB9XG59O1xuXG5leHBvcnQgeyBnZXROYXZpZ2F0aW9uRW50cnkgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldE5hdmlnYXRpb25FbnRyeS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js":
/*!***************************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getVisibilityWatcher: () => (/* binding */ getVisibilityWatcher)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _onHidden_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./onHidden.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\");\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nlet firstHiddenTime = -1;\n\nconst initHiddenTime = () => {\n  // If the document is hidden and not prerendering, assume it was always\n  // hidden and the page was loaded in the background.\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState) {\n    firstHiddenTime = _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden' && !_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering ? 0 : Infinity;\n  }\n};\n\nconst trackChanges = () => {\n  // Update the time if/when the document becomes hidden.\n  (0,_onHidden_js__WEBPACK_IMPORTED_MODULE_1__.onHidden)(({ timeStamp }) => {\n    firstHiddenTime = timeStamp;\n  }, true);\n};\n\nconst getVisibilityWatcher = (\n\n) => {\n  if (firstHiddenTime < 0) {\n    // If the document is hidden when this code runs, assume it was hidden\n    // since navigation start. This isn't a perfect heuristic, but it's the\n    // best we can do until an API is available to support querying past\n    // visibilityState.\n    initHiddenTime();\n    trackChanges();\n  }\n  return {\n    get firstHiddenTime() {\n      return firstHiddenTime;\n    },\n  };\n};\n\n\n//# sourceMappingURL=getVisibilityWatcher.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0M7QUFDQzs7QUFFekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sNkNBQU0sYUFBYSw2Q0FBTTtBQUMvQixzQkFBc0IsNkNBQU0sMkNBQTJDLDZDQUFNO0FBQzdFO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEVBQUUsc0RBQVEsSUFBSSxXQUFXO0FBQ3pCO0FBQ0EsR0FBRztBQUNIOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVnQztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9nZXRWaXNpYmlsaXR5V2F0Y2hlci5qcz9mYjFhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdJTkRPVyB9IGZyb20gJy4uLy4uL3R5cGVzLmpzJztcbmltcG9ydCB7IG9uSGlkZGVuIH0gZnJvbSAnLi9vbkhpZGRlbi5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5sZXQgZmlyc3RIaWRkZW5UaW1lID0gLTE7XG5cbmNvbnN0IGluaXRIaWRkZW5UaW1lID0gKCkgPT4ge1xuICAvLyBJZiB0aGUgZG9jdW1lbnQgaXMgaGlkZGVuIGFuZCBub3QgcHJlcmVuZGVyaW5nLCBhc3N1bWUgaXQgd2FzIGFsd2F5c1xuICAvLyBoaWRkZW4gYW5kIHRoZSBwYWdlIHdhcyBsb2FkZWQgaW4gdGhlIGJhY2tncm91bmQuXG4gIGlmIChXSU5ET1cuZG9jdW1lbnQgJiYgV0lORE9XLmRvY3VtZW50LnZpc2liaWxpdHlTdGF0ZSkge1xuICAgIGZpcnN0SGlkZGVuVGltZSA9IFdJTkRPVy5kb2N1bWVudC52aXNpYmlsaXR5U3RhdGUgPT09ICdoaWRkZW4nICYmICFXSU5ET1cuZG9jdW1lbnQucHJlcmVuZGVyaW5nID8gMCA6IEluZmluaXR5O1xuICB9XG59O1xuXG5jb25zdCB0cmFja0NoYW5nZXMgPSAoKSA9PiB7XG4gIC8vIFVwZGF0ZSB0aGUgdGltZSBpZi93aGVuIHRoZSBkb2N1bWVudCBiZWNvbWVzIGhpZGRlbi5cbiAgb25IaWRkZW4oKHsgdGltZVN0YW1wIH0pID0+IHtcbiAgICBmaXJzdEhpZGRlblRpbWUgPSB0aW1lU3RhbXA7XG4gIH0sIHRydWUpO1xufTtcblxuY29uc3QgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgPSAoXG5cbikgPT4ge1xuICBpZiAoZmlyc3RIaWRkZW5UaW1lIDwgMCkge1xuICAgIC8vIElmIHRoZSBkb2N1bWVudCBpcyBoaWRkZW4gd2hlbiB0aGlzIGNvZGUgcnVucywgYXNzdW1lIGl0IHdhcyBoaWRkZW5cbiAgICAvLyBzaW5jZSBuYXZpZ2F0aW9uIHN0YXJ0LiBUaGlzIGlzbid0IGEgcGVyZmVjdCBoZXVyaXN0aWMsIGJ1dCBpdCdzIHRoZVxuICAgIC8vIGJlc3Qgd2UgY2FuIGRvIHVudGlsIGFuIEFQSSBpcyBhdmFpbGFibGUgdG8gc3VwcG9ydCBxdWVyeWluZyBwYXN0XG4gICAgLy8gdmlzaWJpbGl0eVN0YXRlLlxuICAgIGluaXRIaWRkZW5UaW1lKCk7XG4gICAgdHJhY2tDaGFuZ2VzKCk7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICBnZXQgZmlyc3RIaWRkZW5UaW1lKCkge1xuICAgICAgcmV0dXJuIGZpcnN0SGlkZGVuVGltZTtcbiAgICB9LFxuICB9O1xufTtcblxuZXhwb3J0IHsgZ2V0VmlzaWJpbGl0eVdhdGNoZXIgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldFZpc2liaWxpdHlXYXRjaGVyLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getVisibilityWatcher.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js":
/*!*****************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initMetric: () => (/* binding */ initMetric)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./generateUniqueID.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/generateUniqueID.js\");\n/* harmony import */ var _getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getActivationStart.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getNavigationEntry.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst initMetric = (name, value) => {\n  const navEntry = (0,_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_0__.getNavigationEntry)();\n  let navigationType = 'navigate';\n\n  if (navEntry) {\n    if ((_types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document && _types_js__WEBPACK_IMPORTED_MODULE_1__.WINDOW.document.prerendering) || (0,_getActivationStart_js__WEBPACK_IMPORTED_MODULE_2__.getActivationStart)() > 0) {\n      navigationType = 'prerender';\n    } else {\n      navigationType = navEntry.type.replace(/_/g, '-') ;\n    }\n  }\n\n  return {\n    name,\n    value: typeof value === 'undefined' ? -1 : value,\n    rating: 'good', // Will be updated if the value changes.\n    delta: 0,\n    entries: [],\n    id: (0,_generateUniqueID_js__WEBPACK_IMPORTED_MODULE_3__.generateUniqueID)(),\n    navigationType,\n  };\n};\n\n\n//# sourceMappingURL=initMetric.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9pbml0TWV0cmljLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQXdDO0FBQ2lCO0FBQ0k7QUFDQTs7QUFFN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsbUJBQW1CLDBFQUFrQjtBQUNyQzs7QUFFQTtBQUNBLFNBQVMsNkNBQU0sYUFBYSw2Q0FBTSwyQkFBMkIsMEVBQWtCO0FBQy9FO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNFQUFnQjtBQUN4QjtBQUNBO0FBQ0E7O0FBRXNCO0FBQ3RCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL2luaXRNZXRyaWMuanM/YjRjOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi8uLi90eXBlcy5qcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZVVuaXF1ZUlEIH0gZnJvbSAnLi9nZW5lcmF0ZVVuaXF1ZUlELmpzJztcbmltcG9ydCB7IGdldEFjdGl2YXRpb25TdGFydCB9IGZyb20gJy4vZ2V0QWN0aXZhdGlvblN0YXJ0LmpzJztcbmltcG9ydCB7IGdldE5hdmlnYXRpb25FbnRyeSB9IGZyb20gJy4vZ2V0TmF2aWdhdGlvbkVudHJ5LmpzJztcblxuLypcbiAqIENvcHlyaWdodCAyMDIwIEdvb2dsZSBMTENcbiAqXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgXCJMaWNlbnNlXCIpO1xuICogeW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLlxuICogWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0XG4gKlxuICogICAgIGh0dHBzOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjBcbiAqXG4gKiBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXG4gKiBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC5cbiAqIFNlZSB0aGUgTGljZW5zZSBmb3IgdGhlIHNwZWNpZmljIGxhbmd1YWdlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcbiAqIGxpbWl0YXRpb25zIHVuZGVyIHRoZSBMaWNlbnNlLlxuICovXG5cbmNvbnN0IGluaXRNZXRyaWMgPSAobmFtZSwgdmFsdWUpID0+IHtcbiAgY29uc3QgbmF2RW50cnkgPSBnZXROYXZpZ2F0aW9uRW50cnkoKTtcbiAgbGV0IG5hdmlnYXRpb25UeXBlID0gJ25hdmlnYXRlJztcblxuICBpZiAobmF2RW50cnkpIHtcbiAgICBpZiAoKFdJTkRPVy5kb2N1bWVudCAmJiBXSU5ET1cuZG9jdW1lbnQucHJlcmVuZGVyaW5nKSB8fCBnZXRBY3RpdmF0aW9uU3RhcnQoKSA+IDApIHtcbiAgICAgIG5hdmlnYXRpb25UeXBlID0gJ3ByZXJlbmRlcic7XG4gICAgfSBlbHNlIHtcbiAgICAgIG5hdmlnYXRpb25UeXBlID0gbmF2RW50cnkudHlwZS5yZXBsYWNlKC9fL2csICctJykgO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICB2YWx1ZTogdHlwZW9mIHZhbHVlID09PSAndW5kZWZpbmVkJyA/IC0xIDogdmFsdWUsXG4gICAgcmF0aW5nOiAnZ29vZCcsIC8vIFdpbGwgYmUgdXBkYXRlZCBpZiB0aGUgdmFsdWUgY2hhbmdlcy5cbiAgICBkZWx0YTogMCxcbiAgICBlbnRyaWVzOiBbXSxcbiAgICBpZDogZ2VuZXJhdGVVbmlxdWVJRCgpLFxuICAgIG5hdmlnYXRpb25UeXBlLFxuICB9O1xufTtcblxuZXhwb3J0IHsgaW5pdE1ldHJpYyB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5pdE1ldHJpYy5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js":
/*!**************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   observe: () => (/* binding */ observe)\n/* harmony export */ });\n/**\n * Takes a performance entry type and a callback function, and creates a\n * `PerformanceObserver` instance that will observe the specified entry type\n * with buffering enabled and call the callback _for each entry_.\n *\n * This function also feature-detects entry support and wraps the logic in a\n * try/catch to avoid errors in unsupporting browsers.\n */\nconst observe = (\n  type,\n  callback,\n  opts,\n) => {\n  try {\n    if (PerformanceObserver.supportedEntryTypes.includes(type)) {\n      const po = new PerformanceObserver(list => {\n        callback(list.getEntries() );\n      });\n      po.observe(\n        Object.assign(\n          {\n            type,\n            buffered: true,\n          },\n          opts || {},\n        ) ,\n      );\n      return po;\n    }\n  } catch (e) {\n    // Do nothing.\n  }\n  return;\n};\n\n\n//# sourceMappingURL=observe.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9vYnNlcnZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1gsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVtQjtBQUNuQiIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9vYnNlcnZlLmpzP2ZmYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUYWtlcyBhIHBlcmZvcm1hbmNlIGVudHJ5IHR5cGUgYW5kIGEgY2FsbGJhY2sgZnVuY3Rpb24sIGFuZCBjcmVhdGVzIGFcbiAqIGBQZXJmb3JtYW5jZU9ic2VydmVyYCBpbnN0YW5jZSB0aGF0IHdpbGwgb2JzZXJ2ZSB0aGUgc3BlY2lmaWVkIGVudHJ5IHR5cGVcbiAqIHdpdGggYnVmZmVyaW5nIGVuYWJsZWQgYW5kIGNhbGwgdGhlIGNhbGxiYWNrIF9mb3IgZWFjaCBlbnRyeV8uXG4gKlxuICogVGhpcyBmdW5jdGlvbiBhbHNvIGZlYXR1cmUtZGV0ZWN0cyBlbnRyeSBzdXBwb3J0IGFuZCB3cmFwcyB0aGUgbG9naWMgaW4gYVxuICogdHJ5L2NhdGNoIHRvIGF2b2lkIGVycm9ycyBpbiB1bnN1cHBvcnRpbmcgYnJvd3NlcnMuXG4gKi9cbmNvbnN0IG9ic2VydmUgPSAoXG4gIHR5cGUsXG4gIGNhbGxiYWNrLFxuICBvcHRzLFxuKSA9PiB7XG4gIHRyeSB7XG4gICAgaWYgKFBlcmZvcm1hbmNlT2JzZXJ2ZXIuc3VwcG9ydGVkRW50cnlUeXBlcy5pbmNsdWRlcyh0eXBlKSkge1xuICAgICAgY29uc3QgcG8gPSBuZXcgUGVyZm9ybWFuY2VPYnNlcnZlcihsaXN0ID0+IHtcbiAgICAgICAgY2FsbGJhY2sobGlzdC5nZXRFbnRyaWVzKCkgKTtcbiAgICAgIH0pO1xuICAgICAgcG8ub2JzZXJ2ZShcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICB7XG4gICAgICAgICAgICB0eXBlLFxuICAgICAgICAgICAgYnVmZmVyZWQ6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgICBvcHRzIHx8IHt9LFxuICAgICAgICApICxcbiAgICAgICk7XG4gICAgICByZXR1cm4gcG87XG4gICAgfVxuICB9IGNhdGNoIChlKSB7XG4gICAgLy8gRG8gbm90aGluZy5cbiAgfVxuICByZXR1cm47XG59O1xuXG5leHBvcnQgeyBvYnNlcnZlIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vYnNlcnZlLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js":
/*!***************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onHidden: () => (/* binding */ onHidden)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst onHidden = (cb, once) => {\n  const onHiddenOrPageHide = (event) => {\n    if (event.type === 'pagehide' || _types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.visibilityState === 'hidden') {\n      cb(event);\n      if (once) {\n        removeEventListener('visibilitychange', onHiddenOrPageHide, true);\n        removeEventListener('pagehide', onHiddenOrPageHide, true);\n      }\n    }\n  };\n\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    addEventListener('visibilitychange', onHiddenOrPageHide, true);\n    // Some browsers have buggy implementations of visibilitychange,\n    // so we use pagehide in addition, just to be safe.\n    addEventListener('pagehide', onHiddenOrPageHide, true);\n  }\n};\n\n\n//# sourceMappingURL=onHidden.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9vbkhpZGRlbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3Qzs7QUFFeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxxQ0FBcUMsNkNBQU07QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTSw2Q0FBTTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFb0I7QUFDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9saWIvb25IaWRkZW4uanM/ZDcxMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi8uLi90eXBlcy5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG5jb25zdCBvbkhpZGRlbiA9IChjYiwgb25jZSkgPT4ge1xuICBjb25zdCBvbkhpZGRlbk9yUGFnZUhpZGUgPSAoZXZlbnQpID0+IHtcbiAgICBpZiAoZXZlbnQudHlwZSA9PT0gJ3BhZ2VoaWRlJyB8fCBXSU5ET1cuZG9jdW1lbnQudmlzaWJpbGl0eVN0YXRlID09PSAnaGlkZGVuJykge1xuICAgICAgY2IoZXZlbnQpO1xuICAgICAgaWYgKG9uY2UpIHtcbiAgICAgICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcigndmlzaWJpbGl0eWNoYW5nZScsIG9uSGlkZGVuT3JQYWdlSGlkZSwgdHJ1ZSk7XG4gICAgICAgIHJlbW92ZUV2ZW50TGlzdGVuZXIoJ3BhZ2VoaWRlJywgb25IaWRkZW5PclBhZ2VIaWRlLCB0cnVlKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgaWYgKFdJTkRPVy5kb2N1bWVudCkge1xuICAgIGFkZEV2ZW50TGlzdGVuZXIoJ3Zpc2liaWxpdHljaGFuZ2UnLCBvbkhpZGRlbk9yUGFnZUhpZGUsIHRydWUpO1xuICAgIC8vIFNvbWUgYnJvd3NlcnMgaGF2ZSBidWdneSBpbXBsZW1lbnRhdGlvbnMgb2YgdmlzaWJpbGl0eWNoYW5nZSxcbiAgICAvLyBzbyB3ZSB1c2UgcGFnZWhpZGUgaW4gYWRkaXRpb24sIGp1c3QgdG8gYmUgc2FmZS5cbiAgICBhZGRFdmVudExpc3RlbmVyKCdwYWdlaGlkZScsIG9uSGlkZGVuT3JQYWdlSGlkZSwgdHJ1ZSk7XG4gIH1cbn07XG5cbmV4cG9ydCB7IG9uSGlkZGVuIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbkhpZGRlbi5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/onHidden.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/polyfills/interactionCountPolyfill.js":
/*!*****************************************************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/polyfills/interactionCountPolyfill.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getInteractionCount: () => (/* binding */ getInteractionCount),\n/* harmony export */   initInteractionCountPolyfill: () => (/* binding */ initInteractionCountPolyfill)\n/* harmony export */ });\n/* harmony import */ var _observe_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../observe.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/observe.js\");\n\n\nlet interactionCountEstimate = 0;\nlet minKnownInteractionId = Infinity;\nlet maxKnownInteractionId = 0;\n\nconst updateEstimate = (entries) => {\n  (entries ).forEach(e => {\n    if (e.interactionId) {\n      minKnownInteractionId = Math.min(minKnownInteractionId, e.interactionId);\n      maxKnownInteractionId = Math.max(maxKnownInteractionId, e.interactionId);\n\n      interactionCountEstimate = maxKnownInteractionId ? (maxKnownInteractionId - minKnownInteractionId) / 7 + 1 : 0;\n    }\n  });\n};\n\nlet po;\n\n/**\n * Returns the `interactionCount` value using the native API (if available)\n * or the polyfill estimate in this module.\n */\nconst getInteractionCount = () => {\n  return po ? interactionCountEstimate : performance.interactionCount || 0;\n};\n\n/**\n * Feature detects native support or initializes the polyfill if needed.\n */\nconst initInteractionCountPolyfill = () => {\n  if ('interactionCount' in performance || po) return;\n\n  po = (0,_observe_js__WEBPACK_IMPORTED_MODULE_0__.observe)('event', updateEstimate, {\n    type: 'event',\n    buffered: true,\n    durationThreshold: 0,\n  } );\n};\n\n\n//# sourceMappingURL=interactionCountPolyfill.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL2xpYi9wb2x5ZmlsbHMvaW50ZXJhY3Rpb25Db3VudFBvbHlmaWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF3Qzs7QUFFeEM7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLE9BQU8sb0RBQU87QUFDZDtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRTZEO0FBQzdEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9icm93c2VyL3dlYi12aXRhbHMvbGliL3BvbHlmaWxscy9pbnRlcmFjdGlvbkNvdW50UG9seWZpbGwuanM/Mzg2MyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBvYnNlcnZlIH0gZnJvbSAnLi4vb2JzZXJ2ZS5qcyc7XG5cbmxldCBpbnRlcmFjdGlvbkNvdW50RXN0aW1hdGUgPSAwO1xubGV0IG1pbktub3duSW50ZXJhY3Rpb25JZCA9IEluZmluaXR5O1xubGV0IG1heEtub3duSW50ZXJhY3Rpb25JZCA9IDA7XG5cbmNvbnN0IHVwZGF0ZUVzdGltYXRlID0gKGVudHJpZXMpID0+IHtcbiAgKGVudHJpZXMgKS5mb3JFYWNoKGUgPT4ge1xuICAgIGlmIChlLmludGVyYWN0aW9uSWQpIHtcbiAgICAgIG1pbktub3duSW50ZXJhY3Rpb25JZCA9IE1hdGgubWluKG1pbktub3duSW50ZXJhY3Rpb25JZCwgZS5pbnRlcmFjdGlvbklkKTtcbiAgICAgIG1heEtub3duSW50ZXJhY3Rpb25JZCA9IE1hdGgubWF4KG1heEtub3duSW50ZXJhY3Rpb25JZCwgZS5pbnRlcmFjdGlvbklkKTtcblxuICAgICAgaW50ZXJhY3Rpb25Db3VudEVzdGltYXRlID0gbWF4S25vd25JbnRlcmFjdGlvbklkID8gKG1heEtub3duSW50ZXJhY3Rpb25JZCAtIG1pbktub3duSW50ZXJhY3Rpb25JZCkgLyA3ICsgMSA6IDA7XG4gICAgfVxuICB9KTtcbn07XG5cbmxldCBwbztcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBgaW50ZXJhY3Rpb25Db3VudGAgdmFsdWUgdXNpbmcgdGhlIG5hdGl2ZSBBUEkgKGlmIGF2YWlsYWJsZSlcbiAqIG9yIHRoZSBwb2x5ZmlsbCBlc3RpbWF0ZSBpbiB0aGlzIG1vZHVsZS5cbiAqL1xuY29uc3QgZ2V0SW50ZXJhY3Rpb25Db3VudCA9ICgpID0+IHtcbiAgcmV0dXJuIHBvID8gaW50ZXJhY3Rpb25Db3VudEVzdGltYXRlIDogcGVyZm9ybWFuY2UuaW50ZXJhY3Rpb25Db3VudCB8fCAwO1xufTtcblxuLyoqXG4gKiBGZWF0dXJlIGRldGVjdHMgbmF0aXZlIHN1cHBvcnQgb3IgaW5pdGlhbGl6ZXMgdGhlIHBvbHlmaWxsIGlmIG5lZWRlZC5cbiAqL1xuY29uc3QgaW5pdEludGVyYWN0aW9uQ291bnRQb2x5ZmlsbCA9ICgpID0+IHtcbiAgaWYgKCdpbnRlcmFjdGlvbkNvdW50JyBpbiBwZXJmb3JtYW5jZSB8fCBwbykgcmV0dXJuO1xuXG4gIHBvID0gb2JzZXJ2ZSgnZXZlbnQnLCB1cGRhdGVFc3RpbWF0ZSwge1xuICAgIHR5cGU6ICdldmVudCcsXG4gICAgYnVmZmVyZWQ6IHRydWUsXG4gICAgZHVyYXRpb25UaHJlc2hvbGQ6IDAsXG4gIH0gKTtcbn07XG5cbmV4cG9ydCB7IGdldEludGVyYWN0aW9uQ291bnQsIGluaXRJbnRlcmFjdGlvbkNvdW50UG9seWZpbGwgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWludGVyYWN0aW9uQ291bnRQb2x5ZmlsbC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/polyfills/interactionCountPolyfill.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/onTTFB.js":
/*!*********************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/onTTFB.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   onTTFB: () => (/* binding */ onTTFB)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../types.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/types.js\");\n/* harmony import */ var _lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/bindReporter.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/bindReporter.js\");\n/* harmony import */ var _lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/getActivationStart.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getActivationStart.js\");\n/* harmony import */ var _lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/getNavigationEntry.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/getNavigationEntry.js\");\n/* harmony import */ var _lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/initMetric.js */ \"(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/lib/initMetric.js\");\n\n\n\n\n\n\n/*\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Runs in the next task after the page is done loading and/or prerendering.\n * @param callback\n */\nconst whenReady = (callback) => {\n  if (!_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document) {\n    return;\n  }\n\n  if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.prerendering) {\n    addEventListener('prerenderingchange', () => whenReady(callback), true);\n  } else if (_types_js__WEBPACK_IMPORTED_MODULE_0__.WINDOW.document.readyState !== 'complete') {\n    addEventListener('load', () => whenReady(callback), true);\n  } else {\n    // Queue a task so the callback runs after `loadEventEnd`.\n    setTimeout(callback, 0);\n  }\n};\n\n/**\n * Calculates the [TTFB](https://web.dev/time-to-first-byte/) value for the\n * current page and calls the `callback` function once the page has loaded,\n * along with the relevant `navigation` performance entry used to determine the\n * value. The reported value is a `DOMHighResTimeStamp`.\n *\n * Note, this function waits until after the page is loaded to call `callback`\n * in order to ensure all properties of the `navigation` entry are populated.\n * This is useful if you want to report on other metrics exposed by the\n * [Navigation Timing API](https://w3c.github.io/navigation-timing/). For\n * example, the TTFB metric starts from the page's [time\n * origin](https://www.w3.org/TR/hr-time-2/#sec-time-origin), which means it\n * includes time spent on DNS lookup, connection negotiation, network latency,\n * and server processing time.\n */\nconst onTTFB = (onReport, opts) => {\n  // Set defaults\n  // eslint-disable-next-line no-param-reassign\n  opts = opts || {};\n\n  // https://web.dev/ttfb/#what-is-a-good-ttfb-score\n  // const thresholds = [800, 1800];\n\n  const metric = (0,_lib_initMetric_js__WEBPACK_IMPORTED_MODULE_1__.initMetric)('TTFB');\n  const report = (0,_lib_bindReporter_js__WEBPACK_IMPORTED_MODULE_2__.bindReporter)(onReport, metric, opts.reportAllChanges);\n\n  whenReady(() => {\n    const navEntry = (0,_lib_getNavigationEntry_js__WEBPACK_IMPORTED_MODULE_3__.getNavigationEntry)() ;\n\n    if (navEntry) {\n      // The activationStart reference is used because TTFB should be\n      // relative to page activation rather than navigation start if the\n      // page was prerendered. But in cases where `activationStart` occurs\n      // after the first byte is received, this time should be clamped at 0.\n      metric.value = Math.max(navEntry.responseStart - (0,_lib_getActivationStart_js__WEBPACK_IMPORTED_MODULE_4__.getActivationStart)(), 0);\n\n      // In some cases the value reported is negative or is larger\n      // than the current page time. Ignore these cases:\n      // https://github.com/GoogleChrome/web-vitals/issues/137\n      // https://github.com/GoogleChrome/web-vitals/issues/162\n      if (metric.value < 0 || metric.value > performance.now()) return;\n\n      metric.entries = [navEntry];\n\n      report(true);\n    }\n  });\n};\n\n\n//# sourceMappingURL=onTTFB.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vYnJvd3Nlci93ZWItdml0YWxzL29uVFRGQi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBcUM7QUFDZ0I7QUFDWTtBQUNBO0FBQ2hCOztBQUVqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU8sNkNBQU07QUFDYjtBQUNBOztBQUVBLE1BQU0sNkNBQU07QUFDWjtBQUNBLElBQUksU0FBUyw2Q0FBTTtBQUNuQjtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBLGlCQUFpQiw4REFBVTtBQUMzQixpQkFBaUIsa0VBQVk7O0FBRTdCO0FBQ0EscUJBQXFCLDhFQUFrQjs7QUFFdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCw4RUFBa0I7O0FBRXpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBLEdBQUc7QUFDSDs7QUFFa0I7QUFDbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9Ac2VudHJ5LWludGVybmFsL3RyYWNpbmcvZXNtL2Jyb3dzZXIvd2ViLXZpdGFscy9vblRURkIuanM/NDY4NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXSU5ET1cgfSBmcm9tICcuLi90eXBlcy5qcyc7XG5pbXBvcnQgeyBiaW5kUmVwb3J0ZXIgfSBmcm9tICcuL2xpYi9iaW5kUmVwb3J0ZXIuanMnO1xuaW1wb3J0IHsgZ2V0QWN0aXZhdGlvblN0YXJ0IH0gZnJvbSAnLi9saWIvZ2V0QWN0aXZhdGlvblN0YXJ0LmpzJztcbmltcG9ydCB7IGdldE5hdmlnYXRpb25FbnRyeSB9IGZyb20gJy4vbGliL2dldE5hdmlnYXRpb25FbnRyeS5qcyc7XG5pbXBvcnQgeyBpbml0TWV0cmljIH0gZnJvbSAnLi9saWIvaW5pdE1ldHJpYy5qcyc7XG5cbi8qXG4gKiBDb3B5cmlnaHQgMjAyMCBHb29nbGUgTExDXG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIEFwYWNoZSBMaWNlbnNlLCBWZXJzaW9uIDIuMCAodGhlIFwiTGljZW5zZVwiKTtcbiAqIHlvdSBtYXkgbm90IHVzZSB0aGlzIGZpbGUgZXhjZXB0IGluIGNvbXBsaWFuY2Ugd2l0aCB0aGUgTGljZW5zZS5cbiAqIFlvdSBtYXkgb2J0YWluIGEgY29weSBvZiB0aGUgTGljZW5zZSBhdFxuICpcbiAqICAgICBodHRwczovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wXG4gKlxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxuICogZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gXCJBUyBJU1wiIEJBU0lTLFxuICogV0lUSE9VVCBXQVJSQU5USUVTIE9SIENPTkRJVElPTlMgT0YgQU5ZIEtJTkQsIGVpdGhlciBleHByZXNzIG9yIGltcGxpZWQuXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kXG4gKiBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS5cbiAqL1xuXG4vKipcbiAqIFJ1bnMgaW4gdGhlIG5leHQgdGFzayBhZnRlciB0aGUgcGFnZSBpcyBkb25lIGxvYWRpbmcgYW5kL29yIHByZXJlbmRlcmluZy5cbiAqIEBwYXJhbSBjYWxsYmFja1xuICovXG5jb25zdCB3aGVuUmVhZHkgPSAoY2FsbGJhY2spID0+IHtcbiAgaWYgKCFXSU5ET1cuZG9jdW1lbnQpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAoV0lORE9XLmRvY3VtZW50LnByZXJlbmRlcmluZykge1xuICAgIGFkZEV2ZW50TGlzdGVuZXIoJ3ByZXJlbmRlcmluZ2NoYW5nZScsICgpID0+IHdoZW5SZWFkeShjYWxsYmFjayksIHRydWUpO1xuICB9IGVsc2UgaWYgKFdJTkRPVy5kb2N1bWVudC5yZWFkeVN0YXRlICE9PSAnY29tcGxldGUnKSB7XG4gICAgYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsICgpID0+IHdoZW5SZWFkeShjYWxsYmFjayksIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIC8vIFF1ZXVlIGEgdGFzayBzbyB0aGUgY2FsbGJhY2sgcnVucyBhZnRlciBgbG9hZEV2ZW50RW5kYC5cbiAgICBzZXRUaW1lb3V0KGNhbGxiYWNrLCAwKTtcbiAgfVxufTtcblxuLyoqXG4gKiBDYWxjdWxhdGVzIHRoZSBbVFRGQl0oaHR0cHM6Ly93ZWIuZGV2L3RpbWUtdG8tZmlyc3QtYnl0ZS8pIHZhbHVlIGZvciB0aGVcbiAqIGN1cnJlbnQgcGFnZSBhbmQgY2FsbHMgdGhlIGBjYWxsYmFja2AgZnVuY3Rpb24gb25jZSB0aGUgcGFnZSBoYXMgbG9hZGVkLFxuICogYWxvbmcgd2l0aCB0aGUgcmVsZXZhbnQgYG5hdmlnYXRpb25gIHBlcmZvcm1hbmNlIGVudHJ5IHVzZWQgdG8gZGV0ZXJtaW5lIHRoZVxuICogdmFsdWUuIFRoZSByZXBvcnRlZCB2YWx1ZSBpcyBhIGBET01IaWdoUmVzVGltZVN0YW1wYC5cbiAqXG4gKiBOb3RlLCB0aGlzIGZ1bmN0aW9uIHdhaXRzIHVudGlsIGFmdGVyIHRoZSBwYWdlIGlzIGxvYWRlZCB0byBjYWxsIGBjYWxsYmFja2BcbiAqIGluIG9yZGVyIHRvIGVuc3VyZSBhbGwgcHJvcGVydGllcyBvZiB0aGUgYG5hdmlnYXRpb25gIGVudHJ5IGFyZSBwb3B1bGF0ZWQuXG4gKiBUaGlzIGlzIHVzZWZ1bCBpZiB5b3Ugd2FudCB0byByZXBvcnQgb24gb3RoZXIgbWV0cmljcyBleHBvc2VkIGJ5IHRoZVxuICogW05hdmlnYXRpb24gVGltaW5nIEFQSV0oaHR0cHM6Ly93M2MuZ2l0aHViLmlvL25hdmlnYXRpb24tdGltaW5nLykuIEZvclxuICogZXhhbXBsZSwgdGhlIFRURkIgbWV0cmljIHN0YXJ0cyBmcm9tIHRoZSBwYWdlJ3MgW3RpbWVcbiAqIG9yaWdpbl0oaHR0cHM6Ly93d3cudzMub3JnL1RSL2hyLXRpbWUtMi8jc2VjLXRpbWUtb3JpZ2luKSwgd2hpY2ggbWVhbnMgaXRcbiAqIGluY2x1ZGVzIHRpbWUgc3BlbnQgb24gRE5TIGxvb2t1cCwgY29ubmVjdGlvbiBuZWdvdGlhdGlvbiwgbmV0d29yayBsYXRlbmN5LFxuICogYW5kIHNlcnZlciBwcm9jZXNzaW5nIHRpbWUuXG4gKi9cbmNvbnN0IG9uVFRGQiA9IChvblJlcG9ydCwgb3B0cykgPT4ge1xuICAvLyBTZXQgZGVmYXVsdHNcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXBhcmFtLXJlYXNzaWduXG4gIG9wdHMgPSBvcHRzIHx8IHt9O1xuXG4gIC8vIGh0dHBzOi8vd2ViLmRldi90dGZiLyN3aGF0LWlzLWEtZ29vZC10dGZiLXNjb3JlXG4gIC8vIGNvbnN0IHRocmVzaG9sZHMgPSBbODAwLCAxODAwXTtcblxuICBjb25zdCBtZXRyaWMgPSBpbml0TWV0cmljKCdUVEZCJyk7XG4gIGNvbnN0IHJlcG9ydCA9IGJpbmRSZXBvcnRlcihvblJlcG9ydCwgbWV0cmljLCBvcHRzLnJlcG9ydEFsbENoYW5nZXMpO1xuXG4gIHdoZW5SZWFkeSgoKSA9PiB7XG4gICAgY29uc3QgbmF2RW50cnkgPSBnZXROYXZpZ2F0aW9uRW50cnkoKSA7XG5cbiAgICBpZiAobmF2RW50cnkpIHtcbiAgICAgIC8vIFRoZSBhY3RpdmF0aW9uU3RhcnQgcmVmZXJlbmNlIGlzIHVzZWQgYmVjYXVzZSBUVEZCIHNob3VsZCBiZVxuICAgICAgLy8gcmVsYXRpdmUgdG8gcGFnZSBhY3RpdmF0aW9uIHJhdGhlciB0aGFuIG5hdmlnYXRpb24gc3RhcnQgaWYgdGhlXG4gICAgICAvLyBwYWdlIHdhcyBwcmVyZW5kZXJlZC4gQnV0IGluIGNhc2VzIHdoZXJlIGBhY3RpdmF0aW9uU3RhcnRgIG9jY3Vyc1xuICAgICAgLy8gYWZ0ZXIgdGhlIGZpcnN0IGJ5dGUgaXMgcmVjZWl2ZWQsIHRoaXMgdGltZSBzaG91bGQgYmUgY2xhbXBlZCBhdCAwLlxuICAgICAgbWV0cmljLnZhbHVlID0gTWF0aC5tYXgobmF2RW50cnkucmVzcG9uc2VTdGFydCAtIGdldEFjdGl2YXRpb25TdGFydCgpLCAwKTtcblxuICAgICAgLy8gSW4gc29tZSBjYXNlcyB0aGUgdmFsdWUgcmVwb3J0ZWQgaXMgbmVnYXRpdmUgb3IgaXMgbGFyZ2VyXG4gICAgICAvLyB0aGFuIHRoZSBjdXJyZW50IHBhZ2UgdGltZS4gSWdub3JlIHRoZXNlIGNhc2VzOlxuICAgICAgLy8gaHR0cHM6Ly9naXRodWIuY29tL0dvb2dsZUNocm9tZS93ZWItdml0YWxzL2lzc3Vlcy8xMzdcbiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Hb29nbGVDaHJvbWUvd2ViLXZpdGFscy9pc3N1ZXMvMTYyXG4gICAgICBpZiAobWV0cmljLnZhbHVlIDwgMCB8fCBtZXRyaWMudmFsdWUgPiBwZXJmb3JtYW5jZS5ub3coKSkgcmV0dXJuO1xuXG4gICAgICBtZXRyaWMuZW50cmllcyA9IFtuYXZFbnRyeV07XG5cbiAgICAgIHJlcG9ydCh0cnVlKTtcbiAgICB9XG4gIH0pO1xufTtcblxuZXhwb3J0IHsgb25UVEZCIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vblRURkIuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/browser/web-vitals/onTTFB.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js":
/*!**************************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/common/debug-build.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_BUILD: () => (/* binding */ DEBUG_BUILD)\n/* harmony export */ });\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nconst DEBUG_BUILD = (typeof __SENTRY_DEBUG__ === 'undefined' || __SENTRY_DEBUG__);\n\n\n//# sourceMappingURL=debug-build.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vY29tbW9uL2RlYnVnLWJ1aWxkLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRXVCO0FBQ3ZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGVkZ2l0eS15aWVsZC1mcm9udGVuZC8uLi9ub2RlX21vZHVsZXMvQHNlbnRyeS1pbnRlcm5hbC90cmFjaW5nL2VzbS9jb21tb24vZGVidWctYnVpbGQuanM/ZTA5NyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFRoaXMgc2VydmVzIGFzIGEgYnVpbGQgdGltZSBmbGFnIHRoYXQgd2lsbCBiZSB0cnVlIGJ5IGRlZmF1bHQsIGJ1dCBmYWxzZSBpbiBub24tZGVidWcgYnVpbGRzIG9yIGlmIHVzZXJzIHJlcGxhY2UgYF9fU0VOVFJZX0RFQlVHX19gIGluIHRoZWlyIGdlbmVyYXRlZCBjb2RlLlxuICpcbiAqIEFUVEVOVElPTjogVGhpcyBjb25zdGFudCBtdXN0IG5ldmVyIGNyb3NzIHBhY2thZ2UgYm91bmRhcmllcyAoaS5lLiBiZSBleHBvcnRlZCkgdG8gZ3VhcmFudGVlIHRoYXQgaXQgY2FuIGJlIHVzZWQgZm9yIHRyZWUgc2hha2luZy5cbiAqL1xuY29uc3QgREVCVUdfQlVJTEQgPSAodHlwZW9mIF9fU0VOVFJZX0RFQlVHX18gPT09ICd1bmRlZmluZWQnIHx8IF9fU0VOVFJZX0RFQlVHX18pO1xuXG5leHBvcnQgeyBERUJVR19CVUlMRCB9O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9ZGVidWctYnVpbGQuanMubWFwXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/common/debug-build.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/@sentry-internal/tracing/esm/common/fetch.js":
/*!********************************************************************!*\
  !*** ../node_modules/@sentry-internal/tracing/esm/common/fetch.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addTracingHeadersToFetchRequest: () => (/* binding */ addTracingHeadersToFetchRequest),\n/* harmony export */   instrumentFetchRequest: () => (/* binding */ instrumentFetchRequest)\n/* harmony export */ });\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/hasTracingEnabled.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/exports.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/trace.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/semanticAttributes.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/hub.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/utils/spanUtils.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/dynamicSamplingContext.js\");\n/* harmony import */ var _sentry_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @sentry/core */ \"(ssr)/../node_modules/@sentry/core/esm/tracing/spanstatus.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/url.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/tracing.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/baggage.js\");\n/* harmony import */ var _sentry_utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @sentry/utils */ \"(ssr)/../node_modules/@sentry/utils/esm/is.js\");\n\n\n\n/**\n * Create and track fetch request spans for usage in combination with `addInstrumentationHandler`.\n *\n * @returns Span if a span was created, otherwise void.\n */\nfunction instrumentFetchRequest(\n  handlerData,\n  shouldCreateSpan,\n  shouldAttachHeaders,\n  spans,\n  spanOrigin = 'auto.http.browser',\n) {\n  if (!(0,_sentry_core__WEBPACK_IMPORTED_MODULE_0__.hasTracingEnabled)() || !handlerData.fetchData) {\n    return undefined;\n  }\n\n  const shouldCreateSpanResult = shouldCreateSpan(handlerData.fetchData.url);\n\n  if (handlerData.endTimestamp && shouldCreateSpanResult) {\n    const spanId = handlerData.fetchData.__span;\n    if (!spanId) return;\n\n    const span = spans[spanId];\n    if (span) {\n      endSpan(span, handlerData);\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete spans[spanId];\n    }\n    return undefined;\n  }\n\n  const scope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getCurrentScope)();\n  const client = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_1__.getClient)();\n\n  const { method, url } = handlerData.fetchData;\n\n  const fullUrl = getFullURL(url);\n  const host = fullUrl ? (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_2__.parseUrl)(fullUrl).host : undefined;\n\n  const span = shouldCreateSpanResult\n    ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_3__.startInactiveSpan)({\n        name: `${method} ${url}`,\n        onlyIfParent: true,\n        attributes: {\n          url,\n          type: 'fetch',\n          'http.method': method,\n          'http.url': fullUrl,\n          'server.address': host,\n          [_sentry_core__WEBPACK_IMPORTED_MODULE_4__.SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: spanOrigin,\n        },\n        op: 'http.client',\n      })\n    : undefined;\n\n  if (span) {\n    handlerData.fetchData.__span = span.spanContext().spanId;\n    spans[span.spanContext().spanId] = span;\n  }\n\n  if (shouldAttachHeaders(handlerData.fetchData.url) && client) {\n    const request = handlerData.args[0];\n\n    // In case the user hasn't set the second argument of a fetch call we default it to `{}`.\n    handlerData.args[1] = handlerData.args[1] || {};\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const options = handlerData.args[1];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n    options.headers = addTracingHeadersToFetchRequest(request, client, scope, options, span);\n  }\n\n  return span;\n}\n\n/**\n * Adds sentry-trace and baggage headers to the various forms of fetch headers\n */\nfunction addTracingHeadersToFetchRequest(\n  request, // unknown is actually type Request but we can't export DOM types from this package,\n  client,\n  scope,\n  options\n\n,\n  requestSpan,\n) {\n  // eslint-disable-next-line deprecation/deprecation\n  const span = requestSpan || scope.getSpan();\n\n  const isolationScope = (0,_sentry_core__WEBPACK_IMPORTED_MODULE_5__.getIsolationScope)();\n\n  const { traceId, spanId, sampled, dsc } = {\n    ...isolationScope.getPropagationContext(),\n    ...scope.getPropagationContext(),\n  };\n\n  const sentryTraceHeader = span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_6__.spanToTraceHeader)(span) : (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_7__.generateSentryTraceHeader)(traceId, spanId, sampled);\n\n  const sentryBaggageHeader = (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.dynamicSamplingContextToSentryBaggageHeader)(\n    dsc ||\n      (span ? (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromSpan)(span) : (0,_sentry_core__WEBPACK_IMPORTED_MODULE_9__.getDynamicSamplingContextFromClient)(traceId, client, scope)),\n  );\n\n  const headers =\n    options.headers ||\n    (typeof Request !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.isInstanceOf)(request, Request) ? (request ).headers : undefined);\n\n  if (!headers) {\n    return { 'sentry-trace': sentryTraceHeader, baggage: sentryBaggageHeader };\n  } else if (typeof Headers !== 'undefined' && (0,_sentry_utils__WEBPACK_IMPORTED_MODULE_10__.isInstanceOf)(headers, Headers)) {\n    const newHeaders = new Headers(headers );\n\n    newHeaders.append('sentry-trace', sentryTraceHeader);\n\n    if (sentryBaggageHeader) {\n      // If the same header is appended multiple times the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.append(_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.BAGGAGE_HEADER_NAME, sentryBaggageHeader);\n    }\n\n    return newHeaders ;\n  } else if (Array.isArray(headers)) {\n    const newHeaders = [...headers, ['sentry-trace', sentryTraceHeader]];\n\n    if (sentryBaggageHeader) {\n      // If there are multiple entries with the same key, the browser will merge the values into a single request header.\n      // Its therefore safe to simply push a \"baggage\" entry, even though there might already be another baggage header.\n      newHeaders.push([_sentry_utils__WEBPACK_IMPORTED_MODULE_8__.BAGGAGE_HEADER_NAME, sentryBaggageHeader]);\n    }\n\n    return newHeaders ;\n  } else {\n    const existingBaggageHeader = 'baggage' in headers ? headers.baggage : undefined;\n    const newBaggageHeaders = [];\n\n    if (Array.isArray(existingBaggageHeader)) {\n      newBaggageHeaders.push(...existingBaggageHeader);\n    } else if (existingBaggageHeader) {\n      newBaggageHeaders.push(existingBaggageHeader);\n    }\n\n    if (sentryBaggageHeader) {\n      newBaggageHeaders.push(sentryBaggageHeader);\n    }\n\n    return {\n      ...(headers ),\n      'sentry-trace': sentryTraceHeader,\n      baggage: newBaggageHeaders.length > 0 ? newBaggageHeaders.join(',') : undefined,\n    };\n  }\n}\n\nfunction getFullURL(url) {\n  try {\n    const parsed = new URL(url);\n    return parsed.href;\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction endSpan(span, handlerData) {\n  if (handlerData.response) {\n    (0,_sentry_core__WEBPACK_IMPORTED_MODULE_11__.setHttpStatus)(span, handlerData.response.status);\n\n    const contentLength =\n      handlerData.response && handlerData.response.headers && handlerData.response.headers.get('content-length');\n\n    if (contentLength) {\n      const contentLengthNum = parseInt(contentLength);\n      if (contentLengthNum > 0) {\n        span.setAttribute('http.response_content_length', contentLengthNum);\n      }\n    }\n  } else if (handlerData.error) {\n    span.setStatus('internal_error');\n  }\n  span.end();\n}\n\n\n//# sourceMappingURL=fetch.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vY29tbW9uL2ZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStQO0FBQzNHOztBQUVwSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLCtEQUFpQjtBQUN4QjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGdCQUFnQiw2REFBZTtBQUMvQixpQkFBaUIsdURBQVM7O0FBRTFCLFVBQVUsY0FBYzs7QUFFeEI7QUFDQSx5QkFBeUIsdURBQVE7O0FBRWpDO0FBQ0EsTUFBTSwrREFBaUI7QUFDdkIsaUJBQWlCLFFBQVEsRUFBRSxJQUFJO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVywwRUFBZ0M7QUFDM0MsU0FBUztBQUNUO0FBQ0EsT0FBTztBQUNQOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEsMkZBQTJGO0FBQzNGOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHlCQUF5QiwrREFBaUI7O0FBRTFDLFVBQVUsZ0NBQWdDO0FBQzFDO0FBQ0E7QUFDQTs7QUFFQSxtQ0FBbUMsK0RBQWlCLFNBQVMsd0VBQXlCOztBQUV0Riw4QkFBOEIsMEZBQTJDO0FBQ3pFO0FBQ0EsY0FBYywrRUFBaUMsU0FBUyxpRkFBbUM7QUFDM0Y7O0FBRUE7QUFDQTtBQUNBLHVDQUF1Qyw0REFBWTs7QUFFbkQ7QUFDQSxhQUFhO0FBQ2IsSUFBSSwyQ0FBMkMsNERBQVk7QUFDM0Q7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDhEQUFtQjtBQUMzQzs7QUFFQTtBQUNBLElBQUk7QUFDSjs7QUFFQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsOERBQW1CO0FBQzFDOztBQUVBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLElBQUksNERBQWE7O0FBRWpCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBOztBQUVtRTtBQUNuRSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL0BzZW50cnktaW50ZXJuYWwvdHJhY2luZy9lc20vY29tbW9uL2ZldGNoLmpzP2JkODciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaGFzVHJhY2luZ0VuYWJsZWQsIGdldEN1cnJlbnRTY29wZSwgZ2V0Q2xpZW50LCBzdGFydEluYWN0aXZlU3BhbiwgU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU4sIGdldElzb2xhdGlvblNjb3BlLCBzcGFuVG9UcmFjZUhlYWRlciwgZ2V0RHluYW1pY1NhbXBsaW5nQ29udGV4dEZyb21TcGFuLCBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbUNsaWVudCwgc2V0SHR0cFN0YXR1cyB9IGZyb20gJ0BzZW50cnkvY29yZSc7XG5pbXBvcnQgeyBwYXJzZVVybCwgZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlciwgZHluYW1pY1NhbXBsaW5nQ29udGV4dFRvU2VudHJ5QmFnZ2FnZUhlYWRlciwgaXNJbnN0YW5jZU9mLCBCQUdHQUdFX0hFQURFUl9OQU1FIH0gZnJvbSAnQHNlbnRyeS91dGlscyc7XG5cbi8qKlxuICogQ3JlYXRlIGFuZCB0cmFjayBmZXRjaCByZXF1ZXN0IHNwYW5zIGZvciB1c2FnZSBpbiBjb21iaW5hdGlvbiB3aXRoIGBhZGRJbnN0cnVtZW50YXRpb25IYW5kbGVyYC5cbiAqXG4gKiBAcmV0dXJucyBTcGFuIGlmIGEgc3BhbiB3YXMgY3JlYXRlZCwgb3RoZXJ3aXNlIHZvaWQuXG4gKi9cbmZ1bmN0aW9uIGluc3RydW1lbnRGZXRjaFJlcXVlc3QoXG4gIGhhbmRsZXJEYXRhLFxuICBzaG91bGRDcmVhdGVTcGFuLFxuICBzaG91bGRBdHRhY2hIZWFkZXJzLFxuICBzcGFucyxcbiAgc3Bhbk9yaWdpbiA9ICdhdXRvLmh0dHAuYnJvd3NlcicsXG4pIHtcbiAgaWYgKCFoYXNUcmFjaW5nRW5hYmxlZCgpIHx8ICFoYW5kbGVyRGF0YS5mZXRjaERhdGEpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG5cbiAgY29uc3Qgc2hvdWxkQ3JlYXRlU3BhblJlc3VsdCA9IHNob3VsZENyZWF0ZVNwYW4oaGFuZGxlckRhdGEuZmV0Y2hEYXRhLnVybCk7XG5cbiAgaWYgKGhhbmRsZXJEYXRhLmVuZFRpbWVzdGFtcCAmJiBzaG91bGRDcmVhdGVTcGFuUmVzdWx0KSB7XG4gICAgY29uc3Qgc3BhbklkID0gaGFuZGxlckRhdGEuZmV0Y2hEYXRhLl9fc3BhbjtcbiAgICBpZiAoIXNwYW5JZCkgcmV0dXJuO1xuXG4gICAgY29uc3Qgc3BhbiA9IHNwYW5zW3NwYW5JZF07XG4gICAgaWYgKHNwYW4pIHtcbiAgICAgIGVuZFNwYW4oc3BhbiwgaGFuZGxlckRhdGEpO1xuICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1keW5hbWljLWRlbGV0ZVxuICAgICAgZGVsZXRlIHNwYW5zW3NwYW5JZF07XG4gICAgfVxuICAgIHJldHVybiB1bmRlZmluZWQ7XG4gIH1cblxuICBjb25zdCBzY29wZSA9IGdldEN1cnJlbnRTY29wZSgpO1xuICBjb25zdCBjbGllbnQgPSBnZXRDbGllbnQoKTtcblxuICBjb25zdCB7IG1ldGhvZCwgdXJsIH0gPSBoYW5kbGVyRGF0YS5mZXRjaERhdGE7XG5cbiAgY29uc3QgZnVsbFVybCA9IGdldEZ1bGxVUkwodXJsKTtcbiAgY29uc3QgaG9zdCA9IGZ1bGxVcmwgPyBwYXJzZVVybChmdWxsVXJsKS5ob3N0IDogdW5kZWZpbmVkO1xuXG4gIGNvbnN0IHNwYW4gPSBzaG91bGRDcmVhdGVTcGFuUmVzdWx0XG4gICAgPyBzdGFydEluYWN0aXZlU3Bhbih7XG4gICAgICAgIG5hbWU6IGAke21ldGhvZH0gJHt1cmx9YCxcbiAgICAgICAgb25seUlmUGFyZW50OiB0cnVlLFxuICAgICAgICBhdHRyaWJ1dGVzOiB7XG4gICAgICAgICAgdXJsLFxuICAgICAgICAgIHR5cGU6ICdmZXRjaCcsXG4gICAgICAgICAgJ2h0dHAubWV0aG9kJzogbWV0aG9kLFxuICAgICAgICAgICdodHRwLnVybCc6IGZ1bGxVcmwsXG4gICAgICAgICAgJ3NlcnZlci5hZGRyZXNzJzogaG9zdCxcbiAgICAgICAgICBbU0VNQU5USUNfQVRUUklCVVRFX1NFTlRSWV9PUklHSU5dOiBzcGFuT3JpZ2luLFxuICAgICAgICB9LFxuICAgICAgICBvcDogJ2h0dHAuY2xpZW50JyxcbiAgICAgIH0pXG4gICAgOiB1bmRlZmluZWQ7XG5cbiAgaWYgKHNwYW4pIHtcbiAgICBoYW5kbGVyRGF0YS5mZXRjaERhdGEuX19zcGFuID0gc3Bhbi5zcGFuQ29udGV4dCgpLnNwYW5JZDtcbiAgICBzcGFuc1tzcGFuLnNwYW5Db250ZXh0KCkuc3BhbklkXSA9IHNwYW47XG4gIH1cblxuICBpZiAoc2hvdWxkQXR0YWNoSGVhZGVycyhoYW5kbGVyRGF0YS5mZXRjaERhdGEudXJsKSAmJiBjbGllbnQpIHtcbiAgICBjb25zdCByZXF1ZXN0ID0gaGFuZGxlckRhdGEuYXJnc1swXTtcblxuICAgIC8vIEluIGNhc2UgdGhlIHVzZXIgaGFzbid0IHNldCB0aGUgc2Vjb25kIGFyZ3VtZW50IG9mIGEgZmV0Y2ggY2FsbCB3ZSBkZWZhdWx0IGl0IHRvIGB7fWAuXG4gICAgaGFuZGxlckRhdGEuYXJnc1sxXSA9IGhhbmRsZXJEYXRhLmFyZ3NbMV0gfHwge307XG5cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IG9wdGlvbnMgPSBoYW5kbGVyRGF0YS5hcmdzWzFdO1xuXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnksIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnNhZmUtbWVtYmVyLWFjY2Vzc1xuICAgIG9wdGlvbnMuaGVhZGVycyA9IGFkZFRyYWNpbmdIZWFkZXJzVG9GZXRjaFJlcXVlc3QocmVxdWVzdCwgY2xpZW50LCBzY29wZSwgb3B0aW9ucywgc3Bhbik7XG4gIH1cblxuICByZXR1cm4gc3Bhbjtcbn1cblxuLyoqXG4gKiBBZGRzIHNlbnRyeS10cmFjZSBhbmQgYmFnZ2FnZSBoZWFkZXJzIHRvIHRoZSB2YXJpb3VzIGZvcm1zIG9mIGZldGNoIGhlYWRlcnNcbiAqL1xuZnVuY3Rpb24gYWRkVHJhY2luZ0hlYWRlcnNUb0ZldGNoUmVxdWVzdChcbiAgcmVxdWVzdCwgLy8gdW5rbm93biBpcyBhY3R1YWxseSB0eXBlIFJlcXVlc3QgYnV0IHdlIGNhbid0IGV4cG9ydCBET00gdHlwZXMgZnJvbSB0aGlzIHBhY2thZ2UsXG4gIGNsaWVudCxcbiAgc2NvcGUsXG4gIG9wdGlvbnNcblxuLFxuICByZXF1ZXN0U3Bhbixcbikge1xuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZGVwcmVjYXRpb24vZGVwcmVjYXRpb25cbiAgY29uc3Qgc3BhbiA9IHJlcXVlc3RTcGFuIHx8IHNjb3BlLmdldFNwYW4oKTtcblxuICBjb25zdCBpc29sYXRpb25TY29wZSA9IGdldElzb2xhdGlvblNjb3BlKCk7XG5cbiAgY29uc3QgeyB0cmFjZUlkLCBzcGFuSWQsIHNhbXBsZWQsIGRzYyB9ID0ge1xuICAgIC4uLmlzb2xhdGlvblNjb3BlLmdldFByb3BhZ2F0aW9uQ29udGV4dCgpLFxuICAgIC4uLnNjb3BlLmdldFByb3BhZ2F0aW9uQ29udGV4dCgpLFxuICB9O1xuXG4gIGNvbnN0IHNlbnRyeVRyYWNlSGVhZGVyID0gc3BhbiA/IHNwYW5Ub1RyYWNlSGVhZGVyKHNwYW4pIDogZ2VuZXJhdGVTZW50cnlUcmFjZUhlYWRlcih0cmFjZUlkLCBzcGFuSWQsIHNhbXBsZWQpO1xuXG4gIGNvbnN0IHNlbnRyeUJhZ2dhZ2VIZWFkZXIgPSBkeW5hbWljU2FtcGxpbmdDb250ZXh0VG9TZW50cnlCYWdnYWdlSGVhZGVyKFxuICAgIGRzYyB8fFxuICAgICAgKHNwYW4gPyBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbVNwYW4oc3BhbikgOiBnZXREeW5hbWljU2FtcGxpbmdDb250ZXh0RnJvbUNsaWVudCh0cmFjZUlkLCBjbGllbnQsIHNjb3BlKSksXG4gICk7XG5cbiAgY29uc3QgaGVhZGVycyA9XG4gICAgb3B0aW9ucy5oZWFkZXJzIHx8XG4gICAgKHR5cGVvZiBSZXF1ZXN0ICE9PSAndW5kZWZpbmVkJyAmJiBpc0luc3RhbmNlT2YocmVxdWVzdCwgUmVxdWVzdCkgPyAocmVxdWVzdCApLmhlYWRlcnMgOiB1bmRlZmluZWQpO1xuXG4gIGlmICghaGVhZGVycykge1xuICAgIHJldHVybiB7ICdzZW50cnktdHJhY2UnOiBzZW50cnlUcmFjZUhlYWRlciwgYmFnZ2FnZTogc2VudHJ5QmFnZ2FnZUhlYWRlciB9O1xuICB9IGVsc2UgaWYgKHR5cGVvZiBIZWFkZXJzICE9PSAndW5kZWZpbmVkJyAmJiBpc0luc3RhbmNlT2YoaGVhZGVycywgSGVhZGVycykpIHtcbiAgICBjb25zdCBuZXdIZWFkZXJzID0gbmV3IEhlYWRlcnMoaGVhZGVycyApO1xuXG4gICAgbmV3SGVhZGVycy5hcHBlbmQoJ3NlbnRyeS10cmFjZScsIHNlbnRyeVRyYWNlSGVhZGVyKTtcblxuICAgIGlmIChzZW50cnlCYWdnYWdlSGVhZGVyKSB7XG4gICAgICAvLyBJZiB0aGUgc2FtZSBoZWFkZXIgaXMgYXBwZW5kZWQgbXVsdGlwbGUgdGltZXMgdGhlIGJyb3dzZXIgd2lsbCBtZXJnZSB0aGUgdmFsdWVzIGludG8gYSBzaW5nbGUgcmVxdWVzdCBoZWFkZXIuXG4gICAgICAvLyBJdHMgdGhlcmVmb3JlIHNhZmUgdG8gc2ltcGx5IHB1c2ggYSBcImJhZ2dhZ2VcIiBlbnRyeSwgZXZlbiB0aG91Z2ggdGhlcmUgbWlnaHQgYWxyZWFkeSBiZSBhbm90aGVyIGJhZ2dhZ2UgaGVhZGVyLlxuICAgICAgbmV3SGVhZGVycy5hcHBlbmQoQkFHR0FHRV9IRUFERVJfTkFNRSwgc2VudHJ5QmFnZ2FnZUhlYWRlcik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ld0hlYWRlcnMgO1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkoaGVhZGVycykpIHtcbiAgICBjb25zdCBuZXdIZWFkZXJzID0gWy4uLmhlYWRlcnMsIFsnc2VudHJ5LXRyYWNlJywgc2VudHJ5VHJhY2VIZWFkZXJdXTtcblxuICAgIGlmIChzZW50cnlCYWdnYWdlSGVhZGVyKSB7XG4gICAgICAvLyBJZiB0aGVyZSBhcmUgbXVsdGlwbGUgZW50cmllcyB3aXRoIHRoZSBzYW1lIGtleSwgdGhlIGJyb3dzZXIgd2lsbCBtZXJnZSB0aGUgdmFsdWVzIGludG8gYSBzaW5nbGUgcmVxdWVzdCBoZWFkZXIuXG4gICAgICAvLyBJdHMgdGhlcmVmb3JlIHNhZmUgdG8gc2ltcGx5IHB1c2ggYSBcImJhZ2dhZ2VcIiBlbnRyeSwgZXZlbiB0aG91Z2ggdGhlcmUgbWlnaHQgYWxyZWFkeSBiZSBhbm90aGVyIGJhZ2dhZ2UgaGVhZGVyLlxuICAgICAgbmV3SGVhZGVycy5wdXNoKFtCQUdHQUdFX0hFQURFUl9OQU1FLCBzZW50cnlCYWdnYWdlSGVhZGVyXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ld0hlYWRlcnMgO1xuICB9IGVsc2Uge1xuICAgIGNvbnN0IGV4aXN0aW5nQmFnZ2FnZUhlYWRlciA9ICdiYWdnYWdlJyBpbiBoZWFkZXJzID8gaGVhZGVycy5iYWdnYWdlIDogdW5kZWZpbmVkO1xuICAgIGNvbnN0IG5ld0JhZ2dhZ2VIZWFkZXJzID0gW107XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShleGlzdGluZ0JhZ2dhZ2VIZWFkZXIpKSB7XG4gICAgICBuZXdCYWdnYWdlSGVhZGVycy5wdXNoKC4uLmV4aXN0aW5nQmFnZ2FnZUhlYWRlcik7XG4gICAgfSBlbHNlIGlmIChleGlzdGluZ0JhZ2dhZ2VIZWFkZXIpIHtcbiAgICAgIG5ld0JhZ2dhZ2VIZWFkZXJzLnB1c2goZXhpc3RpbmdCYWdnYWdlSGVhZGVyKTtcbiAgICB9XG5cbiAgICBpZiAoc2VudHJ5QmFnZ2FnZUhlYWRlcikge1xuICAgICAgbmV3QmFnZ2FnZUhlYWRlcnMucHVzaChzZW50cnlCYWdnYWdlSGVhZGVyKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgLi4uKGhlYWRlcnMgKSxcbiAgICAgICdzZW50cnktdHJhY2UnOiBzZW50cnlUcmFjZUhlYWRlcixcbiAgICAgIGJhZ2dhZ2U6IG5ld0JhZ2dhZ2VIZWFkZXJzLmxlbmd0aCA+IDAgPyBuZXdCYWdnYWdlSGVhZGVycy5qb2luKCcsJykgOiB1bmRlZmluZWQsXG4gICAgfTtcbiAgfVxufVxuXG5mdW5jdGlvbiBnZXRGdWxsVVJMKHVybCkge1xuICB0cnkge1xuICAgIGNvbnN0IHBhcnNlZCA9IG5ldyBVUkwodXJsKTtcbiAgICByZXR1cm4gcGFyc2VkLmhyZWY7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbmZ1bmN0aW9uIGVuZFNwYW4oc3BhbiwgaGFuZGxlckRhdGEpIHtcbiAgaWYgKGhhbmRsZXJEYXRhLnJlc3BvbnNlKSB7XG4gICAgc2V0SHR0cFN0YXR1cyhzcGFuLCBoYW5kbGVyRGF0YS5yZXNwb25zZS5zdGF0dXMpO1xuXG4gICAgY29uc3QgY29udGVudExlbmd0aCA9XG4gICAgICBoYW5kbGVyRGF0YS5yZXNwb25zZSAmJiBoYW5kbGVyRGF0YS5yZXNwb25zZS5oZWFkZXJzICYmIGhhbmRsZXJEYXRhLnJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdjb250ZW50LWxlbmd0aCcpO1xuXG4gICAgaWYgKGNvbnRlbnRMZW5ndGgpIHtcbiAgICAgIGNvbnN0IGNvbnRlbnRMZW5ndGhOdW0gPSBwYXJzZUludChjb250ZW50TGVuZ3RoKTtcbiAgICAgIGlmIChjb250ZW50TGVuZ3RoTnVtID4gMCkge1xuICAgICAgICBzcGFuLnNldEF0dHJpYnV0ZSgnaHR0cC5yZXNwb25zZV9jb250ZW50X2xlbmd0aCcsIGNvbnRlbnRMZW5ndGhOdW0pO1xuICAgICAgfVxuICAgIH1cbiAgfSBlbHNlIGlmIChoYW5kbGVyRGF0YS5lcnJvcikge1xuICAgIHNwYW4uc2V0U3RhdHVzKCdpbnRlcm5hbF9lcnJvcicpO1xuICB9XG4gIHNwYW4uZW5kKCk7XG59XG5cbmV4cG9ydCB7IGFkZFRyYWNpbmdIZWFkZXJzVG9GZXRjaFJlcXVlc3QsIGluc3RydW1lbnRGZXRjaFJlcXVlc3QgfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWZldGNoLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/@sentry-internal/tracing/esm/common/fetch.js\n");

/***/ })

};
;