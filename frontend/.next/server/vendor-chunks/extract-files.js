"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/extract-files";
exports.ids = ["vendor-chunks/extract-files"];
exports.modules = {

/***/ "(ssr)/../node_modules/extract-files/public/ReactNativeFile.js":
/*!***************************************************************!*\
  !*** ../node_modules/extract-files/public/ReactNativeFile.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/**\n * Used to mark a\n * [React Native `File` substitute]{@link ReactNativeFileSubstitute}\n * in an object tree for [`extractFiles`]{@link extractFiles}. Itâ€™s too risky to\n * assume all objects with `uri`, `type` and `name` properties are files to\n * extract.\n * @kind class\n * @name ReactNativeFile\n * @param {ReactNativeFileSubstitute} file A [React Native](https://reactnative.dev) [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File) substitute.\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { ReactNativeFile } from 'extract-files';\n * ```\n *\n * ```js\n * import ReactNativeFile from 'extract-files/public/ReactNativeFile.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { ReactNativeFile } = require('extract-files');\n * ```\n *\n * ```js\n * const ReactNativeFile = require('extract-files/public/ReactNativeFile.js');\n * ```\n * @example <caption>An extractable file in [React Native](https://reactnative.dev).</caption>\n * ```js\n * const file = new ReactNativeFile({\n *   uri: uriFromCameraRoll,\n *   name: 'a.jpg',\n *   type: 'image/jpeg',\n * });\n * ```\n */\nmodule.exports = class ReactNativeFile {\n  constructor({ uri, name, type }) {\n    this.uri = uri;\n    this.name = name;\n    this.type = type;\n  }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtZmlsZXMvcHVibGljL1JlYWN0TmF0aXZlRmlsZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0Esb0NBQW9DO0FBQ3BDLDBDQUEwQyxtQkFBbUI7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDJCQUEyQjtBQUN0QztBQUNBO0FBQ0EsWUFBWSxrQkFBa0I7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLGtCQUFrQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixpQkFBaUI7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2xlZGdpdHkteWllbGQtZnJvbnRlbmQvLi4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtZmlsZXMvcHVibGljL1JlYWN0TmF0aXZlRmlsZS5qcz9jZGEwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBVc2VkIHRvIG1hcmsgYVxuICogW1JlYWN0IE5hdGl2ZSBgRmlsZWAgc3Vic3RpdHV0ZV17QGxpbmsgUmVhY3ROYXRpdmVGaWxlU3Vic3RpdHV0ZX1cbiAqIGluIGFuIG9iamVjdCB0cmVlIGZvciBbYGV4dHJhY3RGaWxlc2Bde0BsaW5rIGV4dHJhY3RGaWxlc30uIEl04oCZcyB0b28gcmlza3kgdG9cbiAqIGFzc3VtZSBhbGwgb2JqZWN0cyB3aXRoIGB1cmlgLCBgdHlwZWAgYW5kIGBuYW1lYCBwcm9wZXJ0aWVzIGFyZSBmaWxlcyB0b1xuICogZXh0cmFjdC5cbiAqIEBraW5kIGNsYXNzXG4gKiBAbmFtZSBSZWFjdE5hdGl2ZUZpbGVcbiAqIEBwYXJhbSB7UmVhY3ROYXRpdmVGaWxlU3Vic3RpdHV0ZX0gZmlsZSBBIFtSZWFjdCBOYXRpdmVdKGh0dHBzOi8vcmVhY3RuYXRpdmUuZGV2KSBbYEZpbGVgXShodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9BUEkvRmlsZSkgc3Vic3RpdHV0ZS5cbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYGltcG9ydGAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGltcG9ydCB7IFJlYWN0TmF0aXZlRmlsZSB9IGZyb20gJ2V4dHJhY3QtZmlsZXMnO1xuICogYGBgXG4gKlxuICogYGBganNcbiAqIGltcG9ydCBSZWFjdE5hdGl2ZUZpbGUgZnJvbSAnZXh0cmFjdC1maWxlcy9wdWJsaWMvUmVhY3ROYXRpdmVGaWxlLmpzJztcbiAqIGBgYFxuICogQGV4YW1wbGUgPGNhcHRpb24+V2F5cyB0byBgcmVxdWlyZWAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGNvbnN0IHsgUmVhY3ROYXRpdmVGaWxlIH0gPSByZXF1aXJlKCdleHRyYWN0LWZpbGVzJyk7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgUmVhY3ROYXRpdmVGaWxlID0gcmVxdWlyZSgnZXh0cmFjdC1maWxlcy9wdWJsaWMvUmVhY3ROYXRpdmVGaWxlLmpzJyk7XG4gKiBgYGBcbiAqIEBleGFtcGxlIDxjYXB0aW9uPkFuIGV4dHJhY3RhYmxlIGZpbGUgaW4gW1JlYWN0IE5hdGl2ZV0oaHR0cHM6Ly9yZWFjdG5hdGl2ZS5kZXYpLjwvY2FwdGlvbj5cbiAqIGBgYGpzXG4gKiBjb25zdCBmaWxlID0gbmV3IFJlYWN0TmF0aXZlRmlsZSh7XG4gKiAgIHVyaTogdXJpRnJvbUNhbWVyYVJvbGwsXG4gKiAgIG5hbWU6ICdhLmpwZycsXG4gKiAgIHR5cGU6ICdpbWFnZS9qcGVnJyxcbiAqIH0pO1xuICogYGBgXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gY2xhc3MgUmVhY3ROYXRpdmVGaWxlIHtcbiAgY29uc3RydWN0b3IoeyB1cmksIG5hbWUsIHR5cGUgfSkge1xuICAgIHRoaXMudXJpID0gdXJpO1xuICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgdGhpcy50eXBlID0gdHlwZTtcbiAgfVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/extract-files/public/ReactNativeFile.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/extract-files/public/extractFiles.js":
/*!************************************************************!*\
  !*** ../node_modules/extract-files/public/extractFiles.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst defaultIsExtractableFile = __webpack_require__(/*! ./isExtractableFile.js */ \"(ssr)/../node_modules/extract-files/public/isExtractableFile.js\");\n\n/**\n * Clones a value, recursively extracting\n * [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File),\n * [`Blob`](https://developer.mozilla.org/en-US/docs/Web/API/Blob) and\n * [`ReactNativeFile`]{@link ReactNativeFile} instances with their\n * [object paths]{@link ObjectPath}, replacing them with `null`.\n * [`FileList`](https://developer.mozilla.org/en-US/docs/Web/API/Filelist) instances\n * are treated as [`File`](https://developer.mozilla.org/en-US/docs/Web/API/File)\n * instance arrays.\n * @kind function\n * @name extractFiles\n * @param {*} value Value (typically an object tree) to extract files from.\n * @param {ObjectPath} [path=''] Prefix for object paths for extracted files.\n * @param {ExtractableFileMatcher} [isExtractableFile=isExtractableFile] The function used to identify extractable files.\n * @returns {ExtractFilesResult} Result.\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { extractFiles } from 'extract-files';\n * ```\n *\n * ```js\n * import extractFiles from 'extract-files/public/extractFiles.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { extractFiles } = require('extract-files');\n * ```\n *\n * ```js\n * const extractFiles = require('extract-files/public/extractFiles.js');\n * ```\n * @example <caption>Extract files from an object.</caption>\n * For the following:\n *\n * ```js\n * const file1 = new File(['1'], '1.txt', { type: 'text/plain' });\n * const file2 = new File(['2'], '2.txt', { type: 'text/plain' });\n * const value = {\n *   a: file1,\n *   b: [file1, file2],\n * };\n *\n * const { clone, files } = extractFiles(value, 'prefix');\n * ```\n *\n * `value` remains the same.\n *\n * `clone` is:\n *\n * ```json\n * {\n *   \"a\": null,\n *   \"b\": [null, null]\n * }\n * ```\n *\n * `files` is a [`Map`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map) instance containing:\n *\n * | Key     | Value                        |\n * | :------ | :--------------------------- |\n * | `file1` | `['prefix.a', 'prefix.b.0']` |\n * | `file2` | `['prefix.b.1']`             |\n */\nmodule.exports = function extractFiles(\n  value,\n  path = '',\n  isExtractableFile = defaultIsExtractableFile\n) {\n  // Map of extracted files and their object paths within the input value.\n  const files = new Map();\n\n  // Map of arrays and objects recursed within the input value and their clones,\n  // for reusing clones of values that are referenced multiple times within the\n  // input value.\n  const clones = new Map();\n\n  /**\n   * Recursively clones the value, extracting files.\n   * @kind function\n   * @name extractFiles~recurse\n   * @param {*} value Value to extract files from.\n   * @param {ObjectPath} path Prefix for object paths for extracted files.\n   * @param {Set} recursed Recursed arrays and objects for avoiding infinite recursion of circular references within the input value.\n   * @returns {*} Clone of the value with files replaced with `null`.\n   * @ignore\n   */\n  function recurse(value, path, recursed) {\n    let clone = value;\n\n    if (isExtractableFile(value)) {\n      clone = null;\n\n      const filePaths = files.get(value);\n\n      filePaths ? filePaths.push(path) : files.set(value, [path]);\n    } else {\n      const isList =\n        Array.isArray(value) ||\n        (typeof FileList !== 'undefined' && value instanceof FileList);\n      const isObject = value && value.constructor === Object;\n\n      if (isList || isObject) {\n        const hasClone = clones.has(value);\n\n        if (hasClone) clone = clones.get(value);\n        else {\n          clone = isList ? [] : {};\n\n          clones.set(value, clone);\n        }\n\n        if (!recursed.has(value)) {\n          const pathPrefix = path ? `${path}.` : '';\n          const recursedDeeper = new Set(recursed).add(value);\n\n          if (isList) {\n            let index = 0;\n\n            for (const item of value) {\n              const itemClone = recurse(\n                item,\n                pathPrefix + index++,\n                recursedDeeper\n              );\n\n              if (!hasClone) clone.push(itemClone);\n            }\n          } else\n            for (const key in value) {\n              const propertyClone = recurse(\n                value[key],\n                pathPrefix + key,\n                recursedDeeper\n              );\n\n              if (!hasClone) clone[key] = propertyClone;\n            }\n        }\n      }\n    }\n\n    return clone;\n  }\n\n  return {\n    clone: recurse(value, path, new Set()),\n    files,\n  };\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtZmlsZXMvcHVibGljL2V4dHJhY3RGaWxlcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQ0FBaUMsbUJBQU8sQ0FBQywrRkFBd0I7O0FBRWpFO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHVCQUF1QjtBQUM5QyxrQkFBa0IsaUJBQWlCO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLEdBQUc7QUFDZCxXQUFXLFlBQVk7QUFDdkIsV0FBVyx3QkFBd0I7QUFDbkMsYUFBYSxvQkFBb0I7QUFDakM7QUFDQTtBQUNBLFlBQVksZUFBZTtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsb0JBQW9CO0FBQ2hFLDRDQUE0QyxvQkFBb0I7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLEdBQUc7QUFDaEIsYUFBYSxZQUFZO0FBQ3pCLGFBQWEsS0FBSztBQUNsQixlQUFlLEdBQUc7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsdUNBQXVDLEtBQUs7QUFDNUM7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLFlBQVk7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9leHRyYWN0LWZpbGVzL3B1YmxpYy9leHRyYWN0RmlsZXMuanM/YTMwOCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IGRlZmF1bHRJc0V4dHJhY3RhYmxlRmlsZSA9IHJlcXVpcmUoJy4vaXNFeHRyYWN0YWJsZUZpbGUuanMnKTtcblxuLyoqXG4gKiBDbG9uZXMgYSB2YWx1ZSwgcmVjdXJzaXZlbHkgZXh0cmFjdGluZ1xuICogW2BGaWxlYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ZpbGUpLFxuICogW2BCbG9iYF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0Jsb2IpIGFuZFxuICogW2BSZWFjdE5hdGl2ZUZpbGVgXXtAbGluayBSZWFjdE5hdGl2ZUZpbGV9IGluc3RhbmNlcyB3aXRoIHRoZWlyXG4gKiBbb2JqZWN0IHBhdGhzXXtAbGluayBPYmplY3RQYXRofSwgcmVwbGFjaW5nIHRoZW0gd2l0aCBgbnVsbGAuXG4gKiBbYEZpbGVMaXN0YF0oaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0ZpbGVsaXN0KSBpbnN0YW5jZXNcbiAqIGFyZSB0cmVhdGVkIGFzIFtgRmlsZWBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9GaWxlKVxuICogaW5zdGFuY2UgYXJyYXlzLlxuICogQGtpbmQgZnVuY3Rpb25cbiAqIEBuYW1lIGV4dHJhY3RGaWxlc1xuICogQHBhcmFtIHsqfSB2YWx1ZSBWYWx1ZSAodHlwaWNhbGx5IGFuIG9iamVjdCB0cmVlKSB0byBleHRyYWN0IGZpbGVzIGZyb20uXG4gKiBAcGFyYW0ge09iamVjdFBhdGh9IFtwYXRoPScnXSBQcmVmaXggZm9yIG9iamVjdCBwYXRocyBmb3IgZXh0cmFjdGVkIGZpbGVzLlxuICogQHBhcmFtIHtFeHRyYWN0YWJsZUZpbGVNYXRjaGVyfSBbaXNFeHRyYWN0YWJsZUZpbGU9aXNFeHRyYWN0YWJsZUZpbGVdIFRoZSBmdW5jdGlvbiB1c2VkIHRvIGlkZW50aWZ5IGV4dHJhY3RhYmxlIGZpbGVzLlxuICogQHJldHVybnMge0V4dHJhY3RGaWxlc1Jlc3VsdH0gUmVzdWx0LlxuICogQGV4YW1wbGUgPGNhcHRpb24+V2F5cyB0byBgaW1wb3J0YC48L2NhcHRpb24+XG4gKiBgYGBqc1xuICogaW1wb3J0IHsgZXh0cmFjdEZpbGVzIH0gZnJvbSAnZXh0cmFjdC1maWxlcyc7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogaW1wb3J0IGV4dHJhY3RGaWxlcyBmcm9tICdleHRyYWN0LWZpbGVzL3B1YmxpYy9leHRyYWN0RmlsZXMuanMnO1xuICogYGBgXG4gKiBAZXhhbXBsZSA8Y2FwdGlvbj5XYXlzIHRvIGByZXF1aXJlYC48L2NhcHRpb24+XG4gKiBgYGBqc1xuICogY29uc3QgeyBleHRyYWN0RmlsZXMgfSA9IHJlcXVpcmUoJ2V4dHJhY3QtZmlsZXMnKTtcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBleHRyYWN0RmlsZXMgPSByZXF1aXJlKCdleHRyYWN0LWZpbGVzL3B1YmxpYy9leHRyYWN0RmlsZXMuanMnKTtcbiAqIGBgYFxuICogQGV4YW1wbGUgPGNhcHRpb24+RXh0cmFjdCBmaWxlcyBmcm9tIGFuIG9iamVjdC48L2NhcHRpb24+XG4gKiBGb3IgdGhlIGZvbGxvd2luZzpcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgZmlsZTEgPSBuZXcgRmlsZShbJzEnXSwgJzEudHh0JywgeyB0eXBlOiAndGV4dC9wbGFpbicgfSk7XG4gKiBjb25zdCBmaWxlMiA9IG5ldyBGaWxlKFsnMiddLCAnMi50eHQnLCB7IHR5cGU6ICd0ZXh0L3BsYWluJyB9KTtcbiAqIGNvbnN0IHZhbHVlID0ge1xuICogICBhOiBmaWxlMSxcbiAqICAgYjogW2ZpbGUxLCBmaWxlMl0sXG4gKiB9O1xuICpcbiAqIGNvbnN0IHsgY2xvbmUsIGZpbGVzIH0gPSBleHRyYWN0RmlsZXModmFsdWUsICdwcmVmaXgnKTtcbiAqIGBgYFxuICpcbiAqIGB2YWx1ZWAgcmVtYWlucyB0aGUgc2FtZS5cbiAqXG4gKiBgY2xvbmVgIGlzOlxuICpcbiAqIGBgYGpzb25cbiAqIHtcbiAqICAgXCJhXCI6IG51bGwsXG4gKiAgIFwiYlwiOiBbbnVsbCwgbnVsbF1cbiAqIH1cbiAqIGBgYFxuICpcbiAqIGBmaWxlc2AgaXMgYSBbYE1hcGBdKGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL01hcCkgaW5zdGFuY2UgY29udGFpbmluZzpcbiAqXG4gKiB8IEtleSAgICAgfCBWYWx1ZSAgICAgICAgICAgICAgICAgICAgICAgIHxcbiAqIHwgOi0tLS0tLSB8IDotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gfFxuICogfCBgZmlsZTFgIHwgYFsncHJlZml4LmEnLCAncHJlZml4LmIuMCddYCB8XG4gKiB8IGBmaWxlMmAgfCBgWydwcmVmaXguYi4xJ11gICAgICAgICAgICAgIHxcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBleHRyYWN0RmlsZXMoXG4gIHZhbHVlLFxuICBwYXRoID0gJycsXG4gIGlzRXh0cmFjdGFibGVGaWxlID0gZGVmYXVsdElzRXh0cmFjdGFibGVGaWxlXG4pIHtcbiAgLy8gTWFwIG9mIGV4dHJhY3RlZCBmaWxlcyBhbmQgdGhlaXIgb2JqZWN0IHBhdGhzIHdpdGhpbiB0aGUgaW5wdXQgdmFsdWUuXG4gIGNvbnN0IGZpbGVzID0gbmV3IE1hcCgpO1xuXG4gIC8vIE1hcCBvZiBhcnJheXMgYW5kIG9iamVjdHMgcmVjdXJzZWQgd2l0aGluIHRoZSBpbnB1dCB2YWx1ZSBhbmQgdGhlaXIgY2xvbmVzLFxuICAvLyBmb3IgcmV1c2luZyBjbG9uZXMgb2YgdmFsdWVzIHRoYXQgYXJlIHJlZmVyZW5jZWQgbXVsdGlwbGUgdGltZXMgd2l0aGluIHRoZVxuICAvLyBpbnB1dCB2YWx1ZS5cbiAgY29uc3QgY2xvbmVzID0gbmV3IE1hcCgpO1xuXG4gIC8qKlxuICAgKiBSZWN1cnNpdmVseSBjbG9uZXMgdGhlIHZhbHVlLCBleHRyYWN0aW5nIGZpbGVzLlxuICAgKiBAa2luZCBmdW5jdGlvblxuICAgKiBAbmFtZSBleHRyYWN0RmlsZXN+cmVjdXJzZVxuICAgKiBAcGFyYW0geyp9IHZhbHVlIFZhbHVlIHRvIGV4dHJhY3QgZmlsZXMgZnJvbS5cbiAgICogQHBhcmFtIHtPYmplY3RQYXRofSBwYXRoIFByZWZpeCBmb3Igb2JqZWN0IHBhdGhzIGZvciBleHRyYWN0ZWQgZmlsZXMuXG4gICAqIEBwYXJhbSB7U2V0fSByZWN1cnNlZCBSZWN1cnNlZCBhcnJheXMgYW5kIG9iamVjdHMgZm9yIGF2b2lkaW5nIGluZmluaXRlIHJlY3Vyc2lvbiBvZiBjaXJjdWxhciByZWZlcmVuY2VzIHdpdGhpbiB0aGUgaW5wdXQgdmFsdWUuXG4gICAqIEByZXR1cm5zIHsqfSBDbG9uZSBvZiB0aGUgdmFsdWUgd2l0aCBmaWxlcyByZXBsYWNlZCB3aXRoIGBudWxsYC5cbiAgICogQGlnbm9yZVxuICAgKi9cbiAgZnVuY3Rpb24gcmVjdXJzZSh2YWx1ZSwgcGF0aCwgcmVjdXJzZWQpIHtcbiAgICBsZXQgY2xvbmUgPSB2YWx1ZTtcblxuICAgIGlmIChpc0V4dHJhY3RhYmxlRmlsZSh2YWx1ZSkpIHtcbiAgICAgIGNsb25lID0gbnVsbDtcblxuICAgICAgY29uc3QgZmlsZVBhdGhzID0gZmlsZXMuZ2V0KHZhbHVlKTtcblxuICAgICAgZmlsZVBhdGhzID8gZmlsZVBhdGhzLnB1c2gocGF0aCkgOiBmaWxlcy5zZXQodmFsdWUsIFtwYXRoXSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGlzTGlzdCA9XG4gICAgICAgIEFycmF5LmlzQXJyYXkodmFsdWUpIHx8XG4gICAgICAgICh0eXBlb2YgRmlsZUxpc3QgIT09ICd1bmRlZmluZWQnICYmIHZhbHVlIGluc3RhbmNlb2YgRmlsZUxpc3QpO1xuICAgICAgY29uc3QgaXNPYmplY3QgPSB2YWx1ZSAmJiB2YWx1ZS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0O1xuXG4gICAgICBpZiAoaXNMaXN0IHx8IGlzT2JqZWN0KSB7XG4gICAgICAgIGNvbnN0IGhhc0Nsb25lID0gY2xvbmVzLmhhcyh2YWx1ZSk7XG5cbiAgICAgICAgaWYgKGhhc0Nsb25lKSBjbG9uZSA9IGNsb25lcy5nZXQodmFsdWUpO1xuICAgICAgICBlbHNlIHtcbiAgICAgICAgICBjbG9uZSA9IGlzTGlzdCA/IFtdIDoge307XG5cbiAgICAgICAgICBjbG9uZXMuc2V0KHZhbHVlLCBjbG9uZSk7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoIXJlY3Vyc2VkLmhhcyh2YWx1ZSkpIHtcbiAgICAgICAgICBjb25zdCBwYXRoUHJlZml4ID0gcGF0aCA/IGAke3BhdGh9LmAgOiAnJztcbiAgICAgICAgICBjb25zdCByZWN1cnNlZERlZXBlciA9IG5ldyBTZXQocmVjdXJzZWQpLmFkZCh2YWx1ZSk7XG5cbiAgICAgICAgICBpZiAoaXNMaXN0KSB7XG4gICAgICAgICAgICBsZXQgaW5kZXggPSAwO1xuXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGl0ZW0gb2YgdmFsdWUpIHtcbiAgICAgICAgICAgICAgY29uc3QgaXRlbUNsb25lID0gcmVjdXJzZShcbiAgICAgICAgICAgICAgICBpdGVtLFxuICAgICAgICAgICAgICAgIHBhdGhQcmVmaXggKyBpbmRleCsrLFxuICAgICAgICAgICAgICAgIHJlY3Vyc2VkRGVlcGVyXG4gICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgaWYgKCFoYXNDbG9uZSkgY2xvbmUucHVzaChpdGVtQ2xvbmUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0gZWxzZVxuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gdmFsdWUpIHtcbiAgICAgICAgICAgICAgY29uc3QgcHJvcGVydHlDbG9uZSA9IHJlY3Vyc2UoXG4gICAgICAgICAgICAgICAgdmFsdWVba2V5XSxcbiAgICAgICAgICAgICAgICBwYXRoUHJlZml4ICsga2V5LFxuICAgICAgICAgICAgICAgIHJlY3Vyc2VkRGVlcGVyXG4gICAgICAgICAgICAgICk7XG5cbiAgICAgICAgICAgICAgaWYgKCFoYXNDbG9uZSkgY2xvbmVba2V5XSA9IHByb3BlcnR5Q2xvbmU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gY2xvbmU7XG4gIH1cblxuICByZXR1cm4ge1xuICAgIGNsb25lOiByZWN1cnNlKHZhbHVlLCBwYXRoLCBuZXcgU2V0KCkpLFxuICAgIGZpbGVzLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/extract-files/public/extractFiles.js\n");

/***/ }),

/***/ "(ssr)/../node_modules/extract-files/public/isExtractableFile.js":
/*!*****************************************************************!*\
  !*** ../node_modules/extract-files/public/isExtractableFile.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nconst ReactNativeFile = __webpack_require__(/*! ./ReactNativeFile.js */ \"(ssr)/../node_modules/extract-files/public/ReactNativeFile.js\");\n\n/**\n * Checks if a value is an [extractable file]{@link ExtractableFile}.\n * @kind function\n * @name isExtractableFile\n * @type {ExtractableFileMatcher}\n * @param {*} value Value to check.\n * @returns {boolean} Is the value an [extractable file]{@link ExtractableFile}.\n * @example <caption>Ways to `import`.</caption>\n * ```js\n * import { isExtractableFile } from 'extract-files';\n * ```\n *\n * ```js\n * import isExtractableFile from 'extract-files/public/isExtractableFile.js';\n * ```\n * @example <caption>Ways to `require`.</caption>\n * ```js\n * const { isExtractableFile } = require('extract-files');\n * ```\n *\n * ```js\n * const isExtractableFile = require('extract-files/public/isExtractableFile.js');\n * ```\n */\nmodule.exports = function isExtractableFile(value) {\n  return (\n    (typeof File !== 'undefined' && value instanceof File) ||\n    (typeof Blob !== 'undefined' && value instanceof Blob) ||\n    value instanceof ReactNativeFile\n  );\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vbm9kZV9tb2R1bGVzL2V4dHJhY3QtZmlsZXMvcHVibGljL2lzRXh0cmFjdGFibGVGaWxlLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHdCQUF3QixtQkFBTyxDQUFDLDJGQUFzQjs7QUFFdEQ7QUFDQSw4Q0FBOEMsc0JBQXNCO0FBQ3BFO0FBQ0E7QUFDQSxVQUFVO0FBQ1YsV0FBVyxHQUFHO0FBQ2QsYUFBYSxTQUFTLG1DQUFtQyxzQkFBc0I7QUFDL0U7QUFDQTtBQUNBLFlBQVksb0JBQW9CO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvQkFBb0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZWRnaXR5LXlpZWxkLWZyb250ZW5kLy4uL25vZGVfbW9kdWxlcy9leHRyYWN0LWZpbGVzL3B1YmxpYy9pc0V4dHJhY3RhYmxlRmlsZS5qcz8xNGYwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgUmVhY3ROYXRpdmVGaWxlID0gcmVxdWlyZSgnLi9SZWFjdE5hdGl2ZUZpbGUuanMnKTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYSB2YWx1ZSBpcyBhbiBbZXh0cmFjdGFibGUgZmlsZV17QGxpbmsgRXh0cmFjdGFibGVGaWxlfS5cbiAqIEBraW5kIGZ1bmN0aW9uXG4gKiBAbmFtZSBpc0V4dHJhY3RhYmxlRmlsZVxuICogQHR5cGUge0V4dHJhY3RhYmxlRmlsZU1hdGNoZXJ9XG4gKiBAcGFyYW0geyp9IHZhbHVlIFZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IElzIHRoZSB2YWx1ZSBhbiBbZXh0cmFjdGFibGUgZmlsZV17QGxpbmsgRXh0cmFjdGFibGVGaWxlfS5cbiAqIEBleGFtcGxlIDxjYXB0aW9uPldheXMgdG8gYGltcG9ydGAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGltcG9ydCB7IGlzRXh0cmFjdGFibGVGaWxlIH0gZnJvbSAnZXh0cmFjdC1maWxlcyc7XG4gKiBgYGBcbiAqXG4gKiBgYGBqc1xuICogaW1wb3J0IGlzRXh0cmFjdGFibGVGaWxlIGZyb20gJ2V4dHJhY3QtZmlsZXMvcHVibGljL2lzRXh0cmFjdGFibGVGaWxlLmpzJztcbiAqIGBgYFxuICogQGV4YW1wbGUgPGNhcHRpb24+V2F5cyB0byBgcmVxdWlyZWAuPC9jYXB0aW9uPlxuICogYGBganNcbiAqIGNvbnN0IHsgaXNFeHRyYWN0YWJsZUZpbGUgfSA9IHJlcXVpcmUoJ2V4dHJhY3QtZmlsZXMnKTtcbiAqIGBgYFxuICpcbiAqIGBgYGpzXG4gKiBjb25zdCBpc0V4dHJhY3RhYmxlRmlsZSA9IHJlcXVpcmUoJ2V4dHJhY3QtZmlsZXMvcHVibGljL2lzRXh0cmFjdGFibGVGaWxlLmpzJyk7XG4gKiBgYGBcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBpc0V4dHJhY3RhYmxlRmlsZSh2YWx1ZSkge1xuICByZXR1cm4gKFxuICAgICh0eXBlb2YgRmlsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBGaWxlKSB8fFxuICAgICh0eXBlb2YgQmxvYiAhPT0gJ3VuZGVmaW5lZCcgJiYgdmFsdWUgaW5zdGFuY2VvZiBCbG9iKSB8fFxuICAgIHZhbHVlIGluc3RhbmNlb2YgUmVhY3ROYXRpdmVGaWxlXG4gICk7XG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../node_modules/extract-files/public/isExtractableFile.js\n");

/***/ })

};
;